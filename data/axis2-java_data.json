[{"commit": "https://github.com/apache/axis2-java/commit/d756468435ce120e95561424efa75179c5bbb089", "parent": "https://github.com/apache/axis2-java/commit/7e4cfae3ab77a34ff6192ac307486b520a593bb6", "message": "Fix for AXIS2-3602 - NPE in MessageContextBuilder.createFaultEnvelope and SOAP12Constants.SOAP_FAULT_NODE_LOCAL_NAME property set in message context (prevent NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@642592 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_1", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/d756468435ce120e95561424efa75179c5bbb089/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/d756468435ce120e95561424efa75179c5bbb089/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "sha": "c4521a5366e348b72771fc56377f92557c82b566", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java?ref=d756468435ce120e95561424efa75179c5bbb089", "patch": "@@ -37,6 +37,7 @@\n import org.apache.axiom.soap.SOAPHeader;\n import org.apache.axiom.soap.SOAPHeaderBlock;\n import org.apache.axiom.soap.SOAPProcessingException;\n+import org.apache.axiom.soap.SOAPFaultNode;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n import org.apache.axis2.addressing.AddressingConstants;\n@@ -569,7 +570,10 @@ private static SOAPEnvelope createFaultEnvelope(MessageContext context, Throwabl\n \n         Object faultNode = context.getProperty(SOAP12Constants.SOAP_FAULT_NODE_LOCAL_NAME);\n         if (faultNode != null) {\n-            fault.getNode().setText((String) faultNode);\n+            SOAPFaultNode soapFaultNode = fault.getNode();\n+            if(soapFaultNode != null) {\n+                soapFaultNode.setText((String) faultNode);\n+            }\n         } else if (axisFault != null) {\n             if (axisFault.getFaultNodeElement() != null) {\n                 fault.setNode(axisFault.getFaultNodeElement());", "filename": "modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6", "parent": "https://github.com/apache/axis2-java/commit/94f71c83a0d9618e93771862ad7ff8ec7b512908", "message": "Simple NPE avoidance check\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@983407 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_2", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6/modules/kernel/src/org/apache/axis2/client/ServiceClient.java", "blob_url": "https://github.com/apache/axis2-java/blob/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6/modules/kernel/src/org/apache/axis2/client/ServiceClient.java", "sha": "9eb84cd37a9d8cc3cfc8903ed76ec99ba5f4fee1", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/client/ServiceClient.java?ref=d3bb06ce799dd867a1bdd42c36f9d36861dd52d6", "patch": "@@ -857,7 +857,10 @@ public void cleanupTransport() throws AxisFault {\n                     lastOperationContext\n                             .getMessageContext(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n             if (outMessageContext != null) {\n-                outMessageContext.getTransportOut().getSender().cleanup(outMessageContext);\n+                if (outMessageContext.getTransportOut() != null &&\n+                        outMessageContext.getTransportOut().getSender() != null) {\n+                    outMessageContext.getTransportOut().getSender().cleanup(outMessageContext);\n+                }\n             }\n         }\n     }", "filename": "modules/kernel/src/org/apache/axis2/client/ServiceClient.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/76831e0a5c6250b85eeb888c7bad336b8029eacf", "parent": "https://github.com/apache/axis2-java/commit/7c78199888b11e644600096dfd5d6071402aa3cf", "message": "Change to AddressingValidationHandler to remove potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@686051 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_3", "file": [{"additions": 13, "raw_url": "https://github.com/apache/axis2-java/raw/76831e0a5c6250b85eeb888c7bad336b8029eacf/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/76831e0a5c6250b85eeb888c7bad336b8029eacf/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java", "sha": "8b624cd9442fc2ba0d8774b8cd828f404878c772", "changes": 23, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java?ref=76831e0a5c6250b85eeb888c7bad336b8029eacf", "patch": "@@ -148,16 +148,19 @@ private void checkMessageIDHeader(MessageContext msgContext) throws AxisFault {\n         }\n \n         AxisOperation axisOperation = msgContext.getAxisOperation();\n-        String mep = axisOperation.getMessageExchangePattern();\n-        int mepConstant = Utils.getAxisSpecifMEPConstant(mep);\n-\n-        if (mepConstant == WSDLConstants.MEP_CONSTANT_IN_OUT ||\n-                mepConstant == WSDLConstants.MEP_CONSTANT_IN_OPTIONAL_OUT ||\n-                mepConstant == WSDLConstants.MEP_CONSTANT_ROBUST_IN_ONLY) {\n-            String messageId = msgContext.getOptions().getMessageId();\n-            if (messageId == null || \"\".equals(messageId)) {\n-                AddressingFaultsHelper\n-                        .triggerMessageAddressingRequiredFault(msgContext, WSA_MESSAGE_ID);\n+        \n+        if (axisOperation != null) {\n+            String mep = axisOperation.getMessageExchangePattern();\n+            int mepConstant = Utils.getAxisSpecifMEPConstant(mep);\n+            \n+            if (mepConstant == WSDLConstants.MEP_CONSTANT_IN_OUT ||\n+                    mepConstant == WSDLConstants.MEP_CONSTANT_IN_OPTIONAL_OUT ||\n+                    mepConstant == WSDLConstants.MEP_CONSTANT_ROBUST_IN_ONLY) {\n+                String messageId = msgContext.getOptions().getMessageId();\n+                if (messageId == null || \"\".equals(messageId)) {\n+                    AddressingFaultsHelper\n+                    .triggerMessageAddressingRequiredFault(msgContext, WSA_MESSAGE_ID);\n+                }\n             }\n         }\n     }", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/bb33c5c0615a0bb7f250561a021cee2e2378592d", "parent": "https://github.com/apache/axis2-java/commit/474f579e7b939f2b6ed16e63557aabcc3c47fc92", "message": "Prevent NPE - contribution from Louis A. Amodeo\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@653919 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_4", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/bb33c5c0615a0bb7f250561a021cee2e2378592d/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java", "blob_url": "https://github.com/apache/axis2-java/blob/bb33c5c0615a0bb7f250561a021cee2e2378592d/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java", "sha": "d6d7165207eafda03253fff2762a3f506ce0bcd7", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java?ref=bb33c5c0615a0bb7f250561a021cee2e2378592d", "patch": "@@ -1005,7 +1005,9 @@ protected String getParameterName(Annotation[][] parameterAnnotation,\n             }\n         }\n         if (parameterName == null || \"\".equals(parameterName)) {\n-            parameterName = parameterNames[j];\n+            if(parameterNames != null && parameterNames.length > j) {\n+                parameterName = parameterNames[j];\n+            }\n             if (parameterName == null || \"\".equals(parameterName)) {\n                 parameterName = \"args\" + j;\n             }", "filename": "modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/fbde87551e4ee516e506f0b5d871cff95dda98d7", "parent": "https://github.com/apache/axis2-java/commit/199da53faaef36c65a98070e20ec7de8d6608131", "message": "try getName as getCanonicalName causes an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@648745 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/fbde87551e4ee516e506f0b5d871cff95dda98d7/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java", "blob_url": "https://github.com/apache/axis2-java/blob/fbde87551e4ee516e506f0b5d871cff95dda98d7/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java", "sha": "5f82bb323830fbe624a0ab7e4f9c7d5f44707b0f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java?ref=fbde87551e4ee516e506f0b5d871cff95dda98d7", "patch": "@@ -5,7 +5,7 @@ public static Class getFactory(Class clazz)  {\n         Class[] declaredClasse = clazz.getDeclaredClasses();\r\n         for (int i = 0; i < declaredClasse.length; i++) {\r\n             Class aClass = declaredClasse[i];\r\n-            if(aClass != null && aClass.getCanonicalName().endsWith(\"Factory\")){\r\n+            if(aClass != null && aClass.getName().endsWith(\"Factory\")){\r\n                 return aClass;\r\n             }\r\n         }\r", "filename": "modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/0d8fa29247dc9f495e79b9fb931e09c8c411205c", "parent": "https://github.com/apache/axis2-java/commit/69d3bdd0cd6e19dde05b2c76bcfc63f69de172c5", "message": "fix build break - NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@648386 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_6", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/0d8fa29247dc9f495e79b9fb931e09c8c411205c/modules/jaxws/src/org/apache/axis2/datasource/jaxb/JAXBAttachmentMarshaller.java", "blob_url": "https://github.com/apache/axis2-java/blob/0d8fa29247dc9f495e79b9fb931e09c8c411205c/modules/jaxws/src/org/apache/axis2/datasource/jaxb/JAXBAttachmentMarshaller.java", "sha": "7e05749baeb9a5919ca891f6cdb4741c9b17a1d4", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/datasource/jaxb/JAXBAttachmentMarshaller.java?ref=0d8fa29247dc9f495e79b9fb931e09c8c411205c", "patch": "@@ -120,9 +120,12 @@ public String addMtomAttachment(byte[] data, int offset, int length,\n                 //Create a data source for the MIME Body Part\r\n                 MimePartDataSource mpds = new MimePartDataSource(mbp);\r\n                 long dataLength =data.length;\r\n-                Integer value = (Integer)msgContext.getProperty(Constants.Configuration.MTOM_THRESHOLD);\r\n-                int optimizedThreshold = (value!=null)?value.intValue():0;\r\n-                \r\n+                Integer value = null;\r\n+                if (msgContext != null) {\r\n+                    value = (Integer) msgContext.getProperty(Constants.Configuration.MTOM_THRESHOLD);\r\n+                }\r\n+                int optimizedThreshold = (value != null) ? value.intValue() : 0;\r\n+\r\n                 if(optimizedThreshold==0 || dataLength > optimizedThreshold){\r\n                 \tDataHandler dataHandler = new DataHandler(mpds);\r\n                 \tcid = addDataHandler(dataHandler);\r", "filename": "modules/jaxws/src/org/apache/axis2/datasource/jaxb/JAXBAttachmentMarshaller.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/bfd84879a8fa1dc237694d94fe6a1ef45b6f96a8", "parent": "https://github.com/apache/axis2-java/commit/cc1b226b630c855164f0c2a2957f35968d2abe3f", "message": "fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@639863 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_7", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/bfd84879a8fa1dc237694d94fe6a1ef45b6f96a8/modules/jaxws/src/org/apache/axis2/jaxws/framework/JAXWSDeployer.java", "blob_url": "https://github.com/apache/axis2-java/blob/bfd84879a8fa1dc237694d94fe6a1ef45b6f96a8/modules/jaxws/src/org/apache/axis2/jaxws/framework/JAXWSDeployer.java", "sha": "b678876058e19ebcf4092ef5a5be257194965622", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/framework/JAXWSDeployer.java?ref=bfd84879a8fa1dc237694d94fe6a1ef45b6f96a8", "patch": "@@ -84,14 +84,15 @@ protected void deployServicesInWARClassPath() {\n         String dir = DeploymentEngine.getWebLocationString();\r\n         if (dir != null) {\r\n             File file = new File(dir + \"/WEB-INF/classes/\");\r\n-            if (!file.isDirectory())\r\n+            URL repository = axisConfig.getRepository();\r\n+            if (!file.isDirectory() || repository == null)\r\n                 return;\r\n             ArrayList classList = getClassesInWebInfDirectory(file);\r\n             ClassLoader threadClassLoader = null;\r\n             try {\r\n                 threadClassLoader = Thread.currentThread().getContextClassLoader();\r\n                 ArrayList urls = new ArrayList();\r\n-                urls.add(axisConfig.getRepository());\r\n+                urls.add(repository);\r\n                 String webLocation = DeploymentEngine.getWebLocationString();\r\n                 if (webLocation != null) {\r\n                     urls.add(new File(webLocation).toURL());\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/framework/JAXWSDeployer.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/be8ec2f215b2ef3846c5e3e1bb0b8f86d6e57286", "parent": "https://github.com/apache/axis2-java/commit/081103ada2f591e2be02e0ce6dc9f7f353e81237", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@639348 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_8", "file": [{"additions": 12, "raw_url": "https://github.com/apache/axis2-java/raw/be8ec2f215b2ef3846c5e3e1bb0b8f86d6e57286/modules/jaxws/src/org/apache/axis2/jaxws/server/EndpointController.java", "blob_url": "https://github.com/apache/axis2-java/blob/be8ec2f215b2ef3846c5e3e1bb0b8f86d6e57286/modules/jaxws/src/org/apache/axis2/jaxws/server/EndpointController.java", "sha": "19cbe2bc1e561cd55baf133ced75d60ca7fd533f", "changes": 21, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/server/EndpointController.java?ref=be8ec2f215b2ef3846c5e3e1bb0b8f86d6e57286", "patch": "@@ -320,15 +320,18 @@ protected boolean handleResponse(EndpointInvocationContext eic) {\n         } finally {\n         \t// at this point, we are done with handler instances on the server; call @PreDestroy on all of them\n             HandlerLifecycleManager hlm = createHandlerlifecycleManager();\n-            for (Iterator it = eic.getHandlers().iterator(); it.hasNext();) {\n-\t\t\t\ttry {\n-\t\t\t\t\tHandler handler = (Handler) it.next();\n-\t\t\t\t\thlm.destroyHandlerInstance(request, handler);\n-\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t// TODO: can we ignore this?\n-\t\t\t\t\tthrow ExceptionFactory.makeWebServiceException(e);\n-\t\t\t\t}\n-\t\t\t}\n+            List<Handler> list = eic.getHandlers();\n+            if(list != null) {\n+                for (Iterator it = list.iterator(); it.hasNext();) {\n+                    try {\n+                        Handler handler = (Handler) it.next();\n+                        hlm.destroyHandlerInstance(request, handler);\n+                    } catch (Exception e) {\n+                        // TODO: can we ignore this?\n+                        throw ExceptionFactory.makeWebServiceException(e);\n+                    }\n+                }\n+            }\n             responseReady(eic);\n             restoreRequestMessage(request);\n         }", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/server/EndpointController.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/81983bf13d0286011fec201fb191181dd3bd3f82", "parent": "https://github.com/apache/axis2-java/commit/b34602e90af14e64353d613059d6169bd3ca027a", "message": "Fix for AXIS2-3532 - NPE in HttpCoreNIOSender\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@638500 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_9", "file": [{"additions": 26, "raw_url": "https://github.com/apache/axis2-java/raw/81983bf13d0286011fec201fb191181dd3bd3f82/modules/kernel/src/org/apache/axis2/transport/nhttp/HttpCoreNIOSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/81983bf13d0286011fec201fb191181dd3bd3f82/modules/kernel/src/org/apache/axis2/transport/nhttp/HttpCoreNIOSender.java", "sha": "a31e300c76365572c350333e0449e99dae6fbd80", "changes": 38, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/nhttp/HttpCoreNIOSender.java?ref=81983bf13d0286011fec201fb191181dd3bd3f82", "patch": "@@ -408,18 +408,23 @@ public void completed(SessionRequest request) {\n             }\n \n             public void failed(SessionRequest request) {\n-                handleError(request);\n+                handleError(request, false);\n             }\n \n             public void timeout(SessionRequest request) {\n-                handleError(request);\n+                // In a timeout occurs the exception field is not updated\n+            \t// This means that it will be null (see SessionRequestImpl.timeout())\n+            \thandleError(request, true);\n+            \trequest.cancel();\n             }\n+            \n+           \n \n             public void cancelled(SessionRequest sessionRequest) {\n \n             }\n \n-            private void handleError(SessionRequest request) {\n+            private final void handleError(SessionRequest request, boolean isTimeout) {\n                 if (request.getAttachment() != null &&\n                     request.getAttachment() instanceof Axis2HttpRequest) {\n \n@@ -431,15 +436,24 @@ private void handleError(SessionRequest request) {\n                         // this fault is NOT caused by the endpoint while processing. so we have to\n                         // inform that this is a sending error (e.g. endpoint failure) and handle it\n                         // differently at the message receiver.\n-\n-                        Exception exception = request.getException();\n-                        MessageContext nioFaultMessageContext =\n-                            MessageContextBuilder.createFaultMessageContext(\n-                                /** this is not a mistake I do NOT want getMessage()*/\n-                                mc, new AxisFault(exception.toString(), exception));\n-                        nioFaultMessageContext.setProperty(NhttpConstants.SENDING_FAULT, Boolean.TRUE);\n-                        mr.receive(nioFaultMessageContext);\n-                        \n+                    \tAxisFault axisFault;\n+                    \tif (isTimeout) {\n+                    \t\t// In case of a timeout there is no exception\n+                    \t\taxisFault = new AxisFault(\"The connection timed out\");\n+                    \t} else {\n+                    \t\tException exception = request.getException();\n+                    \t\taxisFault = new AxisFault(exception.toString(), exception);\n+                    \t}\n+                    \t\n+                    \tif (mr == null) {\n+                    \t\t// FIXME: the message receiver is null if the MEP is out-only\n+                    \t\tlog.error(axisFault.getMessage());\n+                    \t} else {\n+                    \t\tMessageContext nioFaultMessageContext =\n+                    \t\t\tMessageContextBuilder.createFaultMessageContext(mc, axisFault);\n+                        \tnioFaultMessageContext.setProperty(NhttpConstants.SENDING_FAULT, Boolean.TRUE);\n+                        \tmr.receive(nioFaultMessageContext);\n+                    \t}\n                     } catch (AxisFault af) {\n                         log.error(\"Unable to report back failure to the message receiver\", af);\n                     }", "filename": "modules/kernel/src/org/apache/axis2/transport/nhttp/HttpCoreNIOSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/eb7d42a84b1333ca0bf88f836da6026d005d6390", "parent": "https://github.com/apache/axis2-java/commit/15ef71da8383706915b41fcda6d1c3665e2d68f7", "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@638402 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/eb7d42a84b1333ca0bf88f836da6026d005d6390/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/eb7d42a84b1333ca0bf88f836da6026d005d6390/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "sha": "a04e51f80f8a070cf12a113f819871d93fec8cd6", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java?ref=eb7d42a84b1333ca0bf88f836da6026d005d6390", "patch": "@@ -766,7 +766,7 @@ private void cleanupTemp() {\n     private void deleteTempFiles(File dir) {\n         if (dir.isDirectory()) {\n             String[] children = dir.list();\n-            for (int i = 0; i < children.length; i++) {\n+            for (int i = 0; children != null && i < children.length; i++) {\n                 deleteTempFiles(new File(dir, children[i]));\n             }\n         }", "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/55823247bdc3d44f2fea68c1c3fe117b1b63d725", "parent": "https://github.com/apache/axis2-java/commit/1d7401f8d541a1f07cce30782b021b9188ae70ca", "message": "Quick Fix for HandlerUtils NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@636965 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/55823247bdc3d44f2fea68c1c3fe117b1b63d725/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/55823247bdc3d44f2fea68c1c3fe117b1b63d725/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerUtils.java", "sha": "7915e11d3cc9a8188137877a4eef05c715def66d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerUtils.java?ref=55823247bdc3d44f2fea68c1c3fe117b1b63d725", "patch": "@@ -102,7 +102,7 @@ public static void checkMustUnderstand(MessageContext msgContext, List<QName> un\n         }\r\n  \r\n         List<QName> unprocessed = (List)msgContext.getProperty(Constants.UNPROCESSED_HEADER_QNAMES);\r\n-        if(unprocessed == null && unprocessed.size()>0){\r\n+        if(unprocessed == null || unprocessed.size() == 0){\r\n             if(log.isDebugEnabled()){\r\n                 log.debug(\"UNPROCESSED_HEADER_QNAMES not found.\");\r\n             }\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/b1cdb8347a8bc002bff28fb532e72e03b30f8f01", "parent": "https://github.com/apache/axis2-java/commit/dcda789fb330c1e6052cb64257857d2a5116e38a", "message": "Fix for AXIS2-3541 - Potential NPE in XMPPPacketListener\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@633124 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/b1cdb8347a8bc002bff28fb532e72e03b30f8f01/modules/kernel/src/org/apache/axis2/transport/xmpp/util/XMPPPacketListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/b1cdb8347a8bc002bff28fb532e72e03b30f8f01/modules/kernel/src/org/apache/axis2/transport/xmpp/util/XMPPPacketListener.java", "sha": "a0eb19ab361559cfc27fb5bd1410b0da04f60f40", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/xmpp/util/XMPPPacketListener.java?ref=b1cdb8347a8bc002bff28fb532e72e03b30f8f01", "patch": "@@ -191,7 +191,7 @@ public void run() {\n \t\t\t\t}\n \t\t\t} catch (AxisFault e) {\n \t\t\t\tlog.error(\"Error occurred while sending message\"+e);\n-   \t\t\t\tif (msgCtx.isServerSide()) {\n+   \t\t\t\tif (msgCtx != null && msgCtx.isServerSide()) {\n     \t\t\t\tMessageContext faultContext;\n \t\t\t\t\ttry {\n \t\t\t\t\t\tfaultContext = MessageContextBuilder.createFaultMessageContext(msgCtx, e);", "filename": "modules/kernel/src/org/apache/axis2/transport/xmpp/util/XMPPPacketListener.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/dcda789fb330c1e6052cb64257857d2a5116e38a", "parent": "https://github.com/apache/axis2-java/commit/6b2bdacaa505c952f6bd1c7c06d669e17977b2fd", "message": "Fix for AXIS2-3542 - Possible NPE in XMLUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@633123 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_13", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/dcda789fb330c1e6052cb64257857d2a5116e38a/modules/kernel/src/org/apache/axis2/util/XMLUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/dcda789fb330c1e6052cb64257857d2a5116e38a/modules/kernel/src/org/apache/axis2/util/XMLUtils.java", "sha": "fc856f07061e0f6896ad8cc2b451ad4baee7a278", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/XMLUtils.java?ref=dcda789fb330c1e6052cb64257857d2a5116e38a", "patch": "@@ -114,8 +114,7 @@ public static void initSAXFactory(String factoryClassName,\n                                        factoryClassName);\n                 }\n             } catch (Exception e) {\n-                //log.error(Messages.getMessage(\"exception00\"), e);\n-                saxFactory = null;\n+                saxFactory = SAXParserFactory.newInstance();\n             }\n         } else {\n             saxFactory = SAXParserFactory.newInstance();", "filename": "modules/kernel/src/org/apache/axis2/util/XMLUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/81e313be1fe7ebe168b8fcb0ca7cbfba231be148", "parent": "https://github.com/apache/axis2-java/commit/c7c65a2eaacff89d742ba11564dd543380cb5c16", "message": "Fix for AXIS2-3533 - NPE bug in ServerWorker.handlerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@631646 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_14", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/81e313be1fe7ebe168b8fcb0ca7cbfba231be148/modules/kernel/src/org/apache/axis2/transport/nhttp/ServerWorker.java", "blob_url": "https://github.com/apache/axis2-java/blob/81e313be1fe7ebe168b8fcb0ca7cbfba231be148/modules/kernel/src/org/apache/axis2/transport/nhttp/ServerWorker.java", "sha": "94a1d65b3b6d8d9642752f7e2269f1a593a17291", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/nhttp/ServerWorker.java?ref=81e313be1fe7ebe168b8fcb0ca7cbfba231be148", "patch": "@@ -439,7 +439,10 @@ private void handleException(String msg, Exception e) {\n             try {\n                 os.write(msg.getBytes());\n                 if (ex != null) {\n-                    os.write(ex.getMessage().getBytes());\n+                    String msg2 = ex.getMessage();\n+                    if(msg2 != null) {\n+                        os.write(msg2.getBytes());\n+                    }\n                 }\n             } catch (IOException ignore) {}\n ", "filename": "modules/kernel/src/org/apache/axis2/transport/nhttp/ServerWorker.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/29638644f819ce39f3987dff9cbde8e0e315026f", "parent": "https://github.com/apache/axis2-java/commit/a418f55079ac8293456fa97fa191ce6868308589", "message": "Fix for AXIS2-3531 - NPE in AxisConfiguration\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@630297 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/29638644f819ce39f3987dff9cbde8e0e315026f/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java", "blob_url": "https://github.com/apache/axis2-java/blob/29638644f819ce39f3987dff9cbde8e0e315026f/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java", "sha": "9f1443a6ecd251ba754c5c09420e0c0b685c5f21", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java?ref=29638644f819ce39f3987dff9cbde8e0e315026f", "patch": "@@ -675,7 +675,7 @@ public AxisModule getModule(String name) {\n      * @return The AxisModule having name=moduleName & version=moduleVersion\n      */\n     public AxisModule getModule(String moduleName, String moduleVersion) {\n-        if (moduleVersion == null && moduleVersion.trim().length() == 0) {\n+        if (moduleVersion == null || moduleVersion.trim().length() == 0) {\n             moduleVersion = getDefaultModuleVersion(moduleName);\n         }\n         return (AxisModule) allModules.get(Utils.getModuleName(moduleName, moduleVersion));", "filename": "modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a994b28389b39792b9e82fd374f81cabeab6991e", "parent": "https://github.com/apache/axis2-java/commit/4a0873f8e449a1c34dbc01a603d6bde134a67045", "message": "Potential NPE when processing fault msgs\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@576414 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_16", "file": [{"additions": 13, "raw_url": "https://github.com/apache/axis2-java/raw/a994b28389b39792b9e82fd374f81cabeab6991e/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/a994b28389b39792b9e82fd374f81cabeab6991e/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "sha": "cc5a174b7fff379c96bb26e7838842e162b8fdc8", "changes": 20, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java?ref=a994b28389b39792b9e82fd374f81cabeab6991e", "patch": "@@ -158,13 +158,19 @@ public static InvocationResponse receive(MessageContext msgContext) throws AxisF\n                                 \"The incoming MessageContext is removed, \" +\n                                 \"and the OperationContext is marked as incomplete\");\n                 }\n-                String mepURI  = msgContext.getAxisOperation().getMessageExchangePattern();\n-                if (WSDL2Constants.MEP_URI_OUT_IN.equals(mepURI)) {\n-                    OperationContext opCtx = msgContext.getOperationContext();\n-                    if (opCtx != null) {\n-                        opCtx.removeMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-                    }\n-                }\n+\t\t\t\tAxisOperation axisOp = msgContext.getAxisOperation();\n+                if(axisOp!=null){\n+\t\t\t\t\tString mepURI  = axisOp.getMessageExchangePattern();\n+\t\t\t\t\tif (WSDL2Constants.MEP_URI_OUT_IN.equals(mepURI)) {\n+\t\t\t\t\t\tOperationContext opCtx = msgContext.getOperationContext();\n+\t\t\t\t\t\tif (opCtx != null) {\n+\t\t\t\t\t\t\topCtx.removeMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\telse{\n+\t\t\t\t\tlog.debug(\"Could not clean up op ctx for \" + msgContext);\n+\t\t\t\t}\n                 return pi;\n             } else {\n                 String errorMsg =", "filename": "modules/kernel/src/org/apache/axis2/engine/AxisEngine.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9cf0dfa7b14e98934e0be2e97aea1e5f90ad25c1", "parent": "https://github.com/apache/axis2-java/commit/be28633de628865dbfc15e179f7c7e79fec2d063", "message": "oops NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@564548 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_17", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/9cf0dfa7b14e98934e0be2e97aea1e5f90ad25c1/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java", "blob_url": "https://github.com/apache/axis2-java/blob/9cf0dfa7b14e98934e0be2e97aea1e5f90ad25c1/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java", "sha": "2118f140296df344e0fbcd389cdd3d4da069512a", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java?ref=9cf0dfa7b14e98934e0be2e97aea1e5f90ad25c1", "patch": "@@ -680,6 +680,9 @@ private QName generateSchemaForType(XmlSchemaSequence sequence, JClass type, Str\n     }\n \n     protected boolean isDataHandler(JClass clazz){\n+        if(clazz == null ){\n+            return false;\n+        }\n         String classType = clazz.getQualifiedName();\n         if(\"java.lang.Object\".equals(classType)){\n             return false;", "filename": "modules/kernel/src/org/apache/axis2/description/java2wsdl/DefaultSchemaGenerator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e5b139fa4627349f3fe4cb81dbdc08bc9155af4e", "parent": "https://github.com/apache/axis2-java/commit/4f9e2a054a6035e74278521019fde1b1ec0166d6", "message": "oops , SimpleAxisServer does not start due to this NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@560915 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_18", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/e5b139fa4627349f3fe4cb81dbdc08bc9155af4e/modules/scripting/src/org/apache/axis2/scripting/ScriptRepositoryListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/e5b139fa4627349f3fe4cb81dbdc08bc9155af4e/modules/scripting/src/org/apache/axis2/scripting/ScriptRepositoryListener.java", "sha": "dac7140e1b16b6dc814f2fee138b696b8dbef65c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/scripting/src/org/apache/axis2/scripting/ScriptRepositoryListener.java?ref=e5b139fa4627349f3fe4cb81dbdc08bc9155af4e", "patch": "@@ -47,7 +47,7 @@ protected void findServicesInDirectory() {\n             }\n         }\n \n-        wsInfoList.addWSInfoItem(null, deploymentEngine.getModuleDeployer(), WSInfo.TYPE_CUSTOM);\n+//        wsInfoList.addWSInfoItem(null, deploymentEngine.getModuleDeployer(), WSInfo.TYPE_CUSTOM);\n     }\n \n     /*", "filename": "modules/scripting/src/org/apache/axis2/scripting/ScriptRepositoryListener.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/7f2c048afce2a87f8ed071aad37cb5f5f9f58c60", "parent": "https://github.com/apache/axis2-java/commit/25f8050e44117a87faeeed87a3c7e6079f39f62d", "message": "Fixed a potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@548587 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_19", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/7f2c048afce2a87f8ed071aad37cb5f5f9f58c60/modules/webapp/src/main/webapp/axis2-web/include/httpbase.jsp", "blob_url": "https://github.com/apache/axis2-java/blob/7f2c048afce2a87f8ed071aad37cb5f5f9f58c60/modules/webapp/src/main/webapp/axis2-web/include/httpbase.jsp", "sha": "a0dd0fd95d77a962892a1cbbf822fcc8648889d4", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/webapp/src/main/webapp/axis2-web/include/httpbase.jsp?ref=7f2c048afce2a87f8ed071aad37cb5f5f9f58c60", "patch": "@@ -10,9 +10,11 @@\n   public void jspInit() {\n     ServletContext context = this.getServletConfig().getServletContext();\n     ConfigurationContext configctx = (ConfigurationContext) context.getAttribute(AxisServlet.CONFIGURATION_CONTEXT);\n-    Parameter parameter = configctx.getAxisConfiguration().getParameter(Constants.HTTP_FRONTEND_HOST_URL);\n-    if (parameter != null) {\n-      frontendHostUrl = (String) parameter.getValue();\n+    if (configctx != null){\n+        Parameter parameter = configctx.getAxisConfiguration().getParameter(Constants.HTTP_FRONTEND_HOST_URL);\n+        if (parameter != null) {\n+          frontendHostUrl = (String) parameter.getValue();\n+        }\n     }\n   }\n ", "filename": "modules/webapp/src/main/webapp/axis2-web/include/httpbase.jsp"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/eba83f4c62eea826df1d954029116d24a2e4108c", "parent": "https://github.com/apache/axis2-java/commit/3c8efef38e839fcef64b650d9fc7e4d9182f3b86", "message": "Handle possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@542219 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_20", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/eba83f4c62eea826df1d954029116d24a2e4108c/modules/clustering/src/org/apache/axis2/clustering/control/GetStateCommand.java", "blob_url": "https://github.com/apache/axis2-java/blob/eba83f4c62eea826df1d954029116d24a2e4108c/modules/clustering/src/org/apache/axis2/clustering/control/GetStateCommand.java", "sha": "27bc00deabe4a4f95d9ff677aa8086400a7a41be", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/control/GetStateCommand.java?ref=eba83f4c62eea826df1d954029116d24a2e4108c", "patch": "@@ -16,6 +16,7 @@\n package org.apache.axis2.clustering.control;\n \n import org.apache.axis2.clustering.ClusteringFault;\n+import org.apache.axis2.clustering.ClusterManager;\n import org.apache.axis2.clustering.context.ContextClusteringCommand;\n import org.apache.axis2.clustering.context.ContextClusteringCommandFactory;\n import org.apache.axis2.clustering.context.ContextManager;\n@@ -36,13 +37,11 @@\n     private ContextClusteringCommand[] commands;\n \n     public void execute(ConfigurationContext configCtx) throws ClusteringFault {\n-\n-        //TODO: Method implementation\n-        System.err.println(\"####### Going to send state to Member\");\n-\n-\n-        ContextManager contextManager =\n-                configCtx.getAxisConfiguration().getClusterManager().getContextManager();\n+        ClusterManager clusterManager = configCtx.getAxisConfiguration().getClusterManager();\n+        if(clusterManager == null){\n+            return;\n+        }\n+        ContextManager contextManager = clusterManager.getContextManager();\n         if (contextManager != null) {\n             Map excludedPropPatterns = contextManager.getReplicationExcludePatterns();\n             List cmdList = new ArrayList();", "filename": "modules/clustering/src/org/apache/axis2/clustering/control/GetStateCommand.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e3b15d8dc2920808b73ab5486b7d286b40272277", "parent": "https://github.com/apache/axis2-java/commit/139e613cfe32f12c35c7c60b1b19870a4e7a465e", "message": "Handling possible NPEs\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@540854 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_21", "file": [{"additions": 11, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/ContextClusteringCommandFactory.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/ContextClusteringCommandFactory.java", "sha": "ca0a341f96ad0231eeff3f12368c800037807d31", "changes": 26, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/context/ContextClusteringCommandFactory.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -33,41 +33,37 @@ public static ContextClusteringCommand getUpdateCommand(AbstractContext context,\n                                                             Map excludedPropertyPatterns) {\n \n         ContextClusteringCommand cmd = null;\n-        UpdateContextCommand updateCmd = (UpdateContextCommand) cmd;\n         if (context instanceof ConfigurationContext) {\n-            updateCmd = new UpdateConfigurationContextCommand();\n-            fillProperties(updateCmd,\n+            cmd = new UpdateConfigurationContextCommand();\n+            fillProperties((UpdateContextCommand) cmd,\n                            context,\n                            excludedPropertyPatterns);\n         } else if (context instanceof ServiceGroupContext) {\n             ServiceGroupContext sgCtx = (ServiceGroupContext) context;\n-            updateCmd = new UpdateServiceGroupContextCommand();\n+            cmd = new UpdateServiceGroupContextCommand();\n             UpdateServiceGroupContextCommand updateSgCmd =\n-                    (UpdateServiceGroupContextCommand) updateCmd;\n+                    (UpdateServiceGroupContextCommand) cmd;\n \n             updateSgCmd.setServiceGroupName(sgCtx.getDescription().getServiceGroupName());\n             updateSgCmd.setServiceGroupContextId(sgCtx.getId());\n-            fillProperties(updateCmd,\n+            fillProperties((UpdateContextCommand) cmd,\n                            context,\n                            excludedPropertyPatterns);\n-            //TODO: impl\n         } else if (context instanceof ServiceContext) {\n             ServiceContext serviceCtx = (ServiceContext) context;\n-            updateCmd = new UpdateServiceContextCommand();\n+            cmd = new UpdateServiceContextCommand();\n             UpdateServiceContextCommand updateServiceCmd =\n-                    (UpdateServiceContextCommand) updateCmd;\n-\n-            // TODO impl\n+                    (UpdateServiceContextCommand) cmd;\n             updateServiceCmd.setServiceGroupName(serviceCtx.getGroupName());\n             updateServiceCmd.setServiceName(serviceCtx.getAxisService().getName());\n-            fillProperties(updateCmd,\n+            fillProperties((UpdateContextCommand) cmd,\n                            context,\n                            excludedPropertyPatterns);\n         }\n-        context.clearPropertyDifferences(); // Once we send the diffs, we should clear the diffs\n-        if(updateCmd != null && updateCmd.isPropertiesEmpty()){\n+        if (cmd != null && ((UpdateContextCommand) cmd).isPropertiesEmpty()) {\n             cmd = null;\n         }\n+        context.clearPropertyDifferences(); // Once we send the diffs, we should clear the diffs\n         return cmd;\n     }\n \n@@ -98,7 +94,7 @@ private static boolean isExcluded(String propertyName,\n         // First check in the default excludes\n         List defaultExcludes =\n                 (List) excludedPropertyPatterns.get(DeploymentConstants.TAG_DEFAULTS);\n-        if(defaultExcludes == null){\n+        if (defaultExcludes == null) {\n             return false;\n         }\n         if (isExcluded(defaultExcludes, propertyName)) {", "filename": "modules/clustering/src/org/apache/axis2/clustering/context/ContextClusteringCommandFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/PropertyUpdater.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/PropertyUpdater.java", "sha": "6129399e7999c5464418f17c332e0a7525ca9321", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/context/PropertyUpdater.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.Properties;\n \n /**\n  * ", "filename": "modules/clustering/src/org/apache/axis2/clustering/context/PropertyUpdater.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateConfigurationContextCommand.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateConfigurationContextCommand.java", "sha": "56934c7f40dcde0f9828e92540fbfab6c954de89", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateConfigurationContextCommand.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -40,6 +40,10 @@ public int getCommandType() {\n     }\n \n     public boolean isPropertiesEmpty(){\n+        if (propertyUpdater.getProperties() == null) {\n+            propertyUpdater.setProperties(new HashMap());\n+            return true;\n+        }\n         return propertyUpdater.getProperties().isEmpty();\n     }\n ", "filename": "modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateConfigurationContextCommand.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceContextCommand.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceContextCommand.java", "sha": "fd929026f33f6f119060359203218e8198d3dc7a", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceContextCommand.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -66,6 +66,10 @@ public void execute(ConfigurationContext configurationContext) throws Clustering\n     }\n \n     public boolean isPropertiesEmpty() {\n+        if (propertyUpdater.getProperties() == null) {\n+            propertyUpdater.setProperties(new HashMap());\n+            return true;\n+        }\n         return propertyUpdater.getProperties().isEmpty();\n     }\n ", "filename": "modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceContextCommand.java"}, {"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceGroupContextCommand.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceGroupContextCommand.java", "sha": "510d6a447b4033d64070e533f9a7c6528a59d88d", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceGroupContextCommand.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -42,9 +42,13 @@ public int getCommandType() {\n     }\n \n     public boolean isPropertiesEmpty() {\n+        if (propertyUpdater.getProperties() == null) {\n+            propertyUpdater.setProperties(new HashMap());\n+            return true;\n+        }\n         return propertyUpdater.getProperties().isEmpty();\n     }\n-    \n+\n     public void addProperty(PropertyDifference diff) {\n         if (propertyUpdater.getProperties() == null) {\n             propertyUpdater.setProperties(new HashMap());", "filename": "modules/clustering/src/org/apache/axis2/clustering/context/commands/UpdateServiceGroupContextCommand.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/tribes/ChannelSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/e3b15d8dc2920808b73ab5486b7d286b40272277/modules/clustering/src/org/apache/axis2/clustering/tribes/ChannelSender.java", "sha": "2f0de3b5c9d85561be39f68477b361e8a5541bc7", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/tribes/ChannelSender.java?ref=e3b15d8dc2920808b73ab5486b7d286b40272277", "patch": "@@ -32,6 +32,7 @@\n     private static final Log log = LogFactory.getLog(ChannelSender.class);\n \n     public void sendToGroup(ClusteringCommand msg) throws ClusteringFault {\n+        if(channel == null) return;\n         Member[] group = channel.getMembers();\n         log.debug(\"Group size \" + group.length);\n         // send the message\n@@ -52,6 +53,7 @@ public void sendToGroup(ClusteringCommand msg) throws ClusteringFault {\n     }\n \n     public void sendToSelf(ClusteringCommand msg) throws ClusteringFault {\n+        if(channel == null) return;\n         try {\n             channel.send(new Member[]{channel.getLocalMember(true)},\n                          msg,\n@@ -62,6 +64,7 @@ public void sendToSelf(ClusteringCommand msg) throws ClusteringFault {\n     }\n \n     public void sendToGroup(Throwable throwable) throws ClusteringFault {\n+        if(channel == null) return;\n         Member[] group = channel.getMembers();\n         log.debug(\"Group size \" + group.length);\n         // send the message", "filename": "modules/clustering/src/org/apache/axis2/clustering/tribes/ChannelSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/67733ded85a3e1eb8531a3eec4c9e276179ec83b", "parent": "https://github.com/apache/axis2-java/commit/92ac4e6197496f2fe633f4b9af7f78d1297d77ec", "message": "Avoiding posible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@538525 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_22", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/67733ded85a3e1eb8531a3eec4c9e276179ec83b/modules/kernel/src/org/apache/axis2/util/WSDLSerializationUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/67733ded85a3e1eb8531a3eec4c9e276179ec83b/modules/kernel/src/org/apache/axis2/util/WSDLSerializationUtil.java", "sha": "abbce7cd51ea4003938ccf0f93e559a3c7cfef3f", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/WSDLSerializationUtil.java?ref=67733ded85a3e1eb8531a3eec4c9e276179ec83b", "patch": "@@ -38,6 +38,7 @@\n import java.util.Map;\n import java.util.Iterator;\n import java.util.ArrayList;\n+import java.util.Set;\n \n /**\n  * Helps the AxisService to WSDL process\n@@ -51,11 +52,14 @@\n      * @return - The prefix of the namespace\n      */\n     public static String getPrefix(String namespace, Map nameSpaceMap) {\n-        Iterator keys = nameSpaceMap.keySet().iterator();\n-        while (keys.hasNext()) {\n-            String key = (String) keys.next();\n-            if (nameSpaceMap.get(key).equals(namespace)) {\n-                return key;\n+        Set keySet;\n+        if (nameSpaceMap != null && (keySet = nameSpaceMap.keySet()) != null) {\n+            Iterator keys = keySet.iterator();\n+            while (keys.hasNext()) {\n+                String key = (String) keys.next();\n+                if (nameSpaceMap.get(key).equals(namespace)) {\n+                    return key;\n+                }\n             }\n         }\n         return null;", "filename": "modules/kernel/src/org/apache/axis2/util/WSDLSerializationUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/064725a13cec1a4f7d496addaf18152724617d2d", "parent": "https://github.com/apache/axis2-java/commit/82d13230cb76181fcd99328236c8fe6bdfcc1ad6", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@530076 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_23", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/064725a13cec1a4f7d496addaf18152724617d2d/modules/kernel/src/org/apache/axis2/engine/HTTPLocationBasedDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/064725a13cec1a4f7d496addaf18152724617d2d/modules/kernel/src/org/apache/axis2/engine/HTTPLocationBasedDispatcher.java", "sha": "7d8a3f2d333066cb26155231beadd7363b08e4ca", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/HTTPLocationBasedDispatcher.java?ref=064725a13cec1a4f7d496addaf18152724617d2d", "patch": "@@ -96,8 +96,8 @@ private String parseRequestURL(String path, String servicePath) {\n             }\n         }\n \n-        index = service.indexOf(\"/\");\n-        if (-1 != index) {\n+        if (service != null) {\n+            index = service.indexOf(\"/\");\n             service = service.substring(index);\n         } else {\n             int queryIndex = path.indexOf(\"?\");", "filename": "modules/kernel/src/org/apache/axis2/engine/HTTPLocationBasedDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/13cc354326cdcda9e82a3cd89df0da72b9cbcf9c", "parent": "https://github.com/apache/axis2-java/commit/1a6887c0cb2d4f67bd739180a9cde6afc2efe54c", "message": "throw an exception instead of an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@527744 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_24", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/13cc354326cdcda9e82a3cd89df0da72b9cbcf9c/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/13cc354326cdcda9e82a3cd89df0da72b9cbcf9c/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "sha": "8b7ee01924a6ba92036f7bc686dc1d29b0b59f6c", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java?ref=13cc354326cdcda9e82a3cd89df0da72b9cbcf9c", "patch": "@@ -259,6 +259,11 @@ private MethodMarshallerUtils() {\n                     index++;\n                 }\n \n+                if(block == null){\n+                    log.info(\"Block is null\");\n+                    throw new XMLStreamException(\"Block is null in getPDElements\");\n+                }\n+\n                 Element element = new Element(block.getBusinessObject(true), block.getQName());\n                 PDElement pde = new PDElement(pd, element, unmarshalByJavaType == null ? null :\n                         unmarshalByJavaType[i]);", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/1a6887c0cb2d4f67bd739180a9cde6afc2efe54c", "parent": "https://github.com/apache/axis2-java/commit/1b2cc5abcca151fe9f5560971a960a9ba6b93e9e", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@527743 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_25", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/1a6887c0cb2d4f67bd739180a9cde6afc2efe54c/modules/kernel/src/org/apache/axis2/transport/http/ApplicationXMLFormatter.java", "blob_url": "https://github.com/apache/axis2-java/blob/1a6887c0cb2d4f67bd739180a9cde6afc2efe54c/modules/kernel/src/org/apache/axis2/transport/http/ApplicationXMLFormatter.java", "sha": "a43ba38c126c58d6b816e7dbe369aa5a41e4b78c", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/ApplicationXMLFormatter.java?ref=1a6887c0cb2d4f67bd739180a9cde6afc2efe54c", "patch": "@@ -71,13 +71,14 @@\n     public void writeTo(MessageContext messageContext, OMOutputFormat format,\n                         OutputStream outputStream, boolean preserve) throws AxisFault {\n \n-        OMElement omElement;\n+        OMElement omElement = null;\n \n         if (messageContext.getFLOW() == MessageContext.OUT_FAULT_FLOW) {\n             SOAPFault fault = messageContext.getEnvelope().getBody().getFault();\n             SOAPFaultDetail soapFaultDetail = fault.getDetail();\n-            omElement = soapFaultDetail.getFirstElement();\n-\n+            if (soapFaultDetail != null) {\n+                omElement = soapFaultDetail.getFirstElement();\n+            }\n             if (omElement == null) {\n                 omElement = fault.getReason();\n             }", "filename": "modules/kernel/src/org/apache/axis2/transport/http/ApplicationXMLFormatter.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2886594a1bfde18ec5ba0c39408e9790e710d28d", "parent": "https://github.com/apache/axis2-java/commit/9393d572ed4ffb5c9ca7f6ee42c51955e4da95d5", "message": "Add a few NPE guards\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@527551 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_26", "file": [{"additions": 29, "raw_url": "https://github.com/apache/axis2-java/raw/2886594a1bfde18ec5ba0c39408e9790e710d28d/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/2886594a1bfde18ec5ba0c39408e9790e710d28d/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "sha": "1cf652259d391f4a59014d2d4ea89ed4590890ca", "changes": 35, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=2886594a1bfde18ec5ba0c39408e9790e710d28d", "patch": "@@ -316,10 +316,13 @@ EndpointDescription updateEndpointDescription(Class sei, QName portQName,\n \n     private Class getEndpointSEI(QName portQName) {\n         Class endpointSEI = null;\n-        EndpointInterfaceDescription endpointInterfaceDesc =\n-                getEndpointDescription(portQName).getEndpointInterfaceDescription();\n-        if (endpointInterfaceDesc != null) {\n-            endpointSEI = endpointInterfaceDesc.getSEIClass();\n+        EndpointDescription endpointDesc = getEndpointDescription(portQName);\n+        if (endpointDesc != null) {\n+            EndpointInterfaceDescription endpointInterfaceDesc = \n+                endpointDesc.getEndpointInterfaceDescription();\n+            if (endpointInterfaceDesc != null ) {\n+                endpointSEI = endpointInterfaceDesc.getSEIClass();\n+            }\n         }\n         return endpointSEI;\n     }\n@@ -546,8 +549,28 @@ ClientConfigurationFactory getClientConfigurationFactory() {\n     * @see org.apache.axis2.jaxws.description.ServiceDescription#getServiceClient(javax.xml.namespace.QName)\n     */\n     public ServiceClient getServiceClient(QName portQName) {\n-        // TODO: RAS if no portQName found\n-        return getEndpointDescription(portQName).getServiceClient();\n+        ServiceClient returnServiceClient = null;\n+        if (!DescriptionUtils.isEmpty(portQName)) {\n+            EndpointDescription endpointDesc = getEndpointDescription(portQName);\n+            if (endpointDesc != null) {\n+                returnServiceClient = endpointDesc.getServiceClient();\n+            }\n+            else {\n+                // Couldn't find Endpoint Description for port QName\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Could not find portQName: \" + portQName \n+                            + \" under ServiceDescription: \" + toString());\n+                }\n+            }\n+        }\n+        else {\n+            // PortQName is empty\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"PortQName agrument is invalid; it can not be null or an empty string: \" + portQName);\n+            }\n+        }\n+        \n+        return returnServiceClient;\n     }\n \n     /* (non-Javadoc)", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9c73f0ee0fe897c6be093f3bb59431e37d8e5a7a", "parent": "https://github.com/apache/axis2-java/commit/ae82740dc0116dcb76d1e1af2bc96e233ce3b95f", "message": "protect from one more NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@524504 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_27", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/9c73f0ee0fe897c6be093f3bb59431e37d8e5a7a/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerInvokerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/9c73f0ee0fe897c6be093f3bb59431e37d8e5a7a/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerInvokerUtils.java", "sha": "6b8b5156ed6a527e3684ad3a65ce95f9b1a0ce61", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerInvokerUtils.java?ref=9c73f0ee0fe897c6be093f3bb59431e37d8e5a7a", "patch": "@@ -119,9 +119,11 @@ public static boolean invokeOutboundHandlers(MessageContext msgCtx,\n         // actually have useful code under EndpointDescription.getHandlerList()\r\n \r\n         List<Handler> handlers = null;\r\n-        InvocationContext ic = msgCtx.getInvocationContext();\r\n-        if(ic != null) {\r\n-            handlers = ic.getHandlers();\r\n+        if(msgCtx != null) {\r\n+            InvocationContext ic = msgCtx.getInvocationContext();\r\n+            if(ic != null) {\r\n+                handlers = ic.getHandlers();\r\n+            }\r\n         }\r\n         if(handlers == null) {\r\n             HandlerResolverImpl hResolver = new HandlerResolverImpl(endpointDesc);\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/handler/HandlerInvokerUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2fcdeacc715d9d45769b84df3742369b492f4643", "parent": "https://github.com/apache/axis2-java/commit/88a7700dd81d29f0e2fd08a7e845afe96832f2a6", "message": "check for NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@524097 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_28", "file": [{"additions": 27, "raw_url": "https://github.com/apache/axis2-java/raw/2fcdeacc715d9d45769b84df3742369b492f4643/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/2fcdeacc715d9d45769b84df3742369b492f4643/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java", "sha": "ac4ce5e86c50886d4986d87d62dd4fce4df7a158", "changes": 52, "status": "modified", "deletions": 25, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java?ref=2fcdeacc715d9d45769b84df3742369b492f4643", "patch": "@@ -62,33 +62,35 @@ public static void addProperties(SOAPMessageContext soapMessageContext,\n         Map props = axisMsgContext.getOptions().getProperties();\n         soapMessageContext.putAll(props);\n \n-        // Set the WSDL properties\n-        ServiceDescription sd =\n-                jaxwsMessageContext.getEndpointDescription().getServiceDescription();\n-        if (sd != null) {\n-            URL wsdlLocation = ((ServiceDescriptionWSDL)sd).getWSDLLocation();\n-            if (wsdlLocation != null && !\"\".equals(wsdlLocation)) {\n-                URI wsdlLocationURI = null;\n-                try {\n-                    wsdlLocationURI = wsdlLocation.toURI();\n-                }\n-                catch (URISyntaxException ex) {\n-                    // TODO: NLS/RAS\n-                    log.warn(\"Unable to convert WSDL location URL to URI.  URL: \" +\n-                            wsdlLocation.toString() + \"; Service: \" + sd.getServiceQName(), ex);\n+        if (jaxwsMessageContext.getEndpointDescription()!=null) {\n+            // Set the WSDL properties\n+            ServiceDescription sd =\n+                    jaxwsMessageContext.getEndpointDescription().getServiceDescription();\n+            if (sd != null) {\n+                URL wsdlLocation = ((ServiceDescriptionWSDL)sd).getWSDLLocation();\n+                if (wsdlLocation != null && !\"\".equals(wsdlLocation)) {\n+                    URI wsdlLocationURI = null;\n+                    try {\n+                        wsdlLocationURI = wsdlLocation.toURI();\n+                    }\n+                    catch (URISyntaxException ex) {\n+                        // TODO: NLS/RAS\n+                        log.warn(\"Unable to convert WSDL location URL to URI.  URL: \" +\n+                                wsdlLocation.toString() + \"; Service: \" + sd.getServiceQName(), ex);\n+                    }\n+                    soapMessageContext\n+                            .put(javax.xml.ws.handler.MessageContext.WSDL_DESCRIPTION, wsdlLocationURI);\n+                    soapMessageContext.setScope(javax.xml.ws.handler.MessageContext.WSDL_DESCRIPTION,\n+                                                Scope.APPLICATION);\n                 }\n+    \n                 soapMessageContext\n-                        .put(javax.xml.ws.handler.MessageContext.WSDL_DESCRIPTION, wsdlLocationURI);\n-                soapMessageContext.setScope(javax.xml.ws.handler.MessageContext.WSDL_DESCRIPTION,\n-                                            Scope.APPLICATION);\n-            }\n-\n-            soapMessageContext\n-                    .put(javax.xml.ws.handler.MessageContext.WSDL_SERVICE, sd.getServiceQName());\n-            soapMessageContext\n-                    .setScope(javax.xml.ws.handler.MessageContext.WSDL_SERVICE, Scope.APPLICATION);\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"WSDL_SERVICE :\" + sd.getServiceQName());\n+                        .put(javax.xml.ws.handler.MessageContext.WSDL_SERVICE, sd.getServiceQName());\n+                soapMessageContext\n+                        .setScope(javax.xml.ws.handler.MessageContext.WSDL_SERVICE, Scope.APPLICATION);\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"WSDL_SERVICE :\" + sd.getServiceQName());\n+                }\n             }\n         }\n ", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2d39a8b42a24ff2e3ca5baf7201933f0bb6afd1a", "parent": "https://github.com/apache/axis2-java/commit/08f658e86323a6e7ea77abee838a36c75471cf06", "message": "Prevent NPE's. Sorry Deepal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@521218 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_29", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/2d39a8b42a24ff2e3ca5baf7201933f0bb6afd1a/modules/kernel/src/org/apache/axis2/deployment/DeploymentClassLoader.java", "blob_url": "https://github.com/apache/axis2-java/blob/2d39a8b42a24ff2e3ca5baf7201933f0bb6afd1a/modules/kernel/src/org/apache/axis2/deployment/DeploymentClassLoader.java", "sha": "ddb6da11025a5b5449ff3544c30bfbd90dc8d3c3", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/DeploymentClassLoader.java?ref=2d39a8b42a24ff2e3ca5baf7201933f0bb6afd1a", "patch": "@@ -121,8 +121,8 @@ protected Class findClass(String name) throws ClassNotFoundException {\n      */\n     public URL findResource(String resource) {\n         URL url = super.findResource(resource);\n-        if (url != null) {\n-            for (int i = 0; i < embedded_jars.size(); i++) {\n+        if (url == null) {\n+            for (int i = 0; embedded_jars != null && i < embedded_jars.size(); i++) {\n                 String libjar_name = (String) embedded_jars.get(i);\n                 try {\n                 InputStream in = getJarAsStream(libjar_name);\n@@ -158,7 +158,7 @@ public Enumeration findResources(String resource) throws IOException {\n         while (e.hasMoreElements()) {\n             resources.add(e.nextElement());\n         }\n-        for (int i = 0; i < embedded_jars.size(); i++) {\n+        for (int i = 0; embedded_jars != null && i < embedded_jars.size(); i++) {\n             String libjar_name = (String) embedded_jars.get(i);\n             try {\n             InputStream in = getJarAsStream(libjar_name);\n@@ -189,7 +189,7 @@ public Enumeration findResources(String resource) throws IOException {\n      * @throws java.io.IOException <code>Exception</code>\n      */\n     private byte[] getBytes(String resource) throws Exception {\n-        for (int i = 0; i < embedded_jars.size(); i++) {\n+        for (int i = 0; embedded_jars != null && i < embedded_jars.size(); i++) {\n             String libjar_name = (String) embedded_jars.get(i);\n             InputStream in = getJarAsStream(libjar_name);\n             byte[] bytes = getBytes(in, resource);", "filename": "modules/kernel/src/org/apache/axis2/deployment/DeploymentClassLoader.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/14f229d47e8bc6acc4abb05d6566e4bf3eda6594", "parent": "https://github.com/apache/axis2-java/commit/b4cf78d4b5f8d034aedff6f4e308b738b0ba96b2", "message": "fix NPE caused\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@520767 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_30", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/14f229d47e8bc6acc4abb05d6566e4bf3eda6594/modules/kernel/src/org/apache/axis2/transport/jms/JMSSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/14f229d47e8bc6acc4abb05d6566e4bf3eda6594/modules/kernel/src/org/apache/axis2/transport/jms/JMSSender.java", "sha": "b3eb4800ae148e623eb8c47d99b49ab7228f9116", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/jms/JMSSender.java?ref=14f229d47e8bc6acc4abb05d6566e4bf3eda6594", "patch": "@@ -243,7 +243,7 @@ private Message createJMSMessage(MessageContext msgContext, Session session)\n \n         // set the JMS correlation ID if specified\n         String correlationId = getProperty(msgContext, JMSConstants.JMS_COORELATION_ID);\n-        if (correlationId == null) {\n+        if (correlationId == null && msgContext.getRelatesTo() != null) {\n             correlationId = msgContext.getRelatesTo().getValue();\n         }\n ", "filename": "modules/kernel/src/org/apache/axis2/transport/jms/JMSSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/816bf77b0e3de5aadc09152115f25900579f0da3", "parent": "https://github.com/apache/axis2-java/commit/0fa58c2a165c0885a72ba84180296daaa0dd51b7", "message": "Axis2-2330\n\nFix for SchemaReaderImpl NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@518743 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_31", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/816bf77b0e3de5aadc09152115f25900579f0da3/modules/jaxws/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/816bf77b0e3de5aadc09152115f25900579f0da3/modules/jaxws/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java", "sha": "d2e9ba88875b60f2c908900e91cc14961ad8f510", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java?ref=816bf77b0e3de5aadc09152115f25900579f0da3", "patch": "@@ -139,7 +139,9 @@ private void processSchema(Schema schema, List<Schema> schemaList, Set<String> p\n \t\r\n \tprivate void processImport(SchemaImport si,  List<Schema> schemaList, Set<String> packageList)throws SchemaReaderException{\t\r\n \t\tSchema refSchema = si.getReferencedSchema();\r\n-\t\tprocessSchema(refSchema, schemaList, packageList);\r\n+                if(refSchema!=null){\r\n+                    processSchema(refSchema, schemaList, packageList);\r\n+                }\r\n \t}\r\n \t\r\n \tprivate String readSchemaTargetnamespace(Schema schema){\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2fa422aa2d2e884fcfc0de4b8af01c562e14c4ad", "parent": "https://github.com/apache/axis2-java/commit/a256e1d17d8e91a4874bcd1721528313defbe241", "message": "Check for NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@517703 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_32", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/2fa422aa2d2e884fcfc0de4b8af01c562e14c4ad/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/2fa422aa2d2e884fcfc0de4b8af01c562e14c4ad/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "sha": "acb7ebec80e4924286b10c02870e4166ae15141f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java?ref=2fa422aa2d2e884fcfc0de4b8af01c562e14c4ad", "patch": "@@ -243,7 +243,7 @@ private MethodMarshallerUtils() {\n                 }\n                 \n                 Element element = new Element(block.getBusinessObject(true), block.getQName());\n-                PDElement pde = new PDElement(pd, element, unmarshalByJavaType[i]);\n+                PDElement pde = new PDElement(pd, element, unmarshalByJavaType == null ? null : unmarshalByJavaType[i]);\n                 pdeList.add(pde);\n             }\n         }", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/eb1f6c2d04d90053cf94c37de5612e62fb5525ff", "parent": "https://github.com/apache/axis2-java/commit/d08b5b8393d09458fe1665f785cc89b258407bf8", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@507882 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_33", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/eb1f6c2d04d90053cf94c37de5612e62fb5525ff/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/eb1f6c2d04d90053cf94c37de5612e62fb5525ff/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java", "sha": "71aa7109581528441de61e3905a8c8534f76f96b", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java?ref=eb1f6c2d04d90053cf94c37de5612e62fb5525ff", "patch": "@@ -103,8 +103,10 @@ public void run() {\n     }\n     \n \tpublic void close() throws IOException {\n-        this.serversocket.close();\n-\t}\n+        if(this.serversocket != null){\n+            this.serversocket.close();\n+        }\n+    }\n     \n     public void destroy() {\n         this.destroyed = true;", "filename": "modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c6b6e7719e049c62f996c7a10ca580a7be4a83f7", "parent": "https://github.com/apache/axis2-java/commit/58998ee6009627f536b49855f8bf3f7265d89044", "message": "oops! npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@507780 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_34", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/c6b6e7719e049c62f996c7a10ca580a7be4a83f7/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/c6b6e7719e049c62f996c7a10ca580a7be4a83f7/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java", "sha": "f7d36db7f731ed49f10cc79bfb2ec2671646a0f8", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java?ref=c6b6e7719e049c62f996c7a10ca580a7be4a83f7", "patch": "@@ -72,15 +72,15 @@ public DefaultConnectionListener(int port, HttpConnectionFactory connfactory, Ht\n     }\n \n     public void run() {\n-    \tif (LOG.isInfoEnabled()) {\n-            LOG.info(\"Listening on port \" + this.serversocket.getLocalPort());\n-    \t}\n         try {\n             while (!Thread.interrupted()) {\n                 try {\n                     if (serversocket == null || serversocket.isClosed()){\n                         serversocket = new ServerSocket(port);\n                         serversocket.setReuseAddress(true);\n+                        if (LOG.isInfoEnabled()) {\n+                            LOG.info(\"Listening on port \" + this.serversocket.getLocalPort());\n+                        }\n                     }\n                     LOG.debug(\"Waiting for incoming HTTP connection\");\n                     Socket socket = this.serversocket.accept();", "filename": "modules/kernel/src/org/apache/axis2/transport/http/server/DefaultConnectionListener.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d80825a908624199d987575f8180c86401dca17b", "parent": "https://github.com/apache/axis2-java/commit/89dd911bb1d5ce71a173a62086157d452ef369f7", "message": "Fixing NPE in RestUtil\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@503607 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_35", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java", "sha": "2caf95c48d06b0e4d87dc05eb74696b308b9f3a3", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java?ref=d80825a908624199d987575f8180c86401dca17b", "patch": "@@ -223,9 +223,11 @@ private void dispatchAndVerify(MessageContext msgContext) throws AxisFault {\n             if ((axisOperation = msgContext.getAxisOperation()) != null) {\n                 AxisEndpoint axisEndpoint =\n                         (AxisEndpoint) msgContext.getProperty(WSDL2Constants.ENDPOINT_LOCAL_NAME);\n-                AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisEndpoint\n-                        .getBinding().getChild(axisOperation.getName());\n-                msgContext.setProperty(Constants.AXIS_BINDING_OPERATION, axisBindingOperation);\n+                if (axisEndpoint != null) {\n+                    AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisEndpoint\n+                            .getBinding().getChild(axisOperation.getName());\n+                    msgContext.setProperty(Constants.AXIS_BINDING_OPERATION, axisBindingOperation);\n+                }\n                 msgContext.setAxisOperation(axisOperation);\n             }\n ", "filename": "modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java", "sha": "d88ed4fd5e8c8406dd4fcfffa305103b97b91b12", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java?ref=d80825a908624199d987575f8180c86401dca17b", "patch": "@@ -442,7 +442,8 @@ private static Map getParameterMap(HttpServletRequest request, String queryParam\n             }\n         }\n \n-        if (request.getContentType().indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_FORM_DATA) > -1) {\n+        String contentType = request.getContentType();\n+        if (contentType != null && contentType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_FORM_DATA) > -1) {\n             ServletRequestContext servletRequestContext = new ServletRequestContext(request);\n             try {\n                 List items = parseRequest(servletRequestContext);", "filename": "modules/kernel/src/org/apache/axis2/util/SchemaUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/08e4e9e9920144dbe93a50212a0f045434841ab6", "parent": "https://github.com/apache/axis2-java/commit/a146f3c992fb2c5038c03280baeb3dd0b0bfa269", "message": "AXIS2-1742\n - Fixing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@500150 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_36", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/08e4e9e9920144dbe93a50212a0f045434841ab6/modules/kernel/src/org/apache/axis2/description/ClientUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/08e4e9e9920144dbe93a50212a0f045434841ab6/modules/kernel/src/org/apache/axis2/description/ClientUtils.java", "sha": "1935f2d256271a339a3003a8b44864dd3a381737", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/ClientUtils.java?ref=08e4e9e9920144dbe93a50212a0f045434841ab6", "patch": "@@ -42,7 +42,10 @@ public static synchronized TransportOutDescription inferOutTransport(AxisConfigu\n             int index = transportURI.indexOf(':');\n             String transport = (index > 0) ? transportURI.substring(0, index) : null;\n             if (transport != null) {\n-                return ac.getTransportOut(new QName(transport));\n+                TransportOutDescription transportOut = ac.getTransportOut(new QName(transport));\n+                if (transportOut == null) {\n+                    throw new AxisFault(\"No Tranport Sender found for : \" + transport);\n+                } else return ac.getTransportOut(new QName(transport));\n             } else {\n                 throw new AxisFault(Messages.getMessage(\"cannotInferTransport\", transportURI));\n             }", "filename": "modules/kernel/src/org/apache/axis2/description/ClientUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/65a9e82d415e66cc3d0c164c7f1aa1525ff27b1f", "parent": "https://github.com/apache/axis2-java/commit/b6bd819d7fe6a6da86e75b5ed5a9fc0f58e44138", "message": "Avoid potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@494009 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_37", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/65a9e82d415e66cc3d0c164c7f1aa1525ff27b1f/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/65a9e82d415e66cc3d0c164c7f1aa1525ff27b1f/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java", "sha": "72e88324380ed20501af1d8fd8f9480ab201b4db", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java?ref=65a9e82d415e66cc3d0c164c7f1aa1525ff27b1f", "patch": "@@ -51,6 +51,12 @@ public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n      */\n     private void checkUsingAddressing(MessageContext msgContext)\n             throws AxisFault {\n+        if(msgContext.getAxisService() == null){\n+            if (log.isTraceEnabled()){\n+                log.trace(\"checkUsingAddressing: axisService null, cannot check UsingAddressing\");\n+            }\n+            return;\n+        }\n         String addressingFlag = msgContext.getAxisService().getWSAddressingFlag();\n         if (log.isTraceEnabled()){\n             log.trace(\"checkUsingAddressing: WSAddressingFlag=\" + addressingFlag);", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d964d537cf92da6c52f24bbe610c981cedfcec9c", "parent": "https://github.com/apache/axis2-java/commit/1c0952f0194521fa910423dd5bb1594c5d815d38", "message": "port 492124 - prevent NPE that caused build break\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@492125 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_38", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/d964d537cf92da6c52f24bbe610c981cedfcec9c/modules/kernel/src/org/apache/axis2/engine/InstanceDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/d964d537cf92da6c52f24bbe610c981cedfcec9c/modules/kernel/src/org/apache/axis2/engine/InstanceDispatcher.java", "sha": "92e649c30020e9331571cf51cda18b35c12d9239", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/InstanceDispatcher.java?ref=d964d537cf92da6c52f24bbe610c981cedfcec9c", "patch": "@@ -48,7 +48,8 @@\n      * @throws org.apache.axis2.AxisFault\n      */\n     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n-        String scope = msgContext.getAxisService().getScope();\n+        AxisService service = msgContext.getAxisService();\n+        String scope = service == null ? null : service.getScope();\n         ServiceContext serviceContext = msgContext.getServiceContext();\n \n         if ((msgContext.getOperationContext() != null)", "filename": "modules/kernel/src/org/apache/axis2/engine/InstanceDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/97da6edf260808ae2abc3a5126cad51267450978", "parent": "https://github.com/apache/axis2-java/commit/0664732fa0446866b8e4fc20d17c681c182bc633", "message": "Handling the possible NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@491193 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_39", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/97da6edf260808ae2abc3a5126cad51267450978/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/97da6edf260808ae2abc3a5126cad51267450978/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java", "sha": "5984e83fcb5cb12e3da0047b6ea8f04356e4f51e", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java?ref=97da6edf260808ae2abc3a5126cad51267450978", "patch": "@@ -131,6 +131,10 @@ public static SOAPEnvelope createSOAPMessage(MessageContext msgContext,\n \t\t{\n \t\t\tbuilder = Builder.getBuilderFromSelector(contentType, inStream, msgContext);\n \t\t}\n+\t\tif (builder==null)\n+\t\t{\n+\t\t\tthrow new AxisFault(\"Cannot find a matching builder for the message. Unsupported Content Type.\");\n+\t\t}\n \t\t\n \t\tdocumentElement = builder.getDocumentElement();\n \t\tSOAPEnvelope envelope;", "filename": "modules/kernel/src/org/apache/axis2/transport/TransportUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/0fec8cb1ad5ae4cc27e77acab5b20f33c2e12a6a", "parent": "https://github.com/apache/axis2-java/commit/3e7e77df751b04e730ea39edbfa08296e91df54a", "message": "Prevent unlikely NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@478898 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_40", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/0fec8cb1ad5ae4cc27e77acab5b20f33c2e12a6a/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/0fec8cb1ad5ae4cc27e77acab5b20f33c2e12a6a/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "sha": "3c6e70c0f7c151e7f61df83c738fe2b253c1edf8", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java?ref=0fec8cb1ad5ae4cc27e77acab5b20f33c2e12a6a", "patch": "@@ -232,8 +232,10 @@ private static void setupCorrectTransportOut(MessageContext context) throws Axis\n                         }\n                         context.setTransportOut(transportOut);\n                     }\n-                    context.getOperationContext().setProperty(\n-                            Constants.DIFFERENT_EPR, Constants.VALUE_TRUE);\n+                    if(context.getOperationContext()!=null){\n+                        context.getOperationContext().setProperty(\n+                                Constants.DIFFERENT_EPR, Constants.VALUE_TRUE);\n+                    }\n                 }\n             }\n         } catch (URISyntaxException urise) {", "filename": "modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/abe4af8f4104bfd916a2f92e1add714547eba63c", "parent": "https://github.com/apache/axis2-java/commit/0a21baaf2e216eb62ca5f98b71e05cf9bb833f3d", "message": "Fixed NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@478097 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_41", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/abe4af8f4104bfd916a2f92e1add714547eba63c/modules/security/src/org/apache/rampart/RampartMessageData.java", "blob_url": "https://github.com/apache/axis2-java/blob/abe4af8f4104bfd916a2f92e1add714547eba63c/modules/security/src/org/apache/rampart/RampartMessageData.java", "sha": "511eb9f070098411d206768b31eabaa83859f1bc", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/rampart/RampartMessageData.java?ref=abe4af8f4104bfd916a2f92e1add714547eba63c", "patch": "@@ -208,9 +208,8 @@ public RampartMessageData(MessageContext msgCtx, boolean sender) throws RampartE\n                 this.policyData = RampartPolicyBuilder.build(it);\n             }\n             \n-            RampartConfig rampartConfig = this.policyData.getRampartConfig();\n             \n-            if(isClientSide && rampartConfig == null) {\n+            if(isClientSide && this.policyData != null && this.policyData.getRampartConfig() == null) {\n                 //We'r missing the extra info rampart needs\n                 throw new RampartException(\"rampartConigMissing\");\n             }\n@@ -224,6 +223,7 @@ public RampartMessageData(MessageContext msgCtx, boolean sender) throws RampartE\n                     \n                     this.servicePolicy = this.policyData.getIssuerPolicy();\n                     \n+                    RampartConfig rampartConfig = policyData.getRampartConfig();\n                     /*\n                      * Copy crypto info from the into the new issuer policy \n                      */", "filename": "modules/security/src/org/apache/rampart/RampartMessageData.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3626aa8b006083853480773ea01333780e59d751", "parent": "https://github.com/apache/axis2-java/commit/b68caff48b9943b8d2a7f276e7f6268f93bdd313", "message": "Prevent NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@469820 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_42", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/3626aa8b006083853480773ea01333780e59d751/modules/security/src/org/apache/rampart/policy/model/RampartConfig.java", "blob_url": "https://github.com/apache/axis2-java/blob/3626aa8b006083853480773ea01333780e59d751/modules/security/src/org/apache/rampart/policy/model/RampartConfig.java", "sha": "24f899c2fc394e3c54afb91b8bddc91a1e21c5a9", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/rampart/policy/model/RampartConfig.java?ref=3626aa8b006083853480773ea01333780e59d751", "patch": "@@ -18,7 +18,6 @@\n \n import org.apache.neethi.Assertion;\n import org.apache.neethi.Constants;\n-import org.apache.neethi.Policy;\n import org.apache.neethi.PolicyComponent;\n \n import javax.xml.namespace.QName;\n@@ -59,7 +58,7 @@\n  */\n public class RampartConfig implements Assertion {\n \n-    private static final String DEFAULT_TIMESTAMP_TTL = \"300000\";\n+    public static final int DEFAULT_TIMESTAMP_TTL = 300000;\n \n     public final static String NS = \"http://ws.apache.org/rampart/policy\";\n \n@@ -95,7 +94,7 @@\n \n     private CryptoConfig decCryptoConfig;\n \n-    private String timestampTTL = DEFAULT_TIMESTAMP_TTL;\n+    private String timestampTTL = Integer.toString(DEFAULT_TIMESTAMP_TTL);\n \n     private String tokenStoreClass;\n ", "filename": "modules/security/src/org/apache/rampart/policy/model/RampartConfig.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/3626aa8b006083853480773ea01333780e59d751/modules/security/src/org/apache/rampart/util/RampartUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/3626aa8b006083853480773ea01333780e59d751/modules/security/src/org/apache/rampart/util/RampartUtil.java", "sha": "4ae7c38415f5b425d023dd39b4f0aeab214b25fd", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/rampart/util/RampartUtil.java?ref=3626aa8b006083853480773ea01333780e59d751", "patch": "@@ -297,7 +297,7 @@ public static OMElement createRSTTempalteForSCT(int conversationVersion,\n     public static int getTimeToLive(RampartMessageData messageData) {\n \n         RampartConfig rampartConfig = messageData.getPolicyData().getRampartConfig();\n-        \n+        if(rampartConfig != null) {\n         String ttl = rampartConfig.getTimestampTTL();\n         int ttl_i = 0;\n         if (ttl != null) {\n@@ -311,6 +311,9 @@ public static int getTimeToLive(RampartMessageData messageData) {\n             ttl_i = messageData.getTimeToLive();\n         }\n         return ttl_i;\n+        } else {\n+            return RampartConfig.DEFAULT_TIMESTAMP_TTL;\n+        }\n     }\n     \n     /**", "filename": "modules/security/src/org/apache/rampart/util/RampartUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/141e5fc24b4a18c86525417d0d90b93e087834ed", "parent": "https://github.com/apache/axis2-java/commit/514529562bb74878c5adb440f26c25be48b35c94", "message": "Preventing NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@469755 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_43", "file": [{"additions": 15, "raw_url": "https://github.com/apache/axis2-java/raw/141e5fc24b4a18c86525417d0d90b93e087834ed/modules/security/src/org/apache/rampart/util/RampartUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/141e5fc24b4a18c86525417d0d90b93e087834ed/modules/security/src/org/apache/rampart/util/RampartUtil.java", "sha": "7cd1ea0e737949d65516f8ee41e6c8d3a3408338", "changes": 27, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/rampart/util/RampartUtil.java?ref=141e5fc24b4a18c86525417d0d90b93e087834ed", "patch": "@@ -90,13 +90,16 @@ public static CallbackHandler getPasswordCB(RampartMessageData rmd) throws Rampa\n      * @throws RampartException\n      */\n     public static CallbackHandler getPasswordCB(MessageContext msgContext, RampartPolicyData rpd) throws RampartException {\n-        ClassLoader classLoader = msgContext.getAxisService().getClassLoader();\n-        String cbHandlerClass = rpd.getRampartConfig().getPwCbClass();\n-        \n-        log.debug(\"loading class : \" + cbHandlerClass);\n         \n         CallbackHandler cbHandler;\n-        if (cbHandlerClass != null) {\n+\n+        if (rpd.getRampartConfig() != null && rpd.getRampartConfig().getPwCbClass() != null) {\n+            \n+            String cbHandlerClass = rpd.getRampartConfig().getPwCbClass();\n+            ClassLoader classLoader = msgContext.getAxisService().getClassLoader();\n+                \n+            log.debug(\"loading class : \" + cbHandlerClass);\n+            \n             Class cbClass;\n             try {\n                 cbClass = Loader.loadClass(classLoader, cbHandlerClass);\n@@ -176,19 +179,19 @@ public static Crypto getEncryptionCrypto(RampartConfig config, ClassLoader loade\n             throws RampartException {\n         log.debug(\"Loading encryption crypto\");\n         \n-        CryptoConfig cryptoConfig = config.getEncrCryptoConfig();\n-        if(cryptoConfig != null) {\n+        if(config != null && config.getEncrCryptoConfig() != null) {\n+            CryptoConfig cryptoConfig = config.getEncrCryptoConfig();\n             String provider = cryptoConfig.getProvider();\n             log.debug(\"Usig provider: \" + provider);\n             Properties prop = cryptoConfig.getProp();\n             prop.put(CRYPTO_PROVIDER, provider);\n             return CryptoFactory.getInstance(prop, loader);\n         } else {\n             log.debug(\"Trying the signature crypto info\");\n+\n             //Try using signature crypto infomation\n-            cryptoConfig = config.getSigCryptoConfig();\n-            \n-            if(cryptoConfig != null) {\n+            if(config != null && config.getSigCryptoConfig() != null) {\n+                CryptoConfig cryptoConfig = config.getSigCryptoConfig();\n                 String provider = cryptoConfig.getProvider();\n                 log.debug(\"Usig provider: \" + provider);\n                 Properties prop = cryptoConfig.getProp();\n@@ -212,8 +215,8 @@ public static Crypto getSignatureCrypto(RampartConfig config, ClassLoader loader\n             throws RampartException {\n         log.debug(\"Loading Signature crypto\");\n         \n-        CryptoConfig cryptoConfig = config.getSigCryptoConfig();\n-        if(cryptoConfig != null) {\n+        if(config != null && config.getSigCryptoConfig() != null) {\n+            CryptoConfig cryptoConfig = config.getSigCryptoConfig();\n             String provider = cryptoConfig.getProvider();\n             log.debug(\"Usig provider: \" + provider);\n             Properties prop = cryptoConfig.getProp();", "filename": "modules/security/src/org/apache/rampart/util/RampartUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c15582981e5acd1be5454d6d07180900a9e9f970", "parent": "https://github.com/apache/axis2-java/commit/b5b444a32fa108bffbf2ea14162e914654aa08d9", "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@469120 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_44", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/c15582981e5acd1be5454d6d07180900a9e9f970/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java", "blob_url": "https://github.com/apache/axis2-java/blob/c15582981e5acd1be5454d6d07180900a9e9f970/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java", "sha": "615cdf30383e3d8b528298ad6cf9c29bebc59b63", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java?ref=c15582981e5acd1be5454d6d07180900a9e9f970", "patch": "@@ -1567,7 +1567,9 @@ private void process(XmlSchemaObjectCollection items,\n                     }\n                 }\n \n-\n+                if(referencedQName == null) {\n+                    throw new SchemaCompilationException(SchemaCompilerMessages.getMessage(\"schema.emptyName\"));\n+                }\n \n                 //register the occurence counts\n                 metainfHolder.addMaxOccurs(referencedQName, elt.getMaxOccurs());", "filename": "modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/c15582981e5acd1be5454d6d07180900a9e9f970/modules/adb-codegen/src/org/apache/axis2/schema/i18n/resource.properties", "blob_url": "https://github.com/apache/axis2-java/blob/c15582981e5acd1be5454d6d07180900a9e9f970/modules/adb-codegen/src/org/apache/axis2/schema/i18n/resource.properties", "sha": "f279a23243a784292479b8e6e56da7eeb7631627", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/src/org/apache/axis2/schema/i18n/resource.properties?ref=c15582981e5acd1be5454d6d07180900a9e9f970", "patch": "@@ -24,6 +24,7 @@ schema.unknowncontenterror=Unknown content!\n schema.elementNull=Null element encountered! Please check your schema!\r\n schema.referencedElementNotFound=The referenced element ''{0}'' was not found!\r\n schema.elementWithNoType=Could not find any schema type associated with the Element ''{0}''\r\n+schema.emptyName=Missing name attribute! Please check your schema!\r\n ################## Options ###################################################\r\n schema.unsupportedvalue=Unsupported value!\r\n \r", "filename": "modules/adb-codegen/src/org/apache/axis2/schema/i18n/resource.properties"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/514688c57cfd3e28e6ddbf520efc62c23c17fab2", "parent": "https://github.com/apache/axis2-java/commit/6044fb7078e098b01838f6114c2ff7dd479e09c0", "message": "more checks to prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@467538 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_45", "file": [{"additions": 12, "raw_url": "https://github.com/apache/axis2-java/raw/514688c57cfd3e28e6ddbf520efc62c23c17fab2/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/514688c57cfd3e28e6ddbf520efc62c23c17fab2/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "614a26868bf8ba1ff655797b5ff53eed64e663f5", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=514688c57cfd3e28e6ddbf520efc62c23c17fab2", "patch": "@@ -534,13 +534,19 @@ private void processBinding(Binding binding, Definition dif)\n     private Operation findOperation(PortType portType, BindingOperation wsdl4jBindingOperation) {\n         Operation op = wsdl4jBindingOperation\n                 .getOperation();\n-        String input = op.getInput().getName();\n-        String output = op.getOutput().getName();\n-        if(\":none\".equals(input)) {\n-            input = null;\n+        String input = null;\n+        if(op != null && op.getInput() != null) {\n+            input = op.getInput().getName();\n+            if(\":none\".equals(input)) {\n+                input = null;\n+            }\n         }\n-        if(\":none\".equals(output)) {\n-            output = null;\n+        String output = null;\n+        if(op != null && op.getOutput() != null) {\n+            output = op.getOutput().getName();\n+            if(\":none\".equals(output)) {\n+                output = null;\n+            }\n         }\n         Operation op2 = portType.getOperation(op.getName(), input, output);\n         return ((op2 == null) ? op : op2);", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e304ee704324f15c9ddcb1d100a15a3afb55e4de", "parent": "https://github.com/apache/axis2-java/commit/7a1ebfce5b8a68e43ce95cafec792620efdcabc2", "message": "ooops NPE due to my change \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@463263 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_46", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/e304ee704324f15c9ddcb1d100a15a3afb55e4de/modules/kernel/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "blob_url": "https://github.com/apache/axis2-java/blob/e304ee704324f15c9ddcb1d100a15a3afb55e4de/modules/kernel/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "sha": "6a9b8a0c656478ac2d3e39a33210b67962d3b08b", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java?ref=e304ee704324f15c9ddcb1d100a15a3afb55e4de", "patch": "@@ -277,10 +277,12 @@ private void loadServicesFromWebInf() {\n         try {\n             InputStream servicexml = config.getServletContext().\n                     getResourceAsStream(\"/WEB-INF/services.xml\");\n-            AxisServiceGroup serviceGroup = DeploymentEngine.buildServiceGroup(servicexml,\n-                    Thread.currentThread().getContextClassLoader(),\n-                    \"annonServiceGroup\", axisConfig);\n-            axisConfig.addServiceGroup(serviceGroup);\n+            if (servicexml != null) {\n+                AxisServiceGroup serviceGroup = DeploymentEngine.buildServiceGroup(servicexml,\n+                        Thread.currentThread().getContextClassLoader(),\n+                        \"annonServiceGroup\", axisConfig);\n+                axisConfig.addServiceGroup(serviceGroup);\n+            }\n         } catch (AxisFault axisFault) {\n             log.info(axisFault);\n         }", "filename": "modules/kernel/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a93aa05c78221254ba9f18b0307920b1be9422d5", "parent": "https://github.com/apache/axis2-java/commit/a350561b0a8b0f4e8fb29bbc335197cd806d97e5", "message": "Prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@451681 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_47", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/a93aa05c78221254ba9f18b0307920b1be9422d5/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java", "blob_url": "https://github.com/apache/axis2-java/blob/a93aa05c78221254ba9f18b0307920b1be9422d5/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java", "sha": "d0c37d1290e2e4225e90c67367123a494215a100", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java?ref=a93aa05c78221254ba9f18b0307920b1be9422d5", "patch": "@@ -1375,7 +1375,7 @@ public void processAttribute(XmlSchemaAttribute att, BeanWriterMetaInfoHolder me\n                 \t\tObject type = baseSchemaTypeMap.get(attrTypeName);\r\n                 \t\tif (type == null) {\r\n                 \t\t\tXmlSchemaSimpleType simpleType = attribute.getSchemaType();\r\n-                            if(simpleType.getContent() instanceof XmlSchemaSimpleTypeRestriction) {\r\n+                            if(simpleType != null && simpleType.getContent() instanceof XmlSchemaSimpleTypeRestriction) {\r\n                                 XmlSchemaSimpleTypeRestriction restriction = (XmlSchemaSimpleTypeRestriction) simpleType.getContent();\r\n                                 QName baseTypeName = restriction.getBaseTypeName();\r\n                                 type = baseSchemaTypeMap.get(baseTypeName);\r", "filename": "modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/6deb3c0556a7d10a63bd41bba465cfe5e2f9d72c", "parent": "https://github.com/apache/axis2-java/commit/79f729b56b1da706cbe38b85c935baaea91cbc1a", "message": "Prevent NPE and throw a better exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@451361 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_48", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/6deb3c0556a7d10a63bd41bba465cfe5e2f9d72c/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/6deb3c0556a7d10a63bd41bba465cfe5e2f9d72c/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "dc3497b452a2877d8005e84f727e583073f01e54", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=6deb3c0556a7d10a63bd41bba465cfe5e2f9d72c", "patch": "@@ -505,6 +505,9 @@ private void processBinding(\n                     Object faultMapKey = faultKeys.next();\n                     BindingFault bindingFault = (BindingFault) bindingFaultsMap.get(faultMapKey);\n                     Fault wsdl4jFault = wsdl4jOperation.getFault(bindingFault.getName());\n+                    if(wsdl4jFault == null) {\n+                        throw new AxisFault(\"fault \\\"\" + bindingFault.getName() + \"\\\" not found in the Operation \" + wsdl4jOperation.getName());\n+                    }\n                     AxisMessage faultMessage = findFaultMessage(wsdl4jFault.getMessage().getQName().getLocalPart(), operation.getFaultMessages());\n \n                     AddQNameReference(faultMessage, wsdl4jFault.getMessage());", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/4ebe016853eec6627de32ff182e3d1d9d4c9d7a4", "parent": "https://github.com/apache/axis2-java/commit/9037e5cef394b07137112ad5a9a18a60be69fa27", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@448920 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_49", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/4ebe016853eec6627de32ff182e3d1d9d4c9d7a4/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/4ebe016853eec6627de32ff182e3d1d9d4c9d7a4/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "80feef11ac88dd2fd98ff01b298a0f7adb5aa179", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=4ebe016853eec6627de32ff182e3d1d9d4c9d7a4", "patch": "@@ -674,7 +674,7 @@ private void AddQNameReference(AxisMessage outMessage,\n                                 (QName) resolvedRpcWrappedElementMap.get(\n                                         wsdl4jOperation.getName() + WRAPPED_OUTPUTNAME_SUFFIX));\n \n-                    } else {\n+                    } else if(wsdl4jMessage != null){\n                         //pick the first part from the list and take that as the relevant part\n                         //it is somewhat questionable whether the first part gets picked\n                         //but we'll have to take a chance here", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9037e5cef394b07137112ad5a9a18a60be69fa27", "parent": "https://github.com/apache/axis2-java/commit/d1da1158c24cde3b63960399f1cd1c579926bbaa", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@448919 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_50", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/9037e5cef394b07137112ad5a9a18a60be69fa27/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/9037e5cef394b07137112ad5a9a18a60be69fa27/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "775259daf770a5ea544e9f0c546832b717dd1421", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=9037e5cef394b07137112ad5a9a18a60be69fa27", "patch": "@@ -562,7 +562,7 @@ private void AddQNameReference(AxisMessage inMessage,\n                         //the list and add it - the name for this is just the\n                         inMessage.setElementQName((QName) resolvedRpcWrappedElementMap.get(wsdl4jOperation.getName()));\n \n-                    } else {\n+                    } else if(wsdl4jMessage != null) {\n                         //pick the first part from the list and take that as the relevant part\n                         //it is somewhat questionnable whether the first part gets picked\n                         //but we'll have to take a chance here", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a052b4894604c812605e35d4020188f8210f0474", "parent": "https://github.com/apache/axis2-java/commit/c813da232b97ab742ef07e0f4acc1c25dcd70617", "message": "Fixing a possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@442311 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_51", "file": [{"additions": 47, "raw_url": "https://github.com/apache/axis2-java/raw/a052b4894604c812605e35d4020188f8210f0474/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java", "blob_url": "https://github.com/apache/axis2-java/blob/a052b4894604c812605e35d4020188f8210f0474/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java", "sha": "e7212c97f4a1634ab4d2668f4cfa3b0dceb0ff18", "changes": 87, "status": "modified", "deletions": 40, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java?ref=a052b4894604c812605e35d4020188f8210f0474", "patch": "@@ -24,117 +24,124 @@\n import org.apache.commons.logging.LogFactory;\r\n \r\n public class AddressingHelper {\r\n-    \r\n+\r\n     private static final Log log = LogFactory.getLog(AddressingHelper.class);\r\n-    \r\n+\r\n     /**\r\n      * Returns true if the ReplyTo address does not match one of the supported\r\n      * anonymous urls. If the ReplyTo is not set, anonymous is assumed, per the Final\r\n-     * spec. The AddressingInHandler should have set the ReplyTo to non-null in the \r\n+     * spec. The AddressingInHandler should have set the ReplyTo to non-null in the\r\n      * 2004/08 case to ensure the different semantics. (per AXIS2-885)\r\n-     * \r\n+     *\r\n      * @param messageContext\r\n      * @return\r\n      */\r\n-    public static boolean isReplyRedirected(MessageContext messageContext){\r\n+    public static boolean isReplyRedirected(MessageContext messageContext) {\r\n         EndpointReference replyTo = messageContext.getReplyTo();\r\n-        if(replyTo == null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (replyTo == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"isReplyRedirected: ReplyTo is null. Returning false\");\r\n             }\r\n             return false;\r\n-        }else{\r\n+        } else {\r\n             return !replyTo.hasAnonymousAddress();\r\n         }\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Returns true if the FaultTo address does not match one of the supported\r\n      * anonymous urls. If the FaultTo is not set, the ReplyTo is checked per the\r\n-     * spec. \r\n-     * @see isReplyRedirected\r\n+     * spec.\r\n+     *\r\n      * @param messageContext\r\n      * @return\r\n+     * @see isReplyRedirected\r\n      */\r\n-    public static boolean isFaultRedirected(MessageContext messageContext){\r\n+    public static boolean isFaultRedirected(MessageContext messageContext) {\r\n         EndpointReference faultTo = messageContext.getFaultTo();\r\n-        if(faultTo == null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (faultTo == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"isReplyRedirected: FaultTo is null. Returning isReplyRedirected\");\r\n             }\r\n             return isReplyRedirected(messageContext);\r\n-        }else{\r\n-            return !faultTo.hasAnonymousAddress(); \r\n+        } else {\r\n+            return !faultTo.hasAnonymousAddress();\r\n         }\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Extract the Parameter repreesnting the Anonymous flag from the AxisOperation\r\n      * and return the String value. Return the default of \"optional\" if not specified.\r\n+     *\r\n      * @param axisOperation\r\n      * @return\r\n      */\r\n-    public static String getAnonymousParameterValue(AxisOperation axisOperation){\r\n-        String value = Utils.getParameterValue(axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME));\r\n-        if(log.isDebugEnabled()){\r\n-            log.debug(\"getAnonymousParameterValue: value: '\"+value+\"'\");\r\n+    public static String getAnonymousParameterValue(AxisOperation axisOperation) {\r\n+        String value = \"\";\r\n+        if (axisOperation != null) {\r\n+            value = Utils.getParameterValue(axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME));\r\n+            if (log.isDebugEnabled()) {\r\n+                log.debug(\"getAnonymousParameterValue: value: '\" + value + \"'\");\r\n+            }\r\n         }\r\n-        if(value == null || \"\".equals(value.trim())){\r\n+\r\n+        if (value == null || \"\".equals(value.trim())) {\r\n             value = \"optional\";\r\n         }\r\n         return value.trim();\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Set the value of an existing unlocked Parameter representing Anonymous or add a new one if one\r\n      * does not exist. If a locked Parameter of the same name already exists the method will trace and\r\n      * return.\r\n+     *\r\n      * @param axisOperation\r\n      * @param value\r\n      */\r\n-    public static void setAnonymousParameterValue(AxisOperation axisOperation, String value){\r\n-        if(value == null){\r\n-            if(log.isDebugEnabled()){\r\n+    public static void setAnonymousParameterValue(AxisOperation axisOperation, String value) {\r\n+        if (value == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: value passed in is null. return\");\r\n             }\r\n             return;\r\n         }\r\n-        \r\n+\r\n         Parameter param = axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME);\r\n         // If an existing parameter exists\r\n-        if(param !=null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (param != null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: Parameter already exists\");\r\n             }\r\n             // and is not locked\r\n-            if(!param.isLocked()){\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: Parameter not locked. Setting value: \"+value);\r\n+            if (!param.isLocked()) {\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: Parameter not locked. Setting value: \" + value);\r\n                 }\r\n                 // set the value\r\n                 param.setValue(value);\r\n             }\r\n-        }else{\r\n+        } else {\r\n             // otherwise, if no Parameter exists\r\n-            if(log.isDebugEnabled()){\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: Parameter does not exist\");\r\n             }\r\n             // Create new Parameter with correct name/value\r\n             param = new Parameter();\r\n             param.setName(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME);\r\n             param.setValue(value);\r\n-            try{\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: Adding parameter with value: \"+value);\r\n+            try {\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: Adding parameter with value: \" + value);\r\n                 }\r\n                 // and add it to the AxisOperation object\r\n                 axisOperation.addParameter(param);\r\n-            }catch(AxisFault af){\r\n+            } catch (AxisFault af) {\r\n                 // This should not happen. AxisFault is only ever thrown when a locked Parameter\r\n                 // of the same name already exists and this should be dealt with by the outer\r\n                 // if statement.\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: addParameter failed: \"+af.getMessage());\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: addParameter failed: \" + af.getMessage());\r\n                 }\r\n             }\r\n         }\r", "filename": "modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/120da26c0d89e8ab6c57316db472c6d411ee0ff7", "parent": "https://github.com/apache/axis2-java/commit/5ddf56e84bf59ab4e2532b659198c0960fe4593d", "message": "Fix NPE when AxisOperation is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@439267 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_52", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/120da26c0d89e8ab6c57316db472c6d411ee0ff7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/120da26c0d89e8ab6c57316db472c6d411ee0ff7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java", "sha": "bb41b8ab39857294fa16b60f94ada66d16c00234", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java?ref=120da26c0d89e8ab6c57316db472c6d411ee0ff7", "patch": "@@ -34,13 +34,13 @@\n      * @see org.apache.axis2.engine.Handler#invoke(org.apache.axis2.context.MessageContext)\n      */\n     public void invoke(MessageContext msgContext) throws AxisFault {\n+    \t// If no AxisOperation has been found at the end of the dispatch phase and addressing\n+        // is in use we should throw an ActionNotSupported Fault\n+        checkAction(msgContext);\n         // Check that if wsaddressing=required that addressing headers were found inbound\n         checkUsingAddressing(msgContext);\n         // Check that if anonymous flag is in effect that the replyto and faultto are valid\n         checkAnonymous(msgContext);\n-        // If no AxisOperation has been found at the end of the dispatch phase and addressing\n-        // is in use we should throw and ActionNotSupported Fault\n-        checkAction(msgContext);\n     }\n     \n     /**", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingWSDLValidationHandler.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d13d9f9ef026e7c46edd38607d0c414430ad327e", "parent": "https://github.com/apache/axis2-java/commit/e8ce717e06ce529184db0cf2efd6581b29010347", "message": "prevent NPE's if parentMetaInf is not available\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@438001 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_53", "file": [{"additions": 14, "raw_url": "https://github.com/apache/axis2-java/raw/d13d9f9ef026e7c46edd38607d0c414430ad327e/modules/adb-codegen/src/org/apache/axis2/schema/writer/JavaBeanWriter.java", "blob_url": "https://github.com/apache/axis2-java/blob/d13d9f9ef026e7c46edd38607d0c414430ad327e/modules/adb-codegen/src/org/apache/axis2/schema/writer/JavaBeanWriter.java", "sha": "65202912c24d8e7966d87c1e11dd9fcf0987b273", "changes": 26, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/src/org/apache/axis2/schema/writer/JavaBeanWriter.java?ref=d13d9f9ef026e7c46edd38607d0c414430ad327e", "patch": "@@ -571,7 +571,7 @@ private void addPropertyEntries(BeanWriterMetaInfoHolder metainf,\n             String javaName = makeUniqueJavaClassName(propertyNames, xmlName);\n             XSLTUtils.addAttribute(model, \"javaname\", javaName, property);\n \n-            if (metainf.isRestriction() && missingQNames.contains(name)) {\n+            if (parentMetaInf != null && metainf.isRestriction() && missingQNames.contains(name)) {\n             \tjavaClassNameForElement = parentMetaInf.getClassNameForQName(name);\n             }\n             else {\n@@ -650,7 +650,7 @@ private void addPropertyEntries(BeanWriterMetaInfoHolder metainf,\n             XSLTUtils.addAttribute(model, \"minOccurs\", minOccurs + \"\", property);\n             \n             //in the case the original element is an array but the derived one is not.\n-            if (metainf.isRestriction() && !missingQNames.contains(name) &&\n+            if (parentMetaInf != null && metainf.isRestriction() && !missingQNames.contains(name) &&\n                (parentMetaInf.getArrayStatusForQName(name) && !metainf.getArrayStatusForQName(name))) {\n             \t\n             \tXSLTUtils.addAttribute(model, \"rewrite\", \"yes\", property);\n@@ -746,8 +746,8 @@ else if (metainf.isRestriction() && !missingQNames.contains(name) &&\n \n     private void addMissingQNames(BeanWriterMetaInfoHolder metainf, ArrayList qName, ArrayList missingQNames) {\n     \t\n-    \tQName[] qNames;\n-        QName[] pQNames;\n+    \tQName[] qNames = null;\n+        QName[] pQNames = null;\n         \n         BeanWriterMetaInfoHolder parentMetaInf = metainf.getParent();\n         \n@@ -757,14 +757,16 @@ private void addMissingQNames(BeanWriterMetaInfoHolder metainf, ArrayList qName,\n             qNames = metainf.getQNameArray();\n         }\n         \n-        if (parentMetaInf.isOrdered()) {\n-            pQNames = parentMetaInf.getOrderedQNameArray();\n-        } else {\n-            pQNames = parentMetaInf.getQNameArray();\n+        if (parentMetaInf != null) {\n+            if (parentMetaInf.isOrdered()) {\n+                pQNames = parentMetaInf.getOrderedQNameArray();\n+            } else {\n+                pQNames = parentMetaInf.getQNameArray();\n+            }\n         }\n         \n         \n-        for (int i=0; i < pQNames.length; i++) {\n+        for (int i=0; pQNames != null && i < pQNames.length; i++) {\n        \t\tif (qNameNotFound(pQNames[i], metainf)) {\n        \t\t\tmissingQNames.add(pQNames[i]);\n        \t\t}\n@@ -804,7 +806,7 @@ private boolean typeChanged(QName qname, ArrayList missingQNames, BeanWriterMeta\n     \t\n     \tBeanWriterMetaInfoHolder parentMetainf = metainf.getParent(); \n         \n-    \tif (!missingQNames.contains(qname)) {\n+    \tif (parentMetainf != null && !missingQNames.contains(qname)) {\n     \t\t\n     \t\tif (parentMetainf.isOrdered()) {\n     \t\t\tpQNames = parentMetainf.getOrderedQNameArray();\n@@ -846,7 +848,7 @@ private boolean minOccursChanged(QName qname, ArrayList missingQNames, BeanWrite\n     \t\n     \tBeanWriterMetaInfoHolder parentMetainf = metainf.getParent(); \n         \t\n-    \tif (!missingQNames.contains(qname)) {\n+    \tif (parentMetainf != null && !missingQNames.contains(qname)) {\n     \t\t\n     \t\tif (parentMetainf.isOrdered()) {\n     \t\t\tpQNames = parentMetainf.getOrderedQNameArray();\n@@ -877,7 +879,7 @@ private boolean maxOccursChanged(QName qname, ArrayList missingQNames, BeanWrite\n     \t\n     \tBeanWriterMetaInfoHolder parentMetainf = metainf.getParent();\n     \t\n-    \tif (!missingQNames.contains(qname)) {\t\n+    \tif (parentMetainf != null && !missingQNames.contains(qname)) {\t\n     \t\tif (parentMetainf.isOrdered()) {\n     \t\t\tpQNames = parentMetainf.getOrderedQNameArray();\n     \t\t} else {", "filename": "modules/adb-codegen/src/org/apache/axis2/schema/writer/JavaBeanWriter.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b", "parent": "https://github.com/apache/axis2-java/commit/9e4fdaf900acd6982eac99a6b42b735d3d645de3", "message": "prevent NPE's and add context info in exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@437065 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_54", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/codegen/src/org/apache/axis2/wsdl/codegen/emitter/AxisServiceBasedMultiLanguageEmitter.java", "blob_url": "https://github.com/apache/axis2-java/blob/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/codegen/src/org/apache/axis2/wsdl/codegen/emitter/AxisServiceBasedMultiLanguageEmitter.java", "sha": "d4f93d481036039d417de94b6cc334bd277587b3", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/wsdl/codegen/emitter/AxisServiceBasedMultiLanguageEmitter.java?ref=2c24d643ef82b7bac17fbe8e0826fdcff48ca56b", "patch": "@@ -1781,6 +1781,10 @@ protected Element getOutputElement(Document doc, AxisOperation operation, List h\n                 paramElement = doc.createElement(\"param\");\n                 msg = (AxisMessage) faultMessages.get(i);\n \n+                if(msg.getElementQName() == null) {\n+                    throw new RuntimeException(\"Element QName is null for \" + msg.getName() + \"!\");\n+                }\n+\n                 //as for the name of a fault, we generate an exception\n                 addAttribute(doc, \"name\",\n                         (String) fullyQualifiedFaultClassNameMap.get(msg.getElementQName()),", "filename": "modules/codegen/src/org/apache/axis2/wsdl/codegen/emitter/AxisServiceBasedMultiLanguageEmitter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/kernel/src/org/apache/axis2/description/AxisService2OM.java", "blob_url": "https://github.com/apache/axis2-java/blob/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/kernel/src/org/apache/axis2/description/AxisService2OM.java", "sha": "09719acd9ca10d85d8246c57a5f6b0f9f8dfbe8f", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/AxisService2OM.java?ref=2c24d643ef82b7bac17fbe8e0826fdcff48ca56b", "patch": "@@ -256,6 +256,9 @@ private void generateHeaderMessages(AxisMessage axismessage, OMFactory fac,\n                     wsdl);\r\n             messageElement.addChild(messagePart);\r\n             messagePart.addAttribute(ATTRIBUTE_NAME, header.part(), null);\r\n+            if(header.getElement()==null){\r\n+                throw new RuntimeException(ELEMENT_ATTRIBUTE_NAME + \" is null for \" +  header.getMessage());\r\n+            }\r\n             messagePart.addAttribute(ELEMENT_ATTRIBUTE_NAME, getPrefix(header\r\n                     .getElement().getNamespaceURI())\r\n                     + \":\" + header.getElement().getLocalPart(), null);\r", "filename": "modules/kernel/src/org/apache/axis2/description/AxisService2OM.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/2c24d643ef82b7bac17fbe8e0826fdcff48ca56b/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "45632b325aa305dd2341be6f495a484c3181ab3f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=2c24d643ef82b7bac17fbe8e0826fdcff48ca56b", "patch": "@@ -600,7 +600,7 @@ private void processPartsList(List bindingPartsList, Message wsdl4jMessage, Axis\n             if (wsdl4jMessagePart.getElementName() == null) {\n                 //this cannot be done - we need to have a\n                 //element reference\n-                throw new WSDLProcessingException(\"Element reference missing!\");\n+                throw new WSDLProcessingException(\"Element reference missing for \" + bindingPartsList.get(0) + \"!\" );\n             }\n             inMessage.setElementQName(wsdl4jMessagePart.getElementName());\n ", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e2d282bf136a29afdd89533060787fbec8a89c91", "parent": "https://github.com/apache/axis2-java/commit/fc3986691860dae1eff7c8e8842dcfcbf3c4904d", "message": "Prevent NPE if the message part is not found.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@431629 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_55", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/e2d282bf136a29afdd89533060787fbec8a89c91/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/e2d282bf136a29afdd89533060787fbec8a89c91/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "908c697887b7d77fd204cff048a65cd0dd797232", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=e2d282bf136a29afdd89533060787fbec8a89c91", "patch": "@@ -1551,6 +1551,10 @@ private void copyExtensibleElements(List wsdl4jExtensibleElements,\n                         throw new AxisFault(\"message \" + soapHeader.getMessage() + \" not found in the WSDL \");\r\n                     }\r\n                     Part msgPart = msg.getPart(soapHeader.getPart());\r\n+                    if (msgPart == null) {\r\n+                        //todo i18n this\r\n+                        throw new AxisFault(\"message part \" + soapHeader.getPart() + \" not found in the WSDL \");\r\n+                    }\r\n                     headerMessage.setElement(msgPart.getElementName());\r\n                 }\r\n                 headerMessage.setMessage(soapHeader.getMessage());\r", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/404a6a33c9ad510a2bde852e98eae37feabfecde", "parent": "https://github.com/apache/axis2-java/commit/dc1f26da09b8afa9ec8175583d383b2a78b85117", "message": "AXIS2-930\nNPE Fix\nContributor: Nick Gallardo\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@426787 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_56", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/404a6a33c9ad510a2bde852e98eae37feabfecde/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/XMLSpineImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/404a6a33c9ad510a2bde852e98eae37feabfecde/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/XMLSpineImpl.java", "sha": "9eb97af8526f434685e6748e59fa7047f0bcc040", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/XMLSpineImpl.java?ref=404a6a33c9ad510a2bde852e98eae37feabfecde", "patch": "@@ -106,11 +106,14 @@ private void init(SOAPEnvelope envelope) throws MessageException {\n \t\tbodyIterator = null;\r\n \t\t\r\n \t\t\r\n-\t\t// Create an OMBlock for each header element\r\n+\t\t// If a header block exists, create an OMBlock for each element\r\n \t\t// This advances the StAX parser past the header end tag\r\n \t\tSOAPHeader header = root.getHeader();\r\n-\t\tIterator it = header.getChildren();\r\n-\t\tadvanceIterator(it, headerBlocks, true);\r\n+\t\tif (header != null) {\r\n+            Iterator it = header.getChildren();\r\n+            advanceIterator(it, headerBlocks, true);            \r\n+        }\r\n+\r\n \t\t\r\n \t\tSOAPBody body = root.getBody();\r\n \t\tif (!body.hasFault()) {\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/impl/XMLSpineImpl.java"}, {"additions": 48, "raw_url": "https://github.com/apache/axis2-java/raw/404a6a33c9ad510a2bde852e98eae37feabfecde/modules/jaxws/test/org/apache/axis2/jaxws/message/MessageTests.java", "blob_url": "https://github.com/apache/axis2-java/blob/404a6a33c9ad510a2bde852e98eae37feabfecde/modules/jaxws/test/org/apache/axis2/jaxws/message/MessageTests.java", "sha": "40a3e458b1f3feff462ad7f6d10f219fbc93a8ad", "changes": 54, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/message/MessageTests.java?ref=404a6a33c9ad510a2bde852e98eae37feabfecde", "patch": "@@ -48,11 +48,11 @@\n public class MessageTests extends TestCase {\r\n \r\n \t// String test variables\r\n-    private static final String sampleEnvelopeHeader =\r\n+    private static final String sampleEnvelopeHead =\r\n         \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\" +\r\n         \"<soapenv:Header /><soapenv:Body>\";\r\n     \r\n-    private static final String sampleEnvelopeFooter = \r\n+    private static final String sampleEnvelopeTail = \r\n         \"</soapenv:Body></soapenv:Envelope>\";\r\n     \r\n     private static final String sampleText =\r\n@@ -62,20 +62,26 @@\n \t\t\"</pre:a>\";\r\n \t\r\n     private static final String sampleEnvelope = \r\n-        sampleEnvelopeHeader +\r\n+        sampleEnvelopeHead +\r\n         sampleText +\r\n-        sampleEnvelopeFooter;\r\n+        sampleEnvelopeTail;\r\n         \r\n     private static final String sampleJAXBText = \r\n         \"<echoStringResponse xmlns=\\\"http://test\\\">\" +\r\n         \"<echoStringReturn>sample return value</echoStringReturn>\" + \r\n         \"</echoStringResponse>\";\r\n     \r\n     private static final String sampleJAXBEnvelope = \r\n-        sampleEnvelopeHeader + \r\n+        sampleEnvelopeHead + \r\n         sampleJAXBText + \r\n-        sampleEnvelopeFooter;\r\n+        sampleEnvelopeTail;\r\n \r\n+    private static final String sampleEnvelopeNoHeader =\r\n+        \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\" +\r\n+        \"<soapenv:Body>\" + \r\n+        sampleText + \r\n+        \"</soapenv:Body></soapenv:Envelope>\";\r\n+    \r\n \tprivate static final QName sampleQName = new QName(\"urn://sample\", \"a\");\r\n \t\r\n \tprivate static XMLInputFactory inputFactory = XMLInputFactory.newInstance();\r\n@@ -263,6 +269,42 @@ public void testStringInflow2() throws Exception {\n \t\t\r\n \t}\r\n     \r\n+    /**\r\n+     * Create a Block representing an XMLString, but this time use one that\r\n+     * doesn't have a &lt;soap:Header&gt; element in it.\r\n+     * @throws Exception\r\n+     */\r\n+    public void testStringInflow3() throws Exception {\r\n+        \r\n+        // On inbound, there will already be an OM\r\n+        // which represents the message.  The following code simulates the input\r\n+        // OM\r\n+        StringReader sr = new StringReader(sampleEnvelopeNoHeader);\r\n+        XMLStreamReader inflow = inputFactory.createXMLStreamReader(sr);\r\n+        StAXSOAPModelBuilder builder = new StAXSOAPModelBuilder(inflow, null);\r\n+        OMElement omElement = builder.getSOAPEnvelope();\r\n+        \r\n+        // The JAX-WS layer creates a Message from the OM\r\n+        MessageFactory mf = (MessageFactory)\r\n+            FactoryRegistry.getFactory(MessageFactory.class);\r\n+        Message m = mf.createFrom(omElement);\r\n+        \r\n+        // The next thing that will happen\r\n+        // is the proxy code will ask for the business object (String).\r\n+        XMLStringBlockFactory blockFactory = \r\n+            (XMLStringBlockFactory) FactoryRegistry.getFactory(XMLStringBlockFactory.class);\r\n+        Block block = m.getBodyBlock(0, null, blockFactory);\r\n+        Object bo = block.getBusinessObject(true);\r\n+        assertTrue(bo instanceof String);\r\n+        \r\n+        // The block should be consumed\r\n+        assertTrue(block.isConsumed());\r\n+        \r\n+        // Check the String for accuracy\r\n+        assertTrue(sampleText.equals(bo.toString()));\r\n+        \r\n+    }\r\n+    \r\n     /**\r\n      * Create a JAXBBlock containing a JAX-B business object \r\n      * and simulate a normal Dispatch<Object> output flow\r", "filename": "modules/jaxws/test/org/apache/axis2/jaxws/message/MessageTests.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/f7b42f147f8190f505f1ed61a59a0650536d642a", "parent": "https://github.com/apache/axis2-java/commit/a5b324bd8977918656580e7cbeb1d512357e5575", "message": "Fixing a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@409974 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_57", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/f7b42f147f8190f505f1ed61a59a0650536d642a/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/f7b42f147f8190f505f1ed61a59a0650536d642a/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "sha": "2c2bad04a49d45dfce6e91e51a5d1d99c666ed9f", "changes": 9, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java?ref=f7b42f147f8190f505f1ed61a59a0650536d642a", "patch": "@@ -80,10 +80,11 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n             AxisService service = inMessage.getAxisService();\r\n             OMElement methodElement = inMessage.getEnvelope().getBody()\r\n                     .getFirstElement();\r\n-            AxisMessage inaxisMessage = op.getMessage(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\r\n+            AxisMessage inAxisMessage = op.getMessage(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\r\n             String messageNameSpace = null;\r\n-            if (inaxisMessage != null) {\r\n-                messageNameSpace = inaxisMessage.getElementQName().getNamespaceURI();\r\n+            QName elementQName = null;\r\n+            if (inAxisMessage != null && (elementQName = inAxisMessage.getElementQName()) != null) {\r\n+                messageNameSpace = elementQName.getNamespaceURI();\r\n             }\r\n \r\n             OMNamespace namespace = methodElement.getNamespace();\r\n@@ -113,7 +114,7 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n \r\n             // Handling the response\r\n             AxisMessage outaxisMessage = op.getMessage(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\r\n-            if (inaxisMessage != null) {\r\n+            if (inAxisMessage != null) {\r\n                 messageNameSpace = outaxisMessage.getElementQName().getNamespaceURI();\r\n             }\r\n \r", "filename": "modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c1b61d63cf81978775cdc2606c9e7ed2b9d6a9d3", "parent": "https://github.com/apache/axis2-java/commit/8fbad22f29cbed1a1bbf0ceb0c63032a1cce93e6", "message": "-fixing NPE in Sc\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@407764 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_58", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/c1b61d63cf81978775cdc2606c9e7ed2b9d6a9d3/modules/core/src/org/apache/axis2/client/ServiceClient.java", "blob_url": "https://github.com/apache/axis2-java/blob/c1b61d63cf81978775cdc2606c9e7ed2b9d6a9d3/modules/core/src/org/apache/axis2/client/ServiceClient.java", "sha": "852f3899c92735c2ddaa43d0f2c1b46bef45c997", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/client/ServiceClient.java?ref=c1b61d63cf81978775cdc2606c9e7ed2b9d6a9d3", "patch": "@@ -187,6 +187,8 @@ private void initializeTransports(ConfigurationContext configContext) throws Axi\n                         createConfigurationContextFromFileSystem(null, null);\n                 trsManager = new ListenerManager();\n                 trsManager.init(this.configContext);\n+            } else {\n+                this.configContext = ListenerManager.defaultConfigurationContext;\n             }\n         }\n     }", "filename": "modules/core/src/org/apache/axis2/client/ServiceClient.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3b37d96fe15fa0472cd36796d4546acd09ac5e8f", "parent": "https://github.com/apache/axis2-java/commit/90a9e0b4ee8c447914e9257e0371154fcebaf597", "message": "throw better exception and prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@407446 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_59", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/3b37d96fe15fa0472cd36796d4546acd09ac5e8f/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "blob_url": "https://github.com/apache/axis2-java/blob/3b37d96fe15fa0472cd36796d4546acd09ac5e8f/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "sha": "5a76b0e067c1d30bf571613822f45b267b12fcdb", "changes": 14, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java?ref=3b37d96fe15fa0472cd36796d4546acd09ac5e8f", "patch": "@@ -65,8 +65,11 @@ public WarBasedAxisConfigurator(ServletConfig svconfig) {\n                     }\r\n                 }\r\n             }\r\n-\r\n-\r\n+            if(axisConfig == null) {\r\n+                throw new RuntimeException(\"Unable to load axis2.xml configuration\");\r\n+            }\r\n+            Parameter unableHttp = new Parameter(\"enableHTTP\", \"true\");\r\n+            axisConfig.addParameter(unableHttp);\r\n         } catch (FileNotFoundException e) {\r\n             log.info(e.getMessage());\r\n         } catch (DeploymentException e) {\r\n@@ -75,13 +78,6 @@ public WarBasedAxisConfigurator(ServletConfig svconfig) {\n             log.info(e.getMessage());\r\n         } catch (IOException e) {\r\n             log.info(e.getMessage());\r\n-        } finally {\r\n-            try {\r\n-                Parameter unableHttp = new Parameter(\"enableHTTP\", \"true\");\r\n-                axisConfig.addParameter(unableHttp);\r\n-            } catch (AxisFault axisFault) {\r\n-                log.info(axisFault.getMessage());\r\n-            }\r\n         }\r\n     }\r\n \r", "filename": "modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/0ea0f65123b523ed9b97a46bcc40cba0e3029c44", "parent": "https://github.com/apache/axis2-java/commit/2d1d1d7c10fdca4c39678f2f58ef0e997ee4a5ed", "message": "protect against NPE's - cleanup improper checks for null\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@397628 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_60", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/0ea0f65123b523ed9b97a46bcc40cba0e3029c44/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/0ea0f65123b523ed9b97a46bcc40cba0e3029c44/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "sha": "e27132282b4cc87fd9d61c4d21da14fd1aaa71e5", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java?ref=0ea0f65123b523ed9b97a46bcc40cba0e3029c44", "patch": "@@ -142,10 +142,9 @@ protected void configProxyAuthentication(HttpClient client,\n                 proxyPort = proxyProperties.getProxyPort();\r\n             }\r\n \r\n-            if (!proxyProperties.getProxyHostName().equals(\"\")\r\n-                    || (proxyProperties.getProxyHostName() != null)) {\r\n-                proxyHostName = proxyProperties.getProxyHostName();\r\n-            } else {\r\n+            proxyHostName = proxyProperties.getProxyHostName();\r\n+            if (proxyHostName == null\r\n+                    || proxyHostName.length() == 0) {\r\n                 throw new AxisFault(\"Proxy Name is not valid\");\r\n             }\r\n \r", "filename": "modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/0ea0f65123b523ed9b97a46bcc40cba0e3029c44/modules/core/src/org/apache/axis2/transport/http/HttpTransportProperties.java", "blob_url": "https://github.com/apache/axis2-java/blob/0ea0f65123b523ed9b97a46bcc40cba0e3029c44/modules/core/src/org/apache/axis2/transport/http/HttpTransportProperties.java", "sha": "4ddbc682979acd796a5a3bcfd9963e2d2d4b6b7d", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/HttpTransportProperties.java?ref=0ea0f65123b523ed9b97a46bcc40cba0e3029c44", "patch": "@@ -64,15 +64,15 @@ public ProxyProperties() {\n         }\n \n         public String getDomain() {\n-            if (domain.equals(\"\") || (domain == null)) {\n+            if (domain == null || domain.length() == 0) {\n                 return \"anonymous\";\n             } else {\n                 return domain;\n             }\n         }\n \n         public String getPassWord() {\n-            if (passWord.equals(\"\") || (passWord == null)) {\n+            if (passWord == null || passWord.length() == 0) {\n                 return \"anonymous\";\n             } else {\n                 return passWord;\n@@ -88,7 +88,7 @@ public int getProxyPort() {\n         }\n \n         public String getUserName() {\n-            if (userName.equals(\"\") || (userName == null)) {\n+            if (userName == null || userName.length() == 0) {\n                 return \"anonymous\";\n             } else {\n                 return userName;", "filename": "modules/core/src/org/apache/axis2/transport/http/HttpTransportProperties.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/ba54d5aaf13444359652c993d6c219b6e3c87cfb", "parent": "https://github.com/apache/axis2-java/commit/6f8739b94caec3d2f1154d7074f9c1ae2c6d8bb9", "message": "- updating release notes\n- fixing npe in rest\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@392519 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_61", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "blob_url": "https://github.com/apache/axis2-java/blob/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java", "sha": "a875d466bcb3207cf97b126e0f49c2fbfbb7c99a", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java?ref=ba54d5aaf13444359652c993d6c219b6e3c87cfb", "patch": "@@ -76,11 +76,9 @@ public WarBasedAxisConfigurator(ServletConfig config) {\n                     } catch (Exception e) {\r\n                         deploymentEngine.loadFromClassPath();\r\n                     }\r\n-                    deploymentEngine.loadFromClassPath();\r\n                 }\r\n             }\r\n-            Parameter unableHttp = new Parameter(\"enableREST\", \"true\");\r\n-            axisConfig.addParameter(unableHttp);\r\n+\r\n         } catch (FileNotFoundException e) {\r\n             log.info(e.getMessage());\r\n         } catch (DeploymentException e) {\r\n@@ -89,6 +87,13 @@ public WarBasedAxisConfigurator(ServletConfig config) {\n             log.info(e.getMessage());\r\n         } catch (IOException e) {\r\n             log.info(e.getMessage());\r\n+        } finally {\r\n+            try {\r\n+                Parameter unableHttp = new Parameter(\"enableREST\", \"true\");\r\n+                axisConfig.addParameter(unableHttp);\r\n+            } catch (AxisFault axisFault) {\r\n+                log.info(axisFault.getMessage());\r\n+            }\r\n         }\r\n     }\r\n \r", "filename": "modules/core/src/org/apache/axis2/deployment/WarBasedAxisConfigurator.java"}, {"additions": 29, "raw_url": "https://github.com/apache/axis2-java/raw/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/description/AxisService2OM.java", "blob_url": "https://github.com/apache/axis2-java/blob/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/description/AxisService2OM.java", "sha": "3a04f20324fa8d1f717cc976c54f2a42384fe757", "changes": 71, "status": "modified", "deletions": 42, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/description/AxisService2OM.java?ref=ba54d5aaf13444359652c993d6c219b6e3c87cfb", "patch": "@@ -4,25 +4,20 @@\n import org.apache.axiom.om.OMElement;\r\n import org.apache.axiom.om.OMFactory;\r\n import org.apache.axiom.om.OMNamespace;\r\n-import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.axiom.om.impl.builder.StAXOMBuilder;\r\n import org.apache.axiom.om.impl.llom.factory.OMXMLBuilderFactory;\r\n-\n import org.apache.axis2.wsdl.SOAPHeaderMessage;\r\n import org.apache.axis2.wsdl.WSDLConstants;\r\n import org.apache.ws.java2wsdl.Java2WSDLConstants;\r\n-\r\n import org.apache.ws.policy.Policy;\r\n import org.apache.ws.policy.PolicyReference;\r\n import org.apache.ws.policy.util.PolicyFactory;\r\n-import org.apache.ws.policy.util.PolicyWriter;\r\n import org.apache.ws.policy.util.StAXPolicyWriter;\r\n-import org.apache.wsdl.extensions.SOAPHeader;\r\n \r\n import javax.xml.namespace.QName;\r\n-import javax.xml.stream.FactoryConfigurationError;\r\n import javax.xml.stream.XMLInputFactory;\r\n-import javax.xml.stream.XMLStreamException;\r\n import javax.xml.stream.XMLStreamReader;\r\n+import javax.xml.stream.XMLStreamException;\r\n import java.io.ByteArrayInputStream;\r\n import java.io.ByteArrayOutputStream;\r\n import java.io.StringWriter;\r\n@@ -294,9 +289,8 @@ private void generatePortType(OMFactory fac,\n                     operation.addChild(fault);\r\n                 }\r\n             }\r\n-            \r\n-           \r\n-            \r\n+\r\n+\r\n         }\r\n     }\r\n \r\n@@ -309,14 +303,14 @@ public void generateService(OMFactory fac,\n         defintions.addChild(service);\r\n         service.addAttribute(ATTRIBUTE_NAME, axisService.getName(), null);\r\n         generateSOAP11Port(fac, service);\r\n-        generateSOAP12Port(fac, service);\n-        \r\n+        generateSOAP12Port(fac, service);\r\n+\r\n         addPolicy(PolicyInclude.SERVICE_POLICY, axisService.getPolicyInclude(), service, fac);\r\n-        \n+\r\n         if (generateHttp) {\r\n             generateHTTPPort(fac, service);\r\n         }\r\n-\n+\r\n     }\r\n \r\n     private void generateSOAP11Port(OMFactory fac, OMElement service) throws Exception {\r\n@@ -329,11 +323,11 @@ private void generateSOAP11Port(OMFactory fac, OMElement service) throws Excepti\n                     axisService.getName() + BINDING_NAME_SUFFIX, null);\r\n             addExtensionElemnet(fac, port, SOAP_ADDRESS, LOCATION,\r\n                     urlString, soap);\r\n-            \r\n+\r\n             addPolicy(PolicyInclude.PORT_POLICY, axisService.getPolicyInclude(), service, fac);\r\n         }\r\n-        \r\n-        \r\n+\r\n+\r\n     }\r\n \r\n     private void generateHTTPPort(OMFactory fac, OMElement service) throws Exception {\r\n@@ -363,7 +357,7 @@ private void generateSOAP12Port(OMFactory fac, OMElement service) throws Excepti\n                     axisService.getName() + SOAP12BINDING_NAME_SUFFIX, null);\r\n             addExtensionElemnet(fac, port, SOAP_ADDRESS, LOCATION,\r\n                     urlString, soap12);\r\n-            \r\n+\r\n             addPolicy(PolicyInclude.PORT_POLICY, axisService.getPolicyInclude(), service, fac);\r\n         }\r\n     }\r\n@@ -378,7 +372,7 @@ private void generateSOAP11Binding(OMFactory fac,\n         binding.addAttribute(ATTRIBUTE_NAME, axisService.getName() + BINDING_NAME_SUFFIX, null);\r\n         binding.addAttribute(\"type\", tns.getPrefix() + \":\" + axisService.getName() + PORT_TYPE_SUFFIX, null);\r\n         addPolicy(PolicyInclude.BINDING_POLICY, axisService.getPolicyInclude(), binding, fac);\r\n-        \r\n+\r\n         //Adding ext elements\r\n         addExtensionElemnet(fac, binding, BINDING_LOCAL_NAME,\r\n                 TRANSPORT, TRANSPORT_URI,\r\n@@ -401,7 +395,7 @@ private void generateSOAP11Binding(OMFactory fac,\n                     SOAP_ACTION, soapAction,\r\n                     STYLE, style, soap);\r\n             addPolicy(PolicyInclude.BINDING_OPERATION_POLICY, axisOperation.getPolicyInclude(), operation, fac);\r\n-            \r\n+\r\n             String MEP = axisOperation.getMessageExchangePattern();\r\n \r\n             if (WSDLConstants.MEP_URI_IN_ONLY.equals(MEP) ||\r\n@@ -456,8 +450,8 @@ private void generateSOAP11Binding(OMFactory fac,\n                 }\r\n             }\r\n         }\r\n-        \r\n-        \r\n+\r\n+\r\n     }\r\n \r\n     /**\r\n@@ -470,7 +464,7 @@ private void generateSOAP12Binding(OMFactory fac,\n         binding.addAttribute(ATTRIBUTE_NAME, axisService.getName() + SOAP12BINDING_NAME_SUFFIX, null);\r\n         binding.addAttribute(\"type\", tns.getPrefix() + \":\" + axisService.getName() + PORT_TYPE_SUFFIX, null);\r\n         addPolicy(PolicyInclude.BINDING_POLICY, axisService.getPolicyInclude(), binding, fac);\r\n-        \r\n+\r\n         //Adding ext elements\r\n         addExtensionElemnet(fac, binding, BINDING_LOCAL_NAME,\r\n                 TRANSPORT, TRANSPORT_URI,\r\n@@ -493,7 +487,7 @@ private void generateSOAP12Binding(OMFactory fac,\n                     SOAP_ACTION, soapAction,\r\n                     STYLE, style, soap12);\r\n             addPolicy(PolicyInclude.BINDING_OPERATION_POLICY, axisOperation.getPolicyInclude(), operation, fac);\r\n-            \r\n+\r\n             String MEP = axisOperation.getMessageExchangePattern();\r\n \r\n             if (WSDLConstants.MEP_URI_IN_ONLY.equals(MEP) ||\r\n@@ -610,8 +604,8 @@ private void generatePostBinding(OMFactory fac,\n                     OMElement outElement = fac.createOMElement(\"content\", mime);\r\n                     outElement.addChild(outElement);\r\n                     outElement.addAttribute(\"type\", \"text/xml\", null);\r\n+                    output.addChild(outElement);\r\n                     operation.addChild(output);\r\n-                    writeSoapHeaders(outAxisMessage, fac, output, soap12);\r\n                 }\r\n             }\r\n         }\r\n@@ -688,33 +682,26 @@ private String getPrefix(String targetNameSpace) {\n         }\r\n         return null;\r\n     }\r\n-    \r\n-    private void addPolicy(int type, PolicyInclude policyInclude, OMElement element, OMFactory factory) {\r\n+\r\n+    private void addPolicy(int type, PolicyInclude policyInclude, OMElement element, OMFactory factory) throws XMLStreamException {\r\n         ArrayList elementList = policyInclude.getPolicyElements(type);\r\n         StAXPolicyWriter pwrt = (StAXPolicyWriter) PolicyFactory.getPolicyWriter(PolicyFactory.StAX_POLICY_WRITER);\r\n-        \r\n+\r\n         for (Iterator iterator = elementList.iterator(); iterator.hasNext();) {\r\n             Object policyElement = iterator.next();\r\n-            \r\n+\r\n             if (policyElement instanceof Policy) {\r\n                 ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                 pwrt.writePolicy((Policy) policyElement, baos);\r\n-                \r\n+\r\n                 ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\r\n-                try {\r\n-\t\t\t\t\telement.addChild(OMXMLBuilderFactory.createStAXOMBuilder(factory, XMLInputFactory.newInstance().createXMLStreamReader(bais)).getDocumentElement());\r\n-                    \r\n-\t\t\t\t} catch (Exception ex) {\r\n-                    ex.printStackTrace();\r\n-                    // TODO handle this exception\r\n-\t\t\t\t}\r\n-                \r\n-                                \r\n+                element.addChild(OMXMLBuilderFactory.createStAXOMBuilder(factory, XMLInputFactory.newInstance().createXMLStreamReader(bais)).getDocumentElement());\r\n+\r\n             } else if (policyElement instanceof PolicyReference) {\r\n-                // TODO need to implement this ..    \r\n+                // TODO need to implement this ..\r\n             }\r\n-            \r\n+\r\n         }\r\n-        \r\n+\r\n     }\r\n }\n\\ No newline at end of file", "filename": "modules/core/src/org/apache/axis2/description/AxisService2OM.java"}, {"additions": 28, "raw_url": "https://github.com/apache/axis2-java/raw/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java", "sha": "382cb56c5c4bcdb5766261deb3c676274d065e8f", "changes": 52, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java?ref=ba54d5aaf13444359652c993d6c219b6e3c87cfb", "patch": "@@ -15,23 +15,23 @@\n  */\n package org.apache.axis2.transport.http.util;\n \n+import org.apache.axiom.om.OMAbstractFactory;\n+import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.axiom.soap.SOAPBody;\n+import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPFactory;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.HTTPConstants;\n-import org.apache.axis2.wsdl.WSDLConstants;\n-import org.apache.axis2.util.SchemaUtil;\n import org.apache.axis2.context.ConfigurationContext;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.description.AxisMessage;\n import org.apache.axis2.description.AxisOperation;\n import org.apache.axis2.engine.AxisEngine;\n import org.apache.axis2.engine.RequestURIBasedDispatcher;\n import org.apache.axis2.transport.TransportUtils;\n-import org.apache.axiom.om.OMAbstractFactory;\n-import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.axis2.util.SchemaUtil;\n+import org.apache.axis2.wsdl.WSDLConstants;\n import org.apache.ws.commons.schema.XmlSchemaElement;\n-import org.apache.axiom.soap.SOAPBody;\n-import org.apache.axiom.soap.SOAPEnvelope;\n-import org.apache.axiom.soap.SOAPFactory;\n \n import javax.servlet.ServletInputStream;\n import javax.servlet.http.HttpServletRequest;\n@@ -63,11 +63,11 @@ public boolean processPostRequest(MessageContext msgContext,\n             SOAPEnvelope soapEnvelope;\n             if (\"\".equals(contentType) || contentType == null) {\n                 throw new AxisFault(\"ContentType should be given to proceed,\" +\n-                                    \" according to WSDL 2.0 HTTP binding rules\");\n+                        \" according to WSDL 2.0 HTTP binding rules\");\n             } else if (contentType.indexOf(HTTPConstants.MEDIA_TYPE_TEXT_XML) > -1 ||\n-                       contentType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED) > -1) {\n+                    contentType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED) > -1) {\n                 soapEnvelope = handleNonURLEncodedContentTypes(msgContext, request,\n-                                                               OMAbstractFactory.getSOAP11Factory());\n+                        OMAbstractFactory.getSOAP11Factory());\n             } else if (contentType.indexOf(HTTPConstants.MEDIA_TYPE_X_WWW_FORM) > -1) {\n                 // 2. Else, Dispatch and find out the operation and the service.\n                 // Dispatching can only be done using the RequestURI, as others can not be run in the REST case\n@@ -81,13 +81,13 @@ public boolean processPostRequest(MessageContext msgContext,\n                                 getMessage(WSDLConstants.MESSAGE_LABEL_IN_VALUE).getSchemaElement();\n \n                 soapEnvelope = SchemaUtil.handleMediaTypeURLEncoded(msgContext,\n-                                                                    request,\n-                                                                    xmlSchemaElement,\n-                                                                    OMAbstractFactory.getSOAP11Factory());\n+                        request,\n+                        xmlSchemaElement,\n+                        OMAbstractFactory.getSOAP11Factory());\n             } else {\n                 throw new AxisFault(\"Content type should be one of /n \" + HTTPConstants.MEDIA_TYPE_TEXT_XML +\n-                                    \"/n \" + HTTPConstants.MEDIA_TYPE_X_WWW_FORM +\n-                                    \"/n \" + HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED);\n+                        \"/n \" + HTTPConstants.MEDIA_TYPE_X_WWW_FORM +\n+                        \"/n \" + HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED);\n             }\n \n \n@@ -126,24 +126,28 @@ public boolean processGetRequest(MessageContext msgContext,\n             }\n \n             SOAPEnvelope soapEnvelope = SchemaUtil.handleMediaTypeURLEncoded(msgContext,\n-                                                                             request,\n-                                                                             xmlSchemaElement,\n-                                                                             OMAbstractFactory.getSOAP11Factory());\n+                    request,\n+                    xmlSchemaElement,\n+                    OMAbstractFactory.getSOAP11Factory());\n             msgContext.setEnvelope(soapEnvelope);\n             msgContext.setProperty(HTTPConstants.HTTP_METHOD, HTTPConstants.HTTP_METHOD_GET);\n             msgContext.setDoingREST(true);\n+            msgContext.setProperty(MessageContext.TRANSPORT_OUT, response.getOutputStream());\n \n             invokeAxisEngine(msgContext);\n \n         } catch (AxisFault axisFault) {\n             throw new AxisFault(axisFault);\n+        } catch (IOException e) {\n+            throw  new AxisFault(e);\n         }\n         return true;\n     }\n \n     private void invokeAxisEngine(MessageContext messageContext) throws AxisFault {\n         AxisEngine axisEngine = new AxisEngine(configurationContext);\n         axisEngine.receive(messageContext);\n+\n     }\n \n     private void dispatchAndVerify(MessageContext msgContext) throws AxisFault {\n@@ -153,7 +157,7 @@ private void dispatchAndVerify(MessageContext msgContext) throws AxisFault {\n         // check for the dispatching result\n         if (msgContext.getAxisService() == null || msgContext.getAxisOperation() == null) {\n             throw new AxisFault(\"I can not find a service for this request to be serviced.\" +\n-                                \" Check the WSDL and the request URI\");\n+                    \" Check the WSDL and the request URI\");\n         }\n     }\n \n@@ -179,18 +183,18 @@ private SOAPEnvelope handleNonURLEncodedContentTypes(MessageContext msgCtxt,\n                     xmlreader = XMLInputFactory.\n                             newInstance().\n                             createXMLStreamReader(inputStream,\n-                                                  MessageContext.DEFAULT_CHAR_SET_ENCODING);\n+                                    MessageContext.DEFAULT_CHAR_SET_ENCODING);\n \n                     // Set the encoding scheme in the message context\n                     msgCtxt.setProperty(MessageContext.CHARACTER_SET_ENCODING,\n-                                        MessageContext.DEFAULT_CHAR_SET_ENCODING);\n+                            MessageContext.DEFAULT_CHAR_SET_ENCODING);\n                 } else {\n \n                     // get the type of char encoding\n                     String charSetEnc = TransportUtils.getCharSetEncoding(contentType);\n \n                     xmlreader = XMLInputFactory.newInstance().createXMLStreamReader(inputStream,\n-                                                                                    charSetEnc);\n+                            charSetEnc);\n \n                     // Setting the value in msgCtx\n                     msgCtxt.setProperty(MessageContext.CHARACTER_SET_ENCODING, charSetEnc);\n@@ -201,8 +205,8 @@ private SOAPEnvelope handleNonURLEncodedContentTypes(MessageContext msgCtxt,\n                 // if the media type is multipart/related, get help from Axis2 :)\n             } else if (checkContentType(HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED, contentType)) {\n                 body.addChild(TransportUtils.selectBuilderForMIME(msgCtxt,\n-                                                                  inputStream,\n-                                                                  contentType).getDocumentElement());\n+                        inputStream,\n+                        contentType).getDocumentElement());\n             }\n \n             return soapEnvelope;", "filename": "modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/webapp/conf/web.xml", "blob_url": "https://github.com/apache/axis2-java/blob/ba54d5aaf13444359652c993d6c219b6e3c87cfb/modules/webapp/conf/web.xml", "sha": "aa028df44ef5ab864313b1a9a3afaff722074a99", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/webapp/conf/web.xml?ref=ba54d5aaf13444359652c993d6c219b6e3c87cfb", "patch": "@@ -29,7 +29,7 @@\n     </servlet>\n     <servlet-mapping>\n         <servlet-name>AxisRESTServlet</servlet-name>\n-        <url-pattern>/rest</url-pattern>\n+        <url-pattern>/rest/*</url-pattern>\n     </servlet-mapping>\n \n ", "filename": "modules/webapp/conf/web.xml"}, {"additions": 87, "raw_url": "https://github.com/apache/axis2-java/raw/ba54d5aaf13444359652c993d6c219b6e3c87cfb/release-notes.html", "blob_url": "https://github.com/apache/axis2-java/blob/ba54d5aaf13444359652c993d6c219b6e3c87cfb/release-notes.html", "sha": "0456a334d5cb01ffcb9ce4293aa11e9431e2fa1c", "changes": 191, "status": "modified", "deletions": 104, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/release-notes.html?ref=ba54d5aaf13444359652c993d6c219b6e3c87cfb", "patch": "@@ -1,104 +1,87 @@\n-<html>\n-<head><title>:: Axis2 Release Notes ::</title></head>\n-<body>\n-<h1>Axis2 Release Notes</h1>\n-\n-<h2>This is the Apache Axis2 0.95 release</h2>\n-\n-<h3>Complete Features List</h3>\n-\n-<ol type=\"1\">\n- <li>AXIOM, an XML object model working on StAX (Streaming API for XML) parsing optimized for SOAP 1.1/1.2 Messages. This has complete XML infoset support.</li>\n- <li>Support for One-Way Messaging (In-Only) and Request Response Messaging (In-Out).</li>\n- <li>Module Architecture, mechanism to extend the SOAP Processing model.</li>\n- <li>Module version support, can have multiple versions of the same module and use them depending on the requirement.</li>\n- <li>Content hierarchy</li>\n- <li>Archive based deployment model and Directory based deployment model</li>\n- <li>JWS like deployment (making Java class into Web service)</li>\n- <li>WSDL Code Generation tool for stubs and skeletons</li>\n- <li>WS-Addressing, both the submission (2004/08) and final (2005/08) versions</li>\n- <li>WSS4J module for security</li>\n- <li>Improved and user friendly Client API</li>\n- <li>WSDL2Java and Java2WSDL</li>\n- <li>REST (REpresentational State Transfer) Support</li>\n- <li>Transports supports: HTTP, SMTP, TCP, JMS</li>\n- <li>Raw XML providers</li>\n- <li>Support for MTOM/ MIME/ SwA</li>\n- <li>SAAJ implementation</li>\n- <li>DOOM</li>\n- <li>Pack/Unpack capability for the generated code</li>\n- <li>Axis Data Binding - ADB (Framework and Schema Compiler)</li>\n- <li>Numerous bug fixes since last release</li>\n- <li>Transport framework improvements (ListenerManager) - <span style=\"color: #FF0000\">New</span></li>\n- <li>AxisServlet auto starts when the application server starts up - <span style=\"color: #FF0000\">New</span></li>\n- <li>Module disengagemnt support - <span style=\"color: #FF0000\">New</span></li>\n- <li>Loading modules (.mar files) from classpath - <span style=\"color: #FF0000\">New</span></li>\n- <li>Sessions scoping for Application, SOAP, Transport and Request levels - <span style=\"color: #FF0000\">New</span></li>\n-</ol>\n-\n-<h4>Experimental\n-Features List</h4>\n-\n-<ol type=\"1\">\n- <li>Server side and client side Web service Policy support</li>\n- <li>?wsdl and ?xsd support</li>\n- <li>Generating ServiceClient for a given WSDL and invoke the corresponding service using generated client</li>\n-</ol>\n-\n-<h3>Major Changes Since\n-Last Release</h3>\n-\n-<ol type=\"1\">\n-   <li>Transport framework improvements (ListenerManager)</li>\n-   <li>The way to add an action mapping (wsamapping) has been moved from being a parameter to a child element. With this version onwards the way of adding an action mapping is as follows:</li>\n-   <pre>\n-   \n-&lt;actionMapping&gt;MyMapping&lt;/actionMapping&gt;\n-\n-</pre>\n-\n-<li>Refactored following packages in Axiom:\n-    <ul>\n-     <li>org.apache.axiom.om.impl.llom.builder to org.apache.axiom.om.impl.builder</li>\n-     <li>org.apache.axiom.om.impl.llom.mtom to org.apache.axiom.om.impl.mtom</li>\n-     <li>org.apache.axiom.om.impl.llom.serialize to org.apache.axiom.om.impl.serialize</li>\n-     <li>org.apache.axiom.om.impl.llom.traverse to org.apache.axiom.om.impl.traverse</li>\n-    </ul> \n-   </li>\n-</ol>\n-\n-<h3>Tools Included In This\n-Release</h3>\n-<ol type=\"1\">\n- <li>Axis2 Web Application (Web App)</li>\n- <li>WSDL2WS - Command line version</li>\n-</ol>\n-\n-<h3>What's Still To\n-Do?</h3>\n-\n-<p>See list of what we think needs to be done, and consider helping out if\n-you're interested and able!</p>\n-<ol type=\"1\">\n- <li>JAX-RPC 1.1 and/or JAX-WS compliance</li>\n- <li>SOAP Encoding</li>\n- <li>Binary serialization and de-serialization support</li>\n- <li>Management Interface for Axis2</li>\n- <li>Implementation of other Transports.</li>\n- <li>Resource framework implementation (WS-RF) and Enterprise web services such as JSR 109 support</li>\n- <li>Completion of Interop tests</li>\n-</ol>\n-\n-\n-<p>Axis2 is taking shape, this 0.95 release is a glimpse of 1.0 that is coming soon. \n-If you happen to have a vision of how the next generation Web services platform should be, contribute to \n-Apache Axis2, and help us shape it. Any contribution in the form of coding, testing, submitting \n-improvements to the documentation, and reporting bugs are always welcome.</p>\n-\n-<p>Thanks for your interest in Axis2!</p>\n-\n-<strong><em>-The Axis2 Development Team</em></strong>\n-</body>\n-</html>\n-\n- \n+<html>\r\n+<head><title>:: Axis2 Release Notes ::</title></head>\r\n+<body>\r\n+<h1>Axis2 Release Notes</h1>\r\n+\r\n+<h2>This is the Apache Axis2 1.0 RC1 release</h2>\r\n+\r\n+<h3>Complete Features List</h3>\r\n+\r\n+<ol type=\"1\">\r\n+ <li>AXIOM, an XML object model working on StAX (Streaming API for XML) parsing optimized for SOAP 1.1/1.2 Messages. This has complete XML infoset support.</li>\r\n+ <li>Support for One-Way Messaging (In-Only) and Request Response Messaging (In-Out).</li>\r\n+ <li>Module Architecture, mechanism to extend the SOAP Processing model.</li>\r\n+ <li>Module version support, can have multiple versions of the same module and use them depending on the requirement.</li>\r\n+ <li>Content hierarchy</li>\r\n+ <li>Archive based deployment model and Directory based deployment model</li>\r\n+ <li>JWS like deployment (making Java class into Web service)</li>\r\n+ <li>WSDL Code Generation tool for stubs and skeletons</li>\r\n+ <li>WS-Addressing, both the submission (2004/08) and final (2005/08) versions</li>\r\n+ <li>WSS4J module for security</li>\r\n+ <li>Improved and user friendly Client API</li>\r\n+ <li>WSDL2Java and Java2WSDL</li>\r\n+ <li>REST (REpresentational State Transfer) Support</li>\r\n+ <li>Transports supports: HTTP, SMTP, TCP, JMS</li>\r\n+ <li>Raw XML providers</li>\r\n+ <li>Support for MTOM/ MIME/ SwA</li>\r\n+ <li>SAAJ implementation</li>\r\n+ <li>DOOM</li>\r\n+ <li>Pack/Unpack capability for the generated code</li>\r\n+ <li>Axis Data Binding - ADB (Framework and Schema Compiler)</li>\r\n+  <li>Transport framework improvements (ListenerManager)</li>\r\n+ <li>AxisServlet auto starts when the application server starts up</li>\r\n+ <li>Module disengagemnt support</li>\r\n+ <li>Loading modules (.mar files) from classpath </li>\r\n+ <li>Sessions scoping for Application, SOAP, Transport and Request levels</li>\r\n+ <li>Server side and client side Web service Policy support</li>\r\n+ <li>?wsdl and ?xsd support</li>\r\n+ <li>Generating ServiceClient for a given WSDL and invoke the corresponding service using generated client</li>\r\n+  <li>Numerous bug fixes since last release</li>\r\n+</ol>\r\n+\r\n+<h4>Experimental\r\n+Features List</h4>\r\n+\r\n+<ol type=\"1\">\r\n+ <li>WSDL fault handling (fault code generation)</li>\r\n+ <li>URL based deployment mechanism (starting Axis with remote repository)</li>\r\n+ <li>SOAP 1.2 and HTTP binding generation (?wsdl)</li>\r\n+ <li>Un expanded war support  (location of axis2.xml and repository can be specified in web.xml )</li>\r\n+</ol>\r\n+\r\n+<h3>Major Changes Since\r\n+Last Release</h3>\r\n+\r\n+<ol type=\"1\">\r\n+   <li>Removed WOM and keep all the WSDL information in AxisService /AxisOperation /AxisMessage</li>\r\n+   <li>Removed old client api classes (Call , MEPClient etc...)</li> \r\n+</ol>\r\n+\r\n+<h3>What's Still To\r\n+Do?</h3>\r\n+\r\n+<p>See list of what we think needs to be done, and consider helping out if\r\n+you're interested and able!</p>\r\n+<ol type=\"1\">\r\n+ <li>JAX-RPC 1.1 and/or JAX-WS compliance</li>\r\n+ <li>SOAP Encoding</li>\r\n+ <li>Binary serialization and de-serialization support</li>\r\n+ <li>Management Interface for Axis2</li>\r\n+ <li>Implementation of other Transports.</li>\r\n+ <li>Resource framework implementation (WS-RF) and Enterprise web services such as JSR 109 support</li>\r\n+ <li>Completion of Interop tests</li>\r\n+</ol>\r\n+\r\n+\r\n+<p>Axis2 is taking shape, this 1.0 RC1 Release is a glimpse of 1.0 that is coming soon. \r\n+If you happen to have a vision of how the next generation Web services platform should be, contribute to \r\n+Apache Axis2, and help us shape it. Any contribution in the form of coding, testing, submitting \r\n+improvements to the documentation, and reporting bugs are always welcome.</p>\r\n+\r\n+<p>Thanks for your interest in Axis2!</p>\r\n+\r\n+<strong><em>-The Axis2 Development Team</em></strong>\r\n+</body>\r\n+</html>\r\n+\r\n+ \r", "filename": "release-notes.html"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/6bec8166ea0288dd62b7e9edc51994dfca75db50", "parent": "https://github.com/apache/axis2-java/commit/df0f107a60526990bce61cf56e173e270f7c4731", "message": "spelling fix and fix another NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@382533 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_62", "file": [{"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/6bec8166ea0288dd62b7e9edc51994dfca75db50/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/6bec8166ea0288dd62b7e9edc51994dfca75db50/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "sha": "2f294c85adf40380b553b49bd0d84e83c97ace5f", "changes": 12, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java?ref=6bec8166ea0288dd62b7e9edc51994dfca75db50", "patch": "@@ -181,8 +181,8 @@ protected void configProxyAuthentication(HttpClient client,\n      * @param method\r\n      * @param msgContext\r\n      */\r\n-    protected void obatainHTTPHeaderInformation(HttpMethodBase method,\r\n-                                                MessageContext msgContext) {\r\n+    protected void obtainHTTPHeaderInformation(HttpMethodBase method,\r\n+                                               MessageContext msgContext) {\r\n         Header header =\r\n                 method.getResponseHeader(HTTPConstants.HEADER_CONTENT_TYPE);\r\n \r\n@@ -225,7 +225,7 @@ protected void obatainHTTPHeaderInformation(HttpMethodBase method,\n     protected void processResponse(HttpMethodBase httpMethod,\r\n                                    MessageContext msgContext)\r\n             throws IOException {\r\n-        obatainHTTPHeaderInformation(httpMethod, msgContext);\r\n+        obtainHTTPHeaderInformation(httpMethod, msgContext);\r\n \r\n         InputStream in = httpMethod.getResponseBodyAsStream();\r\n \r\n@@ -234,8 +234,10 @@ protected void processResponse(HttpMethodBase httpMethod,\n                     Messages.getMessage(\"canNotBeNull\", \"InputStream\"));\r\n         }\r\n \r\n-        msgContext.getOperationContext()\r\n-                .setProperty(MessageContext.TRANSPORT_IN, in);\r\n+        if(msgContext.getOperationContext() != null) {\r\n+            msgContext.getOperationContext()\r\n+                    .setProperty(MessageContext.TRANSPORT_IN, in);\r\n+        }\r\n     }\r\n \r\n     public abstract void send(MessageContext msgContext, OMElement dataout,\r", "filename": "modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/df0f107a60526990bce61cf56e173e270f7c4731", "parent": "https://github.com/apache/axis2-java/commit/2e239e211ee97efdffabfd8532a56af642791034", "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@382524 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_63", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/df0f107a60526990bce61cf56e173e270f7c4731/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/df0f107a60526990bce61cf56e173e270f7c4731/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "sha": "125889ddb6c9ef605107b82b4fd37c4da7827410", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java?ref=df0f107a60526990bce61cf56e173e270f7c4731", "patch": "@@ -203,8 +203,10 @@ protected void obatainHTTPHeaderInformation(HttpMethodBase method,\n                                 header.getValue());\r\n                     }\r\n                 } else if (charsetEnc != null) {\r\n-                    opContext.setProperty(MessageContext.CHARACTER_SET_ENCODING,\r\n-                            charsetEnc.getValue());    // change to the value, which is text/xml or application/xml+soap\r\n+                    if (opContext != null) {\r\n+                        opContext.setProperty(MessageContext.CHARACTER_SET_ENCODING,\r\n+                                charsetEnc.getValue());    // change to the value, which is text/xml or application/xml+soap\r\n+                    }\r\n                 }\r\n             }\r\n         }\r", "filename": "modules/core/src/org/apache/axis2/transport/http/AbstractHTTPSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/0bfd9db01bb1112a635f735e24876e9806f16fc5", "parent": "https://github.com/apache/axis2-java/commit/9f4950543a09ba3b88c7324055eccb48cc555b17", "message": "Fixing possible NPE\nAdding WSA Fault action\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@382300 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_64", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/0bfd9db01bb1112a635f735e24876e9806f16fc5/modules/core/src/org/apache/axis2/addressing/AddressingConstants.java", "blob_url": "https://github.com/apache/axis2-java/blob/0bfd9db01bb1112a635f735e24876e9806f16fc5/modules/core/src/org/apache/axis2/addressing/AddressingConstants.java", "sha": "5c2c8a28198f4b248f2888977a2da1fbaf729fd2", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/addressing/AddressingConstants.java?ref=0bfd9db01bb1112a635f735e24876e9806f16fc5", "patch": "@@ -56,6 +56,7 @@\n                 \"http://www.w3.org/2005/08/addressing/anonymous\";\n         public static final String WSA_NONE_URI =\n                 \"http://www.w3.org/2005/08/addressing/none\";\n+        public static final String WSA_FAULT_ACTION = \"http://www.w3.org/2005/08/addressing/fault\";\n         public static final String WSA_TYPE_ATTRIBUTE_VALUE = \"true\";\n         public static final String WSA_SERVICE_NAME_ENDPOINT_NAME = \"EndpointName\";\n         public static final String WSA_POLICIES = \"Policies\";", "filename": "modules/core/src/org/apache/axis2/addressing/AddressingConstants.java"}, {"additions": 12, "raw_url": "https://github.com/apache/axis2-java/raw/0bfd9db01bb1112a635f735e24876e9806f16fc5/modules/core/src/org/apache/axis2/engine/AxisEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/0bfd9db01bb1112a635f735e24876e9806f16fc5/modules/core/src/org/apache/axis2/engine/AxisEngine.java", "sha": "29099435ff6595567eed3264f8776929effcd31f", "changes": 20, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/engine/AxisEngine.java?ref=0bfd9db01bb1112a635f735e24876e9806f16fc5", "patch": "@@ -96,7 +96,7 @@ private void checkMustUnderstand(MessageContext msgContext) throws AxisFault {\n             String role = hb.getRole();\n \n             String prefix = se.getNamespace().getPrefix();\n-            \n+\n             if (!msgContext.isSOAP11()) {\n \n                 // if must understand and soap 1.2 the Role should be NEXT , if it is null we considerr\n@@ -276,14 +276,18 @@ private void extractFaultInformationFromMessageContext(MessageContext context, S\n             fault.setCode((SOAPFaultCode) faultCode);\n         } else if (soapException != null) {\n             soapFaultCode = soapException.getFaultCode();\n-        } else if ((exception = e) instanceof AxisFault || (exception = e.getCause()) instanceof AxisFault) {\n+        } else\n+        if (e != null && ((exception = e) instanceof AxisFault || (exception = e.getCause()) instanceof AxisFault))\n+        {\n             QName faultCodeQName = ((AxisFault) exception).getFaultCode();\n-            String prefix = faultCodeQName.getPrefix();\n-            String uri = faultCodeQName.getNamespaceURI();\n-            prefix = prefix == null || \"\".equals(prefix) ? Constants.AXIS2_NAMESPACE_PREFIX : prefix;\n-            uri = uri == null || \"\".equals(uri) ? Constants.AXIS2_NAMESPACE_URI : uri;\n-            soapFaultCode = prefix + \":\" + faultCodeQName.getLocalPart();\n-            fault.declareNamespace(uri, prefix);\n+            if (faultCodeQName != null) {\n+                String prefix = faultCodeQName.getPrefix();\n+                String uri = faultCodeQName.getNamespaceURI();\n+                prefix = prefix == null || \"\".equals(prefix) ? Constants.AXIS2_NAMESPACE_PREFIX : prefix;\n+                uri = uri == null || \"\".equals(uri) ? Constants.AXIS2_NAMESPACE_URI : uri;\n+                soapFaultCode = prefix + \":\" + faultCodeQName.getLocalPart();\n+                fault.declareNamespace(uri, prefix);\n+            }\n         }\n \n         // defaulting to fault code Sender, if no message is available", "filename": "modules/core/src/org/apache/axis2/engine/AxisEngine.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b", "parent": "https://github.com/apache/axis2-java/commit/01e190e17f566f2d7752614171b4fbee04b08218", "message": "prevent NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@377295 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_65", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java", "sha": "2bd25b5a9ee36c1d6c7b6c0d1f7047c61b940ab8", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java?ref=2c30aa9e00ec0912a0eacbd9287b9ea41e21685b", "patch": "@@ -372,11 +372,15 @@ public AxisService getAxisService(Definition wsdlDefinition)\n                     addPolicyElements(PolicyInclude.OUTPUT_POLICY,\n                             outputPolicies, outputPolicyInclude);\n \n-                    // BindingOutput\n-                    outputPolicies = getPoliciesAsExtElements(wsdl4jBindingOutput\n-                            .getExtensibilityElements());\n-                    addPolicyElements(PolicyInclude.BINDING_OUTPUT_POLICY,\n-                            outputPolicies, outputPolicyInclude);\n+                    if (wsdl4jBindingOutput != null) {\n+                        // BindingOutput\n+                        outputPolicies = getPoliciesAsExtElements(wsdl4jBindingOutput\n+                                .getExtensibilityElements());\n+                        if (outputPolicies != null) {\n+                            addPolicyElements(PolicyInclude.BINDING_OUTPUT_POLICY, \n+                                    outputPolicies, outputPolicyInclude);\n+                        }\n+                    }\n \n                     // wsdl:Message\n                     outputPolicies = getPoliciesAsExtElements(wsdl4jOutputMessage", "filename": "modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/fd36bc87b98339fe3d67b0a0de942628580d7376", "parent": "https://github.com/apache/axis2-java/commit/8b1d6b039acd503451a07932cc2865d9208c3dc3", "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@376326 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_66", "file": [{"additions": 10, "raw_url": "https://github.com/apache/axis2-java/raw/fd36bc87b98339fe3d67b0a0de942628580d7376/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/fd36bc87b98339fe3d67b0a0de942628580d7376/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java", "sha": "63a1e4d4042bd9409e9807b04785b6b354f8e0c5", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java?ref=fd36bc87b98339fe3d67b0a0de942628580d7376", "patch": "@@ -34,6 +34,7 @@\n import java.util.List;\n import java.util.Map;\n import java.net.URI;\n+import java.net.MalformedURLException;\n import java.io.File;\n \n public class CodeGenerationEngine {\n@@ -197,14 +198,16 @@ private Object getObjectFromClassName(String className) throws CodeGenerationExc\n      */\n     private String getBaseURI(String currentURI){\n         String baseURI= null;\n-        if(currentURI.startsWith(\"http://\")){\n-           // current URI is a remote one\n-           String uriFrag = currentURI.substring(0,currentURI.lastIndexOf(\"/\"));\n-        baseURI = uriFrag + (uriFrag.endsWith(\"/\") ? \"\" : \"/\");\n-        }else{\n-           // the uri should be a file\n-          baseURI =  new File(currentURI).getParentFile().getAbsolutePath();\n+        if (!currentURI.startsWith(\"http://\")) {\n+            // the uri should be a file\n+            try {\n+                currentURI = new File(currentURI).toURL().toString();\n+            } catch (MalformedURLException e) {\n+                throw new RuntimeException(\"Cannot find baseuri for :\" + currentURI);\n+            }\n         }\n+        String uriFrag = currentURI.substring(0, currentURI.lastIndexOf(\"/\"));\n+        baseURI = uriFrag + (uriFrag.endsWith(\"/\") ? \"\" : \"/\");\n         return baseURI;\n     }\n }", "filename": "modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a7db977085940b7afc1034dbf8a8f8e3d877d5ed", "parent": "https://github.com/apache/axis2-java/commit/383464e08a46f91ded839e05b235e31f3331a2b1", "message": "Preventing an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@375578 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_67", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/a7db977085940b7afc1034dbf8a8f8e3d877d5ed/modules/security/src/org/apache/axis2/security/WSDoAllReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/a7db977085940b7afc1034dbf8a8f8e3d877d5ed/modules/security/src/org/apache/axis2/security/WSDoAllReceiver.java", "sha": "4e1cf20f2fb52789e80e9ec8b1190dad96333d31", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/axis2/security/WSDoAllReceiver.java?ref=a7db977085940b7afc1034dbf8a8f8e3d877d5ed", "patch": "@@ -326,8 +326,10 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         } catch (AxisFault axisFault) {\n             throw axisFault;\n         } finally {\n-            reqData.clear();\n-            reqData = null;\n+            if(reqData != null) {\n+                reqData.clear();\n+                reqData = null;\n+            }\n             \n             /**\n              * Temporary solution until DOOM's DocumentBuilder module is done.", "filename": "modules/security/src/org/apache/axis2/security/WSDoAllReceiver.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/efe8f6a7d51c1da60de15e04f45d192b0e50c233", "parent": "https://github.com/apache/axis2-java/commit/953aa35f98b2ed435a2a84784824e42797ad99a9", "message": "- fixing NPE in repo listener \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@374582 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_68", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/efe8f6a7d51c1da60de15e04f45d192b0e50c233/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/efe8f6a7d51c1da60de15e04f45d192b0e50c233/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java", "sha": "9e7ed2e95d58bd7592337bd4addb2191b0e2888c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java?ref=efe8f6a7d51c1da60de15e04f45d192b0e50c233", "patch": "@@ -59,6 +59,7 @@ public RepositoryListenerImpl(String folderName, DeploymentEngine deploymentEngi\n     //The constructor , which loads moduls from class path\n     public RepositoryListenerImpl(DeploymentEngine deploymentEngine) {\n         this.deploymentEngine = deploymentEngine;\n+        wsInfoList = new WSInfoList(deploymentEngine);\n         loadClassPathModules();\n     }\n ", "filename": "modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/4d169745c639f40aa6f5e1f5ed610139bb84c7a9", "parent": "https://github.com/apache/axis2-java/commit/7d0072fe502499a380e7b1cb310a8b3a912cc734", "message": "Preventing (some more) NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@372100 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_69", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/engine/AddressingBasedDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/engine/AddressingBasedDispatcher.java", "sha": "b5b5d19b646e6b56e9f89f397f722743dc658ac2", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/engine/AddressingBasedDispatcher.java?ref=4d169745c639f40aa6f5e1f5ed610139bb84c7a9", "patch": "@@ -38,9 +38,9 @@\n  */\n public class AddressingBasedDispatcher extends AbstractDispatcher implements AddressingConstants {\n \n-\tprivate static final long serialVersionUID = 8294130617631587374L;\n-\t\n-\t/**\n+    private static final long serialVersionUID = 8294130617631587374L;\n+\n+    /**\n      * Field NAME\n      */\n     public static final QName NAME = new QName(\"http://ws.apache.org/axis2/\",\n@@ -64,6 +64,7 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n     // TODO this logic needed to be improved, as the Dispatching is almost guaranteed to fail\n     public AxisService findService(MessageContext messageContext) throws AxisFault {\n         EndpointReference toEPR = messageContext.getTo();\n+\n         AxisService service = null;\n \n         if (toEPR != null) {\n@@ -76,8 +77,11 @@ public AxisService findService(MessageContext messageContext) throws AxisFault {\n                 return null;\n             }\n \n-            QName serviceName = new QName(address);\n+            QName serviceName;\n             String[] values = Utils.parseRequestURLForServiceAndOperation(address);\n+            if (values == null) {\n+                return null;\n+            }\n \n             log.debug(\"Checking for Service using toEPR : \" + values[0]);\n ", "filename": "modules/core/src/org/apache/axis2/engine/AddressingBasedDispatcher.java"}, {"additions": 10, "raw_url": "https://github.com/apache/axis2-java/raw/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/transport/http/HTTPTransportUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/transport/http/HTTPTransportUtils.java", "sha": "aff0fc1e7eeaf8a1bf872a489bedbf8866dd05bc", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/HTTPTransportUtils.java?ref=4d169745c639f40aa6f5e1f5ed610139bb84c7a9", "patch": "@@ -62,6 +62,10 @@ public static boolean checkEnvelopeForOptimise(SOAPEnvelope envelope) {\n     public static SOAPEnvelope createEnvelopeFromGetRequest(String requestUrl, Map map) {\n         String[] values = Utils.parseRequestURLForServiceAndOperation(requestUrl);\n \n+        if (values == null) {\n+            return new SOAP11Factory().getDefaultEnvelope();\n+        }\n+\n         if ((values[1] != null) && (values[0] != null)) {\n             String operation = values[1];\n             SOAPFactory soapFactory = new SOAP11Factory();\n@@ -94,13 +98,13 @@ public static boolean doWriteMTOM(MessageContext msgContext) {\n         if (msgContext.getParameter(Constants.Configuration.ENABLE_MTOM) != null) {\n             enableMTOM = Constants.VALUE_TRUE.equals(\n                     msgContext.getParameter(Constants.Configuration.ENABLE_MTOM).getValue());\n-        } \n-        \n+        }\n+\n         if (msgContext.getProperty(Constants.Configuration.ENABLE_MTOM) != null) {\n             enableMTOM = Constants.VALUE_TRUE.equals(\n                     msgContext.getProperty(Constants.Configuration.ENABLE_MTOM));\n         }\n-        \n+\n         boolean forceMIME =\n                 Constants.VALUE_TRUE.equals(msgContext.getProperty(Constants.Configuration.FORCE_MIME));\n \n@@ -109,10 +113,10 @@ public static boolean doWriteMTOM(MessageContext msgContext) {\n         }\n \n         // If MTOM is explicitly disabled, no need to check the envelope\n-        if(!enableMTOM) {\n+        if (!enableMTOM) {\n             return false;\n         }\n-        \n+\n         boolean envelopeContainsOptimise =\n                 HTTPTransportUtils.checkEnvelopeForOptimise(msgContext.getEnvelope());\n \n@@ -246,7 +250,7 @@ public static void processHTTPPostRequest(MessageContext msgContext, InputStream\n             }\n \n             String charsetEncoding = builder.getDocument().getCharsetEncoding();\n-        \n+\n             if ((charsetEncoding != null) && !\"\".equals(charsetEncoding)\n                     && ! charsetEncoding.equalsIgnoreCase((String) msgContext.getProperty(\n                     MessageContext.CHARACTER_SET_ENCODING))) {", "filename": "modules/core/src/org/apache/axis2/transport/http/HTTPTransportUtils.java"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/util/Utils.java", "blob_url": "https://github.com/apache/axis2-java/blob/4d169745c639f40aa6f5e1f5ed610139bb84c7a9/modules/core/src/org/apache/axis2/util/Utils.java", "sha": "998f8debcdd401876d32e765aacf8a9b4508cd22", "changes": 13, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/util/Utils.java?ref=4d169745c639f40aa6f5e1f5ed610139bb84c7a9", "patch": "@@ -162,6 +162,9 @@ private static ServiceContext fillServiceContextAndServiceGroupContext(AxisServi\n      *         the path after the first element. all ? parameters are discarded.\n      */\n     public static String[] parseRequestURLForServiceAndOperation(String path) {\n+        if (path == null) {\n+            return null;\n+        }\n         String[] values = new String[2];\n \n         // TODO. This is kind of brittle. Any service with the name /services would cause fun.\n@@ -201,10 +204,10 @@ public static ConfigurationContext getNewConfigurationContext(String repositry)\n         }\n         File axis2xml = new File(file, \"axis.xml\");\n         String axis2xmlString = null;\n-        if(axis2xml.exists()){\n+        if (axis2xml.exists()) {\n             axis2xmlString = axis2xml.getName();\n         }\n-        return ConfigurationContextFactory.createConfigurationContextFromFileSystem(file.getAbsolutePath(),axis2xmlString);\n+        return ConfigurationContextFactory.createConfigurationContextFromFileSystem(file.getAbsolutePath(), axis2xmlString);\n     }\n \n     public static String getParameterValue(Parameter param) {\n@@ -243,9 +246,9 @@ public static String getModuleVersion(String moduleName) {\n \n \n     public static QName getModuleName(String name, String versionID) {\n-        String moduleName ;\n-        if(versionID!=null && !versionID.equals(\"\")){\n-           moduleName = name + \"-\" + versionID;\n+        String moduleName;\n+        if (versionID != null && !versionID.equals(\"\")) {\n+            moduleName = name + \"-\" + versionID;\n         } else {\n             moduleName = name;\n         }", "filename": "modules/core/src/org/apache/axis2/util/Utils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/cb3c18ed6a0ae7882d5ccbed2c5f4768372361a7", "parent": "https://github.com/apache/axis2-java/commit/9c218b4ecb82da054e5cc0830013ff38cff6216b", "message": "Preventing (yet another) NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@372092 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_70", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/cb3c18ed6a0ae7882d5ccbed2c5f4768372361a7/modules/core/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/cb3c18ed6a0ae7882d5ccbed2c5f4768372361a7/modules/core/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java", "sha": "24f9b69c9b240d341e417b0910905aaf88a73b83", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java?ref=cb3c18ed6a0ae7882d5ccbed2c5f4768372361a7", "patch": "@@ -274,7 +274,11 @@ protected int readLine(InputStream is, byte[] b) throws java.io.IOException {\n     }\n \n     public static Map getGetRequestParameters(String requestURI) {\n+\n         Map map = new HashMap();\n+        if (requestURI == null || \"\".equals(requestURI)) {\n+            return map;\n+        }\n         char[]       chars = requestURI.toCharArray();\n         final int NOT_BEGUN = 1500;\n         final int INSIDE_NAME = 1501;\n@@ -316,7 +320,7 @@ public static Map getGetRequestParameters(String requestURI) {\n     /**\n      * Returns the HTML text for the list of services deployed.\n      * This can be delegated to another Class as well\n-     * where it will handle more options of GET messages. \n+     * where it will handle more options of GET messages.\n      *\n      * @return Returns String.\n      */\n@@ -335,12 +339,12 @@ public static String getServicesHTML(ConfigurationContext configurationContext)\n             temp += \"<h2>\" + \"Deployed services\" + \"</h2>\";\n \n             for (Iterator it = serviceCollection.iterator(); it.hasNext();) {\n-                \n-            \tAxisService axisService = (AxisService) it.next();\n+\n+                AxisService axisService = (AxisService) it.next();\n \n                 Iterator iterator = axisService.getOperations();\n-                \n-                temp += \"<h3><a href=\\\"\"+ axisService.getName() + \"?wsdl\\\">\"+ axisService.getName() + \"</a></h3>\";\n+\n+                temp += \"<h3><a href=\\\"\" + axisService.getName() + \"?wsdl\\\">\" + axisService.getName() + \"</a></h3>\";\n \n                 if (iterator.hasNext()) {\n                     temp += \"Available operations <ul>\";", "filename": "modules/core/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/fb24418c456043c27b46b0666a0bf127ac003497", "parent": "https://github.com/apache/axis2-java/commit/18dc38b930b2e057e1b881952b50cb2182f6d779", "message": "prevent NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@371468 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_71", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/fb24418c456043c27b46b0666a0bf127ac003497/modules/core/src/org/apache/axis2/description/OutInAxisOperation.java", "blob_url": "https://github.com/apache/axis2-java/blob/fb24418c456043c27b46b0666a0bf127ac003497/modules/core/src/org/apache/axis2/description/OutInAxisOperation.java", "sha": "104646a689fe87ff88f31af11c2dd45c3366fed3", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/description/OutInAxisOperation.java?ref=fb24418c456043c27b46b0666a0bf127ac003497", "patch": "@@ -396,11 +396,13 @@ private MessageContext send(MessageContext msgctx) throws AxisFault {\n \n     private EndpointReference getReplyToEPR(OMElement headerElement) {\n         EndpointReference epr = new EndpointReference(null);\n+        if(headerElement == null)\n+            return null;\n+        \n         Iterator childElements = headerElement.getChildElements();\n         while (childElements.hasNext()) {\n             OMElement eprChildElement = (OMElement) childElements.next();\n             if (AddressingConstants.EPR_ADDRESS.equals(eprChildElement.getLocalName())) {\n-//                epr.setAddress(eprChildElement.getText());\n             } else if (AddressingConstants.EPR_REFERENCE_PARAMETERS.equals(eprChildElement.getLocalName())) {\n \n                 Iterator referenceParameters = eprChildElement.getChildElements();", "filename": "modules/core/src/org/apache/axis2/description/OutInAxisOperation.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/b83dd33dfd8d47d8e7affce8434f4aa40ee298cc", "parent": "https://github.com/apache/axis2-java/commit/a5200970ee4e2f2b7ba1a7b54e03bb8a0eded825", "message": "protect from NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@366090 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_72", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/b83dd33dfd8d47d8e7affce8434f4aa40ee298cc/modules/codegen/src/org/apache/axis2/wsdl/codegen/extension/PackageFinder.java", "blob_url": "https://github.com/apache/axis2-java/blob/b83dd33dfd8d47d8e7affce8434f4aa40ee298cc/modules/codegen/src/org/apache/axis2/wsdl/codegen/extension/PackageFinder.java", "sha": "1bc7c549fdc658f1255472daa08e39736f9d0726", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/wsdl/codegen/extension/PackageFinder.java?ref=b83dd33dfd8d47d8e7affce8434f4aa40ee298cc", "patch": "@@ -27,9 +27,14 @@ public void engage() {\n         if (packageName == null || URLProcessor.DEFAULT_PACKAGE.equals(packageName)) {\n             WSDLBinding binding = configuration.getWom().getBinding(\n                     AxisBindingBuilder.AXIS_BINDING_QNAME);\n-            String temp = binding.getBoundInterface().getName()\n-                    .getNamespaceURI();\n-            packageName = URLProcessor.makePackageName(temp);\n+            if (binding != null &&\n+                    binding.getBoundInterface() != null &&\n+                    binding.getBoundInterface().getName() != null &&\n+                    binding.getBoundInterface().getName().getNamespaceURI() != null) {\n+                String temp = binding.getBoundInterface().getName()\n+                        .getNamespaceURI();\n+                packageName = URLProcessor.makePackageName(temp);\n+            }\n         }\n \n         if (null == packageName || \"\".equals(packageName))", "filename": "modules/codegen/src/org/apache/axis2/wsdl/codegen/extension/PackageFinder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9e37e84956d4aea9172a002d9b962cdcc30bc236", "parent": "https://github.com/apache/axis2-java/commit/2f957ef0491fbb4abd15b326e652e0eb883b8a2e", "message": "defensive NPE checks\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@360243 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_73", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/9e37e84956d4aea9172a002d9b962cdcc30bc236/modules/core/src/org/apache/axis2/util/PolicyUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/9e37e84956d4aea9172a002d9b962cdcc30bc236/modules/core/src/org/apache/axis2/util/PolicyUtil.java", "sha": "6900cef150af6b4a9ba9c513356f6318468bd0bb", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/util/PolicyUtil.java?ref=9e37e84956d4aea9172a002d9b962cdcc30bc236", "patch": "@@ -106,6 +106,9 @@ private static void populatePolicy(\n     private static void populatePolicy(\n             WSDLBindingMessageReference wsdlBindingMsgReference,\n             AxisMessage axisMessage) {\n+        if(axisMessage == null || axisMessage.getPolicyInclude() == null) {\n+            return;\n+        }\n         Policy messagePolicy = axisMessage.getPolicyInclude().getPolicy();\n \n         if (messagePolicy != null) {", "filename": "modules/core/src/org/apache/axis2/util/PolicyUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/48b69085b046bdb5499486494cfa485ac6cdb135", "parent": "https://github.com/apache/axis2-java/commit/4c7744669f3fde83e30483543fb47be879b1e1d4", "message": "A small bug fix to avoid possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@329729 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_74", "file": [{"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/48b69085b046bdb5499486494cfa485ac6cdb135/modules/core/src/org/apache/axis2/transport/http/HTTPWorker.java", "blob_url": "https://github.com/apache/axis2-java/blob/48b69085b046bdb5499486494cfa485ac6cdb135/modules/core/src/org/apache/axis2/transport/http/HTTPWorker.java", "sha": "fdbaceee802fbddb56484fb10c3d12f2ea241725", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/HTTPWorker.java?ref=48b69085b046bdb5499486494cfa485ac6cdb135", "patch": "@@ -20,6 +20,7 @@\n import org.apache.axis2.Constants;\n import org.apache.axis2.context.ConfigurationContext;\n import org.apache.axis2.context.MessageContext;\n+import org.apache.axis2.context.OperationContext;\n import org.apache.axis2.description.Parameter;\n import org.apache.axis2.description.TransportOutDescription;\n import org.apache.axis2.engine.AxisConfiguration;\n@@ -149,7 +150,12 @@ public boolean processRequest(final SimpleHttpServerConnection conn, final Simpl\n                         configurationContext);\n             }\n \n-            Object contextWritten = msgContext.getOperationContext().getProperty(Constants.RESPONSE_WRITTEN);\n+            OperationContext operationContext = msgContext.getOperationContext();\n+            \n+            Object contextWritten = null;\n+            if (operationContext!=null)\n+            \tcontextWritten = operationContext.getProperty(Constants.RESPONSE_WRITTEN);\n+            \n             if (contextWritten != null &&\n                     Constants.VALUE_TRUE.equals(contextWritten)) {\n                 response.setStatusLine(", "filename": "modules/core/src/org/apache/axis2/transport/http/HTTPWorker.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af", "parent": "https://github.com/apache/axis2-java/commit/59db1de035050c2c9afe2bb488b5f9c24ee62529", "message": "Fixed NPE , due to Deployment->OM conversion\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@240389 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_75", "file": [{"additions": 22, "raw_url": "https://github.com/apache/axis2-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java", "sha": "2adc71519eb123a3ca31faf41eb540b14b4bc19e", "changes": 30, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af", "patch": "@@ -63,13 +63,18 @@ public void populateConfig() throws DeploymentException {\n             processParameters(itr,axisConfiguration);\r\n \r\n             //process MessageReciver\r\n-            OMElement messageReceiver = config_element.getFirstChildWithName(\r\n-                    new QName(MESSAGERECEIVER));\r\n-            MessageReceiver msgrecivere= loadMessageReceiver(\r\n-                    Thread.currentThread().getContextClassLoader(),messageReceiver);\r\n-            OMAttribute mepAtt = messageReceiver.getAttribute(new QName(MEP));\r\n-            ((AxisConfigurationImpl)axisConfiguration).addMessageReceiver(\r\n-                    mepAtt.getValue(),msgrecivere);\r\n+\r\n+            Iterator msgRecives = config_element.getChildrenWithName(new QName(MESSAGERECEIVER));\r\n+            while (msgRecives.hasNext()) {\r\n+                OMElement msgRev = (OMElement) msgRecives.next();\r\n+                MessageReceiver msgrecivere= loadMessageReceiver(\r\n+                        Thread.currentThread().getContextClassLoader(),msgRev);\r\n+                OMAttribute mepAtt = msgRev.getAttribute(new QName(MEP));\r\n+                ((AxisConfigurationImpl)axisConfiguration).addMessageReceiver(\r\n+                        mepAtt.getValue(),msgrecivere);\r\n+            }\r\n+\r\n+\r\n \r\n             //Process Module refs\r\n             Iterator moduleitr = config_element.getChildrenWithName(\r\n@@ -142,6 +147,10 @@ private void processTransportSenders(Iterator trs_senders) throws DeploymentExce\n                 //tranport impl class\r\n                 OMAttribute trsClas = transport.getAttribute(\r\n                         new QName(CLASSNAME));\r\n+                if(trsClas == null){\r\n+                    throw new DeploymentException(\"TransportSEnder Implementation class is required \" +\r\n+                            \"for the transport\" + name);\r\n+                }\r\n                 String clasName = trsClas.getValue();\r\n                 Class sender;\r\n                 try {\r\n@@ -294,7 +303,12 @@ private void processObservers(Iterator oservers) throws DeploymentException {\n             AxisObserver observer;\r\n             OMAttribute trsClas = observerelement.getAttribute(\r\n                     new QName(CLASSNAME));\r\n-            String clasName = trsClas.getValue();\r\n+            String clasName;\r\n+            if (trsClas !=null) {\r\n+                clasName = trsClas.getValue();\r\n+            } else {\r\n+                throw new DeploymentException(\"Observer Implementation Class is requird\");\r\n+            }\r\n             try {\r\n                 Class observerclass = Class.forName(clasName, true, Thread.currentThread().\r\n                         getContextClassLoader());\r", "filename": "modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java"}, {"additions": 24, "raw_url": "https://github.com/apache/axis2-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java", "sha": "ed395ad5ff15fad9dfbdef7c8a94d33b7d001380", "changes": 42, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af", "patch": "@@ -174,12 +174,14 @@ protected void processModuleRefs(Iterator moduleRefs) throws DeploymentException\n                 OMElement moduleref = (OMElement) moduleRefs.next();\r\n                 OMAttribute moduleRefAttribute = moduleref.getAttribute(\r\n                         new QName(REF));\r\n-                String refName = moduleRefAttribute.getValue();\r\n-                if(engine.getModule(new QName(refName)) == null) {\r\n-                    throw new DeploymentException(Messages.getMessage(\r\n-                            DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n-                } else {\r\n-                    engine.getCurrentFileItem().addModule(new QName(refName));\r\n+                if(moduleRefAttribute !=null){\r\n+                    String refName = moduleRefAttribute.getValue();\r\n+                    if(engine.getModule(new QName(refName)) == null) {\r\n+                        throw new DeploymentException(Messages.getMessage(\r\n+                                DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n+                    } else {\r\n+                        engine.getCurrentFileItem().addModule(new QName(refName));\r\n+                    }\r\n                 }\r\n             }\r\n         }catch (AxisFault axisFault) {\r\n@@ -225,11 +227,13 @@ protected void processParameters(Iterator paramters, ParameterInclude parameterI\n             //setting locking attribute\r\n             OMAttribute paraLocked = paramterElement.getAttribute(\r\n                     new QName(ATTLOCKED));\r\n-            String lockedValue = paraLocked.getValue();\r\n-            if(\"true\".equals(lockedValue)){\r\n-                paramter.setLocked(true);\r\n-            } else {\r\n-                paramter.setLocked(false);\r\n+            if (paraLocked !=null) {\r\n+                String lockedValue = paraLocked.getValue();\r\n+                if(\"true\".equals(lockedValue)){\r\n+                    paramter.setLocked(true);\r\n+                } else {\r\n+                    paramter.setLocked(false);\r\n+                }\r\n             }\r\n             parameterInclude.addParameter(paramter);\r\n         }\r\n@@ -243,16 +247,18 @@ protected void processOpeasrtionModuleRefs(Iterator moduleRefs\n                 OMElement moduleref = (OMElement) moduleRefs.next();\r\n                 OMAttribute moduleRefAttribute = moduleref.getAttribute(\r\n                         new QName(REF));\r\n-                String refName = moduleRefAttribute.getValue();\r\n-                if(engine.getModule(new QName(refName)) == null) {\r\n-                    throw new DeploymentException(Messages.getMessage(\r\n-                            DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n-                } else {\r\n-                    opeartion.addModule(new QName(refName));\r\n+                if (moduleRefAttribute !=null) {\r\n+                    String refName = moduleRefAttribute.getValue();\r\n+                    if(engine.getModule(new QName(refName)) == null) {\r\n+                        throw new DeploymentException(Messages.getMessage(\r\n+                                DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n+                    } else {\r\n+                        opeartion.addModule(new QName(refName));\r\n+                    }\r\n                 }\r\n             }\r\n         }catch (AxisFault axisFault) {\r\n-            throw   new DeploymentException(axisFault);\r\n+            throw   new DeploymentException(\"Porcessing Operations Modules\" + axisFault);\r\n         }\r\n     }\r\n \r", "filename": "modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java"}, {"additions": 13, "raw_url": "https://github.com/apache/axis2-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java", "sha": "530d9ee8d561e28af2da8649bb1d3ec68c0598da", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af", "patch": "@@ -86,17 +86,19 @@ public void populateService() throws DeploymentException {\n             //process service description\r\n             OMElement descriptionElement = service_element.getFirstChildWithName(\r\n                     new QName(DESCRIPTION));\r\n-            OMElement descriptionValue = descriptionElement.getFirstElement();\r\n-            if(descriptionValue !=null){\r\n-                StringWriter writer = new StringWriter();\r\n-                descriptionValue.build();\r\n-                descriptionValue.serializeWithCache(new\r\n-                        OMOutputImpl(XMLOutputFactory.newInstance().createXMLStreamWriter(writer)));\r\n-                writer.flush();\r\n-                service.setServiceDescription(writer.toString());\r\n-            } else {\r\n-                service.setServiceDescription(descriptionElement.getText());\r\n-            }\r\n+            if (descriptionElement !=null) {\r\n+                OMElement descriptionValue = descriptionElement.getFirstElement();\r\n+                if(descriptionValue !=null){\r\n+                    StringWriter writer = new StringWriter();\r\n+                    descriptionValue.build();\r\n+                    descriptionValue.serializeWithCache(new\r\n+                            OMOutputImpl(XMLOutputFactory.newInstance().createXMLStreamWriter(writer)));\r\n+                    writer.flush();\r\n+                    service.setServiceDescription(writer.toString());\r\n+                } else {\r\n+                    service.setServiceDescription(descriptionElement.getText());\r\n+                }\r\n+            } \r\n \r\n             //processing servicewide modules which required to engage gloabbly\r\n             Iterator moduleRefs = service_element.getChildrenWithName(\r", "filename": "modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a945d8e27fe0f4366a31c4041cedc7af53b39218", "parent": "https://github.com/apache/axis2-java/commit/dfddf77c587eb543ca745c8c142e03dddb9f2184", "message": "Prevent NPE in OMBodyTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@227034 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_76", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/a945d8e27fe0f4366a31c4041cedc7af53b39218/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/a945d8e27fe0f4366a31c4041cedc7af53b39218/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java", "sha": "e3526315e2bb03c57a4f01a741fc566141f95620", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java?ref=a945d8e27fe0f4366a31c4041cedc7af53b39218", "patch": "@@ -515,7 +515,8 @@ public OMNode getFirstChild() {\n      */\n     public void setFirstChild(OMNode firstChild) {\n         this.firstChild = firstChild;\n-        firstChild.setParent(this);\n+        if (firstChild != null)\n+            firstChild.setParent(this);\n     }\n \n     /**", "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e2de057b38ddaac738abed572c821b34a42d980a", "parent": "https://github.com/apache/axis2-java/commit/05dbca40566e9a58d97b2e20e3ef0e497e2bb83f", "message": "- Prevent NPE in DocumentNavigator\n- Parse Comments and DTD\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@210000 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_77", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java", "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java", "sha": "30a01b639d09eff0b079a54121e8a7166317c095", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/OMNode.java?ref=e2de057b38ddaac738abed572c821b34a42d980a", "patch": "@@ -42,7 +42,15 @@\n      */\r\n     public static final short COMMENT_NODE = 8;\r\n \r\n-    public static final short BLOB_NODE = 8;\r\n+    /**\r\n+     * This node is a <code>DTD</code>.\r\n+     */\r\n+    public static final short DTD_NODE = 9;\r\n+\r\n+    /**\r\n+     * This node is a <code>ProcessingInstruction</code>.\r\n+     */\r\n+    public static final short PI_NODE = 10;\r\n \r\n     /**\r\n      * This method should return the immediate parent of the node.\r", "filename": "modules/xml/src/org/apache/axis2/om/OMNode.java"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java", "sha": "f1d399e1890e50f5883a7920af24e1568f3595aa", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java?ref=e2de057b38ddaac738abed572c821b34a42d980a", "patch": "@@ -145,6 +145,14 @@ public int next() throws OMException {\n                 case XMLStreamConstants.SPACE:\r\n                     next();\r\n                     break;\r\n+                case XMLStreamConstants.COMMENT:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.COMMENT_NODE);\r\n+                    break;\r\n+                case XMLStreamConstants.DTD:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.DTD_NODE);\r\n+                    break;\r\n                 default :\r\n                     throw new OMException();\r\n             }\r", "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java"}, {"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java", "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java", "sha": "fd1415b52a3a5b252a94eab72d4a3909b47f92b9", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java?ref=e2de057b38ddaac738abed572c821b34a42d980a", "patch": "@@ -68,7 +68,10 @@ public String getElementName(Object object) {\n      */\n     public String getElementQName(Object object) {\n         OMElement attr = (OMElement) object;\n-        String prefix = attr.getNamespace().getPrefix();\n+        String prefix = null;\n+        if(attr.getNamespace()!=null) {\n+            prefix = attr.getNamespace().getPrefix();\n+        }\n         if (prefix == null || \"\".equals(prefix)) {\n             return attr.getQName().getLocalPart();\n         }\n@@ -178,7 +181,7 @@ public boolean isComment(Object object) {\n      */\n     public boolean isText(Object object) {\n         return (object instanceof OMNode) &&\n-                (((OMText) object).getType() == OMNode.TEXT_NODE);\n+                (((OMNode) object).getType() == OMNode.TEXT_NODE);\n     }\n \n     /**", "filename": "modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/363d53c9977d25b11ae40ce5a135d58e7eb833af", "parent": "https://github.com/apache/axis2-java/commit/0e667021489884e28c39e4f6e85c89c419bccd5c", "message": "AXIS2-5646: Fixed some NPEs that occur when stopping the Axis2 OSGi bundle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1593765 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_78", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi-tests/src/test/java/OSGiTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi-tests/src/test/java/OSGiTest.java", "sha": "b75ca32e97b2cfaa48903009dbef5c4f7c080390", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/osgi-tests/src/test/java/OSGiTest.java?ref=363d53c9977d25b11ae40ce5a135d58e7eb833af", "patch": "@@ -107,8 +107,7 @@ public void test() throws Exception {\n             OMElement result = serviceClient.sendReceive(payload);\n             assertEquals(\"getVersionResponse\", result.getLocalName());\n             // Stop the Axis2 bundle explicitly here so that we can test that it cleanly shuts down\n-            // TODO: doesn't work yet; see AXIS2-5646\n-//            getAxis2Bundle(container).stop();\n+            getAxis2Bundle(container).stop();\n         } finally {\n             container.stop();\n         }", "filename": "modules/osgi-tests/src/test/java/OSGiTest.java"}, {"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java", "blob_url": "https://github.com/apache/axis2-java/blob/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java", "sha": "f9493c99fcfc7685acd77fe65331ad512e4553e2", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java?ref=363d53c9977d25b11ae40ce5a135d58e7eb833af", "patch": "@@ -54,4 +54,11 @@ public void init(ServletConfig servletConfig) throws ServletException {\n         }\n \n     }\n+\n+    @Override\n+    public void destroy() {\n+        // Do nothing. This prevents AxisServlet from terminating the configuration context.\n+        // The configuration context is terminated by OSGiConfigurationContextFactory, and\n+        // invoking the terminate method twice (potentially concurrently) causes problems.\n+    }\n }", "filename": "modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a44fabc66c95010a56b9b30d21e5437051dbe8b1", "parent": "https://github.com/apache/axis2-java/commit/d2e93a5c8b99443c71a8e1544e1b0e85625549b6", "message": "Fix NPE if tooling classes can't be found.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1000664 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_79", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/a44fabc66c95010a56b9b30d21e5437051dbe8b1/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/a44fabc66c95010a56b9b30d21e5437051dbe8b1/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java", "sha": "f686ac2bd623dea4842b24b1bda2f3c7eed49b7e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java?ref=a44fabc66c95010a56b9b30d21e5437051dbe8b1", "patch": "@@ -71,7 +71,7 @@ public static String getWsGenVersion() throws ClassNotFoundException, IOExceptio\n                 if (log.isDebugEnabled()) {\r\n                     log.debug(\"Exception thrown from getWsGenVersion: \" + e2.getMessage(), e2);\r\n                 }\r\n-                throw (ClassNotFoundException) e2.getException();\r\n+                throw (ClassNotFoundException) e2;\r\n             }\r\n         }\r\n \r", "filename": "modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a3015239397b315f445ccaa56b876b0e30801a61", "parent": "https://github.com/apache/axis2-java/commit/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6", "message": "Axis2-4793\nFix for NPE When invoking Shutdown Modules in ConfigurationContext.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@983468 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_80", "file": [{"additions": 18, "raw_url": "https://github.com/apache/axis2-java/raw/a3015239397b315f445ccaa56b876b0e30801a61/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/a3015239397b315f445ccaa56b876b0e30801a61/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "sha": "692fa3c2e30b56837911d529abafc8a542a6a325", "changes": 32, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java?ref=a3015239397b315f445ccaa56b876b0e30801a61", "patch": "@@ -741,14 +741,16 @@ public void shutdownModulesAndServices() throws AxisFault{\n         if(log.isDebugEnabled()){\n             log.debug(\"Invoke modules shutdown.\");\n         }\n-        HashMap modules = axisConfiguration.getModules();\n-        if (modules != null) {\n-            Iterator moduleitr = modules.values().iterator();\n-            while (moduleitr.hasNext()) {\n-                AxisModule axisModule = (AxisModule) moduleitr.next();\n-                Module module = axisModule.getModule();\n-                if (module != null) {\n-                    module.shutdown(this);\n+        if(axisConfiguration!=null){\n+            HashMap modules = axisConfiguration.getModules();\n+            if (modules != null) {\n+                Iterator moduleitr = modules.values().iterator();\n+                while (moduleitr.hasNext()) {\n+                    AxisModule axisModule = (AxisModule) moduleitr.next();\n+                    Module module = axisModule.getModule();\n+                    if (module != null) {\n+                        module.shutdown(this);\n+                    }\n                 }\n             }\n         }\n@@ -757,12 +759,14 @@ public void shutdownModulesAndServices() throws AxisFault{\n         if(log.isDebugEnabled()){\n             log.debug(\"Invoke services shutdown.\");\n         }\n-        for (Iterator services = axisConfiguration.getServices().values().iterator();\n-        services.hasNext();) {\n-            AxisService axisService = (AxisService) services.next();\n-            ServiceLifeCycle serviceLifeCycle = axisService.getServiceLifeCycle();\n-            if (serviceLifeCycle != null) {\n-                serviceLifeCycle.shutDown(this, axisService);\n+        if(axisConfiguration!=null){\n+            for (Iterator services = axisConfiguration.getServices().values().iterator();\n+            services.hasNext();) {\n+                AxisService axisService = (AxisService) services.next();\n+                ServiceLifeCycle serviceLifeCycle = axisService.getServiceLifeCycle();\n+                if (serviceLifeCycle != null) {\n+                    serviceLifeCycle.shutDown(this, axisService);\n+                }\n             }\n         }\n         stopped = true;", "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c710b95cc5dacf33612b02f59fe3b161442973f7", "parent": "https://github.com/apache/axis2-java/commit/874443e5d498c4f93f6186a28c2508030d758579", "message": "Fix NPE that occurs when Operation parameter is null for Soap12 faults\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@813872 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_81", "file": [{"additions": 49, "raw_url": "https://github.com/apache/axis2-java/raw/c710b95cc5dacf33612b02f59fe3b161442973f7/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/c710b95cc5dacf33612b02f59fe3b161442973f7/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "sha": "5f01081f0ad899dbb908db4382bf4076d8976bff", "changes": 50, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java?ref=c710b95cc5dacf33612b02f59fe3b161442973f7", "patch": "@@ -518,7 +518,13 @@ private static SOAPEnvelope createFaultEnvelope(MessageContext context, Throwabl\n             if (context.isSOAP11()) {\n                 fault.getCode().setText(soapFaultCode);\n             } else {\n-                fault.getCode().getValue().setText(soapFaultCode);\n+                SOAPFaultValue value = fault.getCode().getValue();\n+                if(log.isDebugEnabled()){\n+                    log.debug(\"soapFaultCode originally was set to : \" + soapFaultCode);\n+                }\n+                OMNamespace namespace = value.getNamespace();\n+                soapFaultCode = switchNamespacePrefix(soapFaultCode, namespace);\n+                value.setText(soapFaultCode);\n             }\n         }\n         \n@@ -639,7 +645,49 @@ private static SOAPEnvelope createFaultEnvelope(MessageContext context, Throwabl\n \n         return envelope;\n     }\n+    \n+    /**\n+     * Switch the namespace prefix in the soap fault code. It should match the prefix used\n+     * by the outgoing soap envelope.\n+     * \n+     * @param soapFaultCode\n+     * @param namespace\n+     * @return\n+     */\n+    public static String switchNamespacePrefix(String soapFaultCode, OMNamespace namespace) {\n+        if(soapFaultCode != null && \n+                soapFaultCode.endsWith(\":\" + SOAPConstants.FAULT_CODE_VERSION_MISMATCH)) {\n+            String prefix = namespace.getPrefix();\n+            if(log.isDebugEnabled()){\n+                log.debug(\"prefix being used in the outgoing soap envelope is : \" + prefix);\n+            }\n+            // The following methods set the prefix of the incoming soap envelope in soapFaultCode \n+            //    validateSOAPVersion method in BuilderUtil or \n+            //    identifySOAPVersion method in StAXSOAPModelBuilder \n+            // But the outgoing envelope may have a different prefix, if it does then\n+            // we need to strip the prefix set by those methods and add the\n+            // correct one.\n+            if (!soapFaultCode.startsWith(prefix + \":\")) {\n+                if(log.isDebugEnabled()){\n+                    log.debug(\"stripping old prefix and adding the new one - \" + prefix);\n+                }\n+                // Strip the orginal prefix \n+                int index = soapFaultCode.indexOf(':') + 1;\n+                soapFaultCode = soapFaultCode.substring(index);\n+                // Use the correct prefix for the outgoing soap envelope namespace \n+                soapFaultCode = prefix + \":\" + soapFaultCode;\n+            }\n+        }\n+        if(log.isDebugEnabled()){\n+                    log.debug(\"soapFaultCode is being set to : \" + soapFaultCode);\n+        }\n+        return soapFaultCode;\n+    }\n+\n \n+    \n+    \n+    \n     /**\n      * By the time the exception comes here it can be wrapped by so many levels. This will crip down\n      * to the root cause and get the initial error depending on the property", "filename": "modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/76c5660d08964d7f78feb0230cb2236384599c9d", "parent": "https://github.com/apache/axis2-java/commit/3b28c902e97b7e377f116d242066c5ae526f79e3", "message": "Fixed possible NPE triggered if cacheAttachments is specified without sizeThreshold.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@760642 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_82", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/76c5660d08964d7f78feb0230cb2236384599c9d/modules/kernel/src/org/apache/axis2/builder/BuilderUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/76c5660d08964d7f78feb0230cb2236384599c9d/modules/kernel/src/org/apache/axis2/builder/BuilderUtil.java", "sha": "90df105ae6d0f7a75209ff09923c4601ef5d3e35", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/builder/BuilderUtil.java?ref=76c5660d08964d7f78feb0230cb2236384599c9d", "patch": "@@ -507,8 +507,8 @@ protected static Attachments createAttachmentsMap(MessageContext msgContext,\n             } else {\n                 Parameter attachmentSizeThresholdParameter = msgContext\n                         .getParameter(Constants.Configuration.FILE_SIZE_THRESHOLD);\n-                attachmentSizeThreshold = attachmentSizeThresholdParameter\n-                        .getValue().toString();\n+                attachmentSizeThreshold = attachmentSizeThresholdParameter != null ?\n+                        attachmentSizeThresholdParameter.getValue().toString() : null;\n             }\n         }\n ", "filename": "modules/kernel/src/org/apache/axis2/builder/BuilderUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/cf78546215f4cfb29fa53446050240a9a5bd1e18", "parent": "https://github.com/apache/axis2-java/commit/25fae37067d61c389cadba203d8eed88ae5d23f8", "message": "AXIS2-4114 check for possible NPE which caused a problem in rampart build\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@725307 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_83", "file": [{"additions": 10, "raw_url": "https://github.com/apache/axis2-java/raw/cf78546215f4cfb29fa53446050240a9a5bd1e18/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/cf78546215f4cfb29fa53446050240a9a5bd1e18/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "sha": "be9e6e675de13b60a92123b9ce42fe89f7ed5ef3", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=cf78546215f4cfb29fa53446050240a9a5bd1e18", "patch": "@@ -1579,7 +1579,7 @@ public Policy getEffectivePolicy() {\n         // If AxisBindingMessage is not set, try to find the binding message from the AxisService\n         if (bindingMessage == null) {\n         \tbindingMessage = findBindingMessage();\n-        } \n+        }\n         \n         if (bindingMessage != null) {\n             return bindingMessage.getEffectivePolicy();\n@@ -1592,15 +1592,21 @@ public Policy getEffectivePolicy() {\n     }\n  \n     private AxisBindingMessage findBindingMessage() {\n-    \tif (axisService != null) {\n+    \tif (axisService != null && axisOperation != null ) {\n \t\t\tif (axisService.getEndpointName() != null) {\n \t\t\t\tAxisEndpoint axisEndpoint = axisService\n \t\t\t\t\t\t.getEndpoint(axisService.getEndpointName());\n \t\t\t\tif (axisEndpoint != null) {\n \t\t\t\t\tAxisBinding axisBinding = axisEndpoint.getBinding();\n-\t\t\t\t\tAxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisBinding\n+                    AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisBinding\n \t\t\t\t\t\t\t.getChild(axisOperation.getName());\n-\t\t\t\t\tString direction = axisMessage.getDirection();\n+\n+                    //If Binding Operation is not found, just return null\n+                    if (axisBindingOperation == null) {\n+                       return null;\n+                    }\n+\n+                    String direction = axisMessage.getDirection();\n \t\t\t\t\tAxisBindingMessage axisBindingMessage = null;\n \t\t\t\t\tif (WSDLConstants.WSDL_MESSAGE_DIRECTION_IN\n \t\t\t\t\t\t\t.equals(direction)", "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/5369caaef4d04554981f714f65ef56a713baa982", "parent": "https://github.com/apache/axis2-java/commit/38532f594b503d6a5e2d698a5eae7e89fa7f4a14", "message": "remove old/unused function, catch NPE and reuse some code\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@700561 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_84", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/5369caaef4d04554981f714f65ef56a713baa982/modules/jaxws/src/org/apache/axis2/jaxws/binding/BindingUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/5369caaef4d04554981f714f65ef56a713baa982/modules/jaxws/src/org/apache/axis2/jaxws/binding/BindingUtils.java", "sha": "a97f28383c9bb3a7d06987a527b49a21ff990cd3", "changes": 14, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/binding/BindingUtils.java?ref=5369caaef4d04554981f714f65ef56a713baa982", "patch": "@@ -33,7 +33,7 @@\n      */\n     public static Binding createBinding(EndpointDescription ed) {\n         if (ed == null) {\n-            // Do we default to the SOAPBinding?            \n+            throw new NullPointerException(\"EndpointDescription is null\");          \n         }\n         \n         String bindingType = \n@@ -55,17 +55,7 @@ else if (BindingUtils.isHTTPBinding(bindingType)) {\n     }\n     \n     public static boolean isSOAPBinding(String url) {\n-        if (url != null && (url.equals(SOAPBinding.SOAP11HTTP_BINDING) ||\n-                url.equals(SOAPBinding.SOAP11HTTP_MTOM_BINDING) ||\n-                url.equals(SOAPBinding.SOAP12HTTP_BINDING)|| \n-                url.equals(SOAPBinding.SOAP12HTTP_MTOM_BINDING) ||\n-                url.equals(MDQConstants.SOAP11JMS_BINDING) ||\n-                url.equals(MDQConstants.SOAP11JMS_MTOM_BINDING) ||\n-                url.equals(MDQConstants.SOAP12JMS_BINDING) ||\n-                url.equals(MDQConstants.SOAP12JMS_MTOM_BINDING) )) {\n-            return true;\n-        }\n-        return false;\n+        return (isSOAP11Binding(url) || isSOAP12Binding(url));\n     }\n     \n     public static boolean isSOAP11Binding(String url) {", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/binding/BindingUtils.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/5369caaef4d04554981f714f65ef56a713baa982/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/5369caaef4d04554981f714f65ef56a713baa982/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java", "sha": "ff62097e32540ba455a5536e4881dc0179a7e854", "changes": 7, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java?ref=5369caaef4d04554981f714f65ef56a713baa982", "patch": "@@ -205,13 +205,6 @@ public void invokeAsync(MessageContext request, EndpointCallback callback) {\n         \n         return;\n     }\n-\n-    protected Object invokeService(MessageContext ctx,\n-                                   Method method, \n-                                   Object obj,\n-                                   Object args[]) throws Exception {\n-        return method.invoke(obj, args);\n-    }\n     \n     private void initialize(MessageContext mc) {\n         mc.setOperationName(mc.getAxisMessageContext().getAxisOperation().getName());", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/edd14969ac5439bbe34b773757cc62dac84e7b76", "parent": "https://github.com/apache/axis2-java/commit/c90f7478ea43831dd776cf5ce7f4f9bf98b3f62b", "message": "AXIS2-3963\nContributor:Samuel Isokpunwu and Bruce Tiffany\nPrevent NPE if null data handlers are used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@683622 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_85", "file": [{"additions": 14, "raw_url": "https://github.com/apache/axis2-java/raw/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java", "blob_url": "https://github.com/apache/axis2-java/blob/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java", "sha": "c20866d76e5f924200d8e3815df7e28cd1fbe1ea", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java?ref=edd14969ac5439bbe34b773757cc62dac84e7b76", "patch": "@@ -95,7 +95,15 @@ public Attachment(Object sigValue, Class sigClass, AttachmentDescription aDesc,\n      */\r\n     public DataHandler getDataHandler() {\r\n         if (dh == null) {\r\n-            dh = createDataHandler(sigValue, sigClass, aDesc.getMimeTypes(), getContentID());\r\n+        \t//if null DH was specified explicitly, return it, don't create something else.\r\n+            if (sigValue == null) {\r\n+                // Create a contentID and null DataHandler\r\n+                getContentID(); // Force setting of content id\r\n+                dh = (DataHandler) null;\r\n+            } else {\r\n+                // Normal case: create a DataHandler from the sigValue object\r\n+                dh = createDataHandler(sigValue, sigClass, aDesc.getMimeTypes(), getContentID());\r\n+            }\r\n         }\r\n         return dh;\r\n     }\r\n@@ -123,6 +131,11 @@ private static DataHandler createDataHandler(Object value, Class cls, String[] m\n         DataHandler dh = null;\r\n         if (cls.isAssignableFrom(DataHandler.class)) {\r\n             dh = (DataHandler) value;\r\n+            if(dh == null)  \r\n+            {\r\n+                return dh; //return if DataHandler is null\r\n+            }\r\n+\r\n             try {\r\n                 Object content = dh.getContent();\r\n                 // If the content is a Source, convert to a String due to \r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java", "sha": "341ee07d1ea8ea4872e9bcee57ee35a260e55dcf", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java?ref=edd14969ac5439bbe34b773757cc62dac84e7b76", "patch": "@@ -443,6 +443,10 @@ public Object getValue(Object context, BlockFactory blockFactory) throws WebServ\n      * @see org.apache.axis2.jaxws.message.Message#getDataHandler(java.lang.String)\n      */\n     public DataHandler getDataHandler(String cid) {\n+        // if null DH was specified explicitly, just return\n+        if(cid == null) {\n+            return (DataHandler) null;\n+        }\n         String bcid = getBlobCID(cid);\n         return attachments.getDataHandler(bcid);\n     }", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9212b9741cd67e1654027a339e14cb727837a028", "parent": "https://github.com/apache/axis2-java/commit/36c233153d0ca5468afbb6941f0d559062fc84e5", "message": "Many thanks to Jasmim Ramlee for finding the issue. Added a try/catch around getPathInfo to protect against possible NPE's.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@674846 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_86", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/9212b9741cd67e1654027a339e14cb727837a028/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/9212b9741cd67e1654027a339e14cb727837a028/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java", "sha": "2098594f8b6bb40ea8a3c130ff31565bb00a62b2", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java?ref=9212b9741cd67e1654027a339e14cb727837a028", "patch": "@@ -143,7 +143,12 @@ public static void addProperties(SOAPMessageContext soapMessageContext,\n                 log.debug(\"SERVLET_REQUEST Set\");\n             }\n \n-            String pathInfo = req.getPathInfo();\n+            String pathInfo = null;\n+            try {\n+                pathInfo = req.getPathInfo();\n+            } catch (Throwable t){\n+                log.debug(\"exception in getPathInfo\", t);\n+            }\n             soapMessageContext.put(javax.xml.ws.handler.MessageContext.PATH_INFO, pathInfo);\n             soapMessageContext\n                     .setScope(javax.xml.ws.handler.MessageContext.PATH_INFO, Scope.APPLICATION);", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/context/utils/ContextUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/b2c03d71bedf0cc36340820932bf5406269dc2f8", "parent": "https://github.com/apache/axis2-java/commit/93082c8ae59b5350f444f91e93ef9a334331c687", "message": "AXIS2-3666 followup:  more careful NPE prevention, just in case\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@643585 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_87", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/b2c03d71bedf0cc36340820932bf5406269dc2f8/modules/jaxws/src/org/apache/axis2/jaxws/server/InvocationHelper.java", "blob_url": "https://github.com/apache/axis2-java/blob/b2c03d71bedf0cc36340820932bf5406269dc2f8/modules/jaxws/src/org/apache/axis2/jaxws/server/InvocationHelper.java", "sha": "cc4faab16183cdd789ef577e7b90dfe3e1168f10", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/server/InvocationHelper.java?ref=b2c03d71bedf0cc36340820932bf5406269dc2f8", "patch": "@@ -107,6 +107,10 @@ else if(responseContext != null\n      */\r\n     public static Throwable determineMappedException(Throwable t, MessageContext context) {\r\n         EndpointInvocationContext eic = (EndpointInvocationContext)context.getInvocationContext();\r\n+        if (eic == null) {\r\n+            eic = new EndpointInvocationContextImpl();\r\n+            eic.setRequestMessageContext(context);\r\n+        }\r\n         eic.setInvocationListeners((List<InvocationListener>)context.getProperty(org.apache.axis2.jaxws.spi.Constants.INVOCATION_LISTENER_LIST));\r\n         return determineMappedException(t, eic);\r\n     }\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/server/InvocationHelper.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/671cbdb25f4563473e65c8fe571974879b157212", "parent": "https://github.com/apache/axis2-java/commit/1372533dd8f71e2fd4810896c492a59477a4a303", "message": "Fix for AXIS2-3601 - org.apache.axis2.dataretrieval.DataRetrievalException : Added checks to prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@636747 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_88", "file": [{"additions": 173, "raw_url": "https://github.com/apache/axis2-java/raw/671cbdb25f4563473e65c8fe571974879b157212/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java", "blob_url": "https://github.com/apache/axis2-java/blob/671cbdb25f4563473e65c8fe571974879b157212/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java", "sha": "c8dbd880535cc571a66d68f2b20c880a9d9f083e", "changes": 336, "status": "modified", "deletions": 163, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java?ref=671cbdb25f4563473e65c8fe571974879b157212", "patch": "@@ -1320,75 +1320,79 @@ private void generateSoap11Binding(OMFactory fac, OMElement defintions,\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n-\t\t\t\t// AxisBindingMessage axisBindingInMessage =\n-\t\t\t\t// axisBindingOperation.getC);\n-\t\t\t\tAxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-\t\t\t\tAxisMessage inaxisMessage = axisBindingInMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\n-\t\t\t\tif (inaxisMessage != null) {\n-\t\t\t\t\toperation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n-\t\t\t\t\tOMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\taddPolicyAsExtElement(axisBindingInMessage, input);\n-\t\t\t\t\taddExtensionElement(fac, input, SOAP_BODY, SOAP_USE, use,\n-\t\t\t\t\t\t\tnull, targetNamespace, soap);\n-\t\t\t\t\t// addPolicyAsExtElement(PolicyInclude.BINDING_INPUT_POLICY,\n-\t\t\t\t\t// inaxisMessage.getPolicyInclude(), input);\n-\t\t\t\t\toperation.addChild(input);\n-\t\t\t\t\twriteSoapHeaders(inaxisMessage, fac, input, soap12);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n+                AxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n+                if (axisBindingInMessage != null) {\n+                    AxisMessage inaxisMessage = axisBindingInMessage\n+                            .getAxisMessage();\n+\n+                    if (inaxisMessage != null) {\n+                        operation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n+                        OMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        addPolicyAsExtElement(axisBindingInMessage, input);\n+                        addExtensionElement(fac, input, SOAP_BODY, SOAP_USE, use,\n+                                null, targetNamespace, soap);\n+                        // addPolicyAsExtElement(PolicyInclude.BINDING_INPUT_POLICY,\n+                        // inaxisMessage.getPolicyInclude(), input);\n+                        operation.addChild(input);\n+                        writeSoapHeaders(inaxisMessage, fac, input, soap12);\n+                    }\n+                }\n+            }\n+\n+            if (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_OUT_OPTIONAL_IN.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OPTIONAL_OUT.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n \n-\t\t\t\tAxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n-\t\t\t\tAxisMessage outAxisMessage = axisBindingOutMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\t\t\t\tif (outAxisMessage != null) {\n-\t\t\t\t\tOMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\taddPolicyAsExtElement(axisBindingOutMessage, output);\n-\t\t\t\t\taddExtensionElement(fac, output, SOAP_BODY, SOAP_USE, use,\n-\t\t\t\t\t\t\tnull, targetNamespace, soap);\n-\t\t\t\t\t// addPolicyAsExtElement(PolicyInclude.BINDING_OUTPUT_POLICY,\n-\t\t\t\t\t// outAxisMessage.getPolicyInclude(), output);\n-\t\t\t\t\toperation.addChild(output);\n-\t\t\t\t\twriteSoapHeaders(outAxisMessage, fac, output, soap12);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// generate fault Messages\n-\t\t\tArrayList faultyMessages = axisBindingOperation.getFaults();\n-\t\t\tif (faultyMessages != null) {\n-\t\t\t\tfor (int i = 0; i < faultyMessages.size(); i++) {\n-\t\t\t\t\tAxisBindingMessage bindingFaultyMessage = (AxisBindingMessage) faultyMessages\n-\t\t\t\t\t\t\t.get(i);\n-\t\t\t\t\tAxisMessage faultyMessage = bindingFaultyMessage\n-\t\t\t\t\t\t\t.getAxisMessage();\n-\n-\t\t\t\t\tOMElement fault = fac.createOMElement(FAULT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\n-\t\t\t\t\taddPolicyAsExtElement(bindingFaultyMessage, fault);\n-\t\t\t\t\taddExtensionElement(fac, fault, FAULT_LOCAL_NAME, SOAP_USE,\n-\t\t\t\t\t\t\tuse, ATTRIBUTE_NAME, faultyMessage.getName(), soap);\n-\t\t\t\t\tfault.addAttribute(ATTRIBUTE_NAME, faultyMessage.getName(),\n-\t\t\t\t\t\t\tnull);\n-\t\t\t\t\t// add policies for fault messages\n-\t\t\t\t\toperation.addChild(fault);\n-\t\t\t\t\twriteSoapHeaders(faultyMessage, fac, fault, soap);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+                AxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n+                if (axisBindingOutMessage != null) {\n+                    AxisMessage outAxisMessage = axisBindingOutMessage\n+                            .getAxisMessage();\n+                    if (outAxisMessage != null) {\n+                        OMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        addPolicyAsExtElement(axisBindingOutMessage, output);\n+                        addExtensionElement(fac, output, SOAP_BODY, SOAP_USE, use,\n+                                null, targetNamespace, soap);\n+                        // addPolicyAsExtElement(PolicyInclude.BINDING_OUTPUT_POLICY,\n+                        // outAxisMessage.getPolicyInclude(), output);\n+                        operation.addChild(output);\n+                        writeSoapHeaders(outAxisMessage, fac, output, soap12);\n+                    }\n+                }\n+            }\n+\n+            // generate fault Messages\n+            ArrayList faultyMessages = axisBindingOperation.getFaults();\n+            if (faultyMessages != null) {\n+                for (int i = 0; i < faultyMessages.size(); i++) {\n+                    AxisBindingMessage bindingFaultyMessage = (AxisBindingMessage) faultyMessages\n+                            .get(i);\n+                    if (bindingFaultyMessage != null) {\n+                        AxisMessage faultyMessage = bindingFaultyMessage\n+                                .getAxisMessage();\n+\n+                        OMElement fault = fac.createOMElement(FAULT_LOCAL_NAME,\n+                                wsdl);\n+\n+                        addPolicyAsExtElement(bindingFaultyMessage, fault);\n+                        addExtensionElement(fac, fault, FAULT_LOCAL_NAME, SOAP_USE,\n+                                use, ATTRIBUTE_NAME, faultyMessage.getName(), soap);\n+                        fault.addAttribute(ATTRIBUTE_NAME, faultyMessage.getName(),\n+                                null);\n+                        // add policies for fault messages\n+                        operation.addChild(fault);\n+                        writeSoapHeaders(faultyMessage, fac, fault, soap);\n+                    }\n+                }\n+            }\n+        }\n+    }\n \n \tprivate void generateSoap12Binding(OMFactory fac, OMElement defintions,\n \t\t\tAxisBinding axisBinding) throws Exception {\n@@ -1457,72 +1461,76 @@ private void generateSoap12Binding(OMFactory fac, OMElement defintions,\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n-\t\t\t\t// AxisBindingMessage axisBindingInMessage =\n-\t\t\t\t// axisBindingOperation.getC);\n-\t\t\t\tAxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-\t\t\t\tAxisMessage inaxisMessage = axisBindingInMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\n-\t\t\t\tif (inaxisMessage != null) {\n-\t\t\t\t\toperation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n-\t\t\t\t\tOMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\taddPolicyAsExtElement(axisBindingInMessage, input);\n-\t\t\t\t\taddExtensionElement(fac, input, SOAP_BODY, SOAP_USE, use,\n-\t\t\t\t\t\t\tnull, targetNamespace, soap12);\n-\t\t\t\t\toperation.addChild(input);\n-\t\t\t\t\twriteSoapHeaders(inaxisMessage, fac, input, soap12);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n+                AxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n+                if (axisBindingInMessage != null) {\n+                    AxisMessage inaxisMessage = axisBindingInMessage\n+                            .getAxisMessage();\n+\n+                    if (inaxisMessage != null) {\n+                        operation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n+                        OMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        addPolicyAsExtElement(axisBindingInMessage, input);\n+                        addExtensionElement(fac, input, SOAP_BODY, SOAP_USE, use,\n+                                null, targetNamespace, soap12);\n+                        operation.addChild(input);\n+                        writeSoapHeaders(inaxisMessage, fac, input, soap12);\n+                    }\n+                }\n+            }\n+\n+            if (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_OUT_OPTIONAL_IN.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OPTIONAL_OUT.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n \n-\t\t\t\tAxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n-\t\t\t\tAxisMessage outAxisMessage = axisBindingOutMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\t\t\t\tif (outAxisMessage != null) {\n-\t\t\t\t\tOMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\taddPolicyAsExtElement(axisBindingOutMessage, output);\n-\t\t\t\t\taddExtensionElement(fac, output, SOAP_BODY, SOAP_USE, use,\n-\t\t\t\t\t\t\tnull, targetNamespace, soap12);\n-\t\t\t\t\t// addPolicyAsExtElement(PolicyInclude.BINDING_OUTPUT_POLICY,\n-\t\t\t\t\t// outAxisMessage.getPolicyInclude(), output);\n-\t\t\t\t\toperation.addChild(output);\n-\t\t\t\t\twriteSoapHeaders(outAxisMessage, fac, output, soap12);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// generate fault Messages\n-\t\t\tArrayList faultyMessages = axisBindingOperation.getFaults();\n-\t\t\tif (faultyMessages != null) {\n-\t\t\t\tfor (int i = 0; i < faultyMessages.size(); i++) {\n-\t\t\t\t\tAxisBindingMessage bindingFaultyMessage = (AxisBindingMessage) faultyMessages\n-\t\t\t\t\t\t\t.get(i);\n-\t\t\t\t\tAxisMessage faultyMessage = bindingFaultyMessage\n-\t\t\t\t\t\t\t.getAxisMessage();\n-\t\t\t\t\tOMElement fault = fac.createOMElement(FAULT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\taddPolicyAsExtElement(bindingFaultyMessage, fault);\n-\t\t\t\t\taddExtensionElement(fac, fault, FAULT_LOCAL_NAME, SOAP_USE,\n-\t\t\t\t\t\t\tuse, ATTRIBUTE_NAME, faultyMessage.getName(),\n-\t\t\t\t\t\t\tsoap12);\n-\t\t\t\t\tfault.addAttribute(ATTRIBUTE_NAME, faultyMessage.getName(),\n-\t\t\t\t\t\t\tnull);\n-\t\t\t\t\t// add policies for fault messages\n-\t\t\t\t\toperation.addChild(fault);\n-\t\t\t\t\twriteSoapHeaders(faultyMessage, fac, fault, soap12);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+                AxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n+                if (axisBindingOutMessage != null) {\n+                    AxisMessage outAxisMessage = axisBindingOutMessage\n+                            .getAxisMessage();\n+                    if (outAxisMessage != null) {\n+                        OMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        addPolicyAsExtElement(axisBindingOutMessage, output);\n+                        addExtensionElement(fac, output, SOAP_BODY, SOAP_USE, use,\n+                                null, targetNamespace, soap12);\n+                        // addPolicyAsExtElement(PolicyInclude.BINDING_OUTPUT_POLICY,\n+                        // outAxisMessage.getPolicyInclude(), output);\n+                        operation.addChild(output);\n+                        writeSoapHeaders(outAxisMessage, fac, output, soap12);\n+                    }\n+                }\n+            }\n+\n+            // generate fault Messages\n+            ArrayList faultyMessages = axisBindingOperation.getFaults();\n+            if (faultyMessages != null) {\n+                for (int i = 0; i < faultyMessages.size(); i++) {\n+                    AxisBindingMessage bindingFaultyMessage = (AxisBindingMessage) faultyMessages\n+                            .get(i);\n+                    if (bindingFaultyMessage != null) {\n+                        AxisMessage faultyMessage = bindingFaultyMessage\n+                                .getAxisMessage();\n+                        OMElement fault = fac.createOMElement(FAULT_LOCAL_NAME,\n+                                wsdl);\n+                        addPolicyAsExtElement(bindingFaultyMessage, fault);\n+                        addExtensionElement(fac, fault, FAULT_LOCAL_NAME, SOAP_USE,\n+                                use, ATTRIBUTE_NAME, faultyMessage.getName(),\n+                                soap12);\n+                        fault.addAttribute(ATTRIBUTE_NAME, faultyMessage.getName(),\n+                                null);\n+                        // add policies for fault messages\n+                        operation.addChild(fault);\n+                        writeSoapHeaders(faultyMessage, fac, fault, soap12);\n+                    }\n+                }\n+            }\n+        }\n+    }\n \n \tprivate void generateHttpBinding(OMFactory fac, OMElement defintions,\n \t\t\tAxisBinding axisBinding) throws Exception {\n@@ -1568,52 +1576,54 @@ private void generateHttpBinding(OMFactory fac, OMElement defintions,\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n-\t\t\t\t// AxisBindingMessage axisBindingInMessage =\n-\t\t\t\t// axisBindingOperation.getC);\n-\t\t\t\tAxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-\t\t\t\tAxisMessage inaxisMessage = axisBindingInMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\n-\t\t\t\tif (inaxisMessage != null) {\n-\t\t\t\t\toperation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n-\t\t\t\t\tOMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\tOMElement inputelement = fac.createOMElement(\"content\",\n-\t\t\t\t\t\t\tmime);\n-\t\t\t\t\tinput.addChild(inputelement);\n-\t\t\t\t\tinputelement.addAttribute(\"type\", \"text/xml\", null);\n-\t\t\t\t\tinputelement.addAttribute(\"part\", axisOperation.getName()\n-\t\t\t\t\t\t\t.getLocalPart(), null);\n-\t\t\t\t\toperation.addChild(input);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n+                AxisBindingMessage axisBindingInMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n+                if (axisBindingInMessage != null) {\n+                    AxisMessage inaxisMessage = axisBindingInMessage\n+                            .getAxisMessage();\n+\n+                    if (inaxisMessage != null) {\n+                        operation.addAttribute(ATTRIBUTE_NAME, opeartionName, null);\n+                        OMElement input = fac.createOMElement(IN_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        OMElement inputelement = fac.createOMElement(\"content\",\n+                                mime);\n+                        input.addChild(inputelement);\n+                        inputelement.addAttribute(\"type\", \"text/xml\", null);\n+                        inputelement.addAttribute(\"part\", axisOperation.getName()\n+                                .getLocalPart(), null);\n+                        operation.addChild(input);\n+                    }\n+                }\n+            }\n+\n+            if (WSDL2Constants.MEP_URI_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_OUT_OPTIONAL_IN.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OPTIONAL_OUT.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_OUT_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_ROBUST_IN_ONLY.equals(MEP)\n \t\t\t\t\t|| WSDL2Constants.MEP_URI_IN_OUT.equals(MEP)) {\n \n-\t\t\t\tAxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n-\t\t\t\t\t\t.getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n-\t\t\t\tAxisMessage outAxisMessage = axisBindingOutMessage\n-\t\t\t\t\t\t.getAxisMessage();\n-\t\t\t\tif (outAxisMessage != null) {\n-\t\t\t\t\tOMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n-\t\t\t\t\t\t\twsdl);\n-\t\t\t\t\tOMElement outElement = fac.createOMElement(\"content\", mime);\n-\t\t\t\t\toutElement.addChild(outElement);\n-\t\t\t\t\toutElement.addAttribute(\"type\", \"text/xml\", null);\n-\t\t\t\t\toutElement.addAttribute(\"part\", axisOperation.getName()\n-\t\t\t\t\t\t\t.getLocalPart(), null);\n-\t\t\t\t\toutput.addChild(outElement);\n-\t\t\t\t\toperation.addChild(output);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+                AxisBindingMessage axisBindingOutMessage = (AxisBindingMessage) axisBindingOperation\n+                        .getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n+                if (axisBindingOutMessage != null) {\n+                    AxisMessage outAxisMessage = axisBindingOutMessage\n+                            .getAxisMessage();\n+                    if (outAxisMessage != null) {\n+                        OMElement output = fac.createOMElement(OUT_PUT_LOCAL_NAME,\n+                                wsdl);\n+                        OMElement outElement = fac.createOMElement(\"content\", mime);\n+                        outElement.addChild(outElement);\n+                        outElement.addAttribute(\"type\", \"text/xml\", null);\n+                        outElement.addAttribute(\"part\", axisOperation.getName()\n+                                .getLocalPart(), null);\n+                        output.addChild(outElement);\n+                        operation.addChild(output);\n+                    }\n+                }\n+            }\n+        }\n+    }\n \n \tprivate void addPolicyAsExtElement(AxisDescription axisDescription,\n \t\t\tOMElement element) throws Exception {", "filename": "modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/7b554517db6455e5157c10625832303766859b4a", "parent": "https://github.com/apache/axis2-java/commit/0136cd217ac5974812d73718c163ab2d86ca783d", "message": "Fix a build break in JDK1.6, add some defensive code for NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@613916 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_89", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/7b554517db6455e5157c10625832303766859b4a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/7b554517db6455e5157c10625832303766859b4a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "sha": "28639e161c34d52996d1a4c5f9aafb56041955fb", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=7b554517db6455e5157c10625832303766859b4a", "patch": "@@ -807,7 +807,11 @@ private URL getWSDLURL(String wsdlLocation) {\n         // Look for the WSDL file as follows:\n         // 1) As a resource on the classpath\n \n-        URL url = composite.getClassLoader().getResource(wsdlLocation);\n+        ClassLoader loader = composite.getClassLoader();\n+        URL url = null;\n+        if (loader != null) {\n+            url = loader.getResource(wsdlLocation);\n+        }\n \n         // 2) As a fully specified URL\n         if (url == null) {", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/f404215138b9aa771d2677f785f9892e9e5b5fff", "parent": "https://github.com/apache/axis2-java/commit/4ca4dc014f99fc6d7440dae3d8a48ab622f8caf9", "message": "Handling a possible NPE here. Throwing a readable exception instead.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@611383 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_90", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/f404215138b9aa771d2677f785f9892e9e5b5fff/modules/kernel/src/org/apache/axis2/description/WSDL20ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/f404215138b9aa771d2677f785f9892e9e5b5fff/modules/kernel/src/org/apache/axis2/description/WSDL20ToAxisServiceBuilder.java", "sha": "26eada25b5ea2e714c55f75a0369042d6ffd17f8", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL20ToAxisServiceBuilder.java?ref=f404215138b9aa771d2677f785f9892e9e5b5fff", "patch": "@@ -80,6 +80,7 @@\n import org.apache.woden.wsdl20.xml.DocumentableElement;\n import org.apache.woden.wsdl20.xml.DocumentationElement;\n import org.apache.woden.wsdl20.xml.TypesElement;\n+import org.apache.woden.wsdl20.xml.InterfaceMessageReferenceElement;\n import org.apache.woden.xml.XMLAttr;\n import org.apache.ws.commons.schema.XmlSchema;\n import org.apache.ws.commons.schema.utils.NamespaceMap;\n@@ -1083,7 +1084,14 @@ private void createAxisMessage(AxisOperation axisOperation,\n         QName elementQName = null;\n \n         if (WSDL2Constants.NMTOKEN_ELEMENT.equals(messageContentModelName)) {\n-            elementQName = messageReference.getElementDeclaration().getName();\n+            ElementDeclaration elementDeclaration = messageReference.getElementDeclaration();\n+            if (elementDeclaration == null) {\n+                InterfaceMessageReferenceElement messageReferenceElement =\n+                        messageReference.toElement();\n+                QName qName = messageReferenceElement.getElement().getQName();\n+                throw new AxisFault(\"Unable to find element \" + qName.toString() + \" reffered to by operation \" + axisOperation.getName().getLocalPart());\n+            }\n+            elementQName = elementDeclaration.getName();\n         } else if (WSDL2Constants.NMTOKEN_ANY.equals(messageContentModelName)) {\n             elementQName = Constants.XSD_ANY;\n         } else", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL20ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/908410fb6b15169f4bfb909296363af4531c82ff", "parent": "https://github.com/apache/axis2-java/commit/c5e53f7fd7efd503949c3caf65a0802c0712cef6", "message": "AXIS2-3432\nContributor:Rich Scheuerle\nAvoid NPE and added trace to ServiceDescriptionImpl\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@610433 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_91", "file": [{"additions": 26, "raw_url": "https://github.com/apache/axis2-java/raw/908410fb6b15169f4bfb909296363af4531c82ff/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/908410fb6b15169f4bfb909296363af4531c82ff/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "sha": "7d0bff268d8f55948f13d082c2bcec34164df72f", "changes": 32, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=908410fb6b15169f4bfb909296363af4531c82ff", "patch": "@@ -515,13 +515,24 @@ private void setupWsdlDefinition() {\n                         getDBCMap().get(composite.getWebServiceAnnot().endpointInterface());\n \n                 try {\n-                    if (seic.getWsdlDefinition() != null) {\n-                        //set the sdimpl from the SEI composite\n+                    if (seic == null) {\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"The SEI class \" + composite.getWebServiceAnnot().endpointInterface() + \" was not found.\");\n+                        }\n+                    }\n+                    if (seic != null && seic.getWsdlDefinition() != null) {\n+                        // set the wsdl def from the SEI composite\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"Get the wsdl definition from the SEI composite.\");\n+                        }\n                         this.wsdlURL = seic.getWsdlURL();\n                         this.wsdlWrapper =\n                                 new WSDL4JWrapper(seic.getWsdlURL(), seic.getWsdlDefinition());\n                     } else if (composite.getWsdlDefinition() != null) {\n-                        //set the sdimpl from the impl. class composite\n+                        //set the wsdl def from the impl. class composite\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"Get the wsdl definition from the impl class composite.\");\n+                        }\n                         this.wsdlURL = composite.getWsdlURL();\n                         this.wsdlWrapper = new WSDL4JWrapper(composite.getWsdlURL(),\n                                                              composite.getWsdlDefinition());\n@@ -531,20 +542,29 @@ private void setupWsdlDefinition() {\n                     \tif(seic != null\n                     \t\t\t&&\n                     \t\t\tseic.getWebServiceAnnot() != null) {\n-                    \t\twsdlLocation = seic.getWebServiceAnnot().wsdlLocation();\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"Get the wsdl location from the SEI composite.\");\n+                    \t    }\n+                    \t    wsdlLocation = seic.getWebServiceAnnot().wsdlLocation();\n                     \t}\n                     \t\n                     \t// now check the impl\n                     \tif(wsdlLocation == null\n                     \t        ||\n                     \t        \"\".equals(wsdlLocation)) {\n-                    \t\twsdlLocation = composite.getWebServiceAnnot().wsdlLocation();\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"Get the wsdl location from the impl class composite.\");\n+                            }\n+                    \t    wsdlLocation = composite.getWebServiceAnnot().wsdlLocation();\n                     \t}\n                     \t\n                     \tif(wsdlLocation != null\n                     \t        &&\n                     \t        !\"\".equals(wsdlLocation)) {\n-                    \t\tsetWSDLDefinitionOnDBC(wsdlLocation);\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"wsdl location =\" + wsdlLocation);\n+                    \t    }\n+                    \t    setWSDLDefinitionOnDBC(wsdlLocation);\n                     \t}\n                     }\n                 } catch (WSDLException e) {", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c0d24025070afc7a83881728ab8446548048d6ba", "parent": "https://github.com/apache/axis2-java/commit/6c8ddb499d247d2ad118b06bbe62b1d4aa83dfbb", "message": "JIRA: AXIS2-3304\nContributor: Roy Wood\nDescription: NPE in demarshalFaultResponse due to null faultBeanDescription\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@588377 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_92", "file": [{"additions": 19, "raw_url": "https://github.com/apache/axis2-java/raw/c0d24025070afc7a83881728ab8446548048d6ba/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/c0d24025070afc7a83881728ab8446548048d6ba/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "sha": "f86bf546535020cf9fe893b19506208171f1152e", "changes": 31, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java?ref=c0d24025070afc7a83881728ab8446548048d6ba", "patch": "@@ -907,6 +907,7 @@ static Throwable demarshalFaultResponse(OperationDescription operationDesc,\n             NoSuchMethodException {\n \n         Throwable exception = null;\n+        \n         // Get the fault from the message and get the detail blocks (probably one)\n         XMLFault xmlfault = message.getXMLFault();\n         Block[] detailBlocks = xmlfault.getDetailBlocks();\n@@ -924,15 +925,19 @@ static Throwable demarshalFaultResponse(OperationDescription operationDesc,\n                  i++) {\n                 FaultDescription fd = operationDesc.getFaultDescriptions()[i];\n                 FaultBeanDesc faultBeanDesc = marshalDesc.getFaultBeanDesc(fd);\n-                QName tryQName = new QName(faultBeanDesc.getFaultBeanNamespace(),\n-                                           faultBeanDesc.getFaultBeanLocalName());\n-                if (log.isErrorEnabled()) {\n-                    log.debug(\"  FaultDescription qname is (\" + tryQName +\n-                            \") and detail element qname is (\" + elementQName + \")\");\n-                }\n-                if (elementQName.equals(tryQName)) {\n-                    faultDesc = fd;\n-                }\n+\n+\t\t\t\tif (faultBeanDesc != null) {\n+\t\t\t\t\tQName tryQName = new QName(faultBeanDesc.getFaultBeanNamespace(),\n+\t\t\t\t\t\t\tfaultBeanDesc.getFaultBeanLocalName());\n+\t\t\t\t\tif (log.isErrorEnabled()) {\n+\t\t\t\t\t\tlog.debug(\"  FaultDescription qname is (\" + tryQName +\n+\t\t\t\t\t\t\t\t\") and detail element qname is (\" + elementQName + \")\");\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (elementQName.equals(tryQName)) {\n+\t\t\t\t\t\tfaultDesc = fd;\n+\t\t\t\t\t}\n+\t\t\t\t}\n             }\n         }\n \n@@ -942,9 +947,11 @@ static Throwable demarshalFaultResponse(OperationDescription operationDesc,\n                  i++) {\n                 FaultDescription fd = operationDesc.getFaultDescriptions()[i];\n                 FaultBeanDesc faultBeanDesc = marshalDesc.getFaultBeanDesc(fd);\n-                String tryName = faultBeanDesc.getFaultBeanLocalName();\n-                if (elementQName.getLocalPart().equals(tryName)) {\n-                    faultDesc = fd;\n+                if (faultBeanDesc != null) {\n+                \tString tryName = faultBeanDesc.getFaultBeanLocalName();\n+                \tif (elementQName.getLocalPart().equals(tryName)) {\n+                \t\tfaultDesc = fd;\n+                \t}\n                 }\n             }\n         }", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3bf9d08f5fcd4e85e2817038272ce2ffb48fc442", "parent": "https://github.com/apache/axis2-java/commit/a05caca186cbb6fed0ed5ac9acd2d03a6f8da965", "message": "JIRA = AXIS2-3176\n\nFix for NPE when empty soap body is received in doc/lit bare scenario.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@573350 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_93", "file": [{"additions": 14, "raw_url": "https://github.com/apache/axis2-java/raw/3bf9d08f5fcd4e85e2817038272ce2ffb48fc442/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/3bf9d08f5fcd4e85e2817038272ce2ffb48fc442/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java", "sha": "e1f014ed956d564b30cb9dbcef0832eb07c0b8cb", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java?ref=3bf9d08f5fcd4e85e2817038272ce2ffb48fc442", "patch": "@@ -639,18 +639,31 @@ static Element getReturnElement(TreeSet<String> packages,\n             context.setIsxmlList(isList);\n         }\n         Block block = null;\n+        boolean isBody = false;\n         if (isHeader) {\n             block = message.getHeaderBlock(headerNS, headerLocalPart, context, factory);\n         } else {\n             if (hasOutputBodyParams) {\n                 block = message.getBodyBlock(0, context, factory);\n+                isBody = true;\n             } else {\n                 // If there is only 1 block, we can use the get body block method\n                 // that streams the whole block content.\n                 block = message.getBodyBlock(context, factory);\n+                //We look for body block only when the return type associated with operation is not void.\n+                //If a null body block is returned in response on a operation that is not void, its a user error.               \n+                isBody = true;\n             }\n         }\n-\n+        //We look for body block only when the return type associated with operation is not void.\n+        //If a null body block is returned in response on a operation that has non void return type, its a user error.\n+        if(isBody && block == null){\n+           \tif(log.isDebugEnabled()){\n+           \t\tlog.debug(\"Empty Body Block Found in response Message for wsdl Operation defintion that expects an Output\");\n+           \t\tlog.debug(\"Return type associated with SEI operation is not void, Body Block cannot be null\");\n+           \t}\n+           \tthrow ExceptionFactory.makeWebServiceException(Messages.getMessage(\"MethodMarshallerUtilErr1\"));\t\n+        }\n         // Get the business object.  We want to return the object that represents the type.\n         Element returnElement = new Element(block.getBusinessObject(true), block.getQName());\n         return returnElement;", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/MethodMarshallerUtils.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/3bf9d08f5fcd4e85e2817038272ce2ffb48fc442/modules/metadata/src/org/apache/axis2/jaxws/i18n/resource.properties", "blob_url": "https://github.com/apache/axis2-java/blob/3bf9d08f5fcd4e85e2817038272ce2ffb48fc442/modules/metadata/src/org/apache/axis2/jaxws/i18n/resource.properties", "sha": "4c8a2c13728744c9c2390fca148677e740f3158d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/i18n/resource.properties?ref=3bf9d08f5fcd4e85e2817038272ce2ffb48fc442", "patch": "@@ -161,6 +161,7 @@ ClassUtilsErr2={0} might not be a valid package because the encoding is unsuppor\n ClassUtilsErr3=An IOException error was thrown when trying to get all of the resources for {0}\n ClassUtilsErr4=An IOException error was thrown when trying to read the jar file.\n MethodMarshallerErr1=A JAX-WS service exception for the {0} fault bean cannot be created.\n+MethodMarshallerUtilErr1=Empty Body Block Found in response Message for wsdl Operation defintion that expects an Output.\n SourceReadErr=A problem was encountered while reading the Source object.  Please verify that your Source object is correct.  The class of the Source object is {0}\n JABGraphProblem=The system threw a StackOverflowError at the JAXB level.  This usually means that your JAXB object has a circular reference.  This is not supported by JAXB.\n SchemaReaderErr1=Invlid wsdl Definition provided.", "filename": "modules/metadata/src/org/apache/axis2/jaxws/i18n/resource.properties"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/f91aea26c54d90ea247dd70042e1dff6ddd426e8", "parent": "https://github.com/apache/axis2-java/commit/59b1b5a7b30432935534968422c7dacb5c9ea35d", "message": "Handle embedded/unexploded war scenarios better, avoid NPE and log ERROR\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@563212 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_94", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/f91aea26c54d90ea247dd70042e1dff6ddd426e8/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java", "blob_url": "https://github.com/apache/axis2-java/blob/f91aea26c54d90ea247dd70042e1dff6ddd426e8/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java", "sha": "f61feb070af470eb1065a4d7d60daadae82e739a", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java?ref=f91aea26c54d90ea247dd70042e1dff6ddd426e8", "patch": "@@ -57,12 +57,14 @@ public void init(ConfigurationContext configContext, AxisModule module) throws A\n         log.debug(\"script services init\");\n \n         AxisConfiguration axisConfig = configContext.getAxisConfiguration();\n-\n-        File scriptServicesDirectory = getScriptServicesDirectory(axisConfig);\n-        ScriptDeploymentEngine deploymentEngine = new ScriptDeploymentEngine(axisConfig);\n-        deploymentEngine.loadRepository(scriptServicesDirectory);\n-        deploymentEngine.loadServices();\n-\n+        if(axisConfig.getRepository() == null) {\n+            log.error(\"AxisConfiguration getRepository returns null, cannot deploy scripts\");\n+        } else {\n+            File scriptServicesDirectory = getScriptServicesDirectory(axisConfig);\n+            ScriptDeploymentEngine deploymentEngine = new ScriptDeploymentEngine(axisConfig);\n+            deploymentEngine.loadRepository(scriptServicesDirectory);\n+            deploymentEngine.loadServices();\n+        }\n         log.info(\"script module activated\");\n     }\n ", "filename": "modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a50779e98448edd5a6bc56ed8d70a597266f4867", "parent": "https://github.com/apache/axis2-java/commit/09d350ade4764cf51f7370df47c2564bd5bfa4a6", "message": "trying to fix possible cause of NPE reported in AXIS2-2352\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@562651 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_95", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/a50779e98448edd5a6bc56ed8d70a597266f4867/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java", "blob_url": "https://github.com/apache/axis2-java/blob/a50779e98448edd5a6bc56ed8d70a597266f4867/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java", "sha": "1b8a411f6beefaac063afba9a1284e3700be7123", "changes": 13, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java?ref=a50779e98448edd5a6bc56ed8d70a597266f4867", "patch": "@@ -168,11 +168,14 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n                                 (AxisBindingOperation) msgContext\n                                         .getProperty(Constants.AXIS_BINDING_OPERATION);\n                         if (axisBindingOperation != null) {\n-                            Integer code = (Integer) axisBindingOperation.getFault(\n-                                    (String) msgContext.getProperty(Constants.FAULT_NAME))\n-                                    .getProperty(WSDL2Constants.ATTR_WHTTP_CODE);\n-                            if (code != null) {\n-                                response.setStatus(code.intValue());\n+                            AxisBindingMessage axisBindingMessage = axisBindingOperation.getFault(\n+                                    (String) msgContext.getProperty(Constants.FAULT_NAME));\n+                            if(axisBindingMessage != null){\n+                                Integer code = (Integer) axisBindingMessage\n+                                        .getProperty(WSDL2Constants.ATTR_WHTTP_CODE);\n+                                if (code != null) {\n+                                    response.setStatus(code.intValue());\n+                                }\n                             }\n                         }\n                     }", "filename": "modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2d3f6acddaf46cbfe6dc5233b8b02ec7a5c7a1d3", "parent": "https://github.com/apache/axis2-java/commit/01827061c2bf551b7928f9276fc7b61f189347c5", "message": "prevent NPE and don't throw ServletException, just swallow it!\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@561951 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_96", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/2d3f6acddaf46cbfe6dc5233b8b02ec7a5c7a1d3/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java", "blob_url": "https://github.com/apache/axis2-java/blob/2d3f6acddaf46cbfe6dc5233b8b02ec7a5c7a1d3/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java", "sha": "9fdd8a8a5620eecb018119012bde7582212c69c1", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java?ref=2d3f6acddaf46cbfe6dc5233b8b02ec7a5c7a1d3", "patch": "@@ -25,6 +25,7 @@\n import org.apache.axiom.om.impl.builder.StAXBuilder;\n import org.apache.axiom.soap.SOAP12Constants;\n import org.apache.axiom.soap.SOAPFaultCode;\n+import org.apache.axiom.soap.SOAPEnvelope;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n import org.apache.axis2.addressing.AddressingHelper;\n@@ -308,16 +309,17 @@ protected void showRestDisabledErrorMessage(HttpServletResponse response) throws\n     private void closeStaxBuilder(MessageContext messageContext) throws ServletException {\n         if (closeReader && messageContext != null) {\n             try {\n-                StAXBuilder builder = (StAXBuilder) messageContext.getEnvelope().getBuilder();\n-                if (builder != null) {\n-                    builder.close();\n+                SOAPEnvelope envelope = messageContext.getEnvelope();\n+                if(envelope != null) {\n+                    StAXBuilder builder = (StAXBuilder) envelope.getBuilder();\n+                    if (builder != null) {\n+                        builder.close();\n+                    }\n                 }\n             } catch (Exception e) {\n-                log.debug(e);\n-                throw new ServletException(e);\n+                log.debug(e.toString(), e);\n             }\n         }\n-\n     }\n \n     /**", "filename": "modules/kernel/src/org/apache/axis2/transport/http/AxisServlet.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/b1d9860c4b5fe62c36695b3f5ebd65a9aec43104", "parent": "https://github.com/apache/axis2-java/commit/1eee9fcb709db9f20588344f09c64a8c083f69e5", "message": "Prevent a NPE. Thanks to Andy Gatford for spotting this one.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@561348 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_97", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/b1d9860c4b5fe62c36695b3f5ebd65a9aec43104/modules/kernel/src/org/apache/axis2/dispatchers/HTTPLocationBasedDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/b1d9860c4b5fe62c36695b3f5ebd65a9aec43104/modules/kernel/src/org/apache/axis2/dispatchers/HTTPLocationBasedDispatcher.java", "sha": "d5550f5b9f3095dbd494112056d247c4de02b56e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/dispatchers/HTTPLocationBasedDispatcher.java?ref=b1d9860c4b5fe62c36695b3f5ebd65a9aec43104", "patch": "@@ -51,7 +51,7 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n             throws AxisFault {\n \n         AxisService axisService = messageContext.getAxisService();\n-        if (axisService != null) {\n+        if (axisService != null && messageContext.getTo() != null) {\n             String uri = messageContext.getTo().getAddress();\n             String httpLocation = parseRequestURL(uri, messageContext\n                     .getConfigurationContext().getServiceContextPath());", "filename": "modules/kernel/src/org/apache/axis2/dispatchers/HTTPLocationBasedDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c492499d2a39ef44385c51dc03b9ba6508efd90e", "parent": "https://github.com/apache/axis2-java/commit/a04a8b2fdf6004ee9c6405ea61ae288430404218", "message": "setting parent before adding to the AxisConfiguration , o.w when calling observers NPE occurs \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@557578 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_98", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/c492499d2a39ef44385c51dc03b9ba6508efd90e/modules/kernel/src/org/apache/axis2/deployment/POJODeployer.java", "blob_url": "https://github.com/apache/axis2-java/blob/c492499d2a39ef44385c51dc03b9ba6508efd90e/modules/kernel/src/org/apache/axis2/deployment/POJODeployer.java", "sha": "bdd6914914bf88b0c3957226257bbe0350021b4d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/POJODeployer.java?ref=c492499d2a39ef44385c51dc03b9ba6508efd90e", "patch": "@@ -190,6 +190,7 @@ public void deploy(DeploymentFileData deploymentFileData) {\n                         AxisService axisService = (AxisService) axisServiceList.get(i);\n                         serviceGroup.addService(axisService);\n                     }\n+                    serviceGroup.setParent(configCtx.getAxisConfiguration());\n                     configCtx.getAxisConfiguration().addServiceGroup(serviceGroup);\n                 } else {\n                     log.info(\"No annotated class found in the jar: \"  + deploymentFileData.getFile().getName());", "filename": "modules/kernel/src/org/apache/axis2/deployment/POJODeployer.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3510c3b5144a022de1880bbc467b2de7a438388c", "parent": "https://github.com/apache/axis2-java/commit/1e2db687d47d5e4c88ec913410542c2997f66523", "message": "1. Set the file - Otherwise it will cause an NPE\n2. URL check for file should be file:/\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@554905 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_99", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/3510c3b5144a022de1880bbc467b2de7a438388c/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/3510c3b5144a022de1880bbc467b2de7a438388c/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java", "sha": "9760d797ff5f48f96677068202c403c0d2089898", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java?ref=3510c3b5144a022de1880bbc467b2de7a438388c", "patch": "@@ -1014,7 +1014,7 @@ public static AxisServiceGroup loadServiceGroup(File serviceFile,\n                                                     ConfigurationContext configCtx)\n             throws AxisFault {\n         try {\n-            DeploymentFileData currentDeploymentFile = new DeploymentFileData(null, null);\n+            DeploymentFileData currentDeploymentFile = new DeploymentFileData(serviceFile, null);\n             DeploymentClassLoader classLoader = new DeploymentClassLoader(new URL[]{serviceFile.toURL()},\n                                                                           new ArrayList(),\n                                                                           Thread.currentThread().getContextClassLoader());", "filename": "modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/3510c3b5144a022de1880bbc467b2de7a438388c/modules/kernel/src/org/apache/axis2/deployment/URLBasedAxisConfigurator.java", "blob_url": "https://github.com/apache/axis2-java/blob/3510c3b5144a022de1880bbc467b2de7a438388c/modules/kernel/src/org/apache/axis2/deployment/URLBasedAxisConfigurator.java", "sha": "0eb23f44c80ceeaca2e21d83b54e4c3248436642", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/URLBasedAxisConfigurator.java?ref=3510c3b5144a022de1880bbc467b2de7a438388c", "patch": "@@ -57,9 +57,9 @@ public AxisConfiguration getAxisConfiguration() throws AxisFault {\n                 if (axis2repoPara != null) {\n                     String repoValue = (String) axis2repoPara.getValue();\n                     if (repoValue != null && !\"\".equals(repoValue.trim())) {\n-                        if (repoValue.startsWith(\"file://\")) {\n+                        if (repoValue.startsWith(\"file:/\")) {\n                             // we treat this case specially , by assuming file is\n-                            // locate in the local machine\n+                            // located in the local machine\n                             loadRepository(repoValue);\n                         } else {\n                             loadRepositoryFromURL(new URL(repoValue));", "filename": "modules/kernel/src/org/apache/axis2/deployment/URLBasedAxisConfigurator.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3be84ed9cda1ac1d3b2ece85d6b023a7a02fdc17", "parent": "https://github.com/apache/axis2-java/commit/6d30176b08006a1941e20690dd4698b503c27303", "message": "Fixing the test failure caused by an NPE due to commit r553368\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@553446 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_100", "file": [{"additions": 54, "raw_url": "https://github.com/apache/axis2-java/raw/3be84ed9cda1ac1d3b2ece85d6b023a7a02fdc17/modules/java2wsdl/src/org/apache/ws/java2wsdl/Java2WSDLBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/3be84ed9cda1ac1d3b2ece85d6b023a7a02fdc17/modules/java2wsdl/src/org/apache/ws/java2wsdl/Java2WSDLBuilder.java", "sha": "81f59b8d898cb8b414e5e13ffed2596eb10e1640", "changes": 102, "status": "modified", "deletions": 48, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/java2wsdl/src/org/apache/ws/java2wsdl/Java2WSDLBuilder.java?ref=3be84ed9cda1ac1d3b2ece85d6b023a7a02fdc17", "patch": "@@ -66,18 +66,19 @@\n     private String use = Java2WSDLConstants.LITERAL;\n     private String locationUri;\n     private ArrayList extraClasses;\n-    \n+\n     private String nsGenClassName = null;\n     private Map pkg2nsMap = null;\n     private boolean pretty = true;\n     private String wsdlVersion = WSDL_VERSION_1;\n     private String schemaGenClassName = null;\n-    private boolean generateDocLitBare =false;\n+    private boolean generateDocLitBare = false;\n     private AxisConfiguration axisConfig;\n \n     public Java2WSDLBuilder() {\n         try {\n-            ConfigurationContext configCtx = ConfigurationContextFactory.createDefaultConfigurationContext();\n+            ConfigurationContext configCtx =\n+                    ConfigurationContextFactory.createDefaultConfigurationContext();\n             axisConfig = configCtx.getAxisConfiguration();\n         } catch (Exception e) {\n             throw new RuntimeException(e);\n@@ -88,10 +89,23 @@ public Java2WSDLBuilder(AxisConfiguration axisConfig) {\n         this.axisConfig = axisConfig;\n     }\n \n+    public Java2WSDLBuilder(OutputStream out, String className, ClassLoader classLoader) {\n+        try {\n+            ConfigurationContext configCtx =\n+                    ConfigurationContextFactory.createDefaultConfigurationContext();\n+            axisConfig = configCtx.getAxisConfiguration();\n+            this.out = out;\n+            this.className = className;\n+            this.classLoader = classLoader;\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n     public String getSchemaTargetNamespace() throws Exception {\n-        if ( schemaTargetNamespace == null ) {\n+        if (schemaTargetNamespace == null) {\n             schemaTargetNamespace =\n-                Java2WSDLUtils.schemaNamespaceFromClassName(className, classLoader, resolveNSGen()).toString();\n+                    Java2WSDLUtils.schemaNamespaceFromClassName(className, classLoader, resolveNSGen()).toString();\n         }\n         return schemaTargetNamespace;\n     }\n@@ -125,7 +139,7 @@ public void setSchemaTargetNamespace(String schemaTargetNamespace) {\n     }\n \n     public String getSchemaTargetNamespacePrefix() {\n-        if ( schemaTargetNamespacePrefix == null ) {\n+        if (schemaTargetNamespacePrefix == null) {\n             this.schemaTargetNamespacePrefix = SCHEMA_NAMESPACE_PRFIX;\n         }\n         return schemaTargetNamespacePrefix;\n@@ -177,19 +191,11 @@ public void setGenerateDocLitBare(boolean generateDocLitBare) {\n         this.generateDocLitBare = generateDocLitBare;\n     }\n \n-    public Java2WSDLBuilder(OutputStream out, String className, ClassLoader classLoader) {\n-        this.out = out;\n-        this.className = className;\n-        this.classLoader = classLoader;\n-    }\n-\n-\n-  \n     public void generateWSDL() throws Exception {\n         SchemaGenerator schemaGenerator = resolveSchemaGen(classLoader,\n-                                                    className,\n-                                                    getSchemaTargetNamespace(), \n-                                                    getSchemaTargetNamespacePrefix());\n+                                                           className,\n+                                                           getSchemaTargetNamespace(),\n+                                                           getSchemaTargetNamespacePrefix());\n \n         ArrayList excludedOperation = new ArrayList();\n         Utils.addExcludeMethods(excludedOperation);\n@@ -199,8 +205,8 @@ public void generateWSDL() throws Exception {\n         schemaGenerator.setExtraClasses(getExtraClasses());\n         schemaGenerator.setNsGen(resolveNSGen());\n         schemaGenerator.setPkg2nsmap(getPkg2nsMap());\n-        if ( getPkg2nsMap() != null && !getPkg2nsMap().isEmpty() &&\n-                (getPkg2nsMap().containsKey(ALL) || getPkg2nsMap().containsKey(ALL.toUpperCase())) ) {\n+        if (getPkg2nsMap() != null && !getPkg2nsMap().isEmpty() &&\n+            (getPkg2nsMap().containsKey(ALL) || getPkg2nsMap().containsKey(ALL.toUpperCase()))) {\n             schemaGenerator.setUseWSDLTypesNamespace(true);\n         }\n \n@@ -219,21 +225,21 @@ public void generateWSDL() throws Exception {\n         messageReciverMap.put(\n                 WSDL2Constants.MEP_URI_IN_OUT,\n                 inOutmessageReceiver);\n-        AxisService service  = new AxisService ();\n+        AxisService service = new AxisService();\n         schemaGenerator.setAxisService(service);\n         AxisService axisService = AxisService.createService(className,\n-                serviceName == null ? Java2WSDLUtils.getSimpleClassName(className) : serviceName,\n-                axisConfig,\n-                messageReciverMap,\n-                targetNamespace == null ? Java2WSDLUtils.namespaceFromClassName(className, classLoader, resolveNSGen()).toString() : targetNamespace,\n-                classLoader,\n-                schemaGenerator,service);\n+                                                            serviceName == null ? Java2WSDLUtils.getSimpleClassName(className) : serviceName,\n+                                                            axisConfig,\n+                                                            messageReciverMap,\n+                                                            targetNamespace == null ? Java2WSDLUtils.namespaceFromClassName(className, classLoader, resolveNSGen()).toString() : targetNamespace,\n+                                                            classLoader,\n+                                                            schemaGenerator, service);\n         schemaGenerator.setAxisService(axisService);\n         axisService.setTargetNamespacePrefix(targetNamespacePrefix);\n         axisService.setSchemaTargetNamespace(getSchemaTargetNamespace());\n         axisService.setSchematargetNamespacePrefix(getSchemaTargetNamespacePrefix());\n         String uri = locationUri;\n-        if(uri == null){\n+        if (uri == null) {\n             uri = DEFAULT_LOCATION_URL + (serviceName == null ? Java2WSDLUtils.getSimpleClassName(className) : serviceName);\n         }\n         axisService.setEPRs(new String[]{uri});\n@@ -244,15 +250,15 @@ public void generateWSDL() throws Exception {\n             g.setStyle(this.style);\n             g.setUse(this.use);\n             OMElement wsdlElement = g.generateOM();\n-            if(!isPretty()){\n+            if (!isPretty()) {\n                 wsdlElement.serialize(out);\n             } else {\n                 XMLPrettyPrinter.prettify(wsdlElement, out);\n             }\n         } else {\n             AxisService2WSDL20 g = new AxisService2WSDL20(axisService);\n             OMElement wsdlElement = g.generateOM();\n-            if(!isPretty()){\n+            if (!isPretty()) {\n                 wsdlElement.serialize(out);\n             } else {\n                 XMLPrettyPrinter.prettify(wsdlElement, out);\n@@ -310,34 +316,34 @@ public Map getPkg2nsMap() {\n     public void setPkg2nsMap(Map pkg2nsMap) {\n         this.pkg2nsMap = pkg2nsMap;\n     }\n-    \n+\n     private NamespaceGenerator resolveNSGen() {\n-        NamespaceGenerator nsGen ;\n-        if(this.nsGenClassName == null){\n+        NamespaceGenerator nsGen;\n+        if (this.nsGenClassName == null) {\n             nsGen = new DefaultNamespaceGenerator();\n         } else {\n             try {\n-                nsGen = (NamespaceGenerator)Class.forName(this.nsGenClassName).newInstance();\n-            } catch ( Exception e ) {\n+                nsGen = (NamespaceGenerator) Class.forName(this.nsGenClassName).newInstance();\n+            } catch (Exception e) {\n                 nsGen = new DefaultNamespaceGenerator();\n             }\n         }\n         return nsGen;\n     }\n \n     private SchemaGenerator resolveSchemaGen(ClassLoader loader, String className,\n-                           String schematargetNamespace,\n-                           String schematargetNamespacePrefix) throws Exception {\n-        SchemaGenerator schemaGen ;\n-        if(this.schemaGenClassName == null){\n+                                             String schematargetNamespace,\n+                                             String schematargetNamespacePrefix) throws Exception {\n+        SchemaGenerator schemaGen;\n+        if (this.schemaGenClassName == null) {\n             if (generateDocLitBare) {\n-               schemaGen = new DocLitBareSchemaGenerator(\n-                       loader, className, schematargetNamespace,\n-                       schematargetNamespacePrefix,null);\n+                schemaGen = new DocLitBareSchemaGenerator(\n+                        loader, className, schematargetNamespace,\n+                        schematargetNamespacePrefix, null);\n             } else {\n                 schemaGen = new DefaultSchemaGenerator(\n                         loader, className, schematargetNamespace,\n-                        schematargetNamespacePrefix,null);\n+                        schematargetNamespacePrefix, null);\n             }\n \n         } else {\n@@ -346,16 +352,16 @@ private SchemaGenerator resolveSchemaGen(ClassLoader loader, String className,\n                 Constructor constructor = clazz.getConstructor(\n                         new Class[]{ClassLoader.class, String.class, String.class, String.class});\n                 schemaGen = (SchemaGenerator) constructor.newInstance(\n-                            new Object[]{loader, className, schematargetNamespace, schematargetNamespacePrefix});\n-            } catch ( Exception e ) {\n+                        new Object[]{loader, className, schematargetNamespace, schematargetNamespacePrefix});\n+            } catch (Exception e) {\n                 if (generateDocLitBare) {\n                     schemaGen = new DocLitBareSchemaGenerator(\n                             loader, className, schematargetNamespace,\n-                            schematargetNamespacePrefix,null);\n+                            schematargetNamespacePrefix, null);\n                 } else {\n-                   schemaGen = new DefaultSchemaGenerator(\n-                           loader, className, schematargetNamespace,\n-                           schematargetNamespacePrefix,null);\n+                    schemaGen = new DefaultSchemaGenerator(\n+                            loader, className, schematargetNamespace,\n+                            schematargetNamespacePrefix, null);\n                 }\n \n             }", "filename": "modules/java2wsdl/src/org/apache/ws/java2wsdl/Java2WSDLBuilder.java"}], "repo": "axis2-java"}]
[{"commit": "https://github.com/apache/axis2-java/commit/adc20cf2d2f84fa0f7b6fcb91ed6a2a155f01d27", "parent": "https://github.com/apache/axis2-java/commit/5b7ef2b8102e38a75ea53bcdb4c47371521bbba8", "message": "Fix for AXIS2-2773 - SAAJ - Prevent NPE from a few places because of namespaceURI, localname being null\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@544830 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_101", "file": [{"additions": 33, "raw_url": "https://github.com/apache/axis2-java/raw/adc20cf2d2f84fa0f7b6fcb91ed6a2a155f01d27/modules/saaj/src/org/apache/axis2/saaj/SOAPBodyImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/adc20cf2d2f84fa0f7b6fcb91ed6a2a155f01d27/modules/saaj/src/org/apache/axis2/saaj/SOAPBodyImpl.java", "sha": "dbd84bca58f83f52bb59f75cc0d8639aeb088f9c", "changes": 41, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/org/apache/axis2/saaj/SOAPBodyImpl.java?ref=adc20cf2d2f84fa0f7b6fcb91ed6a2a155f01d27", "patch": "@@ -98,11 +98,19 @@ public SOAPElement addChildElement(SOAPElement soapElement) throws SOAPException\n         String prefix = soapElement.getPrefix();\n         String localName = soapElement.getLocalName();\n         element.declareNamespace(namespaceURI, prefix);\n-\n-        SOAPBodyElementImpl childEle =\n+        SOAPBodyElementImpl childEle;\n+        \n+        if (localName == null) {\n+            childEle =\n                 new SOAPBodyElementImpl(\n                         (ElementImpl)getOwnerDocument().createElementNS(namespaceURI,\n-                                                                        localName));\n+                                                                        \"\"));\n+        } else {\n+            childEle =\n+                new SOAPBodyElementImpl(\n+                        (ElementImpl)getOwnerDocument().createElementNS(namespaceURI,\n+                                                                        localName));            \n+        }\n         for (Iterator iter = soapElement.getAllAttributes(); iter.hasNext();) {\n             Name name = (Name)iter.next();\n             childEle.addAttribute(name, soapElement.getAttributeValue(name));\n@@ -406,7 +414,16 @@ public Document extractContentAsDocument() throws SOAPException {\n                                    domEle.getTagName().substring(0, indexOfColon));\n         } else {\n             localname = domEle.getLocalName();\n-            ns = new NamespaceImpl(domEle.getNamespaceURI(), domEle.getPrefix());\n+            if (domEle.getNamespaceURI() != null) {\n+                ns = new NamespaceImpl(domEle.getNamespaceURI(), domEle.getPrefix());\n+            } else {\n+                if (domEle.getPrefix() != null) {\n+                    ns = new NamespaceImpl(\"\", domEle.getPrefix());\n+                } else {\n+                    ns = new NamespaceImpl(\"\", \"\");\n+                    \n+                }\n+            }\n         }\n         ElementImpl eleImpl =\n                 new ElementImpl((DocumentImpl)this.getOwnerDocument(),\n@@ -418,10 +435,18 @@ public Document extractContentAsDocument() throws SOAPException {\n         NamedNodeMap domAttrs = domEle.getAttributes();\n         for (int i = 0; i < domAttrs.getLength(); i++) {\n             org.w3c.dom.Node attrNode = domAttrs.item(i);\n-            saajEle.addAttribute(new PrefixedQName(attrNode.getNamespaceURI(),\n-                                                   attrNode.getLocalName(),\n-                                                   attrNode.getPrefix()),\n-                                 attrNode.getNodeValue());\n+            if (attrNode.getLocalName() == null) {\n+                //local part is required.  \"\" is allowed to preserve compatibility with QName 1.0\n+                saajEle.addAttribute(new PrefixedQName(attrNode.getNamespaceURI(),\n+                                                       \"\",\n+                                                       attrNode.getPrefix()),\n+                                                       attrNode.getNodeValue());\n+            } else {\n+                saajEle.addAttribute(new PrefixedQName(attrNode.getNamespaceURI(),\n+                                                       attrNode.getLocalName(),\n+                                                       attrNode.getPrefix()),\n+                                                       attrNode.getNodeValue());                \n+            }\n         }\n \n         NodeList childNodes = node.getChildNodes();", "filename": "modules/saaj/src/org/apache/axis2/saaj/SOAPBodyImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c5ac2f1eae6f0b16a6b35f8c3686e7c5dc3f421a", "parent": "https://github.com/apache/axis2-java/commit/9897d2a2160b230734ae3e2cfb1dfcf3b587ddd2", "message": "Fixing NPE when a WSDL with a incorrect namespace is deployed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@541177 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_102", "file": [{"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/c5ac2f1eae6f0b16a6b35f8c3686e7c5dc3f421a/modules/kernel/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java", "blob_url": "https://github.com/apache/axis2-java/blob/c5ac2f1eae6f0b16a6b35f8c3686e7c5dc3f421a/modules/kernel/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java", "sha": "3d38d760980536f872b48dcaf9968fdb3cc12ec8", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java?ref=c5ac2f1eae6f0b16a6b35f8c3686e7c5dc3f421a", "patch": "@@ -324,7 +324,7 @@ public HashMap processWSDLs(DeploymentFileData file)\n                                 wsdlToAxisServiceBuilder = new WSDL11ToAxisServiceBuilder(\n                                         new ByteArrayInputStream(out.toByteArray()), null, null);\n                             } else {\n-                                new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n+                                throw new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n                             }\n                             AxisService service = processWSDLFile(wsdlToAxisServiceBuilder,\n                                                                   serviceFile, true,\n@@ -384,7 +384,7 @@ public AxisService getAxisServiceFromWsdl(InputStream in,\n                         new WarFileBasedURIResolver(loader));\n                 return wsdlToAxisServiceBuilder.populateService();\n             } else {\n-                new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n+                throw new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n             }\n         }\n         return null;\n@@ -416,7 +416,7 @@ public void processFilesInFolder(File folder, HashMap servicesMap)\n                         in2 = new FileInputStream(file1);\n                         wsdlToAxisServiceBuilder = new WSDL11ToAxisServiceBuilder(in2, null, null);\n                     } else {\n-                        new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n+                        throw new DeploymentException(Messages.getMessage(\"invalidWSDLFound\"));\n                     }\n \n                     FileInputStream in3 = new FileInputStream(file1);", "filename": "modules/kernel/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3d46ade6f2246c8e3f32fe7076672fa00b392d63", "parent": "https://github.com/apache/axis2-java/commit/f0608aaaa40c7d713cd229bfeb028f99d6cc2b1c", "message": "don't throw NPE, set the error listener for logging all the problems\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@534960 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_103", "file": [{"additions": 26, "raw_url": "https://github.com/apache/axis2-java/raw/3d46ade6f2246c8e3f32fe7076672fa00b392d63/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java", "blob_url": "https://github.com/apache/axis2-java/blob/3d46ade6f2246c8e3f32fe7076672fa00b392d63/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java", "sha": "b035987b53e0c96475d61080f913d84ea38486af", "changes": 26, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java?ref=3d46ade6f2246c8e3f32fe7076672fa00b392d63", "patch": "@@ -18,6 +18,7 @@\n \n import com.sun.codemodel.JCodeModel;\n import com.sun.codemodel.writer.FileCodeWriter;\n+import com.sun.tools.xjc.api.ErrorListener;\n import com.sun.tools.xjc.api.Mapping;\n import com.sun.tools.xjc.api.S2JJAXBModel;\n import com.sun.tools.xjc.api.SchemaCompiler;\n@@ -28,9 +29,12 @@\n import org.apache.axis2.wsdl.databinding.DefaultTypeMapper;\n import org.apache.axis2.wsdl.databinding.JavaTypeMapper;\n import org.apache.axis2.wsdl.databinding.TypeMapper;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n import org.apache.ws.commons.schema.XmlSchema;\n import org.w3c.dom.Element;\n import org.xml.sax.InputSource;\n+import org.xml.sax.SAXParseException;\n \n import javax.xml.namespace.QName;\n import java.io.ByteArrayOutputStream;\n@@ -43,6 +47,7 @@\n import java.util.Vector;\n \n public class CodeGenerationUtility {\n+    private static final Log log = LogFactory.getLog(CodeGenerationUtility.class);\n \n     /**\n      * @param additionalSchemas\n@@ -96,11 +101,32 @@ public static TypeMapper processSchemas(List schemas,\n                 }\n                 sc.setDefaultPackageName(pkg);\n \n+                sc.setErrorListener(new ErrorListener(){\n+                    public void error(SAXParseException saxParseException) {\n+                        log.error(saxParseException.getMessage(), saxParseException);\n+                    }\n+\n+                    public void fatalError(SAXParseException saxParseException) {\n+                        log.error(saxParseException.getMessage(), saxParseException);\n+                    }\n+\n+                    public void warning(SAXParseException saxParseException) {\n+                        log.warn(saxParseException.getMessage(), saxParseException);\n+                    }\n+\n+                    public void info(SAXParseException saxParseException) {\n+                        log.info(saxParseException.getMessage(), saxParseException);\n+                    }\n+                });\n                 sc.parseSchema((InputSource)xmlObjectsVector.elementAt(i));\n \n                 // Bind the XML\n                 S2JJAXBModel jaxbModel = sc.bind();\n \n+                if(jaxbModel == null){\n+                    throw new RuntimeException(\"Unable to generate code using jaxbri\");\n+                }\n+\n                 // Emit the code artifacts\n                 JCodeModel codeModel = jaxbModel.generateCode(null, null);\n                 FileCodeWriter writer = new FileCodeWriter(outputDir);", "filename": "modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/12129ec863ebe442e882b8507892eb8be21593a1", "parent": "https://github.com/apache/axis2-java/commit/2a3ea5556a4ef615d9bad32991b5ccc0c8940743", "message": "AXIS2-2538\nFix contributed by Roy Wood.  Add NPE guard.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@534196 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_104", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/12129ec863ebe442e882b8507892eb8be21593a1/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/12129ec863ebe442e882b8507892eb8be21593a1/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "sha": "d4e9b3cef28b8052aeef1ae23456d8f02e1f8e6b", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java?ref=12129ec863ebe442e882b8507892eb8be21593a1", "patch": "@@ -628,10 +628,12 @@ public OperationDescription getSyncOperation() {\n                 //searching for opDesc of sync operation.\n                 OperationDescription[] ods = null;\n                 ods = eid.getOperationForJavaMethod(webMethodAnnoName);\n-                for (OperationDescription od : ods) {\n-                    if (od.getJavaMethodName().equals(webMethodAnnoName)) {\n-                        opDesc = od;\n-                        break;\n+                if (ods != null) {\n+                    for (OperationDescription od : ods) {\n+                        if (od.getJavaMethodName().equals(webMethodAnnoName)) {\n+                            opDesc = od;\n+                            break;\n+                        }\n                     }\n                 }\n             }", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d5e1e0c330fae42c1e6008957ea157517e129712", "parent": "https://github.com/apache/axis2-java/commit/62b5ecc0dad1adc75a8c7d32a9df67a6a0b69620", "message": "Removing the setAxisConfiguration method and adding setConfigurationContext method to ConfigurationManager\nHandling a possible NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@520848 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_105", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java", "sha": "0d489462963b5df3fb9adb2be2da3663b49bf689", "changes": 11, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -23,6 +23,7 @@\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n import org.apache.axis2.cluster.tribes.ChannelSender;\n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n import org.apache.catalina.tribes.Channel;\n import org.apache.catalina.tribes.ChannelException;\n import org.apache.catalina.tribes.Member;\n@@ -36,15 +37,15 @@\n \n     private List listeners = null;\n     private ChannelSender sender = null;\n-    private AxisConfiguration axisConfiguration = null;\n+    private ConfigurationContext configurationContext = null;\n \n     public TribesConfigurationManager() {\n         listeners = new ArrayList();\n     }\n \n     public void addConfigurationManagerListener(ConfigurationManagerListener listener) {\n-        if (axisConfiguration != null) {\n-            listener.setAxisConfiguration(axisConfiguration);\n+        if (configurationContext != null) {\n+            listener.setConfigurationContext(configurationContext);\n         }\n \n         listeners.add(listener);\n@@ -138,8 +139,8 @@ public void notifyListeners(int command, ConfigurationEvent event) {\n         }\n     }\n \n-    public void setAxisConfiguration(AxisConfiguration axisConfiguration) {\n-        this.axisConfiguration = axisConfiguration;\n+    public void setConfigurationContext(ConfigurationContext configurationContext) {\n+        this.configurationContext = configurationContext;\n     }\n \n }", "filename": "modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java", "sha": "fcace643beb0c6ebf990a3ad8d37a2f3863554f0", "changes": 6, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -20,8 +20,6 @@\n \n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.ClusteringFault;\n-import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n-import org.apache.axis2.cluster.context.ContextManagerListener;\n import org.apache.axis2.cluster.listeners.DefaultContextManagerListener;\n import org.apache.axis2.clustering.configuration.TestConfigurationManagerListener;\n import org.apache.axis2.context.ConfigurationContext;\n@@ -70,8 +68,8 @@ protected void setUp() throws Exception {\n \t\tcontextManagerListener2 = new DefaultContextManagerListener ();\n \t\tclusterManager2.getContextManager(). addContextManagerListener (contextManagerListener2);\t\n \n-\t\tclusterManager1.getConfigurationManager().setAxisConfiguration(configurationContext1.getAxisConfiguration());\n-\t\tclusterManager2.getConfigurationManager().setAxisConfiguration(configurationContext2.getAxisConfiguration());\n+\t\tclusterManager1.getConfigurationManager().setConfigurationContext(configurationContext1.getAxisConfiguration());\n+\t\tclusterManager2.getConfigurationManager().setConfigurationContext(configurationContext2.getAxisConfiguration());\n \t\t\n \t\tconfigurationManagerListener1 = new TestConfigurationManagerListener ();\n \t\tclusterManager1.getConfigurationManager().addConfigurationManagerListener(configurationManagerListener1);", "filename": "modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java"}, {"additions": 53, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java", "sha": "8c4016f9e1d20d249e5c9fc821fe0fb7c3b11691", "changes": 106, "status": "modified", "deletions": 53, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -16,62 +16,62 @@\n \n package org.apache.axis2.clustering.configuration;\n \n-import java.util.ArrayList;\n import org.apache.axis2.cluster.configuration.ConfigurationEvent;\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n-import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n+\n+import java.util.ArrayList;\n \n public class TestConfigurationManagerListener implements ConfigurationManagerListener {\n \n-\tArrayList eventList = null;\n-\tprivate AxisConfiguration axisConfiguration = null;\n-\t\n-\tpublic TestConfigurationManagerListener () {\n-\t\teventList = new ArrayList ();\n-\t}\n-\t\n-\tpublic void handleException(Throwable throwable) {\n-\t\t// TODO Auto-generated method stub\n-\t}\n-\n-\tpublic void clearEventList () {\n-\t\teventList.clear();\n-\t}\n-\t\n-\tpublic ArrayList getEventList() {\n-\t\treturn eventList;\n-\t}\n-\n-\tpublic void commitCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void configurationReloaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void policyApplied(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void prepareCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void rollbackCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void serviceGroupLoaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void serviceGroupUnloaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void setAxisConfiguration(AxisConfiguration axisConfiguration) {\n-\t\tthis.axisConfiguration = axisConfiguration;\n-\t}\n-\t\n+    ArrayList eventList = null;\n+    private ConfigurationContext configurationContext = null;\n+\n+    public TestConfigurationManagerListener() {\n+        eventList = new ArrayList();\n+    }\n+\n+    public void handleException(Throwable throwable) {\n+        // TODO Auto-generated method stub\n+    }\n+\n+    public void clearEventList() {\n+        eventList.clear();\n+    }\n+\n+    public ArrayList getEventList() {\n+        return eventList;\n+    }\n+\n+    public void commitCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void configurationReloaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void policyApplied(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void prepareCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void rollbackCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void serviceGroupLoaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void serviceGroupUnloaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void setConfigurationContext(ConfigurationContext configurationContext) {\n+        this.configurationContext = configurationContext;\n+    }\n }", "filename": "modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java", "sha": "e463130c6bd6b7f02ae1bdc01dbf52226dfd5c40", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axis2.cluster.ClusteringFault;\n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n import org.apache.neethi.Policy;\n \n public interface ConfigurationManager {\n@@ -55,5 +56,5 @@\n      */\n     void addConfigurationManagerListener(ConfigurationManagerListener listener);\n \n-    void setAxisConfiguration(AxisConfiguration axisConfiguration);\n+    void setConfigurationContext(ConfigurationContext configurationContext);\n }\n\\ No newline at end of file", "filename": "modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java", "sha": "aeaf487dd2cef3f00a270a9201d80bc92f0a9955", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -17,6 +17,7 @@\n package org.apache.axis2.cluster.configuration;\n \n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n \n public interface ConfigurationManagerListener {\n     void serviceGroupLoaded(ConfigurationEvent event);\n@@ -27,5 +28,5 @@\n     void rollbackCalled (ConfigurationEvent event);\n     void commitCalled (ConfigurationEvent event);\n     void handleException(Throwable throwable);\n-    void setAxisConfiguration (AxisConfiguration axisConfiguration);\n+    void setConfigurationContext (ConfigurationContext configurationContext);\n }", "filename": "modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java"}, {"additions": 37, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java", "sha": "f5a05189cb801ee2265c8b1c20d74bedbb15fec7", "changes": 70, "status": "modified", "deletions": 33, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -22,6 +22,7 @@\n import org.apache.axis2.Constants;\n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.ClusteringConstants;\n+import org.apache.axis2.cluster.configuration.ConfigurationManager;\n import org.apache.axis2.cluster.context.ContextManager;\n import org.apache.axis2.description.AxisService;\n import org.apache.axis2.description.AxisServiceGroup;\n@@ -36,12 +37,7 @@\n \n import java.io.File;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.Hashtable;\n-import java.util.Iterator;\n-import java.util.Map;\n+import java.util.*;\n \n /**\n  * This contains all the configuration information for Axis2.\n@@ -89,23 +85,29 @@ private void initConfigContextTimeout(AxisConfiguration axisConfiguration) {\n \n     public void initCluster() throws AxisFault {\n         ClusterManager clusterManager = axisConfiguration.getClusterManager();\n-        if (clusterManager!=null) {\n-        \tContextManager contextManager = clusterManager.getContextManager();\n-        \tif (contextManager!=null)\n-        \t\tcontextManager.setConfigurationContext(this);\n-        }\n-        \n-        if (shouldClusterBeInitiated(clusterManager))\n-        \tclusterManager.init(this);\n-    }\n-    \n-    private static boolean shouldClusterBeInitiated (ClusterManager clusterManager) {\n-    \tParameter param = clusterManager.getParameter(ClusteringConstants.AVOID_INITIATION_KEY);\n-    \tif (param!=null && JavaUtils.isTrueExplicitly(param.getValue()))\n-    \t\treturn false;\n-    \telse \n-    \t\treturn true;\n-    }\t\n+        if (clusterManager != null) {\n+            ContextManager contextManager = clusterManager.getContextManager();\n+            if (contextManager != null) {\n+                contextManager.setConfigurationContext(this);\n+            }\n+            ConfigurationManager configManager = clusterManager.getConfigurationManager();\n+            if (configManager != null) {\n+                configManager.setConfigurationContext(this);\n+            }\n+            if (shouldClusterBeInitiated(clusterManager)) {\n+                clusterManager.init(this);\n+            }\n+        }\n+    }\n+\n+    private static boolean shouldClusterBeInitiated(ClusterManager clusterManager) {\n+        Parameter param = clusterManager.getParameter(ClusteringConstants.AVOID_INITIATION_KEY);\n+        if (param != null && JavaUtils.isTrueExplicitly(param.getValue())) {\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n \n     protected void finalize() throws Throwable {\n         super.finalize();\n@@ -156,9 +158,10 @@ public void fillServiceContextAndServiceGroupContext(\n \n                     ClusterManager clusterManager = this.getAxisConfiguration().getClusterManager();\n                     if (clusterManager != null) {\n-                    \tContextManager contextManager = clusterManager.getContextManager();\n-                    \tif (contextManager!=null)\n-                    \t\tcontextManager.addContext(serviceGroupContext);\n+                        ContextManager contextManager = clusterManager.getContextManager();\n+                        if (contextManager != null) {\n+                            contextManager.addContext(serviceGroupContext);\n+                        }\n                     }\n                 }\n                 messageContext.setServiceGroupContext(serviceGroupContext);\n@@ -171,7 +174,7 @@ public void fillServiceContextAndServiceGroupContext(\n                             serviceGroupContextId, messageContext);\n                     if (serviceGroupContext == null) {\n                         throw new AxisFault(\"Unable to find corresponding context\" +\n-                                \" for the serviceGroupId: \" + serviceGroupContextId);\n+                                            \" for the serviceGroupId: \" + serviceGroupContextId);\n                     }\n                 } else {\n                     AxisServiceGroup axisServiceGroup = (AxisServiceGroup) axisService.getParent();\n@@ -185,9 +188,10 @@ public void fillServiceContextAndServiceGroupContext(\n \n                     ClusterManager clusterManager = this.getAxisConfiguration().getClusterManager();\n                     if (clusterManager != null) {\n-                    \tContextManager contextManager = clusterManager.getContextManager();\n-                    \tif (contextManager!=null)\n-                    \t\tcontextManager.addContext(serviceGroupContext);\n+                        ContextManager contextManager = clusterManager.getContextManager();\n+                        if (contextManager != null) {\n+                            contextManager.addContext(serviceGroupContext);\n+                        }\n                     }\n \n                     messageContext.setServiceGroupContextId(serviceGroupContextId);\n@@ -317,7 +321,7 @@ public OperationContext findOperationContext(String operationName, String servic\n                     {\n                         if ((valueServiceName != null) && (valueServiceName.equals(serviceName))) {\n                             if ((valueServiceGroupName != null) && (serviceGroupName != null)\n-                                    && (valueServiceGroupName.equals(serviceGroupName))) {\n+                                && (valueServiceGroupName.equals(serviceGroupName))) {\n                                 // match\n                                 return value;\n                             }\n@@ -444,7 +448,7 @@ private void cleanupServiceGroupContexts() {\n             ServiceGroupContext serviceGroupContext =\n                     (ServiceGroupContext) serviceGroupContextMap.get(sgCtxtId);\n             if ((currentTime - serviceGroupContext.getLastTouchedTime()) >\n-                    getServiceGroupContextTimoutInterval()) {\n+                getServiceGroupContextTimoutInterval()) {\n                 sgCtxtMapKeyIter.remove();\n                 cleanupServiceContexts(serviceGroupContext);\n             }\n@@ -475,7 +479,7 @@ private void cleanupServiceContexts(ServiceGroupContext serviceGroupContext) {\n \n     public void cleanupContexts() {\n         if ((applicationSessionServiceGroupContextTable != null) &&\n-                (applicationSessionServiceGroupContextTable.size() > 0)) {\n+            (applicationSessionServiceGroupContextTable.size() > 0)) {\n             Iterator applicationScopeSgs =\n                     applicationSessionServiceGroupContextTable.values().iterator();\n             while (applicationScopeSgs.hasNext()) {", "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java", "sha": "16c61203b3434210e9a5a01187fb9634b48f45ed", "changes": 10, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -18,14 +18,7 @@\n \n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.cluster.ClusterManager;\n-import org.apache.axis2.cluster.ClusteringConstants;\n-import org.apache.axis2.deployment.AxisConfigBuilder;\n-import org.apache.axis2.deployment.DeploymentConstants;\n-import org.apache.axis2.deployment.DeploymentEngine;\n-import org.apache.axis2.deployment.DeploymentException;\n-import org.apache.axis2.deployment.FileSystemConfigurator;\n-import org.apache.axis2.deployment.URLBasedAxisConfigurator;\n+import org.apache.axis2.deployment.*;\n import org.apache.axis2.deployment.util.Utils;\n import org.apache.axis2.description.AxisModule;\n import org.apache.axis2.description.AxisServiceGroup;\n@@ -37,7 +30,6 @@\n import org.apache.axis2.i18n.Messages;\n import org.apache.axis2.modules.Module;\n import org.apache.axis2.transport.TransportSender;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.util.SessionUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;", "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java", "sha": "2cfa593aedbdb37446ee36aa418ee066030d2f70", "changes": 15, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712", "patch": "@@ -19,17 +19,13 @@\n \n import org.apache.axiom.om.OMAttribute;\n import org.apache.axiom.om.OMElement;\n-import org.apache.axis2.AxisFault;\n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.configuration.ConfigurationManager;\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n import org.apache.axis2.cluster.context.ContextManager;\n import org.apache.axis2.cluster.context.ContextManagerListener;\n-import org.apache.axis2.description.AxisService;\n import org.apache.axis2.engine.AxisConfiguration;\n import org.apache.axis2.i18n.Messages;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n \n import javax.xml.namespace.QName;\n import java.io.InputStream;\n@@ -41,8 +37,7 @@\n  */\n public class ClusterBuilder extends DescriptionBuilder {\n \n-\tprivate static final Log log = LogFactory.getLog(ClusterBuilder.class);\n-    private AxisService service;\n+//\tprivate static final Log log = LogFactory.getLog(ClusterBuilder.class);\n \n     public ClusterBuilder(AxisConfiguration axisConfig) {\n         this.axisConfig = axisConfig;\n@@ -105,13 +100,13 @@ public void buildCluster(OMElement clusterElement)\n \t\t\t\t\t\tclazz = Class.forName(className);\n \t\t\t\t\t\tConfigurationManagerListener listener = (ConfigurationManagerListener) clazz\n \t\t\t\t\t\t\t\t.newInstance();\n-\t\t\t\t\t\tlistener.setAxisConfiguration(axisConfig);\n+\t\t\t\t\t\tlistener.setConfigurationContext(configCtx);\n \t\t\t\t\t\tconfigurationManager.addConfigurationManagerListener(listener);\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\t//updating the ConfigurationManager with the new Axisconfiguration\n-\t\t\t\tconfigurationManager.setAxisConfiguration(axisConfig);\n+\t\t\t\t//updating the ConfigurationManager with the new ConfigurationContext\n+\t\t\t\tconfigurationManager.setConfigurationContext(configCtx);\n \t\t\t}\n \n \t\t\t\n@@ -152,7 +147,6 @@ public void buildCluster(OMElement clusterElement)\n \t\t\t}\n             \n             axisConfig.setClusterManager(clusterManager);\n-            return;\n         } catch (ClassNotFoundException e) {\n             throw new DeploymentException(Messages.getMessage(\"clusterImplNotFound\"));\n         } catch (InstantiationException e) {\n@@ -162,5 +156,4 @@ public void buildCluster(OMElement clusterElement)\n             throw new DeploymentException(e);\n         }\n     }\n-\n }", "filename": "modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/cfa571cc9f6e9e66d18184294c66d36ab6fc425a", "parent": "https://github.com/apache/axis2-java/commit/fc2352f41c1ca391afcdb8eee84074aca4c6d10e", "message": "Fix NPE in provider validation logic when binding type annotation not specified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@508546 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_106", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/cfa571cc9f6e9e66d18184294c66d36ab6fc425a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/cfa571cc9f6e9e66d18184294c66d36ab6fc425a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java", "sha": "f16661ebe1928190287dd09e17acba98f1daee17", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=cfa571cc9f6e9e66d18184294c66d36ab6fc425a", "patch": "@@ -781,7 +781,14 @@ private void validateProviderInterfaces() {\n         } else {\n             // We are in MESSAGE mode\n             // Conformance: JAXWS Spec.- Sec. 4.3 (javax.activation.DataSource)\n-            String bindingType = composite.getBindingTypeAnnot().value();\n+            \n+            // REVIEW: Should the provider interface validation be moved to post-construction validation, \n+            // since it seems that the logic to understand the default values for binding type \n+            // (see comment below) should be left to the creation of the Description objects.\n+            String bindingType = null;\n+            if (composite.getBindingTypeAnnot() != null ) {\n+                bindingType = composite.getBindingTypeAnnot().value();\n+            }\n \n             Iterator<String> iter = composite.getInterfacesList().iterator();\n ", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/00adf9415cdd89503115de4cca02e4152c844ed8", "parent": "https://github.com/apache/axis2-java/commit/371970dbce41c6c2d9d50fa227bec0f1d21366c2", "message": "AXIS2-2063\nContributor: Dustin Amrhein\n\nDustin's fix for an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@501721 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_107", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/00adf9415cdd89503115de4cca02e4152c844ed8/modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/00adf9415cdd89503115de4cca02e4152c844ed8/modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java", "sha": "efd0ce6da68904c03610364a09c2d0c3ae4715a6", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java?ref=00adf9415cdd89503115de4cca02e4152c844ed8", "patch": "@@ -97,7 +97,7 @@ public String getFaultBean() {\n             // @WebFault may not be present\n             WebFault annotation = getAnnoWebFault();\n             \n-            if (annotation != null &&\n+            if (annotation != null && annotation.faultBean() != null && \n                 annotation.faultBean().length() > 0) {\n                 faultBean = annotation.faultBean();\n             } else {", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/523153883578cc01fe862438e54f21d140b27894", "parent": "https://github.com/apache/axis2-java/commit/32099d403ecd90dcac10083dad3f0b376af94eeb", "message": "AXIS2-2048\n\nAdding code to fix RequestWrapper annotation default. Also fixing NPE in shcemaReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@500866 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_108", "file": [{"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/523153883578cc01fe862438e54f21d140b27894/modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/impl/ClassFinderImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/523153883578cc01fe862438e54f21d140b27894/modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/impl/ClassFinderImpl.java", "sha": "269627dd510083538538a797929a780638196311", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/impl/ClassFinderImpl.java?ref=523153883578cc01fe862438e54f21d140b27894", "patch": "@@ -90,7 +90,6 @@\n \t\t        \t                             log.debug(\"  The reason that class could not be loaded:\" + e.toString());\r\n                                                  log.debug(JavaUtils.stackToString(e));\r\n \t\t        \t                         }\r\n-\t\t        \t                         e.printStackTrace();\r\n \t\t        \t                       }\r\n \t\t        \t\t\t\t\t}\r\n \t\t        \t\t\t\t}\r", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/impl/ClassFinderImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "sha": "c89569cf94ef13f1ad34d4ebdb779067d03bcea0", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java?ref=523153883578cc01fe862438e54f21d140b27894", "patch": "@@ -613,7 +613,10 @@ public String getAnnoRequestWrapperClassName() {\n                 // says the entire annotation \"...MAY be omitted if all its properties would have default vaules.\"\n                 // implying there IS some sort of default.  We'll try this for now:\n                 if (isDBC()) {\n-                    requestWrapperClassName = this.methodComposite.getDeclaringClass(); \n+                \tString declaringClazz = this.methodComposite.getDeclaringClass();\n+                \tString packageName = declaringClazz.substring(0, declaringClazz.lastIndexOf(\".\"));\n+                    requestWrapperClassName = packageName + \".\" + DescriptionUtils.javaMethodtoClassName(methodComposite.getMethodName());\n+                \n                 } else {\n                     Class clazz = seiMethod.getDeclaringClass();\n                     String packageName = clazz.getPackage().getName();", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java"}, {"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/description/impl/PackageSetBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/description/impl/PackageSetBuilder.java", "sha": "4e7dd96370151f81b054f31e252f590c5d8c84e2", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/PackageSetBuilder.java?ref=523153883578cc01fe862438e54f21d140b27894", "patch": "@@ -202,10 +202,16 @@ private static void getPackagesFromAnnotations(OperationDescription opDesc, Set<\n        \n        // Also consider the request and response wrappers\n        String pkg = getPackageFromClassName(opDesc.getRequestWrapperClassName());\n+       if(log.isDebugEnabled()){\n+    \t   log.debug(\"Package from Request Wrapper annotation = \"+ pkg);\n+       }\n        if (pkg != null) {\n            set.add(pkg);\n        }\n        pkg = getPackageFromClassName(opDesc.getResponseWrapperClassName());\n+       if(log.isDebugEnabled()){\n+    \t   log.debug(\"Package from Response Wrapper annotation = \"+ pkg);\n+       }\n        if (pkg != null) {\n            set.add(pkg);\n        }\n@@ -214,6 +220,9 @@ private static void getPackagesFromAnnotations(OperationDescription opDesc, Set<\n        Class cls = opDesc.getResultActualType();\n        if (cls != null && cls != void.class && cls != Void.class) {\n            Package returnTypePkg = cls.getPackage();\n+           if(log.isDebugEnabled()){\n+        \t   log.debug(\"Package from Return Type = \"+ pkg);\n+           }\n            if (returnTypePkg != null) {\n            \t   pkg = returnTypePkg.getName();\n                set.add(pkg);", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/PackageSetBuilder.java"}, {"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/523153883578cc01fe862438e54f21d140b27894/modules/metadata/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java", "sha": "a248a9ed683e28332bc1f4cf075485a06d9a8223", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java?ref=523153883578cc01fe862438e54f21d140b27894", "patch": "@@ -51,7 +51,13 @@\n \t\t\r\n \t\t//Read Schema Definition in wsdl;\r\n \t\tTypes types = wsdlDefinition.getTypes();\r\n-\t\t\r\n+\t\tif(types == null){\r\n+\t\t\tif(log.isDebugEnabled()){\r\n+\t\t\t\tlog.debug(\"WARNING: Could not find any Scheam/Types from WSDL\");\r\n+\t\t\t\tlog.debug(\"no packages will derived from WSDL schema\");\r\n+\t\t\t}\r\n+\t\t\treturn set;\r\n+\t\t}\r\n \t\tList extensibilityElements = types.getExtensibilityElements();\r\n \t\t\r\n \t\t//Read the schema defined in the wsdl\r", "filename": "modules/metadata/src/org/apache/axis2/jaxws/wsdl/impl/SchemaReaderImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/7ae56cfe46c754970f62146d9a3602a65853e2eb", "parent": "https://github.com/apache/axis2-java/commit/4da6295859a05e8d94e6d67b6f67662cfd25ac3b", "message": "AXIS2-2035\nContributor:Rich Scheuerle\nFixed NPE in JAXWS Dispatch mode=PAYLOAD\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@499816 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_109", "file": [{"additions": 14, "raw_url": "https://github.com/apache/axis2-java/raw/7ae56cfe46c754970f62146d9a3602a65853e2eb/modules/jaxws/src/org/apache/axis2/jaxws/client/JAXBDispatch.java", "blob_url": "https://github.com/apache/axis2-java/blob/7ae56cfe46c754970f62146d9a3602a65853e2eb/modules/jaxws/src/org/apache/axis2/jaxws/client/JAXBDispatch.java", "sha": "414bd8ab3fe176b94422d73158bd4caba384db54", "changes": 16, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/client/JAXBDispatch.java?ref=7ae56cfe46c754970f62146d9a3602a65853e2eb", "patch": "@@ -34,9 +34,11 @@\n import org.apache.axis2.jaxws.message.factory.XMLStringBlockFactory;\n import org.apache.axis2.jaxws.registry.FactoryRegistry;\n import org.apache.axis2.jaxws.spi.ServiceDelegate;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n public class JAXBDispatch<T> extends BaseDispatch<T> {\n-\n+    private static final Log log = LogFactory.getLog(JAXBDispatch.class);\n     private JAXBContext jaxbContext;\n     \n     public JAXBDispatch(ServiceDelegate svcDelegate, EndpointDescription epDesc) {\n@@ -115,7 +117,17 @@ static Object getValue(Message message, Mode mode, JAXBContext jaxbContext) {\n                 JAXBBlockFactory factory = (JAXBBlockFactory) FactoryRegistry.getFactory(JAXBBlockFactory.class);\n                 JAXBBlockContext context = new JAXBBlockContext(jaxbContext);\n                 Block block = message.getBodyBlock(0, context, factory);\n-                value = block.getBusinessObject(true);\n+                \n+                if (block != null) {\n+                    value = block.getBusinessObject(true);\n+                } else {\n+                    // REVIEW This seems like the correct behavior.  If the body is empty, return a null\n+                    // Any changes here should also be made to XMLDispatch.getValue\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"There are no elements in the body to unmarshal.  JAXBDispatch returns a null value\");\n+                    }\n+                    value = null;\n+                }\n             } else {\n                 // This is a very strange case, the user would need\n                 // to have a JAXB object that represents the message (i.e. SOAPEnvelope)", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/client/JAXBDispatch.java"}, {"additions": 10, "raw_url": "https://github.com/apache/axis2-java/raw/7ae56cfe46c754970f62146d9a3602a65853e2eb/modules/jaxws/src/org/apache/axis2/jaxws/client/XMLDispatch.java", "blob_url": "https://github.com/apache/axis2-java/blob/7ae56cfe46c754970f62146d9a3602a65853e2eb/modules/jaxws/src/org/apache/axis2/jaxws/client/XMLDispatch.java", "sha": "c7e4913e5b8c060c962d8cb372317a58cf2deaf1", "changes": 11, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/client/XMLDispatch.java?ref=7ae56cfe46c754970f62146d9a3602a65853e2eb", "patch": "@@ -155,7 +155,16 @@ static Object getValue(Message message, Mode mode, Class blockFactoryType) {\n \t\t\t\tBlockFactory factory = (BlockFactory) FactoryRegistry\n \t\t\t\t\t\t.getFactory(blockFactoryType);\n \t\t\t\tblock = message.getBodyBlock(0, null, factory);\n-\t\t\t\tvalue = block.getBusinessObject(true);\n+                if (block != null) {\n+                    value = block.getBusinessObject(true);\n+                } else {\n+                    // REVIEW This seems like the correct behavior.  If the body is empty, return a null\n+                    // Any changes here should also be made to XMLDispatch.getValue\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"There are no elements in the body to unmarshal.  XMLDispatch returns a null value\");\n+                    }\n+                    value = null;\n+                }\n \t\t\t\t\n \t\t\t} else if (mode.equals(Mode.MESSAGE)) {\n \t\t\t   if (blockFactoryType.equals(SOAPEnvelopeBlockFactory.class)) {", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/client/XMLDispatch.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/30eda47276c1b1323affb15ae3c01d1448478418", "parent": "https://github.com/apache/axis2-java/commit/9077cd4f15cb30a3f45944a259d2ee0885614abd", "message": "Fixing an NPE in JAX-WS on a bad endpoint address.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@486745 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_110", "file": [{"additions": 20, "raw_url": "https://github.com/apache/axis2-java/raw/30eda47276c1b1323affb15ae3c01d1448478418/modules/kernel/src/org/apache/axis2/util/ThreadContextMigratorUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/30eda47276c1b1323affb15ae3c01d1448478418/modules/kernel/src/org/apache/axis2/util/ThreadContextMigratorUtil.java", "sha": "c9f0c7bcaed4234f7caaea26372685c0103d8c28", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/ThreadContextMigratorUtil.java?ref=30eda47276c1b1323affb15ae3c01d1448478418", "patch": "@@ -66,6 +66,11 @@ public static void addThreadContextMigrator(ConfigurationContext configurationCo\n   public static void performMigrationToThread(String threadContextMigratorListID, MessageContext msgContext)\n   throws AxisFault\n   {\n+    if (msgContext == null)\n+    {\n+      return;\n+    }\n+      \n     List migratorList = (List)msgContext.getConfigurationContext().getProperty(threadContextMigratorListID);\n     \n     if (migratorList != null)\n@@ -89,6 +94,11 @@ public static void performMigrationToThread(String threadContextMigratorListID,\n    */\n   public static void performThreadCleanup(String threadContextMigratorListID, MessageContext msgContext)\n   {\n+    if (msgContext == null)\n+    {\n+      return;\n+    }\n+      \n     List migratorList = (List)msgContext.getConfigurationContext().getProperty(threadContextMigratorListID);\n     \n     if (migratorList != null)\n@@ -114,6 +124,11 @@ public static void performThreadCleanup(String threadContextMigratorListID, Mess\n   public static void performMigrationToContext(String threadContextMigratorListID, MessageContext msgContext)\n   throws AxisFault\n   {\n+    if (msgContext == null)\n+    {\n+      return;\n+    }\n+      \n     List migratorList = (List)msgContext.getConfigurationContext().getProperty(threadContextMigratorListID);\n \n     if (migratorList != null)\n@@ -137,6 +152,11 @@ public static void performMigrationToContext(String threadContextMigratorListID,\n    */\n   public static void performContextCleanup(String threadContextMigratorListID, MessageContext msgContext)\n   {\n+    if (msgContext == null)\n+    {\n+      return;\n+    }\n+      \n     List migratorList = (List)msgContext.getConfigurationContext().getProperty(threadContextMigratorListID);\n \n     if (migratorList != null)", "filename": "modules/kernel/src/org/apache/axis2/util/ThreadContextMigratorUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9077cd4f15cb30a3f45944a259d2ee0885614abd", "parent": "https://github.com/apache/axis2-java/commit/ca17dce046800b69580aafeeb52c877ecb46a944", "message": "Fixing an NPE in JAX-WS on a bad endpoint address.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@486744 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_111", "file": [{"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java", "sha": "28f3d453b03ec223a97a91856d02d2d1691ed7a0", "changes": 9, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd", "patch": "@@ -63,10 +63,15 @@ public MessageContext() {\n     }\n     \n     public MessageContext(org.apache.axis2.context.MessageContext mc) throws MessageException {\n-        axisMsgCtx = mc;\n         properties = new HashMap<String, Object>();\n         \n-        message = MessageUtils.getMessageFromMessageContext(mc);\n+        if (mc != null) {\n+            axisMsgCtx = mc;\n+            message = MessageUtils.getMessageFromMessageContext(mc);\n+        }\n+        else { \n+            axisMsgCtx = new org.apache.axis2.context.MessageContext();\n+        }        \n     }\n     \n     public InvocationContext getInvocationContext() {", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java"}, {"additions": 11, "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java", "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java", "sha": "a2bd5a90bddd95a46c996871027136a184e2ec53", "changes": 24, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd", "patch": "@@ -80,7 +80,7 @@\n     private static boolean debug = log.isDebugEnabled();\n     \n     /*\n-     *  (non-Javadoc)\n+     * (non-Javadoc)\n      * @see org.apache.axis2.jaxws.core.controller.InvocationController#invoke(org.apache.axis2.jaxws.core.InvocationContext)\n      */\n     public MessageContext doInvoke(MessageContext request) {\n@@ -130,18 +130,16 @@ public MessageContext doInvoke(MessageContext request) {\n             // Collect the response MessageContext and envelope\n             axisResponseMsgCtx = opClient.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n             response = new MessageContext(axisResponseMsgCtx);\n-         \n-            /*\n-             * If the Message object is still null, then it's possible that a\n-             * local AxisFault was thrown and we need to save it for later throwing\n-             * We do not want to create a message and go through the whole handler or\n-             * XMLFault processing because it's unnecessary.\n-             * \n-             * Same is true if we get a valid non-fault server response but some jaxws\n-             * client processing (a handler, perhaps) throws an exception.\n-             * \n-             * If the response message itself is a fault message, let it pass through.\n-             */\n+            \n+            // If the Message object is still null, then it's possible that a\n+            // local AxisFault was thrown and we need to save it for later throwing\n+            // We do not want to create a message and go through the whole handler or\n+            // XMLFault processing because it's unnecessary.\n+            // \n+            // Same is true if we get a valid non-fault server response but some jaxws\n+            // client processing (a handler, perhaps) throws an exception.\n+            // \n+            // If the response message itself is a fault message, let it pass through.\n             if ((faultexception != null) && ((response.getMessage() == null)\n                     || (!response.getMessage().isFault()))) {\n                 MessageFactory factory = (MessageFactory) FactoryRegistry.getFactory(MessageFactory.class);", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java"}, {"additions": 66, "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl", "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl", "sha": "2dc67b5c5b666dbab488e5427319f571db93c0b9", "changes": 66, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd", "patch": "@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<definitions targetNamespace=\"http://jaxws.axis2.apache.org\" \r\n+      xmlns:tns=\"http://jaxws.axis2.apache.org\"\r\n+      xmlns=\"http://schemas.xmlsoap.org/wsdl/\" \r\n+      xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n+      xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\">\r\n+\r\n+   <types>\r\n+      <xsd:schema targetNamespace=\"http://jaxws.axis2.apache.org\"\r\n+         xmlns:tns=\"http://jaxws.axis2.apache.org\"\r\n+         xmlns=\"http://www.w3.org/2001/XMLSchema\"\r\n+         elementFormDefault=\"qualified\">\r\n+\r\n+         <complexType name=\"echoType\">\r\n+            <sequence>\r\n+               <element name=\"request\" type=\"xsd:string\"/>\r\n+            </sequence>\r\n+         </complexType>\r\n+\r\n+         <complexType name=\"echoResponseType\">\r\n+            <sequence>\r\n+               <element name=\"response\" type=\"xsd:string\"/>\r\n+            </sequence>\r\n+         </complexType>\r\n+\r\n+         <element name=\"echo\" type=\"tns:echoType\"/>\r\n+         <element name=\"echoResponse\" type=\"tns:echoResponseType\"/>\r\n+\r\n+      </xsd:schema>\r\n+   </types>\r\n+\r\n+   <message name=\"echo\">\r\n+      <part name=\"parameters\" element=\"tns:echo\"/>\r\n+   </message>\r\n+\r\n+   <message name=\"echoResponse\">\r\n+      <part name=\"parameters\" element=\"tns:echoResponse\"/>\r\n+   </message>\r\n+\r\n+   <portType name=\"Echo\">\r\n+      <operation name=\"echo\">\r\n+         <input message=\"tns:echo\" />\r\n+         <output message=\"tns:echoResponse\" />\r\n+      </operation>\r\n+   </portType>\r\n+\r\n+   <binding name=\"EchoBinding\" type=\"tns:Echo\">\r\n+      <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n+      <operation name=\"echo\">\r\n+         <soap:operation soapAction=\"\"/>\r\n+         <input>\r\n+            <soap:body use=\"literal\"/>\r\n+         </input>\r\n+\r\n+         <output>\r\n+            <soap:body use=\"literal\"/>\r\n+         </output>\r\n+      </operation>\r\n+   </binding>\r\n+\r\n+   <service name=\"EchoService\">\r\n+      <port binding=\"tns:EchoBinding\" name=\"EchoPort\">\r\n+         <soap:address location=\"this is an invalid string\"/>\r\n+      </port>\r\n+   </service>\r\n+</definitions>\r", "filename": "modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl"}, {"additions": 37, "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java", "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java", "sha": "f9a04e3a461bebe0f4c3cc32ead91dbc65dc265e", "changes": 37, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd", "patch": "@@ -0,0 +1,37 @@\n+package org.apache.axis2.jaxws.client;\r\n+\r\n+import java.net.URL;\r\n+\r\n+import javax.xml.namespace.QName;\r\n+import javax.xml.ws.Dispatch;\r\n+import javax.xml.ws.Service;\r\n+import javax.xml.ws.WebServiceException;\r\n+import javax.xml.ws.Service.Mode;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+public class ClientConfigTests extends TestCase {\r\n+\r\n+    public ClientConfigTests(String name) {\r\n+        super(name);\r\n+    }\r\n+    \r\n+    public void testBadWsdlUrl() throws Exception {\r\n+        URL url = new URL(\"file:./test-resources/wsdl/BadEndpointAddress.wsdl\");\r\n+        \r\n+        Service svc = Service.create(url, new QName(\"http://jaxws.axis2.apache.org\", \"EchoService\"));\r\n+        Dispatch dispatch = svc.createDispatch(new QName(\"http://jaxws.axis2.apache.org\", \"EchoPort\"), \r\n+                String.class, Mode.PAYLOAD);\r\n+        \r\n+        try {\r\n+            dispatch.invoke(\"\");\r\n+            \r\n+            // If an exception wasn't thrown, then it's an error.\r\n+            fail();\r\n+        } catch (WebServiceException e) {\r\n+            // We should only get a WebServiceException here.  Anything else\r\n+            // is a failure.\r\n+            System.out.println(\"[pass] - the proper fault type was thrown\");\r\n+        }\r\n+    }\r\n+}\r", "filename": "modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java", "sha": "b10236dc835b82b6e1adde93f51e7fe3940c79d5", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd", "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.axis2.jaxws.anytype.tests.AnyTypeTests;\n import org.apache.axis2.jaxws.attachments.MTOMSerializationTests;\n+import org.apache.axis2.jaxws.client.ClientConfigTests;\n import org.apache.axis2.jaxws.client.DispatchSoapActionTests;\n import org.apache.axis2.jaxws.client.PropertyValueTests;\n import org.apache.axis2.jaxws.client.ProxySoapActionTests;\n@@ -100,6 +101,7 @@ public static Test suite() {\n         suite.addTestSuite(DispatchSoapActionTests.class);\n         suite.addTestSuite(ProxySoapActionTests.class);\n         suite.addTestSuite(PropertyValueTests.class);\n+        suite.addTestSuite(ClientConfigTests.class);\n         \n         suite.addTestSuite(BlockTests.class);\n         suite.addTestSuite(MessageTests.class);", "filename": "modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9", "parent": "https://github.com/apache/axis2-java/commit/5b0aaf6567ab44572ac33eb92062d856a662029a", "message": "AXIS2-1806\nContributor: Ann Robinson\nAdded test case and fixed an NPE when and invalid transport protocol was specified.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@481877 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_112", "file": [{"additions": 205, "raw_url": "https://github.com/apache/axis2-java/raw/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java", "sha": "20e314b0ee39566547ecab5e23ee48cdd6ce9290", "changes": 205, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java?ref=5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9", "patch": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2004,2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.axis2.engine;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+import org.apache.axiom.om.OMAbstractFactory;\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.om.OMFactory;\n+import org.apache.axiom.om.OMNamespace;\n+import org.apache.axiom.soap.SOAP11Constants;\n+import org.apache.axiom.soap.SOAP12Constants;\n+import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPFactory;\n+\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.Constants;\n+import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.OperationClient;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.axis2.context.ConfigurationContextFactory;\n+import org.apache.axis2.context.MessageContext;\n+import org.apache.axis2.context.OperationContext;\n+import org.apache.axis2.context.ServiceContext;\n+import org.apache.axis2.description.AxisService;\n+import org.apache.axis2.description.ClientUtils;\n+import org.apache.axis2.description.TransportInDescription;\n+import org.apache.axis2.description.TransportOutDescription;\n+import org.apache.axis2.engine.util.TestConstants;\n+import org.apache.axis2.integration.UtilServer;\n+import org.apache.axis2.integration.UtilServerBasedTestCase;\n+import org.apache.axis2.util.Utils;\n+import org.apache.axis2.wsdl.WSDLConstants;\n+\n+import javax.xml.namespace.QName;\n+\n+\n+public class UsingTransportTest extends UtilServerBasedTestCase implements TestConstants\n+{\n+\n+    QName assumedServiceName = new QName(\"AnonymousService\");\n+\n+\n+    private AxisService service = null;\n+\n+\n+    public static Test suite()\n+    {\n+        return getTestSetup(new TestSuite(UsingTransportTest.class));\n+    }\n+\n+    protected void setUp() throws Exception \n+    {\n+        service = Utils.createSimpleService(TestConstants.serviceName, Echo.class.getName(), TestConstants.operationName); \n+        UtilServer.deployService(service);\n+    }\n+\n+    protected void tearDown() throws Exception \n+    {\n+        UtilServer.unDeployService(TestConstants.serviceName);\n+        UtilServer.unDeployClientService();\n+    }\n+\n+\n+    public void testValidTransport() throws AxisFault \n+    {\n+        String title = \"testValidTransport(): \";\n+\n+        OMElement payload = createEnvelope();\n+\n+        ConfigurationContext configCtx = ConfigurationContextFactory.createConfigurationContextFromFileSystem(null, null); \n+\n+        ServiceClient servClient = new ServiceClient(configCtx, null);\n+\n+        Options options = new Options();\n+        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI); \n+        options.setTo(targetEPR);\n+        options.setTransportInProtocol(Constants.TRANSPORT_HTTP);\n+        servClient.setOptions(options);\n+\n+        OperationClient opClinet = servClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+        String ocType = opClinet.getClass().getName();\n+        System.out.println(\"\\n\"+title+\"Using OperationClient [\"+ocType+\"]\");\n+        opClinet.addMessageContext(prepareTheSOAPEnvelope(payload, options));\n+        System.out.println(title+\"Invoking OperationClient [\"+ocType+\"] execute()\");\n+        opClinet.execute(true);\n+\n+        SOAPEnvelope result = opClinet.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE).getEnvelope();\n+\n+        assertEquals(\"SOAP Version received is not compatible\",\n+                     SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI,\n+                     result.getNamespace().getNamespaceURI());\n+    }\n+\n+\n+    public void testInvalidTransport() throws AxisFault \n+    {\n+        String title = \"testInvalidTransport(): \";\n+        OMElement payload = createEnvelope();\n+\n+        ConfigurationContext configCtx = ConfigurationContextFactory.createConfigurationContextFromFileSystem(null, null); \n+\n+        ServiceClient servClient = new ServiceClient(configCtx, null);\n+\n+        Options options = new Options();\n+        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI); \n+\n+        // set the endpoint with \"htp\" instead of \"http\" \n+        EndpointReference invalidTargetEPR = new EndpointReference(\"htp://127.0.0.1:5556/axis2/services/EchoXMLService/echoOMElement\");\n+        options.setTo(invalidTargetEPR);\n+\n+        servClient.setOptions(options);\n+\n+        OperationClient opClinet = servClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+        String ocType = opClinet.getClass().getName();\n+        System.out.println(title+\"Using OperationClient [\"+ocType+\"]\");\n+\n+        MessageContext msgCtx = prepareTheSOAPEnvelope(payload, options);\n+\n+        opClinet.addMessageContext(msgCtx);\n+\n+        try\n+        {\n+            System.out.println(title+\"Invoking OperationClient [\"+ocType+\"] execute()\");\n+            opClinet.execute(true);\n+        }\n+        catch (Exception ex)\n+        {\n+            String exName = ex.getClass().getName();\n+\n+            System.out.println(title+\"Expecting an exception of type [org.apache.axis2.AxisFault].   Caught exception  [\"+exName+\"]    error [\"+ex.getMessage()+\"]\"); \n+            ex.printStackTrace();\n+\n+            assertTrue(\"Expecting an exception of type [org.apache.axis2.AxisFault]\",(ex instanceof org.apache.axis2.AxisFault));\n+        }\n+\n+    }\n+\n+\n+    private MessageContext prepareTheSOAPEnvelope(OMElement toSend, Options options) throws AxisFault \n+    {\n+        MessageContext msgctx = new MessageContext();\n+\n+        SOAPFactory sf = getSOAPFactory(options);\n+        SOAPEnvelope se = sf.getDefaultEnvelope();\n+\n+        if (toSend != null)\n+        {\n+            se.getBody().addChild(toSend);\n+        }\n+\n+        msgctx.setEnvelope(se);\n+        return msgctx;\n+    }\n+\n+\n+    private SOAPFactory getSOAPFactory(Options options)\n+    {\n+        String soapVersionURI = options.getSoapVersionURI();\n+\n+        if (SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI.equals(soapVersionURI))\n+        {\n+            return OMAbstractFactory.getSOAP12Factory();\n+        }\n+        else\n+        {\n+            // if its not SOAP 1.2 just assume SOAP 1.1\n+            return OMAbstractFactory.getSOAP11Factory();\n+        }\n+    }\n+\n+\n+    private OMElement createEnvelope()\n+    {\n+        OMFactory fac = OMAbstractFactory.getOMFactory();\n+        OMNamespace omNs = fac.createOMNamespace(\"http://localhost/my\", \"my\");\n+\n+        OMElement method = fac.createOMElement(\"echoOMElement\", omNs);\n+\n+        OMElement value = fac.createOMElement(\"myValue\", omNs);\n+        value.addChild(fac.createOMText(value, \"Isaac Asimov, The Foundation Trilogy\")); \n+\n+        method.addChild(value);\n+\n+        return method;\n+    }\n+\n+\n+}", "filename": "modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java"}, {"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/kernel/src/org/apache/axis2/description/ClientUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/kernel/src/org/apache/axis2/description/ClientUtils.java", "sha": "e25a59104a6f78a00bf6f5523c533fa980229477", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/ClientUtils.java?ref=5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9", "patch": "@@ -82,7 +82,9 @@ public static synchronized TransportInDescription inferInTransport(AxisConfigura\n                 }\n             } else {\n                 //assume listener transport as sender transport\n-                listenerTransportProtocol = msgCtxt.getTransportOut().getName().getLocalPart();\n+                if (msgCtxt.getTransportOut() != null) {\n+                    listenerTransportProtocol = msgCtxt.getTransportOut().getName().getLocalPart();\n+                }\n             }\n         }\n         TransportInDescription transportIn = null;\n@@ -111,6 +113,7 @@ public static synchronized TransportInDescription inferInTransport(AxisConfigura\n                 }\n             }\n         }\n+\n         return transportIn;\n     }\n }", "filename": "modules/kernel/src/org/apache/axis2/description/ClientUtils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/751a126fe364d9c65def1f90caf5f08798f9a268", "parent": "https://github.com/apache/axis2-java/commit/1ec166a3cd485982b404b928413c3bd5b38eb2e2", "message": "Prevent NPE from isHeaderPresent if no envelope associated\nwith the MessageContext. (e.g. if the server 500's with no\nenvelope).\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@478120 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_113", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/751a126fe364d9c65def1f90caf5f08798f9a268/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/751a126fe364d9c65def1f90caf5f08798f9a268/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "sha": "d740a7850c2d8df58226382862967080e38a76f2", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=751a126fe364d9c65def1f90caf5f08798f9a268", "patch": "@@ -1149,6 +1149,10 @@ public boolean isEngaged(QName moduleName) {\n      * @return boolean\n      */\n     public boolean isHeaderPresent() {\n+        // If there's no envelope there can't be a header.\n+        if(this.envelope == null){\n+            return false;\n+        }\n         OMElement node = this.envelope.getFirstElement();\n         if (node == null) {\n             return false;", "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e5c3cf67f7b4fadf02d092b103d1e0793c821405", "parent": "https://github.com/apache/axis2-java/commit/3ed2eedaaec91da707b1979aa8bc6af0eeb5559b", "message": "Merge changes from r471671\nReplace NPE with specific exception to improve clarity of a failure case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@475441 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_114", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/e5c3cf67f7b4fadf02d092b103d1e0793c821405/modules/kernel/src/org/apache/axis2/util/CallbackReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/e5c3cf67f7b4fadf02d092b103d1e0793c821405/modules/kernel/src/org/apache/axis2/util/CallbackReceiver.java", "sha": "3ff8ba1c185adb438c4f2fd094db138f3a63c860", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/CallbackReceiver.java?ref=e5c3cf67f7b4fadf02d092b103d1e0793c821405", "patch": "@@ -16,18 +16,17 @@\n \n package org.apache.axis2.util;\n \n+import java.util.HashMap;\n+\n import org.apache.axiom.soap.SOAPEnvelope;\n import org.apache.axiom.soap.SOAPFault;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.addressing.RelatesTo;\n-import org.apache.axis2.addressing.AddressingConstants;\n import org.apache.axis2.client.async.AsyncResult;\n import org.apache.axis2.client.async.Callback;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.engine.MessageReceiver;\n \n-import java.util.HashMap;\n-\n /**\n  * This is a MessageReceiver which is used on the client side to accept the\n  * messages (response) that come to the client. This correlates the incoming message to\n@@ -47,6 +46,9 @@ public void addCallback(String MsgID, Callback callback) {\n \n     public void receive(MessageContext messageCtx) throws AxisFault {\n         RelatesTo relatesTO = messageCtx.getOptions().getRelatesTo();\n+        if(relatesTO == null){\n+            throw new AxisFault(\"Cannot identify correct Callback object. RelatesTo is null\");\n+        }\n         String messageID = relatesTO.getValue();\n         Callback callback = (Callback) callbackStore.get(messageID);\n \t\tAsyncResult result = new AsyncResult(messageCtx);", "filename": "modules/kernel/src/org/apache/axis2/util/CallbackReceiver.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/72bb2e1b98f4f8663690f7da5efc3b3f5aa4046b", "parent": "https://github.com/apache/axis2-java/commit/48adc8e2e0b4761ad8528dd8a4ec96e4d76ec98b", "message": "testing yesterdays change with aar in  AXIS2-1687. add more checks to prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/branches/java/1_1@474024 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_115", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/72bb2e1b98f4f8663690f7da5efc3b3f5aa4046b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/72bb2e1b98f4f8663690f7da5efc3b3f5aa4046b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java", "sha": "68920bd83104c5c6acf9815c79744f8cea7f8f2f", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java?ref=72bb2e1b98f4f8663690f7da5efc3b3f5aa4046b", "patch": "@@ -134,14 +134,15 @@ public static SOAPEnvelope handleMediaTypeURLEncoded(MessageContext msgCtxt,\n                         while (iterator.hasNext()) {\n                             XmlSchemaElement innerElement = (XmlSchemaElement) iterator.next();\n                             QName qName = innerElement.getQName();\n-                            String[] parameterValuesArray = (String[]) parameterMap.get(qName.getLocalPart());\n+                            String name = qName != null ? qName.getLocalPart() : innerElement.getName();\n+                            String[] parameterValuesArray = (String[]) parameterMap.get(name);\n                             if (parameterValuesArray != null &&\n                                 !\"\".equals(parameterValuesArray[0]) && parameterValuesArray[0] != null)\n                             {\n-                                OMNamespace ns = (qName.getNamespaceURI() == null || qName.getNamespaceURI().length() == 0) ?\n+                                OMNamespace ns = (qName == null || qName.getNamespaceURI() == null || qName.getNamespaceURI().length() == 0) ?\n                                         null :\n                                         soapFactory.createOMNamespace(qName.getNamespaceURI(), null);\n-                                soapFactory.createOMElement(qName.getLocalPart(), ns,\n+                                soapFactory.createOMElement(name, ns,\n                                                             bodyFirstChild).setText(parameterValuesArray[0]);\n                             } else {\n                                 throw new AxisFault(\"Required element \" + qName +", "filename": "modules/kernel/src/org/apache/axis2/util/SchemaUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/ee11c497027fc9de1264d3c341833b4558a127c7", "parent": "https://github.com/apache/axis2-java/commit/4a979ef2ae63d57919f0ff417fd12ede00a94e62", "message": "Fixing a possible NPE. (thanks Ruchith for calling me early in the morning and persuading to fix this :(( )\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@433890 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_116", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/ee11c497027fc9de1264d3c341833b4558a127c7/modules/kernel/src/org/apache/axis2/transport/http/AxisRESTServlet.java", "blob_url": "https://github.com/apache/axis2-java/blob/ee11c497027fc9de1264d3c341833b4558a127c7/modules/kernel/src/org/apache/axis2/transport/http/AxisRESTServlet.java", "sha": "8e56ebd09e96ca4af3b021163402b319e5809bf0", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AxisRESTServlet.java?ref=ee11c497027fc9de1264d3c341833b4558a127c7", "patch": "@@ -85,6 +85,8 @@ public void init(ServletConfig config) throws ServletException {\n         servletContext.setAttribute(this.getClass().getName(), this);\n         this.servletConfig = config;\n \n+        axisConfiguration = configContext.getAxisConfiguration();\n+\n         initParams();\n     }\n ", "filename": "modules/kernel/src/org/apache/axis2/transport/http/AxisRESTServlet.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/414b52aae553a4f6baee4063a42d4190b59c4b17", "parent": "https://github.com/apache/axis2-java/commit/8ab9462a8d105b4323bea60b23c1e839fdbb7b9d", "message": "Fixing NPE in fix for AXIS2-967 is OperationContext is somehow null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@431699 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_117", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/414b52aae553a4f6baee4063a42d4190b59c4b17/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/414b52aae553a4f6baee4063a42d4190b59c4b17/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "sha": "2bca7cc456b76ac18c6d2f345adccb6e236b6c00", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java?ref=414b52aae553a4f6baee4063a42d4190b59c4b17", "patch": "@@ -421,7 +421,11 @@ private void extractFaultInformationFromMessageContext(MessageContext context, S\n         // Allow handlers to override the sendStacktraceDetailsWithFaults setting from the Configuration to allow\n         // WS-* protocol faults to not include the exception.\n         boolean sendStacktraceDetailsWithFaults = false;\n-        Object flagFromContext = context.getOperationContext().getProperty(Constants.Configuration.SEND_STACKTRACE_DETAILS_WITH_FAULTS);\n+        OperationContext oc = context.getOperationContext();\n+        Object flagFromContext = null;\n+        if(oc!=null){\n+            flagFromContext = context.getOperationContext().getProperty(Constants.Configuration.SEND_STACKTRACE_DETAILS_WITH_FAULTS);\n+        }\n         if(flagFromContext!=null){\n             sendStacktraceDetailsWithFaults = JavaUtils.isTrue(flagFromContext);\n         }else{", "filename": "modules/kernel/src/org/apache/axis2/engine/AxisEngine.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/74218c139b57257a13e808ccca496f7e805d198d", "parent": "https://github.com/apache/axis2-java/commit/d04c6c48575910ebb5fbd95caeb3117d5deff8fc", "message": "prevent NPE if the wsdl:message is missing, throw an exception instead with the qname of the missing message\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@421416 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_118", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/74218c139b57257a13e808ccca496f7e805d198d/modules/core/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/74218c139b57257a13e808ccca496f7e805d198d/modules/core/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "a25a11334af12734e4efc619477163dff546a8f2", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=74218c139b57257a13e808ccca496f7e805d198d", "patch": "@@ -1088,7 +1088,7 @@ private Definition readInTheWSDLFile(InputStream in) throws WSDLException {\n      */\r\n     private void copyExtensibleElements(List wsdl4jExtensibleElements,\r\n                                         Definition wsdl4jDefinition, AxisDescription description,\r\n-                                        String originOfExtensibilityElements) {\r\n+                                        String originOfExtensibilityElements) throws AxisFault {\r\n         Iterator iterator = wsdl4jExtensibleElements.iterator();\r\n         while (iterator.hasNext()) {\r\n             ExtensibilityElement wsdl4jElement = (ExtensibilityElement) iterator\r\n@@ -1200,6 +1200,9 @@ private void copyExtensibleElements(List wsdl4jExtensibleElements,\n                     //find the relevant schema part from the messages\r\n                     Message msg = wsdl4jDefinition.getMessage(soapHeader\r\n                             .getMessage());\r\n+                    if(msg == null) {\r\n+                        throw new AxisFault(\"message \" + soapHeader.getMessage() + \" not found in the WSDL \");\r\n+                    }\r\n                     Part msgPart = msg.getPart(soapHeader.getPart());\r\n                     headerMessage.setElement(msgPart.getElementName());\r\n                 }\r", "filename": "modules/core/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/4af84cd6e377b5480abb1e2608cc76b6e20fcd23", "parent": "https://github.com/apache/axis2-java/commit/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b", "message": "- Fixing http://issues.apache.org/jira/browse/AXIS2-786. Removing a possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@412056 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_119", "file": [{"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/4af84cd6e377b5480abb1e2608cc76b6e20fcd23/modules/core/src/org/apache/axis2/util/SchemaUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/4af84cd6e377b5480abb1e2608cc76b6e20fcd23/modules/core/src/org/apache/axis2/util/SchemaUtil.java", "sha": "2fd1f7f4e23421fe6fd679ae2a0156398bb94e06", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/util/SchemaUtil.java?ref=4af84cd6e377b5480abb1e2608cc76b6e20fcd23", "patch": "@@ -15,23 +15,23 @@\n  */\n package org.apache.axis2.util;\n \n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.soap.SOAPBody;\n import org.apache.axiom.soap.SOAPEnvelope;\n import org.apache.axiom.soap.SOAPFactory;\n-import org.apache.axiom.soap.SOAPBody;\n-import org.apache.axiom.om.OMElement;\n-import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.HTTPConstants;\n-import org.apache.ws.commons.schema.XmlSchemaElement;\n-import org.apache.ws.commons.schema.XmlSchemaType;\n+import org.apache.axis2.context.MessageContext;\n import org.apache.ws.commons.schema.XmlSchemaComplexType;\n+import org.apache.ws.commons.schema.XmlSchemaElement;\n import org.apache.ws.commons.schema.XmlSchemaParticle;\n import org.apache.ws.commons.schema.XmlSchemaSequence;\n+import org.apache.ws.commons.schema.XmlSchemaType;\n \n import javax.servlet.http.HttpServletRequest;\n import javax.xml.namespace.QName;\n-import java.util.Map;\n import java.util.Iterator;\n+import java.util.Map;\n \n /**\n  * \n@@ -102,7 +102,7 @@ public static SOAPEnvelope handleMediaTypeURLEncoded(MessageContext msgCtxt,\n                             XmlSchemaElement innerElement = (XmlSchemaElement) iterator.next();\n                             String name = innerElement.getName();\n                             String[] parameterValuesArray = (String[]) parameterMap.get(name);\n-                            if (parameterValuesArray.length > 0 &&\n+                            if (parameterValuesArray != null &&\n                                 !\"\".equals(parameterValuesArray[0]) && parameterValuesArray[0] != null)\n                             {\n                                 soapFactory.createOMElement(name, null,", "filename": "modules/core/src/org/apache/axis2/util/SchemaUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/64a9c9027a728dd63155979eafc29a9131d70dbe", "parent": "https://github.com/apache/axis2-java/commit/14a4bef0c04c6956a5f2d8b344515165a749938a", "message": "Slightly improved the code to avoid a possible NPE when the property files are not updated\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@411800 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_120", "file": [{"additions": 16, "raw_url": "https://github.com/apache/axis2-java/raw/64a9c9027a728dd63155979eafc29a9131d70dbe/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/64a9c9027a728dd63155979eafc29a9131d70dbe/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java", "sha": "6f495f8c755f3e89efd26bf8814a811d325d55c9", "changes": 27, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java?ref=64a9c9027a728dd63155979eafc29a9131d70dbe", "patch": "@@ -46,7 +46,7 @@\n import java.util.Map;\n \n public class CodeGenerationEngine {\n-\tprivate static final Log log = LogFactory.getLog(CodeGenerationEngine.class);\n+    private static final Log log = LogFactory.getLog(CodeGenerationEngine.class);\n \n     private List preExtensions = new ArrayList();\n     private List postExtensions = new ArrayList();\n@@ -113,15 +113,20 @@ public CodeGenerationEngine(CommandLineOptionParser parser) throws CodeGeneratio\n     private void loadExtensions() throws CodeGenerationException {\n         //load pre extensions\n         String[] extensions = ConfigPropertyFileLoader.getExtensionClassNames();\n-        for (int i = 0; i < extensions.length; i++) {\n-            //load the Extension class\n-            addPreExtension((CodeGenExtension) getObjectFromClassName(extensions[i]));\n+        if (extensions!=null){\n+            for (int i = 0; i < extensions.length; i++) {\n+                //load the Extension class\n+                addPreExtension((CodeGenExtension) getObjectFromClassName(extensions[i]));\n+            }\n         }\n+        \n         //load post extensions\n         String[] postExtensions = ConfigPropertyFileLoader.getPostExtensionClassNames();\n-        for (int i = 0; i < postExtensions.length; i++) {\n-            //load the Extension class\n-            addPostExtension((CodeGenExtension) getObjectFromClassName(postExtensions[i]));\n+        if (postExtensions!=null){\n+            for (int i = 0; i < postExtensions.length; i++) {\n+                //load the Extension class\n+                addPostExtension((CodeGenExtension) getObjectFromClassName(postExtensions[i]));\n+            }\n         }\n \n     }\n@@ -132,17 +137,17 @@ private void loadExtensions() throws CodeGenerationException {\n      */\n     private void addPreExtension(CodeGenExtension ext) {\n         if(ext != null) {\n-           preExtensions.add(ext);\n+            preExtensions.add(ext);\n         }\n     }\n \n-     /**\n+    /**\n      * Adds a given extension to the list\n      * @param ext\n      */\n     private void addPostExtension(CodeGenExtension ext) {\n         if(ext != null) {\n-           postExtensions.add(ext);\n+            postExtensions.add(ext);\n         }\n     }\n \n@@ -227,7 +232,7 @@ private Definition readInTheWSDLFile(String uri) throws WSDLException {\n             baseURI = uri;\n         } else{\n             if(file.getParentFile() == null){\n-               try {\n+                try {\n                     baseURI = new File(\".\").getCanonicalFile().toURI().toString();\n                 } catch (IOException e) {\n                     throw new RuntimeException(e);", "filename": "modules/codegen/src/org/apache/axis2/wsdl/codegen/CodeGenerationEngine.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/a5e753a2a123ff1d781640746b90a4cbdf97d89a", "parent": "https://github.com/apache/axis2-java/commit/eb19a1d450a4232282c7813e65135cbb8252a87c", "message": "-small fix in module engagement after removing exception when trying to engage already engaged module\n-Fixing NPE RPCMessageReceiver\n-\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@408569 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_121", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "sha": "5f4d7f9584ba4b81b7cdf8d8a292a8e17926fc03", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java?ref=a5e753a2a123ff1d781640746b90a4cbdf97d89a", "patch": "@@ -33,7 +33,6 @@\n import org.apache.axis2.engine.DependencyManager;\r\n import org.apache.axis2.receivers.AbstractInOutSyncMessageReceiver;\r\n import org.apache.axis2.wsdl.WSDLConstants;\r\n-import org.apache.axis2.wsdl.util.CommandLineOptionConstants;\r\n import org.apache.commons.logging.Log;\r\n import org.apache.commons.logging.LogFactory;\r\n \r\n@@ -137,7 +136,7 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n \r\n         } catch (Exception e) {\r\n             String msg = \"Exception occurred while trying to invoke service method \" +\r\n-                         method.getName();\r\n+                    inMessage.getAxisOperation().getName().getLocalPart();\r\n             log.error(msg, e);\r\n             throw new AxisFault(msg, e);\r\n         }\r", "filename": "modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/core/src/org/apache/axis2/engine/AxisConfiguration.java", "blob_url": "https://github.com/apache/axis2-java/blob/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/core/src/org/apache/axis2/engine/AxisConfiguration.java", "sha": "af4ffac53ccfdd05fad79cec0534c2cf0d7e87fa", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/engine/AxisConfiguration.java?ref=a5e753a2a123ff1d781640746b90a4cbdf97d89a", "patch": "@@ -319,9 +319,9 @@ public void engageModule(String moduleName, String versionID) throws AxisFault {\n     }\n \n     private void engageModule(AxisModule module) throws AxisFault {\n-        QName moduleQName = module.getName();\n         boolean isEngagable;\n         if (module != null) {\n+            QName moduleQName = module.getName();\n             for (Iterator iterator = engagedModules.iterator(); iterator.hasNext();) {\n                 QName qName = (QName) iterator.next();\n ", "filename": "modules/core/src/org/apache/axis2/engine/AxisConfiguration.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/core/src/org/apache/axis2/util/Utils.java", "blob_url": "https://github.com/apache/axis2-java/blob/a5e753a2a123ff1d781640746b90a4cbdf97d89a/modules/core/src/org/apache/axis2/util/Utils.java", "sha": "5d9140ff4b9e670af990d91eeb0d5bef6268f1f3", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/util/Utils.java?ref=a5e753a2a123ff1d781640746b90a4cbdf97d89a", "patch": "@@ -296,6 +296,8 @@ public static boolean checkVersion(QName deployingModuleName,\n                 } else {\n                     return false;\n                 }\n+            } else if (module2version == null) {\n+                return false;\n             }\n         }\n         return true;", "filename": "modules/core/src/org/apache/axis2/util/Utils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/f74c3e5b19c5975d22414a07fba9a986fb7a8e04", "parent": "https://github.com/apache/axis2-java/commit/14131036fe99b0a9908bf594f3f248da089b2b3e", "message": "- *PLEASE* don't catch all exceptions and return null\n- Adding check for NPE's.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@407889 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_122", "file": [{"additions": 13, "raw_url": "https://github.com/apache/axis2-java/raw/f74c3e5b19c5975d22414a07fba9a986fb7a8e04/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/f74c3e5b19c5975d22414a07fba9a986fb7a8e04/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java", "sha": "2f47239661da75b0b48ab8ba5af91a32611f9332", "changes": 20, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java?ref=f74c3e5b19c5975d22414a07fba9a986fb7a8e04", "patch": "@@ -49,7 +49,7 @@\n      * @param beanName\r\n      */\r\n     public static XMLStreamReader getPullParser(Object beanObject, QName beanName) {\r\n-        try {\r\n+\t\ttry {\r\n             JamServiceFactory factory = JamServiceFactory.getInstance();\r\n             JamServiceParams jam_service_parms = factory.createServiceParams();\r\n             jam_service_parms.addClassLoader(beanObject.getClass().getClassLoader());\r\n@@ -88,15 +88,15 @@ public static XMLStreamReader getPullParser(Object beanObject, QName beanName) {\n                     Object value = propDesc.getReadMethod().invoke(beanObject,\r\n                             (Object[]) null);\r\n                     object.add(propDesc.getName());\r\n-                    object.add(value.toString());\r\n+                    object.add(value == null ? null : value.toString());\r\n                 } else if (ptype.isArray()) {\r\n                     Object value [] = (Object[]) propDesc.getReadMethod().invoke(beanObject,\r\n                             (Object[]) null);\r\n                     if (SimpleTypeMapper.isSimpleType(ptype.getComponentType())) {\r\n                         for (int j = 0; j < value.length; j++) {\r\n                             Object o = value[j];\r\n                             object.add(propDesc.getName());\r\n-                            object.add(o.toString());\r\n+                            object.add(o == null ? null :o.toString());\r\n                         }\r\n                     } else {\r\n                         for (int j = 0; j < value.length; j++) {\r\n@@ -134,9 +134,15 @@ public static XMLStreamReader getPullParser(Object beanObject, QName beanName) {\n                 }\r\n             }\r\n             return new ADBXMLStreamReaderImpl(beanName, object.toArray(), null);\r\n-        } catch (Exception e) {\r\n-            return null;\r\n-        }\r\n+\t\t} catch (java.io.IOException e){\r\n+\t\t\tthrow new RuntimeException(e);\r\n+\t\t} catch (java.beans.IntrospectionException e){\r\n+\t\t\tthrow new RuntimeException(e);\r\n+\t\t} catch (java.lang.reflect.InvocationTargetException e){\r\n+\t\t\tthrow new RuntimeException(e);\r\n+\t\t} catch (java.lang.IllegalAccessException e){\r\n+\t\t\tthrow new RuntimeException(e);\r\n+\t\t}\r\n     }\r\n \r\n     /**\r\n@@ -455,7 +461,7 @@ public static OMElement getOMElement(QName opName, Object [] args, String partNa\n                     Object o = array[j];\r\n                     if (SimpleTypeMapper.isSimpleType(o)) {\r\n                         objects.add(\"item\" + argCount);\r\n-                        objects.add(o.toString());\r\n+                        objects.add(o == null ? null : o.toString());\r\n                     } else {\r\n                         objects.add(new QName(\"item\" + argCount));\r\n                         if (o instanceof OMElement) {\r", "filename": "modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9ae93af64811be7f1cb1b890d811a3daa8d2f82f", "parent": "https://github.com/apache/axis2-java/commit/bc5a128df7367d53131bc48dfd252dc6121e3da8", "message": "Fix for AXIS2-566 - Multiple ServiceClients using the same configurationContext causes NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@394725 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_123", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/9ae93af64811be7f1cb1b890d811a3daa8d2f82f/modules/core/src/org/apache/axis2/client/ServiceClient.java", "blob_url": "https://github.com/apache/axis2-java/blob/9ae93af64811be7f1cb1b890d811a3daa8d2f82f/modules/core/src/org/apache/axis2/client/ServiceClient.java", "sha": "b7b89e297aae7b16cc3cb67f4148c68b9e3a677a", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/client/ServiceClient.java?ref=9ae93af64811be7f1cb1b890d811a3daa8d2f82f", "patch": "@@ -156,6 +156,10 @@ public ServiceClient(ConfigurationContext configContext, URL wsdlURL,\n             // already\n             if (this.axisConfig.getService(this.axisService.getName()) == null) {\n                 this.axisConfig.addService(this.axisService);\n+            } else {\n+                throw new AxisFault(Messages.getMessage(\n+                        \"twoservicecannothavesamename\",\n+                        this.axisService.getName()));\n             }\n             ServiceGroupContext sgc = new ServiceGroupContext(this.configContext,\n                     (AxisServiceGroup) this.axisService.getParent());", "filename": "modules/core/src/org/apache/axis2/client/ServiceClient.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d49587a9cefd2d10f89cfa98f14a4649e7014510", "parent": "https://github.com/apache/axis2-java/commit/ae0fae641ad4290747938b88c2f5f7a00e96a5d9", "message": "- Preventing an NPE in StreamingOMSerializer.serializeElement(XMLStreamReader reader, XMLStreamWriter writer)\n- Generate the proper prameter element from InflowConfiguration and OutflowConfiguration\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@372460 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_124", "file": [{"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java", "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java", "sha": "af437667a83a3465709c9cfc21cf4276cbe7badb", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510", "patch": "@@ -43,8 +43,9 @@\n \tpublic Parameter getProperty() {\n \t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n \t\tOMNamespace ns = fac.createOMNamespace(\"\", null);\n-\t\tOMElement propertyElement = fac.createOMElement(\n-\t\t\t\tWSSHandlerConstants.INFLOW_SECURITY, ns);\n+        //TODO: Find the constants for \"Parameter\" and \"name\"\n+        OMElement paramElement = fac.createOMElement(\"Parameter\",ns);\n+        paramElement.addAttribute(fac.createOMAttribute(\"name\", null ,WSSHandlerConstants.INFLOW_SECURITY));\n \t\t\n \t\tOMElement actionElem = fac.createOMElement(\n \t\t\t\tWSSHandlerConstants.ACTION, ns);\n@@ -65,10 +66,11 @@ public Parameter getProperty() {\n             }\n \t\t}\n \t\t\n-\t\tpropertyElement.addChild(actionElem);\n+\t\tparamElement.addChild(actionElem);\n \t\t\n \t\tParameterImpl param = new ParameterImpl();\n-\t\tparam.setParameterElement(propertyElement);\n+\t\tparam.setParameterElement(paramElement);\n+        param.setName(WSSHandlerConstants.INFLOW_SECURITY);\n \t\t\n \t\treturn param;\n \t}", "filename": "modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java"}, {"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java", "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java", "sha": "f38186dcee46f043782da39bc710d45cda98f701", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510", "patch": "@@ -68,8 +68,9 @@ public Parameter getProperty() {\n \t\t\n \t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n \t\tOMNamespace ns = fac.createOMNamespace(\"\", null);\n-\t\tOMElement propertyElement = fac.createOMElement(\n-\t\t\t\tWSSHandlerConstants.OUTFLOW_SECURITY, ns);\n+        //TODO: Find the constants for \"Parameter\" and \"name\"\n+        OMElement paramElement = fac.createOMElement(\"Parameter\",ns);\n+\t\tparamElement.addAttribute(fac.createOMAttribute(\"name\", null ,WSSHandlerConstants.OUTFLOW_SECURITY));\n \n \t\t\n \t\tfor (int i = 0; i < this.actionList.length; i++) {\n@@ -96,11 +97,12 @@ public Parameter getProperty() {\n                 }\n \t\t\t}\n \t\t\t\n-\t\t\tpropertyElement.addChild(actionElem);\n+\t\t\tparamElement.addChild(actionElem);\n \t\t}\n \t\t\n \t\tParameterImpl param = new ParameterImpl();\n-\t\tparam.setParameterElement(propertyElement);\n+\t\tparam.setParameterElement(paramElement);\n+        param.setName(WSSHandlerConstants.OUTFLOW_SECURITY);\n \t\treturn param;\n \t}\n ", "filename": "modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java", "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java", "sha": "12af776334eeb0c16a2c7d529991f9d295864ad0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510", "patch": "@@ -117,8 +117,8 @@ protected void serializeElement(XMLStreamReader reader,\n             throws XMLStreamException {\n         String prefix = reader.getPrefix();\n         String nameSpaceName = reader.getNamespaceURI();\n-        String writer_prefix = writer.getPrefix(nameSpaceName);\n         if (nameSpaceName != null) {\n+            String writer_prefix = writer.getPrefix(nameSpaceName);\n             if (writer_prefix != null) {\n                 writer.writeStartElement(nameSpaceName, reader.getLocalName());\n             } else {", "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/24e65d8914529012d39c86c01f1f4dd3f5b58364", "parent": "https://github.com/apache/axis2-java/commit/a3f878d505ad7d2ec207c431fc7b2ab514211081", "message": "Prevent NPE's *IF* a session context is not set (say JMS transport)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@359068 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_125", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/24e65d8914529012d39c86c01f1f4dd3f5b58364/modules/core/src/org/apache/axis2/context/ConfigurationContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/24e65d8914529012d39c86c01f1f4dd3f5b58364/modules/core/src/org/apache/axis2/context/ConfigurationContext.java", "sha": "a3be44d7dc295209a28160a33921e1bf2a86ac30", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/context/ConfigurationContext.java?ref=24e65d8914529012d39c86c01f1f4dd3f5b58364", "patch": "@@ -133,8 +133,10 @@ public void fillServiceContextAndServiceGroupContext(\n                 messageContext.setServiceGroupContext(serviceGroupContext);\n             }\n         }\n-        // when you come here operation context MUST already been assigned to the message context\n-        serviceContext.setProperty(Constants.COOKIE_STRING, sessionContext.getCookieID());\n+        if(sessionContext != null) {\n+            // when you come here operation context MUST already been assigned to the message context\n+            serviceContext.setProperty(Constants.COOKIE_STRING, sessionContext.getCookieID());\n+        }\n         messageContext.getOperationContext().setParent(serviceContext);\n     }\n \n@@ -202,7 +204,7 @@ public synchronized ServiceGroupContext getServiceGroupContext(String serviceGro\n                 serviceGroupContext.touch();\n             }\n         }\n-        if (serviceGroupContext == null) {\n+        if (serviceGroupContext == null && msgContext.getSessionContext() != null) {\n             serviceGroupContext = msgContext.getSessionContext().getServiceGroupContext(\n                     serviceGroupContextId);\n         }", "filename": "modules/core/src/org/apache/axis2/context/ConfigurationContext.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/24e65d8914529012d39c86c01f1f4dd3f5b58364/modules/core/src/org/apache/axis2/engine/InstanceDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/24e65d8914529012d39c86c01f1f4dd3f5b58364/modules/core/src/org/apache/axis2/engine/InstanceDispatcher.java", "sha": "b7c6033ea04bdb35da5f72ab5eee99c8e527a924", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/engine/InstanceDispatcher.java?ref=24e65d8914529012d39c86c01f1f4dd3f5b58364", "patch": "@@ -47,7 +47,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n             return;\n         }\n         //trying to get service context from Session context\n-        fillContextsFromSessionContetxt(msgContext);\n+        fillContextsFromSessionContext(msgContext);\n \n         AxisOperation axisOperation = msgContext.getAxisOperation();\n \n@@ -87,14 +87,14 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         }\n     }\n \n-    private void fillContextsFromSessionContetxt(MessageContext msgContext) throws AxisFault {\n+    private void fillContextsFromSessionContext(MessageContext msgContext) throws AxisFault {\n         AxisService service = msgContext.getAxisService();\n         if (service == null) {\n             throw new AxisFault(\"AxisService Not found yet\");\n         }\n         SessionContext sessionContext = msgContext.getSessionContext();\n         String serviceGroupContextId = msgContext.getServiceGroupContextId();\n-        if (serviceGroupContextId != null) {\n+        if (serviceGroupContextId != null && sessionContext != null) {\n             //setting service group context which is teken from session context\n             ServiceGroupContext serviceGroupContext = sessionContext.getServiceGroupContext(\n                     serviceGroupContextId);", "filename": "modules/core/src/org/apache/axis2/engine/InstanceDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/38f67a6e6dd243cd8ffa00c8fd6f2d7c82e1e801", "parent": "https://github.com/apache/axis2-java/commit/4b7d5e74e93b583598ee4e4d5cbf7fafdc6b7f2f", "message": "- Fixing a possible NPE problem in using Options\n- defaulting the SOAP version to SOAP 1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@350124 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_126", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/38f67a6e6dd243cd8ffa00c8fd6f2d7c82e1e801/modules/core/src/org/apache/axis2/client/MEPClient.java", "blob_url": "https://github.com/apache/axis2-java/blob/38f67a6e6dd243cd8ffa00c8fd6f2d7c82e1e801/modules/core/src/org/apache/axis2/client/MEPClient.java", "sha": "69bc84a8b88c14dc791810d25f706fd47ffc0321", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/client/MEPClient.java?ref=38f67a6e6dd243cd8ffa00c8fd6f2d7c82e1e801", "patch": "@@ -197,10 +197,18 @@ protected TransportOutDescription inferTransport(EndpointReference epr) throws A\n      * @throws AxisFault\n      */\n     protected SOAPEnvelope createDefaultSOAPEnvelope() throws AxisFault {\n+\n+        // I added code to check the nullity in the prepareInvocation(). But it seems that this method\n+        // can be called before prepareInvocation().\n+        if(clientOptions == null){\n+           throw new AxisFault(\"Can not proceed without options being set for invocation. Set the\" +\n+                    \"properties for this invocation via MEPClient.setOptions(Options) first.\");\n+        }\n+\n         String soapVersionURI = clientOptions.getSoapVersionURI();\n         if (SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI.equals(soapVersionURI)) {\n             return OMAbstractFactory.getSOAP12Factory().getDefaultEnvelope();\n-        } else if (SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI.equals(soapVersionURI)) {\n+        } else if (SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI.equals(soapVersionURI) || \"\".equals(soapVersionURI) || soapVersionURI == null) {\n             return OMAbstractFactory.getSOAP11Factory().getDefaultEnvelope();\n         } else {\n             throw new AxisFault(Messages.getMessage(\"invaidSOAPversion\"));", "filename": "modules/core/src/org/apache/axis2/client/MEPClient.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/597046db144d0738155574702761de11e097a083", "parent": "https://github.com/apache/axis2-java/commit/9b8fbae006cda3075b0d1007daaecb7e77d36718", "message": "Fixing the build break caused by NPE.\nExcluding a test which is not required to be run now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@330723 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_127", "file": [{"additions": 11, "raw_url": "https://github.com/apache/axis2-java/raw/597046db144d0738155574702761de11e097a083/modules/wsdl/project.xml", "blob_url": "https://github.com/apache/axis2-java/blob/597046db144d0738155574702761de11e097a083/modules/wsdl/project.xml", "sha": "b131b745f6596eaf9bb7dedb10100f3adbdbf1d0", "changes": 12, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/wsdl/project.xml?ref=597046db144d0738155574702761de11e097a083", "patch": "@@ -111,7 +111,17 @@\n     </dependencies>\n \t<!-- add the build properties-->\n \t<build>\n-\t<resources>\n+\n+        <unitTest>\n+            <excludes>\n+                <exclude>**/*WriterTest.java</exclude>\n+                </excludes>\n+            <includes>\n+                <include>**/*Test.java</include>\n+            </includes>\n+        </unitTest>\n+\n+    <resources>\n \t\t<resource>\n \t\t\t<directory>src</directory>\n \t\t\t<includes>", "filename": "modules/wsdl/project.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/597046db144d0738155574702761de11e097a083/modules/wsdl/src/org/apache/axis2/wsdl/builder/wsdl4j/WSDLPump.java", "blob_url": "https://github.com/apache/axis2-java/blob/597046db144d0738155574702761de11e097a083/modules/wsdl/src/org/apache/axis2/wsdl/builder/wsdl4j/WSDLPump.java", "sha": "02f192f92a9ce566abab3622074a0ae096017d38", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/wsdl/src/org/apache/axis2/wsdl/builder/wsdl4j/WSDLPump.java?ref=597046db144d0738155574702761de11e097a083", "patch": "@@ -266,7 +266,12 @@ private void processImports(Definition wsdl4JDefinition){\n                             Types t = importedDef.getTypes();\n                             List typesList = t.getExtensibilityElements();\n                             for (int j = 0; j < typesList.size(); j++) {\n-                                wsdl4JDefinition.getTypes().addExtensibilityElement(\n+                                Types types = wsdl4JDefinition.getTypes();\n+                                if(types == null){\n+                                    types = wsdl4JDefinition.createTypes();\n+                                    wsdl4JDefinition.setTypes(types);\n+                                }\n+                                types.addExtensibilityElement(\n                                         (ExtensibilityElement)typesList.get(j));\n \n                             }", "filename": "modules/wsdl/src/org/apache/axis2/wsdl/builder/wsdl4j/WSDLPump.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/9d1003e0b860c6ed0f0db4c9c8eac954758e06e5", "parent": "https://github.com/apache/axis2-java/commit/9d33820c1dcbf866c4d1c5ba3c6b43e22f8ddcb7", "message": "- Prevent NPE when content-type is absent\n- Fix a typo \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@328964 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_128", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/9d1003e0b860c6ed0f0db4c9c8eac954758e06e5/modules/common/src/org/apache/axis2/i18n/resource.properties", "blob_url": "https://github.com/apache/axis2-java/blob/9d1003e0b860c6ed0f0db4c9c8eac954758e06e5/modules/common/src/org/apache/axis2/i18n/resource.properties", "sha": "829292a53744d915467cfa7bf6a1a5325680c2b0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/common/src/org/apache/axis2/i18n/resource.properties?ref=9d1003e0b860c6ed0f0db4c9c8eac954758e06e5", "patch": "@@ -26,7 +26,7 @@ nowhereToSendError=No where to send the error, the return response path is missi\n errorwhileProcessingFault=Error occured while processing fault, previous error is given in the stack trace\r\n unSupportedMEP=Unsupported MEP {0}\r\n mepClientSupportOnly=This MEP client supports only {0} , and Axis operations supplied supports {1}\r\n-inputstreamNull=Input stream is null while reading for incomming message\r\n+inputstreamNull=Input stream is null while reading for incoming message\r\n unknownTransport=Unknown transport {0}\r\n paramIsNotSpecified={0} parameter is not specified\r\n groovyNoanswer=No answer received from groovy side!!!!\r", "filename": "modules/common/src/org/apache/axis2/i18n/resource.properties"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/9d1003e0b860c6ed0f0db4c9c8eac954758e06e5/modules/core/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/9d1003e0b860c6ed0f0db4c9c8eac954758e06e5/modules/core/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java", "sha": "b481910ca7ce080934e39cff511a71d54eeda3eb", "changes": 27, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java?ref=9d1003e0b860c6ed0f0db4c9c8eac954758e06e5", "patch": "@@ -525,34 +525,23 @@ private void transportConfigurationPOST(\n         } else if (postMethod.getStatusCode() == HttpStatus.SC_ACCEPTED) {\n             return;\n         } else if (postMethod.getStatusCode() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {\n-\n             Header contenttypeHheader = postMethod.getResponseHeader(\n                     HTTPConstants.HEADER_CONTENT_TYPE);\n \n-            String value = contenttypeHheader.getValue();\n-            if (value != null) {\n+            if (contenttypeHheader != null) {\n+                String value = contenttypeHheader.getValue();\n                 if (value.indexOf(SOAP11Constants.SOAP_11_CONTENT_TYPE) >= 0 ||\n                         value.indexOf(SOAP12Constants.SOAP_12_CONTENT_TYPE) >= 0) {\n                     processResponse(postMethod, msgContext);\n-                } else {\n-                    /**\n-                     * if the content type is  text/html;charset=utf-8\n-                     */\n-                    throw new AxisFault(\n-                            Messages.getMessage(\n-                                    \"transportError\",\n-                                    String.valueOf(postMethod.getStatusCode()),\n-                                    postMethod.getResponseBodyAsString()));\n+                    return;\n                 }\n             }\n-        } else {\n-            throw new AxisFault(\n-                    Messages.getMessage(\n-                            \"transportError\",\n-                            String.valueOf(postMethod.getStatusCode()),\n-                            postMethod.getResponseBodyAsString()));\n         }\n-\n+        throw new AxisFault(\n+                Messages.getMessage(\n+                        \"transportError\",\n+                        String.valueOf(postMethod.getStatusCode()),\n+                        postMethod.getResponseBodyAsString()));\n     }\n \n     /**", "filename": "modules/core/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/85b9f4f5f5871e4ec0a7934e0329752f478efa85", "parent": "https://github.com/apache/axis2-java/commit/4b86d1f2da151bc849739204a182bde5c075ea49", "message": "- replace extract_service_archieve with extractServiceArchive\n- Prevent NPE when services directory is absent.\n- fix some typos\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@278604 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_129", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/DeploymentConstants.java", "blob_url": "https://github.com/apache/axis2-java/blob/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/DeploymentConstants.java", "sha": "124f828458583c5c2412d977d891a23e5ad5762e", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/DeploymentConstants.java?ref=85b9f4f5f5871e4ec0a7934e0329752f478efa85", "patch": "@@ -86,6 +86,7 @@\n \r\n     String HOTDEPLOYMENT = \"hotdeployment\";\r\n     String HOTUPDATE = \"hotupdate\";\r\n+    String EXTRACTSERVICEARCHIVE = \"extractServiceArchive\";\r\n \r\n     String AXIS_STORAGE = \"axisStorage\";\r\n \r", "filename": "modules/core/src/org/apache/axis2/deployment/DeploymentConstants.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/DeploymentEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/DeploymentEngine.java", "sha": "ae368f9ccd382a2ffe1c9abfb5c48c61ac2c3c9d", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/DeploymentEngine.java?ref=85b9f4f5f5871e4ec0a7934e0329752f478efa85", "patch": "@@ -178,7 +178,7 @@ private void setDeploymentFeatures() {\n         String value;\r\n         Parameter parahotdeployment = axisConfig.getParameter(HOTDEPLOYMENT);\r\n         Parameter parahotupdate = axisConfig.getParameter(HOTUPDATE);\r\n-        Parameter exatrctServiceArchive = axisConfig.getParameter(\"extract_service_archieve\");\r\n+        Parameter paraextractServiceArchive = axisConfig.getParameter(EXTRACTSERVICEARCHIVE);\r\n         if (parahotdeployment != null) {\r\n             value = (String) parahotdeployment.getValue();\r\n             if (\"false\".equalsIgnoreCase(value))\r\n@@ -189,8 +189,8 @@ private void setDeploymentFeatures() {\n             if (\"false\".equalsIgnoreCase(value))\r\n                 hotUpdate = false;\r\n         }\r\n-        if(exatrctServiceArchive != null){\r\n-            value = (String) exatrctServiceArchive.getValue();\r\n+        if(paraextractServiceArchive != null){\r\n+            value = (String) paraextractServiceArchive.getValue();\r\n             if (\"true\".equalsIgnoreCase(value))\r\n                 extractServiceArchive = true;\r\n         }\r", "filename": "modules/core/src/org/apache/axis2/deployment/DeploymentEngine.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/axis2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/axis2.xml", "sha": "dea210b3b805a7c97dc13afec1c736ed1ec4083d", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/axis2.xml?ref=85b9f4f5f5871e4ec0a7934e0329752f478efa85", "patch": "@@ -14,9 +14,9 @@\n \r\n \r\n     <!--if you want to extract the service archive file and work with that please uncomment this-->\r\n-    <!--else , it wont exatract archive file or does not take into consideration if someone drop-->\r\n+    <!--else , it wont extract archive file or does not take into consideration if someone drop-->\r\n     <!--exploded directory into /service directory-->\r\n-    <!--<parameter name=\"extract_service_archieve\" locked=\"false\">true</parameter>-->\r\n+    <!--<parameter name=\"extractServiceArchive\" locked=\"false\">true</parameter>-->\r\n \r\n \r\n <!--    The way of adding listener to the system-->\r", "filename": "modules/core/src/org/apache/axis2/deployment/axis2.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/85b9f4f5f5871e4ec0a7934e0329752f478efa85/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java", "sha": "f887b123a796efc32531f43b087fb37cc80f5da4", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java?ref=85b9f4f5f5871e4ec0a7934e0329752f478efa85", "patch": "@@ -182,7 +182,7 @@ private void searchExploedServies(String rootDirName){\n         ArrayList tobedelete = new ArrayList();\r\n         ArrayList tobeextarct = new ArrayList();\r\n         ArrayList allFiles = new ArrayList();\r\n-        for (int i = 0; i < fileList.length; i++) {\r\n+        for (int i = 0; fileList != null && i < fileList.length; i++) {\r\n             File file_first = fileList[i];\r\n             boolean isservice = ArchiveFileData.isServiceArchiveFile(file_first.getName());\r\n             boolean found = false;\r\n@@ -222,7 +222,7 @@ private void searchExploedServies(String rootDirName){\n             allFiles.add(outFile);\r\n         }\r\n \r\n-        for (int i = 0; i < fileList.length; i++) {\r\n+        for (int i = 0; fileList != null && i < fileList.length; i++) {\r\n             File file = fileList[i];\r\n             boolean found = false;\r\n             boolean todo = ArchiveFileData.isServiceArchiveFile(file.getName());\r", "filename": "modules/core/src/org/apache/axis2/deployment/listener/RepositoryListenerImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/34df299591662d0b995f1d622e7be61cce2d2fc7", "parent": "https://github.com/apache/axis2-java/commit/e6c43598188bdef01a2d05d2a406acfc8ed0dda3", "message": "- fixing a bug which causes a NPE when a wrong SOAP envelope is recd.\n- test case for that\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@264164 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_130", "file": [{"additions": 4, "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java", "sha": "c448e1e8163b02220e740ee57494feacaf7b5c4f", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7", "patch": "@@ -418,7 +418,10 @@ protected void processNamespaceData(OMElement node, boolean isSOAPElement) {\n             if (node.getNamespace() != null &&\r\n                     !node.getNamespace().getName().equals(SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI) &&\r\n                     !node.getNamespace().getName().equals(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI)) {\r\n-                throw new SOAPProcessingException(\"invalid SOAP namespace URI\", getSenderFaultCode());\r\n+                throw new SOAPProcessingException(\"invalid SOAP namespace URI. \" +\r\n+                        \"Only \" + SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI +\r\n+                        \" and \"+ SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI +\r\n+                        \" are supported.\", SOAP12Constants.FAULT_CODE_SENDER);\r\n             }\r\n         }\r\n \r", "filename": "modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java"}, {"additions": 12, "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml", "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml", "sha": "850ef8ab0446b39d8556ebd442681530f393e685", "changes": 12, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml?ref=34df299591662d0b995f1d622e7be61cce2d2fc7", "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\"?>\r\n+<soap:Envelope\r\n+xmlns:soap=\"http://www.w3.org/2001/12/soap-envelope\"\r\n+soap:encodingStyle=\"http://www.w3.org/2001/12/soap-encoding\">\r\n+\r\n+  <soap:Body xmlns:m=\"http://www.stock.org/stock\">\r\n+    <m:GetStockPrice>\r\n+      <m:StockName>IBM</m:StockName>\r\n+    </m:GetStockPrice>\r\n+  </soap:Body>\r\n+\r\n+</soap:Envelope>\n\\ No newline at end of file", "filename": "modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java", "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java", "sha": "d97e514b609e943759c235dd0c50488c2f079cc4", "changes": 11, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7", "patch": "@@ -16,8 +16,8 @@\n package org.apache.axis2.om.infoset;\n \n import org.apache.axis2.om.OMAbstractFactory;\n-import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMDocument;\n+import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.impl.OMOutputImpl;\n import org.apache.axis2.om.impl.llom.builder.StAXOMBuilder;\n import org.apache.axis2.om.impl.llom.factory.OMXMLBuilderFactory;\n@@ -34,13 +34,7 @@\n import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLOutputFactory;\n import javax.xml.stream.XMLStreamWriter;\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n+import java.io.*;\n \n public class XMLConformanceUnit extends XMLTestCase implements EntityResolver {\n \n@@ -59,6 +53,7 @@ public void testSingleFileConformance()\n \n         System.out.println(\"XML File:\" + filePath);\n         XMLInputFactory factory = XMLInputFactory.newInstance();\n+//        factory.setProperty(\"report-cdata-event\", Boolean.TRUE);\n         StAXOMBuilder staxOMBuilder = OMXMLBuilderFactory.\n                 createStAXOMBuilder(OMAbstractFactory.getOMFactory(),\n                         factory.createXMLStreamReader(", "filename": "modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java"}, {"additions": 53, "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java", "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java", "sha": "f668d9537cb715096a43f67e6254979c71bd337d", "changes": 53, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7", "patch": "@@ -0,0 +1,53 @@\n+package org.apache.axis2.soap;\r\n+\r\n+import junit.framework.TestCase;\r\n+import org.apache.axis2.om.impl.llom.builder.StAXBuilder;\r\n+import org.apache.axis2.soap.impl.llom.SOAPProcessingException;\r\n+import org.apache.axis2.soap.impl.llom.builder.StAXSOAPModelBuilder;\r\n+\r\n+import javax.xml.stream.XMLInputFactory;\r\n+import javax.xml.stream.XMLStreamReader;\r\n+import java.io.FileInputStream;\r\n+import java.io.FileNotFoundException;\r\n+\r\n+/*\r\n+ * Copyright 2001-2004 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ *\r\n+ * @author : Eran Chinthaka (chinthaka@apache.org)\r\n+ */\r\n+\r\n+public class WrongEnvelopeNamespaceTester extends TestCase {\r\n+    public void testCode() {\r\n+        try {\r\n+            String filename = \"test-resources/soap/wrongEnvelopeNamespace.xml\";\r\n+            XMLStreamReader xmlr = XMLInputFactory.newInstance()\r\n+                    .createXMLStreamReader(new FileInputStream(filename));\r\n+            StAXBuilder builder = new StAXSOAPModelBuilder(xmlr, null); //exception here\r\n+            fail(\"Builder must fail here due to wrong SOAP namespace\");\r\n+        } catch (SOAPProcessingException e) {\r\n+            assertTrue(true);\r\n+        } catch (FileNotFoundException e) {\r\n+            fail(\"Only SOAPProcessingException can be thrown here\");\r\n+        }catch (Exception e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Only SOAPProcessingException can be thrown here\");\r\n+        }\r\n+    }\r\n+\r\n+    public static void main(String[] args) {\r\n+        WrongEnvelopeNamespaceTester tester = new WrongEnvelopeNamespaceTester();\r\n+        tester.testCode();\r\n+    }\r\n+}\r", "filename": "modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/db456c67bbbffe6e71bcf03e7360e1ced4f85947", "parent": "https://github.com/apache/axis2-java/commit/6943149cb1b46b44673305188823d109d593a16a", "message": "revert the chanegs to the AxisServlet (.. sorry I am responsible for the NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@220110 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_131", "file": [{"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/db456c67bbbffe6e71bcf03e7360e1ced4f85947/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java", "blob_url": "https://github.com/apache/axis2-java/blob/db456c67bbbffe6e71bcf03e7360e1ced4f85947/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java", "sha": "9324001ec20638eaf3f63c5e7dea98ecfd2422a7", "changes": 11, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java?ref=db456c67bbbffe6e71bcf03e7360e1ced4f85947", "patch": "@@ -43,6 +43,7 @@\n public class AxisServlet extends HttpServlet {\r\n     private ListingAgent lister;\r\n     private static final String CONFIGURATION_CONTEXT = \"CONFIGURATION_CONTEXT\";\r\n+    private ConfigurationContext configContext;\r\n \r\n     /**\r\n      * Method init\r\n@@ -56,7 +57,7 @@ public void init(ServletConfig config) throws ServletException {\n             String repoDir = context.getRealPath(\"/WEB-INF\");\r\n             ConfigurationContextFactory erfac =\r\n                 new ConfigurationContextFactory();\r\n-            ConfigurationContext configContext =\r\n+            configContext =\r\n                 erfac.buildConfigurationContext(repoDir);\r\n             configContext.setProperty(\r\n                 Constants.CONTAINER_MANAGED,\r\n@@ -81,11 +82,6 @@ protected void doGet(\n         HttpServletRequest httpServletRequest,\r\n         HttpServletResponse httpServletResponse)\r\n         throws ServletException, IOException {\r\n-\r\n-        ConfigurationContext configContext =\r\n-            (ConfigurationContext) getServletContext().getAttribute(\r\n-                CONFIGURATION_CONTEXT);\r\n-\r\n         httpServletResponse.setContentType(\"text/xml; charset=utf-8\");\r\n         MessageContext msgContext = null;\r\n         OutputStream out = null;\r\n@@ -168,9 +164,6 @@ protected void doGet(\n     protected void doPost(HttpServletRequest req, HttpServletResponse res)\r\n         throws ServletException, IOException {\r\n         MessageContext msgContext = null;\r\n-        ConfigurationContext configContext =\r\n-            (ConfigurationContext) getServletContext().getAttribute(\r\n-                CONFIGURATION_CONTEXT);\r\n         try {\r\n             Object sessionContext =\r\n                 req.getSession().getAttribute(\r", "filename": "modules/core/src/org/apache/axis2/transport/http/AxisServlet.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/7112bca321785a25278688df2fa26c5f083643e3", "parent": "https://github.com/apache/axis2-java/commit/89144bcdcb05709a73ebcaf8d0848210a3d6aaa1", "message": "Need to check whether the classloader of a particular service group or module is null before adding it to the ConcurrentHashMap to avoid an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1292648 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_132", "file": [{"additions": 16, "raw_url": "https://github.com/apache/axis2-java/raw/7112bca321785a25278688df2fa26c5f083643e3/modules/clustering/src/org/apache/axis2/clustering/tribes/ClassLoaderUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/7112bca321785a25278688df2fa26c5f083643e3/modules/clustering/src/org/apache/axis2/clustering/tribes/ClassLoaderUtil.java", "sha": "25822d9631c53b9148d88108241ad20af0ef59a1", "changes": 22, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/clustering/tribes/ClassLoaderUtil.java?ref=7112bca321785a25278688df2fa26c5f083643e3", "patch": "@@ -38,17 +38,25 @@ public static void init(AxisConfiguration configuration) {\n         classLoaders.put(\"axis2\", ClassLoaderUtil.class.getClassLoader());\n         for (Iterator iter = configuration.getServiceGroups(); iter.hasNext(); ) {\n             AxisServiceGroup group = (AxisServiceGroup) iter.next();\n-            classLoaders.put(getServiceGroupMapKey(group), group.getServiceGroupClassLoader());\n+            ClassLoader serviceGroupClassLoader = group.getServiceGroupClassLoader();\n+            if (serviceGroupClassLoader != null) {\n+                classLoaders.put(getServiceGroupMapKey(group), serviceGroupClassLoader);\n+            }\n         }\n         for (Object obj : configuration.getModules().values()) {\n             AxisModule module = (AxisModule) obj;\n-            classLoaders.put(getModuleMapKey(module), module.getModuleClassLoader());\n+            ClassLoader moduleClassLoader = module.getModuleClassLoader();\n+            if (moduleClassLoader != null) {\n+                classLoaders.put(getModuleMapKey(module), moduleClassLoader);\n+            }\n         }\n     }\n \n     public static void addServiceGroupClassLoader(AxisServiceGroup serviceGroup) {\n-        classLoaders.put(getServiceGroupMapKey(serviceGroup),\n-                         serviceGroup.getServiceGroupClassLoader());\n+        ClassLoader serviceGroupClassLoader = serviceGroup.getServiceGroupClassLoader();\n+        if (serviceGroupClassLoader != null) {\n+            classLoaders.put(getServiceGroupMapKey(serviceGroup), serviceGroupClassLoader);\n+        }\n     }\n \n     public static void removeServiceGroupClassLoader(AxisServiceGroup serviceGroup) {\n@@ -60,8 +68,10 @@ private static String getServiceGroupMapKey(AxisServiceGroup serviceGroup) {\n     }\n \n     public static void addModuleClassLoader(AxisModule module) {\n-        classLoaders.put(getModuleMapKey(module),\n-                         module.getModuleClassLoader());\n+        ClassLoader moduleClassLoader = module.getModuleClassLoader();\n+        if (moduleClassLoader != null) {\n+            classLoaders.put(getModuleMapKey(module), moduleClassLoader);\n+        }\n     }\n \n     public static void removeModuleClassLoader(AxisModule axisModule) {", "filename": "modules/clustering/src/org/apache/axis2/clustering/tribes/ClassLoaderUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2af5fa26b8cc93b79f752e097aa516e5b5c06828", "parent": "https://github.com/apache/axis2-java/commit/2070cf238a17def2e98d60640234fbe6b25b5637", "message": "The configContext may not be set in all cases, hence was throwing an NPE. Now we are storing the DEPLOYMENT_TASK_RUNNING parameter in the AxisConfig\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1051503 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_133", "file": [{"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/2af5fa26b8cc93b79f752e097aa516e5b5c06828/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/2af5fa26b8cc93b79f752e097aa516e5b5c06828/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java", "sha": "6b55fbaf1e33fbfa5aa850491bfaad160c66e883", "changes": 13, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java?ref=2af5fa26b8cc93b79f752e097aa516e5b5c06828", "patch": "@@ -876,7 +876,7 @@ public AxisConfiguration populateAxisConfiguration(InputStream in) throws Deploy\n     protected void startSearch(RepositoryListener listener) {\n         scheduler = new Scheduler();\n \n-        schedulerTask = new SchedulerTask(listener, configContext);\n+        schedulerTask = new SchedulerTask(listener, axisConfig);\n         scheduler.schedule(schedulerTask, new DeploymentIterator());\n     }\n \n@@ -887,9 +887,14 @@ protected void startSearch(RepositoryListener listener) {\n      * @return true - if the deployment task is running, false - otherwise\n      */\n     public boolean isDeploymentTaskRunning() {\n-        Boolean deploymentTaskRunning =\n-                (Boolean)configContext.getProperty(DeploymentEngine.DEPLOYMENT_TASK_RUNNING);\n-        return deploymentTaskRunning != null && deploymentTaskRunning;\n+        synchronized (axisConfig) {\n+            Parameter deploymentTaskRunningParam =\n+                    axisConfig.getParameter(DeploymentEngine.DEPLOYMENT_TASK_RUNNING);\n+            if (deploymentTaskRunningParam != null) {\n+                return (Boolean) deploymentTaskRunningParam.getValue();\n+            }\n+            return false;\n+        }\n     }\n \n     public synchronized void unDeploy() {", "filename": "modules/kernel/src/org/apache/axis2/deployment/DeploymentEngine.java"}, {"additions": 22, "raw_url": "https://github.com/apache/axis2-java/raw/2af5fa26b8cc93b79f752e097aa516e5b5c06828/modules/kernel/src/org/apache/axis2/deployment/scheduler/SchedulerTask.java", "blob_url": "https://github.com/apache/axis2-java/blob/2af5fa26b8cc93b79f752e097aa516e5b5c06828/modules/kernel/src/org/apache/axis2/deployment/scheduler/SchedulerTask.java", "sha": "a73455eb9e30840ad728007a221839eef4586b80", "changes": 29, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/scheduler/SchedulerTask.java?ref=2af5fa26b8cc93b79f752e097aa516e5b5c06828", "patch": "@@ -20,9 +20,12 @@\n \n package org.apache.axis2.deployment.scheduler;\n \n+import org.apache.axis2.AxisFault;\n import org.apache.axis2.context.ConfigurationContext;\n import org.apache.axis2.deployment.DeploymentEngine;\n import org.apache.axis2.deployment.RepositoryListener;\n+import org.apache.axis2.description.Parameter;\n+import org.apache.axis2.engine.AxisConfiguration;\n \n import java.util.TimerTask;\n \n@@ -33,14 +36,16 @@\n     int state = 0;\n     TimerTask timerTask;\n     private RepositoryListener wsListener;\n-    private ConfigurationContext configCtx;\n+    private AxisConfiguration axisConfig;\n+    private static final Parameter DEPLOYMENT_TASK_STATUS_PARAM =\n+            new Parameter(DeploymentEngine.DEPLOYMENT_TASK_RUNNING, Boolean.FALSE);\n \n     /**\n      * Creates a new scheduler task.\n      */\n-    public SchedulerTask(RepositoryListener listener, ConfigurationContext configCtx) {\n+    public SchedulerTask(RepositoryListener listener, AxisConfiguration axisConfig) {\n         this.wsListener = listener;\n-        this.configCtx = configCtx;\n+        this.axisConfig = axisConfig;\n     }\n \n     /**\n@@ -72,13 +77,23 @@ private void checkRepository() {\n      * The action to be performed by this scheduler task.\n      */\n     public void run() {\n-        synchronized (configCtx) {\n+        synchronized (axisConfig) {\n+            Parameter param =\n+                    axisConfig.getParameter(DeploymentEngine.DEPLOYMENT_TASK_RUNNING);\n+            if (param == null) {\n+                try {\n+                    axisConfig.addParameter(DEPLOYMENT_TASK_STATUS_PARAM);\n+                } catch (AxisFault e) {\n+                    // this is thrown only if the parameter is locked. Since we are sure that this\n+                    // param will not be locked, we will ignore this\n+                }\n+            }\n+\n             try {\n-                configCtx.setNonReplicableProperty(DeploymentEngine.DEPLOYMENT_TASK_RUNNING,\n-                                                   Boolean.TRUE);\n+                DEPLOYMENT_TASK_STATUS_PARAM.setValue(Boolean.TRUE);\n                 checkRepository();\n             } finally {\n-                configCtx.removePropertyNonReplicable(DeploymentEngine.DEPLOYMENT_TASK_RUNNING);\n+                DEPLOYMENT_TASK_STATUS_PARAM.setValue(Boolean.FALSE);\n             }\n         }\n     }", "filename": "modules/kernel/src/org/apache/axis2/deployment/scheduler/SchedulerTask.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/7a183273a0678ba9185c0916623fc8e3edf54e40", "parent": "https://github.com/apache/axis2-java/commit/9af08cbb5853c2f22e7df38a8bc5c77d87a344af", "message": "AXIS2-4839\nContributor: Brian De Pradine\nCommitter: Rich Scheuerle\n\nI changed Brian's commit slightly to remove the possibility of an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1005887 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_134", "file": [{"additions": 11, "raw_url": "https://github.com/apache/axis2-java/raw/7a183273a0678ba9185c0916623fc8e3edf54e40/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/7a183273a0678ba9185c0916623fc8e3edf54e40/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java", "sha": "aaeeaa6c71561f06ee1995f08be442184f490ecf", "changes": 19, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java?ref=7a183273a0678ba9185c0916623fc8e3edf54e40", "patch": "@@ -534,6 +534,10 @@ private void setFaultActions(AxisOperation newAxisOperation,\n                     log.debug(\"Default faultAction = \"+faultAction);\n                 }\n                 \n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Default faultAction = \"+faultAction);\n+                }\n+                \n                 newAxisOperation.addFaultAction(faultDesc.getExceptionClassName(),  faultAction);\n                 newAxisOperation.setFaultMessages(faultMessage);\n             }\n@@ -563,19 +567,18 @@ else if(faultAction.className() != null) {\n                     }\n                     FaultDescription faultDesc = resolveFaultByExceptionName(className);\n                     if (faultDesc != null)  {\n-                        \n                         String faultActionString = faultAction.value();\n                         if (log.isDebugEnabled()) {\n-                            log.debug(\"SANDERKA: faultAction value = \"+faultActionString);\n+                            log.debug(\"faultAction value = \"+faultActionString);\n                         }\n-                        \n-                        if (faultActionString.equals(\"\")) {\n+\n+                        if (faultActionString == null || faultActionString.equals(\"\")) {\n                             faultActionString = \n                                 WSDL11ActionHelper.getFaultActionFromStringInformation( targetNS, \n-                                                portTypeName, \n-                                                operationName, \n-                                                className.substring((className.lastIndexOf('.'))+1));\n-                            \n+                                        portTypeName, \n+                                        operationName, \n+                                        className.substring((className.lastIndexOf('.'))+1));\n+\n                             if (log.isDebugEnabled()) {\n                                 log.debug(\"New faultAction value = \"+faultActionString);\n                             }", "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/5d86a907baf20b1116a3c155970a43b501ab225a", "parent": "https://github.com/apache/axis2-java/commit/c1cb1652d6b840f75c71d02739bc1492cd27cb44", "message": "It is possible to deply services without a version in axis2. therefore Version instance can be null in this method. Fixing a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@918401 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_135", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/5d86a907baf20b1116a3c155970a43b501ab225a/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java", "blob_url": "https://github.com/apache/axis2-java/blob/5d86a907baf20b1116a3c155970a43b501ab225a/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java", "sha": "4c306f80fd57c3c287f180f57c9be04b20e8ab63", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java?ref=5d86a907baf20b1116a3c155970a43b501ab225a", "patch": "@@ -294,7 +294,11 @@ public void removeModule(String moduleName, String moduleVersion) {\n      * @param moduleVersion the version of the module to remove\n      */\n     public void removeModule(String moduleName, Version moduleVersion) {\n-        removeModule(moduleName, moduleVersion.toString());\n+        String version = null;\n+        if (moduleVersion != null) {\n+            version = moduleVersion.toString();\n+        }\n+        removeModule(moduleName, version);\n     }\n \n     /**", "filename": "modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2efb7eebd82e3a053dda4ddcf08474ea3cf46316", "parent": "https://github.com/apache/axis2-java/commit/ac00092cea08112a671bb853d3402c8dde4f84f0", "message": "Don't NPE if the transport headers collection contains a null value.  Add test for same.\n\nAlso, turn off debug when running JAXWS tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@817877 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_136", "file": [{"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java", "sha": "f25dbd2f10f9b2ec666af7b89b02e82563ebbfdc", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316", "patch": "@@ -223,7 +223,14 @@ public SOAPMessage getAsSOAPMessage() throws WebServiceException {\n                 while (it.hasNext()) {\n                     Map.Entry entry = (Map.Entry) it.next();\n                     String key = (String) entry.getKey();\n-                    if (entry.getValue() instanceof String) {\n+                    if (entry.getValue() == null) {\n+                        // This is not necessarily a problem; log it and make sure not to NPE\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"  Not added to transport header. header =\" + key + \n+                                      \" because value is null;\");\n+                        }\n+                    }\n+                    else if (entry.getValue() instanceof String) {\n                         // Normally there is one value per key\n                         if (log.isDebugEnabled()) {\n                             log.debug(\"  add transport header. header =\" + key + ", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test-resources/log4j.properties", "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test-resources/log4j.properties", "sha": "77247629490d248f6de58a5d8b13bd2f4a04126f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test-resources/log4j.properties?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316", "patch": "@@ -28,7 +28,7 @@ log4j.rootCategory=ERROR, CONSOLE\n # The example below adds debug trace for StAXUtils or jaxws server to \r\n # the axis2.small.log.\r\n # You can add this without changing the root category.\r\n-log4j.category.org.apache.axis2.jaxws.message=DEBUG, SMALL\r\n+#log4j.category.org.apache.axis2.jaxws.message=DEBUG, SMALL\r\n \r\n # Enable the following to get JAXWS TestLogger trace.\r\n #log4j.category.JAXWS-Tests=DEBUG, SMALL\r", "filename": "modules/jaxws/test-resources/log4j.properties"}, {"additions": 60, "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java", "sha": "f3f170d0362085f83a55720837f3b05720c2c91c", "changes": 60, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316", "patch": "@@ -0,0 +1,60 @@\n+package org.apache.axis2.jaxws.message.impl;\r\n+\r\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements. See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership. The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License. You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied. See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+\r\n+import org.apache.axis2.jaxws.message.Message;\r\n+import org.apache.axis2.jaxws.message.Protocol;\r\n+\r\n+import javax.xml.stream.XMLStreamException;\r\n+import javax.xml.ws.WebServiceException;\r\n+\r\n+import java.util.HashMap;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+/**\r\n+ * Test some low-level specifics of the MessageImpl class.  Note that this is testing specific \r\n+ * low level methods and IS NOT representative of the way MessageImpl should be used.  \r\n+ * The MessageFactory should be used to create MessageImpl instances. \r\n+ */\r\n+public class MessageImplTest extends TestCase {\r\n+\r\n+    /**\r\n+     * Verify that if the TransportHeaders Map contains keys with null values that it doesn't\r\n+     * cause any problems in the getAsSOAPMessage() method.  \r\n+     */\r\n+    public void testGetAsSOAPMessageTransportHeadersWithNullValues() {\r\n+        try {\r\n+            Message msg = new MessageImpl(Protocol.soap11);\r\n+            HashMap map = new HashMap();\r\n+            map.put(\"key1\", null);\r\n+            map.put(\"key2\", null);\r\n+            msg.setMimeHeaders(map);\r\n+            msg.getAsSOAPMessage();\r\n+        } catch (WebServiceException e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Caught unexpected exception \" + e.toString());\r\n+        } catch (XMLStreamException e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Caught unexpected exception \" + e.toString());\r\n+        }\r\n+    }\r\n+\r\n+}\r", "filename": "modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2ea06f3797213ffa5630f9c54592994778ceea0f", "parent": "https://github.com/apache/axis2-java/commit/34da0edfd72a563b94c72e289009cdca5c50a799", "message": "Adding synchronize to writeExternal.  \nThe logic in writeExternal causes om elements to be added to a temporary omtree for serialization.  \nWithout the synchronization, these common om elements can be queried/added by multiple threads....which results\nin spurious NPE's in Axiom.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@675676 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_137", "file": [{"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/2ea06f3797213ffa5630f9c54592994778ceea0f/modules/kernel/src/org/apache/axis2/addressing/EndpointReference.java", "blob_url": "https://github.com/apache/axis2-java/blob/2ea06f3797213ffa5630f9c54592994778ceea0f/modules/kernel/src/org/apache/axis2/addressing/EndpointReference.java", "sha": "0efa1a114cada2162a3b51804dd869fea467e561", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/addressing/EndpointReference.java?ref=2ea06f3797213ffa5630f9c54592994778ceea0f", "patch": "@@ -631,7 +631,7 @@ public boolean isEquivalent(EndpointReference epr) {\n      * OMElements/Attributes, we need to actually serialize the OM structures\n      * (at least in some cases.)\n      */\n-    public void writeExternal(java.io.ObjectOutput o)\n+    public synchronized void writeExternal(java.io.ObjectOutput o)\n             throws IOException {\n         SafeObjectOutputStream out = SafeObjectOutputStream.install(o);\n         ", "filename": "modules/kernel/src/org/apache/axis2/addressing/EndpointReference.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/5151e4e1791c718614bd18ffe961ab3f13bef76e", "parent": "https://github.com/apache/axis2-java/commit/e95ff3db8bffb2cc359b9e6e59b5b5a3908108f2", "message": "Quick fix to avoid NPE.\n\nIf the namespace is not available, then this is an unqualified element and may not have an OMNamespaceImpl.\nIn such cases, the operation lookup strategy should be used.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@636127 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_138", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java", "sha": "0c75700b47ced07f0b6e9d7412db1b8640308f28", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java?ref=5151e4e1791c718614bd18ffe961ab3f13bef76e", "patch": "@@ -57,8 +57,11 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n         AxisOperation axisOperation = null;\n         if (localName != null){\n            OMNamespace ns = messageContext.getEnvelope().getSOAPBodyFirstElementNS();\n-           QName qName = new QName(ns.getNamespaceURI(), localName);\n-           axisOperation = service.getOperationByMessageElementQName(qName);\n+           QName qName = null;\n+           if (ns != null) {\n+               qName = new QName(ns.getNamespaceURI(), localName);\n+               axisOperation = service.getOperationByMessageElementQName(qName);\n+           }\n \n            // this is required for services uses the RPC message receiver\n            if (axisOperation == null){", "filename": "modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java"}, {"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java", "blob_url": "https://github.com/apache/axis2-java/blob/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java", "sha": "d764e52fb2fc84a880b95d0aa0d7d8a5935cb9b8", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java?ref=5151e4e1791c718614bd18ffe961ab3f13bef76e", "patch": "@@ -52,9 +52,12 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n \n         if (axisOperation == null) {\n             OMNamespace ns = messageContext.getEnvelope().getSOAPBodyFirstElementNS();\n-            QName qName = new QName(ns.getNamespaceURI(), localPart);\n-            axisOperation = service.getOperationByMessageElementQName(qName);\n+            if (ns != null) {\n+                QName qName = new QName(ns.getNamespaceURI(), localPart);\n+                axisOperation = service.getOperationByMessageElementQName(qName);\n+            }\n             if (axisOperation == null) {\n+                QName qName = new QName(localPart);\n                 axisOperation = service.getOperation(qName);\n             }\n         }", "filename": "modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2cbdd95afba0f55f3f2ecf5ea08f0ba987463416", "parent": "https://github.com/apache/axis2-java/commit/e848f743aa3b2e342ca7daa811fce84588c47ea7", "message": "Fix for AXIS2-3382 - NPE throws when invoking jax-ws calculator sample service. (Added a HACK to support the old use case of specifying a services.xml with JAXWSMessageReceiver)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@635068 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_139", "file": [{"additions": 31, "raw_url": "https://github.com/apache/axis2-java/raw/2cbdd95afba0f55f3f2ecf5ea08f0ba987463416/modules/jaxws/src/org/apache/axis2/jaxws/server/JAXWSMessageReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/2cbdd95afba0f55f3f2ecf5ea08f0ba987463416/modules/jaxws/src/org/apache/axis2/jaxws/server/JAXWSMessageReceiver.java", "sha": "79edb990b6e3a66ad9e8458c19ce85440cc55490", "changes": 41, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/server/JAXWSMessageReceiver.java?ref=2cbdd95afba0f55f3f2ecf5ea08f0ba987463416", "patch": "@@ -19,20 +19,21 @@\n \n package org.apache.axis2.jaxws.server;\n \n-import javax.xml.ws.Binding;\n-import javax.xml.ws.WebServiceException;\n-\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.addressing.AddressingConstants;\n import org.apache.axis2.context.OperationContext;\n import org.apache.axis2.description.AxisOperation;\n import org.apache.axis2.description.AxisService;\n+import org.apache.axis2.description.Parameter;\n import org.apache.axis2.description.WSDL2Constants;\n import org.apache.axis2.engine.AxisEngine;\n import org.apache.axis2.engine.MessageReceiver;\n import org.apache.axis2.jaxws.ExceptionFactory;\n import org.apache.axis2.jaxws.core.InvocationContextFactory;\n import org.apache.axis2.jaxws.core.MessageContext;\n+import org.apache.axis2.jaxws.description.DescriptionFactory;\n+import org.apache.axis2.jaxws.description.EndpointDescription;\n+import org.apache.axis2.jaxws.description.ServiceDescription;\n import org.apache.axis2.jaxws.handler.AttachmentsAdapter;\n import org.apache.axis2.jaxws.handler.MEPContext;\n import org.apache.axis2.jaxws.handler.TransportHeadersAdapter;\n@@ -47,6 +48,9 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import javax.xml.ws.Binding;\n+import javax.xml.ws.WebServiceException;\n+\n /**\n  * The JAXWSMessageReceiver is the entry point, from the server's perspective, to the JAX-WS code.\n  * This will be called by the Axis Engine and is the end of the chain from an Axis2 perspective.\n@@ -73,21 +77,38 @@ public void receive(org.apache.axis2.context.MessageContext axisRequestMsgCtx)\n         //Get the name of the service impl that was stored as a parameter\n         // inside of the services.xml.\n         AxisService service = axisRequestMsgCtx.getAxisService();\n+        \n+        org.apache.axis2.description.Parameter svcClassParam =\n+                service.getParameter(PARAM_SERVICE_CLASS);\n+\n+        if (svcClassParam == null) {\n+            throw new RuntimeException(\n+                    Messages.getMessage(\"JAXWSMessageReceiverNoServiceClass\"));\n+        }\n+\n+        Parameter endpointDescParam =\n+                service.getParameter(EndpointDescription.AXIS_SERVICE_PARAMETER);\n+        if (endpointDescParam == null) {\n+            ClassLoader serviceClassLoader = service.getClassLoader();\n+            String serviceClass = (String) svcClassParam.getValue();\n+            try {\n+                Class clazz = Class.forName(serviceClass, true, service.getClassLoader());\n+                ServiceDescription serviceDesc =\n+                        DescriptionFactory.createServiceDescriptionFromServiceImpl(\n+                                clazz, service);\n+            } catch (ClassNotFoundException e) {\n+                throw new RuntimeException(\n+                        Messages.getMessage(\"JAXWSMessageReceiverNoServiceClass\"));\n+            }\n+        }\n         AxisOperation operation = axisRequestMsgCtx.getAxisOperation();\n         String mep = operation.getMessageExchangePattern();\n         if (log.isDebugEnabled()) {\n             log.debug(\"MEP: \" + mep);\n         }\n \n-        org.apache.axis2.description.Parameter svcClassParam =\n-                service.getParameter(PARAM_SERVICE_CLASS);\n         try {\n \n-            if (svcClassParam == null) {\n-                throw new RuntimeException(\n-                        Messages.getMessage(\"JAXWSMessageReceiverNoServiceClass\"));\n-            }\n-\n             //This assumes that we are on the ultimate execution thread\n             ThreadContextMigratorUtil.performMigrationToThread(\n                     Constants.THREAD_CONTEXT_MIGRATOR_LIST_ID, axisRequestMsgCtx);", "filename": "modules/jaxws/src/org/apache/axis2/jaxws/server/JAXWSMessageReceiver.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/d32707ce694291465d87a4c24c78666384120fa7", "parent": "https://github.com/apache/axis2-java/commit/b5383ace4d077b5be129c95395e315ca23a4122a", "message": "we need another method in ConfigurationContextFactory that actually picks up the default axis2.xml and processes it. Prevent NPE in MessageContext Builder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@496437 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_140", "file": [{"additions": 21, "raw_url": "https://github.com/apache/axis2-java/raw/d32707ce694291465d87a4c24c78666384120fa7/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java", "blob_url": "https://github.com/apache/axis2-java/blob/d32707ce694291465d87a4c24c78666384120fa7/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java", "sha": "269458b6107669e921668f04176ba96c297be7a5", "changes": 26, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java?ref=d32707ce694291465d87a4c24c78666384120fa7", "patch": "@@ -18,10 +18,7 @@\n \n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.deployment.DeploymentEngine;\n-import org.apache.axis2.deployment.DeploymentException;\n-import org.apache.axis2.deployment.FileSystemConfigurator;\n-import org.apache.axis2.deployment.URLBasedAxisConfigurator;\n+import org.apache.axis2.deployment.*;\n import org.apache.axis2.deployment.util.Utils;\n import org.apache.axis2.description.AxisModule;\n import org.apache.axis2.description.AxisServiceGroup;\n@@ -41,6 +38,10 @@\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Iterator;\n+import java.io.InputStream;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n \n public class ConfigurationContextFactory {\n \n@@ -251,11 +252,26 @@ public static void initTransportSenders(ConfigurationContext configContext) {\n     }\n \n     /**\n-     * Gets the default configuration context by using the file system based AxisConfiguration.\n+     * creates an empty configuration context.\n      *\n      * @return Returns ConfigurationContext.\n      */\n     public static ConfigurationContext createEmptyConfigurationContext() {\n         return new ConfigurationContext(new AxisConfiguration());\n     }\n+\n+    /**\n+     * Gets the default configuration context by using Axis2.xml in the classpath\n+     *\n+     * @return Returns ConfigurationContext.\n+     */\n+    public static ConfigurationContext createDefaultConfigurationContext() throws Exception {\n+        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n+        InputStream in = cl.getResourceAsStream(DeploymentConstants.AXIS2_CONFIGURATION_RESOURCE);\n+\n+        AxisConfiguration axisConfig = new AxisConfiguration();\n+        AxisConfigBuilder builder = new AxisConfigBuilder(in, axisConfig);\n+        builder.populateConfig();\n+        return new ConfigurationContext(axisConfig);\n+    }\n }", "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/d32707ce694291465d87a4c24c78666384120fa7/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/d32707ce694291465d87a4c24c78666384120fa7/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java", "sha": "c28092b40bcc6c59e6ec808281639d80e67a54a6", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java?ref=d32707ce694291465d87a4c24c78666384120fa7", "patch": "@@ -426,7 +426,9 @@ private static SOAPEnvelope createFaultEnvelope(MessageContext context, Throwabl\n             sendStacktraceDetailsWithFaults = JavaUtils.isTrue(flagFromContext);\n         }else{\n             Parameter param = context.getParameter(Constants.Configuration.SEND_STACKTRACE_DETAILS_WITH_FAULTS);\n-            sendStacktraceDetailsWithFaults = JavaUtils.isTrue(param.getValue());    \n+            if(param != null) {\n+                sendStacktraceDetailsWithFaults = JavaUtils.isTrue(param.getValue());    \n+            }\n         }\n \n         Object faultDetail = context.getProperty(SOAP12Constants.SOAP_FAULT_DETAIL_LOCAL_NAME);", "filename": "modules/kernel/src/org/apache/axis2/util/MessageContextBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/e0979a09ba93cbb2fa261f94a9112d9eff47234f", "parent": "https://github.com/apache/axis2-java/commit/7bef7f94834e739142abece920744f3ebf8502fd", "message": "- Prevent NPE if types section is missing\n- if getElementName is null try getTypeName \n- if the service section is missing, pick the first binding and make up a name for the service as well\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@438600 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_141", "file": [{"additions": 56, "raw_url": "https://github.com/apache/axis2-java/raw/e0979a09ba93cbb2fa261f94a9112d9eff47234f/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "blob_url": "https://github.com/apache/axis2-java/blob/e0979a09ba93cbb2fa261f94a9112d9eff47234f/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java", "sha": "f4fa2e278a2cc4ca85883d8e129f45cb5d617425", "changes": 99, "status": "modified", "deletions": 43, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java?ref=e0979a09ba93cbb2fa261f94a9112d9eff47234f", "patch": "@@ -305,7 +305,7 @@ private Map populateSchemaMap(Types wsdl4jTypes) {\n      */\n     private Binding findBinding(Definition dif) throws AxisFault {\n         Map services = dif.getServices();\n-        Service service;\n+        Service service = null;\n         Binding binding = null;\n         Port port = null;\n         if (serviceName != null) {\n@@ -318,39 +318,48 @@ private Binding findBinding(Definition dif) throws AxisFault {\n             if (services.size() > 0) {\n                 //pick the first service - we don't really have a choice here\n                 service = (Service) services.values().toArray()[0];\n+            } \n+        }\n+        if (service != null) {\n+            copyExtensibleElements(service.getExtensibilityElements(), dif,\n+                    axisService, SERVICE);\n+            if (portName != null) {\n+                port = service.getPort(portName);\n+                if (port == null) {\n+                    throw new AxisFault(\"No port found for the given name :\"\n+                            + portName);\n+                }\n             } else {\n-                throw new AxisFault(\"No service element found in the WSDL\");\n+                Map ports = service.getPorts();\n+                if (ports != null && ports.size() > 0) {\n+                    //pick the port with the SOAP address as the default port\n+                    port = findSOAPPort(ports);\n+                    if (port == null) {\n+                        //a SOAP port was not found - log a warning\n+                        // and use the first port in the list\n+                        log.info(\"A SOAP port was not found - \" +\n+                                \"picking a random port!\");\n+                        port = (Port) ports.values().toArray()[0];\n+                    }\n+                }\n             }\n-        }\n-        copyExtensibleElements(service.getExtensibilityElements(), dif,\n-                axisService, SERVICE);\n-        if (portName != null) {\n-            port = service.getPort(portName);\n-            if (port == null) {\n-                throw new AxisFault(\"No port found for the given name :\"\n-                        + portName);\n+    \n+            axisService.setName(service.getQName().getLocalPart());\n+    \n+            if (port != null) {\n+                copyExtensibleElements(port.getExtensibilityElements(), dif,\n+                        axisService, PORT);\n+                binding = port.getBinding();\n             }\n         } else {\n-            Map ports = service.getPorts();\n-            if (ports != null && ports.size() > 0) {\n-                //pick the port with the SOAP address as the default port\n-                port = findSOAPPort(ports);\n-                if (port == null) {\n-                    //a SOAP port was not found - log a warning\n-                    // and use the first port in the list\n-                    log.info(\"A SOAP port was not found - \" +\n-                            \"picking a random port!\");\n-                    port = (Port) ports.values().toArray()[0];\n-                }\n+            log.info(\"A service element was not found - \" +\n+                    \"picking a random binding!\");\n+            Collection bindings = dif.getBindings().values();\n+            if (bindings == null || bindings.isEmpty()) {\n+                throw new AxisFault(\"No bindings found in wsdl\");\n             }\n-        }\n-\n-        axisService.setName(service.getQName().getLocalPart());\n-\n-        if (port != null) {\n-            copyExtensibleElements(port.getExtensibilityElements(), dif,\n-                    axisService, PORT);\n-            binding = port.getBinding();\n+            binding = (Binding) bindings.iterator().next();\n+            axisService.setName(binding.getQName().getLocalPart() + \"Service\");\n         }\n         return binding;\n     }\n@@ -597,10 +606,12 @@ private void processPartsList(List bindingPartsList, Message wsdl4jMessage, Axis\n             if (wsdl4jMessagePart == null) {\n                 throw new WSDLProcessingException(\"Missing part named \\\"\" + bindingPartsList.get(0) + \"\\\"\");\n             }\n-            if (wsdl4jMessagePart.getElementName() == null) {\n-                //this cannot be done - we need to have a\n-                //element reference\n-                throw new WSDLProcessingException(\"Element reference missing for \" + bindingPartsList.get(0) + \"!\" );\n+            QName name = wsdl4jMessagePart.getElementName();\n+            if (name == null) {\n+                name = wsdl4jMessagePart.getTypeName(); \n+            }\n+            if (name == null) {\n+                throw new WSDLProcessingException(\"Element reference / Type name  missing for \" + bindingPartsList.get(0) + \"!\" );\n             }\n             inMessage.setElementQName(wsdl4jMessagePart.getElementName());\n \n@@ -1363,17 +1374,19 @@ private void processImports(Definition wsdl4JDefinition) {\n                             wsdl4jDefinition.getNamespaces().putAll(namespaces);\n                             //copy types\n                             Types t = importedDef.getTypes();\n-                            List typesList = t.getExtensibilityElements();\n-                            for (int j = 0; j < typesList.size(); j++) {\n-                                Types types = wsdl4JDefinition.getTypes();\n-                                if (types == null) {\n-                                    types = wsdl4JDefinition.createTypes();\n-                                    wsdl4JDefinition.setTypes(types);\n+                            if(t != null){\n+                                List typesList = t.getExtensibilityElements();\n+                                for (int j = 0; j < typesList.size(); j++) {\n+                                    Types types = wsdl4JDefinition.getTypes();\n+                                    if (types == null) {\n+                                        types = wsdl4JDefinition.createTypes();\n+                                        wsdl4JDefinition.setTypes(types);\n+                                    }\n+                                    types\n+                                            .addExtensibilityElement((ExtensibilityElement) typesList\n+                                                    .get(j));\n+    \n                                 }\n-                                types\n-                                        .addExtensibilityElement((ExtensibilityElement) typesList\n-                                                .get(j));\n-\n                             }\n \n                             //add messages", "filename": "modules/kernel/src/org/apache/axis2/description/WSDL11ToAxisServiceBuilder.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b", "parent": "https://github.com/apache/axis2-java/commit/ca0921719d9791ce374f2637a54fe9400988cbb6", "message": "- improving RPCMessageReceiver to not to throw NPE when message ns is null\n- removing un-necessary try-catch block in RPCMsgReceiver\n- Fixing http://issues.apache.org/jira/browse/AXIS2-787\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@412054 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_142", "file": [{"additions": 12, "raw_url": "https://github.com/apache/axis2-java/raw/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "blob_url": "https://github.com/apache/axis2-java/blob/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java", "sha": "69b61f63a8e102a8c4ea3a743268e1118a796ffa", "changes": 22, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java?ref=8b098bcb2155cfc189e0c28ea26851d1fad8cf9b", "patch": "@@ -87,11 +87,17 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n                 messageNameSpace = elementQName.getNamespaceURI();\r\n             }\r\n \r\n+\r\n             OMNamespace namespace = methodElement.getNamespace();\r\n-            if (namespace == null || !messageNameSpace.equals(namespace.getName())) {\r\n-                throw new AxisFault(\"namespace mismatch require \" +\r\n-                        messageNameSpace +\r\n-                        \" found \" + methodElement.getNamespace().getName());\r\n+            if (messageNameSpace != null) {\r\n+                if (namespace == null || !messageNameSpace.equals(namespace.getName())) {\r\n+                    throw new AxisFault(\"namespace mismatch require \" +\r\n+                            messageNameSpace +\r\n+                            \" found \" + methodElement.getNamespace().getName());\r\n+                }\r\n+            } else if (namespace != null) {\r\n+                throw new AxisFault(\"namespace mismatch. Axis Oepration expects non-namespace \" +\r\n+                        \"qualified element. But received a namespace qualified element\");\r\n             }\r\n             String methodName = op.getName().getLocalPart();\r\n             Method[] methods = ImplClass.getMethods();\r\n@@ -105,11 +111,7 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n \r\n             Object[] objectArray = RPCUtil.processRequest(methodElement, method);\r\n             Object resObject;\r\n-            try {\r\n-                resObject = method.invoke(obj, objectArray);\r\n-            } catch (Exception e) {\r\n-                throw new AxisFault(e.getMessage());\r\n-            }\r\n+            resObject = method.invoke(obj, objectArray);\r\n             SOAPFactory fac = getSOAPFactory(inMessage);\r\n \r\n             // Handling the response\r\n@@ -139,7 +141,7 @@ public void invokeBusinessLogic(MessageContext inMessage, MessageContext outMess\n             String msg = \"Exception occurred while trying to invoke service method \" +\r\n                     inMessage.getAxisOperation().getName().getLocalPart();\r\n             log.error(msg, e);\r\n-            throw new AxisFault(msg, e);\r\n+            throw AxisFault.makeFault(e);\r\n         }\r\n     }\r\n \r", "filename": "modules/codegen/src/org/apache/axis2/rpc/receivers/RPCMessageReceiver.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java", "blob_url": "https://github.com/apache/axis2-java/blob/8b098bcb2155cfc189e0c28ea26851d1fad8cf9b/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java", "sha": "041254d63aee8dcb535b9e26f01dcd129ddf5c09", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java?ref=8b098bcb2155cfc189e0c28ea26851d1fad8cf9b", "patch": "@@ -16,8 +16,8 @@\n package org.apache.axis2.transport.http.util;\n \n import org.apache.axiom.om.OMAbstractFactory;\n-import org.apache.axiom.om.util.StAXUtils;\n import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n+import org.apache.axiom.om.util.StAXUtils;\n import org.apache.axiom.soap.SOAPBody;\n import org.apache.axiom.soap.SOAPEnvelope;\n import org.apache.axiom.soap.SOAPFactory;\n@@ -37,7 +37,6 @@\n import javax.servlet.ServletInputStream;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n-import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLStreamReader;\n import java.io.IOException;\n \n@@ -96,6 +95,7 @@ public boolean processPostRequest(MessageContext msgContext,\n             msgContext.setProperty(HTTPConstants.HTTP_METHOD, HTTPConstants.HTTP_METHOD_POST);\n             msgContext.setProperty(HTTPConstants.CONTENT_TYPE, contentType);\n             msgContext.setDoingREST(true);\n+            msgContext.setProperty(MessageContext.TRANSPORT_OUT, response.getOutputStream()); \n \n             invokeAxisEngine(msgContext);\n ", "filename": "modules/core/src/org/apache/axis2/transport/http/util/RESTUtil.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335", "parent": "https://github.com/apache/axis2-java/commit/abf932f845853546000102e147662c202e9eb6c4", "message": "- Fixing a possible NPE in AddressingOut\n- We were adding SOAP namespace for the exception element of Fault. Removing that too. I did this change to om separately. Now doing this for DOOM as well.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@376203 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_143", "file": [{"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "sha": "5dbaef82c559d34d09fb83d980bacb94ef4640c7", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335", "patch": "@@ -28,16 +28,16 @@\n import org.apache.ws.commons.om.OMAbstractFactory;\n import org.apache.ws.commons.om.OMElement;\n import org.apache.ws.commons.om.OMNamespace;\n-import org.apache.ws.commons.om.OMNode;\n import org.apache.ws.commons.soap.SOAPEnvelope;\n+import org.apache.ws.commons.soap.SOAPFactory;\n import org.apache.ws.commons.soap.SOAPHeader;\n import org.apache.ws.commons.soap.SOAPHeaderBlock;\n import org.apache.wsdl.WSDLConstants;\n \n import javax.xml.namespace.QName;\n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.ArrayList;\n \n public class AddressingOutHandler extends AddressingHandler {\n \n@@ -88,6 +88,10 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         Options messageContextOptions = msgContext.getOptions();\n         SOAPEnvelope envelope = msgContext.getEnvelope();\n         SOAPHeader soapHeader = envelope.getHeader();\n+        if (soapHeader == null) {\n+            SOAPFactory soapFac = msgContext.isSOAP11() ? OMAbstractFactory.getSOAP11Factory() : OMAbstractFactory.getSOAP12Factory();\n+            soapHeader = soapFac.createSOAPHeader(envelope);\n+        }\n \n         // by this time, we definitely have some addressing information to be sent. This is because,\n         // we have tested at the start of this whether messageInformationHeaders are null or not.\n@@ -239,7 +243,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n         // add epr address\n         String address = epr.getAddress();\n         if (!\"\".equals(address) && address != null) {\n-            OMElement addressElement = OMAbstractFactory.getOMFactory().createOMElement(EPR_ADDRESS,addressingNamespaceObject, soapHeaderBlock);\n+            OMElement addressElement = OMAbstractFactory.getOMFactory().createOMElement(EPR_ADDRESS, addressingNamespaceObject, soapHeaderBlock);\n             addressElement.setText(address);\n         }\n ", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java", "sha": "18641795c98f91a5e115342cfab18d3f8942ea38", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java?ref=6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335", "patch": "@@ -16,15 +16,14 @@\n \n package org.apache.axis2.soap.impl.dom;\n \n+import org.apache.axis2.om.impl.dom.ElementImpl;\n+import org.apache.axis2.om.impl.dom.ParentNode;\n import org.apache.ws.commons.om.OMConstants;\n import org.apache.ws.commons.om.OMElement;\n import org.apache.ws.commons.om.OMException;\n import org.apache.ws.commons.om.OMNode;\n import org.apache.ws.commons.om.OMXMLParserWrapper;\n import org.apache.ws.commons.om.impl.OMNodeEx;\n-import org.apache.axis2.om.impl.dom.ElementImpl;\n-import org.apache.axis2.om.impl.dom.NamespaceImpl;\n-import org.apache.axis2.om.impl.dom.ParentNode;\n import org.apache.ws.commons.om.impl.llom.OMSerializerUtil;\n import org.apache.ws.commons.om.impl.llom.serialize.StreamWriterToContentHandlerConverter;\n import org.apache.ws.commons.soap.SOAP12Constants;\n@@ -161,7 +160,7 @@ protected void putExceptionToSOAPFault(Exception e)\n \t\t}\n \t\tOMElement faultDetailEnty = new ElementImpl((ParentNode) this,\n \t\t\t\tSOAPConstants.SOAP_FAULT_DETAIL_EXCEPTION_ENTRY,\n-\t\t\t\t(NamespaceImpl) this.namespace);\n+\t\t\t\tnull);\n \t\tfaultDetailEnty.setText(sw.getBuffer().toString());\n \t}\n ", "filename": "modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be", "parent": "https://github.com/apache/axis2-java/commit/689a07a7598a6973a6f2ac0ad6986e785b63b306", "message": "Removing wss4j-SNAPSHOT.jar from the security.mar - wss4j-SNAPSHOT.jar will be availeble in the WEB-INF/lib dir in the the war distro.\nFixed an NPE in the security test service.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@367998 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_144", "file": [{"additions": 22, "raw_url": "https://github.com/apache/axis2-java/raw/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/interop/org/apache/axis2/oasis/ping/PingPortSkeleton.java", "blob_url": "https://github.com/apache/axis2-java/blob/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/interop/org/apache/axis2/oasis/ping/PingPortSkeleton.java", "sha": "01883b97e6930a3a12e7c2d0bae5cadf72eebd57", "changes": 38, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/interop/org/apache/axis2/oasis/ping/PingPortSkeleton.java?ref=2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be", "patch": "@@ -34,25 +34,31 @@ public void init(MessageContext mc) {\n                 (Vector) mc.getProperty(WSHandlerConstants.RECV_RESULTS))\n                 == null) {\n             System.out.println(\"No security results!!\");\n-        }\n-        System.out.println(\"Number of results: \" + results.size());\n-        for (int i = 0; i < results.size(); i++) {\n-            WSHandlerResult rResult =\n-                    (WSHandlerResult) results.get(i);\n-            Vector wsSecEngineResults = rResult.getResults();\n-\n-            for (int j = 0; j < wsSecEngineResults.size(); j++) {\n-                WSSecurityEngineResult wser =\n-                        (WSSecurityEngineResult) wsSecEngineResults.get(j);\n-                if (wser.getAction() != WSConstants.ENCR && wser.getPrincipal() != null) {\n-                    System.out.println(wser.getPrincipal().getName());\n+            PingResponseDocument response = PingResponseDocument.Factory.newInstance();\n+            PingResponse pingRes = response.addNewPingResponse();\n+            pingRes.setText(\"Response: \" + param0.getPing().getText() + \"\\n\" +\n+                    \"WARNING: wsse:Security missing !!!!\");\n+            return response;\n+        } else {\n+            System.out.println(\"Number of results: \" + results.size());\n+            for (int i = 0; i < results.size(); i++) {\n+                WSHandlerResult rResult =\n+                        (WSHandlerResult) results.get(i);\n+                Vector wsSecEngineResults = rResult.getResults();\n+    \n+                for (int j = 0; j < wsSecEngineResults.size(); j++) {\n+                    WSSecurityEngineResult wser =\n+                            (WSSecurityEngineResult) wsSecEngineResults.get(j);\n+                    if (wser.getAction() != WSConstants.ENCR && wser.getPrincipal() != null) {\n+                        System.out.println(wser.getPrincipal().getName());\n+                    }\n                 }\n             }\n+            PingResponseDocument response = PingResponseDocument.Factory.newInstance();\n+            PingResponse pingRes = response.addNewPingResponse();\n+            pingRes.setText(\"Response: \" + param0.getPing().getText());\n+            return response;\n         }\n-        PingResponseDocument response = PingResponseDocument.Factory.newInstance();\n-        PingResponse pingRes = response.addNewPingResponse();\n-        pingRes.setText(\"Response: \" + param0.getPing().getText());\n-        return response;\n     }\n \n }", "filename": "modules/security/interop/org/apache/axis2/oasis/ping/PingPortSkeleton.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/interop/org/apache/axis2/security/PWCallback.java", "blob_url": "https://github.com/apache/axis2-java/blob/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/interop/org/apache/axis2/security/PWCallback.java", "sha": "874e3a8a6a840dd299736f14e98aac2b2834db26", "changes": 10, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/interop/org/apache/axis2/security/PWCallback.java?ref=2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be", "patch": "@@ -54,16 +54,6 @@\n \n \n \n-    /*\n-\n-     * (non-Javadoc)\n-\n-     * @see javax.security.auth.callback.CallbackHandler#handle(javax.security.auth.callback.Callback[])\n-\n-     */\n-\n-\n-\n     /**\n \n      * Method handle", "filename": "modules/security/interop/org/apache/axis2/security/PWCallback.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/maven.xml", "blob_url": "https://github.com/apache/axis2-java/blob/2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be/modules/security/maven.xml", "sha": "ff1417eecb108dfc81ea5bf7371e71be5c2bf619", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/maven.xml?ref=2e2929fdfaccc5f4b3d1d87b6ddf695daa1580be", "patch": "@@ -39,7 +39,6 @@\n         <copy file=\"${maven.repo.local}/xml-security/jars/xmlsec-1.2.1.jar\" todir=\"target/temp-mar/lib\"/>\n         <copy file=\"${maven.repo.local}/bouncycastle/jars/bcprov-jdk13-128.jar\" todir=\"target/temp-mar/lib\"/>\n         <copy file=\"${maven.repo.local}/opensaml/jars/opensaml-1.0.1.jar\" todir=\"target/temp-mar/lib\"/>\n-        <copy file=\"${maven.repo.local}/wss4j/jars/wss4j-SNAPSHOT.jar\" todir=\"target/temp-mar/lib\"/>\n         <copy file=\"${maven.repo.local}/jaxen/jars/jaxen-1.1-beta-7.jar\" todir=\"target/temp-mar/lib\"/>\n         <copy file=\"${maven.repo.local}/xml-apis/jars/xml-apis-${xml_apis.version}.jar\" todir=\"target/temp-mar/lib\"/>\n         <copy file=\"${maven.repo.local}/xerces/jars/xercesImpl-${xerces.version}.jar\" todir=\"target/temp-mar/lib\"/>", "filename": "modules/security/maven.xml"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/087b35801615d613f017ce5345cf78acdf7428a6", "parent": "https://github.com/apache/axis2-java/commit/36d77f32a0deced070519f4d8ae5cf8cc24d15d2", "message": "setting the instance variables to null at the end of invoke causes NPE in ThreadingTest. Basically it means that the instance variables are shared across threads (which is a bad thing!). So passing them around as parameters for now (need to check with Eran)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@359138 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_145", "file": [{"additions": 25, "raw_url": "https://github.com/apache/axis2-java/raw/087b35801615d613f017ce5345cf78acdf7428a6/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/087b35801615d613f017ce5345cf78acdf7428a6/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "sha": "211f2a4f42aa267a71ad77dfc7e55c249584f4e0", "changes": 52, "status": "modified", "deletions": 27, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=087b35801615d613f017ce5345cf78acdf7428a6", "patch": "@@ -39,11 +39,9 @@\n public class AddressingOutHandler extends AddressingHandler {\n \n \n-    OMNamespace addressingNamespaceObject;\n-    String addressingNamespace;\n-\n-\n     public void invoke(MessageContext msgContext) throws AxisFault {\n+        OMNamespace addressingNamespaceObject = null;\n+        String addressingNamespace = null;\n \n         Object addressingVersionFromCurrentMsgCtxt = msgContext.getProperty(WS_ADDRESSING_VERSION);\n         if (addressingVersionFromCurrentMsgCtxt != null) {\n@@ -87,28 +85,28 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n         // processing WSA To\n         EndpointReference epr = messageContextOptions.getTo();\n-        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope)) {\n+        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope, addressingNamespaceObject)) {\n \n             String address = epr.getAddress();\n             if (!\"\".equals(address) && address != null) {\n                 SOAPHeaderBlock toHeaderBlock = envelope.addHeaderBlock(WSA_TO, addressingNamespaceObject);\n                 toHeaderBlock.setText(address);\n             }\n \n-            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader );\n-            processReferenceInformation(epr.getAllReferenceProperties(), soapHeader);\n+            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader, addressingNamespaceObject);\n+            processReferenceInformation(epr.getAllReferenceProperties(), soapHeader, addressingNamespaceObject);\n \n-            addToHeader(epr, soapHeader);\n+            addToHeader(epr, soapHeader, addressingNamespaceObject, addressingNamespace);\n         }\n \n         // processing WSA Action\n         String action = messageContextOptions.getAction();\n-        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope)) {\n-            processStringInfo(action, WSA_ACTION, envelope);\n+        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope, addressingNamespaceObject)) {\n+            processStringInfo(action, WSA_ACTION, envelope, addressingNamespaceObject);\n         }\n \n         // processing WSA replyTo\n-        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope, addressingNamespaceObject)) {\n             epr = messageContextOptions.getReplyTo();\n             if (epr == null) {//optional\n                 // setting anonymous URI. Defaulting to Final.\n@@ -124,33 +122,33 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n                 epr.addReferenceParameter(new QName(Constants.AXIS2_NAMESPACE_URI,\n                         Constants.SERVICE_GROUP_ID, Constants.AXIS2_NAMESPACE_PREFIX), serviceGroupContextId);\n             }\n-            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         epr = messageContextOptions.getFrom();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         epr = messageContextOptions.getFaultTo();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         String messageID = messageContextOptions.getMessageId();\n-        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope)) {//optional\n-            processStringInfo(messageID, WSA_MESSAGE_ID, envelope);\n+        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope, addressingNamespaceObject)) {//optional\n+            processStringInfo(messageID, WSA_MESSAGE_ID, envelope, addressingNamespaceObject);\n         }\n \n-        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope, addressingNamespaceObject)) {\n             RelatesTo relatesTo = messageContextOptions.getRelatesTo();\n             OMElement relatesToHeader = null;\n \n             if (relatesTo != null) {\n                 relatesToHeader =\n                         processStringInfo(relatesTo.getValue(),\n                                 WSA_RELATES_TO,\n-                                envelope);\n+                                envelope, addressingNamespaceObject);\n             }\n \n             if (relatesToHeader != null)\n@@ -173,7 +171,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n     private OMElement processStringInfo(String value,\n                                         String type,\n-                                        SOAPEnvelope soapEnvelope) {\n+                                        SOAPEnvelope soapEnvelope, OMNamespace addressingNamespaceObject) {\n         if (!\"\".equals(value) && value != null) {\n             SOAPHeaderBlock soapHeaderBlock =\n                     soapEnvelope.addHeaderBlock(type, addressingNamespaceObject);\n@@ -186,8 +184,8 @@ private OMElement processStringInfo(String value,\n \n     protected void addToSOAPHeader(EndpointReference epr,\n                                    String type,\n-                                   SOAPEnvelope envelope) {\n-        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope)) {\n+                                   SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String addressingNamespace) {\n+        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope, addressingNamespaceObject)) {\n             return;\n         }\n \n@@ -204,7 +202,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n             addressElement.setText(address);\n         }\n \n-        addToHeader(epr, soapHeaderBlock);\n+        addToHeader(epr, soapHeaderBlock, addressingNamespaceObject, addressingNamespace);\n \n \n         Map referenceParameters = epr.getAllReferenceParameters();\n@@ -214,7 +212,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n                             EPR_REFERENCE_PARAMETERS,\n                             addressingNamespaceObject);\n             soapHeaderBlock.addChild(reference);\n-            processReferenceInformation(referenceParameters, reference);\n+            processReferenceInformation(referenceParameters, reference, addressingNamespaceObject);\n \n         }\n \n@@ -226,14 +224,14 @@ protected void addToSOAPHeader(EndpointReference epr,\n                                 Submission.EPR_REFERENCE_PROPERTIES,\n                                 addressingNamespaceObject);\n                 envelope.getHeader().addChild(reference);\n-                processReferenceInformation(referenceParameters, reference);\n+                processReferenceInformation(referenceParameters, reference, addressingNamespaceObject);\n             }\n \n         }\n \n     }\n \n-    private void addToHeader(EndpointReference epr, OMElement parentElement) {\n+    private void addToHeader(EndpointReference epr, OMElement parentElement, OMNamespace addressingNamespaceObject, String addressingNamespace) {\n \n         if (addressingNamespace.equals(Submission.WSA_NAMESPACE)) {\n             QName portType = epr.getPortType();\n@@ -273,7 +271,7 @@ private void addToHeader(EndpointReference epr, OMElement parentElement) {\n      *\n      * @param referenceInformation\n      */\n-    private void processReferenceInformation(Map referenceInformation, OMElement parent) {\n+    private void processReferenceInformation(Map referenceInformation, OMElement parent, OMNamespace addressingNamespaceObject) {\n         if (referenceInformation != null && parent != null) {\n             Iterator iterator = referenceInformation.keySet().iterator();\n             while (iterator.hasNext()) {\n@@ -290,7 +288,7 @@ private void processReferenceInformation(Map referenceInformation, OMElement par\n         }\n     }\n \n-    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope) {\n+    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n         boolean isAvail = envelope.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n         if(!isAvail && envelope.getHeader() != null){\n             // check in headers too", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/6da7e27cd6a8a7169941cca646479378e9f007b7", "parent": "https://github.com/apache/axis2-java/commit/5c8bd2adc3dfabaa598de54b71d2aa081909220d", "message": "Fixing a NPE problem in AddressingOutHandler and improving the code (Thanks Paul and Saminda for pointing out the bug and thanks Sanjiva for the tip to improve the code)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@355879 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_146", "file": [{"additions": 32, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "sha": "9f15927b4d4d54378ae4e234207f1a0b9ca4d668", "changes": 57, "status": "modified", "deletions": 25, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -21,11 +21,13 @@\n import org.apache.axis2.addressing.AddressingConstants;\n import org.apache.axis2.addressing.EndpointReference;\n import org.apache.axis2.addressing.MessageInformationHeaders;\n+import org.apache.axis2.addressing.RelatesTo;\n import org.apache.axis2.addressing.ServiceName;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.om.OMAbstractFactory;\n import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMNamespace;\n+import org.apache.axis2.soap.SOAPEnvelope;\n import org.apache.axis2.soap.SOAPHeader;\n import org.apache.axis2.soap.SOAPHeaderBlock;\n import org.apache.wsdl.WSDLConstants;\n@@ -86,39 +88,39 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n         MessageInformationHeaders messageInformationHeaders =\n                 msgContext.getMessageInformationHeaders();\n-        SOAPHeader soapHeader = msgContext.getEnvelope().getHeader();\n+        SOAPEnvelope envelope = msgContext.getEnvelope();\n+        SOAPHeader soapHeader = envelope.getHeader();\n \n         // by this time, we definitely have some addressing information to be sent. This is because,\n         // we have tested at the start of this whether messageInformationHeaders are null or not.\n         // So rather than declaring addressing namespace in each and every addressing header, lets\n         // define that in the Header itself.\n-        soapHeader.declareNamespace(addressingNamespaceObject);\n+        envelope.declareNamespace(addressingNamespaceObject);\n \n         // processing WSA To\n         EndpointReference epr = messageInformationHeaders.getTo();\n-        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, soapHeader)) {\n+        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope)) {\n \n             String address = epr.getAddress();\n             if (!\"\".equals(address) && address != null) {\n-                SOAPHeaderBlock toHeaderBlock = soapHeader.addHeaderBlock(\n-                        WSA_TO, addressingNamespaceObject);\n+                SOAPHeaderBlock toHeaderBlock = envelope.addHeaderBlock(WSA_TO, addressingNamespaceObject);\n                 toHeaderBlock.setText(address);\n             }\n \n-            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader);\n+            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader );\n             processReferenceInformation(epr.getAllReferenceProperties(), soapHeader);\n \n             addToHeader(epr, soapHeader);\n         }\n \n         // processing WSA Action\n         String action = messageInformationHeaders.getAction();\n-        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, soapHeader)) {\n-            processStringInfo(action, WSA_ACTION, soapHeader);\n+        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope)) {\n+            processStringInfo(action, WSA_ACTION, envelope);\n         }\n \n         // processing WSA replyTo\n-        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, soapHeader)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope)) {\n             epr = messageInformationHeaders.getReplyTo();\n             if (epr == null) {//optional\n                 // setting anonymous URI. Defaulting to Final.\n@@ -134,33 +136,33 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n                 epr.addReferenceParameter(new QName(Constants.AXIS2_NAMESPACE_URI,\n                         Constants.SERVICE_GROUP_ID, Constants.AXIS2_NAMESPACE_PREFIX), serviceGroupContextId);\n             }\n-            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope);\n         }\n \n         epr = messageInformationHeaders.getFrom();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope);\n         }\n \n         epr = messageInformationHeaders.getFaultTo();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope);\n         }\n \n         String messageID = messageInformationHeaders.getMessageId();\n-        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, soapHeader)) {//optional\n-            processStringInfo(messageID, WSA_MESSAGE_ID, soapHeader);\n+        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope)) {//optional\n+            processStringInfo(messageID, WSA_MESSAGE_ID, envelope);\n         }\n \n-        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, soapHeader)) {\n-            org.apache.axis2.addressing.RelatesTo relatesTo = messageInformationHeaders.getRelatesTo();\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope)) {\n+            RelatesTo relatesTo = messageInformationHeaders.getRelatesTo();\n             OMElement relatesToHeader = null;\n \n             if (relatesTo != null) {\n                 relatesToHeader =\n                         processStringInfo(relatesTo.getValue(),\n                                 WSA_RELATES_TO,\n-                                soapHeader);\n+                                envelope);\n             }\n \n             if (relatesToHeader != null)\n@@ -179,10 +181,10 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n     private OMElement processStringInfo(String value,\n                                         String type,\n-                                        SOAPHeader soapHeader) {\n+                                        SOAPEnvelope soapEnvelope) {\n         if (!\"\".equals(value) && value != null) {\n             SOAPHeaderBlock soapHeaderBlock =\n-                    soapHeader.addHeaderBlock(type, addressingNamespaceObject);\n+                    soapEnvelope.addHeaderBlock(type, addressingNamespaceObject);\n             soapHeaderBlock.addChild(\n                     OMAbstractFactory.getOMFactory().createText(value));\n             return soapHeaderBlock;\n@@ -192,13 +194,13 @@ private OMElement processStringInfo(String value,\n \n     protected void addToSOAPHeader(EndpointReference epr,\n                                    String type,\n-                                   SOAPHeader soapHeader) {\n-        if (epr == null || isAddressingHeaderAlreadyAvailable(type, soapHeader)) {\n+                                   SOAPEnvelope envelope) {\n+        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope)) {\n             return;\n         }\n \n         SOAPHeaderBlock soapHeaderBlock =\n-                soapHeader.addHeaderBlock(type, addressingNamespaceObject);\n+                envelope.addHeaderBlock(type, addressingNamespaceObject);\n \n         String address = epr.getAddress();\n         if (!\"\".equals(address) && address != null) {\n@@ -231,7 +233,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n                         OMAbstractFactory.getOMFactory().createOMElement(\n                                 Submission.EPR_REFERENCE_PROPERTIES,\n                                 addressingNamespaceObject);\n-                soapHeader.addChild(reference);\n+                envelope.getHeader().addChild(reference);\n                 processReferenceInformation(referenceParameters, reference);\n             }\n \n@@ -296,8 +298,13 @@ private void processReferenceInformation(Map referenceInformation, OMElement par\n         }\n     }\n \n-    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPHeader soapHeader) {\n-        return soapHeader.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope) {\n+        boolean isAvail = envelope.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+        if(!isAvail && envelope.getHeader() != null){\n+            // check in headers too\n+            isAvail = envelope.getHeader().getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+        }\n+        return isAvail;\n     }\n }\n ", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java", "sha": "b1e87d709e1cc3d47fa56496cb7fe6e48ecf902f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -56,7 +56,7 @@\n  * </PRE>\n  * To create a <CODE>SOAPHeader</CODE> object to replace the one\n  * that was removed, a client uses the method <CODE>\n- * SOAPEnvelope.addHeader</CODE>, which creates a new header and\n+ * SOAPEnvelope.addHeaderBlock</CODE>, which creates a new header and\n  * adds it to the <CODE>SOAPEnvelope</CODE> object. Similarly, the\n  * method <CODE>addBody</CODE> creates a new <CODE>SOAPBody</CODE>\n  * object and adds it to the <CODE>SOAPEnvelope</CODE> object. The\n@@ -67,7 +67,7 @@\n  * SOAPPart sp = message.getSOAPPart();\n  * SOAPEnvelope se = sp.getEnvelope();\n  * se.getHeader().detachNode();\n- * SOAPHeader sh = se.addHeader();\n+ * SOAPHeader sh = se.addHeaderBlock();\n  * se.getBody().detachNode();\n  * SOAPBody sb = se.addBody();\n  * </PRE>", "filename": "modules/saaj/src/javax/xml/soap/SOAPEnvelope.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPHeader.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPHeader.java", "sha": "c44f53c29d7ac3c913f76263fefc422b4051134b", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/javax/xml/soap/SOAPHeader.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -35,12 +35,12 @@\n  * se.getHeader().detachNode();\n  * </PRE>\n  * A <CODE>SOAPHeader</CODE> object is created with the <CODE>\n- * SOAPEnvelope</CODE> method <CODE>addHeader</CODE>. This method,\n+ * SOAPEnvelope</CODE> method <CODE>addHeaderBlock</CODE>. This method,\n  * which creates a new header and adds it to the envelope, may be\n  * called only after the existing header has been removed.\n  * <PRE>\n  * se.getHeader().detachNode();\n- * SOAPHeader sh = se.addHeader();\n+ * SOAPHeader sh = se.addHeaderBlock();\n  * </PRE>\n  * <p/>\n  * <P>A <CODE>SOAPHeader</CODE> object can have only <CODE>", "filename": "modules/saaj/src/javax/xml/soap/SOAPHeader.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java", "sha": "cf0c18a1557a611a5224d4691d9aed0df8db1877", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -139,7 +139,7 @@ public SOAPBody   getBody() throws SOAPException {\n     }\n \n     /**\n-     * method addHeader\n+     * method addHeaderBlock\n      *\n      * @return\n      * @throws SOAPException", "filename": "modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java"}, {"additions": 20, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java", "sha": "49e1098d9eca4de5aafeb5b00a57cf56762899a7", "changes": 45, "status": "modified", "deletions": 25, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -25,16 +25,7 @@\n import org.apache.axis2.om.impl.OMOutputImpl;\n import org.apache.axis2.om.impl.dom.DocumentImpl;\n import org.apache.axis2.om.impl.dom.NamespaceImpl;\n-import org.apache.axis2.soap.SOAP11Constants;\n-import org.apache.axis2.soap.SOAP12Constants;\n-import org.apache.axis2.soap.SOAPBody;\n-import org.apache.axis2.soap.SOAPConstants;\n-import org.apache.axis2.soap.SOAPEnvelope;\n-import org.apache.axis2.soap.SOAPFactory;\n-import org.apache.axis2.soap.SOAPHeader;\n-import org.apache.axis2.soap.SOAPHeaderBlock;\n-import org.apache.axis2.soap.SOAPProcessingException;\n-import org.apache.axis2.soap.impl.dom.SOAPElement;\n+import org.apache.axis2.soap.*;\n import org.apache.axis2.soap.impl.dom.factory.DOMSOAPFactory;\n import org.apache.axis2.soap.impl.dom.soap11.SOAP11Factory;\n \n@@ -101,28 +92,32 @@ public SOAPHeader getHeader() throws OMException {\n \t/**\n \t * Convenience method to add a SOAP header to this envelope\n \t * \n-\t * @param namespaceURI\n \t * @param name\n-\t */\n-\tpublic SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+     * @param namespaceURI\n+     */\n+\tpublic SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n \t\t\tthrows OMException {\n \t\t// TODO : cache SOAP header and body instead of looking them up?\n \n-\t\tSOAPHeader headerContainer = getHeader();\n \t\tOMNamespace namespace = factory.createOMNamespace(namespaceURI, null);\n-\t\treturn factory.createSOAPHeaderBlock(name, namespace, headerContainer);\n+\t\treturn this.addHeaderBlock(name, namespace);\n \t}\n \n-\tpublic void addChild(OMNode child) {\n-\t\tif ((child instanceof OMElement)\n-\t\t\t\t&& !(child instanceof SOAPHeader || child instanceof SOAPBody)) {\n-\t\t\tthrow new SOAPProcessingException(\n-\t\t\t\t\t\"SOAP Envelope can not have children other than SOAP Header and Body\",\n-\t\t\t\t\tSOAP12Constants.FAULT_CODE_SENDER);\n-\t\t} else {\n-\t\t\tsuper.addChild(child);\n-\t\t}\n-\t}\n+    public SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace) throws OMException {\n+        SOAPHeader headerContainer = getHeader();\n+        return factory.createSOAPHeaderBlock(name, namespace, headerContainer);\n+    }\n+\n+    public void addChild(OMNode child) {\n+        if ((child instanceof OMElement)\n+                && !(child instanceof SOAPHeader || child instanceof SOAPBody)) {\n+            throw new SOAPProcessingException(\n+                    \"SOAP Envelope can not have children other than SOAP Header and Body\",\n+                    SOAP12Constants.FAULT_CODE_SENDER);\n+        } else {\n+            super.addChild(child);\n+        }\n+    }\n \n \t/**\n \t * Returns the <CODE>SOAPBody</CODE> object associated with this <CODE>SOAPEnvelope</CODE>", "filename": "modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java"}, {"additions": 6, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java", "sha": "421874b06bd4a01dca0b2bccf82c73b7839822c3", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMException;\n+import org.apache.axis2.om.OMNamespace;\n \n /**\n  * Interface SOAPEnvelope\n@@ -41,10 +42,13 @@\n     /**\n      * Convenience method to add a SOAP header to this envelope\n      *\n-     * @param namespaceURI\n      * @param name\n+     * @param namespaceURI\n      */\n-    public abstract SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+    public abstract SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n+            throws OMException;\n+\n+    public abstract SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace)\n             throws OMException;\n \n     /**", "filename": "modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java", "sha": "fec0e27d4d31ae1cf14542256af66308b31f9ec9", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -85,18 +85,20 @@ public SOAPHeader getHeader() throws OMException {\n     /**\n      * Convenience method to add a SOAP header to this envelope\n      *\n-     * @param namespaceURI\n      * @param name\n+     * @param namespaceURI\n      */\n-    public SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+    public SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n             throws OMException {\n         // TODO : cache SOAP header and body instead of looking them up?\n \n-        SOAPHeader headerContainer = getHeader();\n         OMNamespace namespace = factory.createOMNamespace(namespaceURI, null);\n-        return factory.createSOAPHeaderBlock(name,\n-                                                              namespace,\n-                                                              headerContainer);\n+        return this.addHeaderBlock(name, namespace);\n+    }\n+\n+    public SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace) throws OMException {\n+        SOAPHeader headerContainer = getHeader();\n+        return factory.createSOAPHeaderBlock(name,namespace,headerContainer);\n     }\n \n     public void addChild(OMNode child) {", "filename": "modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java", "sha": "9cc8e0f62db45f1b71c985207db277bae893166d", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7", "patch": "@@ -25,10 +25,10 @@ public SOAPEnvelopeTest(String testName) {\n         super(testName);\n         soap11Envelope = soap11Factory.getDefaultEnvelope();\n         // Toss in a header to make sure the SOAPHeader gets set up\n-        soap11Envelope.addHeader(\"http://ns\", \"dummy\");\n+        soap11Envelope.addHeaderBlock(\"dummy\", \"http://ns\");\n         soap12Envelope = soap12Factory.getDefaultEnvelope();\n         // Toss in a header to make sure the SOAPHeader gets set up\n-        soap12Envelope.addHeader(\"http://ns\", \"dummy\");\n+        soap12Envelope.addHeaderBlock(\"dummy\", \"http://ns\");\n     }\n \n     //SOAP 1.1 Envelope Test (Programaticaly Created)-----------------------------------------------", "filename": "modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/1a0330995d6bc554fe5346758bd924a389285e17", "parent": "https://github.com/apache/axis2-java/commit/bc57bd2023b63cd8d4e899cd5df2a24b8a35c4b3", "message": "Fixing a small bug in OM. If the OM structure was created programmatically and if we try to get a pull parser out of it, there was a NPE. Fixed that.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@326452 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_147", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/1a0330995d6bc554fe5346758bd924a389285e17/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java", "blob_url": "https://github.com/apache/axis2-java/blob/1a0330995d6bc554fe5346758bd924a389285e17/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java", "sha": "01af1f9da8c6ee640b8658779eba733ccd8605e2", "changes": 20, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java?ref=1a0330995d6bc554fe5346758bd924a389285e17", "patch": "@@ -16,16 +16,7 @@\n \n package org.apache.axis2.om.impl.llom;\n \n-import org.apache.axis2.om.OMAbstractFactory;\n-import org.apache.axis2.om.OMAttribute;\n-import org.apache.axis2.om.OMConstants;\n-import org.apache.axis2.om.OMContainer;\n-import org.apache.axis2.om.OMElement;\n-import org.apache.axis2.om.OMException;\n-import org.apache.axis2.om.OMNamespace;\n-import org.apache.axis2.om.OMNode;\n-import org.apache.axis2.om.OMText;\n-import org.apache.axis2.om.OMXMLParserWrapper;\n+import org.apache.axis2.om.*;\n import org.apache.axis2.om.impl.OMContainerEx;\n import org.apache.axis2.om.impl.OMNodeEx;\n import org.apache.axis2.om.impl.OMOutputImpl;\n@@ -37,13 +28,12 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import java.io.ByteArrayOutputStream;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-\n import javax.xml.namespace.QName;\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n+import java.io.ByteArrayOutputStream;\n+import java.util.HashMap;\n+import java.util.Iterator;\n \n /**\n  * Class OMElementImpl\n@@ -563,7 +553,7 @@ private XMLStreamReader getXMLStreamReader(boolean cache) {\n             throw new UnsupportedOperationException(\n                     \"This element was not created in a manner to be switched\");\n         }\n-        if (builder.isCompleted() && !cache) {\n+        if (builder != null && builder.isCompleted() && !cache) {\n             throw new UnsupportedOperationException(\n                     \"The parser is already consumed!\");\n         }", "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/3f4de3105947c9525ac77f37b7d9430ed1f031d8", "parent": "https://github.com/apache/axis2-java/commit/512cdf13dcdcf9b4c400f359f91680814866186d", "message": "Moving whitemesa interop tests to a separate maven goal. Please run \"maven itest\" from modules/integration to run that test. i will hook it up better (\"maven all-tests\" from root) tomorrow.\n\nFYI, right now it fails with an NPE. Gayan, PLEASE fix it ASAP!\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@239510 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_148", "file": [{"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml", "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resBaseStrutFault.xml", "sha": "6affbedd72d32ce16f03126462b7240ce9a1c9ca", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml", "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resExtendedStructFault.xml", "sha": "78069365b6efce9ca3a5306b4bc1daeeb9c2f2c9", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml", "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults1.xml", "sha": "32332c4b1c9b47ad41f354d70e416e6a9b298a07", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml", "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults2.xml", "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml", "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resSoapStructFault.xml", "sha": "1f8db5952b5b2ed7d2b9ddd880b0a4471a5244cb", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml", "sha": "981546c922c977b14080503854104cc4347bb363", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatRes.xml", "sha": "a61d026227436910fb861c9f18ba186f25475656", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml", "sha": "743bab8718b4975a92620d3954d0fd4c098ba6de", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntegerRes.xml", "sha": "97ea17c73b674e7a46ceff2f0ad7f173f634f747", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml", "sha": "8d8dc2496a06ef8c81c839222e550f9ddcf1781a", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml", "sha": "d4f5263ea126d26b297b9d6b5dfe029c62bfeb0b", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml", "sha": "528605af78add6c3c58eae850e4ae482a296b567", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructRes.xml", "sha": "044498b82666ec9bd78700c4251912725ef76bbd", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml", "sha": "2f2761fdc5d27dc5ecfed7a4db0d586ed8c523c7", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml", "sha": "2168cf98d8c180cd652c7337b09926283ca4a62f", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml", "sha": "5f442bc53c5edcae27a0ebbfa1f034b9b04ef6e2", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml", "sha": "5c8b7787c5e22a3234e1874ebba1d540808aadbb", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml", "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml", "sha": "b5bb77651eb16e410cc55a7afeb2d0767ce37211", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resEmptyFault.xml", "sha": "7adf3a262eab88d9a8c2c1b27a1e2992ce202056", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resIntArray.xml", "sha": "5fadd30dad0ed27639836fcf997712bef89c8aae", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml", "sha": "eb56f608d176b618b7dc184b35ee36b81b4ecdcd", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml", "sha": "6d972cca1bb3a290ce5023f2d9a3a8c80074c840", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml", "sha": "b4e8d045c18221e6c4ab0941c4eda7ecf8fa9974", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml", "sha": "88585bed552c5ebf5711c650213acb682ae7954b", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml", "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resStringFault.xml", "sha": "88a1bf84e206ee5e7237a87f17b557c14de30bc5", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java", "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java", "sha": "a8639649ebba93ed121f1cf1ac9a3ebf02263bc9", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java", "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java", "sha": "a2635a3fe276a5476dbebc2b90e4557946e26fcc", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java", "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java", "sha": "84ada44f2dbd92eab44522b7dd0cefe86fe70888", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java"}, {"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml", "sha": "3c4a4a956362b656bdc5ab81c4ed41238967697f", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/maven.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "patch": "@@ -8,6 +8,13 @@\n     xmlns:deploy=\"deploy\"\r\n     xmlns:ant=\"jelly:ant\">\r\n     <j:set var=\"samples.dir\" value=\"target/samples\"/>\r\n+\r\n+    <postGoal name=\"itest:compile\">\r\n+        <mkdir dir=\"target/itest-classes/modules\"/>\r\n+        <copy file=\"../addressing/target/addressing.mar\"\r\n+              tofile=\"target/itest-classes/modules/addressing.mar\"/>\r\n+    </postGoal>\r\n+\r\n     <postGoal name=\"test:compile\">\r\n         <mkdir dir=\"target/test-resources/samples/modules\"/>\r\n         <mkdir dir=\"target/test-resources/repository-client/modules\"/>\r", "filename": "modules/integration/maven.xml"}, {"additions": 25, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties", "sha": "aff99ab3bd17a73f01e0f693e07be1e43aa85456", "changes": 25, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.properties?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "patch": "@@ -0,0 +1,25 @@\n+# -------------------------------------------------------------------\n+# Copyright 2001-2004 The Apache Software Foundation.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -------------------------------------------------------------------\n+\n+maven.repo.remote=http://cvs.apache.org/repository/, http://www.ibiblio.org/maven,http://www.apache.org/dist/java-repository/,http://www.openejb.org/maven\n+maven.multiproject.type=jar\n+\n+maven.itest.resources=${basedir}/itest-resources\n+maven.itest.src=${basedir}/itest\n+maven.itest.includes=**/*.java\n+\n+maven.junit.fork=true\n+maven.junit.jvmargs=-ea", "filename": "modules/integration/project.properties"}, {"additions": 14, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml", "sha": "b253f88721267b43446081eb93b3573d7f9c63f4", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "patch": "@@ -162,6 +162,20 @@\n                 <module>true</module>\r\n             </properties>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>maven-itest-plugin</groupId>\r\n+            <artifactId>maven-itest-plugin</artifactId>\r\n+            <version>1.0</version>\r\n+            <type>plugin</type>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>junit</groupId>\r\n+            <artifactId>junit</artifactId>\r\n+            <version>3.8.1</version>\r\n+                <properties>\r\n+                    <classloader>root</classloader>\r\n+            </properties>\r\n+        </dependency>\r\n \r\n     </dependencies>\r\n \r", "filename": "modules/integration/project.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java", "sha": "b708d8c8d30225e9c13da17b26a36151e2382999", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "patch": "@@ -29,7 +29,7 @@ public SOAPEnvelope sendMsg(Round1ClientUtil util, String epUrl, String soapActi\n             throw new AxisFault(e);\r\n         }\r\n \r\n-        Call call = new Call(\"target/test-resources/intregrationRepo\");\r\n+        Call call = new Call(\"target/itest-resources/intregrationRepo\");\r\n         call.setTo(new EndpointReference(url.toString()));\r\n         call.setSoapAction(soapAction);\r\n         call.setTransportInfo(Constants.TRANSPORT_HTTP, Constants.TRANSPORT_HTTP, false);\r", "filename": "modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java", "sha": "b5963673e4e72620281c3d8ceab30bb84eddc164", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8", "patch": "@@ -79,7 +79,7 @@ public void testEchoXMLSync() throws Exception {\n             method.addChild(value);\n //            reqEnv.getBody().addChild(method);\n \n-            Call call = new Call(\"target/test-resources/intregrationRepo\");\n+            Call call = new Call();\n             EndpointReference targetEPR =\n                     new EndpointReference(\"http://127.0.0.1:\"\n                     + (UtilServer.TESTING_PORT)", "filename": "modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/0474e809dbac7f7848db246a7a4fa6ea818877bd", "parent": "https://github.com/apache/axis2-java/commit/e124b28e56b412f6696047acfd6464f39e430dfe", "message": "we have issues with woden M7 release it giving NPEs so I have to revert my previous changes , so now we have to wait till Woden release to cut Axis2 1.3\n\nWe are getting this NPE when we run wsld2java\n\nwsdl2java.bat -uri http://localhost:8080/axis2/services/Version?wsdl2 -wv 2.0 -o .\nUsing AXIS2_HOME:   C:\\Axis2\\Axis2-1.3\\axis2-1.3-RC1\nUsing JAVA_HOME:    C:\\Program Files\\Java\\jdk1.5.0_12\nA problem was encountered while creating the build in XML schema types: java.lang.RuntimeException:\njava.lang.NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@553993 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_149", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/0474e809dbac7f7848db246a7a4fa6ea818877bd/modules/parent/pom.xml", "blob_url": "https://github.com/apache/axis2-java/blob/0474e809dbac7f7848db246a7a4fa6ea818877bd/modules/parent/pom.xml", "sha": "6fb12e50278ce4043cdcb4598da344035faefac3", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/parent/pom.xml?ref=0474e809dbac7f7848db246a7a4fa6ea818877bd", "patch": "@@ -79,10 +79,10 @@\n               element, and it will need to be changed manually before a release,\r\n               as the maven-release-plugin will not update this value.\r\n         -->\r\n-        <version>SNAPSHOT</version>\n-\t<addressing.mar.version>1.3</addressing.mar.version>\n-\t<soapmonitor.mar.version>1.3</soapmonitor.mar.version>\n-\t<mex.mar.version>1.3</mex.mar.version>\n+        <version>SNAPSHOT</version>\r\n+\t<addressing.mar.version>1.3</addressing.mar.version>\r\n+\t<soapmonitor.mar.version>1.3</soapmonitor.mar.version>\r\n+\t<mex.mar.version>1.3</mex.mar.version>\r\n \t<ping.mar.version>1.3</ping.mar.version>\r\n         <annogen.version>0.1.0</annogen.version>\r\n         <ant.version>1.7.0</ant.version>\r\n@@ -130,7 +130,7 @@\n         <stax.impl.version>3.2.1</stax.impl.version>\r\n         <stax_utils.version>20060915</stax_utils.version>\r\n         <tomcat.version>6.0.10</tomcat.version>\r\n-        <woden.version>1.0-incubating-M7a</woden.version>\r\n+        <woden.version>1.0-incubating-SNAPSHOT</woden.version>\r\n         <wsdl4j.version>1.6.2</wsdl4j.version>\r\n         <xalan.version>2.7.0</xalan.version>\r\n         <xbean.version>2.2.0</xbean.version>\r", "filename": "modules/parent/pom.xml"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/f6f126aab3c7caf42c4fd87ba68d492f171ec489", "parent": "https://github.com/apache/axis2-java/commit/20a354adf9548de709905e084449e2be752b647a", "message": "* Add MessageContext.isPropertyTrue() method, to avoid people needing to use other classes, do their own null checks, etc.  Deprecate Utils.isExplicitlyTrue(). Refactor a bunch of stuff to use the new method.\n\n* Clean up / improve JavaDoc in various places\n\n* Remove unused namespace args from methods in AddressingInHandler\n\n* Fix some potential NPEs in CommonsHTTPTransportSender\n\n* Comment unused code in HTTPSender\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@537322 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_150", "file": [{"additions": 10, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java", "sha": "6648ba9fda756d86eef677b57134ef7419e17b13", "changes": 21, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -29,7 +29,6 @@\n import org.apache.axis2.client.Options;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.handlers.AbstractHandler;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.util.LoggingControl;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -47,7 +46,7 @@\n \n     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n         // if another handler has already processed the addressing headers, do not do anything here.\n-        if (JavaUtils.isTrueExplicitly(msgContext.getProperty(IS_ADDR_INFO_ALREADY_PROCESSED))) {\n+        if (msgContext.isPropertyTrue(IS_ADDR_INFO_ALREADY_PROCESSED)) {\n             if (LoggingControl.debugLoggingAllowed && log.isDebugEnabled()) {\n                 log.debug(\n                         \"Another handler has processed the addressing headers. Nothing to do here.\");\n@@ -154,19 +153,19 @@ protected Options extractAddressingInformation(SOAPHeader header, MessageContext\n             SOAPHeaderBlock soapHeaderBlock = (SOAPHeaderBlock)addressingHeadersIt2.next();\n             if (!SOAP12Constants.SOAP_ROLE_NONE.equals(soapHeaderBlock.getRole())) {\n                 if (WSA_ACTION.equals(soapHeaderBlock.getLocalName()) && !ignoreAction) {\n-                    extractActionInformation(soapHeaderBlock, namespace, messageContext);\n+                    extractActionInformation(soapHeaderBlock, messageContext);\n                 } else if (WSA_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreTo) {\n                     extractToEPRInformation(soapHeaderBlock, messageContextOptions, header,\n                                             namespace);\n                 } else\n                 if (WSA_MESSAGE_ID.equals(soapHeaderBlock.getLocalName()) && !ignoreMessageID) {\n-                    extractMessageIDInformation(soapHeaderBlock, namespace, messageContext);\n+                    extractMessageIDInformation(soapHeaderBlock, messageContext);\n                 } else if (WSA_REPLY_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreReplyTo) {\n                     extractReplyToEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 } else if (WSA_FAULT_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreFaultTo) {\n                     extractFaultToEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 } else if (WSA_RELATES_TO.equals(soapHeaderBlock.getLocalName())) {\n-                    extractRelatesToInformation(soapHeaderBlock, namespace, messageContextOptions);\n+                    extractRelatesToInformation(soapHeaderBlock, messageContextOptions);\n                 } else if (WSA_FROM.equals(soapHeaderBlock.getLocalName()) && !ignoreFrom) {\n                     extractFromEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 }\n@@ -223,7 +222,6 @@ protected abstract void extractToEprReferenceParameters(EndpointReference toEPR,\n \n \n     private void extractRelatesToInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                             String addressingNamespace,\n                                              Options messageContextOptions) {\n         String address = soapHeaderBlock.getText();\n \n@@ -334,7 +332,7 @@ private void extractToEPRInformation(SOAPHeaderBlock soapHeaderBlock,\n     //soapaction. We compare that action to the WS-Addressing action, and if they are\n     //different we throw a fault.\n     private void extractActionInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                          String addressingNamespace, MessageContext messageContext)\n+                                          MessageContext messageContext)\n             throws AxisFault {\n         Options messageContextOptions = messageContext.getOptions();\n         String soapAction = messageContextOptions.getAction();\n@@ -373,7 +371,6 @@ private void extractActionInformation(SOAPHeaderBlock soapHeaderBlock,\n     }\n \n     private void extractMessageIDInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                             String addressingNamespace,\n                                              MessageContext messageContext) throws AxisFault {\n         messageContext.getOptions().setMessageId(soapHeaderBlock.getText());\n \n@@ -388,9 +385,11 @@ private void extractMessageIDInformation(SOAPHeaderBlock soapHeaderBlock,\n     /**\n      * Given the soap header block, this should extract the information within EPR.\n      *\n-     * @param headerBlock\n-     * @param epr\n-     * @param addressingNamespace\n+     * @param headerBlock a SOAP header which is of type EndpointReference\n+     * @param epr the EndpointReference to fill in with the extracted data\n+     * @param addressingNamespace the WSA namespace URI\n+     * @param messageContext the active MessageContext\n+     * @throws AxisFault if there is a problem\n      */\n     private void extractEPRInformation(SOAPHeaderBlock headerBlock, EndpointReference epr,\n                                        String addressingNamespace, MessageContext messageContext)", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java", "sha": "4cd4f9b2c1d1d0eb4304678136f4fda41250b819", "changes": 19, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -69,7 +69,7 @@ public void init(HandlerDescription arg0) {\n \n     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n         // it should be able to disable addressing by some one.\n-        if (Utils.isExplicitlyTrue(msgContext, DISABLE_ADDRESSING_FOR_OUT_MESSAGES)) {\n+        if (msgContext.isPropertyTrue(DISABLE_ADDRESSING_FOR_OUT_MESSAGES)) {\n             if (log.isTraceEnabled()) {\n                 log.trace(msgContext.getLogIDString() +\n                         \" Addressing is disabled. Not adding WS-Addressing headers.\");\n@@ -87,21 +87,18 @@ public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n                 Submission.WSA_NAMESPACE.equals(addressingVersionFromCurrentMsgCtxt);\n \n         // Determine whether to include optional addressing headers in the output.\n-        boolean includeOptionalHeaders = this.includeOptionalHeaders;\n-        Object includeHeadersPropery = msgContext.getProperty(INCLUDE_OPTIONAL_HEADERS);\n-        if (includeHeadersPropery != null) {\n-            includeOptionalHeaders = JavaUtils.isTrueExplicitly(includeHeadersPropery);\n-        }\n+        boolean includeOptionalHeaders = this.includeOptionalHeaders ||\n+                                            msgContext.isPropertyTrue(INCLUDE_OPTIONAL_HEADERS);\n \n         // Determine if a MustUnderstand attribute will be added to all headers in the\n         // addressing namespace.\n         boolean addMustUnderstandAttribute =\n-                Utils.isExplicitlyTrue(msgContext, ADD_MUST_UNDERSTAND_TO_ADDRESSING_HEADERS);\n+                msgContext.isPropertyTrue(ADD_MUST_UNDERSTAND_TO_ADDRESSING_HEADERS);\n \n         // what if there are addressing headers already in the message. Do you replace that or not?\n         // Lets have a parameter to control that. The default behavior is you won't replace addressing\n         // headers if there are any (this was the case so far).\n-        boolean replaceHeaders = Utils.isExplicitlyTrue(msgContext, REPLACE_ADDRESSING_HEADERS);\n+        boolean replaceHeaders = msgContext.isPropertyTrue(REPLACE_ADDRESSING_HEADERS);\n \n         WSAHeaderWriter writer = new WSAHeaderWriter(msgContext, isSubmissionNamespace,\n                                                      addMustUnderstandAttribute, replaceHeaders,\n@@ -251,8 +248,8 @@ private void processWSAAction() throws AxisFault {\n                                 \" processWSAAction: No action to add to header\");\n                     }\n                     // Fault unless validation has been explictily turned off\n-                    if (!Utils.isExplicitlyTrue(messageContext,\n-                                                AddressingConstants.DISABLE_OUTBOUND_ADDRESSING_VALIDATION))\n+                    if (!messageContext.isPropertyTrue(\n+                            AddressingConstants.DISABLE_OUTBOUND_ADDRESSING_VALIDATION))\n                     {\n                         throw new AxisFault(AddressingMessages.getMessage(\"outboundNoAction\"));\n                     }\n@@ -457,7 +454,7 @@ private void addToSOAPHeader(EndpointReference epr, String headerName) throws Ax\n         /**\n          * This will add reference parameters and/or reference properties in to the message\n          *\n-         * @param referenceInformation\n+         * @param referenceInformation a Map from QName -> OMElement\n          * @param parent               is the element to which the referenceparameters should be\n          *                             attached\n          */", "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java"}, {"additions": 24, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/context/MessageContext.java", "sha": "dc10f6e890d3646538612bd4445f410f58a1d411", "changes": 25, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -18,7 +18,6 @@\n \n import org.apache.axiom.attachments.Attachments;\n import org.apache.axiom.om.OMOutputFormat;\n-import org.apache.axiom.om.OMException;\n import org.apache.axiom.om.impl.MTOMConstants;\n import org.apache.axiom.om.impl.builder.StAXBuilder;\n import org.apache.axiom.om.util.StAXUtils;\n@@ -49,6 +48,7 @@\n import org.apache.axis2.util.MetaDataEntry;\n import org.apache.axis2.util.ObjectStateUtils;\n import org.apache.axis2.util.SelfManagedDataHolder;\n+import org.apache.axis2.util.JavaUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.neethi.Policy;\n@@ -949,6 +949,29 @@ public Object getProperty(String name) {\n         return null;\n     }\n \n+    /**\n+     * Check if a given property is true.  Will return false if the property\n+     * does not exist or is not an explicit \"true\" value.\n+     *\n+     * @param name name of the property to check\n+     * @return true if the property exists and is Boolean.TRUE, \"true\", 1, etc.\n+     */\n+    public boolean isPropertyTrue(String name) {\n+        return isPropertyTrue(name, false);\n+    }\n+\n+    /**\n+     * Check if a given property is true.  Will return the passed default if the property\n+     * does not exist.\n+     *\n+     * @param name name of the property to check\n+     * @param defaultVal the default value if the property doesn't exist\n+     * @return true if the property exists and is Boolean.TRUE, \"true\", 1, etc.\n+     */\n+    public boolean isPropertyTrue(String name, boolean defaultVal) {\n+        return JavaUtils.isTrueExplicitly(getProperty(name), defaultVal);\n+    }\n+    \n     /**\n      * Retrieves all property values. The order of search is as follows: search in\n      * my own options and then look in my context hierarchy. Since its possible", "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java", "sha": "07fc404d4ef141b7ec1cdf0371926811fcf1664c", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -114,8 +114,8 @@ public static SOAPEnvelope createSOAPMessage(MessageContext msgContext, InputStr\n                     if (msgContext.getSoapAction() == null) {\n                         type = HTTPConstants.MEDIA_TYPE_APPLICATION_XML;\n                     }\n-                } else if (msgContext.isDoingREST() && !JavaUtils.isTrueExplicitly(\n-                        msgContext.getProperty(Constants.Configuration.SOAP_RESPONSE_MEP))) {\n+                } else if (msgContext.isDoingREST() &&\n+                        !msgContext.isPropertyTrue(Constants.Configuration.SOAP_RESPONSE_MEP)) {\n                     type = HTTPConstants.MEDIA_TYPE_APPLICATION_XML;\n                 }\n             }", "filename": "modules/kernel/src/org/apache/axis2/transport/TransportUtils.java"}, {"additions": 26, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java", "sha": "6461c8b824768d87335880422abf788a0b828909", "changes": 40, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -102,11 +102,13 @@ public void setHttpVersion(String version) throws AxisFault {\n     }\n \n     /**\n-     * Helper method to Proxy and NTLM authentication\n+     * Helper method for Proxy and NTLM authentication\n      *\n-     * @param client\n-     * @param proxySetting\n-     * @param config\n+     * @param client HttpClient in which to place proxy config\n+     * @param proxySetting TransportOutDescription\n+     * @param config HostConfiguraiton in which to place proxy config\n+     * @param msgCtx the active MessageContext\n+     * @throws AxisFault in case of problems\n      */\n     protected void configProxyAuthentication(HttpClient client,\n                                              TransportOutDescription proxySetting,\n@@ -204,8 +206,9 @@ protected void configProxyAuthentication(HttpClient client,\n     /**\n      * Collect the HTTP header information and set them in the message context\n      *\n-     * @param method\n-     * @param msgContext\n+     * @param method HttpMethodBase from which to get information\n+     * @param msgContext the MessageContext in which to place the information... OR NOT!\n+     * @throws AxisFault if problems occur\n      */\n     protected void obtainHTTPHeaderInformation(HttpMethodBase method,\n                                                MessageContext msgContext) throws AxisFault {\n@@ -236,13 +239,15 @@ protected void obtainHTTPHeaderInformation(HttpMethodBase method,\n                         .setProperty(Constants.Configuration.CHARACTER_SET_ENCODING, charSetEnc);\n             } else {\n \n-                //Transport details will be stored in a HashMap so that anybody interested can retriece them\n+                // Transport details will be stored in a HashMap so that anybody interested can\n+                // retrieve them\n                 HashMap transportInfoMap = new HashMap();\n                 transportInfoMap.put(Constants.Configuration.CONTENT_TYPE, contentType);\n                 transportInfoMap.put(Constants.Configuration.CHARACTER_SET_ENCODING, charSetEnc);\n \n                 //the HashMap is stored in the outgoing message.\n-                msgContext.setProperty(Constants.Configuration.TRANSPORT_INFO_MAP, transportInfoMap);\n+                msgContext.setProperty(Constants.Configuration.TRANSPORT_INFO_MAP,\n+                                       transportInfoMap);\n             }\n         }\n \n@@ -305,10 +310,16 @@ protected void processResponse(HttpMethodBase httpMethod,\n     }\n \n     public abstract void send(MessageContext msgContext, URL url, String soapActionString)\n-            throws AxisFault, IOException;\n+            throws IOException;\n \n     /**\n      * getting host configuration to support standard http/s, proxy and NTLM support\n+     *\n+     * @param client active HttpClient\n+     * @param msgCtx active MessageContext\n+     * @param targetURL the target URL\n+     * @return a HostConfiguration set up with proxy information\n+     * @throws AxisFault if problems occur\n      */\n     protected HostConfiguration getHostConfiguration(HttpClient client,\n                                                      MessageContext msgCtx,\n@@ -334,7 +345,8 @@ protected HostConfiguration getHostConfiguration(HttpClient client,\n         HostConfiguration config = new HostConfiguration();\n \n         // one might need to set his own socket factory. Let's allow that case as well.\n-        Protocol protocolHandler = (Protocol) msgCtx.getOptions().getProperty(HTTPConstants.CUSTOM_PROTOCOL_HANDLER);\n+        Protocol protocolHandler =\n+                (Protocol)msgCtx.getOptions().getProperty(HTTPConstants.CUSTOM_PROTOCOL_HANDLER);\n \n         // setting the real host configuration\n         // I assume the 90% case, or even 99% case will be no protocol handler case. \n@@ -442,9 +454,9 @@ protected void setAuthenticationInfo(HttpClient agent,\n     /**\n      * This is used to get the dynamically set time out values from the\n      * message context. If the values are not available or invalid then\n-     * teh default values or the values set by teh configuration will be used\n+     * the default values or the values set by the configuration will be used\n      *\n-     * @param msgContext\n+     * @param msgContext the active MessageContext\n      */\n     protected void getTimeoutValues(MessageContext msgContext) {\n         try {\n@@ -555,12 +567,12 @@ protected void executeMethod(HttpClient httpClient, MessageContext msgContext, U\n         addCustomHeaders(method, msgContext);\n \n         // add compression headers if needed\n-        if (Utils.isExplicitlyTrue(msgContext, HTTPConstants.MC_ACCEPT_GZIP)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.MC_ACCEPT_GZIP)) {\n             method.addRequestHeader(HTTPConstants.HEADER_ACCEPT_ENCODING,\n                     HTTPConstants.COMPRESSION_GZIP);\n         }\n \n-        if (Utils.isExplicitlyTrue(msgContext, HTTPConstants.MC_GZIP_REQUEST)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.MC_GZIP_REQUEST)) {\n             method.addRequestHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n                     HTTPConstants.COMPRESSION_GZIP);\n         }", "filename": "modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java"}, {"additions": 1, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java", "sha": "b6593e4785612a3e7b943156424e816b23b23785", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -74,8 +74,7 @@ public boolean isRepeatable() {\n     }\n \n     public void writeRequest(OutputStream outStream) throws IOException {\n-        Object gzip = messageContext.getOptions().getProperty(\n-                HTTPConstants.MC_GZIP_REQUEST);\n+        Object gzip = messageContext.getOptions().getProperty(HTTPConstants.MC_GZIP_REQUEST);\n         if (gzip != null && JavaUtils.isTrueExplicitly(gzip) && chunked) {\n             outStream = new GZIPOutputStream(outStream);\n         }", "filename": "modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java"}, {"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java", "sha": "4b180f04b345cac06c980a2126013618172a5eac", "changes": 16, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -36,7 +36,6 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import javax.xml.namespace.QName;\n import javax.xml.stream.FactoryConfigurationError;\n import javax.xml.stream.XMLStreamException;\n import java.io.IOException;\n@@ -50,7 +49,6 @@\n public class CommonsHTTPTransportSender extends AbstractHandler implements\n         TransportSender {\n \n-\n     protected static final String PROXY_HOST_NAME = \"proxy_host\";\n \n     protected static final String PROXY_PORT = \"proxy_port\";\n@@ -240,8 +238,10 @@ private void sendUsingOutputStream(MessageContext msgContext,\n         OutTransportInfo transportInfo = (OutTransportInfo) msgContext\n                 .getProperty(Constants.OUT_TRANSPORT_INFO);\n \n+        if (transportInfo == null) throw new AxisFault(\"No transport info in MessageContext\");\n+\n         ServletBasedOutTransportInfo servletBasedOutTransportInfo = null;\n-        if (transportInfo != null && transportInfo instanceof ServletBasedOutTransportInfo) {\n+        if (transportInfo instanceof ServletBasedOutTransportInfo) {\n             servletBasedOutTransportInfo =\n                     (ServletBasedOutTransportInfo) transportInfo;\n             List customHheaders = (List) msgContext.getProperty(HTTPConstants.HTTP_HEADERS);\n@@ -259,15 +259,17 @@ private void sendUsingOutputStream(MessageContext msgContext,\n \n         format.setAutoCloseWriter(true);\n \n-        MessageFormatter messageFormatter = TransportUtils\n-                .getMessageFormatter(msgContext);\n+        MessageFormatter messageFormatter = TransportUtils.getMessageFormatter(msgContext);\n+        if (messageFormatter == null) throw new AxisFault(\"No MessageFormatter in MessageContext\");\n+\n         transportInfo.setContentType(\n                 messageFormatter.getContentType(msgContext, format, findSOAPAction(msgContext)));\n \n         Object gzip = msgContext.getOptions().getProperty(HTTPConstants.MC_GZIP_RESPONSE);\n         if (gzip != null && JavaUtils.isTrueExplicitly(gzip)) {\n-            servletBasedOutTransportInfo.addHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n-                                                   HTTPConstants.COMPRESSION_GZIP);\n+            if (servletBasedOutTransportInfo != null)\n+                servletBasedOutTransportInfo.addHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n+                                                       HTTPConstants.COMPRESSION_GZIP);\n             try {\n                 out = new GZIPOutputStream(out);\n                 out.write(messageFormatter.getBytes(msgContext, format));", "filename": "modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java"}, {"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java", "sha": "439177d1e5acd027986a283701819dde370cda8d", "changes": 19, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -17,23 +17,18 @@\n package org.apache.axis2.transport.http;\n \n \n-import org.apache.axiom.soap.SOAP11Constants;\n-import org.apache.axiom.soap.SOAP12Constants;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.i18n.Messages;\n import org.apache.axis2.transport.MessageFormatter;\n import org.apache.axis2.transport.TransportUtils;\n import org.apache.commons.httpclient.Header;\n import org.apache.commons.httpclient.HttpClient;\n+import org.apache.commons.httpclient.HttpMethod;\n import org.apache.commons.httpclient.HttpMethodBase;\n import org.apache.commons.httpclient.HttpStatus;\n import org.apache.commons.httpclient.HttpVersion;\n-import org.apache.commons.httpclient.URI;\n-import org.apache.commons.httpclient.URIException;\n-import org.apache.commons.httpclient.HttpMethod;\n import org.apache.commons.httpclient.methods.DeleteMethod;\n import org.apache.commons.httpclient.methods.GetMethod;\n import org.apache.commons.httpclient.methods.PostMethod;\n@@ -42,15 +37,14 @@\n import org.apache.commons.logging.LogFactory;\n \n import java.io.IOException;\n-import java.net.MalformedURLException;\n import java.net.URL;\n \n public class HTTPSender extends AbstractHTTPSender {\n \n     private static final Log log = LogFactory.getLog(HTTPSender.class);\n \n     public void send(MessageContext msgContext, URL url, String soapActionString)\n-            throws MalformedURLException, AxisFault, IOException {\n+            throws IOException {\n \n         // execute the HtttpMethodBase - a connection manager can be given for\n         // handle multiple\n@@ -113,8 +107,7 @@ private void sendViaGet(MessageContext msgContext, URL url, String soapActiionSt\n     }\n \n     private void cleanup(MessageContext msgContext, HttpMethod method) {\n-        Object autoClose = msgContext.getOptions().getProperty(HTTPConstants.AUTO_RELEASE_CONNECTION);\n-        if (autoClose != null && JavaUtils.isTrueExplicitly(autoClose)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.AUTO_RELEASE_CONNECTION)) {\n             method.releaseConnection();\n         }\n     }\n@@ -159,12 +152,14 @@ private void sendViaPost(MessageContext msgContext, URL url,\n \n         HttpClient httpClient = getHttpClient(msgContext);\n \n+/*  What's up with this, it never gets used anywhere?? --Glen\n         String charEncoding =\n                 (String) msgContext.getProperty(Constants.Configuration.CHARACTER_SET_ENCODING);\n \n         if (charEncoding == null) {\n             charEncoding = MessageContext.DEFAULT_CHAR_SET_ENCODING;\n         }\n+*/\n \n         PostMethod postMethod = new PostMethod();\n         MessageFormatter messageFormatter =\n@@ -212,14 +207,14 @@ private void sendViaPut(MessageContext msgContext, URL url,\n \n         HttpClient httpClient = getHttpClient(msgContext);\n \n+/*  Same deal - this value never gets used, why is it here? --Glen\n         String charEncoding =\n                 (String) msgContext.getProperty(Constants.Configuration.CHARACTER_SET_ENCODING);\n \n         if (charEncoding == null) {\n             charEncoding = MessageContext.DEFAULT_CHAR_SET_ENCODING;\n         }\n-\n-        // TODO - Do something with charEncoding???\n+*/\n \n         PutMethod putMethod = new PutMethod();\n         MessageFormatter messageFormatter =", "filename": "modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java"}, {"additions": 7, "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/util/Utils.java", "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/util/Utils.java", "sha": "cc5b50b0c7f2223ab880c30dc623a788031086c7", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/Utils.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489", "patch": "@@ -342,6 +342,13 @@ public static boolean isLatest(String moduleVersion, String currentDefaultVersio\n         }\n     }\n \n+    /**\n+     * Check if a MessageContext property is true.\n+     * @param messageContext the MessageContext\n+     * @param propertyName the property name\n+     * @return true if the property is Boolean.TRUE, \"true\", 1, etc. or false otherwise\n+     * @deprecated please use MessageContext.isTrue(propertyName) instead\n+     */\n     public static boolean isExplicitlyTrue(MessageContext messageContext, String propertyName) {\n         Object flag = messageContext.getProperty(propertyName);\n         return JavaUtils.isTrueExplicitly(flag);", "filename": "modules/kernel/src/org/apache/axis2/util/Utils.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/c57258800611ac4a05163e5f224ceff14c00aa6a", "parent": "https://github.com/apache/axis2-java/commit/dddc3b325fd9712bc9f2860f9b38c9738970fc23", "message": "- Remove generated target directory \n- Remove unnecessary dependency in java2wsdl pom\n- Get JMSEchoRawXMLTest test case working with njms package\n- Fix an NPE in AxisEngine\n- Remove unused constant in HTTPConstants.java\n- Fix getEPRsForService in njms/JMSListener\n- Most importantly, download activemq and run the unit test always.\n\nNext step: make sure nothing is broken, get rid of jms/* and then rename njms to jms.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@447298 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_151", "file": [{"additions": 5, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/project.xml", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/project.xml", "sha": "5fa75fa906ff17426317d5bbe4d512f6314e74b6", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -332,6 +332,11 @@\n \t  <artifactId>log4j</artifactId>\n \t  <version>${log4j.version}</version>\n \t</dependency>\n+        <dependency>\n+          <groupId>activemq</groupId>\n+          <artifactId>activemq</artifactId>\n+          <version>4.0.1</version>\n+        </dependency>\n         <dependency>\n             <groupId>springframework</groupId>\n             <artifactId>spring-core</artifactId>\n@@ -394,7 +399,6 @@\n                 <exclude>**/*InteropStubTest.class</exclude>\n                 <exclude>**org/apache/axis2/mail/*.class</exclude>\n \t\t<exclude>**org/apache/axis2/transport/DualChannelRequestResponseRawXMLTest.class</exclude>\n-                <exclude>**org/apache/axis2/jms/*.class</exclude>\n                 <exclude>**org/apache/axis2/soap12testing/soap12testsuite/*.class</exclude>\n                 <exclude>**/ScenarioST1Test.class</exclude>\n                 <exclude>**/samples/wsdl/perf2/*.class</exclude>", "filename": "modules/integration/project.xml"}, {"additions": 18, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java", "sha": "2d77cfdc5a00a3028c0720e0d76d7f0dd7836b5b", "changes": 50, "status": "modified", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -17,24 +17,25 @@\n package org.apache.axis2.integration;\r\n \r\n import org.apache.axis2.AxisFault;\r\n+import org.apache.axis2.Constants;\r\n+import org.apache.axis2.engine.ListenerManager;\r\n+import org.apache.axis2.transport.njms.JMSListener;\r\n import org.apache.axis2.context.ConfigurationContext;\r\n import org.apache.axis2.context.ConfigurationContextFactory;\r\n import org.apache.axis2.context.ServiceGroupContext;\r\n import org.apache.axis2.description.AxisService;\r\n import org.apache.axis2.description.AxisServiceGroup;\r\n-import org.apache.axis2.transport.jms.JNDIVendorAdapter;\r\n-import org.apache.axis2.transport.jms.SimpleJMSListener;\r\n+import org.apache.axis2.description.TransportInDescription;\r\n import org.apache.commons.logging.Log;\r\n import org.apache.commons.logging.LogFactory;\r\n+import org.apache.activemq.broker.BrokerService;\r\n \r\n import javax.xml.namespace.QName;\r\n import java.io.File;\r\n import java.util.HashMap;\r\n \r\n public class UtilsJMSServer {\r\n-    private static int count = 0;\r\n-\r\n-    private static SimpleJMSListener receiver;\r\n+    private static JMSListener receiver;\r\n \r\n     public static final int TESTING_PORT = 5555;\r\n \r\n@@ -60,52 +61,37 @@ public static synchronized void unDeployService(QName service)\n     }\r\n \r\n     public static synchronized void start() throws Exception {\r\n-        if (count == 0) {\r\n-\r\n-            HashMap connectorMap = new HashMap();\r\n-            HashMap cfMap = new HashMap();\r\n-            String destination = \"dynamicQueues/BAR\";\r\n-            String username = null;\r\n-            String password = null;\r\n-            boolean doThreads = true;\r\n-\r\n-            cfMap.put(JNDIVendorAdapter.CONTEXT_FACTORY,\r\n-                    \"org.activemq.jndi.ActiveMQInitialContextFactory\");\r\n-            cfMap.put(JNDIVendorAdapter.PROVIDER_URL, \"tcp://localhost:61616\");\r\n-\r\n-            // start JMS server\r\n+            // start JMS Listener\r\n             File file = new File(REPOSITORY_JMS);\r\n             System.out.println(file.getAbsoluteFile());\r\n             if (!file.exists()) {\r\n                 throw new Exception(\"Repository directory does not exist\");\r\n             }\r\n \r\n-            ConfigurationContext er = ConfigurationContextFactory.createConfigurationContextFromFileSystem(file\r\n+            ConfigurationContext configurationContext = ConfigurationContextFactory.createConfigurationContextFromFileSystem(file\r\n                     .getAbsolutePath(),REPOSITORY_JMS + \"/conf/axis2.xml\");\r\n             try {\r\n                 Thread.sleep(2000);\r\n             } catch (InterruptedException e1) {\r\n                 throw new AxisFault(\"Thread interuptted\", e1);\r\n             }\r\n-            receiver = new SimpleJMSListener(\r\n-                    REPOSITORY_JMS,\r\n-                    connectorMap, cfMap, destination, username, password,\r\n-                    doThreads);\r\n+            receiver = new JMSListener();\r\n+            ListenerManager listenerManager = configurationContext.getListenerManager();\r\n+            TransportInDescription trsIn = configurationContext.getAxisConfiguration().getTransportIn(new QName(Constants.TRANSPORT_JMS));\r\n+            trsIn.setReceiver(receiver);\r\n+            if (listenerManager == null) {\r\n+                listenerManager = new ListenerManager();\r\n+                listenerManager.init(configurationContext);\r\n+            }\r\n+            listenerManager.addListener(trsIn, true);\r\n+            receiver.init(configurationContext, trsIn);\r\n             receiver.start();\r\n-\r\n-        }\r\n-        count++;\r\n     }\r\n \r\n     public static synchronized void stop() {\r\n         try {\r\n-            if (count == 1) {\r\n                 receiver.stop();\r\n-                count = 0;\r\n                 System.out.print(\"Server stopped .....\");\r\n-            } else {\r\n-                count--;\r\n-            }\r\n         } catch (Exception e) {\r\n             log.error(e.getMessage(), e);\r\n         }\r", "filename": "modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java"}, {"additions": 25, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java", "sha": "e48c90daabf0028f9ba78badab006ce1b769ab24", "changes": 39, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -23,15 +23,15 @@\n import org.apache.axiom.om.OMFactory;\n import org.apache.axiom.om.OMNamespace;\n import org.apache.axiom.om.util.StAXUtils;\n-import org.apache.axiom.soap.SOAPFactory;\n import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPFactory;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.wsdl.WSDLConstants;\n+import org.apache.axis2.transport.njms.JMSConstants;\n import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.OperationClient;\n import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n-import org.apache.axis2.client.OperationClient;\n import org.apache.axis2.client.async.AsyncResult;\n import org.apache.axis2.client.async.Callback;\n import org.apache.axis2.context.ConfigurationContext;\n@@ -40,27 +40,29 @@\n import org.apache.axis2.description.AxisOperation;\n import org.apache.axis2.description.AxisService;\n import org.apache.axis2.description.OutInAxisOperation;\n-import org.apache.axis2.description.TransportOutDescription;\n-import org.apache.axis2.description.TransportInDescription;\n-import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.description.Parameter;\n import org.apache.axis2.engine.Echo;\n import org.apache.axis2.integration.UtilServer;\n import org.apache.axis2.integration.UtilsJMSServer;\n import org.apache.axis2.util.Utils;\n+import org.apache.axis2.wsdl.WSDLConstants;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.activemq.broker.BrokerService;\n \n import javax.xml.namespace.QName;\n-import javax.xml.stream.XMLOutputFactory;\n import javax.xml.stream.XMLStreamException;\n \n public class JMSEchoRawXMLTest extends TestCase {\n     private EndpointReference targetEPR =\n-            new EndpointReference(\"jms:/dynamicQueues/BAR?ConnectionFactoryJNDIName=ConnectionFactory&java.naming.factory.initial=org.activemq.jndi.ActiveMQInitialContextFactory&java.naming.provider.url=tcp://localhost:61616\");\n+            new EndpointReference(\"jms:/EchoXMLService?\"+JMSConstants.CONFAC_JNDI_NAME_PARAM+\"=ConnectionFactory&java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&java.naming.provider.url=tcp://localhost:61616\");\n     private QName serviceName = new QName(\"EchoXMLService\");\n     private QName operationName = new QName(\"echoOMElement\");\n \n-    private AxisService service;\n+\n+    String destination = \"EchoXMLService\";\n+    BrokerService broker = new BrokerService();\n+\n     private AxisService clientService;\n     private ConfigurationContext configContext;\n \n@@ -76,13 +78,21 @@ public JMSEchoRawXMLTest(String testName) {\n     }\n \n     protected void setUp() throws Exception {\n+        // Start ActiveMQ embedded broker\n+        broker.addConnector(\"tcp://localhost:61616\");\n+        broker.start();\n+\n         UtilsJMSServer.start();\n \n         //create and deploy the service\n-        service =\n-                Utils.createSimpleService(serviceName,\n-                        Echo.class.getName(),\n-                        operationName);\n+        AxisService service = Utils.createSimpleService(serviceName,\n+                Echo.class.getName(),\n+                operationName);\n+        service.getExposedTransports().add(Constants.TRANSPORT_JMS);\n+        Parameter param = new Parameter();\n+        param.setName(JMSConstants.DEST_PARAM);\n+        param.setValue(destination);\n+        service.getParameters().add(param);\n         UtilsJMSServer.deployService(service);\n         clientService = Utils.createSimpleServiceforClient(serviceName,\n                 Echo.class.getName(),\n@@ -92,6 +102,7 @@ protected void setUp() throws Exception {\n \n     protected void tearDown() throws Exception {\n         UtilsJMSServer.stop();\n+        broker.stop();\n     }\n \n     private OMElement createPayload() {\n@@ -190,7 +201,7 @@ public void testEchoXMLCompleteSync() throws Exception {\n                 System.out));\n \n     }\n-\n+    \n     public void testEchoXMLSyncMC() throws Exception {\n         ConfigurationContext configContext =\n                 ConfigurationContextFactory.createConfigurationContextFromFileSystem(Constants.TESTING_REPOSITORY, Constants.TESTING_REPOSITORY + \"/conf/axis2.xml\");", "filename": "modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml", "sha": "256fbc97e17ea01a43b0ca2c262976907af97be9", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -60,13 +60,15 @@\n         <!--<parameter name=\"hostname\" locked=\"false\">tcp://myApp.com/ws</parameter>-->\r\n     </transportReceiver>\r\n \r\n-    <!--Uncomment this if you want JMS transport support-->\r\n-    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.jms.SimpleJMSListener\">\r\n-        <parameter name=\"transport.jms.Destination\" locked=\"false\">dynamicQueues/FOO</parameter>\r\n-        <parameter name=\"java.naming.factory.initial\" locked=\"false\">org.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n-        <parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>\r\n+    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.njms.JMSListener\">\r\n+        <parameter name=\"default\" locked=\"false\">        \t        \t\r\n+        \t<parameter name=\"java.naming.factory.initial\" locked=\"false\">org.apache.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n+        \t<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>        \t\r\n+        \t<parameter name=\"transport.jms.ConnectionFactoryJNDIName\" locked=\"false\">QueueConnectionFactory</parameter>\r\n+        </parameter>\r\n     </transportReceiver>\r\n \r\n+\r\n     <!-- ================================================= -->\r\n     <!-- Transport Outs -->\r\n     <!-- ================================================= -->\r\n@@ -76,7 +78,7 @@\n     <transportSender name=\"local\"\r\n                      class=\"org.apache.axis2.transport.local.LocalTransportSender\"/>\r\n     <transportSender name=\"jms\"\r\n-                     class=\"org.apache.axis2.transport.jms.JMSSender\"/>\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n     <transportSender name=\"http\"\r\n                      class=\"org.apache.axis2.transport.http.CommonsHTTPTransportSender\">\r\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r", "filename": "modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml"}, {"additions": 8, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml", "sha": "1f8a819141df00522ba5e207b27256026ff16282", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -60,13 +60,13 @@\n         <!--<parameter name=\"hostname\" locked=\"false\">tcp://myApp.com/ws</parameter>-->\r\n     </transportReceiver>\r\n \r\n-    <!--Uncomment this if you want JMS transport support-->\r\n-    <!--<transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.jms.SimpleJMSListener\">-->\r\n-    <!--<parameter name=\"transport.jms.Destination\" locked=\"false\">dynamicQueues/FOO</parameter>-->\r\n-    <!--<parameter name=\"java.naming.factory.initial\" locked=\"false\">-->\r\n-    <!--org.activemq.jndi.ActiveMQInitialContextFactory</parameter>-->\r\n-    <!--<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>-->\r\n-    <!--</transportReceiver>-->\r\n+    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.njms.JMSListener\">\r\n+        <parameter name=\"default\" locked=\"false\">        \t        \t\r\n+        \t<parameter name=\"java.naming.factory.initial\" locked=\"false\">org.apache.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n+        \t<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>        \t\r\n+        \t<parameter name=\"transport.jms.ConnectionFactoryJNDIName\" locked=\"false\">QueueConnectionFactory</parameter>\r\n+        </parameter>\r\n+    </transportReceiver>\r\n \r\n     <!-- ================================================= -->\r\n     <!-- Transport Outs -->\r\n@@ -77,7 +77,7 @@\n     <transportSender name=\"local\"\r\n                      class=\"org.apache.axis2.transport.local.LocalTransportSender\"/>\r\n     <transportSender name=\"jms\"\r\n-                     class=\"org.apache.axis2.transport.jms.JMSSender\"/>\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n     <transportSender name=\"http\"\r\n                      class=\"org.apache.axis2.transport.http.CommonsHTTPTransportSender\">\r\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r", "filename": "modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/java2wsdl/pom.xml", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/java2wsdl/pom.xml", "sha": "0b0a607c4d6e79cf9301827827dd83bc24045722", "changes": 4, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/java2wsdl/pom.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -64,10 +64,6 @@\n       <groupId>javax.mail</groupId>\n       <artifactId>mail</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.geronimo.specs</groupId>\n-      <artifactId>geronimo-jms_1.1_spec</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>jaxen</groupId>\n       <artifactId>jaxen</artifactId>", "filename": "modules/java2wsdl/pom.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/conf/axis2.xml", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/conf/axis2.xml", "sha": "12a23d6ced51d583f7222ffd0907266ae5e34029", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/conf/axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -128,6 +128,8 @@\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r\n         <parameter name=\"Transfer-Encoding\" locked=\"false\">chunked</parameter>\r\n     </transportSender>\r\n+    <transportSender name=\"jms\"\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n \r\n     <!-- Uncomment this one with the appropriate papameters to enable the SMTP transport Receiver\r\n    <transportSender name=\"mailto\" class=\"org.apache.axis2.transport.mail.MailTransportSender\">\r", "filename": "modules/kernel/conf/axis2.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java", "sha": "d0c7d9454b1a148b9a2fb5f91406df09157e1af1", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -630,6 +630,9 @@ public void send(MessageContext msgContext) throws AxisFault {\n \n             // write the Message to the Wire\n             TransportOutDescription transportOut = msgContext.getTransportOut();\n+            if(transportOut == null) {\n+                throw new AxisFault(\"Transport out has not been set\");\n+            }\n             TransportSender sender = transportOut.getSender();\n             // This boolean property only used in client side fireAndForget invocation\n             //It will set a property into message context and if some one has set the", "filename": "modules/kernel/src/org/apache/axis2/engine/AxisEngine.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java", "sha": "e670e27f6770cf89ae13b5e292473ba716fffdaa", "changes": 5, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -270,11 +270,6 @@\n      */\n     public static final String HEADER_COOKIE = \"Cookie\";\n \n-    /**\n-     * Field HEADER_CONTENT_TYPE_JMS\n-     */\n-    public static final String HEADER_CONTENT_TYPE_JMS = \"ContentType\";\n-\n     /**\n      * Field HEADER_CONTENT_TYPE\n      */", "filename": "modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java"}, {"additions": 9, "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java", "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java", "sha": "4ea7eda0417ab60827dad3f1757dfaad3b6a8262", "changes": 11, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a", "patch": "@@ -117,7 +117,6 @@ public void init(ConfigurationContext axisConf,\n \n         while (services.hasNext()) {\n             AxisService service = (AxisService) services.next();\n-            boolean process = service.isEnableAllTransports();\n             if (JMSUtils.isJMSService(service)) {\n                 processService(service);\n             }\n@@ -323,7 +322,11 @@ public void stop() {\n      * @throws AxisFault not used\n      */\n     public EndpointReference[] getEPRsForService(String serviceName, String ip) throws AxisFault {\n-          return new EndpointReference[]{new EndpointReference((String) serviceNameToEprMap.get(serviceName))};\n+        //Strip out the operation name\n+        if (serviceName.indexOf('/') != -1) {\n+            serviceName = serviceName.substring(0, serviceName.indexOf('/'));\n+        }\n+        return new EndpointReference[]{new EndpointReference((String) serviceNameToEprMap.get(serviceName))};\n     }\n \n     /**\n@@ -465,4 +468,8 @@ public boolean isParameterLocked(String parameterName) {\n         public void serviceGroupUpdate(AxisEvent event, AxisServiceGroup serviceGroup) {\n         }\n     }\n+\n+    public ConfigurationContext getConfigurationContext() {\n+        return this.axisConf;\n+    }\n }", "filename": "modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java"}, {"additions": 0, "raw_url": "https://github.com/apache/axis2-java/raw/dddc3b325fd9712bc9f2860f9b38c9738970fc23/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml", "blob_url": "https://github.com/apache/axis2-java/blob/dddc3b325fd9712bc9f2860f9b38c9738970fc23/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml", "sha": "266ee5467a41e4bbd384418bae2b2a153813161d", "changes": 17, "status": "removed", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml?ref=dddc3b325fd9712bc9f2860f9b38c9738970fc23", "patch": "@@ -1,17 +0,0 @@\n-<wsdl:definitions xmlns:axis2=\"http://test.java2wsdl.maven2.axis2.apache.org\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:ns1=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" targetNamespace=\"http://test.java2wsdl.maven2.axis2.apache.org\"><wsdl:types><xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ax21=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\" attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\">\n-<xs:element name=\"add\">\n-<xs:complexType>\n-<xs:sequence>\n-<xs:element name=\"p1\" type=\"xs:int\" />\n-<xs:element name=\"p2\" type=\"xs:int\" />\n-</xs:sequence>\n-</xs:complexType>\n-</xs:element>\n-<xs:element name=\"addResponse\">\n-<xs:complexType>\n-<xs:sequence>\n-<xs:element name=\"return\" type=\"xs:int\" />\n-</xs:sequence>\n-</xs:complexType>\n-</xs:element>\n-</xs:schema></wsdl:types><wsdl:message name=\"addMessage\"><wsdl:part name=\"part1\" element=\"ns1:add\" /></wsdl:message><wsdl:message name=\"addResponseMessage\"><wsdl:part name=\"part1\" element=\"ns1:addResponse\" /></wsdl:message><wsdl:portType name=\"AdderPortType\"><wsdl:operation name=\"add\"><wsdl:input message=\"axis2:addMessage\" /><wsdl:output message=\"axis2:addResponseMessage\" /></wsdl:operation></wsdl:portType><wsdl:binding name=\"AdderSOAP11Binding\" type=\"axis2:AdderPortType\"><soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\" /><wsdl:operation name=\"add\"><soap:operation soapAction=\"urn:add\" style=\"document\" /><wsdl:input><soap:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:input><wsdl:output><soap:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:output></wsdl:operation></wsdl:binding><wsdl:binding name=\"AdderSOAP12Binding\" type=\"axis2:AdderPortType\"><soap12:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\" /><wsdl:operation name=\"add\"><soap12:operation soapAction=\"urn:add\" style=\"document\" /><wsdl:input><soap12:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:input><wsdl:output><soap12:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:output></wsdl:operation></wsdl:binding><wsdl:service name=\"Adder\"><wsdl:port name=\"AdderSOAP11port\" binding=\"axis2:AdderSOAP11Binding\"><soap:address location=\"http://localhost:8080/axis2/services/Adder\" /></wsdl:port><wsdl:port name=\"AdderSOAP12port\" binding=\"axis2:AdderSOAP12Binding\"><soap12:address location=\"http://localhost:8080/axis2/services/Adder\" /></wsdl:port></wsdl:service></wsdl:definitions>\n\\ No newline at end of file", "filename": "modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/32c609c3351b0f0785e59b66057977ddf694aca8", "parent": "https://github.com/apache/axis2-java/commit/4a9b328cec8fdce546839f1e35a7dd7ca453583e", "message": "interesting piece of code. This was throwing NPEs and contained a return statement inside finally. \n\nAnyway, this lead to me another question. What if the passed value is a null? According to javadoc of the compare method, if the method can not be compared, then one should throw a ClasscastException. I had no option than to throw a ClasscastException even when the passed object is null. \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@452313 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_152", "file": [{"additions": 73, "raw_url": "https://github.com/apache/axis2-java/raw/32c609c3351b0f0785e59b66057977ddf694aca8/modules/adb/src/org/apache/axis2/databinding/types/UnsignedLong.java", "blob_url": "https://github.com/apache/axis2-java/blob/32c609c3351b0f0785e59b66057977ddf694aca8/modules/adb/src/org/apache/axis2/databinding/types/UnsignedLong.java", "sha": "b58e9c9756da925274815ecc6b7e76931944842d", "changes": 175, "status": "modified", "deletions": 102, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb/src/org/apache/axis2/databinding/types/UnsignedLong.java?ref=32c609c3351b0f0785e59b66057977ddf694aca8", "patch": "@@ -19,6 +19,7 @@\n // All operations behave as if BigIntegers were represented in two's-complement notation.\n // In its place, consider using primitive type long (which is already the right size) to hold the data.\n // This class can hide the fact that the data is stored in a signed entity, by careful implementation of the class' methods.\n+\n import java.math.BigInteger;\n \n /**\n@@ -29,8 +30,8 @@\n public class UnsignedLong extends java.lang.Number implements Comparable {\n \n     private static final long serialVersionUID = -5919942584284897583L;\n-    \n-\tprotected BigInteger lValue = BigInteger.ZERO;\n+\n+    protected BigInteger lValue = BigInteger.ZERO;\n     private static BigInteger MAX = new BigInteger(\"18446744073709551615\"); // max unsigned long\n \n     public UnsignedLong() {\n@@ -45,34 +46,33 @@ public UnsignedLong(BigInteger value) throws NumberFormatException {\n     }\n \n     public UnsignedLong(long lValue) throws IllegalArgumentException {\n-\t// new UnsignedLong( 0xffffffffffffffffL )\n-\t// should not throw any Exception because, as an UnsignedLong, it is in range and nonnegative.\n+        // new UnsignedLong( 0xffffffffffffffffL )\n+        // should not throw any Exception because, as an UnsignedLong, it is in range and nonnegative.\n         setValue(BigInteger.valueOf(lValue));\n     }\n \n     public UnsignedLong(String stValue) throws NumberFormatException {\n \n-\t// If stValue starts with a minus sign, that will be acceptable to the BigInteger constructor,\n-\t// but it is not acceptable to us.\n-\t// Once encoded into binary, it is too late to detect that the client intended a negative integer.\n-\t// That detection must be performed here.\n-\ttry {\n-\t    if (stValue.charAt(0) == '\\u002d')\n-\t    {\n-\t\tthrow new NumberFormatException(\"A String that starts with a minus sign is not a valid representation of an UnsignedLong.\");\n-\t    }\n-\t    setValue(new BigInteger(stValue));\n-\t}\n+        // If stValue starts with a minus sign, that will be acceptable to the BigInteger constructor,\n+        // but it is not acceptable to us.\n+        // Once encoded into binary, it is too late to detect that the client intended a negative integer.\n+        // That detection must be performed here.\n+        try {\n+            if (stValue.charAt(0) == '\\u002d') {\n+                throw new NumberFormatException(\"A String that starts with a minus sign is not a valid representation of an UnsignedLong.\");\n+            }\n+            setValue(new BigInteger(stValue));\n+        }\n \n-\tcatch ( NumberFormatException numberFormatException ) {\n-\t    throw numberFormatException;\n-\t}\n+        catch (NumberFormatException numberFormatException) {\n+            throw numberFormatException;\n+        }\n \n-\tcatch ( IndexOutOfBoundsException indexOutOfBoundsException ) {\n-\t    // This could happen if stValue is empty when we attempt to detect a minus sign.\n-\t    // From the client's point of view, the empty String should cause a NumberFormatException.\n-\t    throw new NumberFormatException(\"An empty string is not a valid representation of an UnsignedLong.\");\n-\t}\n+        catch (IndexOutOfBoundsException indexOutOfBoundsException) {\n+            // This could happen if stValue is empty when we attempt to detect a minus sign.\n+            // From the client's point of view, the empty String should cause a NumberFormatException.\n+            throw new NumberFormatException(\"An empty string is not a valid representation of an UnsignedLong.\");\n+        }\n \n     }\n \n@@ -87,14 +87,14 @@ private void setValue(BigInteger val) {\n \n     public static boolean isValid(BigInteger value) {\n \n-\t// Converts this BigInteger to a long.\n-\t// This conversion is analogous to a narrowing primitive conversion from long to int as defined in the Java Language Specification:\n-\t// if this BigInteger is too big to fit in a long, only the low-order 64 bits are returned.\n-\t// Note that this conversion can lose information about the overall magnitude of the BigInteger value as well as return a result with the opposite sign.\n-\tlong unsignedLongValue = value.longValue();\n+        // Converts this BigInteger to a long.\n+        // This conversion is analogous to a narrowing primitive conversion from long to int as defined in the Java Language Specification:\n+        // if this BigInteger is too big to fit in a long, only the low-order 64 bits are returned.\n+        // Note that this conversion can lose information about the overall magnitude of the BigInteger value as well as return a result with the opposite sign.\n+        long unsignedLongValue = value.longValue();\n \n         return !(compare(unsignedLongValue, BigInteger.ZERO.longValue()) < 0 || // less than zero\n-\t\t compare(unsignedLongValue, MAX.longValue()) > 0);\n+                compare(unsignedLongValue, MAX.longValue()) > 0);\n     }\n \n     public String toString() {\n@@ -153,87 +153,58 @@ public float floatValue() {\n     }\n \n     /**\n-     * @return      the value 0 if the argument is an UnsignedLong numerically equal to this UnsignedLong; a value less than 0 if the argument is an UnsignedLong numerically greater than this UnsignedLong; and a value greater than 0 if the argument is an UnsignedLong numerically less than this UnsignedLong.\n+     * @return the value 0 if the argument is an UnsignedLong numerically equal to this UnsignedLong; a value less than 0 if the argument is an UnsignedLong numerically greater than this UnsignedLong; and a value greater than 0 if the argument is an UnsignedLong numerically less than this UnsignedLong.\n      */\n-    public int compareTo( Object o )\n-\tthrows ClassCastException, NullPointerException\n-    {\n-\tint retVal = 0; // arbitrary default value in case of exception; required return value in case this object is equal to the specified object\n-\n-\ttry {\n-\t    if ( o == null )\n-            {\n-\t\tthrow new NullPointerException( \"Note that null is not an instance of any class, and e.compareTo(null) should throw a NullPointerException.\" );\n-            }\n-\t    if ( ! ( o instanceof UnsignedLong ) )\n-\t    {\n-\t\tthrow new ClassCastException( \"The argument is not an UnsignedLong.\" );\n-\t    }\n-\t    // Only need to change retVal if this object is not equal to the specified object.\n-\t    retVal = compare( longValue(), ( (UnsignedLong) o ).longValue() );\n-\t}\n-\n-\tcatch ( NullPointerException nullPointerException ) {\n-\t    throw nullPointerException;\n-\t}\n+    public int compareTo(Object o) {\n+        int retVal = 0; // arbitrary default value in case of exception; required return value in case this object is equal to the specified object\n \n-\tcatch ( ClassCastException classCastException ) {\n-\t    throw classCastException;\n-\t}\n+        if (o == null || !(o instanceof UnsignedLong)) {\n+            throw new ClassCastException(\"The argument is not an UnsignedLong.\");\n+        }\n+        // Only need to change retVal if this object is not equal to the specified object.\n+        retVal = compare(longValue(), ((UnsignedLong) o).longValue());\n \n-\tfinally {\n-\t    return retVal;\n-\t}\n+        return retVal;\n \n     }\n \n     /**\n-     * @return      the value 0 if thatLong is a long numerically equal to thisLong; a value less than 0 if thatLong is a long numerically greater than thisLong; and a value greater than 0 if thatLong is a long numerically less than thisLong (unsigned comparison).\n+     * @return the value 0 if thatLong is a long numerically equal to thisLong; a value less than 0 if thatLong is a long numerically greater than thisLong; and a value greater than 0 if thatLong is a long numerically less than thisLong (unsigned comparison).\n      */\n-    private static int compare( long thisLong, long thatLong )\n-    {\n-\t// To avoid infinite recursion, do not instantiate UnsignedLong in this method, which may be called during UnsignedLong instantiation.\n-\n-\tif ( thisLong == thatLong )\n-\t{\n-\t    return 0;\n-\t}\n-\telse\n-\t{\n-\t    boolean isLessThan; // This is less than that.\n-\n-\t    // Prepare the most significant half of the data for comparison.\n-\t    // The shift distance can be any number from 1 to 32 inclusive (1 is probably fastest).\n-\t    // A shift distance of one is sufficient to move the significant data off of the sign bit, allowing for a signed comparison of positive numbers (i.e. an unsigned comparison).\n-\t    long thisHalfLong = ( thisLong & 0xffffffff00000000L ) >>> 1;\n-\t    long thatHalfLong = ( thatLong & 0xffffffff00000000L ) >>> 1;\n-\n-\t    if ( thisHalfLong == thatHalfLong )\n-\t    {\n-\t\t// We must also look at the least significant half of the data.\n-\n-\t\t// Prepare the least significant half of the data for comparison.\n-\t\tthisHalfLong = ( thisLong & 0x00000000ffffffffL );\n-\t\tthatHalfLong = ( thatLong & 0x00000000ffffffffL );\n-\n-\t\t// We already know that the data is not equal.\n-\t\tisLessThan = thisHalfLong < thatHalfLong;\n-\t    }\n-\t    else\n-\t    {\n-\t\t// The answer is in the most significant half of the data.\n-\t\tisLessThan = thisHalfLong < thatHalfLong;\n-\t    }\n-\n-\t    if ( isLessThan )\n-\t    {\n-\t\treturn -1; // Returns a negative integer as this object is less than than the specified object.\n-\t    }\n-\t    else\n-\t    {\n-\t\treturn 1; // Returns a positive integer as this object is greater than than the specified object.\n-\t    }\n-\t}\n+    private static int compare(long thisLong, long thatLong) {\n+        // To avoid infinite recursion, do not instantiate UnsignedLong in this method, which may be called during UnsignedLong instantiation.\n+\n+        if (thisLong == thatLong) {\n+            return 0;\n+        } else {\n+            boolean isLessThan; // This is less than that.\n+\n+            // Prepare the most significant half of the data for comparison.\n+            // The shift distance can be any number from 1 to 32 inclusive (1 is probably fastest).\n+            // A shift distance of one is sufficient to move the significant data off of the sign bit, allowing for a signed comparison of positive numbers (i.e. an unsigned comparison).\n+            long thisHalfLong = (thisLong & 0xffffffff00000000L) >>> 1;\n+            long thatHalfLong = (thatLong & 0xffffffff00000000L) >>> 1;\n+\n+            if (thisHalfLong == thatHalfLong) {\n+                // We must also look at the least significant half of the data.\n+\n+                // Prepare the least significant half of the data for comparison.\n+                thisHalfLong = (thisLong & 0x00000000ffffffffL);\n+                thatHalfLong = (thatLong & 0x00000000ffffffffL);\n+\n+                // We already know that the data is not equal.\n+                isLessThan = thisHalfLong < thatHalfLong;\n+            } else {\n+                // The answer is in the most significant half of the data.\n+                isLessThan = thisHalfLong < thatHalfLong;\n+            }\n+\n+            if (isLessThan) {\n+                return -1; // Returns a negative integer as this object is less than than the specified object.\n+            } else {\n+                return 1; // Returns a positive integer as this object is greater than than the specified object.\n+            }\n+        }\n     }\n \n }", "filename": "modules/adb/src/org/apache/axis2/databinding/types/UnsignedLong.java"}], "repo": "axis2-java"}, {"commit": "https://github.com/apache/axis2-java/commit/6f51c3a4e86dac96690e28abd857c4f82ddacb5e", "parent": "https://github.com/apache/axis2-java/commit/2ffd75d6ba22916759845ed7b23e7ee9e5b657ea", "message": "A fix to get rid of the NPE when we process SOAP 1.1 SOAPFaults using DOOM\n\nExplanation:\nfaultcode, faultstring, faultactor, detail are not namespace qualified in SOAP 1.1 and SOAP11BuilderHelper tries to do getLocalName on those elements. But if the in this case a DOOM element will return null See: http://java.sun.com/j2se/1.4.2/docs/api/org/w3c/dom/Node.html#getLocalName(). Therefore we have to use getTagName() to get the name of the element if its not qualified\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@357364 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "axis2-java_153", "file": [{"additions": 11, "raw_url": "https://github.com/apache/axis2-java/raw/6f51c3a4e86dac96690e28abd857c4f82ddacb5e/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/SOAP11BuilderHelper.java", "blob_url": "https://github.com/apache/axis2-java/blob/6f51c3a4e86dac96690e28abd857c4f82ddacb5e/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/SOAP11BuilderHelper.java", "sha": "e219da76ed37dacb44d8efae68f97beff9132af6", "changes": 14, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/SOAP11BuilderHelper.java?ref=6f51c3a4e86dac96690e28abd857c4f82ddacb5e", "patch": "@@ -28,6 +28,7 @@\n import org.apache.axis2.soap.SOAPFaultText;\n import org.apache.axis2.soap.SOAPFaultValue;\n import org.apache.axis2.soap.SOAPProcessingException;\n+import org.w3c.dom.Element;\n \n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n@@ -111,14 +112,21 @@ public OMElement handleEvent(XMLStreamReader parser,\n \n         } else if (elementLevel == 5) {\n \n-            if (parent.getLocalName().equals(SOAP_FAULT_CODE_LOCAL_NAME)) {\n+        \tString parentTagName = \"\";\n+        \tif(parent instanceof Element) {\n+        \t\tparentTagName = ((Element)parent).getTagName();\n+        \t} else {\n+        \t\tparentTagName = parent.getLocalName();\n+        \t}\n+        \t\n+            if (parentTagName.equals(SOAP_FAULT_CODE_LOCAL_NAME)) {\n                 throw new OMBuilderException(\n                         \"faultcode element should not have children\");\n-            } else if (parent.getLocalName().equals(\n+            } else if (parentTagName.equals(\n                     SOAP_FAULT_STRING_LOCAL_NAME)) {\n                 throw new OMBuilderException(\n                         \"faultstring element should not have children\");\n-            } else if (parent.getLocalName().equals(\n+            } else if (parentTagName.equals(\n                     SOAP_FAULT_ACTOR_LOCAL_NAME)) {\n                 throw new OMBuilderException(\n                         \"faultactor element should not have children\");", "filename": "modules/xml/src/org/apache/axis2/soap/impl/llom/builder/SOAP11BuilderHelper.java"}], "repo": "axis2-java"}]
