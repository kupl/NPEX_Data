{
    "maven_0852f8d": {
        "bug_id": "maven_0852f8d",
        "commit": "https://github.com/apache/maven/commit/0852f8d21dfbea00022e06fd2575dcec055791bd",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/0852f8d21dfbea00022e06fd2575dcec055791bd/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=0852f8d21dfbea00022e06fd2575dcec055791bd",
                "deletions": 3,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -250,10 +250,12 @@ public MavenProject( Model model, RepositorySystem repositorySystem, ProjectBuil\n         for ( Dependency d : getDependencies() )\n         {\n             Artifact dependencyArtifact = repositorySystem.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(), d.getScope(), d.getType() );\n-\n-            if ( filter.include( dependencyArtifact ) )\n+            if ( filter != null )\n             {\n-                artifacts.add( dependencyArtifact );\n+                if ( filter.include( dependencyArtifact ) )\n+                {\n+                    artifacts.add( dependencyArtifact );\n+                }\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/maven/raw/0852f8d21dfbea00022e06fd2575dcec055791bd/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "5f3b9ed91e8bddb0e1e9839873f7b308783d8ba1",
                "status": "modified"
            }
        ],
        "message": "fix possible NPE as filter can be null (dependency:tree)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@785405 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/17d876713c5aff4fe85fa6832b05d14c9bee5c88",
        "repo": "maven",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven_1068ab5": {
        "bug_id": "maven_1068ab5",
        "commit": "https://github.com/apache/maven/commit/1068ab557c476a291f3f16bc2b2523d5613c5e17",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-compat/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 16,
                "filename": "maven-compat/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java",
                "patch": "@@ -21,7 +21,9 @@\n \n import org.apache.maven.model.Activation;\n import org.apache.maven.model.Profile;\n+import org.apache.maven.model.building.ModelProblem;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.profile.DefaultProfileActivationContext;\n import org.apache.maven.model.profile.ProfileActivationContext;\n import org.apache.maven.model.profile.ProfileSelector;\n@@ -192,25 +194,14 @@ public List getActiveProfiles()\n             profileSelector.getActiveProfiles( profilesById.values(), context, new ModelProblemCollector()\n             {\n \n-                public void addWarning( String message, Exception cause )\n+                public void add( Severity severity, String message, Exception cause )\n                 {\n-                    // ignored\n+                    if ( !ModelProblem.Severity.WARNING.equals( severity ) )\n+                    {\n+                        errors.add( new ProfileActivationException( message, cause ) );\n+                    }\n                 }\n \n-                public void addWarning( String message )\n-                {\n-                    // ignored\n-                }\n-\n-                public void addError( String message, Exception cause )\n-                {\n-                    errors.add( new ProfileActivationException( message, cause ) );\n-                }\n-\n-                public void addError( String message )\n-                {\n-                    errors.add( new ProfileActivationException( message ) );\n-                }\n             } );\n \n         if ( !errors.isEmpty() )",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-compat/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java",
                "sha": "c6b03fed008f9942d8069a33a3c5b89a5becabf6",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-compat/src/main/java/org/apache/maven/project/validation/DefaultModelValidator.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/project/validation/DefaultModelValidator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 17,
                "filename": "maven-compat/src/main/java/org/apache/maven/project/validation/DefaultModelValidator.java",
                "patch": "@@ -22,7 +22,9 @@\n import org.apache.maven.model.Model;\n import org.apache.maven.model.building.DefaultModelBuildingRequest;\n import org.apache.maven.model.building.ModelBuildingRequest;\n+import org.apache.maven.model.building.ModelProblem;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.component.annotations.Requirement;\n \n@@ -64,24 +66,12 @@ public SimpleModelProblemCollector( ModelValidationResult result )\n             this.result = result;\n         }\n \n-        public void addError( String message )\n+        public void add( Severity severity, String message, Exception cause )\n         {\n-            result.addMessage( message );\n-        }\n-\n-        public void addError( String message, Exception cause )\n-        {\n-            result.addMessage( message );\n-        }\n-\n-        public void addWarning( String message )\n-        {\n-            // not supported\n-        }\n-\n-        public void addWarning( String message, Exception cause )\n-        {\n-            // not supported\n+            if ( !ModelProblem.Severity.WARNING.equals( severity ) )\n+            {\n+                result.addMessage( message );\n+            }\n         }\n \n     }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-compat/src/main/java/org/apache/maven/project/validation/DefaultModelValidator.java",
                "sha": "f31fea274edb24bbf9c4f8c3261c91bd0e203a5b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-core/src/main/java/org/apache/maven/model/plugin/DefaultLifecycleBindingsInjector.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/model/plugin/DefaultLifecycleBindingsInjector.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/model/plugin/DefaultLifecycleBindingsInjector.java",
                "patch": "@@ -36,6 +36,7 @@\n import org.apache.maven.model.PluginManagement;\n import org.apache.maven.model.building.ModelBuildingRequest;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.merge.MavenModelMerger;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.component.annotations.Requirement;\n@@ -63,7 +64,7 @@ public void injectLifecycleBindings( Model model, ModelBuildingRequest request,\n \n         if ( defaultPlugins == null )\n         {\n-            problems.addError( \"Unknown packaging: \" + packaging );\n+            problems.add( Severity.ERROR, \"Unknown packaging: \" + packaging, null );\n         }\n         else if ( !defaultPlugins.isEmpty() )\n         {",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-core/src/main/java/org/apache/maven/model/plugin/DefaultLifecycleBindingsInjector.java",
                "sha": "ec4c4dc8584d4317a5f0986c055b61e2dfae0a96",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-core/src/main/java/org/apache/maven/project/DefaultModelBuildingListener.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/DefaultModelBuildingListener.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/project/DefaultModelBuildingListener.java",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.maven.model.Model;\n import org.apache.maven.model.building.AbstractModelBuildingListener;\n import org.apache.maven.model.building.ModelBuildingEvent;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.plugin.PluginResolutionException;\n import org.apache.maven.plugin.version.PluginVersionResolutionException;\n \n@@ -96,7 +97,7 @@ public void buildExtensionsAssembled( ModelBuildingEvent event )\n         }\n         catch ( Exception e )\n         {\n-            event.getProblems().addError( \"Invalid plugin repository: \" + e.getMessage(), e );\n+            event.getProblems().add( Severity.ERROR, \"Invalid plugin repository: \" + e.getMessage(), e );\n         }\n         project.setPluginArtifactRepositories( pluginRepositories );\n \n@@ -118,11 +119,11 @@ public void buildExtensionsAssembled( ModelBuildingEvent event )\n             }\n             catch ( PluginResolutionException e )\n             {\n-                event.getProblems().addError( \"Unresolveable build extension: \" + e.getMessage(), e );\n+                event.getProblems().add( Severity.ERROR, \"Unresolveable build extension: \" + e.getMessage(), e );\n             }\n             catch ( PluginVersionResolutionException e )\n             {\n-                event.getProblems().addError( \"Unresolveable build extension: \" + e.getMessage(), e );\n+                event.getProblems().add( Severity.ERROR, \"Unresolveable build extension: \" + e.getMessage(), e );\n             }\n \n             if ( project.getClassRealm() != null )\n@@ -152,7 +153,7 @@ public void buildExtensionsAssembled( ModelBuildingEvent event )\n         }\n         catch ( Exception e )\n         {\n-            event.getProblems().addError( \"Invalid artifact repository: \" + e.getMessage(), e );\n+            event.getProblems().add( Severity.ERROR, \"Invalid artifact repository: \" + e.getMessage(), e );\n         }\n         project.setRemoteArtifactRepositories( remoteRepositories );\n     }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-core/src/main/java/org/apache/maven/project/DefaultModelBuildingListener.java",
                "sha": "7070b009a6d58ad23e0db9fe4b8faf202de8ea49",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 25,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.maven.model.Parent;\n import org.apache.maven.model.Profile;\n import org.apache.maven.model.Repository;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.composition.DependencyManagementImporter;\n import org.apache.maven.model.inheritance.InheritanceAssembler;\n import org.apache.maven.model.interpolation.ModelInterpolator;\n@@ -267,7 +268,7 @@ private ModelBuildingResult build( ModelBuildingRequest request, ModelBuildingRe\n \n         modelValidator.validateEffectiveModel( resultModel, request, problems );\n \n-        if ( hasErrors( problems.getProblems() ) )\n+        if ( problems.hasErrors() )\n         {\n             throw new ModelBuildingException( problems.getRootModelId(), problems.getProblems() );\n         }\n@@ -320,22 +321,24 @@ private Model readModel( ModelSource modelSource, File pomFile, ModelBuildingReq\n \n                 if ( pomFile != null )\n                 {\n-                    problems.addError( \"Malformed POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n+                    problems.add( Severity.ERROR, \"Malformed POM \" + modelSource.getLocation() + \": \" + e.getMessage(),\n+                                  e );\n                 }\n                 else\n                 {\n-                    problems.addWarning( \"Malformed POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n+                    problems.add( Severity.WARNING, \"Malformed POM \" + modelSource.getLocation() + \": \"\n+                        + e.getMessage(), e );\n                 }\n             }\n         }\n         catch ( ModelParseException e )\n         {\n-            problems.addFatalError( \"Non-parseable POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n+            problems.add( Severity.FATAL, \"Non-parseable POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n             throw new ModelBuildingException( problems.getRootModelId(), problems.getProblems() );\n         }\n         catch ( IOException e )\n         {\n-            problems.addFatalError( \"Non-readable POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n+            problems.add( Severity.FATAL, \"Non-readable POM \" + modelSource.getLocation() + \": \" + e.getMessage(), e );\n             throw new ModelBuildingException( problems.getRootModelId(), problems.getProblems() );\n         }\n \n@@ -344,23 +347,12 @@ private Model readModel( ModelSource modelSource, File pomFile, ModelBuildingReq\n         problems.setSource( model );\n         modelValidator.validateRawModel( model, request, problems );\n \n-        return model;\n-    }\n-\n-    private boolean hasErrors( List<ModelProblem> problems )\n-    {\n-        if ( problems != null )\n+        if ( problems.hasFatalErrors() )\n         {\n-            for ( ModelProblem problem : problems )\n-            {\n-                if ( ModelProblem.Severity.ERROR.compareTo( problem.getSeverity() ) >= 0 )\n-                {\n-                    return true;\n-                }\n-            }\n+            throw new ModelBuildingException( problems.getRootModelId(), problems.getProblems() );\n         }\n \n-        return false;\n+        return model;\n     }\n \n     private ProfileActivationContext getProfileActivationContext( ModelBuildingRequest request )\n@@ -395,7 +387,7 @@ private void configureResolver( ModelResolver modelResolver, Model model, Defaul\n             }\n             catch ( InvalidRepositoryException e )\n             {\n-                problems.addError( \"Invalid repository \" + repository.getId() + \": \" + e.getMessage(), e );\n+                problems.add( Severity.ERROR, \"Invalid repository \" + repository.getId() + \": \" + e.getMessage(), e );\n             }\n         }\n     }\n@@ -469,8 +461,9 @@ private ModelData readParent( Model childModel, ModelBuildingRequest request, De\n \n             if ( !\"pom\".equals( parentModel.getPackaging() ) )\n             {\n-                problems.addError( \"Invalid packaging for parent POM \" + ModelProblemUtils.toSourceHint( parentModel )\n-                    + \", must be \\\"pom\\\" but is \\\"\" + parentModel.getPackaging() + \"\\\"\" );\n+                problems.add( Severity.ERROR, \"Invalid packaging for parent POM \"\n+                    + ModelProblemUtils.toSourceHint( parentModel ) + \", must be \\\"pom\\\" but is \\\"\"\n+                    + parentModel.getPackaging() + \"\\\"\", null );\n             }\n         }\n         else\n@@ -575,7 +568,7 @@ private ModelData readParentExternally( Model childModel, ModelBuildingRequest r\n         }\n         catch ( UnresolvableModelException e )\n         {\n-            problems.addFatalError( \"Non-resolvable parent POM \"\n+            problems.add( Severity.FATAL, \"Non-resolvable parent POM \"\n                 + ModelProblemUtils.toId( groupId, artifactId, version ) + \" for \"\n                 + ModelProblemUtils.toId( childModel ) + \": \" + e.getMessage(), e );\n             throw new ModelBuildingException( problems.getRootModelId(), problems.getProblems() );\n@@ -639,7 +632,7 @@ private void importDependencyManagement( Model model, ModelBuildingRequest reque\n                     message += modelId + \" -> \";\n                 }\n                 message += imported;\n-                problems.addError( message );\n+                problems.add( Severity.ERROR, message, null );\n \n                 continue;\n             }\n@@ -663,7 +656,7 @@ private void importDependencyManagement( Model model, ModelBuildingRequest reque\n                 }\n                 catch ( UnresolvableModelException e )\n                 {\n-                    problems.addError( \"Non-resolvable import POM \"\n+                    problems.add( Severity.ERROR, \"Non-resolvable import POM \"\n                         + ModelProblemUtils.toId( groupId, artifactId, version ) + \": \" + e.getMessage(), e );\n                     continue;\n                 }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "sha": "a9a026ad327181c158aad93b686806adc83460c1",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java",
                "changes": 72,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 41,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java",
                "patch": "@@ -20,9 +20,12 @@\n  */\n \n import java.util.ArrayList;\n+import java.util.EnumSet;\n import java.util.List;\n+import java.util.Set;\n \n import org.apache.maven.model.Model;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.io.ModelParseException;\n \n /**\n@@ -46,9 +49,26 @@\n \n     private Model rootModel;\n \n+    private Set<ModelProblem.Severity> severities = EnumSet.noneOf( ModelProblem.Severity.class );\n+\n     public DefaultModelProblemCollector( List<ModelProblem> problems )\n     {\n         this.problems = ( problems != null ) ? problems : new ArrayList<ModelProblem>();\n+\n+        for ( ModelProblem problem : this.problems )\n+        {\n+            severities.add( problem.getSeverity() );\n+        }\n+    }\n+\n+    public boolean hasFatalErrors()\n+    {\n+        return severities.contains( ModelProblem.Severity.FATAL );\n+    }\n+\n+    public boolean hasErrors()\n+    {\n+        return severities.contains( ModelProblem.Severity.ERROR ) || severities.contains( ModelProblem.Severity.FATAL );\n     }\n \n     public List<ModelProblem> getProblems()\n@@ -100,34 +120,21 @@ public String getRootModelId()\n     public void add( ModelProblem problem )\n     {\n         problems.add( problem );\n-    }\n \n-    public void addAll( List<ModelProblem> problems )\n-    {\n-        problems.addAll( problems );\n+        severities.add( problem.getSeverity() );\n     }\n \n-    public void addFatalError( String message, Exception cause )\n+    public void addAll( List<ModelProblem> problems )\n     {\n-        int line = -1;\n-        int column = -1;\n+        this.problems.addAll( problems );\n \n-        if ( cause instanceof ModelParseException )\n+        for ( ModelProblem problem : problems )\n         {\n-            ModelParseException e = (ModelParseException) cause;\n-            line = e.getLineNumber();\n-            column = e.getColumnNumber();\n+            severities.add( problem.getSeverity() );\n         }\n-\n-        add( message, ModelProblem.Severity.FATAL, line, column, cause );\n     }\n \n-    public void addError( String message )\n-    {\n-        addError( message, null );\n-    }\n-\n-    public void addError( String message, Exception cause )\n+    public void add( Severity severity, String message, Exception cause )\n     {\n         int line = -1;\n         int column = -1;\n@@ -139,32 +146,15 @@ public void addError( String message, Exception cause )\n             column = e.getColumnNumber();\n         }\n \n-        add( message, ModelProblem.Severity.ERROR, line, column, cause );\n-    }\n-\n-    public void addWarning( String message )\n-    {\n-        addWarning( message, null );\n+        add( severity, message, line, column, cause );\n     }\n \n-    public void addWarning( String message, Exception cause )\n+    private void add( ModelProblem.Severity severity, String message, int line, int column, Exception cause )\n     {\n-        int line = -1;\n-        int column = -1;\n+        ModelProblem problem =\n+            new DefaultModelProblem( message, severity, getSource(), line, column, getModelId(), cause );\n \n-        if ( cause instanceof ModelParseException )\n-        {\n-            ModelParseException e = (ModelParseException) cause;\n-            line = e.getLineNumber();\n-            column = e.getColumnNumber();\n-        }\n-\n-        add( message, ModelProblem.Severity.WARNING, line, column, cause );\n-    }\n-\n-    private void add( String message, ModelProblem.Severity severity, int line, int column, Exception cause )\n-    {\n-        problems.add( new DefaultModelProblem( message, severity, getSource(), line, column, getModelId(), cause ) );\n+        add( problem );\n     }\n \n }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java",
                "sha": "ac6ecad4c1394fe2899fe1df1e45e7d31f6e6768",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelProblemCollector.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelProblemCollector.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 26,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/ModelProblemCollector.java",
                "patch": "@@ -32,33 +32,12 @@\n {\n \n     /**\n-     * Adds the specified error.\n+     * Adds the specified problem.\n      * \n-     * @param message The detail message of the error, may be {@code null}.\n+     * @param severity The severity of the problem, must not be {@code null}.\n+     * @param message The detail message of the problem, may be {@code null}.\n+     * @param cause The cause of the problem, may be {@code null}.\n      */\n-    void addError( String message );\n-\n-    /**\n-     * Adds the specified error.\n-     * \n-     * @param message The detail message of the error, may be {@code null}.\n-     * @param cause The cause of the error, may be {@code null}.\n-     */\n-    void addError( String message, Exception cause );\n-\n-    /**\n-     * Adds the specified warning.\n-     * \n-     * @param message The detail message of the warning, may be {@code null}.\n-     */\n-    void addWarning( String message );\n-\n-    /**\n-     * Adds the specified warning.\n-     * \n-     * @param message The detail message of the warning, may be {@code null}.\n-     * @param cause The cause of the warning, may be {@code null}.\n-     */\n-    void addWarning( String message, Exception cause );\n+    void add( ModelProblem.Severity severity, String message, Exception cause );\n \n }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelProblemCollector.java",
                "sha": "33baca239f061a59fe7547cc7919d392546fb964",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.maven.model.Model;\n import org.apache.maven.model.building.ModelBuildingRequest;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.path.PathTranslator;\n import org.codehaus.plexus.component.annotations.Requirement;\n import org.codehaus.plexus.interpolation.AbstractValueSource;\n@@ -229,7 +230,7 @@ protected String interpolateInternal( String src, List<? extends ValueSource> va\n                 }\n                 catch ( InterpolationException e )\n                 {\n-                    problems.addError( e.getMessage(), e );\n+                    problems.add( Severity.ERROR, e.getMessage(), e );\n                 }\n \n                 interpolator.clearFeedback();",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
                "sha": "83c69808c5332c09abf73f48e0a1f0d6a308dc0f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java",
                "patch": "@@ -22,6 +22,7 @@\n import java.util.List;\n \n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.codehaus.plexus.interpolation.ValueSource;\n \n /**\n@@ -61,7 +62,7 @@ public Object getValue( String expression )\n             {\n                 msg += \" Please use ${\" + newPrefix + expression.substring( bannedPrefix.length() ) + \"} instead.\";\n             }\n-            problems.addWarning( msg );\n+            problems.add( Severity.WARNING, msg, null );\n         }\n \n         return value;",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java",
                "sha": "9e6e2eba3a25e54c7dd509a2ebe35f8bba0ae150",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 4,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.maven.model.Model;\n import org.apache.maven.model.building.ModelBuildingRequest;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.interpolation.InterpolationPostProcessor;\n import org.codehaus.plexus.interpolation.Interpolator;\n@@ -285,13 +286,13 @@ else if ( Map.class.isAssignableFrom( type ) )\n                             }\n                             catch ( IllegalArgumentException e )\n                             {\n-                                problems.addError( \"Failed to interpolate field: \" + fields[i] + \" on class: \"\n-                                    + cls.getName(), e );\n+                                problems.add( Severity.ERROR, \"Failed to interpolate field: \" + fields[i]\n+                                    + \" on class: \" + cls.getName(), e );\n                             }\n                             catch ( IllegalAccessException e )\n                             {\n-                                problems.addError( \"Failed to interpolate field: \" + fields[i] + \" on class: \"\n-                                    + cls.getName(), e );\n+                                problems.add( Severity.ERROR, \"Failed to interpolate field: \" + fields[i]\n+                                    + \" on class: \" + cls.getName(), e );\n                             }\n                         }\n                         finally",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java",
                "sha": "9707c94e91e63b233a9bca80ba0219dee85a32d1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/plugin/DefaultReportingConverter.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/plugin/DefaultReportingConverter.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 2,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/plugin/DefaultReportingConverter.java",
                "patch": "@@ -28,6 +28,7 @@\n import org.apache.maven.model.Reporting;\n import org.apache.maven.model.building.ModelBuildingRequest;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.util.StringUtils;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n@@ -98,8 +99,8 @@ public void convertReporting( Model model, ModelBuildingRequest request, ModelPr\n             && request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1 )\n         {\n \n-            problems.addWarning( \"The <reporting> section is deprecated\"\n-                + \", please move the reports to the <configuration> section of the new Maven Site Plugin.\" );\n+            problems.add( Severity.WARNING, \"The <reporting> section is deprecated\"\n+                + \", please move the reports to the <configuration> section of the new Maven Site Plugin.\", null );\n         }\n \n         for ( ReportPlugin plugin : reporting.getPlugins() )",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/plugin/DefaultReportingConverter.java",
                "sha": "c407127694ffff4a2f14bed8fcdaa849de816e7c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/DefaultProfileSelector.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/profile/DefaultProfileSelector.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/profile/DefaultProfileSelector.java",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.maven.model.Activation;\n import org.apache.maven.model.Profile;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.profile.activation.ProfileActivator;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.component.annotations.Requirement;\n@@ -103,7 +104,7 @@ private boolean isActive( Profile profile, ProfileActivationContext context, Mod\n             }\n             catch ( RuntimeException e )\n             {\n-                problems.addError( \"Failed to determine activation for profile \" + profile.getId(), e );\n+                problems.add( Severity.ERROR, \"Failed to determine activation for profile \" + profile.getId(), e );\n                 return false;\n             }\n         }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/DefaultProfileSelector.java",
                "sha": "c81466043c853631bfc62834000cca9a89daf1be",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/FileProfileActivator.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/FileProfileActivator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 2,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/FileProfileActivator.java",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.maven.model.ActivationFile;\n import org.apache.maven.model.Profile;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.path.PathTranslator;\n import org.apache.maven.model.profile.ProfileActivationContext;\n import org.codehaus.plexus.component.annotations.Component;\n@@ -118,8 +119,8 @@ else if ( path.indexOf( \"${basedir}\" ) >= 0 )\n         }\n         catch ( Exception e )\n         {\n-            problems.addError( \"Failed to interpolate file location \" + path + \" for profile \" + profile.getId() + \": \"\n-                + e.getMessage(), e );\n+            problems.add( Severity.ERROR, \"Failed to interpolate file location \" + path + \" for profile \"\n+                + profile.getId() + \": \" + e.getMessage(), e );\n             return false;\n         }\n ",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/FileProfileActivator.java",
                "sha": "c1e62cc2ac5066bfbbe53a5277fb54c5798fa3dc",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.maven.model.Activation;\n import org.apache.maven.model.Profile;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.profile.ProfileActivationContext;\n import org.codehaus.plexus.component.annotations.Component;\n \n@@ -55,7 +56,8 @@ public boolean isActive( Profile profile, ProfileActivationContext context, Mode\n \n                 if ( version.length() <= 0 )\n                 {\n-                    problems.addError( \"Failed to determine Java version for profile \" + profile.getId() );\n+                    problems.add( Severity.ERROR, \"Failed to determine Java version for profile \" + profile.getId(),\n+                                  null );\n                     return false;\n                 }\n ",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java",
                "sha": "9cf3123cd5ca1bc9adb0d29ee29db7c81b95e6b1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/PropertyProfileActivator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/PropertyProfileActivator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 1,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/PropertyProfileActivator.java",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.maven.model.ActivationProperty;\n import org.apache.maven.model.Profile;\n import org.apache.maven.model.building.ModelProblemCollector;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.profile.ProfileActivationContext;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.util.StringUtils;\n@@ -60,7 +61,8 @@ public boolean isActive( Profile profile, ProfileActivationContext context, Mode\n \n                 if ( name == null || name.length() <= 0 )\n                 {\n-                    problems.addError( \"The property name is required to activate the profile \" + profile.getId() );\n+                    problems.add( Severity.ERROR, \"The property name is required to activate the profile \"\n+                        + profile.getId(), null );\n                     return false;\n                 }\n ",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/PropertyProfileActivator.java",
                "sha": "53746b4e53f0bc5962cfe7eda934d1b38b60d949",
                "status": "modified"
            },
            {
                "additions": 107,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "changes": 207,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 100,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "patch": "@@ -40,6 +40,7 @@\n import org.apache.maven.model.Repository;\n import org.apache.maven.model.Resource;\n import org.apache.maven.model.building.ModelBuildingRequest;\n+import org.apache.maven.model.building.ModelProblem.Severity;\n import org.apache.maven.model.building.ModelProblemCollector;\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.util.StringUtils;\n@@ -60,25 +61,25 @@ public void validateRawModel( Model model, ModelBuildingRequest request, ModelPr\n         Parent parent = model.getParent();\n         if ( parent != null )\n         {\n-            validateStringNotEmpty( \"parent.groupId\", problems, false, parent.getGroupId() );\n+            validateStringNotEmpty( \"parent.groupId\", problems, Severity.FATAL, parent.getGroupId() );\n \n-            validateStringNotEmpty( \"parent.artifactId\", problems, false, parent.getArtifactId() );\n+            validateStringNotEmpty( \"parent.artifactId\", problems, Severity.FATAL, parent.getArtifactId() );\n \n-            validateStringNotEmpty( \"parent.version\", problems, false, parent.getVersion() );\n+            validateStringNotEmpty( \"parent.version\", problems, Severity.FATAL, parent.getVersion() );\n \n-            if ( parent.getGroupId().equals( model.getGroupId() )\n-                && parent.getArtifactId().equals( model.getArtifactId() ) )\n+            if ( equals( parent.getGroupId(), model.getGroupId() )\n+                && equals( parent.getArtifactId(), model.getArtifactId() ) )\n             {\n-                addViolation( problems, false, \"The parent element cannot have the same ID as the project.\" );\n+                addViolation( problems, Severity.ERROR, \"The parent element cannot have the same ID as the project.\" );\n             }\n         }\n \n         if ( request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n         {\n-            validateEnum( \"modelVersion\", problems, false, model.getModelVersion(), null, \"4.0.0\" );\n-            validateStringNoExpression( \"groupId\", problems, true, model.getGroupId() );\n-            validateStringNoExpression( \"artifactId\", problems, true, model.getArtifactId() );\n-            validateStringNoExpression( \"version\", problems, true, model.getVersion() );\n+            validateEnum( \"modelVersion\", problems, Severity.ERROR, model.getModelVersion(), null, \"4.0.0\" );\n+            validateStringNoExpression( \"groupId\", problems, Severity.WARNING, model.getGroupId() );\n+            validateStringNoExpression( \"artifactId\", problems, Severity.WARNING, model.getArtifactId() );\n+            validateStringNoExpression( \"version\", problems, Severity.WARNING, model.getVersion() );\n \n             validateDependencies( problems, model.getDependencies(), \"dependencies.dependency\", request );\n \n@@ -98,7 +99,7 @@ public void validateRawModel( Model model, ModelBuildingRequest request, ModelPr\n             {\n                 if ( !profileIds.add( profile.getId() ) )\n                 {\n-                    addViolation( problems, false, \"profiles.profile.id must be unique\"\n+                    addViolation( problems, Severity.ERROR, \"profiles.profile.id must be unique\"\n                         + \" but found duplicate profile with id \" + profile.getId() );\n                 }\n \n@@ -123,43 +124,34 @@ public void validateRawModel( Model model, ModelBuildingRequest request, ModelPr\n \n     public void validateEffectiveModel( Model model, ModelBuildingRequest request, ModelProblemCollector problems )\n     {\n-        validateStringNotEmpty( \"modelVersion\", problems, false, model.getModelVersion() );\n+        validateStringNotEmpty( \"modelVersion\", problems, Severity.ERROR, model.getModelVersion() );\n \n         validateId( \"groupId\", problems, model.getGroupId() );\n \n         validateId( \"artifactId\", problems, model.getArtifactId() );\n \n-        validateStringNotEmpty( \"packaging\", problems, false, model.getPackaging() );\n+        validateStringNotEmpty( \"packaging\", problems, Severity.ERROR, model.getPackaging() );\n \n         if ( !model.getModules().isEmpty() && !\"pom\".equals( model.getPackaging() ) )\n         {\n-            addViolation( problems, false, \"Packaging '\" + model.getPackaging() + \"' is invalid. Aggregator projects \"\n-                + \"require 'pom' as packaging.\" );\n+            addViolation( problems, Severity.ERROR, \"Packaging '\" + model.getPackaging()\n+                + \"' is invalid. Aggregator projects \" + \"require 'pom' as packaging.\" );\n         }\n \n-        Parent parent = model.getParent();\n-        if ( parent != null )\n-        {\n-            if ( parent.getGroupId().equals( model.getGroupId() )\n-                && parent.getArtifactId().equals( model.getArtifactId() ) )\n-            {\n-                addViolation( problems, false, \"The parent element cannot have the same ID as the project.\" );\n-            }\n-        }\n-\n-        validateStringNotEmpty( \"version\", problems, false, model.getVersion() );\n+        validateStringNotEmpty( \"version\", problems, Severity.ERROR, model.getVersion() );\n \n-        boolean warnOnly = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;\n+        Severity errOn30 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n         for ( Dependency d : model.getDependencies() )\n         {\n             validateId( \"dependencies.dependency.artifactId\", problems, d.getArtifactId(), d.getManagementKey() );\n \n             validateId( \"dependencies.dependency.groupId\", problems, d.getGroupId(), d.getManagementKey() );\n \n-            validateStringNotEmpty( \"dependencies.dependency.type\", problems, false, d.getType(), d.getManagementKey() );\n+            validateStringNotEmpty( \"dependencies.dependency.type\", problems, Severity.ERROR, d.getType(),\n+                                    d.getManagementKey() );\n \n-            validateStringNotEmpty( \"dependencies.dependency.version\", problems, false, d.getVersion(),\n+            validateStringNotEmpty( \"dependencies.dependency.version\", problems, Severity.ERROR, d.getVersion(),\n                                     d.getManagementKey() );\n \n             if ( \"system\".equals( d.getScope() ) )\n@@ -168,37 +160,37 @@ public void validateEffectiveModel( Model model, ModelBuildingRequest request, M\n \n                 if ( StringUtils.isEmpty( systemPath ) )\n                 {\n-                    addViolation( problems, false, \"For dependency \" + d.getManagementKey()\n+                    addViolation( problems, Severity.ERROR, \"For dependency \" + d.getManagementKey()\n                         + \": system-scoped dependency must specify systemPath.\" );\n                 }\n                 else\n                 {\n                     if ( !new File( systemPath ).isAbsolute() )\n                     {\n-                        addViolation( problems, false, \"For dependency \" + d.getManagementKey()\n+                        addViolation( problems, Severity.ERROR, \"For dependency \" + d.getManagementKey()\n                             + \": system-scoped dependency must specify an absolute systemPath but is \" + systemPath );\n                     }\n                 }\n             }\n             else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n             {\n-                addViolation( problems, false, \"For dependency \" + d.getManagementKey()\n+                addViolation( problems, Severity.ERROR, \"For dependency \" + d.getManagementKey()\n                     + \": only dependency with system scope can specify systemPath.\" );\n             }\n \n             if ( request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n             {\n-                validateVersion( \"dependencies.dependency.version\", problems, warnOnly, d.getVersion(),\n+                validateVersion( \"dependencies.dependency.version\", problems, errOn30, d.getVersion(),\n                                  d.getManagementKey() );\n \n-                validateBoolean( \"dependencies.dependency.optional\", problems, warnOnly, d.getOptional(),\n+                validateBoolean( \"dependencies.dependency.optional\", problems, errOn30, d.getOptional(),\n                                  d.getManagementKey() );\n \n                 /*\n                  * TODO: Extensions like Flex Mojos use custom scopes like \"merged\", \"internal\", \"external\", etc. In\n                  * order to don't break backward-compat with those, only warn but don't error out.\n                  */\n-                validateEnum( \"dependencies.dependency.scope\", problems, true, d.getScope(),\n+                validateEnum( \"dependencies.dependency.scope\", problems, Severity.WARNING, d.getScope(),\n                               d.getManagementKey(), \"provided\", \"compile\", \"runtime\", \"test\", \"system\" );\n             }\n         }\n@@ -208,40 +200,39 @@ else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n         {\n             for ( Dependency d : mgmt.getDependencies() )\n             {\n-                validateStringNotEmpty( \"dependencyManagement.dependencies.dependency.artifactId\", problems, false,\n-                                        d.getArtifactId(), d.getManagementKey() );\n+                validateStringNotEmpty( \"dependencyManagement.dependencies.dependency.artifactId\", problems,\n+                                        Severity.ERROR, d.getArtifactId(), d.getManagementKey() );\n \n-                validateStringNotEmpty( \"dependencyManagement.dependencies.dependency.groupId\", problems, false,\n-                                        d.getGroupId(), d.getManagementKey() );\n+                validateStringNotEmpty( \"dependencyManagement.dependencies.dependency.groupId\", problems,\n+                                        Severity.ERROR, d.getGroupId(), d.getManagementKey() );\n \n                 if ( \"system\".equals( d.getScope() ) )\n                 {\n                     String systemPath = d.getSystemPath();\n \n                     if ( StringUtils.isEmpty( systemPath ) )\n                     {\n-                        addViolation( problems, false, \"For managed dependency \" + d.getManagementKey()\n+                        addViolation( problems, Severity.ERROR, \"For managed dependency \" + d.getManagementKey()\n                             + \": system-scoped dependency must specify systemPath.\" );\n                     }\n                     else\n                     {\n                         if ( !new File( systemPath ).isAbsolute() )\n                         {\n-                            addViolation( problems, false, \"For managed dependency \" + d.getManagementKey()\n-                                + \": system-scoped dependency must specify an absolute systemPath but is \"\n-                                + systemPath );\n+                            addViolation( problems, Severity.ERROR, \"For managed dependency \" + d.getManagementKey()\n+                                + \": system-scoped dependency must specify an absolute systemPath but is \" + systemPath );\n                         }\n                     }\n                 }\n                 else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n                 {\n-                    addViolation( problems, false, \"For managed dependency \" + d.getManagementKey()\n+                    addViolation( problems, Severity.ERROR, \"For managed dependency \" + d.getManagementKey()\n                         + \": only dependency with system scope can specify systemPath.\" );\n                 }\n \n                 if ( request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n                 {\n-                    validateBoolean( \"dependencyManagement.dependencies.dependency.optional\", problems, warnOnly,\n+                    validateBoolean( \"dependencyManagement.dependencies.dependency.optional\", problems, errOn30,\n                                      d.getOptional(), d.getManagementKey() );\n                 }\n             }\n@@ -254,37 +245,37 @@ else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n             {\n                 if ( !modules.add( module ) )\n                 {\n-                    addViolation( problems, false, \"Duplicate child module: \" + module );\n+                    addViolation( problems, Severity.ERROR, \"Duplicate child module: \" + module );\n                 }\n             }\n \n-            boolean warnOnMissingPluginVersion =\n-                request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1;\n+            Severity errOn31 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1 );\n \n             Build build = model.getBuild();\n             if ( build != null )\n             {\n                 for ( Plugin p : build.getPlugins() )\n                 {\n-                    validateStringNotEmpty( \"build.plugins.plugin.artifactId\", problems, false, p.getArtifactId() );\n+                    validateStringNotEmpty( \"build.plugins.plugin.artifactId\", problems, Severity.ERROR,\n+                                            p.getArtifactId() );\n \n-                    validateStringNotEmpty( \"build.plugins.plugin.groupId\", problems, false, p.getGroupId() );\n+                    validateStringNotEmpty( \"build.plugins.plugin.groupId\", problems, Severity.ERROR, p.getGroupId() );\n \n-                    validateStringNotEmpty( \"build.plugins.plugin.version\", problems, warnOnMissingPluginVersion,\n-                                            p.getVersion(), p.getKey() );\n+                    validateStringNotEmpty( \"build.plugins.plugin.version\", problems, errOn31, p.getVersion(),\n+                                            p.getKey() );\n \n-                    validateVersion( \"build.plugins.plugin.version\", problems, warnOnly, p.getVersion(), p.getKey() );\n+                    validateVersion( \"build.plugins.plugin.version\", problems, errOn30, p.getVersion(), p.getKey() );\n \n-                    validateBoolean( \"build.plugins.plugin.inherited\", problems, warnOnly, p.getInherited(),\n+                    validateBoolean( \"build.plugins.plugin.inherited\", problems, errOn30, p.getInherited(),\n                                      p.getKey() );\n \n-                    validateBoolean( \"build.plugins.plugin.extensions\", problems, warnOnly, p.getExtensions(),\n+                    validateBoolean( \"build.plugins.plugin.extensions\", problems, errOn30, p.getExtensions(),\n                                      p.getKey() );\n \n                     for ( Dependency d : p.getDependencies() )\n                     {\n                         validateEnum( \"build.plugins.plugin[\" + p.getKey() + \"].dependencies.dependency.scope\",\n-                                      problems, warnOnly, d.getScope(), d.getManagementKey(),\n+                                      problems, errOn30, d.getScope(), d.getManagementKey(),\n                                       \"compile\", \"runtime\", \"system\" );\n                     }\n                 }\n@@ -299,12 +290,14 @@ else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n             {\n                 for ( ReportPlugin p : reporting.getPlugins() )\n                 {\n-                    validateStringNotEmpty( \"reporting.plugins.plugin.artifactId\", problems, false, p.getArtifactId() );\n+                    validateStringNotEmpty( \"reporting.plugins.plugin.artifactId\", problems, Severity.ERROR,\n+                                            p.getArtifactId() );\n \n-                    validateStringNotEmpty( \"reporting.plugins.plugin.groupId\", problems, false, p.getGroupId() );\n+                    validateStringNotEmpty( \"reporting.plugins.plugin.groupId\", problems, Severity.ERROR,\n+                                            p.getGroupId() );\n \n-                    validateStringNotEmpty( \"reporting.plugins.plugin.version\", problems, warnOnMissingPluginVersion,\n-                                            p.getVersion(), p.getKey() );\n+                    validateStringNotEmpty( \"reporting.plugins.plugin.version\", problems, errOn31, p.getVersion(),\n+                                            p.getKey() );\n                 }\n             }\n \n@@ -325,7 +318,7 @@ else if ( StringUtils.isNotEmpty( d.getSystemPath() ) )\n             {\n                 if ( distMgmt.getStatus() != null )\n                 {\n-                    addViolation( problems, false, \"'distributionManagement.status' must not be specified\" );\n+                    addViolation( problems, Severity.ERROR, \"'distributionManagement.status' must not be specified\" );\n                 }\n \n                 validateRepositoryLayout( problems, distMgmt.getRepository(), \"distributionManagement.repository\",\n@@ -343,7 +336,7 @@ private boolean validateId( String fieldName, ModelProblemCollector problems, St\n \n     private boolean validateId( String fieldName, ModelProblemCollector problems, String id, String sourceHint )\n     {\n-        if ( !validateStringNotEmpty( fieldName, problems, false, id, sourceHint ) )\n+        if ( !validateStringNotEmpty( fieldName, problems, Severity.ERROR, id, sourceHint ) )\n         {\n             return false;\n         }\n@@ -352,7 +345,7 @@ private boolean validateId( String fieldName, ModelProblemCollector problems, St\n             boolean match = id.matches( ID_REGEX );\n             if ( !match )\n             {\n-                addViolation( problems, false, \"'\" + fieldName + \"'\"\n+                addViolation( problems, Severity.ERROR, \"'\" + fieldName + \"'\"\n                     + ( sourceHint != null ? \" for \" + sourceHint : \"\" ) + \" with value '\" + id\n                     + \"' does not match a valid id pattern.\" );\n             }\n@@ -372,17 +365,17 @@ private void validateDependencies( ModelProblemCollector problems, List<Dependen\n             if ( \"pom\".equals( dependency.getType() ) && \"import\".equals( dependency.getScope() )\n                 && StringUtils.isNotEmpty( dependency.getClassifier() ) )\n             {\n-                addViolation( problems, false, \"'\" + prefix + \".classifier' must be empty for imported POM: \" + key );\n+                addViolation( problems, Severity.ERROR, \"'\" + prefix + \".classifier' must be empty for imported POM: \" + key );\n             }\n \n             Dependency existing = index.get( key );\n \n             if ( existing != null )\n             {\n-                boolean warning = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;\n+                Severity errOn30 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n                 String msg;\n-                if ( StringUtils.clean( existing.getVersion() ).equals( StringUtils.clean( dependency.getVersion() ) ) )\n+                if ( equals( existing.getVersion(), dependency.getVersion() ) )\n                 {\n                     msg =\n                         \"duplicate declaration of version \"\n@@ -395,7 +388,7 @@ private void validateDependencies( ModelProblemCollector problems, List<Dependen\n                             + StringUtils.defaultString( dependency.getVersion(), \"(?)\" );\n                 }\n \n-                addViolation( problems, warning, \"'\" + prefix\n+                addViolation( problems, errOn30, \"'\" + prefix\n                     + \".(groupId:artifactId:type:classifier)' must be unique: \" + key + \" -> \" + msg );\n             }\n             else\n@@ -412,19 +405,20 @@ private void validateRepositories( ModelProblemCollector problems, List<Reposito\n \n         for ( Repository repository : repositories )\n         {\n-            validateStringNotEmpty( prefix + \".id\", problems, false, repository.getId() );\n+            validateStringNotEmpty( prefix + \".id\", problems, Severity.ERROR, repository.getId() );\n \n-            validateStringNotEmpty( prefix + \"[\" + repository.getId() + \"].url\", problems, false, repository.getUrl() );\n+            validateStringNotEmpty( prefix + \"[\" + repository.getId() + \"].url\", problems, Severity.ERROR,\n+                                    repository.getUrl() );\n \n             String key = repository.getId();\n \n             Repository existing = index.get( key );\n \n             if ( existing != null )\n             {\n-                boolean warning = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;\n+                Severity errOn30 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n-                addViolation( problems, warning, \"'\" + prefix + \".id' must be unique: \" + repository.getId() + \" -> \"\n+                addViolation( problems, errOn30, \"'\" + prefix + \".id' must be unique: \" + repository.getId() + \" -> \"\n                     + existing.getUrl() + \" vs \" + repository.getUrl() );\n             }\n             else\n@@ -439,19 +433,20 @@ private void validateRepositoryLayout( ModelProblemCollector problems, Repositor\n     {\n         if ( repository != null && \"legacy\".equals( repository.getLayout() ) )\n         {\n-            addViolation( problems, true, \"'\" + prefix + \".layout = legacy' is deprecated: \" + repository.getId() );\n+            addViolation( problems, Severity.WARNING, \"'\" + prefix + \".layout = legacy' is deprecated: \"\n+                + repository.getId() );\n         }\n     }\n \n     private void validateResources( ModelProblemCollector problems, List<Resource> resources, String prefix, ModelBuildingRequest request )\n     {\n-        boolean warnOnBadBoolean = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;\n+        Severity errOn30 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n         for ( Resource resource : resources )\n         {\n-            validateStringNotEmpty( prefix + \".directory\", problems, false, resource.getDirectory() );\n+            validateStringNotEmpty( prefix + \".directory\", problems, Severity.ERROR, resource.getDirectory() );\n \n-            validateBoolean( prefix + \".filtering\", problems, warnOnBadBoolean, resource.getFiltering(),\n+            validateBoolean( prefix + \".filtering\", problems, errOn30, resource.getFiltering(),\n                              resource.getDirectory() );\n         }\n     }\n@@ -475,7 +470,7 @@ private void forcePluginExecutionIdCollision( Model model, ModelProblemCollector\n                     }\n                     catch ( IllegalStateException collisionException )\n                     {\n-                        addViolation( problems, false, collisionException.getMessage() );\n+                        addViolation( problems, Severity.ERROR, collisionException.getMessage() );\n                     }\n                 }\n             }\n@@ -486,15 +481,15 @@ private void forcePluginExecutionIdCollision( Model model, ModelProblemCollector\n     // Field validation\n     // ----------------------------------------------------------------------\n \n-    private boolean validateStringNoExpression( String fieldName, ModelProblemCollector problems, boolean warning,\n+    private boolean validateStringNoExpression( String fieldName, ModelProblemCollector problems, Severity severity,\n                                                 String string )\n     {\n         if ( !hasExpression( string ) )\n         {\n             return true;\n         }\n \n-        addViolation( problems, warning, \"'\" + fieldName + \"' contains an expression but should be a constant.\" );\n+        addViolation( problems, severity, \"'\" + fieldName + \"' contains an expression but should be a constant.\" );\n \n         return false;\n     }\n@@ -504,9 +499,10 @@ private boolean hasExpression( String value )\n         return value != null && value.indexOf( \"${\" ) >= 0;\n     }\n \n-    private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector problems, boolean warning, String string )\n+    private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector problems, Severity severity,\n+                                            String string )\n     {\n-        return validateStringNotEmpty( fieldName, problems, warning, string, null );\n+        return validateStringNotEmpty( fieldName, problems, severity, string, null );\n     }\n \n     /**\n@@ -517,10 +513,10 @@ private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector\n      * <li><code>string.length > 0</code>\n      * </ul>\n      */\n-    private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector problems, boolean warning,\n+    private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector problems, Severity severity,\n                                             String string, String sourceHint )\n     {\n-        if ( !validateNotNull( fieldName, problems, warning, string, sourceHint ) )\n+        if ( !validateNotNull( fieldName, problems, severity, string, sourceHint ) )\n         {\n             return false;\n         }\n@@ -532,11 +528,11 @@ private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector\n \n         if ( sourceHint != null )\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' is missing for \" + sourceHint );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' is missing for \" + sourceHint );\n         }\n         else\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' is missing.\" );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' is missing.\" );\n         }\n \n         return false;\n@@ -549,7 +545,8 @@ private boolean validateStringNotEmpty( String fieldName, ModelProblemCollector\n      * <li><code>string != null</code>\n      * </ul>\n      */\n-    private boolean validateNotNull( String fieldName, ModelProblemCollector problems, boolean warning, Object object, String sourceHint )\n+    private boolean validateNotNull( String fieldName, ModelProblemCollector problems, Severity severity,\n+                                     Object object, String sourceHint )\n     {\n         if ( object != null )\n         {\n@@ -558,17 +555,17 @@ private boolean validateNotNull( String fieldName, ModelProblemCollector problem\n \n         if ( sourceHint != null )\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' is missing for \" + sourceHint );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' is missing for \" + sourceHint );\n         }\n         else\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' is missing.\" );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' is missing.\" );\n         }\n \n         return false;\n     }\n \n-    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, boolean warning, String string,\n+    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, Severity severity, String string,\n                                      String sourceHint )\n     {\n         if ( string == null || string.length() <= 0 )\n@@ -583,18 +580,18 @@ private boolean validateBoolean( String fieldName, ModelProblemCollector problem\n \n         if ( sourceHint != null )\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be 'true' or 'false' for \" + sourceHint\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be 'true' or 'false' for \" + sourceHint\n                 + \" but is '\" + string + \"'.\" );\n         }\n         else\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be 'true' or 'false' but is '\" + string + \"'.\" );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be 'true' or 'false' but is '\" + string + \"'.\" );\n         }\n \n         return false;\n     }\n \n-    private boolean validateEnum( String fieldName, ModelProblemCollector problems, boolean warning, String string,\n+    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, String string,\n                                   String sourceHint, String... validValues )\n     {\n         if ( string == null || string.length() <= 0 )\n@@ -611,19 +608,19 @@ private boolean validateEnum( String fieldName, ModelProblemCollector problems,\n \n         if ( sourceHint != null )\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be one of \" + values + \" for \" + sourceHint\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be one of \" + values + \" for \" + sourceHint\n                 + \" but is '\" + string + \"'.\" );\n         }\n         else\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be one of \" + values + \" but is '\" + string\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be one of \" + values + \" but is '\" + string\n                 + \"'.\" );\n         }\n \n         return false;\n     }\n \n-    private boolean validateVersion( String fieldName, ModelProblemCollector problems, boolean warning, String string,\n+    private boolean validateVersion( String fieldName, ModelProblemCollector problems, Severity severity, String string,\n                                      String sourceHint )\n     {\n         if ( string == null || string.length() <= 0 )\n@@ -638,26 +635,36 @@ private boolean validateVersion( String fieldName, ModelProblemCollector problem\n \n         if ( sourceHint != null )\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be a valid version for \" + sourceHint\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be a valid version for \" + sourceHint\n                 + \" but is '\" + string + \"'.\" );\n         }\n         else\n         {\n-            addViolation( problems, warning, \"'\" + fieldName + \"' must be a valid version but is '\" + string + \"'.\" );\n+            addViolation( problems, severity, \"'\" + fieldName + \"' must be a valid version but is '\" + string + \"'.\" );\n         }\n \n         return false;\n     }\n \n-    private void addViolation( ModelProblemCollector problems, boolean warning, String message )\n+    private static void addViolation( ModelProblemCollector problems, Severity severity, String message )\n+    {\n+        problems.add( severity, message, null );\n+    }\n+\n+    private static boolean equals( String s1, String s2 )\n+    {\n+        return StringUtils.clean( s1 ).equals( StringUtils.clean( s2 ) );\n+    }\n+\n+    private static Severity getSeverity( ModelBuildingRequest request, int errorThreshold )\n     {\n-        if ( warning )\n+        if ( request.getValidationLevel() < errorThreshold )\n         {\n-            problems.addWarning( message );\n+            return Severity.WARNING;\n         }\n         else\n         {\n-            problems.addError( message );\n+            return Severity.ERROR;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "sha": "bff18df4b4aea974470f158366f27780ef143d72",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/java/org/apache/maven/model/building/SimpleProblemCollector.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/test/java/org/apache/maven/model/building/SimpleProblemCollector.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 16,
                "filename": "maven-model-builder/src/test/java/org/apache/maven/model/building/SimpleProblemCollector.java",
                "patch": "@@ -22,6 +22,8 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import org.apache.maven.model.building.ModelProblem.Severity;\n+\n /**\n  * A simple model problem collector for testing the model building components.\n  * \n@@ -35,34 +37,38 @@\n \n     private List<String> errors = new ArrayList<String>();\n \n-    public void addError( String message )\n-    {\n-        errors.add( message );\n-    }\n+    private List<String> fatals = new ArrayList<String>();\n \n-    public void addError( String message, Exception cause )\n+    public List<String> getWarnings()\n     {\n-        addError( message );\n+        return warnings;\n     }\n \n-    public void addWarning( String message )\n+    public List<String> getErrors()\n     {\n-        warnings.add( message );\n+        return errors;\n     }\n \n-    public void addWarning( String message, Exception cause )\n+    public List<String> getFatals()\n     {\n-        addWarning( message );\n+        return fatals;\n     }\n \n-    public List<String> getWarnings()\n+    public void add( Severity severity, String message, Exception cause )\n     {\n-        return warnings;\n-    }\n+        switch ( severity )\n+        {\n+            case FATAL:\n+                fatals.add( message );\n+                break;\n+            case ERROR:\n+                errors.add( message );\n+                break;\n+            case WARNING:\n+                warnings.add( message );\n+                break;\n+        }\n \n-    public List<String> getErrors()\n-    {\n-        return errors;\n     }\n \n }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/java/org/apache/maven/model/building/SimpleProblemCollector.java",
                "sha": "84edecde38396936acd669b967f35abec4f426af",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 27,
                "filename": "maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java",
                "patch": "@@ -102,8 +102,9 @@ protected void tearDown()\n         super.tearDown();\n     }\n \n-    private void assertViolations( SimpleProblemCollector result, int errors, int warnings )\n+    private void assertViolations( SimpleProblemCollector result, int fatals, int errors, int warnings )\n     {\n+        assertEquals( fatals, result.getFatals().size() );\n         assertEquals( errors, result.getErrors().size() );\n         assertEquals( warnings, result.getWarnings().size() );\n     }\n@@ -113,7 +114,7 @@ public void testMissingModelVersion()\n     {\n         SimpleProblemCollector result = validate( \"missing-modelVersion-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'modelVersion' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -124,7 +125,7 @@ public void testBadModelVersion()\n         SimpleProblemCollector result =\n             validateRaw( \"bad-modelVersion.xml\", ModelBuildingRequest.VALIDATION_LEVEL_STRICT );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf( \"modelVersion\" ) > -1 );\n     }\n@@ -134,7 +135,7 @@ public void testMissingArtifactId()\n     {\n         SimpleProblemCollector result = validate( \"missing-artifactId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'artifactId' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -144,7 +145,7 @@ public void testMissingGroupId()\n     {\n         SimpleProblemCollector result = validate( \"missing-groupId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'groupId' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -154,7 +155,7 @@ public void testInvalidIds()\n     {\n         SimpleProblemCollector result = validate( \"invalid-ids-pom.xml\" );\n \n-        assertViolations( result, 2, 0 );\n+        assertViolations( result, 0, 2, 0 );\n \n         assertEquals( \"'groupId' with value 'o/a/m' does not match a valid id pattern.\", result.getErrors().get( 0 ) );\n \n@@ -166,7 +167,7 @@ public void testMissingType()\n     {\n         SimpleProblemCollector result = validate( \"missing-type-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'packaging' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -176,7 +177,7 @@ public void testMissingVersion()\n     {\n         SimpleProblemCollector result = validate( \"missing-version-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'version' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -186,7 +187,7 @@ public void testInvalidAggregatorPackaging()\n     {\n         SimpleProblemCollector result = validate( \"invalid-aggregator-packaging-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf( \"Aggregator projects require 'pom' as packaging.\" ) > -1 );\n     }\n@@ -196,7 +197,7 @@ public void testMissingDependencyArtifactId()\n     {\n         SimpleProblemCollector result = validate( \"missing-dependency-artifactId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf( \"'dependencies.dependency.artifactId' is missing\" ) > -1 );\n     }\n@@ -206,7 +207,7 @@ public void testMissingDependencyGroupId()\n     {\n         SimpleProblemCollector result = validate( \"missing-dependency-groupId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf( \"'dependencies.dependency.groupId' is missing\" ) > -1 );\n     }\n@@ -216,7 +217,7 @@ public void testMissingDependencyVersion()\n     {\n         SimpleProblemCollector result = validate( \"missing-dependency-version-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf( \"'dependencies.dependency.version' is missing\" ) > -1 );\n     }\n@@ -226,7 +227,7 @@ public void testMissingDependencyManagementArtifactId()\n     {\n         SimpleProblemCollector result = validate( \"missing-dependency-mgmt-artifactId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf(\n                                                          \"'dependencyManagement.dependencies.dependency.artifactId' is missing\" ) > -1 );\n@@ -237,7 +238,7 @@ public void testMissingDependencyManagementGroupId()\n     {\n         SimpleProblemCollector result = validate( \"missing-dependency-mgmt-groupId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).indexOf(\n                                                          \"'dependencyManagement.dependencies.dependency.groupId' is missing\" ) > -1 );\n@@ -248,7 +249,7 @@ public void testMissingAll()\n     {\n         SimpleProblemCollector result = validate( \"missing-1-pom.xml\" );\n \n-        assertViolations( result, 4, 0 );\n+        assertViolations( result, 0, 4, 0 );\n \n         List<String> messages = result.getErrors();\n \n@@ -264,7 +265,7 @@ public void testMissingPluginArtifactId()\n     {\n         SimpleProblemCollector result = validate( \"missing-plugin-artifactId-pom.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'build.plugins.plugin.artifactId' is missing.\", result.getErrors().get( 0 ) );\n     }\n@@ -275,14 +276,14 @@ public void testMissingPluginVersion()\n         SimpleProblemCollector result =\n             validateEffective( \"missing-plugin-version-pom.xml\", ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1 );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertEquals( \"'build.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-it-plugin\",\n                       result.getErrors().get( 0 ) );\n \n         result = validateEffective( \"missing-plugin-version-pom.xml\", ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n-        assertViolations( result, 0, 1 );\n+        assertViolations( result, 0, 0, 1 );\n     }\n \n     public void testMissingRepositoryId()\n@@ -291,7 +292,7 @@ public void testMissingRepositoryId()\n         SimpleProblemCollector result =\n             validateRaw( \"missing-repository-id-pom.xml\", ModelBuildingRequest.VALIDATION_LEVEL_STRICT );\n \n-        assertViolations( result, 4, 0 );\n+        assertViolations( result, 0, 4, 0 );\n \n         assertEquals( \"'repositories.repository.id' is missing.\", result.getErrors().get( 0 ) );\n \n@@ -307,7 +308,7 @@ public void testMissingResourceDirectory()\n     {\n         SimpleProblemCollector result = validate( \"missing-resource-directory-pom.xml\" );\n \n-        assertViolations( result, 2, 0 );\n+        assertViolations( result, 0, 2, 0 );\n \n         assertEquals( \"'build.resources.resource.directory' is missing.\", result.getErrors().get( 0 ) );\n \n@@ -319,7 +320,7 @@ public void testBadPluginDependencyScope()\n     {\n         SimpleProblemCollector result = validate( \"bad-plugin-dependency-scope.xml\" );\n \n-        assertViolations( result, 3, 0 );\n+        assertViolations( result, 0, 3, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"test:d\" ) );\n \n@@ -333,7 +334,7 @@ public void testBadDependencyScope()\n     {\n         SimpleProblemCollector result = validate( \"bad-dependency-scope.xml\" );\n \n-        assertViolations( result, 0, 2 );\n+        assertViolations( result, 0, 0, 2 );\n \n         assertTrue( result.getWarnings().get( 0 ).contains( \"test:f\" ) );\n \n@@ -345,7 +346,7 @@ public void testBadDependencyVersion()\n     {\n         SimpleProblemCollector result = validate( \"bad-dependency-version.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"test:b\" ) );\n     }\n@@ -355,7 +356,7 @@ public void testDuplicateModule()\n     {\n         SimpleProblemCollector result = validate( \"duplicate-module.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"child\" ) );\n     }\n@@ -365,7 +366,7 @@ public void testDuplicateProfileId()\n     {\n         SimpleProblemCollector result = validateRaw( \"duplicate-profile-id.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"non-unique-id\" ) );\n     }\n@@ -375,7 +376,7 @@ public void testBadPluginVersion()\n     {\n         SimpleProblemCollector result = validate( \"bad-plugin-version.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"test:mip\" ) );\n     }\n@@ -385,9 +386,21 @@ public void testDistributionManagementStatus()\n     {\n         SimpleProblemCollector result = validate( \"distribution-management-status.xml\" );\n \n-        assertViolations( result, 1, 0 );\n+        assertViolations( result, 0, 1, 0 );\n \n         assertTrue( result.getErrors().get( 0 ).contains( \"distributionManagement.status\" ) );\n     }\n \n+    public void testIncompleteParent()\n+        throws Exception\n+    {\n+        SimpleProblemCollector result = validateRaw( \"incomplete-parent.xml\" );\n+\n+        assertViolations( result, 3, 0, 0 );\n+\n+        assertTrue( result.getFatals().get( 0 ).contains( \"parent.groupId\" ) );\n+        assertTrue( result.getFatals().get( 1 ).contains( \"parent.artifactId\" ) );\n+        assertTrue( result.getFatals().get( 2 ).contains( \"parent.version\" ) );\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java",
                "sha": "baa4c2a7c5a3353627315f63f283deedbb9213f1",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/maven/blob/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/resources/poms/validation/incomplete-parent.xml",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/test/resources/poms/validation/incomplete-parent.xml?ref=1068ab557c476a291f3f16bc2b2523d5613c5e17",
                "deletions": 0,
                "filename": "maven-model-builder/src/test/resources/poms/validation/incomplete-parent.xml",
                "patch": "@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <!-- all fields missing -->\n+  </parent>\n+\n+  <artifactId>aid</artifactId>\n+  <groupId>gid</groupId>\n+  <version>0.1</version>\n+</project>",
                "raw_url": "https://github.com/apache/maven/raw/1068ab557c476a291f3f16bc2b2523d5613c5e17/maven-model-builder/src/test/resources/poms/validation/incomplete-parent.xml",
                "sha": "2fc94d57d3e94c1c5e0c82c46e53bd7c6b1fba71",
                "status": "added"
            }
        ],
        "message": "[MNG-4454] Incomplete <parent> element causes NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@881784 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/8b21cd1567f05835b777419b1f9bd93c9876d950",
        "repo": "maven",
        "unit_tests": [
            "DefaultProfileManagerTest.java",
            "DefaultModelValidatorTest.java",
            "StringSearchModelInterpolatorTest.java",
            "JdkVersionProfileActivatorTest.java",
            "PropertyProfileActivatorTest.java",
            "DefaultModelValidatorTest.java"
        ]
    },
    "maven_1a18eb6": {
        "bug_id": "maven_1a18eb6",
        "commit": "https://github.com/apache/maven/commit/1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven/blob/1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java?ref=1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f",
                "deletions": 3,
                "filename": "maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "patch": "@@ -209,10 +209,13 @@ else if ( exception instanceof PluginExecutionException )\n                 {\n                     Throwable cause2 = cause.getCause();\n \n-                    if ( cause2 instanceof NoClassDefFoundError\n-                        && cause2.getMessage().contains( \"org/sonatype/aether/\" ) )\n+                    if ( cause2 instanceof NoClassDefFoundError )\n                     {\n-                        reference = \"AetherClassNotFound\";\n+                        String message = cause2.getMessage();\n+                        if ( message != null && message.contains( \"org/sonatype/aether/\" ) )\n+                        {\n+                            reference = \"AetherClassNotFound\";\n+                        }\n                     }\n                 }\n ",
                "raw_url": "https://github.com/apache/maven/raw/1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "sha": "2193e61a35ed40c4fb0a79a7098832a586d4c39b",
                "status": "modified"
            },
            {
                "additions": 49,
                "blob_url": "https://github.com/apache/maven/blob/1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f/maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java?ref=1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f",
                "deletions": 4,
                "filename": "maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java",
                "patch": "@@ -22,15 +22,22 @@\n import java.io.IOException;\n import java.net.ConnectException;\n \n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.plugin.MojoExecution;\n import org.apache.maven.plugin.MojoExecutionException;\n \n-import junit.framework.TestCase;\n+import org.apache.maven.plugin.PluginContainerException;\n+import org.apache.maven.plugin.PluginExecutionException;\n+import org.apache.maven.plugin.descriptor.MojoDescriptor;\n+import org.apache.maven.plugin.descriptor.PluginDescriptor;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * @author <a href=\"mailto:baerrach@apache.org\">Barrie Treloar</a>\n  */\n public class DefaultExceptionHandlerTest\n-    extends TestCase\n {\n     /**\n      * Running Maven under JDK7 may cause connection issues because IPv6 is used by default.\n@@ -42,11 +49,11 @@\n      * http://cwiki.apache.org/confluence/display/MAVEN/ConnectException\n      * </p>\n      */\n+    @Test\n     public void testJdk7ipv6()\n     {\n         ConnectException connEx = new ConnectException( \"Connection refused: connect\" );\n-        IOException ioEx = new IOException( \"Unable to establish loopback connection\" );\n-        ioEx.initCause( connEx );\n+        IOException ioEx = new IOException( \"Unable to establish loopback connection\", connEx );\n         MojoExecutionException mojoEx =\n             new MojoExecutionException( \"Error executing Jetty: Unable to establish loopback connection\", ioEx );\n \n@@ -57,4 +64,42 @@ public void testJdk7ipv6()\n         assertEquals( expectedReference, exceptionSummary.getReference() );\n \n     }\n+\n+    @Test\n+    public void testHandleExceptionAetherClassNotFound()\n+    {\n+        Throwable cause2 = new NoClassDefFoundError( \"org/sonatype/aether/RepositorySystem\" );\n+        Plugin plugin = new Plugin();\n+        Exception cause = new PluginContainerException( plugin, null, null, cause2 );\n+        PluginDescriptor pluginDescriptor = new PluginDescriptor();\n+        MojoDescriptor mojoDescriptor = new MojoDescriptor();\n+        mojoDescriptor.setPluginDescriptor( pluginDescriptor );\n+        MojoExecution mojoExecution = new MojoExecution(mojoDescriptor);\n+        Throwable exception = new PluginExecutionException( mojoExecution, null, cause );\n+\n+        DefaultExceptionHandler handler = new DefaultExceptionHandler();\n+        ExceptionSummary summary = handler.handleException( exception );\n+\n+        String expectedReference = \"http://cwiki.apache.org/confluence/display/MAVEN/AetherClassNotFound\";\n+        assertEquals( expectedReference, summary.getReference() );\n+    }\n+\n+    @Test\n+    public void testHandleExceptionNoClassDefFoundErrorNull()\n+    {\n+        Throwable cause2 = new NoClassDefFoundError();\n+        Plugin plugin = new Plugin();\n+        Exception cause = new PluginContainerException( plugin, null, null, cause2 );\n+        PluginDescriptor pluginDescriptor = new PluginDescriptor();\n+        MojoDescriptor mojoDescriptor = new MojoDescriptor();\n+        mojoDescriptor.setPluginDescriptor( pluginDescriptor );\n+        MojoExecution mojoExecution = new MojoExecution(mojoDescriptor);\n+        Throwable exception = new PluginExecutionException( mojoExecution, null, cause );\n+\n+        DefaultExceptionHandler handler = new DefaultExceptionHandler();\n+        ExceptionSummary summary = handler.handleException( exception );\n+\n+        String expectedReference = \"http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException\";\n+        assertEquals( expectedReference, summary.getReference() );\n+    }\n }",
                "raw_url": "https://github.com/apache/maven/raw/1a18eb6c9c7ac24adc9d57781e85fb3f60b6b65f/maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java",
                "sha": "9fe6d4f30fd380b3f43f5b176bde37151b90f0ab",
                "status": "modified"
            }
        ],
        "message": "[MNG-6626] fix DefaultExceptionHandler NPE\n\nCloses #241",
        "parent": "https://github.com/apache/maven/commit/3ac9718f8267b2fb9636f1a58acc6bb53356c329",
        "repo": "maven",
        "unit_tests": [
            "DefaultExceptionHandlerTest.java"
        ]
    },
    "maven_1b15709": {
        "bug_id": "maven_1b15709",
        "commit": "https://github.com/apache/maven/commit/1b157097df47256ce60973a5cbd14283dd805605",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/1b157097df47256ce60973a5cbd14283dd805605/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=1b157097df47256ce60973a5cbd14283dd805605",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -1062,7 +1062,7 @@ public void setArtifacts( Set<Artifact> artifacts )\n     {\n         if ( artifacts == null )\n         {\n-            if ( artifactFilter == null )\n+            if ( artifactFilter == null || resolvedArtifacts == null )\n             {\n                 artifacts = new LinkedHashSet<Artifact>();\n             }",
                "raw_url": "https://github.com/apache/maven/raw/1b157097df47256ce60973a5cbd14283dd805605/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "5f0eb608da61388465d2d46b62f7f93f2738afa9",
                "status": "modified"
            }
        ],
        "message": "o Fixed potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@929317 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/14094c260ba2658be5f70255b9785729ecb8fb69",
        "repo": "maven",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven_23e2504": {
        "bug_id": "maven_23e2504",
        "commit": "https://github.com/apache/maven/commit/23e2504d23325b034969f4977ea2c6ac7cf5785d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/DefaultMaven.java?ref=23e2504d23325b034969f4977ea2c6ac7cf5785d",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "patch": "@@ -311,7 +311,7 @@ private MavenExecutionResult doExecute( MavenExecutionRequest request,\n             lifecycleExecutor.execute( session, rm, dispatcher );\n         }\n         catch ( Exception e )\n-        {\n+        {                        \n             executionExceptions.add( new BuildFailureException( e.getMessage(), e ) );\n         }\n ",
                "raw_url": "https://github.com/apache/maven/raw/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "sha": "c45b077e31af66efd86cae67ee14ab5489d79216",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java?ref=23e2504d23325b034969f4977ea2c6ac7cf5785d",
                "deletions": 0,
                "filename": "maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java",
                "patch": "@@ -125,6 +125,11 @@ public MavenExecutionRequest setSettingsFile( String settingsFile )\n \n     public String getBaseDirectory()\n     {\n+        if ( basedir == null )\n+        {\n+            return null;\n+        }\n+\n         return basedir.getAbsolutePath();\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java",
                "sha": "85b70290c5acc71b3f06c3045dd3988783fb89ab",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/pom.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/pom.xml?ref=23e2504d23325b034969f4977ea2c6ac7cf5785d",
                "deletions": 1,
                "filename": "maven-embedder/pom.xml",
                "patch": "@@ -27,7 +27,7 @@\n   <artifactId>maven-embedder</artifactId>\n   <name>Maven Embedder</name>\n   <properties>\n-    <bundleVersion>2.1.0.v20061231-1908</bundleVersion>\n+    <bundleVersion>2.1.0.v20061231-1929</bundleVersion>\n   </properties>\n   <build>\n     <resources>",
                "raw_url": "https://github.com/apache/maven/raw/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/pom.xml",
                "sha": "ac3b13fb74fea52284a4deee616566bf9716f6b0",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/src/main/java/org/apache/maven/embedder/execution/DefaultMavenExecutionRequestDefaultsPopulator.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/embedder/execution/DefaultMavenExecutionRequestDefaultsPopulator.java?ref=23e2504d23325b034969f4977ea2c6ac7cf5785d",
                "deletions": 0,
                "filename": "maven-embedder/src/main/java/org/apache/maven/embedder/execution/DefaultMavenExecutionRequestDefaultsPopulator.java",
                "patch": "@@ -144,6 +144,13 @@ else if ( request.isNoSnapshotUpdates() )\n             throw new MavenEmbedderException( \"Unable to configure Maven for execution\", e );\n         }\n \n+        // BaseDirectory in MavenExecutionRequest\n+\n+        if ( request.getPomFile() != null && request.getBaseDirectory() == null )\n+        {\n+            request.setBasedir( new File( request.getPomFile() ) );\n+        }\n+\n         return request;\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/src/main/java/org/apache/maven/embedder/execution/DefaultMavenExecutionRequestDefaultsPopulator.java",
                "sha": "f69592528ecbf7ad680bc74b57afc40b757311dc",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/maven/blob/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java?ref=23e2504d23325b034969f4977ea2c6ac7cf5785d",
                "deletions": 2,
                "filename": "maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "patch": "@@ -54,12 +54,12 @@ public void testMavenEmbedder()\n     // Goal/Phase execution tests\n     // ----------------------------------------------------------------------\n \n-    public void testPhaseExecution()\n+    public void testSimplePhaseExecutionUsingABaseDirectory()\n         throws Exception\n     {\n         File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n \n-        File targetDirectory = new File( basedir, \"target/embedder-test-project\" );\n+        File targetDirectory = new File( basedir, \"target/embedder-test-project0\" );\n \n         FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n \n@@ -69,6 +69,34 @@ public void testPhaseExecution()\n \n         MavenExecutionResult result = maven.execute( request );\n \n+        MavenProject project = result.getMavenProject();\n+\n+        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n+\n+        File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n+\n+        assertTrue( jar.exists() );\n+    }\n+\n+    public void testSimplePhaseExecutionUsingAPomFile()\n+        throws Exception\n+    {\n+        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n+\n+        File targetDirectory = new File( basedir, \"target/embedder-test-project1\" );\n+\n+        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n+\n+        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n+            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n+            .setGoals( Arrays.asList( new String[]{ \"package\" } ) );\n+\n+        MavenExecutionResult result = maven.execute( request );\n+\n+        MavenProject project = result.getMavenProject();\n+\n+        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n+\n         File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n \n         assertTrue( jar.exists() );",
                "raw_url": "https://github.com/apache/maven/raw/23e2504d23325b034969f4977ea2c6ac7cf5785d/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "sha": "5b697a9ce2ea37f5ed02387eaaf518e57ca639d3",
                "status": "modified"
            }
        ],
        "message": "MNG-2733 When request.setPomFile( file ) is used, takes its basedir for the execution request so that request.getBasedir() doesn't NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@491524 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/cb381ffd76f2b561290766e625be814a026b4717",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenTest.java"
        ]
    },
    "maven_3f031d5": {
        "bug_id": "maven_3f031d5",
        "commit": "https://github.com/apache/maven/commit/3f031d5722ec5799c1fb72711867dda8b02b4b23",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "patch": "@@ -200,7 +200,7 @@ private void injectHandlerPluginConfiguration( MavenProject project, String grou\n     private void processPluginConfiguration( MavenProject project, MavenSession mavenSession, Map phaseMap )\n         throws LifecycleExecutionException, ArtifactResolutionException\n     {\n-        for ( Iterator i = project.getPlugins().iterator(); i.hasNext(); )\n+        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext(); )\n         {\n             Plugin plugin = (Plugin) i.next();\n ",
                "raw_url": "https://github.com/apache/maven/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "sha": "e2d4ddda3aa43dd60b05eed9250371067b85a0a5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "patch": "@@ -152,7 +152,7 @@ public PluginDescriptor verifyPlugin( String groupId, String artifactId, String\n \n             org.apache.maven.model.Plugin pluginConfig = null;\n \n-            for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )\n+            for ( Iterator it = project.getBuildPlugins().iterator(); it.hasNext(); )\n             {\n                 org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n ",
                "raw_url": "https://github.com/apache/maven/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "sha": "ad3a8b46ee10793c59520aa7ab717a2112889196",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -28,6 +28,7 @@\n import java.io.File;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.List;\n \n /**\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl</a>\n@@ -84,11 +85,15 @@ public Object evaluate( String expr )\n             try\n             {\n                 PluginManager pluginManager = (PluginManager) context.lookup( role );\n-                for ( Iterator it = context.getProject().getReports().getPlugins().iterator(); it.hasNext(); )\n+                List reportPlugins = context.getProject().getReportPlugins();\n+                if ( reportPlugins != null )\n                 {\n-                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n-                    pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n-                                                context );\n+                    for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n+                    {\n+                        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n+                        pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n+                                                    context );\n+                    }\n                 }\n             }\n             catch ( ComponentLookupException cle )",
                "raw_url": "https://github.com/apache/maven/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "3bfdc79479b8f8f2c377b21e8b055376dae5edf5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -677,7 +677,16 @@ public List getRepositories()\n     // Plugins\n     // ----------------------------------------------------------------------\n \n-    public List getPlugins()\n+    public List getReportPlugins()\n+    {\n+        if ( model.getReports() == null )\n+        {\n+            return null;\n+        }\n+        return model.getReports().getPlugins();\n+\n+    }\n+    public List getBuildPlugins()\n     {\n         if ( model.getBuild() == null )\n         {\n@@ -811,9 +820,9 @@ public Xpp3Dom getGoalConfiguration( String pluginGroupId, String pluginArtifact\n         // for now I have to iterate through and see what we have.\n         // ----------------------------------------------------------------------\n \n-        if ( getPlugins() != null )\n+        if ( getBuildPlugins() != null )\n         {\n-            for ( Iterator iterator = getPlugins().iterator(); iterator.hasNext(); )\n+            for ( Iterator iterator = getBuildPlugins().iterator(); iterator.hasNext(); )\n             {\n                 Plugin plugin = (Plugin) iterator.next();\n \n@@ -845,4 +854,5 @@ public List getPluginRepositories()\n     {\n         return model.getPluginRepositories();\n     }\n+\n }",
                "raw_url": "https://github.com/apache/maven/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "ed1bd73b79953432f967eb9448833efcaa9572ae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "patch": "@@ -49,7 +49,7 @@ public void testProjectBuilder()\n         // Plugins\n         // ----------------------------------------------------------------------\n \n-        List plugins = project.getPlugins();\n+        List plugins = project.getBuildPlugins();\n \n         // Plugin0 [plexus]\n ",
                "raw_url": "https://github.com/apache/maven/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "sha": "d29e424cab4fd689393e6035a7e21e4682fd3d89",
                "status": "modified"
            }
        ],
        "message": "avoid NPE if there are not report plugins defined in the POM when generating the site.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168565 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/57284e462cb9f55931774a5b9caa453d7deb42e7",
        "repo": "maven",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java",
            "MavenProjectTest.java"
        ]
    },
    "maven_412ab33": {
        "bug_id": "maven_412ab33",
        "commit": "https://github.com/apache/maven/commit/412ab3371b453f348515a94b34b0014d3dca537c",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven/blob/412ab3371b453f348515a94b34b0014d3dca537c/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java?ref=412ab3371b453f348515a94b34b0014d3dca537c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "patch": "@@ -203,12 +203,24 @@ private String getMessage( String message, Throwable exception )\n         {\n             String exceptionMessage = t.getMessage();\n \n+            if ( exceptionMessage == null )\n+            {\n+                exceptionMessage = \"\";\n+            }\n+\n             if ( t instanceof AbstractMojoExecutionException )\n             {\n                 String longMessage = ( (AbstractMojoExecutionException) t ).getLongMessage();\n                 if ( StringUtils.isNotEmpty( longMessage ) )\n                 {\n-                    exceptionMessage = longMessage;\n+                    if ( StringUtils.isEmpty( exceptionMessage ) || longMessage.contains( exceptionMessage ) )\n+                    {\n+                        exceptionMessage = longMessage;\n+                    }\n+                    else\n+                    {\n+                        exceptionMessage += \": \" + longMessage;\n+                    }\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/maven/raw/412ab3371b453f348515a94b34b0014d3dca537c/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java",
                "sha": "6f407785ffa6ddb9ade0b7739c66022555da40dd",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven/blob/412ab3371b453f348515a94b34b0014d3dca537c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=412ab3371b453f348515a94b34b0014d3dca537c",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -1800,8 +1800,8 @@ protected void setScriptSourceRoots( List<String> scriptSourceRoots )\n \n     protected ArtifactRepository getReleaseArtifactRepository()\n     {\n-        if ( getDistributionManagement().getRepository() != null )\n-        {           \n+        if ( getDistributionManagement() != null && getDistributionManagement().getRepository() != null )\n+        {\n             try\n             {\n                 ArtifactRepository repo =\n@@ -1819,8 +1819,8 @@ protected ArtifactRepository getReleaseArtifactRepository()\n \n     protected ArtifactRepository getSnapshotArtifactRepository()\n     {\n-        if ( getDistributionManagement().getSnapshotRepository() != null )\n-        {           \n+        if ( getDistributionManagement() != null && getDistributionManagement().getSnapshotRepository() != null )\n+        {\n             try\n             {\n                 ArtifactRepository repo =",
                "raw_url": "https://github.com/apache/maven/raw/412ab3371b453f348515a94b34b0014d3dca537c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "749f6022b4dd08bc6714e6b00a8bfe052b96cc2d",
                "status": "modified"
            }
        ],
        "message": "o Fixed NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@828249 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/c501175f791ff0ca4bc5a3cc4ed4905fb6caeed9",
        "repo": "maven",
        "unit_tests": [
            "DefaultExceptionHandlerTest.java",
            "MavenProjectTest.java"
        ]
    },
    "maven_42340c1": {
        "bug_id": "maven_42340c1",
        "commit": "https://github.com/apache/maven/commit/42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven/blob/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
                "deletions": 0,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "patch": "@@ -57,6 +57,7 @@\n import org.apache.maven.repository.RepositorySystem;\n import org.apache.maven.wagon.ResourceDoesNotExistException;\n import org.apache.maven.wagon.TransferFailedException;\n+import org.codehaus.plexus.classworlds.realm.ClassRealm;\n import org.codehaus.plexus.component.annotations.Requirement;\n import org.codehaus.plexus.configuration.PlexusConfiguration;\n import org.codehaus.plexus.logging.Logger;\n@@ -140,6 +141,8 @@ public void execute( MavenSession session )\n                 goals = Collections.singletonList( goal );\n             }\n         }\n+\n+        ClassLoader oldContextClassLoader = Thread.currentThread().getContextClassLoader();\n                 \n         for ( MavenProject currentProject : session.getProjects() )\n         {\n@@ -157,6 +160,12 @@ public void execute( MavenSession session )\n             {\n                 session.setCurrentProject( currentProject );\n \n+                ClassRealm projectRealm = currentProject.getClassRealm();\n+                if ( projectRealm != null )\n+                {\n+                    Thread.currentThread().setContextClassLoader( projectRealm );\n+                }\n+\n                 MavenExecutionPlan executionPlan = calculateExecutionPlan( session, goals.toArray( new String[] {} ) );\n \n                 //TODO: once we have calculated the build plan then we should accurately be able to download\n@@ -215,6 +224,8 @@ else if ( MavenExecutionRequest.REACTOR_FAIL_FAST.equals( session.getReactorFail\n             finally\n             {\n                 session.setCurrentProject( null );\n+\n+                Thread.currentThread().setContextClassLoader( oldContextClassLoader );\n             }\n         }        \n     }        ",
                "raw_url": "https://github.com/apache/maven/raw/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "sha": "0298812c706305a1f8a0af99d85f4e6a243a9df5",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven/blob/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java?ref=42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
                "deletions": 8,
                "filename": "maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java",
                "patch": "@@ -72,8 +72,6 @@\n \n     @Requirement\n     private ResolutionErrorHandler resolutionErrorHandler;\n-    \n-    private MavenProject standaloneProject;\n \n     // ----------------------------------------------------------------------\n     // MavenProjectBuilder Implementation\n@@ -143,6 +141,8 @@ private MavenProject build( File pomFile, boolean localProject, ProjectBuildingR\n             project.setRemoteArtifactRepositories( listener.getRemoteRepositories() );\n             project.setPluginArtifactRepositories( listener.getPluginRepositories() );\n \n+            project.setClassRealm( listener.getProjectRealm() );\n+\n             try\n             {\n                 if ( configuration.isProcessPlugins() )\n@@ -252,11 +252,6 @@ public MavenProject build( Artifact artifact, ProjectBuildingRequest configurati\n     public MavenProject buildStandaloneSuperProject( ProjectBuildingRequest config )\n         throws ProjectBuildingException\n     {\n-        if ( standaloneProject != null )\n-        {\n-            return standaloneProject;\n-        }\n-\n         ModelBuildingRequest request = getModelBuildingRequest( config );\n \n         ModelBuildingResult result;\n@@ -269,15 +264,20 @@ public MavenProject buildStandaloneSuperProject( ProjectBuildingRequest config )\n             throw new ProjectBuildingException( \"[standalone]\", \"Failed to build standalone project\", e );\n         }\n \n+        MavenProject standaloneProject;\n+\n         try\n         {\n             standaloneProject = new MavenProject( result.getEffectiveModel(), repositorySystem, this, config );\n         }\n         catch ( InvalidRepositoryException e )\n         {\n-            // Not going to happen.\n+            throw new IllegalStateException( e );\n         }\n \n+        standaloneProject.setActiveProfiles( result.getActiveExternalProfiles() );\n+        standaloneProject.setInjectedProfileIds( \"external\", getProfileIds( result.getActiveExternalProfiles() ) );\n+\n         standaloneProject.setExecutionRoot( true );\n \n         return standaloneProject;",
                "raw_url": "https://github.com/apache/maven/raw/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java",
                "sha": "7604aea1c9a05e48089cbdf603226ce14475d2d8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven/blob/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingHelper.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingHelper.java?ref=42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingHelper.java",
                "patch": "@@ -98,11 +98,13 @@ public ClassRealm createProjectRealm( Model model, ArtifactRepository localRepos\n                                           List<ArtifactRepository> remoteRepositories )\n         throws ArtifactResolutionException\n     {\n+        ClassRealm projectRealm = container.getContainerRealm();\n+\n         Build build = model.getBuild();\n \n         if ( build == null )\n         {\n-            return null;\n+            return projectRealm;\n         }\n \n         List<Plugin> extensionPlugins = new ArrayList<Plugin>();\n@@ -117,7 +119,7 @@ public ClassRealm createProjectRealm( Model model, ArtifactRepository localRepos\n \n         if ( build.getExtensions().isEmpty() && extensionPlugins.isEmpty() )\n         {\n-            return null;\n+            return projectRealm;\n         }\n \n         String realmId = model.getGroupId() + ':' + model.getArtifactId() + ':' + model.getVersion();\n@@ -129,8 +131,6 @@ public ClassRealm createProjectRealm( Model model, ArtifactRepository localRepos\n \n         ClassWorld world = ( (MutablePlexusContainer) container ).getClassWorld();\n \n-        ClassRealm projectRealm;\n-\n         synchronized ( world )\n         {\n             projectRealm = world.getClassRealm( realmId );",
                "raw_url": "https://github.com/apache/maven/raw/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingHelper.java",
                "sha": "baad3054b0929c4493e5e90b478af30cd4a39002",
                "status": "modified"
            },
            {
                "additions": 44,
                "blob_url": "https://github.com/apache/maven/blob/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
                "deletions": 10,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -68,6 +68,7 @@\n import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n import org.apache.maven.repository.RepositorySystem;\n+import org.codehaus.plexus.classworlds.realm.ClassRealm;\n import org.codehaus.plexus.util.StringUtils;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n@@ -167,6 +168,8 @@\n \n     private Map<String, Object> context;\n \n+    private ClassRealm classRealm;\n+\n     //\n \n     public MavenProject()\n@@ -380,16 +383,6 @@ public void setParent( MavenProject parent )\n     {\n         this.parent = parent;\n     }\n-\n-    public void setRemoteArtifactRepositories( List<ArtifactRepository> remoteArtifactRepositories )\n-    {\n-        this.remoteArtifactRepositories = remoteArtifactRepositories;\n-    }\n-\n-    public List<ArtifactRepository> getRemoteArtifactRepositories()\n-    {\n-        return remoteArtifactRepositories;\n-    }\n     \n     public boolean hasParent()\n     {\n@@ -1346,6 +1339,21 @@ private Build getModelBuild()\n         return build;\n     }\n \n+    public void setRemoteArtifactRepositories( List<ArtifactRepository> remoteArtifactRepositories )\n+    {\n+        this.remoteArtifactRepositories = remoteArtifactRepositories;\n+    }\n+\n+    public List<ArtifactRepository> getRemoteArtifactRepositories()\n+    {\n+        if ( remoteArtifactRepositories == null )\n+        {\n+            remoteArtifactRepositories = new ArrayList<ArtifactRepository>();\n+        }\n+\n+        return remoteArtifactRepositories;\n+    }\n+\n     public void setPluginArtifactRepositories( List<ArtifactRepository> pluginArtifactRepositories )\n     {\n         this.pluginArtifactRepositories = pluginArtifactRepositories;\n@@ -1357,6 +1365,11 @@ public void setPluginArtifactRepositories( List<ArtifactRepository> pluginArtifa\n      */\n     public List<ArtifactRepository> getPluginArtifactRepositories()\n     {\n+        if ( pluginArtifactRepositories == null )\n+        {\n+            pluginArtifactRepositories = new ArrayList<ArtifactRepository>();\n+        }\n+\n         return pluginArtifactRepositories;\n     }\n \n@@ -1969,4 +1982,25 @@ public Object getContextValue( String key )\n         }\n         return context.get( key );\n     }\n+\n+    /**\n+     * Sets the project's class realm.\n+     * \n+     * @param classRealm The class realm hosting the build extensions of this project, may be {@code null}.\n+     */\n+    public void setClassRealm( ClassRealm classRealm )\n+    {\n+        this.classRealm = classRealm;\n+    }\n+\n+    /**\n+     * Gets the project's class realm. This class realm hosts the build extensions of the project.\n+     * \n+     * @return The project's class realm or {@code null}.\n+     */\n+    public ClassRealm getClassRealm()\n+    {\n+        return classRealm;\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/maven/raw/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "512b46a054c07b45a702a9cbbe5395e20f199b43",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/ProjectBuildingHelper.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/ProjectBuildingHelper.java?ref=42340c1b9233bc9cbe18c90639101aa3fb5d62b9",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/project/ProjectBuildingHelper.java",
                "patch": "@@ -55,7 +55,7 @@\n      * @param model The model to create the project realm for, must not be {@code null}\n      * @param localRepository The local repository to use for artifact resolution, must not be {@code null}.\n      * @param remoteRepositories The remote repositories to use for artifact resolution, must not be {@code null}.\n-     * @return The project realm or {@code null} if no build extensions are present.\n+     * @return The project realm, never {@code null}.\n      * @throws ArtifactResolutionException If any build extension could not be resolved.\n      */\n     ClassRealm createProjectRealm( Model model, ArtifactRepository localRepository,",
                "raw_url": "https://github.com/apache/maven/raw/42340c1b9233bc9cbe18c90639101aa3fb5d62b9/maven-core/src/main/java/org/apache/maven/project/ProjectBuildingHelper.java",
                "sha": "2a36232719895723869c325fd3439e8d2d8bf408",
                "status": "modified"
            }
        ],
        "message": "o Used project realm during dependency resolution\no Fixed NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@793871 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/2caa6b511220ca61c9bbb8cc7ab5842d6c3e56dc",
        "repo": "maven",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven_4454210": {
        "bug_id": "maven_4454210",
        "commit": "https://github.com/apache/maven/commit/445421051c5d364839d3bcdf2fa35e3ecd06e9bc",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/445421051c5d364839d3bcdf2fa35e3ecd06e9bc/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java?ref=445421051c5d364839d3bcdf2fa35e3ecd06e9bc",
                "deletions": 1,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
                "patch": "@@ -309,7 +309,7 @@ public int compareTo( Item item )\n                         Item r = right.hasNext() ? right.next() : null;\n \n                         // if this is shorter, then invert the compare and mul with -1\n-                        int result = l == null ? -1 * r.compareTo( l ) : l.compareTo( r );\n+                        int result = l == null ? ( r == null ? 0 : -1 * r.compareTo( l ) ) : l.compareTo( r );\n \n                         if ( result != 0 )\n                         {",
                "raw_url": "https://github.com/apache/maven/raw/445421051c5d364839d3bcdf2fa35e3ecd06e9bc/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
                "sha": "e79b2385616d515b5b88b6f4b973075c7f82ec13",
                "status": "modified"
            }
        ],
        "message": "potential NPE",
        "parent": "https://github.com/apache/maven/commit/9bec8d7386156bd7b56b8261ecd51e903d55673e",
        "repo": "maven",
        "unit_tests": [
            "ComparableVersionTest.java"
        ]
    },
    "maven_494b72e": {
        "bug_id": "maven_494b72e",
        "commit": "https://github.com/apache/maven/commit/494b72ea2c4fdeff060c32b71a786ce011af5ab8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/494b72ea2c4fdeff060c32b71a786ce011af5ab8/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=494b72ea2c4fdeff060c32b71a786ce011af5ab8",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -206,15 +206,15 @@ public MavenProject buildFromRepository( Artifact artifact, List remoteArtifactR\n         }\n         catch ( ArtifactResolutionException e )\n         {\n-            throw new ProjectBuildingException( project.getId(), \"Error resolving project artifact.\", e );\n+            throw new ProjectBuildingException( artifact.getId(), \"Error resolving project artifact.\", e );\n         }\n         catch ( ArtifactNotFoundException e )\n         {\n-            throw new ProjectBuildingException( project.getId(), \"Error finding project artifact.\", e );\n+            throw new ProjectBuildingException( artifact.getId(), \"Error finding project artifact.\", e );\n         }\n         catch ( InvalidRepositoryException e )\n         {\n-            throw new ProjectBuildingException( project.getId(), \"Error with repository specified in project.\", e );\n+            throw new ProjectBuildingException( artifact.getId(), \"Error with repository specified in project.\", e );\n         }\n \n         ProjectBuilderConfiguration config = new DefaultProjectBuilderConfiguration().setLocalRepository( localRepository );",
                "raw_url": "https://github.com/apache/maven/raw/494b72ea2c4fdeff060c32b71a786ce011af5ab8/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "d5fd1ab2fc6a50ff0dfd11d6b5cc15c6e2e9c6dc",
                "status": "modified"
            }
        ],
        "message": "o Fixed NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749293 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/612a1f3fea856a345921b22fd3e8a2b3ef05d1e6",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven_4e51a3d": {
        "bug_id": "maven_4e51a3d",
        "commit": "https://github.com/apache/maven/commit/4e51a3d1850c619e04c93e7b8e2ea4622f70f6de",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven/blob/4e51a3d1850c619e04c93e7b8e2ea4622f70f6de/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/DefaultMaven.java?ref=4e51a3d1850c619e04c93e7b8e2ea4622f70f6de",
                "deletions": 6,
                "filename": "maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "patch": "@@ -126,14 +126,16 @@ public MavenExecutionResult execute( MavenExecutionRequest request )\n \n         // Either the build was successful, or it was a fail_at_end/fail_never reactor build\n \n+        ReactorManager reactorManager = result.getReactorManager();\n+        \n         // TODO: should all the logging be left to the CLI?\n-        logReactorSummary( result.getReactorManager() );\n+        logReactorSummary( reactorManager );\n \n-        if ( result.getReactorManager().hasBuildFailures() )\n+        if ( reactorManager != null && reactorManager.hasBuildFailures() )\n         {\n-            logErrors( result.getReactorManager(), request.isShowErrors() );\n+            logErrors( reactorManager, request.isShowErrors() );\n \n-            if ( !result.getReactorManager().FAIL_NEVER.equals( result.getReactorManager().getFailureBehavior() ) )\n+            if ( !ReactorManager.FAIL_NEVER.equals( reactorManager.getFailureBehavior() ) )\n             {\n                 dispatcher.dispatchError( event, request.getBaseDirectory(), null );\n \n@@ -153,7 +155,7 @@ public MavenExecutionResult execute( MavenExecutionRequest request )\n             }\n         }\n \n-        logSuccess( result.getReactorManager() );\n+        logSuccess( reactorManager );\n \n         stats( request.getStartTime() );\n \n@@ -608,7 +610,7 @@ protected void logSuccess( ReactorManager rm )\n \n     private void logReactorSummary( ReactorManager rm )\n     {\n-        if ( rm.hasMultipleProjects() && rm.executedMultipleProjects() )\n+        if ( rm != null && rm.hasMultipleProjects() && rm.executedMultipleProjects() )\n         {\n             getLogger().info( \"\" );\n             getLogger().info( \"\" );",
                "raw_url": "https://github.com/apache/maven/raw/4e51a3d1850c619e04c93e7b8e2ea4622f70f6de/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "sha": "ef1a798b5c55a4d73a8c1426d5ea2aa43b6c3e59",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE's related to a reactor manager that doesn't exist (in the case of a build error, f.e.).\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@496406 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/01b08e86d1c69519f6c1a70915572a31fadae58e",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenTest.java"
        ]
    },
    "maven_51f23d9": {
        "bug_id": "maven_51f23d9",
        "commit": "https://github.com/apache/maven/commit/51f23d93d9234ba0c5c5c95b0724494c006e6c09",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java?ref=51f23d93d9234ba0c5c5c95b0724494c006e6c09",
                "deletions": 4,
                "filename": "maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "patch": "@@ -175,11 +175,14 @@ private void addEdgeWithParentCheck( Map projectMap, String extensionId, MavenPr\n         project.addProjectReference( extProject );\n \n         MavenProject extParent = extProject.getParent();\n-        String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n-        // Don't add edge from parent to extension if a reverse edge already exists\n-        if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+        if ( extParent != null )\n         {\n-            dag.addEdge( id, extensionId );\n+            String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n+            // Don't add edge from parent to extension if a reverse edge already exists\n+            if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+            {\n+                dag.addEdge( id, extensionId );\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "sha": "d01bb34be95a01330aba7bd4f5b5024f6a218d80",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@328898 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/58e96169a60ad7a720abf6efe8e522c98bf058d8",
        "repo": "maven",
        "unit_tests": [
            "ProjectSorterTest.java"
        ]
    },
    "maven_6499386": {
        "bug_id": "maven_6499386",
        "commit": "https://github.com/apache/maven/commit/6499386f49a13e0a64565449d0b61b1b2870c97c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilter.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilter.java?ref=6499386f49a13e0a64565449d0b61b1b2870c97c",
                "deletions": 7,
                "filename": "maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilter.java",
                "patch": "@@ -39,9 +39,10 @@\n     private Set<ArtifactFilter> filters; \n \n     public AndArtifactFilter()\n-    {        \n+    {\n+        this.filters = new LinkedHashSet<ArtifactFilter>();\n     }\n-    \n+\n     public AndArtifactFilter( List<ArtifactFilter> filters )\n     {\n         this.filters = new LinkedHashSet<ArtifactFilter>( filters );\n@@ -63,11 +64,6 @@ public boolean include( Artifact artifact )\n \n     public void add( ArtifactFilter artifactFilter )\n     {\n-        if ( filters == null )\n-        {\n-            filters = new LinkedHashSet<ArtifactFilter>();\n-        }\n-        \n         filters.add( artifactFilter );\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilter.java",
                "sha": "dc0ad0a8f7ceb16f3221538a047c3aedc4cd858a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven/blob/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilter.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilter.java?ref=6499386f49a13e0a64565449d0b61b1b2870c97c",
                "deletions": 11,
                "filename": "maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilter.java",
                "patch": "@@ -38,6 +38,7 @@\n \n     public OrArtifactFilter()\n     {\n+        this.filters = new LinkedHashSet<ArtifactFilter>();\n     }\n \n     public OrArtifactFilter( Collection<ArtifactFilter> filters )\n@@ -47,14 +48,11 @@ public OrArtifactFilter( Collection<ArtifactFilter> filters )\n \n     public boolean include( Artifact artifact )\n     {\n-        if ( filters != null )\n+        for ( ArtifactFilter filter : filters )\n         {\n-            for ( ArtifactFilter filter : filters )\n+            if ( filter.include( artifact ) )\n             {\n-                if ( filter.include( artifact ) )\n-                {\n-                    return true;\n-                }\n+                return true;\n             }\n         }\n \n@@ -63,11 +61,6 @@ public boolean include( Artifact artifact )\n \n     public void add( ArtifactFilter artifactFilter )\n     {\n-        if ( filters == null )\n-        {\n-            filters = new LinkedHashSet<ArtifactFilter>();\n-        }\n-\n         filters.add( artifactFilter );\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/main/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilter.java",
                "sha": "d8499c4e6e015842e8e8f393fc23f456bb0b0158",
                "status": "modified"
            },
            {
                "additions": 62,
                "blob_url": "https://github.com/apache/maven/blob/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilterTest.java",
                "changes": 62,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilterTest.java?ref=6499386f49a13e0a64565449d0b61b1b2870c97c",
                "deletions": 0,
                "filename": "maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilterTest.java",
                "patch": "@@ -0,0 +1,62 @@\n+package org.apache.maven.artifact.resolver.filter;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Arrays;\n+\n+import org.apache.maven.artifact.Artifact;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@link AndArtifactFilter}.\n+ * \n+ * @author Benjamin Bentmann\n+ */\n+public class AndArtifactFilterTest\n+    extends TestCase\n+{\n+\n+    private ArtifactFilter newSubFilter()\n+    {\n+        return new ArtifactFilter()\n+        {\n+            public boolean include( Artifact artifact )\n+            {\n+                return false;\n+            }\n+        };\n+    }\n+\n+    public void testEquals()\n+    {\n+        AndArtifactFilter filter1 = new AndArtifactFilter();\n+\n+        AndArtifactFilter filter2 = new AndArtifactFilter( Arrays.asList( newSubFilter() ) );\n+\n+        assertFalse( filter1.equals( null ) );\n+        assertTrue( filter1.equals( filter1 ) );\n+        assertEquals( filter1.hashCode(), filter1.hashCode() );\n+\n+        assertFalse( filter1.equals( filter2 ) );\n+        assertFalse( filter2.equals( filter1 ) );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven/raw/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/AndArtifactFilterTest.java",
                "sha": "27d96bd21ec7327e2c6b078279d82ed5245888bb",
                "status": "added"
            },
            {
                "additions": 62,
                "blob_url": "https://github.com/apache/maven/blob/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilterTest.java",
                "changes": 62,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilterTest.java?ref=6499386f49a13e0a64565449d0b61b1b2870c97c",
                "deletions": 0,
                "filename": "maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilterTest.java",
                "patch": "@@ -0,0 +1,62 @@\n+package org.apache.maven.artifact.resolver.filter;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Arrays;\n+\n+import org.apache.maven.artifact.Artifact;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@link OrArtifactFilter}.\n+ * \n+ * @author Benjamin Bentmann\n+ */\n+public class OrArtifactFilterTest\n+    extends TestCase\n+{\n+\n+    private ArtifactFilter newSubFilter()\n+    {\n+        return new ArtifactFilter()\n+        {\n+            public boolean include( Artifact artifact )\n+            {\n+                return false;\n+            }\n+        };\n+    }\n+\n+    public void testEquals()\n+    {\n+        OrArtifactFilter filter1 = new OrArtifactFilter();\n+\n+        OrArtifactFilter filter2 = new OrArtifactFilter( Arrays.asList( newSubFilter() ) );\n+\n+        assertFalse( filter1.equals( null ) );\n+        assertTrue( filter1.equals( filter1 ) );\n+        assertEquals( filter1.hashCode(), filter1.hashCode() );\n+\n+        assertFalse( filter1.equals( filter2 ) );\n+        assertFalse( filter2.equals( filter1 ) );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven/raw/6499386f49a13e0a64565449d0b61b1b2870c97c/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/OrArtifactFilterTest.java",
                "sha": "e17c0d40ce88ba910cd518511d455582d8af0400",
                "status": "added"
            }
        ],
        "message": "o Fixed NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805163 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/5eaec2f448ed2b12c73b95bf421d88ac7e674053",
        "repo": "maven",
        "unit_tests": [
            "AndArtifactFilterTest.java",
            "OrArtifactFilterTest.java"
        ]
    },
    "maven_677a0dd": {
        "bug_id": "maven_677a0dd",
        "commit": "https://github.com/apache/maven/commit/677a0dd7d5767193b378d2446eabeeb592e64c9e",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven/blob/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=677a0dd7d5767193b378d2446eabeeb592e64c9e",
                "deletions": 6,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -159,15 +159,23 @@ public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepos\n \n     private Map createManagedVersionMap( DependencyManagement dependencyManagement )\n     {\n-        Map map = new HashMap();\n-        for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+        Map map;\n+        if ( dependencyManagement != null && dependencyManagement.getDependencies() != null )\n         {\n-            Dependency d = (Dependency) i.next();\n+            map = new HashMap();\n+            for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+            {\n+                Dependency d = (Dependency) i.next();\n \n-            Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n-                                                                d.getScope(), d.getType(), null );\n+                Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n+                                                                    d.getScope(), d.getType(), null );\n \n-            map.put( d.getManagementKey(), artifact );\n+                map.put( d.getManagementKey(), artifact );\n+            }\n+        }\n+        else\n+        {\n+            map = Collections.EMPTY_MAP;\n         }\n         return map;\n     }",
                "raw_url": "https://github.com/apache/maven/raw/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "c5984dc7786c6b7aa0046314357632a3dc2f35d4",
                "status": "modified"
            }
        ],
        "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191800 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/c3d0ba0846953cc964faa8f0f32be4dd298dafe1",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven_69c6305": {
        "bug_id": "maven_69c6305",
        "commit": "https://github.com/apache/maven/commit/69c6305347b9680b0aba2c93586d1b3d46e5ba02",
        "file": [
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/maven/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/DefaultMaven.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "deletions": 26,
                "filename": "maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "patch": "@@ -79,7 +79,7 @@\n     // ----------------------------------------------------------------------\n \n     protected MavenProjectBuilder projectBuilder;\n-    \n+\n     protected LifecycleExecutor lifecycleExecutor;\n \n     protected PlexusContainer container;\n@@ -126,9 +126,9 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n         dispatcher.dispatchStart( event, request.getBaseDirectory() );\n \n         ReactorManager rm;\n-        \n+\n         ProfileManager globalProfileManager = request.getGlobalProfileManager();\n-        \n+\n         try\n         {\n             loadSettingsProfiles( globalProfileManager, request.getSettings() );\n@@ -137,7 +137,7 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n \n             List projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(),\n                                         request.getSettings(), globalProfileManager );\n-            \n+\n             // the reasoning here is that the list is still unsorted according to dependency, so the first project\n             // SHOULD BE the top-level, or the one we want to start with if we're doing an aggregated build.\n \n@@ -146,11 +146,11 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n                 MavenProject superProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository() );\n                 projects.add( superProject );\n             }\n-            \n+\n             rm = new ReactorManager( projects );\n-            \n+\n             String requestFailureBehavior = request.getFailureBehavior();\n-            \n+\n             if ( requestFailureBehavior != null )\n             {\n                 rm.setFailureBehavior( requestFailureBehavior );\n@@ -196,7 +196,7 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n                     if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) && ( exception instanceof ReactorException ) )\n                     {\n                         logFailure( response, exception, null );\n-                        \n+\n                         if ( rm.hasMultipleProjects() )\n                         {\n                             writeReactorSummary( rm );\n@@ -262,22 +262,22 @@ private void writeReactorSummary( ReactorManager rm )\n         // o project-name...........FAILED\n         // o project2-name..........SKIPPED (dependency build failed or was skipped)\n         // o project-3-name.........SUCCESS\n-        \n+\n         line();\n         getLogger().info( \"Reactor Summary:\" );\n         line();\n-        \n+\n         for ( Iterator it = rm.getProjectsSortedByDependency().iterator(); it.hasNext(); )\n         {\n             MavenProject project = (MavenProject) it.next();\n-            \n+\n             String id = project.getId();\n-            \n-            if ( rm.hasBuildFailure( id ) )\n+\n+            if ( rm.hasBuildFailure( project ) )\n             {\n                 logReactorSummaryLine( project.getName(), \"FAILED\" );\n             }\n-            else if ( rm.isBlackListed( id ) )\n+            else if ( rm.isBlackListed( project ) )\n             {\n                 logReactorSummaryLine( project.getName(), \"SKIPPED (dependency build failed or was skipped)\" );\n             }\n@@ -286,28 +286,28 @@ else if ( rm.isBlackListed( id ) )\n                 logReactorSummaryLine( project.getName(), \"SUCCESS\" );\n             }\n         }\n-        \n+\n         getLogger().info( \"\" );\n         getLogger().info( \"\" );\n     }\n \n     private void logReactorSummaryLine( String name, String status )\n     {\n         StringBuffer messageBuffer = new StringBuffer();\n-        \n+\n         messageBuffer.append( name );\n-        \n+\n         int dotCount = 65;\n-        \n+\n         dotCount -= name.length();\n-        \n+\n         for ( int i = 0; i < dotCount; i++ )\n         {\n             messageBuffer.append( '.' );\n         }\n-        \n+\n         messageBuffer.append( status );\n-        \n+\n         getLogger().info( messageBuffer.toString() );\n     }\n \n@@ -399,7 +399,7 @@ private void loadSettingsProfiles( ProfileManager profileManager, Settings setti\n         if ( settingsProfiles != null && !settingsProfiles.isEmpty() )\n         {\n             List settingsActiveProfileIds = settings.getActiveProfiles();\n-            \n+\n             profileManager.explicitlyActivate( settingsActiveProfileIds );\n \n             for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )\n@@ -411,9 +411,9 @@ private void loadSettingsProfiles( ProfileManager profileManager, Settings setti\n                 profileManager.addProfile( profile );\n             }\n         }\n-        \n+\n     }\n-    \n+\n     // ----------------------------------------------------------------------\n     // Methods used by all execution request handlers\n     // ----------------------------------------------------------------------\n@@ -585,7 +585,7 @@ protected void logSuccess( MavenExecutionResponse r, ReactorManager rm )\n         {\n             writeReactorSummary( rm );\n         }\n-        \n+\n         line();\n \n         getLogger().info( \"BUILD SUCCESSFUL\" );\n@@ -618,7 +618,7 @@ protected void line()\n     {\n         getLogger().info( \"----------------------------------------------------------------------------\" );\n     }\n-    \n+\n     protected static String formatTime( long ms )\n     {\n         long secs = ms / MS_PER_SEC;",
                "raw_url": "https://github.com/apache/maven/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "sha": "d10f537104138267cb151748fe7eadf710af9fd8",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/maven/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "changes": 75,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "deletions": 34,
                "filename": "maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "patch": "@@ -20,27 +20,27 @@\n \n public class ReactorManager\n {\n-    \n+\n     public static final String FAIL_FAST = \"fail-fast\";\n \n     public static final String FAIL_AT_END = \"fail-at-end\";\n \n     public static final String FAIL_NEVER = \"fail-never\";\n-    \n+\n     private DAG reactorDag;\n-    \n+\n     private Map projectMap;\n-    \n+\n     private List projectsByDependency;\n \n     private List blackList = new ArrayList();\n \n     private MavenProject topLevelProject;\n-    \n+\n     private Map buildFailuresByProject = new HashMap();\n-    \n+\n     private String failureBehavior = FAIL_FAST;\n-    \n+\n     public ReactorManager( List projects )\n         throws CycleDetectedException\n     {\n@@ -136,10 +136,10 @@ public ReactorManager( List projects )\n \n             projectsByDependency.add( projectMap.get( id ) );\n         }\n-        \n+\n         projectsByDependency = Collections.unmodifiableList( projectsByDependency );\n     }\n-    \n+\n     public void setFailureBehavior( String failureBehavior )\n     {\n         if ( FAIL_FAST.equals( failureBehavior ) || FAIL_AT_END.equals( failureBehavior ) || FAIL_NEVER.equals( failureBehavior ) )\n@@ -152,33 +152,39 @@ public void setFailureBehavior( String failureBehavior )\n                 + FAIL_AT_END + \"\\', \\'\" + FAIL_NEVER + \"\\').\" );\n         }\n     }\n-    \n+\n     public String getFailureBehavior()\n     {\n         return failureBehavior;\n     }\n-    \n+\n     public List getProjectsSortedByDependency()\n     {\n         return projectsByDependency;\n     }\n-    \n+\n     // TODO: !![jc; 28-jul-2005] check this; if we're using '-r' and there are aggregator tasks, this will result in weirdness.\n     public MavenProject getTopLevelProject()\n     {\n         if ( topLevelProject == null )\n         {\n             List projectsByFile = new ArrayList( projectsByDependency );\n-            \n+\n             Collections.sort(projectsByFile, new ByProjectFileComparator() );\n-            \n+\n             topLevelProject = (MavenProject) projectsByFile.get( 0 );\n         }\n-        \n+\n         return topLevelProject;\n     }\n-    \n-    public void blackList( String id )\n+\n+    public void blackList( MavenProject project )\n+    {\n+        blackList(\n+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );\n+    }\n+\n+    private void blackList( String id )\n     {\n         if ( !blackList.contains( id ) )\n         {\n@@ -197,45 +203,46 @@ public void blackList( String id )\n             }\n         }\n     }\n-    \n-    public boolean isBlackListed( String id )\n+\n+    public boolean isBlackListed( MavenProject project )\n     {\n-        return blackList.contains( id );\n+        return blackList.contains(\n+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );\n     }\n-    \n+\n     public void registerBuildFailure( MavenProject project, Exception error, String task )\n     {\n         buildFailuresByProject.put( project.getId(), new BuildFailure( error, task ) );\n     }\n-    \n+\n     public boolean hasBuildFailures()\n     {\n         return !buildFailuresByProject.isEmpty();\n     }\n-    \n-    public boolean hasBuildFailure( String id )\n+\n+    public boolean hasBuildFailure( MavenProject project )\n     {\n-        return buildFailuresByProject.containsKey( id );\n+        return buildFailuresByProject.containsKey( project.getId() );\n     }\n-    \n+\n     public boolean hasMultipleProjects()\n     {\n         return projectsByDependency.size() > 1;\n     }\n-    \n+\n     private static class ByProjectFileComparator implements Comparator\n     {\n \n         public int compare( Object first, Object second )\n         {\n             MavenProject p1 = (MavenProject) first;\n             MavenProject p2 = (MavenProject) second;\n-            \n+\n             String p1Path = p1.getFile().getAbsolutePath();\n             String p2Path = p2.getFile().getAbsolutePath();\n-            \n+\n             int comparison = p1Path.length() - p2Path.length();\n-            \n+\n             if ( comparison > 0 )\n             {\n                 return 1;\n@@ -250,23 +257,23 @@ else if ( comparison < 0 )\n             }\n         }\n     }\n-    \n+\n     private static class BuildFailure\n     {\n         private Exception cause;\n         private String task;\n-        \n+\n         BuildFailure( Exception cause, String task )\n         {\n             this.cause = cause;\n             this.task = task;\n         }\n-        \n+\n         String getTask()\n         {\n             return task;\n         }\n-        \n+\n         Exception getCause()\n         {\n             return cause;",
                "raw_url": "https://github.com/apache/maven/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "sha": "2a72cc9ad94766bd018a094f1aaa7e7f0691df56",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "deletions": 3,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "patch": "@@ -177,7 +177,7 @@ private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSes\n \n             if ( segment.aggregate() )\n             {\n-                if ( !rm.isBlackListed( project.getId() ) )\n+                if ( !rm.isBlackListed( project ) )\n                 {\n                     line();\n \n@@ -246,7 +246,7 @@ private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSes\n                 {\n                     MavenProject currentProject = (MavenProject) projectIterator.next();\n \n-                    if ( !rm.isBlackListed( currentProject.getId() ) )\n+                    if ( !rm.isBlackListed( currentProject ) )\n                     {\n                         line();\n \n@@ -335,8 +335,9 @@ else if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) )\n         {\n             rm.registerBuildFailure( project, e, task );\n \n-            rm.blackList( project.getId() );\n+            rm.blackList( project );\n         }\n+        // FIXME: how about the other cases?\n     }\n \n     private List segmentTaskListByAggregationNeeds( List tasks, MavenSession session, MavenProject project )",
                "raw_url": "https://github.com/apache/maven/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "sha": "b33637182586bcf18a3114dfbebf84250a428a7f",
                "status": "modified"
            }
        ],
        "message": "Changed ReactorManager's api for blackList and other methods that require\nan 'id' to use MavenProject instead. \nIn some parts of the code a DAG is constructed using a version-less key,\nand in the api what the id should be is unspecified.\nThis could result in NPE's (it does!) because the code in plexus-utils\nassumes a known id (vertex in the DAG) is supplied.\n\nSo, moved the project.getId() calls outside of ReactorManager into the\nReactorManager, so that there's just one place where the decision is made on\nhow to generate an id (DAG vertex label) from a project. This centralizes\nthat knowledge for increased maintainability and reduced chances on NPE's.\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279334 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/7b6f292c73db67e179033e6a051871754cb4a725",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenTest.java"
        ]
    },
    "maven_6c3ec90": {
        "bug_id": "maven_6c3ec90",
        "commit": "https://github.com/apache/maven/commit/6c3ec90f2c2abdb4caa45db3ab43f00c84e2e353",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven/blob/6c3ec90f2c2abdb4caa45db3ab43f00c84e2e353/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java?ref=6c3ec90f2c2abdb4caa45db3ab43f00c84e2e353",
                "deletions": 0,
                "filename": "maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
                "patch": "@@ -313,6 +313,12 @@ private Versioning readVersions( RepositorySystemSession session, RequestTrace t\n     {\n         Versioning versioning = null;\n \n+\n+        if (metadata == null)\n+        {\n+            return new Versioning();\n+        }\n+\n         SyncContext syncContext = syncContextFactory.newInstance( session, true );\n \n         try",
                "raw_url": "https://github.com/apache/maven/raw/6c3ec90f2c2abdb4caa45db3ab43f00c84e2e353/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
                "sha": "0b56970034755c3a7bcd0da3006f6e1e7cad3383",
                "status": "modified"
            }
        ],
        "message": "prevent possible NPE",
        "parent": "https://github.com/apache/maven/commit/176a85f43c6a69b042024f2daebff25376930ce2",
        "repo": "maven",
        "unit_tests": [
            "DefaultVersionResolverTest.java"
        ]
    },
    "maven_7b97463": {
        "bug_id": "maven_7b97463",
        "commit": "https://github.com/apache/maven/commit/7b974639d5dbe4382905336166d8c16407445212",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/7b974639d5dbe4382905336166d8c16407445212/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=7b974639d5dbe4382905336166d8c16407445212",
                "deletions": 1,
                "filename": "maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -749,7 +749,7 @@ public ArtifactRepository getMirrorRepository( ArtifactRepository repository )\n                 id = repository.getId();\n             }\n \n-            getLogger().info( \"Using mirror: \" + mirror.getId() + \" for repository: \" + repository.getId() + \"\\n(mirror url: \" + mirror.getUrl() + \")\" );\n+            getLogger().debug( \"Using mirror: \" + mirror.getId() + \" for repository: \" + repository.getId() + \"\\n(mirror url: \" + mirror.getUrl() + \")\" );\n             repository = repositoryFactory.createArtifactRepository( id, mirror.getUrl(),\n                                                                      repository.getLayout(), repository.getSnapshots(),\n                                                                      repository.getReleases() );",
                "raw_url": "https://github.com/apache/maven/raw/7b974639d5dbe4382905336166d8c16407445212/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "731f742894730c4fdbced6f951e03df11cd493f0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/7b974639d5dbe4382905336166d8c16407445212/maven-core/src/main/java/org/apache/maven/lifecycle/binding/LegacyLifecycleMappingParser.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/binding/LegacyLifecycleMappingParser.java?ref=7b974639d5dbe4382905336166d8c16407445212",
                "deletions": 0,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/binding/LegacyLifecycleMappingParser.java",
                "patch": "@@ -35,6 +35,11 @@\n     public LifecycleBindings parseDefaultMappings( final List lifecycles )\n         throws LifecycleSpecificationException\n     {\n+        if( lifecycles == null )\n+        {\n+            throw new IllegalArgumentException(\"lifecycles: null\");\n+        }\n+        \n         LifecycleBindings bindings = new LifecycleBindings();\n \n         bindings.setPackaging( \"unmatched\" );",
                "raw_url": "https://github.com/apache/maven/raw/7b974639d5dbe4382905336166d8c16407445212/maven-core/src/main/java/org/apache/maven/lifecycle/binding/LegacyLifecycleMappingParser.java",
                "sha": "937849cad22ab59e72c58d613cc62cc10b5764a5",
                "status": "modified"
            }
        ],
        "message": "Throw illegal argument, not NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@721640 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/b1f8050277e93c0b60e6a3376ff88d83c905b41c",
        "repo": "maven",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven_80a6818": {
        "bug_id": "maven_80a6818",
        "commit": "https://github.com/apache/maven/commit/80a6818f01eb55afc35550da158ae7a585d0f883",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven/blob/80a6818f01eb55afc35550da158ae7a585d0f883/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java?ref=80a6818f01eb55afc35550da158ae7a585d0f883",
                "deletions": 7,
                "filename": "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "patch": "@@ -53,18 +53,26 @@ static void showVersion()\n             Properties properties = new Properties();\n             resourceAsStream = MavenCli.class.getClassLoader()\n                                              .getResourceAsStream( \"META-INF/maven/org.apache.maven/maven-core/pom.properties\" );\n-            properties.load( resourceAsStream );\n \n-            if ( properties.getProperty( \"builtOn\" ) != null )\n+            if ( resourceAsStream != null )\n             {\n-                System.out.println( \"Maven version: \"\n-                                    + properties.getProperty( \"version\", \"unknown\" ) + \" built on \"\n-                                    + properties.getProperty( \"builtOn\" ) );\n+                properties.load( resourceAsStream );\n+\n+                if ( properties.getProperty( \"builtOn\" ) != null )\n+                {\n+                    System.out.println( \"Maven version: \"\n+                                        + properties.getProperty( \"version\", \"unknown\" ) + \" built on \"\n+                                        + properties.getProperty( \"builtOn\" ) );\n+                }\n+                else\n+                {\n+                    System.out.println( \"Maven version: \"\n+                                        + properties.getProperty( \"version\", \"unknown\" ) );\n+                }\n             }\n             else\n             {\n-                System.out.println( \"Maven version: \"\n-                                    + properties.getProperty( \"version\", \"unknown\" ) );\n+                System.out.println( \"Maven version: unknown\" );\n             }\n \n             System.out.println( \"Java version: \"",
                "raw_url": "https://github.com/apache/maven/raw/80a6818f01eb55afc35550da158ae7a585d0f883/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "sha": "9c182417415cb0be1dbee79981ae91b4d707c10a",
                "status": "modified"
            }
        ],
        "message": "o merged from r633053 (fixed potential NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@633054 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/b19a75170489f61f6bed04b4986145c50d4bc5f3",
        "repo": "maven",
        "unit_tests": [
            "CLIReportingUtilsTest.java"
        ]
    },
    "maven_870a3b3": {
        "bug_id": "maven_870a3b3",
        "commit": "https://github.com/apache/maven/commit/870a3b3e8040a7ee2727480bc0a43121ac99e59c",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven/blob/870a3b3e8040a7ee2727480bc0a43121ac99e59c/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java?ref=870a3b3e8040a7ee2727480bc0a43121ac99e59c",
                "deletions": 0,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "patch": "@@ -909,6 +909,18 @@ private void importDependencyManagement( Model model, ModelBuildingRequest reque\n             String artifactId = dependency.getArtifactId();\n             String version = dependency.getVersion();\n \n+            if ( groupId == null || groupId.length() <= 0 )\n+            {\n+                problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.groupId' for \"\n+                    + dependency.getManagementKey() + \" is missing.\", dependency.getLocation( \"\" ), null );\n+                continue;\n+            }\n+            if ( artifactId == null || artifactId.length() <= 0 )\n+            {\n+                problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.artifactId' for \"\n+                    + dependency.getManagementKey() + \" is missing.\", dependency.getLocation( \"\" ), null );\n+                continue;\n+            }\n             if ( version == null || version.length() <= 0 )\n             {\n                 problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.version' for \"",
                "raw_url": "https://github.com/apache/maven/raw/870a3b3e8040a7ee2727480bc0a43121ac99e59c/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "sha": "86a90d325489e2a5a34fdc94ec477f90ba709f13",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/maven/blob/870a3b3e8040a7ee2727480bc0a43121ac99e59c/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java?ref=870a3b3e8040a7ee2727480bc0a43121ac99e59c",
                "deletions": 6,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "patch": "@@ -356,12 +356,6 @@ private void validateRawDependencies( ModelProblemCollector problems, List<Depen\n         {\n             String key = dependency.getManagementKey();\n \n-            validateStringNotEmpty( prefix + \".groupId\", problems, Severity.ERROR, dependency.getGroupId(), key,\n-                                    dependency );\n-\n-            validateStringNotEmpty( prefix + \".artifactId\", problems, Severity.ERROR, dependency.getArtifactId(), key,\n-                                    dependency );\n-\n             if ( \"import\".equals( dependency.getScope() ) )\n             {\n                 if ( !\"pom\".equals( dependency.getType() ) )",
                "raw_url": "https://github.com/apache/maven/raw/870a3b3e8040a7ee2727480bc0a43121ac99e59c/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "sha": "d7a6ac9b5aba1dbefcbd74fc9c42427ff29bb379",
                "status": "modified"
            }
        ],
        "message": "[MNG-5157] NPE stemming from DefaultModelBuilder.containsCoordinates\n\no Revised original fix to prevent duplicate emission of error msg\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1176402 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/56f15402204568654de9d7ac7970e5657d7df85d",
        "repo": "maven",
        "unit_tests": [
            "DefaultModelValidatorTest.java"
        ]
    },
    "maven_883e9e5": {
        "bug_id": "maven_883e9e5",
        "commit": "https://github.com/apache/maven/commit/883e9e53dba6930e79ab1157b561a4984205f0d4",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java?ref=883e9e53dba6930e79ab1157b561a4984205f0d4",
                "deletions": 1,
                "filename": "maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "patch": "@@ -338,7 +338,7 @@ public List retrieveAvailableVersions( Artifact artifact, ArtifactRepository loc\n \n         List versions;\n         Metadata repoMetadata = metadata.getMetadata();\n-        if ( repoMetadata != null )\n+        if ( repoMetadata != null && repoMetadata.getVersioning() != null )\n         {\n             List metadataVersions = repoMetadata.getVersioning().getVersions();\n             versions = new ArrayList( metadataVersions.size() );",
                "raw_url": "https://github.com/apache/maven/raw/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "sha": "bb9f4d8c9c99948ab540362a88e0af8b126d2a74",
                "status": "modified"
            }
        ],
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291582 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/e5070aa9b253be41fb9b4757d96b3431eeea58bf",
        "repo": "maven",
        "unit_tests": [
            "MavenMetadataSourceTest.java"
        ]
    },
    "maven_8e279f8": {
        "bug_id": "maven_8e279f8",
        "commit": "https://github.com/apache/maven/commit/8e279f87e1ac9ce7e69988f8801c4460266fc09c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -112,7 +112,7 @@ else if ( \"#settings\".equals( expression ) )\n         }\n         else if ( expression.equals( \"#basedir\" ) )\n         {\n-            value = context.getProject().getFile().getParentFile().getAbsolutePath();\n+            value = context.getProject().getBasedir().getAbsolutePath();\n         }\n         else if ( expression.startsWith( \"#basedir\" ) )\n         {",
                "raw_url": "https://github.com/apache/maven/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "2d723922c6e681b4090ef924c6c2935589af9978",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -132,7 +132,14 @@ public void setFile( File file )\n \n     public File getBasedir()\n     {\n-        return getFile().getParentFile();\n+        if ( getFile() != null )\n+        {\n+            return getFile().getParentFile();\n+        }\n+        else\n+        {\n+            return new File( System.getProperty( \"user.dir\" ) );\n+        }\n     }\n \n     public void setDependencies( List denpendencies )",
                "raw_url": "https://github.com/apache/maven/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "93745033090548c6e70eeac91ac8aff4f7d6784e",
                "status": "modified"
            }
        ],
        "message": "avoid NPE when there is no project file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163991 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/666c60dea6668db3dae494f38241e6cfd3f42730",
        "repo": "maven",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java",
            "MavenProjectTest.java"
        ]
    },
    "maven_90ac084": {
        "bug_id": "maven_90ac084",
        "commit": "https://github.com/apache/maven/commit/90ac0847b697b07ed643dab5fcafc15f12f31ec4",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/90ac0847b697b07ed643dab5fcafc15f12f31ec4/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java?ref=90ac0847b697b07ed643dab5fcafc15f12f31ec4",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java",
                "patch": "@@ -37,7 +37,7 @@\n     implements LegacySupport\n {\n \n-    private ThreadLocal<MavenSession> session = new ThreadLocal<MavenSession>();\n+    private ThreadLocal<MavenSession> session = new InheritableThreadLocal<MavenSession>();\n \n     public void setSession( MavenSession session )\n     {",
                "raw_url": "https://github.com/apache/maven/raw/90ac0847b697b07ed643dab5fcafc15f12f31ec4/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java",
                "sha": "dfd3f40a4746aa1432164ec319abe2f5651bed28",
                "status": "modified"
            }
        ],
        "message": "[MNG-4785] NPE in dependency resolution code for TC plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@995457 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/ee07bb36d559be79d7134b930d9c3c1dc42df31f",
        "repo": "maven",
        "unit_tests": [
            "DefaultLegacySupportTest.java"
        ]
    },
    "maven_9e99fe5": {
        "bug_id": "maven_9e99fe5",
        "commit": "https://github.com/apache/maven/commit/9e99fe5e65cdcb488d1a22eb5c20a165bb4bc5f2",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven/blob/9e99fe5e65cdcb488d1a22eb5c20a165bb4bc5f2/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=9e99fe5e65cdcb488d1a22eb5c20a165bb4bc5f2",
                "deletions": 2,
                "filename": "maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -48,8 +48,9 @@\n     implements WagonManager\n {\n \n+    // NOTE: This must use a different field name than in the super class or IoC has no chance to inject the loggers\n     @Requirement\n-    private Logger logger;\n+    private Logger log;\n \n     @Requirement\n     private LegacySupport legacySupport;\n@@ -169,7 +170,7 @@ public ArtifactRepository getMirrorRepository( ArtifactRepository repository )\n                 id = repository.getId();\n             }\n \n-            logger.debug( \"Using mirror: \" + mirror.getUrl() + \" (id: \" + id + \")\" );\n+            log.debug( \"Using mirror: \" + mirror.getUrl() + \" (id: \" + id + \")\" );\n \n             repository = artifactRepositoryFactory.createArtifactRepository( id, mirror.getUrl(),\n                                                                      repository.getLayout(), repository.getSnapshots(),",
                "raw_url": "https://github.com/apache/maven/raw/9e99fe5e65cdcb488d1a22eb5c20a165bb4bc5f2/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "29876e24807388c6de489a897f385b8bad418bb8",
                "status": "modified"
            }
        ],
        "message": "[MNG-4818] NPE in legacy.DefaultWagonManager.getArtifact\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@998861 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/1be90a985a25e206682a9220b78dfe1f66700ab5",
        "repo": "maven",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven_9f7971d": {
        "bug_id": "maven_9f7971d",
        "commit": "https://github.com/apache/maven/commit/9f7971dadbec8882b4c119345494b620d3a1f897",
        "file": [
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/maven/blob/9f7971dadbec8882b4c119345494b620d3a1f897/maven-core/src/main/java/org/apache/maven/lifecycle/mapping/LifecyclePhase.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/mapping/LifecyclePhase.java?ref=9f7971dadbec8882b4c119345494b620d3a1f897",
                "deletions": 14,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/mapping/LifecyclePhase.java",
                "patch": "@@ -55,13 +55,16 @@ public void set( String goals )\n     {\n         mojos = new ArrayList<>();\n         \n-        String[] mojoGoals = StringUtils.split( goals, \",\" );\n-        \n-        for ( String mojoGoal: mojoGoals )\n+        if ( StringUtils.isNotEmpty( goals ) )\n         {\n-            LifecycleMojo lifecycleMojo = new LifecycleMojo();\n-            lifecycleMojo.setGoal( mojoGoal.trim() );\n-            mojos.add( lifecycleMojo );\n+            String[] mojoGoals = StringUtils.split( goals, \",\" );\n+            \n+            for ( String mojoGoal: mojoGoals )\n+            {\n+                LifecycleMojo lifecycleMojo = new LifecycleMojo();\n+                lifecycleMojo.setGoal( mojoGoal.trim() );\n+                mojos.add( lifecycleMojo );\n+            }\n         }\n     }\n     \n@@ -70,17 +73,21 @@ public String toString()\n     {\n         StringBuilder sb = new StringBuilder();\n         boolean first = true;\n-        for ( LifecycleMojo mojo: getMojos() )\n+        List<LifecycleMojo> mojos = getMojos();\n+        if ( mojos != null )\n         {\n-            if ( first )\n-            {\n-                first = false;\n-            }\n-            else\n+            for ( LifecycleMojo mojo: mojos )\n             {\n-                sb.append( \",\" );\n+                if ( first )\n+                {\n+                    first = false;\n+                }\n+                else\n+                {\n+                    sb.append( \",\" );\n+                }\n+                sb.append( mojo.getGoal() );\n             }\n-            sb.append( mojo.getGoal() );\n         }\n         return sb.toString();\n     }",
                "raw_url": "https://github.com/apache/maven/raw/9f7971dadbec8882b4c119345494b620d3a1f897/maven-core/src/main/java/org/apache/maven/lifecycle/mapping/LifecyclePhase.java",
                "sha": "059f23468822422e8d856626633192138aa8e9a9",
                "status": "modified"
            },
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/maven/blob/9f7971dadbec8882b4c119345494b620d3a1f897/maven-core/src/test/java/org/apache/maven/lifecycle/mapping/LifecyclePhaseTest.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/test/java/org/apache/maven/lifecycle/mapping/LifecyclePhaseTest.java?ref=9f7971dadbec8882b4c119345494b620d3a1f897",
                "deletions": 0,
                "filename": "maven-core/src/test/java/org/apache/maven/lifecycle/mapping/LifecyclePhaseTest.java",
                "patch": "@@ -0,0 +1,73 @@\n+package org.apache.maven.lifecycle.mapping;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+/**\n+ * @author atanasenko\n+ */\n+public class LifecyclePhaseTest\n+{\n+    @Test\n+    public void testToString()\n+    {\n+        LifecyclePhase phase = new LifecyclePhase();\n+        assertEquals( \"\", phase.toString() );\n+        \n+        LifecycleMojo mojo1 = new LifecycleMojo();\n+        mojo1.setGoal( \"jar:jar\" );\n+        phase.setMojos( Arrays.asList( mojo1 ) );\n+        assertEquals( \"jar:jar\", phase.toString()  );\n+        \n+        LifecycleMojo mojo2 = new LifecycleMojo();\n+        mojo2.setGoal( \"war:war\" );\n+        phase.setMojos( Arrays.asList( mojo1, mojo2 ) );\n+        assertEquals( \"jar:jar,war:war\", phase.toString() );\n+    }\n+    \n+    @Test\n+    public void testSet()\n+    {\n+        LifecyclePhase phase = new LifecyclePhase();\n+        assertNull( phase.getMojos() );\n+        \n+        phase.set( \"\" );\n+        assertNotNull( phase.getMojos() );\n+        assertEquals( 0, phase.getMojos().size() );\n+        \n+        phase.set( \"jar:jar, war:war\" );\n+        \n+        List<LifecycleMojo> mojos = phase.getMojos();\n+        assertNotNull( mojos );\n+        assertEquals( 2, mojos.size() );\n+        \n+        LifecycleMojo mojo1 = mojos.get(0);\n+        assertNotNull( mojo1 );\n+        assertEquals( \"jar:jar\", mojo1.getGoal() );\n+        \n+        LifecycleMojo mojo2 = mojos.get(1);\n+        assertNotNull( mojo2 );\n+        assertEquals( \"war:war\", mojo2.getGoal() );\n+    }\n+}\n+",
                "raw_url": "https://github.com/apache/maven/raw/9f7971dadbec8882b4c119345494b620d3a1f897/maven-core/src/test/java/org/apache/maven/lifecycle/mapping/LifecyclePhaseTest.java",
                "sha": "0d8cbdc68936114f9bfd2400979373a68d371a89",
                "status": "added"
            }
        ],
        "message": "MNG-5805: Fix NPE in LifecyclePhase#toString()\n\nSigned-off-by: Jason van Zyl <jason@tesla.io>\n\ncloses #62",
        "parent": "https://github.com/apache/maven/commit/31e70dba9030925ce90727b9a7e0e83045c4aa0d",
        "repo": "maven",
        "unit_tests": [
            "LifecyclePhaseTest.java"
        ]
    },
    "maven_a1d64e7": {
        "bug_id": "maven_a1d64e7",
        "commit": "https://github.com/apache/maven/commit/a1d64e71cabb8e6a884321cae794366da3624673",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven/blob/a1d64e71cabb8e6a884321cae794366da3624673/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java?ref=a1d64e71cabb8e6a884321cae794366da3624673",
                "deletions": 0,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "patch": "@@ -909,6 +909,18 @@ private void importDependencyManagement( Model model, ModelBuildingRequest reque\n             String artifactId = dependency.getArtifactId();\n             String version = dependency.getVersion();\n \n+            if ( groupId == null || groupId.length() <= 0 )\n+            {\n+                problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.groupId' for \"\n+                    + dependency.getManagementKey() + \" is missing.\", dependency.getLocation( \"\" ), null );\n+                continue;\n+            }\n+            if ( artifactId == null || artifactId.length() <= 0 )\n+            {\n+                problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.artifactId' for \"\n+                    + dependency.getManagementKey() + \" is missing.\", dependency.getLocation( \"\" ), null );\n+                continue;\n+            }\n             if ( version == null || version.length() <= 0 )\n             {\n                 problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.version' for \"",
                "raw_url": "https://github.com/apache/maven/raw/a1d64e71cabb8e6a884321cae794366da3624673/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "sha": "86a90d325489e2a5a34fdc94ec477f90ba709f13",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/maven/blob/a1d64e71cabb8e6a884321cae794366da3624673/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java?ref=a1d64e71cabb8e6a884321cae794366da3624673",
                "deletions": 6,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "patch": "@@ -356,12 +356,6 @@ private void validateRawDependencies( ModelProblemCollector problems, List<Depen\n         {\n             String key = dependency.getManagementKey();\n \n-            validateStringNotEmpty( prefix + \".groupId\", problems, Severity.ERROR, dependency.getGroupId(), key,\n-                                    dependency );\n-\n-            validateStringNotEmpty( prefix + \".artifactId\", problems, Severity.ERROR, dependency.getArtifactId(), key,\n-                                    dependency );\n-\n             if ( \"import\".equals( dependency.getScope() ) )\n             {\n                 if ( !\"pom\".equals( dependency.getType() ) )",
                "raw_url": "https://github.com/apache/maven/raw/a1d64e71cabb8e6a884321cae794366da3624673/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "sha": "d7a6ac9b5aba1dbefcbd74fc9c42427ff29bb379",
                "status": "modified"
            }
        ],
        "message": "[MNG-5157] NPE stemming from DefaultModelBuilder.containsCoordinates\n\no Revised original fix to prevent duplicate emission of error msg\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1176402 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/a6b7bc895ff30ad79ab0d7a789a30dfad30b081a",
        "repo": "maven",
        "unit_tests": [
            "DefaultModelValidatorTest.java"
        ]
    },
    "maven_b392f19": {
        "bug_id": "maven_b392f19",
        "commit": "https://github.com/apache/maven/commit/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven/blob/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
                "deletions": 1,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "patch": "@@ -305,7 +305,7 @@ else if ( !a.getType().equals( type ) )\n         {\n             return false;\n         }\n-        else if ( classifier == null ? a.getClassifier() != null : !a.getClassifier().equals( classifier ) )\n+        else if ( a.getClassifier() == null ? classifier != null : !a.getClassifier().equals( classifier ) )\n         {\n             return false;\n         }",
                "raw_url": "https://github.com/apache/maven/raw/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "sha": "0e45e3296ce1754aacbdce5166816903ca623ea8",
                "status": "modified"
            }
        ],
        "message": "prevent NPE in equals()\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@349699 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/1bd7f792fcdd69c6b92b425f0d3b4c93815e0436",
        "repo": "maven",
        "unit_tests": [
            "DefaultArtifactTest.java"
        ]
    },
    "maven_bf7d7a0": {
        "bug_id": "maven_bf7d7a0",
        "commit": "https://github.com/apache/maven/commit/bf7d7a01a028640ff558bd872591f929795922d9",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven/blob/bf7d7a01a028640ff558bd872591f929795922d9/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=bf7d7a01a028640ff558bd872591f929795922d9",
                "deletions": 9,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -1092,20 +1092,22 @@ else if ( StringUtils.isEmpty( parentModel.getVersion() ) )\n                         {\n                             getLogger().debug( \"Parent-POM: \" + parentModel.getId() + \" for project: \" + project.getId() + \" cannot be loaded from relative path: \" + parentDescriptor + \"; path does not exist.\" );\n                         }\n-\n-                        parentDescriptor = null;\n                     }\n                 }\n \n-                try\n-                {\n-                    parentDescriptor = parentDescriptor.getCanonicalFile();\n-                }\n-                catch ( IOException e )\n+                if ( parentDescriptor != null )\n                 {\n-                    getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\", e );\n+                    try\n+                    {\n+                        parentDescriptor = parentDescriptor.getCanonicalFile();\n+                    }\n+                    catch ( IOException e )\n+                    {\n+                        getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\",\n+                                           e );\n \n-                    parentDescriptor = null;\n+                        parentDescriptor = null;\n+                    }\n                 }\n \n                 if ( parentDescriptor != null && parentDescriptor.exists() )",
                "raw_url": "https://github.com/apache/maven/raw/bf7d7a01a028640ff558bd872591f929795922d9/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "84f51fb5a80a5d7feec477be8b818d94be31bc52",
                "status": "modified"
            }
        ],
        "message": "MNG-2746 fixing an obvious NPE when parent path is a directory and pom is not found. Also reported in MNGECLIPSE-184 and CONTINUUM-1000\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@494085 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/bb6b84a02a8c97d76ef73f9a2f74682ee6a5c5bb",
        "repo": "maven",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven_cb077dc": {
        "bug_id": "maven_cb077dc",
        "commit": "https://github.com/apache/maven/commit/cb077dc469f989707b1bae096db86863e0b970b3",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven/blob/cb077dc469f989707b1bae096db86863e0b970b3/maven-core/src/main/java/org/apache/maven/lifecycle/binding/DefaultLifecycleBindingManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-core/src/main/java/org/apache/maven/lifecycle/binding/DefaultLifecycleBindingManager.java?ref=cb077dc469f989707b1bae096db86863e0b970b3",
                "deletions": 0,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/binding/DefaultLifecycleBindingManager.java",
                "patch": "@@ -248,6 +248,12 @@ public LifecycleBindings getProjectCustomBindings( final MavenProject project, f\n                                         }\n \n                                         MojoDescriptor mojoDescriptor = pluginDescriptor.getMojo( goal );\n+                                        if(mojoDescriptor == null)\n+                                        {\n+                                            throw new LifecycleSpecificationException( \"Mojo Descriptor for goal is invalid: Plugin = \"\n+                                                    + plugin.getKey() + \", Plugin Descriptor = \"\n+                                                    + pluginDescriptor.getPluginLookupKey() +\", Goal = \" + goal);\n+                                        }\n                                         phase = mojoDescriptor.getPhase();\n \n                                         logger.debug( \"Phase from plugin descriptor: \" + mojoDescriptor.getFullGoalName() + \" is: \" + phase );",
                "raw_url": "https://github.com/apache/maven/raw/cb077dc469f989707b1bae096db86863e0b970b3/maven-core/src/main/java/org/apache/maven/lifecycle/binding/DefaultLifecycleBindingManager.java",
                "sha": "26e0f3d2f538ccb3ee4f9f13f17c8a14c96e509a",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven/blob/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java?ref=cb077dc469f989707b1bae096db86863e0b970b3",
                "deletions": 10,
                "filename": "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "patch": "@@ -264,18 +264,20 @@ private static boolean handleLifecycleExecutionException( LifecycleExecutionExce\n         handleGenericException( e, showStackTraces, writer );\n \n         MavenProject project = e.getProject();\n-\n-        writer.write( NEWLINE );\n-        writer.write( \"While building project with id: \" );\n-        writer.write( project.getId() );\n-        writer.write( NEWLINE );\n-        if ( project.getFile() != null )\n+        if(project != null)\n         {\n-            writer.write( \"Project File: \" );\n-            writer.write( project.getFile().getAbsolutePath() );\n+            writer.write( NEWLINE );\n+            writer.write( \"While building project with id: \" );\n+            writer.write( project.getId() );\n+            writer.write( NEWLINE );\n+            if ( project.getFile() != null )\n+            {\n+                writer.write( \"Project File: \" );\n+                writer.write( project.getFile().getAbsolutePath() );\n+            }\n+            writer.write( NEWLINE );\n         }\n-        writer.write( NEWLINE );\n-\n+        \n         return true;\n     }\n ",
                "raw_url": "https://github.com/apache/maven/raw/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
                "sha": "c37be679b4a45b72d59dd9e5bee9142c8dc427cc",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/maven/blob/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java?ref=cb077dc469f989707b1bae096db86863e0b970b3",
                "deletions": 0,
                "filename": "maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "patch": "@@ -33,6 +33,7 @@\n import org.apache.maven.settings.SettingsConfigurationException;\n import org.apache.maven.settings.io.xpp3.SettingsXpp3Reader;\n import org.apache.maven.settings.io.xpp3.SettingsXpp3Writer;\n+import org.apache.maven.lifecycle.LifecycleSpecificationException;\n import org.codehaus.plexus.util.FileUtils;\n import org.codehaus.plexus.util.IOUtil;\n import org.codehaus.plexus.util.ReaderFactory;\n@@ -57,6 +58,7 @@\n \n     protected MavenEmbedder maven;\n \n+\n     protected void setUp()\n         throws Exception\n     {\n@@ -134,6 +136,30 @@ public void testExecutionUsingABaseDirectory()\n         assertTrue( jar.exists() );\n     }\n \n+    /*MNG-3919*/\n+    public void testWithInvalidGoal()\n+        throws Exception\n+    {\n+        File testDirectory = new File( basedir, \"src/test/projects/invalid-goal\" );\n+\n+        File targetDirectory = new File( basedir, \"target/projects/invalid-goal\" );\n+\n+        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n+\n+        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( targetDirectory )\n+            .setShowErrors( true ).setGoals( Arrays.asList( new String[]{\"validate\"} ) );\n+\n+        MavenExecutionResult result = maven.execute( request );\n+        List exceptions = result.getExceptions();\n+        assertEquals(\"Incorrect number of exceptions\", 1, exceptions.size());\n+\n+        Iterator it = exceptions.iterator();\n+        if( (it.next() instanceof NullPointerException))\n+        {\n+            fail(\"Null Pointer on Exception\");\n+        }\n+    }\n+\n     public void testExecutionUsingAPomFile()\n         throws Exception\n     {",
                "raw_url": "https://github.com/apache/maven/raw/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/test/java/org/apache/maven/embedder/MavenEmbedderTest.java",
                "sha": "64ff05fb15ed5d17c86a5b242f5768b781ca7632",
                "status": "modified"
            },
            {
                "additions": 49,
                "blob_url": "https://github.com/apache/maven/blob/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/test/projects/invalid-goal/pom.xml",
                "changes": 49,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/test/projects/invalid-goal/pom.xml?ref=cb077dc469f989707b1bae096db86863e0b970b3",
                "deletions": 0,
                "filename": "maven-embedder/src/test/projects/invalid-goal/pom.xml",
                "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.its.mng</groupId>\n+  <artifactId>test1</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+\n+  <packaging>jar</packaging>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-site-plugin</artifactId>\n+        <version>2.0-beta-7</version>\n+\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>invalid-goal</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+    </plugins>\n+  </build>\n+</project>",
                "raw_url": "https://github.com/apache/maven/raw/cb077dc469f989707b1bae096db86863e0b970b3/maven-embedder/src/test/projects/invalid-goal/pom.xml",
                "sha": "d72b515ad3a1201c519ef84d29026fae61db4323",
                "status": "added"
            }
        ],
        "message": "MNG-3919: NPE in DefaultLifecycleBindingManager\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@740468 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/5eaab2785789765b79311f0716523a11464317b6",
        "repo": "maven",
        "unit_tests": [
            "CLIReportingUtilsTest.java"
        ]
    },
    "maven_cedf9e0": {
        "bug_id": "maven_cedf9e0",
        "commit": "https://github.com/apache/maven/commit/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5",
        "file": [
            {
                "additions": 46,
                "blob_url": "https://github.com/apache/maven/blob/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-plugin-tools/maven-plugin-tools-model/src/main/mdo/plugin-metadata.mdo",
                "changes": 81,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-plugin-tools/maven-plugin-tools-model/src/main/mdo/plugin-metadata.mdo?ref=cedf9e04bc786e2e377337d3a65029c0ccb1a4f5",
                "deletions": 35,
                "filename": "maven-plugin-tools/maven-plugin-tools-model/src/main/mdo/plugin-metadata.mdo",
                "patch": "@@ -1,40 +1,51 @@\n <!--\n-  <pluginMetadata>\n-    <mojos>\n-      <mojo goal=\"myGoal\" \n-            phase=\"compile\"\n-            requiresDependencyResolution=\"compile\"\n-            requiresProject=\"true\"\n-            requiresReports=\"true\"\n-            requiresOnline=\"true\"\n-            inheritByDefault=\"true\"\n-            requiresDirectInvocation=\"true\"\n-            aggregator=\"true\">\n+<pluginMetadata>\n+  <mojos>\n+    <mojo>\n+      <goal>myGoal</goal>\n+      <phase>compile</phase>\n+      <requiresDependencyResolution>compile</requiresDependencyResolution>\n+      <requiresProject>true</requiresProject>\n+      <requiresReports>true</requiresReports>\n+      <requiresOnline>true</requiresOnline>\n+      <inheritByDefault>true</inheritByDefault>\n+      <requiresDirectInvocation>true</requiresDirectInvocation>\n+      <aggregator>true</aggregator>\n   \n-        <execute phase=\"initialize\" lifecycle=\"mine\" goal=\"some:goal\"/>\n-        <components>\n-          <component role=\"stuff\" hint=\"more\"/>\n-        </components>\n-        <parameters>\n-          <parameter name=\"nom\" \n-                     property=\"prop\" \n-                     required=\"true\" \n-                     readonly=\"true\" \n-                     expression=\"${my.property}\" \n-                     defaultValue=\"${project.artifactId}\"\n-                     type=\"org.apache.maven.project.MavenProject\"\n-                     alias=\"otherProp\">\n-            <description>Test parameter</description>\n-            <deprecated>Use something else</deprecated>\n-          </parameter>\n-        </parameters>\n-        <description>\n-          This is a test.\n-        </description>\n-        <deprecated>Use another mojo</deprecated>\n-      </mojo>\n-    </mojos>\n-  </pluginMetadata>\n+      <execute>\n+        <phase>initialize</phase>\n+        <lifecycle>mine</lifecycle>\n+        <goal>goal</goal>\n+      </execute>\n+\n+      <components>\n+        <component>\n+          <role>stuff</role>\n+          <hint>more</hint>\n+        </component>\n+      </components>\n+\n+      <parameters>\n+        <parameter>\n+          <name>nom</name> \n+          <property>prop</property> \n+          <required>true</required>\n+          <readonly>true</readonly> \n+          <expression>${my.property}</expression> \n+          <defaultValue>${project.artifactId}</defaultValue>\n+          <type>org.apache.maven.project.MavenProject</type>\n+          <alias>otherProp</alias>\n+          <description>Test parameter</description>\n+          <deprecated>Use something else</deprecated>\n+        </parameter>\n+      </parameters>\n+      <description>\n+        This is a test.\n+      </description>\n+      <deprecated>Use another mojo</deprecated>\n+    </mojo>\n+  </mojos>\n+</pluginMetadata>\n   -->\n <model>\n   <id>plugin-metadata</id>",
                "raw_url": "https://github.com/apache/maven/raw/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-plugin-tools/maven-plugin-tools-model/src/main/mdo/plugin-metadata.mdo",
                "sha": "671665628e1b52dd1e3a97195a5e9a10d894283b",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/maven/blob/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=cedf9e04bc786e2e377337d3a65029c0ccb1a4f5",
                "deletions": 0,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -78,6 +78,12 @@\n  */\n public class MavenProject\n {\n+    public static final String EMPTY_PROJECT_GROUP_ID = \"unknown\";\n+    \n+    public static final String EMPTY_PROJECT_ARTIFACT_ID = \"empty-project\";\n+    \n+    public static final String EMPTY_PROJECT_VERSION = \"0\";\n+    \n     private Model model;\n \n     private MavenProject parent;\n@@ -139,6 +145,17 @@\n     \n     private Map moduleAdjustments;\n \n+    public MavenProject()\n+    {\n+        Model model = new Model();\n+        \n+        model.setGroupId( EMPTY_PROJECT_GROUP_ID );\n+        model.setArtifactId( EMPTY_PROJECT_ARTIFACT_ID );\n+        model.setVersion( EMPTY_PROJECT_VERSION );\n+        \n+        this.model = model;\n+    }\n+\n     public MavenProject( Model model )\n     {\n         this.model = model;",
                "raw_url": "https://github.com/apache/maven/raw/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "2e80f2f3cc9429e77fc498a6d7a6d6c17ace9ee0",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven/blob/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java?ref=cedf9e04bc786e2e377337d3a65029c0ccb1a4f5",
                "deletions": 0,
                "filename": "maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "patch": "@@ -24,6 +24,15 @@\n public class MavenProjectTest\n     extends AbstractMavenProjectTestCase\n {\n+    \n+    public void testEmptyConstructor()\n+    {\n+        MavenProject project = new MavenProject();\n+        \n+        assertEquals( MavenProject.EMPTY_PROJECT_GROUP_ID + \":\" + MavenProject.EMPTY_PROJECT_ARTIFACT_ID + \":jar:\"\n+            + MavenProject.EMPTY_PROJECT_VERSION, project.getId() );\n+    }\n+    \n     public void testCopyConstructor() throws Exception\n     {\n         File f = getFileForClasspathResource( \"canonical-pom.xml\" );",
                "raw_url": "https://github.com/apache/maven/raw/cedf9e04bc786e2e377337d3a65029c0ccb1a4f5/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "sha": "79c57c447174247c4a1de99f8388e3928ca1bede",
                "status": "modified"
            }
        ],
        "message": "(Merging 389199:389201 from branch.)\n\no Cleaned up example in the comment-header of the plugin-metadata.mdo\no Added code to initialize a dummy Model instance in MavenProject, to avoid NPEs in things like getId().\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@389203 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/02fd611c548d3c712a4fe7ee170da3130250393b",
        "repo": "maven",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven_d5e5717": {
        "bug_id": "maven_d5e5717",
        "commit": "https://github.com/apache/maven/commit/d5e5717dd7955a036d0e991db1db71d964f97a4c",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/d5e5717dd7955a036d0e991db1db71d964f97a4c/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java?ref=d5e5717dd7955a036d0e991db1db71d964f97a4c",
                "deletions": 0,
                "filename": "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
                "patch": "@@ -40,6 +40,7 @@\n import org.apache.maven.cli.event.DefaultEventSpyContext;\n import org.apache.maven.cli.event.ExecutionEventLogger;\n import org.apache.maven.cli.logging.Slf4jLoggerManager;\n+import org.apache.maven.cli.logging.Slf4jStdoutLogger;\n import org.apache.maven.cli.transfer.ConsoleMavenTransferListener;\n import org.apache.maven.cli.transfer.QuietMavenTransferListener;\n import org.apache.maven.cli.transfer.Slf4jMavenTransferListener;\n@@ -262,6 +263,12 @@ private void initialize( CliRequest cliRequest )\n     private void cli( CliRequest cliRequest )\n         throws Exception\n     {\n+        //\n+        // Parsing errors can happen during the processing of the arguments and we prefer not having to check if the logger is null\n+        // and make construct this so we can use an SLF4J logger everywhere\n+        //\n+        slf4jLogger = new Slf4jStdoutLogger();\n+\n         CLIManager cliManager = new CLIManager();\n \n         try",
                "raw_url": "https://github.com/apache/maven/raw/d5e5717dd7955a036d0e991db1db71d964f97a4c/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
                "sha": "78b054c0a95833aeab3b4e8280b9bd499ba37605",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/maven/blob/4c8b3009d1e6f7f2df221f0cfc7a4b9ca36f50a9/maven-embedder/src/main/java/org/apache/maven/cli/logging/PrintStreamLogger.java",
                "changes": 187,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/cli/logging/PrintStreamLogger.java?ref=4c8b3009d1e6f7f2df221f0cfc7a4b9ca36f50a9",
                "deletions": 187,
                "filename": "maven-embedder/src/main/java/org/apache/maven/cli/logging/PrintStreamLogger.java",
                "patch": "@@ -1,187 +0,0 @@\n-package org.apache.maven.cli.logging;\n-\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-import java.io.PrintStream;\n-\n-import org.apache.maven.Maven;\n-import org.codehaus.plexus.logging.AbstractLogger;\n-import org.codehaus.plexus.logging.Logger;\n-\n-/**\n- * Logs to a user-supplied {@link PrintStream}.\n- * \n- * @author Benjamin Bentmann\n- */\n-public class PrintStreamLogger\n-    extends AbstractLogger\n-{\n-\n-    public interface Provider\n-    {\n-        PrintStream getStream();\n-    }\n-\n-    private Provider provider;\n-\n-    private static final String FATAL_ERROR = \"[FATAL] \";\n-\n-    private static final String ERROR = \"[ERROR] \";\n-\n-    private static final String WARNING = \"[WARNING] \";\n-\n-    private static final String INFO = \"[INFO] \";\n-\n-    private static final String DEBUG = \"[DEBUG] \";\n-\n-    public PrintStreamLogger( Provider provider )\n-    {\n-        super( Logger.LEVEL_INFO, Maven.class.getName() );\n-\n-        if ( provider == null )\n-        {\n-            throw new IllegalArgumentException( \"output stream provider missing\" );\n-        }\n-        this.provider = provider;\n-    }\n-\n-    public PrintStreamLogger( PrintStream out )\n-    {\n-        super( Logger.LEVEL_INFO, Maven.class.getName() );\n-\n-        setStream( out );\n-    }\n-\n-    public void setStream( final PrintStream out )\n-    {\n-        if ( out == null )\n-        {\n-            throw new IllegalArgumentException( \"output stream missing\" );\n-        }\n-\n-        this.provider = new Provider()\n-        {\n-            public PrintStream getStream()\n-            {\n-                return out;\n-            }\n-        };\n-    }\n-\n-    public void debug( String message, Throwable throwable )\n-    {\n-        if ( isDebugEnabled() )\n-        {\n-            PrintStream out = provider.getStream();\n-\n-            out.print( DEBUG );\n-            out.println( message );\n-\n-            if ( null != throwable )\n-            {\n-                throwable.printStackTrace( out );\n-            }\n-        }\n-    }\n-\n-    public void info( String message, Throwable throwable )\n-    {\n-        if ( isInfoEnabled() )\n-        {\n-            PrintStream out = provider.getStream();\n-\n-            out.print( INFO );\n-            out.println( message );\n-\n-            if ( null != throwable )\n-            {\n-                throwable.printStackTrace( out );\n-            }\n-        }\n-    }\n-\n-    public void warn( String message, Throwable throwable )\n-    {\n-        if ( isWarnEnabled() )\n-        {\n-            PrintStream out = provider.getStream();\n-\n-            out.print( WARNING );\n-            out.println( message );\n-\n-            if ( null != throwable )\n-            {\n-                throwable.printStackTrace( out );\n-            }\n-        }\n-    }\n-\n-    public void error( String message, Throwable throwable )\n-    {\n-        if ( isErrorEnabled() )\n-        {\n-            PrintStream out = provider.getStream();\n-\n-            out.print( ERROR );\n-            out.println( message );\n-\n-            if ( null != throwable )\n-            {\n-                throwable.printStackTrace( out );\n-            }\n-        }\n-    }\n-\n-    public void fatalError( String message, Throwable throwable )\n-    {\n-        if ( isFatalErrorEnabled() )\n-        {\n-            PrintStream out = provider.getStream();\n-\n-            out.print( FATAL_ERROR );\n-            out.println( message );\n-\n-            if ( null != throwable )\n-            {\n-                throwable.printStackTrace( out );\n-            }\n-        }\n-    }\n-\n-    public void close()\n-    {\n-        PrintStream out = provider.getStream();\n-\n-        if ( out == System.out || out == System.err )\n-        {\n-            out.flush();\n-        }\n-        else\n-        {\n-            out.close();\n-        }\n-    }\n-\n-    public Logger getChildLogger( String arg0 )\n-    {\n-        return this;\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/maven/raw/4c8b3009d1e6f7f2df221f0cfc7a4b9ca36f50a9/maven-embedder/src/main/java/org/apache/maven/cli/logging/PrintStreamLogger.java",
                "sha": "53025a0daa66098c220ed354cf2b1b0e6713bb26",
                "status": "removed"
            },
            {
                "additions": 284,
                "blob_url": "https://github.com/apache/maven/blob/d5e5717dd7955a036d0e991db1db71d964f97a4c/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jStdoutLogger.java",
                "changes": 284,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jStdoutLogger.java?ref=d5e5717dd7955a036d0e991db1db71d964f97a4c",
                "deletions": 0,
                "filename": "maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jStdoutLogger.java",
                "patch": "@@ -0,0 +1,284 @@\n+package org.apache.maven.cli.logging;\n+\n+import java.io.PrintStream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.Marker;\n+\n+public class Slf4jStdoutLogger\n+    implements Logger\n+{\n+    private static final String ERROR = \"[ERROR] \";\n+\n+    private PrintStream out = System.out;\n+\n+    //\n+    // These are the only methods we need in our primordial logger\n+    //    \n+    public void error( String msg )\n+    {\n+        out.print( ERROR );\n+        out.println( msg );\n+    }\n+\n+    public void error( String msg, Throwable t )\n+    {\n+        error( msg );\n+\n+        if ( null != t )\n+        {\n+            t.printStackTrace( out );\n+        }        \n+    }    \n+\n+    //\n+    // Don't need any of this\n+    //    \n+    public String getName()\n+    {\n+        return null;\n+    }\n+\n+    public boolean isTraceEnabled()\n+    {\n+        return false;\n+    }\n+\n+    public void trace( String msg )\n+    {\n+    }\n+\n+    public void trace( String format, Object arg )\n+    {\n+    }\n+\n+    public void trace( String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void trace( String format, Object... arguments )\n+    {\n+    }\n+\n+    public void trace( String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isTraceEnabled( Marker marker )\n+    {\n+        return false;\n+    }\n+\n+    public void trace( Marker marker, String msg )\n+    {\n+    }\n+\n+    public void trace( Marker marker, String format, Object arg )\n+    {\n+    }\n+\n+    public void trace( Marker marker, String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void trace( Marker marker, String format, Object... argArray )\n+    {\n+    }\n+\n+    public void trace( Marker marker, String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isDebugEnabled()\n+    {\n+        return false;\n+    }\n+\n+    public void debug( String msg )\n+    {\n+    }\n+\n+    public void debug( String format, Object arg )\n+    {\n+    }\n+\n+    public void debug( String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void debug( String format, Object... arguments )\n+    {\n+    }\n+\n+    public void debug( String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isDebugEnabled( Marker marker )\n+    {\n+        return false;\n+    }\n+\n+    public void debug( Marker marker, String msg )\n+    {\n+    }\n+\n+    public void debug( Marker marker, String format, Object arg )\n+    {\n+    }\n+\n+    public void debug( Marker marker, String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void debug( Marker marker, String format, Object... arguments )\n+    {\n+    }\n+\n+    public void debug( Marker marker, String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isInfoEnabled()\n+    {\n+        return false;\n+    }\n+\n+    public void info( String msg )\n+    {\n+    }\n+\n+    public void info( String format, Object arg )\n+    {\n+    }\n+\n+    public void info( String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void info( String format, Object... arguments )\n+    {\n+    }\n+\n+    public void info( String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isInfoEnabled( Marker marker )\n+    {\n+        return false;\n+    }\n+\n+    public void info( Marker marker, String msg )\n+    {\n+    }\n+\n+    public void info( Marker marker, String format, Object arg )\n+    {\n+    }\n+\n+    public void info( Marker marker, String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void info( Marker marker, String format, Object... arguments )\n+    {\n+    }\n+\n+    public void info( Marker marker, String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isWarnEnabled()\n+    {\n+        return false;\n+    }\n+\n+    public void warn( String msg )\n+    {\n+    }\n+\n+    public void warn( String format, Object arg )\n+    {\n+    }\n+\n+    public void warn( String format, Object... arguments )\n+    {\n+    }\n+\n+    public void warn( String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void warn( String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isWarnEnabled( Marker marker )\n+    {\n+        return false;\n+    }\n+\n+    public void warn( Marker marker, String msg )\n+    {\n+    }\n+\n+    public void warn( Marker marker, String format, Object arg )\n+    {\n+    }\n+\n+    public void warn( Marker marker, String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void warn( Marker marker, String format, Object... arguments )\n+    {\n+    }\n+\n+    public void warn( Marker marker, String msg, Throwable t )\n+    {\n+    }\n+\n+    public boolean isErrorEnabled()\n+    {\n+        return false;\n+    }\n+\n+    public void error( String format, Object arg )\n+    {\n+    }\n+\n+    public void error( String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void error( String format, Object... arguments )\n+    {\n+    }\n+\n+    public boolean isErrorEnabled( Marker marker )\n+    {\n+        return false;\n+    }\n+\n+    public void error( Marker marker, String msg )\n+    {\n+    }\n+\n+    public void error( Marker marker, String format, Object arg )\n+    {\n+    }\n+\n+    public void error( Marker marker, String format, Object arg1, Object arg2 )\n+    {\n+    }\n+\n+    public void error( Marker marker, String format, Object... arguments )\n+    {\n+    }\n+\n+    public void error( Marker marker, String msg, Throwable t )\n+    {\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven/raw/d5e5717dd7955a036d0e991db1db71d964f97a4c/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jStdoutLogger.java",
                "sha": "f1a27ae5117c1b58000570c143bf7cdf1ef21810",
                "status": "added"
            }
        ],
        "message": "[MNG-5390] mvn -rf (no argument) results in NPE\n\nCreated a simple primordial logger that implements the error methods required between CLI parsing and logger initialization. I don't want to have to look to see if the logger is null.",
        "parent": "https://github.com/apache/maven/commit/4c8b3009d1e6f7f2df221f0cfc7a4b9ca36f50a9",
        "repo": "maven",
        "unit_tests": [
            "MavenCliTest.java"
        ]
    },
    "maven_e49d091": {
        "bug_id": "maven_e49d091",
        "commit": "https://github.com/apache/maven/commit/e49d091bc4ff310dafbf824e7f304abb4517ce64",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven/blob/e49d091bc4ff310dafbf824e7f304abb4517ce64/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java?ref=e49d091bc4ff310dafbf824e7f304abb4517ce64",
                "deletions": 2,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "patch": "@@ -909,6 +909,13 @@ private void importDependencyManagement( Model model, ModelBuildingRequest reque\n             String artifactId = dependency.getArtifactId();\n             String version = dependency.getVersion();\n \n+            if ( version == null || version.length() <= 0 )\n+            {\n+                problems.add( Severity.ERROR, \"'dependencyManagement.dependencies.dependency.version' for \"\n+                    + dependency.getManagementKey() + \" is missing.\", dependency.getLocation( \"\" ), null );\n+                continue;\n+            }\n+\n             String imported = groupId + ':' + artifactId + ':' + version;\n \n             if ( importIds.contains( imported ) )\n@@ -1045,8 +1052,9 @@ private void fireEvent( Model model, ModelBuildingRequest request, ModelProblemC\n \n     private boolean containsCoordinates( String message, String groupId, String artifactId, String version )\n     {\n-        return message != null && message.contains( groupId ) && message.contains( artifactId )\n-            && message.contains( version );\n+        return message != null && ( groupId == null || message.contains( groupId ) )\n+            && ( artifactId == null || message.contains( artifactId ) )\n+            && ( version == null || message.contains( version ) );\n     }\n \n }",
                "raw_url": "https://github.com/apache/maven/raw/e49d091bc4ff310dafbf824e7f304abb4517ce64/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java",
                "sha": "093305c8d3e580bfcd0f9d5020293887a5ca02be",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven/blob/e49d091bc4ff310dafbf824e7f304abb4517ce64/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java?ref=e49d091bc4ff310dafbf824e7f304abb4517ce64",
                "deletions": 0,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "patch": "@@ -356,6 +356,12 @@ private void validateRawDependencies( ModelProblemCollector problems, List<Depen\n         {\n             String key = dependency.getManagementKey();\n \n+            validateStringNotEmpty( prefix + \".groupId\", problems, Severity.ERROR, dependency.getGroupId(), key,\n+                                    dependency );\n+\n+            validateStringNotEmpty( prefix + \".artifactId\", problems, Severity.ERROR, dependency.getArtifactId(), key,\n+                                    dependency );\n+\n             if ( \"import\".equals( dependency.getScope() ) )\n             {\n                 if ( !\"pom\".equals( dependency.getType() ) )",
                "raw_url": "https://github.com/apache/maven/raw/e49d091bc4ff310dafbf824e7f304abb4517ce64/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "sha": "7e87df3072131713400c65d738727fefe186f028",
                "status": "modified"
            }
        ],
        "message": "[MNG-5157] NPE stemming from DefaultModelBuilder.containsCoordinates\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1158623 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/decce3a1209efcaf6eebbd9b8680c4343e6ccaee",
        "repo": "maven",
        "unit_tests": [
            "DefaultModelValidatorTest.java"
        ]
    },
    "maven_e61887b": {
        "bug_id": "maven_e61887b",
        "commit": "https://github.com/apache/maven/commit/e61887bbc2b96f969d77f90aa92a5c487432babf",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven/blob/e61887bbc2b96f969d77f90aa92a5c487432babf/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java?ref=e61887bbc2b96f969d77f90aa92a5c487432babf",
                "deletions": 7,
                "filename": "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "patch": "@@ -382,17 +382,17 @@ private void validateDependencies( ModelProblemCollector problems, List<Dependen\n                 boolean warning = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;\n \n                 String msg;\n-                if ( StringUtils.isEmpty( existing.getVersion() ) && StringUtils.isEmpty( dependency.getVersion() ) )\n+                if ( StringUtils.clean( existing.getVersion() ).equals( StringUtils.clean( dependency.getVersion() ) ) )\n                 {\n-                    msg = \"duplicate declaration\";\n-                }\n-                else if ( existing.getVersion().equals( dependency.getVersion() ) )\n-                {\n-                    msg = \"duplicate declaration of version \" + dependency.getVersion();\n+                    msg =\n+                        \"duplicate declaration of version \"\n+                            + StringUtils.defaultString( dependency.getVersion(), \"(?)\" );\n                 }\n                 else\n                 {\n-                    msg = \"version \" + existing.getVersion() + \" vs \" + dependency.getVersion();\n+                    msg =\n+                        \"version \" + StringUtils.defaultString( existing.getVersion(), \"(?)\" ) + \" vs \"\n+                            + StringUtils.defaultString( dependency.getVersion(), \"(?)\" );\n                 }\n \n                 addViolation( problems, warning, \"'\" + prefix",
                "raw_url": "https://github.com/apache/maven/raw/e61887bbc2b96f969d77f90aa92a5c487432babf/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
                "sha": "ad6f3e72cc55b2d331cc56c72b0efb8b1c30bb79",
                "status": "modified"
            }
        ],
        "message": "o Fixed NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@833726 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/185d5a07c8ba38ff2e7899be04e14ec6a1fc696a",
        "repo": "maven",
        "unit_tests": [
            "DefaultModelValidatorTest.java"
        ]
    },
    "maven_ecb04d2": {
        "bug_id": "maven_ecb04d2",
        "commit": "https://github.com/apache/maven/commit/ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven/blob/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven/contents/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java?ref=ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
                "deletions": 0,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "patch": "@@ -54,6 +54,11 @@ public List getRestrictions()\n     public static VersionRange createFromVersionSpec( String spec )\n         throws InvalidVersionSpecificationException\n     {\n+        if ( spec == null )\n+        {\n+            return null;\n+        }\n+\n         List restrictions = new ArrayList();\n         String process = spec;\n         ArtifactVersion version = null;",
                "raw_url": "https://github.com/apache/maven/raw/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "sha": "945f988cb0146608010b1865151f5ce3714bb0d0",
                "status": "modified"
            }
        ],
        "message": "avoid NPE, pass on to proper validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219888 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven/commit/473d99609ce2702c9d4a8b65560667eb2ad2b47c",
        "repo": "maven",
        "unit_tests": [
            "VersionRangeTest.java"
        ]
    }
}