[
    {
        "repo": "commons-functor",
        "commit": "https://github.com/apache/commons-functor/commit/f72ca72b68487ad6e9eb9245cc24ff987269bcd1",
        "bug_id": "commons-functor_f72ca72",
        "message": "[FUNCTOR-21] Added an extra verification in the then() method of UnarySequence to avoid the NPE. Tests in place.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/functor/trunk@1363382 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-functor/commit/fbc0dc7d81d8b4d3c448155c5907e06d996d9d58",
        "patched_files": [
            "UnarySequence.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-functor/raw/f72ca72b68487ad6e9eb9245cc24ff987269bcd1/src/main/java/org/apache/commons/functor/core/composite/UnarySequence.java",
                "contents_url": "https://api.github.com/repos/apache/commons-functor/contents/src/main/java/org/apache/commons/functor/core/composite/UnarySequence.java?ref=f72ca72b68487ad6e9eb9245cc24ff987269bcd1",
                "filename": "src/main/java/org/apache/commons/functor/core/composite/UnarySequence.java",
                "deletions": 1,
                "sha": "05c6de82fff1c3b2de13a6609edabb20d6d0cdfd",
                "blob_url": "https://github.com/apache/commons-functor/blob/f72ca72b68487ad6e9eb9245cc24ff987269bcd1/src/main/java/org/apache/commons/functor/core/composite/UnarySequence.java",
                "patch": "@@ -98,7 +98,9 @@ public UnarySequence(Iterable<UnaryProcedure<? super A>> procedures) {\n      * @return this\n      */\n     public UnarySequence<A> then(UnaryProcedure<? super A> p) {\n-        list.add(p);\n+        if (p != null) {\n+            list.add(p);\n+        }\n         return this;\n     }\n ",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 22,
                "raw_url": "https://github.com/apache/commons-functor/raw/f72ca72b68487ad6e9eb9245cc24ff987269bcd1/src/test/java/org/apache/commons/functor/core/composite/TestUnarySequence.java",
                "contents_url": "https://api.github.com/repos/apache/commons-functor/contents/src/test/java/org/apache/commons/functor/core/composite/TestUnarySequence.java?ref=f72ca72b68487ad6e9eb9245cc24ff987269bcd1",
                "filename": "src/test/java/org/apache/commons/functor/core/composite/TestUnarySequence.java",
                "deletions": 0,
                "sha": "d3f6323fc7f4c252d269f28f04a7446ff8fa0b10",
                "blob_url": "https://github.com/apache/commons-functor/blob/f72ca72b68487ad6e9eb9245cc24ff987269bcd1/src/test/java/org/apache/commons/functor/core/composite/TestUnarySequence.java",
                "patch": "@@ -17,6 +17,7 @@\n package org.apache.commons.functor.core.composite;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -43,6 +44,26 @@ protected Object makeFunctor() {\n     // Tests\n     // ------------------------------------------------------------------------\n \n+    @Test\n+    public void testConstructors() throws Exception {\n+        UnarySequence<Object> seq1 = new UnarySequence<Object>((UnaryProcedure<? super Object>)null);\n+        UnarySequence<Object> seq2 = new UnarySequence<Object>();\n+        assertObjectsAreEqual(seq1, seq2);\n+        \n+        RunCounter p1 = new RunCounter();\n+        RunCounter p2 = new RunCounter();\n+        List<UnaryProcedure<? super Object>> iterable = new ArrayList<UnaryProcedure<? super Object>>();\n+        iterable.add(p1);\n+        iterable.add(p2);\n+        UnarySequence<Object> seq3 = new UnarySequence<Object>(iterable);\n+        UnarySequence<Object> seq4 = new UnarySequence<Object>(p1, p2);\n+        assertObjectsAreEqual(seq3, seq4);\n+        \n+        UnarySequence<Object> seq5 = new UnarySequence<Object>((Iterable<UnaryProcedure<? super Object>>)null);\n+        UnarySequence<Object> seq6 = new UnarySequence<Object>((UnaryProcedure<? super Object>[])null);\n+        assertObjectsAreEqual(seq5, seq6);\n+    }\n+    \n     @Test\n     public void testRunZero() throws Exception {\n         UnarySequence<String> seq = new UnarySequence<String>();\n@@ -110,6 +131,7 @@ public void testEquals() throws Exception {\n         }\n \n         assertObjectsAreNotEqual(p,new NoOp());\n+        assertFalse(p.equals(null));\n     }\n \n     // Classes",
                "changes": 22
            }
        ],
        "unit_tests": [
            "TestUnarySequence.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/functor/core/composite/TestUnarySequence.java",
        "buggy_files": [
            "src/main/java/org/apache/commons/functor/core/composite/UnarySequence.java"
        ],
        "fixed": true
    }
]