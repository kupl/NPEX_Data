[
    {
        "repo": "sling-org-apache-sling-feature-cpconverter",
        "message": "SLING-8623 - adding nullcheck for theoretical NPE",
        "commit": "https://github.com/apache/sling-org-apache-sling-feature-cpconverter/commit/6f90f5ba87946b76d8c0c769fe77a89c0b5e7083",
        "parent": "https://github.com/apache/sling-org-apache-sling-feature-cpconverter/commit/e173157dcaa34a233400f1d9566ab6a2c0f44558",
        "bug_id": "sling-org-apache-sling-feature-cpconverter_1",
        "file": [
            {
                "sha": "e8b4feec1ea9dce761dcaa46fee8d5d98463b143",
                "filename": "src/main/java/org/apache/sling/feature/cpconverter/vltpkg/VaultPackageUtils.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-feature-cpconverter/blob/6f90f5ba87946b76d8c0c769fe77a89c0b5e7083/src/main/java/org/apache/sling/feature/cpconverter/vltpkg/VaultPackageUtils.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-feature-cpconverter/raw/6f90f5ba87946b76d8c0c769fe77a89c0b5e7083/src/main/java/org/apache/sling/feature/cpconverter/vltpkg/VaultPackageUtils.java",
                "status": "modified",
                "changes": 34,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-feature-cpconverter/contents/src/main/java/org/apache/sling/feature/cpconverter/vltpkg/VaultPackageUtils.java?ref=6f90f5ba87946b76d8c0c769fe77a89c0b5e7083",
                "patch": "@@ -38,25 +38,27 @@ public static PackageType detectPackageType(VaultPackage vaultPackage) {\n \n         boolean hasApps = false;\n         boolean hasOther = false;\n-        for (PathFilterSet p : filter.getFilterSets()) {\n-            if (\"cleanup\".equals(p.getType())) {\n-                continue;\n+        if (filter != null) {\n+            for (PathFilterSet p : filter.getFilterSets()) {\n+                if (\"cleanup\".equals(p.getType())) {\n+                    continue;\n+                }\n+                String root = p.getRoot();\n+                if (\"/apps\".equals(root)\n+                        || root.startsWith(\"/apps/\")\n+                        || \"/libs\".equals(root)\n+                        || root.startsWith(\"/libs/\")) {\n+                    hasApps = true;\n+                } else {\n+                    hasOther = true;\n+                }\n             }\n-            String root = p.getRoot();\n-            if (\"/apps\".equals(root)\n-                    || root.startsWith(\"/apps/\")\n-                    || \"/libs\".equals(root)\n-                    || root.startsWith(\"/libs/\")) {\n-                hasApps = true;\n-            } else {\n-                hasOther = true;\n+            if (hasApps && !hasOther) {\n+                return PackageType.APPLICATION;\n+            } else if (hasOther && !hasApps) {\n+                return PackageType.CONTENT;\n             }\n         }\n-        if (hasApps && !hasOther) {\n-            return PackageType.APPLICATION;\n-        } else if (hasOther && !hasApps) {\n-            return PackageType.CONTENT;\n-        }\n         return PackageType.MIXED;\n     }\n ",
                "deletions": 16
            }
        ]
    }
]