[
    {
        "repo": "struts",
        "commit": "https://github.com/apache/struts/commit/7dbe3ea8bb97cd004e77541c761bbe20e4373c3d",
        "bug_id": "struts_7dbe3ea",
        "message": "WW-4663 Checks if expression is null to avoid NPE",
        "parent": "https://github.com/apache/struts/commit/92c54de11030d6f6325386dd24ba92efb9f34a90",
        "patched_files": [
            "ComponentUtils.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/struts/raw/7dbe3ea8bb97cd004e77541c761bbe20e4373c3d/core/src/main/java/org/apache/struts2/util/ComponentUtils.java",
                "contents_url": "https://api.github.com/repos/apache/struts/contents/core/src/main/java/org/apache/struts2/util/ComponentUtils.java?ref=7dbe3ea8bb97cd004e77541c761bbe20e4373c3d",
                "filename": "core/src/main/java/org/apache/struts2/util/ComponentUtils.java",
                "deletions": 2,
                "sha": "054038f00e28e8fa80fb548ea4dca4f4b6618ee5",
                "blob_url": "https://github.com/apache/struts/blob/7dbe3ea8bb97cd004e77541c761bbe20e4373c3d/core/src/main/java/org/apache/struts2/util/ComponentUtils.java",
                "patch": "@@ -44,11 +44,11 @@ public static boolean altSyntax(ValueStack stack) {\n      * @return true if it is an expression\r\n      */\r\n     public static boolean isExpression(String expr) {\r\n-        return expr.startsWith(\"%{\") && expr.endsWith(\"}\");\r\n+        return expr != null && expr.startsWith(\"%{\") && expr.endsWith(\"}\");\r\n     }\r\n \r\n     public static boolean containsExpression(String expr) {\r\n-        return expr.contains(\"%{\") && expr.contains(\"}\");\r\n+        return expr != null && expr.contains(\"%{\") && expr.contains(\"}\");\r\n     }\r\n \r\n }\r",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/struts/raw/7dbe3ea8bb97cd004e77541c761bbe20e4373c3d/core/src/test/java/org/apache/struts2/util/ComponentUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/struts/contents/core/src/test/java/org/apache/struts2/util/ComponentUtilsTest.java?ref=7dbe3ea8bb97cd004e77541c761bbe20e4373c3d",
                "filename": "core/src/test/java/org/apache/struts2/util/ComponentUtilsTest.java",
                "deletions": 0,
                "sha": "1e05ebdfa31b0d0881fd02be00a1f594f65617d6",
                "blob_url": "https://github.com/apache/struts/blob/7dbe3ea8bb97cd004e77541c761bbe20e4373c3d/core/src/test/java/org/apache/struts2/util/ComponentUtilsTest.java",
                "patch": "@@ -93,6 +93,10 @@ public void testIsExpressionIsFalse() throws Exception {\n         assertFalse(actual);\r\n     }\r\n \r\n+    public void testIsExpressionIsFalseWhenNull() throws Exception {\r\n+        assertFalse(ComponentUtils.isExpression(null));\r\n+    }\r\n+\r\n     public void testContainsExpressionIsTrue() throws Exception {\r\n         // given\r\n         String anExpression = \"%{foo}\";\r\n@@ -125,6 +129,10 @@ public void testContainsExpressionIsFalse() throws Exception {\n         // then\r\n         assertFalse(actual);\r\n     }\r\n+\r\n+    public void testContainsExpressionIsFalseWhenNull() throws Exception {\r\n+        assertFalse(ComponentUtils.containsExpression(null));\r\n+    }\r\n }\r\n \r\n class MockConfigurationProvider implements ConfigurationProvider {\r",
                "changes": 8
            }
        ],
        "unit_tests": [
            "ComponentUtilsTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "core/src/test/java/org/apache/struts2/util/ComponentUtilsTest.java",
        "buggy_files": [
            "core/src/main/java/org/apache/struts2/util/ComponentUtils.java"
        ],
        "fixed": true
    }
]