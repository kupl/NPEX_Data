[{"commit": "https://github.com/apache/openwhisk-runtime-java/commit/56cd97e4acddf4d65c2d54ea1af546f7e64de037", "parent": "https://github.com/apache/openwhisk-runtime-java/commit/dd92abcdb1fc96c71a387f469606d64f5c0e1626", "message": "guard against NPE that occurs in some regression tests", "bug_id": "openwhisk-runtime-java_1", "file": [{"additions": 5, "raw_url": "https://github.com/apache/openwhisk-runtime-java/raw/56cd97e4acddf4d65c2d54ea1af546f7e64de037/tests/src/common/WskCli.java", "blob_url": "https://github.com/apache/openwhisk-runtime-java/blob/56cd97e4acddf4d65c2d54ea1af546f7e64de037/tests/src/common/WskCli.java", "sha": "5f86adfad1a3a8de3ffcae6e2468fec5af964567", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openwhisk-runtime-java/contents/tests/src/common/WskCli.java?ref=56cd97e4acddf4d65c2d54ea1af546f7e64de037", "patch": "@@ -550,7 +550,11 @@ public String invoke(String name, Map<String, String> params) throws IOException\n         String activationId = extractActivationIdFromCliResult(response);\n         String result = extractActivationResultFromCliResult(response);\n         JsonObject json = new JsonParser().parse(result).getAsJsonObject();\n-        return Pair.make(activationId, json.get(\"response\").toString());\n+        if (json == null || json.get(\"response\") == null) {\n+            return Pair.make(activationId, \"invalid Json response: \" + result);\n+        } else {\n+            return Pair.make(activationId, json.get(\"response\").toString());\n+        }\n     }\n \n     /**", "filename": "tests/src/common/WskCli.java"}], "repo": "openwhisk-runtime-java"}, {"commit": "https://github.com/apache/openwhisk-runtime-java/commit/ad1b7219d813e1f2e706c4298e5f9010a4cd81ca", "parent": "https://github.com/apache/openwhisk-runtime-java/commit/47531d9a1e2bcc2bc4c368ef170671aaf40fafdd", "message": "add a guard to avoid an NPE if a post fails, and print the error\nmessage from a post to console.error", "bug_id": "openwhisk-runtime-java_2", "file": [{"additions": 3, "raw_url": "https://github.com/apache/openwhisk-runtime-java/raw/ad1b7219d813e1f2e706c4298e5f9010a4cd81ca/core/nodejsAction/src/whisk.js", "blob_url": "https://github.com/apache/openwhisk-runtime-java/blob/ad1b7219d813e1f2e706c4298e5f9010a4cd81ca/core/nodejsAction/src/whisk.js", "sha": "fedc8b6fce5297be0d113ca71a455a381e61c9af", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openwhisk-runtime-java/contents/core/nodejsAction/src/whisk.js?ref=ad1b7219d813e1f2e706c4298e5f9010a4cd81ca", "patch": "@@ -174,7 +174,7 @@ function Whisk(apihost, version, logger) {\n             var error = undefined;\n             var errorCode = undefined;\n \n-            if (response.statusCode == 200) {\n+            if (response && response.statusCode == 200) {\n                 activation = { activation: body.activationId }; // id always present\n             } else {\n                 // activation failed, set error to API host error response (msg and code)\n@@ -271,7 +271,8 @@ function post(packet, logger, next) {\n \n     request.post(options, function(error, response, body) {\n         logger && logger.info('[whisk]', 'post status:', response ? response.statusCode : undefined);\n-        error  && logger.info('[whisk]', 'post error:', error);\n+        // print the error to console.error to help post-mortem debugging\n+        error  && console.error('[whisk]', 'post error:', error);\n         if (next) next(error, response, body || {});\n     });\n }", "filename": "core/nodejsAction/src/whisk.js"}], "repo": "openwhisk-runtime-java"}]
