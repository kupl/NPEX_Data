{
    "flume_23b48af": {
        "bug_id": "flume_23b48af",
        "commit": "https://github.com/apache/flume/commit/23b48af5db4200428972630755bff32cb5d56707",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/flume/blob/23b48af5db4200428972630755bff32cb5d56707/flume-ng-configuration/src/main/java/org/apache/flume/conf/source/SourceConfiguration.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-configuration/src/main/java/org/apache/flume/conf/source/SourceConfiguration.java?ref=23b48af5db4200428972630755bff32cb5d56707",
                "deletions": 8,
                "filename": "flume-ng-configuration/src/main/java/org/apache/flume/conf/source/SourceConfiguration.java",
                "patch": "@@ -58,14 +58,14 @@ public void configure(Context context) throws ConfigurationException {\n       if (channelList != null) {\n         this.channels =\n             new HashSet<String>(Arrays.asList(channelList.split(\"\\\\s+\")));\n-        if (channels.isEmpty()) {\n-          errors.add(new FlumeConfigurationError(componentName,\n-              ComponentType.CHANNEL.getComponentType(),\n-              FlumeConfigurationErrorType.PROPERTY_VALUE_NULL,\n-              ErrorOrWarning.ERROR));\n-          throw new ConfigurationException(\"No channels set for \"\n-              + this.getComponentName());\n-        }\n+      }\n+      if (channels.isEmpty()) {\n+        errors.add(new FlumeConfigurationError(componentName,\n+            ComponentType.CHANNEL.getComponentType(),\n+            FlumeConfigurationErrorType.PROPERTY_VALUE_NULL,\n+            ErrorOrWarning.ERROR));\n+        throw new ConfigurationException(\"No channels set for \"\n+            + this.getComponentName());\n       }\n       Map<String, String> selectorParams = context.getSubProperties(\n               BasicConfigurationConstants.CONFIG_SOURCE_CHANNELSELECTOR_PREFIX);",
                "raw_url": "https://github.com/apache/flume/raw/23b48af5db4200428972630755bff32cb5d56707/flume-ng-configuration/src/main/java/org/apache/flume/conf/source/SourceConfiguration.java",
                "sha": "da804d75445fe42e64ab503f0a5a09845f7342a1",
                "status": "modified"
            }
        ],
        "message": "FLUME-1271. Incorrect configuration causes NPE.\n\n(Hari Shreedharan via Will McQueen)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/flume/trunk@1349081 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/flume/commit/5b223459c36f4b0a1cc56fb3e36447072dbd4a0f",
        "repo": "flume",
        "unit_tests": [
            "TestSourceConfiguration.java"
        ]
    },
    "flume_296fc9f": {
        "bug_id": "flume_296fc9f",
        "commit": "https://github.com/apache/flume/commit/296fc9f92b51bbe9c674cede560ab7be8a03e161",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/flume/blob/296fc9f92b51bbe9c674cede560ab7be8a03e161/flume-ng-core/src/main/java/org/apache/flume/source/ThriftSource.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-core/src/main/java/org/apache/flume/source/ThriftSource.java?ref=296fc9f92b51bbe9c674cede560ab7be8a03e161",
                "deletions": 7,
                "filename": "flume-ng-core/src/main/java/org/apache/flume/source/ThriftSource.java",
                "patch": "@@ -153,14 +153,16 @@ public void stop() {\n     if(server != null && server.isServing()) {\n       server.stop();\n     }\n-    servingExecutor.shutdown();\n-    try {\n-      if(!servingExecutor.awaitTermination(5, TimeUnit.SECONDS)) {\n-        servingExecutor.shutdownNow();\n+    if (servingExecutor != null) {\n+      servingExecutor.shutdown();\n+      try {\n+        if (!servingExecutor.awaitTermination(5, TimeUnit.SECONDS)) {\n+          servingExecutor.shutdownNow();\n+        }\n+      } catch (InterruptedException e) {\n+        throw new FlumeException(\"Interrupted while waiting for server to be \" +\n+          \"shutdown.\");\n       }\n-    } catch (InterruptedException e) {\n-      throw new FlumeException(\"Interrupted while waiting for server to be \" +\n-        \"shutdown.\");\n     }\n     sourceCounter.stop();\n     super.stop();",
                "raw_url": "https://github.com/apache/flume/raw/296fc9f92b51bbe9c674cede560ab7be8a03e161/flume-ng-core/src/main/java/org/apache/flume/source/ThriftSource.java",
                "sha": "68a632a5a4916f757830e175aa76ed870833c96d",
                "status": "modified"
            }
        ],
        "message": "FLUME-2025. ThriftSource throws NPE in stop() if start() failed because socket open failed or if thrift server instance creation threw.\n\n(Hari Shreedharan via Mike Percy)",
        "parent": "https://github.com/apache/flume/commit/337e5fc3768af2d26a9a9dbfaa1e5afa30ae26bf",
        "repo": "flume",
        "unit_tests": [
            "TestThriftSource.java"
        ]
    },
    "flume_5293eba": {
        "bug_id": "flume_5293eba",
        "commit": "https://github.com/apache/flume/commit/5293eba9a418180b42b3138c0c0b5aac38361f7f",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/flume/blob/5293eba9a418180b42b3138c0c0b5aac38361f7f/flume-ng-sinks/flume-ng-hbase-sink/src/main/java/org/apache/flume/sink/hbase/AsyncHBaseSink.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-sinks/flume-ng-hbase-sink/src/main/java/org/apache/flume/sink/hbase/AsyncHBaseSink.java?ref=5293eba9a418180b42b3138c0c0b5aac38361f7f",
                "deletions": 2,
                "filename": "flume-ng-sinks/flume-ng-hbase-sink/src/main/java/org/apache/flume/sink/hbase/AsyncHBaseSink.java",
                "patch": "@@ -204,10 +204,11 @@ public Status process() throws EventDeliveryException {\n \n     Status status = Status.READY;\n     Channel channel = getChannel();\n+    txn = channel.getTransaction();\n+    txn.begin();\n+\n     int i = 0;\n     try {\n-      txn = channel.getTransaction();\n-      txn.begin();\n       for (; i < batchSize; i++) {\n         Event event = channel.take();\n         if (event == null) {",
                "raw_url": "https://github.com/apache/flume/raw/5293eba9a418180b42b3138c0c0b5aac38361f7f/flume-ng-sinks/flume-ng-hbase-sink/src/main/java/org/apache/flume/sink/hbase/AsyncHBaseSink.java",
                "sha": "c1ff0c41eb57b0b4c77754cb4b8714c0b13a6c8b",
                "status": "modified"
            }
        ],
        "message": "FLUME-2897: AsyncHBase sink NPE when Channel.getTransaction() fails\n\n(Mike Percy via Jarek Jarcec Cecho)",
        "parent": "https://github.com/apache/flume/commit/caa64a1a6d4bc97be5993cb468516e9ffe862794",
        "repo": "flume",
        "unit_tests": [
            "TestAsyncHBaseSink.java"
        ]
    },
    "flume_6397389": {
        "bug_id": "flume_6397389",
        "commit": "https://github.com/apache/flume/commit/6397389ba6f5fe7f67cc976b1c976876789e6ec8",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/flume/blob/6397389ba6f5fe7f67cc976b1c976876789e6ec8/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java?ref=6397389ba6f5fe7f67cc976b1c976876789e6ec8",
                "deletions": 2,
                "filename": "flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "patch": "@@ -472,6 +472,16 @@ private SourceType getKnownSource(String type) {\n     }\n \n     private Set<String> validateSources(Set<String> channelSet) {\n+      //Arrays.split() call will throw NPE if the sources string is empty\n+      if(sources == null || sources.isEmpty()){\n+        logger.warn(\"Agent configuration for '\" + agentName\n+            + \"' has no sources.\");\n+        errorList.add(new FlumeConfigurationError(agentName,\n+            FlumeConfiguration.SOURCES,\n+            FlumeConfigurationErrorType.PROPERTY_VALUE_NULL,\n+            ErrorOrWarning.WARNING));\n+        return new HashSet<String>();\n+      }\n       Set<String> sourceSet =\n           new HashSet<String>(Arrays.asList(sources.split(\"\\\\s+\")));\n       Map<String, Context> newContextMap = new HashMap<String, Context>();\n@@ -564,8 +574,14 @@ private SourceType getKnownSource(String type) {\n       Map<String, Context> newContextMap = new HashMap<String, Context>();\n       Set<String> sinkSet;\n       SinkConfiguration sinkConf = null;\n-      if (sinks == null) {\n-        sinkSet = new HashSet<String>();\n+      if (sinks == null || sinks.isEmpty()) {\n+        logger.warn(\"Agent configuration for '\" + agentName\n+            + \"' has no sinks.\");\n+        errorList.add(new FlumeConfigurationError(agentName,\n+            FlumeConfiguration.SINKS,\n+            FlumeConfigurationErrorType.PROPERTY_VALUE_NULL,\n+            ErrorOrWarning.WARNING));\n+        return new HashSet<String>();\n       } else {\n         sinkSet =\n             new HashSet<String>(Arrays.asList(sinks.split(\"\\\\s+\")));",
                "raw_url": "https://github.com/apache/flume/raw/6397389ba6f5fe7f67cc976b1c976876789e6ec8/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "sha": "d090b74d0e915fcf62e95d3c7d048a294c6feb2f",
                "status": "modified"
            }
        ],
        "message": "FLUME-1156. Empty source list causes NPE during configuration.\n\n(Hari Shreedharan via Arvind Prabhakar)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/flume/trunk@1331502 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/flume/commit/fbec810c7fa5ff7460cd3f41d294b8905188ae79",
        "repo": "flume",
        "unit_tests": [
            "TestFlumeConfiguration.java"
        ]
    },
    "flume_81797b2": {
        "bug_id": "flume_81797b2",
        "commit": "https://github.com/apache/flume/commit/81797b23ce3b9815ebc3b33b9c443da7e55af2c6",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/flume/blob/81797b23ce3b9815ebc3b33b9c443da7e55af2c6/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java?ref=81797b23ce3b9815ebc3b33b9c443da7e55af2c6",
                "deletions": 2,
                "filename": "flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "patch": "@@ -551,6 +551,12 @@ private SourceType getKnownSource(String type) {\n                 channels.addAll(srcConf.getChannels());\n               }\n               channels.retainAll(channelSet);\n+              if(channels.isEmpty()){\n+                throw new ConfigurationException(\n+                        \"No Channels configured for \" + sourceName);\n+              }\n+              srcContext.put(BasicConfigurationConstants.CONFIG_CHANNELS,\n+                      this.getSpaceDelimitedList(channels));\n             }\n             if ((configSpecified && srcConf.isNotFoundConfigClass()) ||\n                 !configSpecified) {\n@@ -655,6 +661,10 @@ private SourceType getKnownSource(String type) {\n               sinkConf.configure(sinkContext);\n \n             }\n+            if(!channelSet.contains(sinkConf.getChannel())){\n+              throw new ConfigurationException(\"Channel \" +\n+                      sinkConf.getChannel() + \" not in active set.\");\n+            }\n             if ((configSpecified && sinkConf.isNotFoundConfigClass()) ||\n                 !configSpecified) {\n               newContextMap.put(sinkName, sinkContext);\n@@ -665,8 +675,8 @@ private SourceType getKnownSource(String type) {\n           } catch (ConfigurationException e) {\n             iter.remove();\n             if (sinkConf != null) errorList.addAll(sinkConf.getErrors());\n-            logger.warn(\"Configuration empty for: \" + sinkName + \".Removed.\");\n-\n+            logger.warn(\"Configuration for : \" + sinkName\n+                    + \" has errors, and will be removed: \", e);\n           }\n         }\n         // Filter out any sinks that have invalid channel",
                "raw_url": "https://github.com/apache/flume/raw/81797b23ce3b9815ebc3b33b9c443da7e55af2c6/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java",
                "sha": "9b209e8c45c3e8b80ac38d5d7cc7987c6beda7e1",
                "status": "modified"
            }
        ],
        "message": "FLUME-1392. Inactive channels get added to source channels list causing NPE.\n\n(Hari Shreedharan via Will McQueen)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/flume/trunk@1366581 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/flume/commit/57fe281125c8c11ba9c17892946ce13de875fd89",
        "repo": "flume",
        "unit_tests": [
            "TestFlumeConfiguration.java"
        ]
    },
    "flume_c718dae": {
        "bug_id": "flume_c718dae",
        "commit": "https://github.com/apache/flume/commit/c718dae09d10db640cb9eb59f8abb11bd385a799",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/flume/blob/c718dae09d10db640cb9eb59f8abb11bd385a799/flume-ng-channels/flume-kafka-channel/src/main/java/org/apache/flume/channel/kafka/KafkaChannel.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-channels/flume-kafka-channel/src/main/java/org/apache/flume/channel/kafka/KafkaChannel.java?ref=c718dae09d10db640cb9eb59f8abb11bd385a799",
                "deletions": 1,
                "filename": "flume-ng-channels/flume-kafka-channel/src/main/java/org/apache/flume/channel/kafka/KafkaChannel.java",
                "patch": "@@ -756,8 +756,10 @@ public void onCompletion(RecordMetadata metadata, Exception exception) {\n     }\n     if (log.isDebugEnabled()) {\n       long batchElapsedTime = System.currentTimeMillis() - startTime;\n-      log.debug(\"Acked message_no \" + index + \": \" + metadata.topic() + \"-\" +\n+      if (metadata != null) {\n+        log.debug(\"Acked message_no \" + index + \": \" + metadata.topic() + \"-\" +\n                 metadata.partition() + \"-\" + metadata.offset() + \"-\" + batchElapsedTime);\n+      }\n     }\n   }\n }",
                "raw_url": "https://github.com/apache/flume/raw/c718dae09d10db640cb9eb59f8abb11bd385a799/flume-ng-channels/flume-kafka-channel/src/main/java/org/apache/flume/channel/kafka/KafkaChannel.java",
                "sha": "5bd9be0eebcc26be019e0e3415a0906d9007ab8a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/flume/blob/c718dae09d10db640cb9eb59f8abb11bd385a799/flume-ng-sinks/flume-ng-kafka-sink/src/main/java/org/apache/flume/sink/kafka/KafkaSink.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-sinks/flume-ng-kafka-sink/src/main/java/org/apache/flume/sink/kafka/KafkaSink.java?ref=c718dae09d10db640cb9eb59f8abb11bd385a799",
                "deletions": 1,
                "filename": "flume-ng-sinks/flume-ng-kafka-sink/src/main/java/org/apache/flume/sink/kafka/KafkaSink.java",
                "patch": "@@ -453,7 +453,10 @@ public void onCompletion(RecordMetadata metadata, Exception exception) {\n \n     if (logger.isDebugEnabled()) {\n       long eventElapsedTime = System.currentTimeMillis() - startTime;\n-      logger.debug(\"Acked message partition:{} ofset:{}\",  metadata.partition(), metadata.offset());\n+      if (metadata != null) {\n+        logger.debug(\"Acked message partition:{} ofset:{}\", metadata.partition(),\n+                metadata.offset());\n+      }\n       logger.debug(\"Elapsed time for send: {}\", eventElapsedTime);\n     }\n   }",
                "raw_url": "https://github.com/apache/flume/raw/c718dae09d10db640cb9eb59f8abb11bd385a799/flume-ng-sinks/flume-ng-kafka-sink/src/main/java/org/apache/flume/sink/kafka/KafkaSink.java",
                "sha": "68866c36194b58ed6138a50baec26dcf834df57d",
                "status": "modified"
            }
        ],
        "message": "FLUME-3043. Fix NPE in Kafka Sink and Channel\n\nWhen logging level is set to DEBUG, Kafka Sink and Kafka Channel may throw a NullPointerException.\n\nThis patch ensures that `metadata` is not null to avoid the exception.\n\nThis closes #125\n\nReviewers: Denes Arvay, Bessenyei Bal\u00e1zs Don\u00e1t\n\n(loleek via Bessenyei Bal\u00e1zs Don\u00e1t)",
        "parent": "https://github.com/apache/flume/commit/03c8357dfeff9615d1590a5c980eb4cfe035f3be",
        "repo": "flume",
        "unit_tests": [
            "TestKafkaSink.java"
        ]
    },
    "flume_ca04449": {
        "bug_id": "flume_ca04449",
        "commit": "https://github.com/apache/flume/commit/ca04449e395dac56202463dea77e3e387be0ca78",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/flume/blob/ca04449e395dac56202463dea77e3e387be0ca78/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FileChannel.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FileChannel.java?ref=ca04449e395dac56202463dea77e3e387be0ca78",
                "deletions": 1,
                "filename": "flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FileChannel.java",
                "patch": "@@ -79,7 +79,7 @@\n   private Log log;\n   private boolean shutdownHookAdded;\n   private Thread shutdownHook;\n-  private volatile boolean open;\n+\tprivate volatile boolean open;\n   private Semaphore queueRemaining;\n   private final ThreadLocal<FileBackedTransaction> transactions =\n       new ThreadLocal<FileBackedTransaction>();",
                "raw_url": "https://github.com/apache/flume/raw/ca04449e395dac56202463dea77e3e387be0ca78/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FileChannel.java",
                "sha": "741f9f4c0b8aa88cf8142ab27e0419df83ada972",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/flume/blob/ca04449e395dac56202463dea77e3e387be0ca78/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Log.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/flume/contents/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Log.java?ref=ca04449e395dac56202463dea77e3e387be0ca78",
                "deletions": 12,
                "filename": "flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Log.java",
                "patch": "@@ -123,8 +123,6 @@\n    */\n   synchronized void replay() throws IOException {\n     Preconditions.checkState(!open, \"Cannot replay after Log as been opened\");\n-    open = true;\n-    boolean error = true;\n     try {\n       /*\n        * First we are going to look through the data directories\n@@ -161,7 +159,7 @@ synchronized void replay() throws IOException {\n        */\n       checkpointA = new Checkpoint(new File(checkpointDir, \"chkpt-A\"),\n           queueSize);\n-      checkpointB = new Checkpoint(new File(checkpointDir, \"chkpt-B\"), \n+      checkpointB = new Checkpoint(new File(checkpointDir, \"chkpt-B\"),\n           queueSize);\n       if (checkpointA.getTimestamp() > checkpointB.getTimestamp()) {\n         try {\n@@ -213,11 +211,9 @@ synchronized void replay() throws IOException {\n        * Now that we have replayed, write the current queue to disk\n        */\n       writeCheckpoint();\n-      error = false;\n-    } finally {\n-      if (error) {\n-        open = false;\n-      }\n+      open = true;\n+    } catch (Exception ex) {\n+      LOGGER.error(\"Failed to initialize Log\", ex);\n     }\n   }\n \n@@ -396,7 +392,7 @@ synchronized void close() {\n         if(reader != null) {\n           reader.close();\n         }\n-      }      \n+      }\n     }\n     try {\n       unlock(checkpointDir);\n@@ -478,7 +474,6 @@ private void roll(int index) throws IOException {\n    */\n   private synchronized void roll(int index, ByteBuffer buffer)\n       throws IOException {\n-    Preconditions.checkState(open, \"Log is closed\");\n     LogFile.Writer oldLogFile = logFiles.get(index);\n     // check to make sure a roll is actually required due to\n     // the possibility of multiple writes waiting on lock\n@@ -510,7 +505,6 @@ private synchronized void roll(int index, ByteBuffer buffer)\n    * @throws IOException if we are unable to write the checkpoint out to disk\n    */\n   private synchronized void writeCheckpoint() throws IOException {\n-    Preconditions.checkState(open, \"Log is closed\");\n     synchronized (queue) {\n       checkpoint.get().write(queue);\n       if (!checkpoint.compareAndSet(checkpointA, checkpointB)) {\n@@ -672,4 +666,4 @@ public void run() {\n       }\n     }\n   }\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/flume/raw/ca04449e395dac56202463dea77e3e387be0ca78/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Log.java",
                "sha": "c4e5ea785a72f35e0c003d4f3279c1f95913837d",
                "status": "modified"
            }
        ],
        "message": "FLUME-1205: NPE related to checkpointing when using FileChannel\n\n(Arvind Prabhakar via Brock Noland)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/flume/trunk@1342462 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/flume/commit/897b33befa1fdee8631dab23877cc04048dca988",
        "repo": "flume",
        "unit_tests": [
            "TestLog.java"
        ]
    }
}