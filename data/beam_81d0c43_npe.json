[
    {
        "repo": "beam",
        "commit": "https://github.com/apache/beam/commit/81d0c436691d33a7ea1bd808413e1aa08e1c4d10",
        "bug_id": "beam_81d0c43",
        "message": "[BEAM-2807] Fix NPE error on CoderTypeSerializerConfigSnapshot serialization",
        "parent": "https://github.com/apache/beam/commit/307b03680ba8b6278d80a07b1ce73421804aa994",
        "patched_files": [
            "CoderTypeSerializer.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/beam/raw/81d0c436691d33a7ea1bd808413e1aa08e1c4d10/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/beam/contents/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializer.java?ref=81d0c436691d33a7ea1bd808413e1aa08e1c4d10",
                "filename": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializer.java",
                "deletions": 1,
                "sha": "c8dbac49d68c35cf626c8bd3b58a51666ccbd599",
                "blob_url": "https://github.com/apache/beam/blob/81d0c436691d33a7ea1bd808413e1aa08e1c4d10/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializer.java",
                "patch": "@@ -161,7 +161,7 @@ public CoderTypeSerializerConfigSnapshot() {\n     }\n \n     public CoderTypeSerializerConfigSnapshot(Coder<T> coder) {\n-      this.coderName = coder.getClass().getCanonicalName();\n+      this.coderName = coder.getClass().getName();\n     }\n \n     @Override",
                "changes": 2
            },
            {
                "status": "added",
                "additions": 79,
                "raw_url": "https://github.com/apache/beam/raw/81d0c436691d33a7ea1bd808413e1aa08e1c4d10/runners/flink/src/test/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializerTest.java",
                "contents_url": "https://api.github.com/repos/apache/beam/contents/runners/flink/src/test/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializerTest.java?ref=81d0c436691d33a7ea1bd808413e1aa08e1c4d10",
                "filename": "runners/flink/src/test/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializerTest.java",
                "deletions": 0,
                "sha": "b0c40dee79e4fadfb46de0d9018aba7ccbd31a81",
                "blob_url": "https://github.com/apache/beam/blob/81d0c436691d33a7ea1bd808413e1aa08e1c4d10/runners/flink/src/test/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializerTest.java",
                "patch": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.flink.translation.types;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+\n+import org.apache.beam.runners.flink.translation.types.CoderTypeSerializer.CoderTypeSerializerConfigSnapshot;\n+import org.apache.beam.sdk.coders.AtomicCoder;\n+import org.apache.beam.sdk.coders.Coder;\n+import org.apache.beam.sdk.coders.CoderException;\n+import org.apache.beam.sdk.coders.StringUtf8Coder;\n+import org.apache.flink.api.common.typeutils.ComparatorTestBase;\n+import org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot;\n+import org.junit.Test;\n+\n+/**\n+ * Tests {@link CoderTypeSerializer}.\n+ */\n+public class CoderTypeSerializerTest {\n+\n+  @Test\n+  public void shouldWriteAndReadSnapshotForAnonymousClassCoder() throws Exception {\n+    AtomicCoder<String> anonymousClassCoder = new AtomicCoder<String>() {\n+\n+      @Override\n+      public void encode(String value, OutputStream outStream)\n+          throws CoderException, IOException {\n+\n+      }\n+\n+      @Override\n+      public String decode(InputStream inStream) throws CoderException, IOException {\n+        return \"\";\n+      }\n+    };\n+\n+    testWriteAndReadConfigSnapshot(anonymousClassCoder);\n+  }\n+\n+  @Test\n+  public void shouldWriteAndReadSnapshotForConcreteClassCoder() throws Exception {\n+    Coder<String> concreteClassCoder = StringUtf8Coder.of();\n+    testWriteAndReadConfigSnapshot(concreteClassCoder);\n+  }\n+\n+  private void testWriteAndReadConfigSnapshot(Coder<String> coder) throws IOException {\n+    CoderTypeSerializer<String> serializer = new CoderTypeSerializer<>(coder);\n+\n+    TypeSerializerConfigSnapshot writtenSnapshot = serializer.snapshotConfiguration();\n+    ComparatorTestBase.TestOutputView outView = new ComparatorTestBase.TestOutputView();\n+    writtenSnapshot.write(outView);\n+\n+    TypeSerializerConfigSnapshot readSnapshot = new CoderTypeSerializerConfigSnapshot<>();\n+    readSnapshot.read(outView.getInputView());\n+\n+    assertThat(readSnapshot, is(writtenSnapshot));\n+  }\n+}\n+",
                "changes": 79
            }
        ],
        "unit_tests": [
            "CoderTypeSerializerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "runners/flink/src/test/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializerTest.java",
        "buggy_files": [
            "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/types/CoderTypeSerializer.java"
        ],
        "fixed": true
    }
]