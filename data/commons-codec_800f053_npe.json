[
    {
        "repo": "commons-codec",
        "commit": "https://github.com/apache/commons-codec/commit/800f0531068ebaf2f2d257bb1bd805781ddd4760",
        "bug_id": "commons-codec_800f053",
        "message": "CODEC-98 - Base64InputStream causes NullPointerException on some input - https://issues.apache.org/jira/browse/CODEC-98 \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@950267 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-codec/commit/4c6eea410d34d7ff4aa5c30fb7a2fa7c349dae18",
        "patched_files": [
            "Base64OutputStream.java",
            "Base64TestData.java",
            "Base64InputStream.java",
            "Base64.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/commons-codec/raw/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/java/org/apache/commons/codec/binary/Base64.java",
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/java/org/apache/commons/codec/binary/Base64.java?ref=800f0531068ebaf2f2d257bb1bd805781ddd4760",
                "filename": "src/java/org/apache/commons/codec/binary/Base64.java",
                "deletions": 0,
                "sha": "19a695947ecbca4596130f087615429f5405abb7",
                "blob_url": "https://github.com/apache/commons-codec/blob/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/java/org/apache/commons/codec/binary/Base64.java",
                "patch": "@@ -583,6 +583,10 @@ void decode(byte[] in, int inPos, int inAvail) {\n         // EOF (-1) and first time '=' character is encountered in stream.\n         // This approach makes the '=' padding characters completely optional.\n         if (eof && modulus != 0) {\n+            if (buffer == null || buffer.length - pos < decodeSize) {\n+                resizeBuffer();\n+            }\n+            \n             x = x << 6;\n             switch (modulus) {\n                 case 2 :",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 20,
                "raw_url": "https://github.com/apache/commons-codec/raw/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java?ref=800f0531068ebaf2f2d257bb1bd805781ddd4760",
                "filename": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "deletions": 0,
                "sha": "fd1fc1f7658a95525bc7f68d80b2a00dc2d0b8ef",
                "blob_url": "https://github.com/apache/commons-codec/blob/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "patch": "@@ -46,6 +46,26 @@ public Base64InputStreamTest(String name) {\n         super(name);\n     }\n \n+    /**\n+     * Test the Base64InputStream implementation against the special NPE inducing input\n+     * identified in the CODEC-98 bug.\n+     *\n+     * @throws Exception for some failure scenarios.\n+     */\n+    public void testCodec98NPE() throws Exception {\n+        byte[] codec98 = StringUtils.getBytesUtf8(Base64TestData.CODEC_98_NPE);\n+        ByteArrayInputStream data = new ByteArrayInputStream(codec98);\n+        Base64InputStream stream = new Base64InputStream(data);\n+\n+        // This line causes an NPE in commons-codec-1.4.jar:\n+        byte[] decodedBytes = Base64TestData.streamToBytes(stream, new byte[1024]);\n+\n+        String decoded = StringUtils.newStringUtf8(decodedBytes);\n+        assertEquals(\n+            \"codec-98 NPE Base64InputStream\", Base64TestData.CODEC_98_NPE_DECODED, decoded\n+        );\n+    }\n+\n     /**\n      * Tests the Base64InputStream implementation against empty input.\n      * ",
                "changes": 20
            },
            {
                "status": "modified",
                "additions": 23,
                "raw_url": "https://github.com/apache/commons-codec/raw/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java?ref=800f0531068ebaf2f2d257bb1bd805781ddd4760",
                "filename": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "deletions": 0,
                "sha": "fd64ce66f49c2a2e1b660046cce0de70d1f28b7f",
                "blob_url": "https://github.com/apache/commons-codec/blob/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "patch": "@@ -46,6 +46,29 @@ public Base64OutputStreamTest(String name) {\n         super(name);\n     }\n \n+    /**\n+     * Test the Base64OutputStream implementation against the special NPE inducing input\n+     * identified in the CODEC-98 bug.\n+     *\n+     * @throws Exception for some failure scenarios.\n+     */\n+    public void testCodec98NPE() throws Exception {\n+        byte[] codec98 = StringUtils.getBytesUtf8(Base64TestData.CODEC_98_NPE);\n+        byte[] codec98_1024 = new byte[1024];\n+        System.arraycopy(codec98, 0, codec98_1024, 0, codec98.length);\n+        ByteArrayOutputStream data = new ByteArrayOutputStream(1024);\n+        Base64OutputStream stream = new Base64OutputStream(data, false);\n+        stream.write(codec98_1024, 0, 1024);\n+        stream.close();\n+\n+        byte[] decodedBytes = data.toByteArray();\n+        String decoded = StringUtils.newStringUtf8(decodedBytes);\n+        assertEquals(\n+            \"codec-98 NPE Base64OutputStream\", Base64TestData.CODEC_98_NPE_DECODED, decoded\n+        );\n+    }\n+    \n+\n     /**\n      * Test the Base64OutputStream implementation against empty input.\n      * ",
                "changes": 23
            },
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/commons-codec/raw/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64TestData.java",
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/test/org/apache/commons/codec/binary/Base64TestData.java?ref=800f0531068ebaf2f2d257bb1bd805781ddd4760",
                "filename": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                "deletions": 1,
                "sha": "84bb5bf7e33693306fe0db85ede4f1f619405099",
                "blob_url": "https://github.com/apache/commons-codec/blob/800f0531068ebaf2f2d257bb1bd805781ddd4760/src/test/org/apache/commons/codec/binary/Base64TestData.java",
                "patch": "@@ -32,6 +32,13 @@\n  */\n public class Base64TestData {\n \n+    public static final String CODEC_98_NPE\n+        = \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjAxMjM\";\n+\n+    public static final String CODEC_98_NPE_DECODED\n+        = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123\";\n+\n+\n     // OpenSSL doesn't include the final \\n, but it would be annoying beyond belief\n     // to further parameterize commons-codec to support this pointless variation.\n     final static String ENCODED_64_CHARS_PER_LINE\n@@ -133,7 +140,10 @@\n \n     static byte[] streamToBytes(final InputStream in) throws IOException {\n         // new byte[7] is obviously quite slow, but helps exercise the code.\n-        byte[] buf = new byte[7];\n+        return streamToBytes(in, new byte[7]);\n+    }\n+\n+    static byte[] streamToBytes(final InputStream in, byte[] buf) throws IOException {\n         try {\n             int[] status = fill(buf, 0, in);\n             int size = status[SIZE_KEY];",
                "changes": 12
            }
        ],
        "unit_tests": [
            "Base64OutputStreamTest.java",
            "Base64InputStreamTest.java",
            "Base64Test.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
        "buggy_files": [
            "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
            "src/test/org/apache/commons/codec/binary/Base64TestData.java",
            "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
            "src/java/org/apache/commons/codec/binary/Base64.java"
        ],
        "fixed": true
    }
]