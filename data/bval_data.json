[
    {
        "repo": "bval",
        "message": "avoid NPE on xml ctors",
        "commit": "https://github.com/apache/bval/commit/e5e22d3e650e4960657e4fdbdd10f61691b8a9a0",
        "parent": "https://github.com/apache/bval/commit/e243ee9334864c7a160de076e405515bed8b5e0e",
        "bug_id": "bval_1",
        "file": [
            {
                "sha": "9b9f4a471b74e9829d531a81977129fdf1a8f79b",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "blob_url": "https://github.com/apache/bval/blob/e5e22d3e650e4960657e4fdbdd10f61691b8a9a0/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "raw_url": "https://github.com/apache/bval/raw/e5e22d3e650e4960657e4fdbdd10f61691b8a9a0/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java?ref=e5e22d3e650e4960657e4fdbdd10f61691b8a9a0",
                "patch": "@@ -166,10 +166,11 @@ public void validateMappings() {\n             final Constructor<?> dc = Reflection.getDeclaredConstructor(t, parameterTypes);\n             Exceptions.raiseIf(dc == null, ValidationException::new, \"Unknown %s constructor %s\", t, result);\n \n-            final ForConstructor<?> metaCtor = new Meta.ForConstructor<>(dc);\n-            constraints(metaCtor, ctor.getReturnValue().getConstraint());\n-            containerElements(metaCtor, ctor.getReturnValue().getContainerElementType());\n-\n+            Optional.of(ctor).map(ConstructorType::getReturnValue).ifPresent(rv -> {\n+                final ForConstructor<?> metaCtor = new Meta.ForConstructor<>(dc);\n+                constraints(metaCtor, rv.getConstraint());\n+                containerElements(metaCtor, rv.getContainerElementType());\n+            });\n             final Parameter[] params = dc.getParameters();\n \n             IntStream.range(0, parameterTypes.length).forEach(n -> {",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "bval",
        "message": "avoid NPE on xml ctors",
        "commit": "https://github.com/apache/bval/commit/9e4e23f4054f4fa563af8d4087ef84cd9120fa95",
        "parent": "https://github.com/apache/bval/commit/cb0bb133f607c8e489aac6b15e99ff708284230c",
        "bug_id": "bval_2",
        "file": [
            {
                "sha": "9b9f4a471b74e9829d531a81977129fdf1a8f79b",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "blob_url": "https://github.com/apache/bval/blob/9e4e23f4054f4fa563af8d4087ef84cd9120fa95/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "raw_url": "https://github.com/apache/bval/raw/9e4e23f4054f4fa563af8d4087ef84cd9120fa95/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/xml/MappingValidator.java?ref=9e4e23f4054f4fa563af8d4087ef84cd9120fa95",
                "patch": "@@ -166,10 +166,11 @@ public void validateMappings() {\n             final Constructor<?> dc = Reflection.getDeclaredConstructor(t, parameterTypes);\n             Exceptions.raiseIf(dc == null, ValidationException::new, \"Unknown %s constructor %s\", t, result);\n \n-            final ForConstructor<?> metaCtor = new Meta.ForConstructor<>(dc);\n-            constraints(metaCtor, ctor.getReturnValue().getConstraint());\n-            containerElements(metaCtor, ctor.getReturnValue().getContainerElementType());\n-\n+            Optional.of(ctor).map(ConstructorType::getReturnValue).ifPresent(rv -> {\n+                final ForConstructor<?> metaCtor = new Meta.ForConstructor<>(dc);\n+                constraints(metaCtor, rv.getConstraint());\n+                containerElements(metaCtor, rv.getContainerElementType());\n+            });\n             final Parameter[] params = dc.getParameters();\n \n             IntStream.range(0, parameterTypes.length).forEach(n -> {",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "bval",
        "message": "avoid NPE",
        "commit": "https://github.com/apache/bval/commit/20853d7f6a136e9ee3f9ae4f6b2dd156ac72e811",
        "parent": "https://github.com/apache/bval/commit/527cf29b5dd7fe2caa4cd69ac252b105c772fb9a",
        "bug_id": "bval_3",
        "file": [
            {
                "sha": "89f502370187b57f7dc1f2c30e7a20467e8716bc",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/xml/ValidationParser.java",
                "blob_url": "https://github.com/apache/bval/blob/20853d7f6a136e9ee3f9ae4f6b2dd156ac72e811/bval-jsr/src/main/java/org/apache/bval/jsr/xml/ValidationParser.java",
                "raw_url": "https://github.com/apache/bval/raw/20853d7f6a136e9ee3f9ae4f6b2dd156ac72e811/bval-jsr/src/main/java/org/apache/bval/jsr/xml/ValidationParser.java",
                "status": "modified",
                "changes": 12,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/xml/ValidationParser.java?ref=20853d7f6a136e9ee3f9ae4f6b2dd156ac72e811",
                "patch": "@@ -271,10 +271,14 @@ private void applyParameterNameProvider(final ValidationConfigType xmlConfig, fi\n         final String parameterNameProvider = xmlConfig.getParameterNameProvider();\n         if (targetConfig.getParameterNameProvider() == targetConfig.getDefaultParameterNameProvider()) { // ref ==\n             if (parameterNameProvider != null) {\n-                final Class<? extends ParameterNameProvider> clazz =\n-                    loadClass(parameterNameProvider).asSubclass(ParameterNameProvider.class);\n-                targetConfig.parameterNameProviderClass(clazz);\n-                log.log(Level.INFO, String.format(\"Using %s as validation provider.\", parameterNameProvider));\n+                final Class<?> loaded = loadClass(parameterNameProvider);\n+                if (loaded != null) {\n+                    final Class<? extends ParameterNameProvider> clazz = loaded.asSubclass(ParameterNameProvider.class);\n+                    targetConfig.parameterNameProviderClass(clazz);\n+                    log.log(Level.INFO, String.format(\"Using %s as validation provider.\", parameterNameProvider));\n+                } else {\n+                    log.log(Level.SEVERE, \"Can't load \" + parameterNameProvider);\n+                }\n             }\n         }\n     }",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "bval",
        "message": "avoid NPE",
        "commit": "https://github.com/apache/bval/commit/423f064f6a2937122f676fae7ae0e00d84059b52",
        "parent": "https://github.com/apache/bval/commit/302bea62866370a1dda808be10aa8253f84dbe26",
        "bug_id": "bval_4",
        "file": [
            {
                "sha": "27b5c54c7f64ceb2968a7355a1eed7dc1fd44c74",
                "filename": "bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "blob_url": "https://github.com/apache/bval/blob/423f064f6a2937122f676fae7ae0e00d84059b52/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "raw_url": "https://github.com/apache/bval/raw/423f064f6a2937122f676fae7ae0e00d84059b52/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java?ref=423f064f6a2937122f676fae7ae0e00d84059b52",
                "patch": "@@ -157,10 +157,10 @@ public void addBvalBinding(final @Observes BeforeBeanDiscovery beforeBeanDiscove\n                 if (annotatedType.isAnnotationPresent(ValidateOnExecution.class)\n                     || hasValidationAnnotation(annotatedType.getMethods())\n                     || hasValidationAnnotation(annotatedType.getConstructors())\n-                    || (validBean && classConstraints.isBeanConstrained())\n-                    || (validConstructors && !classConstraints.getConstrainedConstructors().isEmpty())\n-                    || (validBusinessMethods && !classConstraints.getConstrainedMethods(MethodType.NON_GETTER).isEmpty())\n-                    || (validGetterMethods && !classConstraints.getConstrainedMethods(MethodType.GETTER).isEmpty())) {\n+                    || (validBean && classConstraints != null && classConstraints.isBeanConstrained())\n+                    || (validConstructors && classConstraints != null && !classConstraints.getConstrainedConstructors().isEmpty())\n+                    || (validBusinessMethods && classConstraints != null && !classConstraints.getConstrainedMethods(MethodType.NON_GETTER).isEmpty())\n+                    || (validGetterMethods && classConstraints != null && !classConstraints.getConstrainedMethods(MethodType.GETTER).isEmpty())) {\n                     // TODO: keep track of bValAnnotatedType and remove @BValBinding in\n                     // ProcessBean event if needed cause here we can't really add @ValidateOnExecution\n                     // through an extension",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "bval",
        "message": "avoid NPE if container is not initialized",
        "commit": "https://github.com/apache/bval/commit/bbf8b31a41af84371f76f10a1c593eefac0f830c",
        "parent": "https://github.com/apache/bval/commit/d7240ab22e934385af667890213d8701327392f0",
        "bug_id": "bval_5",
        "file": [
            {
                "sha": "95db0370ac45286a186c456797388a2cc60ddc83",
                "filename": "bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "blob_url": "https://github.com/apache/bval/blob/bbf8b31a41af84371f76f10a1c593eefac0f830c/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "raw_url": "https://github.com/apache/bval/raw/bbf8b31a41af84371f76f10a1c593eefac0f830c/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/cdi/BValExtension.java?ref=bbf8b31a41af84371f76f10a1c593eefac0f830c",
                "patch": "@@ -223,7 +223,9 @@ public void cleanupFinalBeanManagers(final @Observes AfterDeploymentValidation a\n     }\n \n     public void cleanupStoredBeanManagerOnShutdown(final @Observes BeforeShutdown beforeShutdown) {\n-        bmpSingleton.bmInfos.remove(loader());\n+        if (bmpSingleton.bmInfos != null) {\n+            bmpSingleton.bmInfos.remove(loader());\n+        }\n     }\n \n     private static BeanManager resolveBeanManagerViaJndi() {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "bval",
        "message": "no need of Properties.EXECUTABLE_VALIDATION_TYPES + NPE protection",
        "commit": "https://github.com/apache/bval/commit/848b60fea4cfa74231ad1ee3b09b9ede20000c79",
        "parent": "https://github.com/apache/bval/commit/20e8b0fcf8289bbbd1e8e269028adebd35737453",
        "bug_id": "bval_6",
        "file": [
            {
                "sha": "1368f5234cae08190bfb8425161740b80eb72eea",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/ApacheValidatorConfiguration.java",
                "blob_url": "https://github.com/apache/bval/blob/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/ApacheValidatorConfiguration.java",
                "raw_url": "https://github.com/apache/bval/raw/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/ApacheValidatorConfiguration.java",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/ApacheValidatorConfiguration.java?ref=848b60fea4cfa74231ad1ee3b09b9ede20000c79",
                "patch": "@@ -87,7 +87,5 @@\n          * </ol>\n          */\n          String METABEAN_FACTORY_CLASSNAMES = \"apache.bval.metabean-factory-classnames\";\n-\n-        String EXECUTABLE_VALIDATION_TYPES = \"apache.bval.executable-validation.types\";\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "603dacbac04a5590c5e784efb6203b697962ff5a",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/ConfigurationImpl.java",
                "blob_url": "https://github.com/apache/bval/blob/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/ConfigurationImpl.java",
                "raw_url": "https://github.com/apache/bval/raw/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/ConfigurationImpl.java",
                "status": "modified",
                "changes": 5,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/ConfigurationImpl.java?ref=848b60fea4cfa74231ad1ee3b09b9ede20000c79",
                "patch": "@@ -333,11 +333,6 @@ public ConfigurationImpl prepare() {\n         createBootstrapConfiguration();\n         parser.applyConfigWithInstantiation(this); // instantiate the config if needed\n \n-        // TODO: maybe find a better way to communicate between validator factory and config\n-        if (getBootstrapConfiguration().isExecutableValidationEnabled()) {\n-            getProperties().put(Properties.EXECUTABLE_VALIDATION_TYPES, executableValidationTypesAsString());\n-        }\n-\n         prepared = true;\n         return this;\n     }",
                "deletions": 5
            },
            {
                "sha": "941b4fa19333b8555c6304d54f2b676d5bfa4bb7",
                "filename": "bval-jsr/src/main/java/org/apache/bval/jsr/DefaultConstraintValidatorFactory.java",
                "blob_url": "https://github.com/apache/bval/blob/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/DefaultConstraintValidatorFactory.java",
                "raw_url": "https://github.com/apache/bval/raw/848b60fea4cfa74231ad1ee3b09b9ede20000c79/bval-jsr/src/main/java/org/apache/bval/jsr/DefaultConstraintValidatorFactory.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/bval/contents/bval-jsr/src/main/java/org/apache/bval/jsr/DefaultConstraintValidatorFactory.java?ref=848b60fea4cfa74231ad1ee3b09b9ede20000c79",
                "patch": "@@ -63,7 +63,9 @@\n             if (useCdi) {\n                 try {\n                     final BValExtension.Releasable<T> instance = BValExtension.inject(constraintClass);\n-                    releasables.add(instance);\n+                    if (instance != null) {\n+                        releasables.add(instance);\n+                    }\n                     return instance.getInstance();\n                 } catch (final Exception e) {\n                     return constraintClass.newInstance();",
                "deletions": 1
            }
        ]
    }
]