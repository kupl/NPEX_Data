{
    "ant_0282d8f": {
        "bug_id": "ant_0282d8f",
        "commit": "https://github.com/apache/ant/commit/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/CONTRIBUTORS",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "deletions": 0,
                "filename": "CONTRIBUTORS",
                "patch": "@@ -74,6 +74,7 @@ Dan Armbrust\n Daniel Henrique\n Daniel Ribagnac\n Daniel Spilker\n+Daniel Trebbien\n Danno Ferrin\n Danny Yates\n Dante Briones",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/CONTRIBUTORS",
                "sha": "c209a5810b677f6e9c8d90f273974351bd05e81c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -62,6 +62,10 @@ Fixed bugs:\n  * ssh tasks prompt for kerberos username/password under Java 7\n    Bugzilla Report 53437.\n \n+ * Zip task on <mappedresources> that excludes certain files by way of the mapper resulted in a NullPointerException\n+   Bugzilla Report 54026\n+\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/WHATSNEW",
                "sha": "09905e746b36e14be95724f67da2dc862f0cd02e",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/contributors.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "deletions": 0,
                "filename": "contributors.xml",
                "patch": "@@ -319,6 +319,10 @@\n     <first>Daniel</first>\n     <last>Spilker</last>\n   </name>\n+  <name>\n+    <first>Daniel</first>\n+    <last>Trebbien</last>\n+  </name>\n   <name>\n     <first>Danno</first>\n     <last>Ferrin</last>",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/contributors.xml",
                "sha": "f726989c6f0622eb4160c35c26cdbbfd3b1ff5b7",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "deletions": 7,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "patch": "@@ -1068,22 +1068,27 @@ protected final void addResources(ResourceCollection rc,\n             return;\n         }\n         for (int i = 0; i < resources.length; i++) {\n-            String name = resources[i].getName().replace(File.separatorChar,\n-                                                         '/');\n+            final Resource resource = resources[i];\n+            String name = resource.getName();\n+            if (name == null) {\n+                continue;\n+            }\n+            name = name.replace(File.separatorChar, '/');\n+\n             if (\"\".equals(name)) {\n                 continue;\n             }\n-            if (resources[i].isDirectory() && doFilesonly) {\n+            if (resource.isDirectory() && doFilesonly) {\n                 continue;\n             }\n             File base = null;\n-            FileProvider fp = resources[i].as(FileProvider.class);\n+            FileProvider fp = resource.as(FileProvider.class);\n             if (fp != null) {\n                 base = ResourceUtils.asFileResource(fp).getBaseDir();\n             }\n \n-            if (resources[i].isDirectory()) {\n-                addDirectoryResource(resources[i], name, \"\", base, zOut,\n+            if (resource.isDirectory()) {\n+                addDirectoryResource(resource, name, \"\", base, zOut,\n                                      ArchiveFileSet.DEFAULT_DIR_MODE,\n                                      ArchiveFileSet.DEFAULT_DIR_MODE);\n \n@@ -1095,7 +1100,7 @@ protected final void addResources(ResourceCollection rc,\n                     File f = (fp).getFile();\n                     zipFile(f, zOut, name, ArchiveFileSet.DEFAULT_FILE_MODE);\n                 } else {\n-                    addResource(resources[i], name, \"\", zOut,\n+                    addResource(resource, name, \"\", zOut,\n                                 ArchiveFileSet.DEFAULT_FILE_MODE,\n                                 null, null);\n                 }",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "sha": "a58ac1bf50490aa9e22417b83291768144b8a2d9",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/tests/antunit/taskdefs/zip-test.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/zip-test.xml?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "deletions": 0,
                "filename": "src/tests/antunit/taskdefs/zip-test.xml",
                "patch": "@@ -45,6 +45,21 @@\n                          actual=\"${output}/out/bar.txt\"/>\n   </target>\n \n+  <target name=\"test-54026\">\n+    <mkdir dir=\"${input}\"/>\n+    <touch file=\"${input}/test1\"/>\n+    <mkdir dir=\"${input}/subdir\"/>\n+    <touch file=\"${input}/subdir/test2\"/>\n+    <zip destfile=\"${output}/br54026-destzip.zip\">\n+      <mappedresources>\n+        <fileset dir=\"${input}\"/>\n+        <globmapper from=\"subdir/*\" to=\"subdir.orig/*\"/>\n+      </mappedresources>\n+    </zip>\n+\n+    <au:assertFileExists file=\"${output}/br54026-destzip.zip\"/>\n+  </target>\n+\n   <target name=\"testMappedClasspath\">\n     <mkdir dir=\"${input}\"/>\n     <mkdir dir=\"${output}/out\"/>",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/tests/antunit/taskdefs/zip-test.xml",
                "sha": "682ac95f8a95a56b2b946baba2a288d9031faa7c",
                "status": "modified"
            }
        ],
        "message": "PR 54026 Zip task on <mappedresources> that excludes certain files by way of the mapper results in a NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1429613 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/a3bbe9f596f9a8e29f8971b7276a4f4f2d2d037b",
        "patched_files": [
            "Zip.java",
            "contributors.java",
            "WHATSNEW.java",
            "CONTRIBUTORS.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ZipTest.java",
            "zip-test.java"
        ]
    },
    "ant_02e32f7": {
        "bug_id": "ant_02e32f7",
        "commit": "https://github.com/apache/ant/commit/02e32f76ca0730eb46649d4e0c59c1945355221f",
        "file": [
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "changes": 44,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/helper/ProjectHelper2.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "deletions": 22,
                "filename": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "patch": "@@ -667,8 +667,8 @@ public void endPrefixMapping(String prefix) {\n         @Override\n         public AntHandler onStartChild(String uri, String name, String qname, Attributes attrs,\n                                        AntXMLContext context) throws SAXParseException {\n-            if (name.equals(\"project\")\n-                && (uri.equals(\"\") || uri.equals(ANT_CORE_URI))) {\n+            if (\"project\".equals(name)\n+                && (uri.isEmpty() || uri.equals(ANT_CORE_URI))) {\n                 return ProjectHelper2.projectHandler;\n             }\n             if (name.equals(qname)) {\n@@ -727,19 +727,19 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n \n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     continue; // Ignore attributes from unknown uris\n                 }\n                 String key = attrs.getLocalName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"default\")) {\n-                    if (value != null && !value.equals(\"\")) {\n+                if (\"default\".equals(key)) {\n+                    if (value != null && !value.isEmpty()) {\n                         if (!context.isIgnoringProjectTag()) {\n                             project.setDefault(value);\n                         }\n                     }\n-                } else if (key.equals(\"name\")) {\n+                } else if (\"name\".equals(key)) {\n                     if (value != null) {\n                         context.setCurrentProjectName(value);\n                         nameAttributeSet = true;\n@@ -754,14 +754,14 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n                             }\n                         }\n                     }\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     if (value != null) {\n                         // What's the difference between id and name ?\n                         if (!context.isIgnoringProjectTag()) {\n                             project.addReference(value, project);\n                         }\n                     }\n-                } else if (key.equals(\"basedir\")) {\n+                } else if (\"basedir\".equals(key)) {\n                     if (!context.isIgnoringProjectTag()) {\n                         baseDir = value;\n                     }\n@@ -864,8 +864,8 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n         @Override\n         public AntHandler onStartChild(String uri, String name, String qname, Attributes attrs,\n                                        AntXMLContext context) throws SAXParseException {\n-            return (name.equals(\"target\") || name.equals(\"extension-point\"))\n-                && (uri.equals(\"\") || uri.equals(ANT_CORE_URI))\n+            return (\"target\".equals(name) || \"extension-point\".equals(name))\n+                && (uri.isEmpty() || uri.equals(ANT_CORE_URI))\n                 ? ProjectHelper2.targetHandler : ProjectHelper2.elementHandler;\n         }\n     }\n@@ -912,32 +912,32 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n \n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     continue; // Ignore attributes from unknown uris\n                 }\n                 String key = attrs.getLocalName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"name\")) {\n+                if (\"name\".equals(key)) {\n                     name = value;\n-                    if (\"\".equals(name)) {\n+                    if (name.isEmpty()) {\n                         throw new BuildException(\"name attribute must \" + \"not be empty\");\n                     }\n-                } else if (key.equals(\"depends\")) {\n+                } else if (\"depends\".equals(key)) {\n                     depends = value;\n-                } else if (key.equals(\"if\")) {\n+                } else if (\"if\".equals(key)) {\n                     target.setIf(value);\n-                } else if (key.equals(\"unless\")) {\n+                } else if (\"unless\".equals(key)) {\n                     target.setUnless(value);\n-                } else if (key.equals(\"id\")) {\n-                    if (value != null && !value.equals(\"\")) {\n+                } else if (\"id\".equals(key)) {\n+                    if (value != null && !value.isEmpty()) {\n                         context.getProject().addReference(value, target);\n                     }\n-                } else if (key.equals(\"description\")) {\n+                } else if (\"description\".equals(key)) {\n                     target.setDescription(value);\n-                } else if (key.equals(\"extensionOf\")) {\n+                } else if (\"extensionOf\".equals(key)) {\n                     extensionPoint = value;\n-                } else if (key.equals(\"onMissingExtensionPoint\")) {\n+                } else if (\"onMissingExtensionPoint\".equals(key)) {\n                     try {\n                         extensionPointMissing = OnMissingExtensionPoint.valueOf(value);\n                     } catch (IllegalArgumentException e) {\n@@ -1167,7 +1167,7 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String name = attrs.getLocalName(i);\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     name = attrUri + \":\" + attrs.getQName(i);\n                 }\n                 String value = attrs.getValue(i);",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "sha": "61a696cab9d26d42c8ea9bb8562f61e8b2cc9c2a",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "deletions": 16,
                "filename": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "patch": "@@ -328,7 +328,7 @@ public InputSource resolveEntity(String publicId, String systemId) {\n          *                              <code>\"project\"</code>\n          */\n         public void startElement(String tag, AttributeList attrs) throws SAXParseException {\n-            if (tag.equals(\"project\")) {\n+            if (\"project\".equals(tag)) {\n                 new ProjectHandler(helperImpl, this).init(tag, attrs);\n             } else {\n                 throw new SAXParseException(\"Config file is not of expected \" + \"XML type\",\n@@ -389,13 +389,13 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 String key = attrs.getName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"default\")) {\n+                if (\"default\".equals(key)) {\n                     def = value;\n-                } else if (key.equals(\"name\")) {\n+                } else if (\"name\".equals(key)) {\n                     name = value;\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     id = value;\n-                } else if (key.equals(\"basedir\")) {\n+                } else if (\"basedir\".equals(key)) {\n                     baseDir = value;\n                 } else {\n                     throw new SAXParseException(\n@@ -404,7 +404,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 }\n             }\n \n-            if (def != null && !def.equals(\"\")) {\n+            if (def != null && !def.isEmpty()) {\n                 helperImpl.project.setDefault(def);\n             } else {\n                 throw new BuildException(\"The default attribute is required\");\n@@ -455,7 +455,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n          *            or a data type definition\n          */\n         public void startElement(String name, AttributeList attrs) throws SAXParseException {\n-            if (name.equals(\"target\")) {\n+            if (\"target\".equals(name)) {\n                 handleTarget(name, attrs);\n             } else {\n                 handleElement(helperImpl, this, helperImpl.implicitTarget, name, attrs);\n@@ -525,21 +525,21 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 String key = attrs.getName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"name\")) {\n+                if (\"name\".equals(key)) {\n                     name = value;\n-                    if (name.equals(\"\")) {\n+                    if (name.isEmpty()) {\n                         throw new BuildException(\"name attribute must not\" + \" be empty\",\n                                 new Location(helperImpl.locator));\n                     }\n-                } else if (key.equals(\"depends\")) {\n+                } else if (\"depends\".equals(key)) {\n                     depends = value;\n-                } else if (key.equals(\"if\")) {\n+                } else if (\"if\".equals(key)) {\n                     ifCond = value;\n-                } else if (key.equals(\"unless\")) {\n+                } else if (\"unless\".equals(key)) {\n                     unlessCond = value;\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     id = value;\n-                } else if (key.equals(\"description\")) {\n+                } else if (\"description\".equals(key)) {\n                     description = value;\n                 } else {\n                     throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\",\n@@ -563,7 +563,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n             target.setDescription(description);\n             helperImpl.project.addTarget(name, target);\n \n-            if (id != null && !id.equals(\"\")) {\n+            if (id != null && !id.isEmpty()) {\n                 helperImpl.project.addReference(id, target);\n             }\n \n@@ -600,7 +600,7 @@ public void startElement(String name, AttributeList attrs) throws SAXParseExcept\n      */\n     private static void handleElement(ProjectHelperImpl helperImpl, DocumentHandler parent,\n             Target target, String elementName, AttributeList attrs) throws SAXParseException {\n-        if (elementName.equals(\"description\")) {\n+        if (\"description\".equals(elementName)) {\n             // created for side effect\n             new DescriptionHandler(helperImpl, parent); //NOSONAR\n         } else if (helperImpl.project.getDataTypeDefinitions().get(elementName) != null) {",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "sha": "4b824babdf318b47ab0219908d31730518808479",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "patch": "@@ -615,13 +615,13 @@ private void addGenICGeneratedFiles(\n         }\n \n         // javacopts\n-        if (javacopts != null && !javacopts.equals(\"\")) {\n+        if (javacopts != null && !javacopts.isEmpty()) {\n             genicTask.createArg().setValue(\"-javacopts\");\n             genicTask.createArg().setLine(javacopts);\n         }\n \n         // rmicopts\n-        if (rmicopts != null && !rmicopts.equals(\"\")) {\n+        if (rmicopts != null && !rmicopts.isEmpty()) {\n             genicTask.createArg().setValue(\"-rmicopts\");\n             genicTask.createArg().setLine(rmicopts);\n         }",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "sha": "4f983796c360e86fbbb0cfe1a6879e7f649de286",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "deletions": 4,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "patch": "@@ -506,7 +506,7 @@ protected void scandir(String dir, String vpath, boolean fast) {\n                     return;\n                 }\n                 String completePath = null;\n-                if (!vpath.equals(\"\")) {\n+                if (!vpath.isEmpty()) {\n                     completePath = rootPath + remoteFileSep\n                         + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                 } else {\n@@ -521,8 +521,8 @@ protected void scandir(String dir, String vpath, boolean fast) {\n                 for (int i = 0; i < newfiles.length; i++) {\n                     FTPFile file = newfiles[i];\n                     if (file != null\n-                        && !file.getName().equals(\".\")\n-                        && !file.getName().equals(\"..\")) {\n+                        && !\".\".equals(file.getName())\n+                        && !\"..\".equals(file.getName())) {\n                         String name = vpath + file.getName();\n                         scannedDirs.put(name, new FTPFileProxy(file));\n                         if (isFunctioningAsDirectory(ftp, dir, file)) {\n@@ -1536,7 +1536,7 @@ public void setRecentDateFormatConfig(String recentDateFormat) {\n      * @see org.apache.commons.net.ftp.FTPClientConfig\n      */\n     public void setServerLanguageCodeConfig(LanguageCode serverLanguageCode) {\n-        if (serverLanguageCode != null && !serverLanguageCode.getValue().equals(\"\")) {\n+        if (serverLanguageCode != null && !serverLanguageCode.getValue().isEmpty()) {\n             this.serverLanguageCodeConfig = serverLanguageCode;\n             configurationHasBeenSet();\n         }",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "sha": "9aa1b491be11e275a4de22664a323e010eb2ffbf",
                "status": "modified"
            }
        ],
        "message": "Use equals method of a string literal to prevent NPE and isEmpty() method instead of comparing a String object with an empty string.",
        "parent": "https://github.com/apache/ant/commit/14bd7590fbc50f5b3146288584f9116e37ee38c1",
        "patched_files": [
            "FTP.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FTPTest.java"
        ]
    },
    "ant_051ba12": {
        "bug_id": "ant_051ba12",
        "commit": "https://github.com/apache/ant/commit/051ba1279d96c822e7708a348a4d7bc0393b89f9",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/051ba1279d96c822e7708a348a4d7bc0393b89f9/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Delete.java?ref=051ba1279d96c822e7708a348a4d7bc0393b89f9",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "patch": "@@ -562,12 +562,16 @@ regular logging (backwards as that sounds).  In that\n                 fs = (FileSet) fs.clone();\n                 fs.setProject(getProject());\n             }\n-            if (!fs.getDir().isDirectory()) {\n-                handle(\"Directory does not exist:\" + fs.getDir());\n+            File fsDir = fs.getDir();\n+            if (fsDir == null) {\n+                throw new BuildException(\n+                        \"File or Resource without directory or file specified\");\n+            } else if (!fsDir.isDirectory()) {\n+                handle(\"Directory does not exist:\" + fsDir);\n             } else {\n                 resourcesToDelete.add(fs);\n                 if (includeEmpty) {\n-                    filesetDirs.add(new ReverseDirs(fs.getDir(), fs\n+                    filesetDirs.add(new ReverseDirs(fsDir, fs\n                             .getDirectoryScanner().getIncludedDirectories()));\n                 }\n             }",
                "raw_url": "https://github.com/apache/ant/raw/051ba1279d96c822e7708a348a4d7bc0393b89f9/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "sha": "c439d3e351e615e8a93b40abddf6a97f9aa1a19f",
                "status": "modified"
            }
        ],
        "message": "pr 42179: Delete cannot handle (NPE) fileset without file or directory specified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@531575 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/ee2779b5b94b830a888590c16076952941290922",
        "patched_files": [
            "Delete.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DeleteTest.java"
        ]
    },
    "ant_0777fa8": {
        "bug_id": "ant_0777fa8",
        "commit": "https://github.com/apache/ant/commit/0777fa853af3a619d777adaead96e9c0d1aff291",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant/blob/0777fa853af3a619d777adaead96e9c0d1aff291/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=0777fa853af3a619d777adaead96e9c0d1aff291",
                "deletions": 8,
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "patch": "@@ -773,14 +773,15 @@ public void scan() throws IllegalStateException {\n \n                 if (basedir == null) {\n                     illegal = new IllegalStateException(\"No basedir set\");\n-                }\n-                if (!basedir.exists()) {\n-                    illegal = new IllegalStateException(\"basedir \" + basedir\n-                                                    + \" does not exist\");\n-                }\n-                if (!basedir.isDirectory()) {\n-                    illegal = new IllegalStateException(\"basedir \" + basedir\n-                                                    + \" is not a directory\");\n+                } else {\n+                    if (!basedir.exists()) {\n+                        illegal = new IllegalStateException(\"basedir \" + basedir\n+                                                        + \" does not exist\");\n+                    }\n+                    if (!basedir.isDirectory()) {\n+                        illegal = new IllegalStateException(\"basedir \" + basedir\n+                                                        + \" is not a directory\");\n+                    }\n                 }\n                 if (illegal != null) {\n                     throw illegal;",
                "raw_url": "https://github.com/apache/ant/raw/0777fa853af3a619d777adaead96e9c0d1aff291/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "sha": "e68859492e2006558dc3af9a5d8497cf2205637e",
                "status": "modified"
            }
        ],
        "message": "Eliminate possible NPE; note that previous change\naddressed bug 33118 at least partially.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277786 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/c5fc0e2e08e3567841368f443e1f5b5d1912f8c8",
        "patched_files": [
            "DirectoryScanner.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DirectoryScannerTest.java"
        ]
    },
    "ant_08413ad": {
        "bug_id": "ant_08413ad",
        "commit": "https://github.com/apache/ant/commit/08413ada31e6a9e9dbed3073158d17123d5028e0",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/08413ada31e6a9e9dbed3073158d17123d5028e0/src/main/org/apache/tools/ant/types/resources/Files.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Files.java?ref=08413ada31e6a9e9dbed3073158d17123d5028e0",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/types/resources/Files.java",
                "patch": "@@ -497,8 +497,10 @@ private synchronized void ensureDirectoryScannerSetup() {\n     }\n \n     private boolean hasPatterns(PatternSet ps) {\n-        return ps.getIncludePatterns(getProject()).length > 0\n-            || ps.getExcludePatterns(getProject()).length > 0;\n+        String[] includePatterns = ps.getIncludePatterns(getProject());\n+        String[] excludePatterns = ps.getExcludePatterns(getProject());\n+        return (includePatterns != null && includePatterns.length > 0)\n+            || (includePatterns != null && excludePatterns.length > 0);\n     }\n \n }",
                "raw_url": "https://github.com/apache/ant/raw/08413ada31e6a9e9dbed3073158d17123d5028e0/src/main/org/apache/tools/ant/types/resources/Files.java",
                "sha": "394f5debd4040edf15d9d2f812b565c68ec82dcd",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/ant/blob/08413ada31e6a9e9dbed3073158d17123d5028e0/src/tests/antunit/types/path-test.xml",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/types/path-test.xml?ref=08413ada31e6a9e9dbed3073158d17123d5028e0",
                "deletions": 0,
                "filename": "src/tests/antunit/types/path-test.xml",
                "patch": "@@ -0,0 +1,25 @@\n+<project xmlns:au=\"antlib:org.apache.ant.antunit\" default=\"antunit\">\r\n+\r\n+  <import file=\"../antunit-base.xml\" />\r\n+\r\n+  <property name=\"existingFile\" value=\"${basedir}/build.xml\" />\r\n+\r\n+  <files id=\"files\">\r\n+    <include name=\"${existingFile}\" />\r\n+  </files>\r\n+    \r\n+  <target name=\"test-directUse\" description=\"Bug 42397 - works fine\">\r\n+    <path id=\"path\">\r\n+      <files>\r\n+        <include name=\"${existingFile}\" />\r\n+      </files>\r\n+    </path>\r\n+  </target>\r\n+\r\n+  <target name=\"test-refid\" description=\"Bug 42397\">\r\n+    <path id=\"path\">\r\n+      <files refid=\"files\" />\r\n+    </path>\r\n+  </target>\r\n+\r\n+</project>\r",
                "raw_url": "https://github.com/apache/ant/raw/08413ada31e6a9e9dbed3073158d17123d5028e0/src/tests/antunit/types/path-test.xml",
                "sha": "3107f038474139cc6168faa34563f7e0bcdb9c06",
                "status": "added"
            }
        ],
        "message": "Fix Bug 42397: NPE in <path><files refid>\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@540055 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/656c4b15dca26d52034f075bf077fd8c72896a1f",
        "patched_files": [
            "Files.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "path-test.java"
        ]
    },
    "ant_0c08ce1": {
        "bug_id": "ant_0c08ce1",
        "commit": "https://github.com/apache/ant/commit/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -119,6 +119,10 @@ Fixed bugs:\n    <zipfileset>s that used the prefix or fullpath attributes.\n    Bugzilla Report 49605.\n \n+ * <tempfile createfile=\"true\"> would cause an error unless the prefix\n+   attribute has been specified.\n+   Bugzilla Report 49755.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/WHATSNEW",
                "sha": "e4e82b44599fe29656260b773faac6a8c84b9725",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/main/org/apache/tools/ant/util/FileUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "patch": "@@ -898,6 +898,8 @@ public File createTempFile(String prefix, String suffix, File parentDir) {\n         return createTempFile(prefix, suffix, parentDir, false, false);\n     }\n \n+    private static final String NULL_PLACEHOLDER = \"null\";\n+\n     /**\n      * Create a temporary file in a given directory.\n      *\n@@ -925,6 +927,12 @@ public File createTempFile(String prefix, String suffix, File parentDir,\n         String parent = (parentDir == null)\n                 ? System.getProperty(\"java.io.tmpdir\")\n                 : parentDir.getPath();\n+        if (prefix == null) {\n+            prefix = NULL_PLACEHOLDER;\n+        }\n+        if (suffix == null) {\n+            suffix = NULL_PLACEHOLDER;\n+        }\n \n         if (createFile) {\n             try {",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/main/org/apache/tools/ant/util/FileUtils.java",
                "sha": "38b82f9dcb592729f76a9672e878ab3a52be711f",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/tests/antunit/taskdefs/tempfile-test.xml",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/tempfile-test.xml?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "deletions": 0,
                "filename": "src/tests/antunit/taskdefs/tempfile-test.xml",
                "patch": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../antunit-base.xml\" />\n+\n+  <target name=\"testCreateWithoutPrefix\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=49755\">\n+    <tempfile property=\"tmp\" createfile=\"true\"/>\n+    <au:assertFileExists file=\"${tmp}\"/>\n+  </target>\n+</project>",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/tests/antunit/taskdefs/tempfile-test.xml",
                "sha": "2749216dca0578f7334aaa23409eb899550f66d5",
                "status": "added"
            }
        ],
        "message": "Avoid NPE in createTempFile if no prfix has been specified.  PR 49755\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@986226 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/3cc14f2d54dac0920ad891aed71fef8e0b4e8da8",
        "patched_files": [
            "WHATSNEW.java",
            "FileUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FileUtilsTest.java",
            "tempfile-test.java"
        ]
    },
    "ant_1113e19": {
        "bug_id": "ant_1113e19",
        "commit": "https://github.com/apache/ant/commit/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -356,6 +356,10 @@ Fixed bugs:\n    when writing zips or jars.\n    Bugzilla Report 45548\n \n+ * <sync> could into a NullPointerException when faced with broken\n+   symbolic links.\n+   Bugzilla Report 46747.\n+\n Other changes:\n --------------\n  * A HostInfo task was added performing information on hosts, including info on ",
                "raw_url": "https://github.com/apache/ant/raw/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/WHATSNEW",
                "sha": "210efd83f982174be5a0a13a0ff9d8dc27ff4f15",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Sync.java?ref=1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "patch": "@@ -235,7 +235,8 @@ private void logRemovedCount(int count, String prefix,\n         // delete them.\n         for (int i = dirs.length - 1; i >= 0; --i) {\n             File f = new File(toDir, dirs[i]);\n-            if (f.list().length < 1) {\n+            String[] children = f.list();\n+            if (children == null || children.length < 1) {\n                 log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);\n                 f.delete();\n                 ++removedCount[0];",
                "raw_url": "https://github.com/apache/ant/raw/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "sha": "7111dd622401baac6abef9d56e0127b75077dcda",
                "status": "modified"
            }
        ],
        "message": "sync can cause NPE whith broken symlinks.  PR 46747.  Submitted by skoppehel at intersoft dot de\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@747004 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/545ff63ab763c8bb5b4a1b2f0aa98e8526518a07",
        "patched_files": [
            "Sync.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SyncTest.java"
        ]
    },
    "ant_14b1d18": {
        "bug_id": "ant_14b1d18",
        "commit": "https://github.com/apache/ant/commit/14b1d186211e884453211229f2d46fc34d9be0ac",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/14b1d186211e884453211229f2d46fc34d9be0ac/src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Touch.java?ref=14b1d186211e884453211229f2d46fc34d9be0ac",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "patch": "@@ -291,6 +291,9 @@ protected void touch() throws BuildException {\n             touch(new FileResource(file.getParentFile(), file.getName()),\n                   defaultTimestamp);\n         }\n+        if (resources == null) {\n+            return;\n+        }\n         // deal with the resource collections\n         Iterator iter = resources.iterator();\n         while (iter.hasNext()) {",
                "raw_url": "https://github.com/apache/ant/raw/14b1d186211e884453211229f2d46fc34d9be0ac/src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "sha": "90f32c188581dc6e1c03930b0181d524d246a215",
                "status": "modified"
            }
        ],
        "message": "oops; introduced NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@592514 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/771dd677203f6aea1bd040f604f3dac9e90a198b",
        "patched_files": [
            "Touch.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "TouchTest.java"
        ]
    },
    "ant_1b60864": {
        "bug_id": "ant_1b60864",
        "commit": "https://github.com/apache/ant/commit/1b60864bf1589c54f8ee5d72effc9edd7aced4e0",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/1b60864bf1589c54f8ee5d72effc9edd7aced4e0/src/main/org/apache/tools/ant/types/PatternSet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PatternSet.java?ref=1b60864bf1589c54f8ee5d72effc9edd7aced4e0",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/types/PatternSet.java",
                "patch": "@@ -123,7 +123,7 @@ private boolean valid(Project p) {\n         }\n \n         public String toString() {\n-            StringBuffer buf = new StringBuffer(name);\n+            StringBuffer buf = new StringBuffer(name != null ? name : \"\");\n             if ((ifCond != null) || (unlessCond != null)) {\n                 buf.append(\":\");\n                 String connector = \"\";",
                "raw_url": "https://github.com/apache/ant/raw/1b60864bf1589c54f8ee5d72effc9edd7aced4e0/src/main/org/apache/tools/ant/types/PatternSet.java",
                "sha": "6e75aef795ca29262257babd972f883a039321db",
                "status": "modified"
            }
        ],
        "message": "Fix npe if <include> does not have a \"name\" attribute\nPR: 25982\nObtained from: Dawid Weiss\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275875 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/4f1313504aa0fb3f719893e4a178c144bcbcd2c1",
        "patched_files": [
            "PatternSet.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PatternSetTest.java"
        ]
    },
    "ant_2fbb2e6": {
        "bug_id": "ant_2fbb2e6",
        "commit": "https://github.com/apache/ant/commit/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant/blob/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "patch": "@@ -956,6 +956,12 @@ protected void slowScan() {\n         try {\n             synchronized (this) {\n \n+                // set in/excludes to reasonable defaults if needed:\n+                boolean nullIncludes = (includes == null);\n+                includes = nullIncludes ? new String[] {\"**\"} : includes;\n+                boolean nullExcludes = (excludes == null);\n+                excludes = nullExcludes ? new String[0] : excludes;\n+\n                 String[] excl = new String[dirsExcluded.size()];\n                 dirsExcluded.copyInto(excl);\n         \n@@ -974,6 +980,9 @@ protected void slowScan() {\n                                 notIncl[i] + File.separator, false);\n                     }\n                 }\n+                clearCaches();\n+                includes = nullIncludes ? null : includes;\n+                excludes = nullExcludes ? null : excludes;\n             }\n         } finally {\n             synchronized (slowScanLock) {",
                "raw_url": "https://github.com/apache/ant/raw/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "sha": "a2534a1bbbc821e36ea75fe9bdb45a822188c6fb",
                "status": "modified"
            }
        ],
        "message": "Not 100% sure this fixes the entire bug, but it eliminates NPEs for me.\nPR: 34722\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278219 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/529deb1cfd477b2c9b84923dd573c0191ad900c4",
        "patched_files": [
            "DirectoryScanner.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DirectoryScannerTest.java"
        ]
    },
    "ant_3193a54": {
        "bug_id": "ant_3193a54",
        "commit": "https://github.com/apache/ant/commit/3193a54aacba612c7df0c0b1d9d2466e113e8556",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/3193a54aacba612c7df0c0b1d9d2466e113e8556/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=3193a54aacba612c7df0c0b1d9d2466e113e8556",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "patch": "@@ -278,11 +278,13 @@ protected void addZipEntries(ZipFileSet fs, DirectoryScanner ds,\n         File zipSrc = fs.getSrc();\n \n         ZipEntry entry;\n+        java.util.zip.ZipEntry origEntry;\n         ZipInputStream in = null;\n         try {\n             in = new ZipInputStream(new FileInputStream(zipSrc));\n \n-            while ((entry = new ZipEntry(in.getNextEntry())) != null) {\n+            while ((origEntry = in.getNextEntry()) != null) {\n+                entry = new ZipEntry(origEntry);\n                 String vPath = entry.getName();\n                 if (zipScanner.match(vPath)) {\n                     addParentDirs(null, vPath, zOut, prefix);",
                "raw_url": "https://github.com/apache/ant/raw/3193a54aacba612c7df0c0b1d9d2466e113e8556/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "sha": "2d245dbad656f161365509e1b3b4392dd2ad6541",
                "status": "modified"
            }
        ],
        "message": "Fix stupid NPE introduced with my ZIP changes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268961 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/d040818b19cded24629e8f5cf6af6c2621ab4916",
        "patched_files": [
            "Zip.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ZipTest.java"
        ]
    },
    "ant_31d76fc": {
        "bug_id": "ant_31d76fc",
        "commit": "https://github.com/apache/ant/commit/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/IntrospectionHelper.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "deletions": 5,
                "filename": "src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "patch": "@@ -55,7 +55,6 @@\n package org.apache.tools.ant;\n \n import org.apache.tools.ant.types.Path;\n-import org.apache.tools.ant.types.DataType;\n import org.apache.tools.ant.types.EnumeratedAttribute;\n \n import java.lang.reflect.Method;\n@@ -328,8 +327,8 @@ public Object createElement(Project project, Object element, String elementName)\n         }\n         try {\n             Object nestedElement = nc.create(element);\n-            if (nestedElement instanceof DataType) {\n-                ((DataType)nestedElement).setProject(project);\n+            if (nestedElement instanceof ProjectComponent) {\n+                ((ProjectComponent) nestedElement).setProject(project);\n             }\n             return nestedElement;\n         } catch (IllegalAccessException ie) {\n@@ -575,8 +574,8 @@ public void set(Project p, Object parent,\n                             throws InvocationTargetException, IllegalAccessException, BuildException {\n                             try {\n                                 Object attribute = c.newInstance(new String[] {value});\n-                                if (attribute instanceof DataType) {\n-                                    ((DataType)attribute).setProject(p);\n+                                if (attribute instanceof ProjectComponent) {\n+                                    ((ProjectComponent) attribute).setProject(p);\n                                 }\n                                 m.invoke(parent, new Object[] {attribute});\n                             } catch (InstantiationException ie) {",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "sha": "61ffddce17240245b5692e37a5acf7e6496079e8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/ProjectHelper.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/ProjectHelper.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/ProjectHelper.java",
                "patch": "@@ -561,8 +561,10 @@ public void init(String propType, AttributeList attrs) throws SAXParseException\n             try {\n                 String elementName = propType.toLowerCase(Locale.US);\n                 if (parent instanceof UnknownElement) {\n-                    child = new UnknownElement(elementName);\n-                    ((UnknownElement) parent).addChild((UnknownElement) child);\n+                    UnknownElement uc = new UnknownElement(elementName);\n+                    uc.setProject(project);\n+                    ((UnknownElement) parent).addChild(uc);\n+                    child = uc;\n                 } else {\n                     child = ih.createElement(project, parent, elementName);\n                 }",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/ProjectHelper.java",
                "sha": "c0e55cc67e653e885e8bd9b7d924294ca47c9831",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -260,6 +260,7 @@ public void execute() throws BuildException {\n             Enumeration e = properties.elements();\n             while (e.hasMoreElements()) {\n                 Property p=(Property) e.nextElement();\n+                p.setProject(newProject);\n                 p.execute();\n             }\n             ",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "c0b2729936fc7139b8f64b9248c6c7fb48b4bd4a",
                "status": "modified"
            }
        ],
        "message": "spread the project instance a little further (this accounts for a\nnumber of NPEs when using <taskdef> that have been reported).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269854 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/aaed8c297a69c306987d364d432adcd83e2398c0",
        "patched_files": [
            "Ant.java",
            "IntrospectionHelper.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java",
            "IntrospectionHelperTest.java"
        ]
    },
    "ant_39734fd": {
        "bug_id": "ant_39734fd",
        "commit": "https://github.com/apache/ant/commit/39734fdcece949c4acffdb69416c2407b959ffaf",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/39734fdcece949c4acffdb69416c2407b959ffaf/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=39734fdcece949c4acffdb69416c2407b959ffaf",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -53,6 +53,9 @@ Fixed bugs:\n    exception.\n    Bugzilla Report 53964\n \n+ * <javadoc> caused a NullPointerException when no destdir was set.\n+   Bugzilla Report 55949\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/39734fdcece949c4acffdb69416c2407b959ffaf/WHATSNEW",
                "sha": "1acdb84e737295c53f5075bee450c89afec37b19",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/39734fdcece949c4acffdb69416c2407b959ffaf/src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Javadoc.java?ref=39734fdcece949c4acffdb69416c2407b959ffaf",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "patch": "@@ -2447,7 +2447,7 @@ private void postProcessGeneratedJavadocs() throws IOException {\n         if (!postProcessGeneratedJavadocs) {\n             return;\n         }\n-        if (!destDir.isDirectory()) {\n+        if (destDir != null && !destDir.isDirectory()) {\n             log(\"No javadoc created, no need to post-process anything\",\n                 Project.MSG_VERBOSE);\n             return;",
                "raw_url": "https://github.com/apache/ant/raw/39734fdcece949c4acffdb69416c2407b959ffaf/src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "sha": "572720448968a391c7874dad90d52a5070f829c7",
                "status": "modified"
            }
        ],
        "message": "NPE in javadoc when no destdir is specified.  PR 55949\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1555019 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/562c27936519fa3bb1636c91f874de5808d5b290",
        "patched_files": [
            "Javadoc.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JavadocTest.java"
        ]
    },
    "ant_3a3312c": {
        "bug_id": "ant_3a3312c",
        "commit": "https://github.com/apache/ant/commit/3a3312cb529e779a359bffef7180f3334daa418d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/3a3312cb529e779a359bffef7180f3334daa418d/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Delete.java?ref=3a3312cb529e779a359bffef7180f3334daa418d",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "patch": "@@ -270,6 +270,7 @@ public void execute() throws BuildException {\n \n     protected void removeDir(File d) {\n         String[] list = d.list();\n+        if (list == null) list = new String[0];\n         for (int i = 0; i < list.length; i++) {\n             String s = list[i];\n             File f = new File(d, s);",
                "raw_url": "https://github.com/apache/ant/raw/3a3312cb529e779a359bffef7180f3334daa418d/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "sha": "68e82efa7bec069ad150ec7c8907860c9150033c",
                "status": "modified"
            }
        ],
        "message": "Avoid NullPointerException in <delete> if the current user is not\nallowed to list the contents of a directory.\n\nReported by:\t\"NIkhil R. Deshpande\" <nikhild@flashmail.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268372 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/34c0080c09ba7c72241296abc4eb83e2ed9fd569",
        "patched_files": [
            "Delete.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DeleteTest.java"
        ]
    },
    "ant_3d867ee": {
        "bug_id": "ant_3d867ee",
        "commit": "https://github.com/apache/ant/commit/3d867eee2e54bed60ba1ef28af554501622d6c5b",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/3d867eee2e54bed60ba1ef28af554501622d6c5b/src/main/org/apache/tools/ant/types/Description.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/Description.java?ref=3d867eee2e54bed60ba1ef28af554501622d6c5b",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/types/Description.java",
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright  2001-2004 The Apache Software Foundation\n+ * Copyright  2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -65,16 +65,19 @@ public void addText(String text) {\n     }\n \n     /**\n-     * return the descriptions from all the targets of\n+     * Return the descriptions from all the targets of\n      * a project.\n      *\n      * @param project the project to get the descriptions for.\n      * @return a string containing the concatenated descriptions of\n      *         the targets.\n      */\n     public static String getDescription(Project project) {\n-        StringBuffer description = new StringBuffer();\n         Vector targets = (Vector) project.getReference(\"ant.targets\");\n+        if (targets == null) {\n+            return null;\n+        }\n+        StringBuffer description = new StringBuffer();\n         for (int i = 0; i < targets.size(); i++) {\n             Target t = (Target) targets.elementAt(i);\n             concatDescriptions(project, t, description);",
                "raw_url": "https://github.com/apache/ant/raw/3d867eee2e54bed60ba1ef28af554501622d6c5b/src/main/org/apache/tools/ant/types/Description.java",
                "sha": "b9a6d292054bcfd2a7ad209f57943f8ca0872528",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE thrown when using oata.helper.ProjectHelperImpl .\nReported by: Mark D. Hansen\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277282 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/d81308747b0601b3f82c5621b6cc218135243028",
        "patched_files": [
            "Description.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DescriptionTest.java"
        ]
    },
    "ant_4488376": {
        "bug_id": "ant_4488376",
        "commit": "https://github.com/apache/ant/commit/44883768689d7ba8cbd178b973313c6cf2b28754",
        "file": [
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/etc/testcases/taskdefs/ant.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/ant.xml?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/ant.xml",
                "patch": "@@ -2,6 +2,13 @@\n \n <project name=\"ant-test\" basedir=\".\" default=\"test1\">\n \n+  <target name=\"cleanup\">\n+    <delete file=\"test1.log\" />\n+    <delete file=\"test2.log\" />\n+    <delete file=\"ant/test3.log\" />\n+    <delete file=\"ant/test4.log\" />\n+  </target>\n+\n   <target name=\"all\" depends=\"test1,test2,test3,test4\"/>\n \n   <target name=\"test1\">\n@@ -67,4 +74,13 @@\n     </ant>\n   </target>\n \n+  <target name=\"testLogfilePlacement\">\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test1.log\"\n+         inheritall=\"false\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test2.log\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test3.log\"\n+         inheritall=\"false\" dir=\"ant\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test4.log\" \n+         dir=\"ant\" />\n+  </target>\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/etc/testcases/taskdefs/ant.xml",
                "sha": "4024bc3d2f82ed12fe29cf4b6d670088991b1635",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -105,7 +105,6 @@\n     \n     /** the output */\n     private String output  = null;\n-    private String outfile = null;\n     \n     /** should we inherit properties from the parent ? */\n     private boolean inheritAll = true;\n@@ -175,9 +174,11 @@ private void initializeProject() {\n         }\n \n         if (output != null) {\n+            File outfile = null;\n             if (dir != null) {\n-                File file = FileUtils.newFileUtils().resolveFile(dir, output);\n-                outfile = file.getAbsolutePath();\n+                outfile = FileUtils.newFileUtils().resolveFile(dir, output);\n+            } else {\n+                outfile = getProject().resolveFile(output);\n             }\n             try {\n                 PrintStream out = new PrintStream(new FileOutputStream(outfile));",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "748f571057e67034f729f6a3492e12a670832312",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "deletions": 3,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "patch": "@@ -1,7 +1,7 @@\n /*\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2000-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -78,6 +78,10 @@ public void setUp() {\n         configureProject(\"src/etc/testcases/taskdefs/ant.xml\");\n     }\n     \n+    public void tearDown() {\n+        executeTarget(\"cleanup\");\n+    }\n+\n     public void test1() { \n         expectBuildException(\"test1\", \"recursive call\");\n     }\n@@ -213,6 +217,26 @@ protected void testReference(String target, String[] keys,\n         project.removeBuildListener(rc);\n     }\n \n+    public void testLogfilePlacement() {\n+        File[] logFiles = new File[] {\n+            getProject().resolveFile(\"test1.log\"),\n+            getProject().resolveFile(\"test2.log\"),\n+            getProject().resolveFile(\"ant/test3.log\"),\n+            getProject().resolveFile(\"ant/test3.log\")\n+        };\n+        for (int i=0; i<logFiles.length; i++) {\n+            assertTrue(logFiles[i].getName()+\" doesn\\'t exist\",\n+                       !logFiles[i].exists());\n+        }\n+        \n+        executeTarget(\"testLogfilePlacement\");\n+\n+        for (int i=0; i<logFiles.length; i++) {\n+            assertTrue(logFiles[i].getName()+\" exists\",\n+                       logFiles[i].exists());\n+        }\n+    }\n+\n     private class BasedirChecker implements BuildListener {\n         private String[] expectedBasedirs;\n         private int calls = 0;\n@@ -232,8 +256,13 @@ public void messageLogged(BuildEvent event) {}\n         public void targetStarted(BuildEvent event) {\n             if (error == null) {\n                 try {\n-                    assertEquals(expectedBasedirs[calls++],\n-                                 event.getProject().getBaseDir().getAbsolutePath());\n+                    if (calls == expectedBasedirs.length) {\n+                        assertEquals(\"cleanup\",\n+                                     event.getTarget().getName());\n+                    } else {\n+                        assertEquals(expectedBasedirs[calls++],\n+                                     event.getProject().getBaseDir().getAbsolutePath());\n+                    }\n                 } catch (AssertionFailedError e) {\n                     error = e;\n                 }",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "sha": "97ffc5c73819e42a25c966116d6e7636a01f482a",
                "status": "modified"
            }
        ],
        "message": "Add testcase for <ant>'s logfile placement, fix NPE in <ant>.\n\nIf <ant> should ignore the dir attribute, we only have to change the\nlocations of test3.log and test4.log.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272171 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/3432c43ba0170b4e4a0e34bc748fdc7e3b6b1302",
        "patched_files": [
            "Ant.java",
            "ant.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java"
        ]
    },
    "ant_561706f": {
        "bug_id": "ant_561706f",
        "commit": "https://github.com/apache/ant/commit/561706f38cb5df71cf79785f4c6e5607de4dafa7",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/561706f38cb5df71cf79785f4c6e5607de4dafa7/src/main/org/apache/tools/ant/UnknownElement.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=561706f38cb5df71cf79785f4c6e5607de4dafa7",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "patch": "@@ -288,11 +288,14 @@ public void execute() {\n                 ((Task) realThing).execute();\n             }\n         } finally {\n-            // Finished executing the task, null it to allow\n+            // Finished executing the task\n+            // null it (unless it has an ID) to allow\n             // GC do its job\n             // If this UE is used again, a new \"realthing\" will be made\n-            realThing = null;\n-            getWrapper().setProxy(null);\n+            if (getWrapper().getId() == null) {\n+                realThing = null;\n+                getWrapper().setProxy(null);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/ant/raw/561706f38cb5df71cf79785f4c6e5607de4dafa7/src/main/org/apache/tools/ant/UnknownElement.java",
                "sha": "6aa9eb41c7a778c254d5c275cea36d88768e7e5d",
                "status": "modified"
            }
        ],
        "message": "Bugzilla 44689: NPE with multiple targets and id's in task\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@641903 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/811a4f50d8fdff2d5813df05c284404aca263654",
        "patched_files": [
            "UnknownElement.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "UnknownElementTest.java"
        ]
    },
    "ant_5a4fe63": {
        "bug_id": "ant_5a4fe63",
        "commit": "https://github.com/apache/ant/commit/5a4fe63383258162c3374aebd048dee87efb4fd6",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/5a4fe63383258162c3374aebd048dee87efb4fd6/src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/SignJar.java?ref=5a4fe63383258162c3374aebd048dee87efb4fd6",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "patch": "@@ -447,7 +447,7 @@ private void addTimestampAuthorityCommands(final ExecTask cmd) {\n      * @return true if the signedjarFile is considered up to date\n      */\n     protected boolean isUpToDate(File jarFile, File signedjarFile) {\n-        if (null == jarFile && !jarFile.exists()) {\n+        if (null == jarFile || !jarFile.exists()) {\n             //these are pathological cases, but retained in case somebody\n             //subclassed us.\n             return false;",
                "raw_url": "https://github.com/apache/ant/raw/5a4fe63383258162c3374aebd048dee87efb4fd6/src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "sha": "220aed6b167e310e3632d80f898568e09e3bbdde",
                "status": "modified"
            }
        ],
        "message": "Fix comparison w/ exposed NPE\nPR: 36093\nObtained from: Dave Brosius\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278513 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/aa83249a9156ead7ae2c5a7c591fd3e90ebf5d00",
        "patched_files": [
            "SignJar.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SignJarTest.java"
        ]
    },
    "ant_5bc13a2": {
        "bug_id": "ant_5bc13a2",
        "commit": "https://github.com/apache/ant/commit/5bc13a2c00b301001776689e9cb443a04bf5bdf8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/5bc13a2c00b301001776689e9cb443a04bf5bdf8/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java?ref=5bc13a2c00b301001776689e9cb443a04bf5bdf8",
                "deletions": 1,
                "filename": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "patch": "@@ -289,7 +289,9 @@ public void testSymbolicLinkUtilsMethods() throws Exception {\n \n     @After\n     public void tearDown() {\n-        buildRule.executeTarget(\"tearDown\");\n+        if (buildRule.getProject() != null) {\n+            buildRule.executeTarget(\"tearDown\");\n+        }\n     }\n \n }",
                "raw_url": "https://github.com/apache/ant/raw/5bc13a2c00b301001776689e9cb443a04bf5bdf8/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "sha": "e36d6838b6eb15e2d7e753b900bd6311c4345a95",
                "status": "modified"
            }
        ],
        "message": "Prevent on cleanup NPE when test skipped\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588622 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/b61c80746dd5df73899390826e197d2656784f91",
        "patched_files": [
            "Symlink.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SymlinkTest.java"
        ]
    },
    "ant_64d1056": {
        "bug_id": "ant_64d1056",
        "commit": "https://github.com/apache/ant/commit/64d1056c41516ea0a35e8b7c9d9efaab4153027a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/64d1056c41516ea0a35e8b7c9d9efaab4153027a/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Jar.java?ref=64d1056c41516ea0a35e8b7c9d9efaab4153027a",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "patch": "@@ -413,7 +413,7 @@ private boolean jarHasIndex(File jarFile) throws IOException {\n      */\n     public void setFilesetmanifest(FilesetManifestConfig config) {\n         filesetManifestConfig = config;\n-        mergeManifestsMain = \"merge\".equals(config.getValue());\n+        mergeManifestsMain = config != null && \"merge\".equals(config.getValue());\n \n         if (filesetManifestConfig != null\n             && !filesetManifestConfig.getValue().equals(\"skip\")) {",
                "raw_url": "https://github.com/apache/ant/raw/64d1056c41516ea0a35e8b7c9d9efaab4153027a/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "sha": "330b5dd7df77765024bee1752c0ea8f01e67394b",
                "status": "modified"
            }
        ],
        "message": "uncover hidden NullPointerException",
        "parent": "https://github.com/apache/ant/commit/eaf3af0aea8b14c4a5d8d63bc4cb22f88dbb19a4",
        "patched_files": [
            "Jar.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JarTest.java"
        ]
    },
    "ant_6515402": {
        "bug_id": "ant_6515402",
        "commit": "https://github.com/apache/ant/commit/65154027217934ed9b35aaeb8a765b763b4c77c3",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -132,6 +132,9 @@ Fixed bugs:\n * Concat task instance could not be run twice.\n   Bugzilla report 31814.\n \n+* NPE using XmlLogger and antlib.\n+  Bugzilla report 31840.\n+\n Changes from Ant 1.6.1 to Ant 1.6.2\n ===================================\n ",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/WHATSNEW",
                "sha": "cda6efca192902720e03d7bce06cfaddad83c167",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/XmlLogger.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/XmlLogger.java?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/XmlLogger.java",
                "patch": "@@ -291,6 +291,9 @@ public void taskStarted(BuildEvent event) {\n \n         Task task = event.getTask();\n         String name = event.getTask().getTaskName();\n+        if (name == null) {\n+            name = \"\";\n+        }\n         taskElement.element.setAttribute(NAME_ATTR, name);\n         taskElement.element.setAttribute(LOCATION_ATTR,\n                 event.getTask().getLocation().toString());",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/XmlLogger.java",
                "sha": "892c02d21dfed77b45c24a278d0397defff3b666",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Antlib.java?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "patch": "@@ -82,6 +82,7 @@ public static Antlib createAntlib(Project project, URL antlibUrl,\n             Antlib antlib = new Antlib();\n             antlib.setProject(project);\n             antlib.setLocation(ue.getLocation());\n+            antlib.setTaskName(\"antlib\");\n             antlib.init();\n             ue.configure(antlib);\n             return antlib;",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "sha": "f0b3a4bde3664239403573775d6880f0640e3279",
                "status": "modified"
            }
        ],
        "message": "NPE using XmlLogger and antlib\ncheck if the value of the name attribute is not null\nset the taskname of the antlib task\nPR: 31840\nObtained from: Mariano Benitez\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276965 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/39404a01944f1f80a52e8318e75b0dfc84e08894",
        "patched_files": [
            "Antlib.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntlibTest.java"
        ]
    },
    "ant_6528412": {
        "bug_id": "ant_6528412",
        "commit": "https://github.com/apache/ant/commit/6528412d219b05ca763dc198bd3e7d75754e57c5",
        "file": [
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/etc/testcases/taskdefs/jar.xml",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/jar.xml?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/jar.xml",
                "patch": "@@ -5,6 +5,8 @@\n   <property name=\"tmp.jar\" location=\"tmp.jar\"/>\n   <property name=\"tmp.dir\" location=\"jartmp\"/>\n   <property name=\"tmp.zip\" location=\"tmp.zip\"/>\n+  <property name=\"tmp1.dir\" location=\"jartmp1\"/>\n+  <property name=\"tmp2.dir\" location=\"jartmp2\"/>\n \n   <target name=\"test1\">\n     <jar/>\n@@ -166,6 +168,25 @@\n     <delete file=\"${tmp.jar}\" />\n     <delete dir=\"${tmp.dir}\"/>\n     <delete file=\"${tmp.zip}\" />\n+    <delete dir=\"${tmp1.dir}\"/>\n+    <delete dir=\"${tmp2.dir}\"/>\n+  </target>\n+\n+  <target name=\"testCreateWithEmptyFilesetSetUp\">\n+    <mkdir dir=\"${tmp1.dir}\"/>\n+    <mkdir dir=\"${tmp2.dir}\"/>\n+    <echo file=\"${tmp2.dir}/foo.txt\" message=\"foo\"/>\n+  </target>\n+\n+  <target name=\"testCreateWithEmptyFileset\">\n+    <jar destfile=\"${tmp.jar}\">\n+      <fileset dir=\"${tmp1.dir}\">\n+        <include name=\"**/*.doesNotExist\"/>\n+      </fileset>\n+      <fileset dir=\"${tmp2.dir}\">\n+        <include name=\"**/foo.txt\"/>\n+      </fileset>\n+    </jar>\n   </target>\n \n </project>",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/etc/testcases/taskdefs/jar.xml",
                "sha": "9b94dea98e3747db1917ab7656503bdcc1a20d40",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "patch": "@@ -750,6 +750,7 @@ private synchronized ZipScanner getZipScanner() {\n \n         for (int i = 0; i < filesets.length; i++) {\n             if (initialResources[i].length == 0) {\n+                newerResources[i] = new Resource[] {};\n                 continue;\n             }\n             ",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "sha": "4e696fa72a2a42f6d2c0c661c86584a8570c2b76",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "deletions": 0,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "patch": "@@ -214,4 +214,9 @@ public void testRecreateZipfilesetWithUpdateNewerFile() {\n                      \"testRecreateZipfilesetWithUpdateNewerFile\");\n     }\n \n+    public void testCreateWithEmptyFileset() {\n+        executeTarget(\"testCreateWithEmptyFilesetSetUp\");\n+        executeTarget(\"testCreateWithEmptyFileset\");\n+        executeTarget(\"testCreateWithEmptyFileset\");\n+    }\n }",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "sha": "492146399c3d0cfabcb5516e461ea005e33b0a56",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE in <zip> and friends for empty <fileset>s.\n\nSubmitted by:\tNico Seessle <nico at apache dot org>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274176 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/ef23aba6648165c7037d828b8addb77e7da9be49",
        "patched_files": [
            "Zip.java",
            "jar.java",
            "Jar.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ZipTest.java",
            "JarTest.java"
        ]
    },
    "ant_6d13fce": {
        "bug_id": "ant_6d13fce",
        "commit": "https://github.com/apache/ant/commit/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/WHATSNEW",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -13,6 +13,11 @@ Fixed bugs:\n    maps.\n    Bugzilla Report 48310.\n \n+ * The filesmatch condition threw a NullPointerException when\n+   comparing text files and the second file contained fewer lines than\n+   the first one.\n+   Bugzilla Report 48715.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/WHATSNEW",
                "sha": "8b787bafa21c91f78e6cbf7a01bacd2938217fa1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "patch": "@@ -666,6 +666,9 @@ private static int textCompare(Resource r1, Resource r2) throws IOException {\n             while (expected != null) {\n                 String actual = in2.readLine();\n                 if (!expected.equals(actual)) {\n+                    if (actual == null) {\n+                        return 1;\n+                    }\n                     return expected.compareTo(actual);\n                 }\n                 expected = in1.readLine();",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "sha": "d269ad4cbf9cb68cdefbce2fce88d48d7e43d643",
                "status": "modified"
            },
            {
                "additions": 57,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "changes": 57,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/condition/filesmatch-test.xml?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "deletions": 0,
                "filename": "src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../../antunit-base.xml\" />\n+\n+  <target name=\"setUp\">\n+    <mkdir dir=\"${input}\"/>\n+  </target>\n+\n+  <target name=\"testMatchWithSmallerFile2\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=48715\"\n+          depends=\"setUp\">\n+    <property name=\"file1\" location=\"${input}/LS.properties\"/>\n+    <property name=\"file2\" location=\"${input}/LS.properties.old\"/>\n+    <echo file=\"${file1}\"><![CDATA[foo=foo\n+bar=bar\n+\n+]]></echo>\n+    <echo file=\"${file2}\"><![CDATA[foo=foo\n+]]></echo>\n+    <au:assertFalse>\n+      <filesmatch file1=\"${file1}\" file2=\"${file2}\" textfile=\"true\"/>\n+    </au:assertFalse>\n+  </target>\n+\n+  <target name=\"testBinaryMatchWithSmallerFile2\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=48715\"\n+          depends=\"setUp\">\n+    <property name=\"file1\" location=\"${input}/LS.properties\"/>\n+    <property name=\"file2\" location=\"${input}/LS.properties.old\"/>\n+    <echo file=\"${file1}\"><![CDATA[foo=foo\n+bar=bar\n+\n+]]></echo>\n+    <echo file=\"${file2}\"><![CDATA[foo=foo\n+]]></echo>\n+    <au:assertFalse>\n+      <filesmatch file1=\"${file1}\" file2=\"${file2}\" textfile=\"false\"/>\n+    </au:assertFalse>\n+  </target>\n+\n+</project>",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "sha": "67e7c00f6a79f9e0104e2d31569c9662f0d7c745",
                "status": "added"
            }
        ],
        "message": "filesmatch throws NPE when comparing texts and the second one has fewer lines.  PR 48715\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@908356 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/c1091535ba59978083a7fb825bf18854b71547db",
        "patched_files": [
            "ResourceUtils.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ResourceUtilsTest.java",
            "filesmatch-test.java"
        ]
    },
    "ant_7451a06": {
        "bug_id": "ant_7451a06",
        "commit": "https://github.com/apache/ant/commit/7451a066cb3c801bbb62d05de03619c153161c80",
        "file": [
            {
                "additions": 62,
                "blob_url": "https://github.com/apache/ant/blob/7451a066cb3c801bbb62d05de03619c153161c80/src/tests/antunit/taskdefs/gunzip-test.xml",
                "changes": 62,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/gunzip-test.xml?ref=7451a066cb3c801bbb62d05de03619c153161c80",
                "deletions": 0,
                "filename": "src/tests/antunit/taskdefs/gunzip-test.xml",
                "patch": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../antunit-base.xml\" />\n+\n+  <target name=\"setup\">\n+    <mkdir dir=\"${output}\"/>\n+  </target>\n+  \n+  <target name=\"testWithFileResourceToFile\" depends=\"setup\">\n+    <gunzip dest=\"${output}/asf-logo.gif\">\n+      <file file=\"../../../etc/testcases/taskdefs/expected/asf-logo.gif.gz\"/>\n+    </gunzip>\n+    <au:assertFilesMatch expected=\"../../../etc/testcases/asf-logo.gif\"\n+                         actual=\"${output}/asf-logo.gif\"/>\n+  </target>\n+\n+  <target name=\"testWithFileResourceToDirectory\" depends=\"setup\">\n+    <gunzip dest=\"${output}\">\n+      <file file=\"../../../etc/testcases/taskdefs/expected/asf-logo.gif.gz\"/>\n+    </gunzip>\n+    <au:assertFilesMatch expected=\"../../../etc/testcases/asf-logo.gif\"\n+                         actual=\"${output}/asf-logo.gif\"/>\n+  </target>\n+\n+  <target name=\"XtestWithNonFileResourceToFile\" depends=\"setup\">\n+    <gunzip dest=\"${output}/greeting.txt\">\n+      <url url=\"http://ant.apache.org/webtest/gunzip/greeting.txt.gz\"/>\n+    </gunzip>\n+    <get src=\"http://ant.apache.org/webtest/gunzip/greeting.txt\"\n+         dest=\"${output}/orig.greeting.txt\"/>\n+    <au:assertFilesMatch expected=\"${output}/orig.greeting.txt\"\n+                         actual=\"${output}/greeting.txt\"/>\n+  </target>\n+\n+  <target name=\"XtestWithNonFileResourceToDir\" depends=\"setup\">\n+    <gunzip dest=\"${output}\">\n+      <url url=\"http://ant.apache.org/webtest/gunzip/greeting.txt.gz\"/>\n+    </gunzip>\n+    <get src=\"http://ant.apache.org/webtest/gunzip/greeting.txt\"\n+         dest=\"${output}/orig.greeting.txt\"/>\n+    <au:assertFilesMatch expected=\"${output}/orig.greeting.txt\"\n+                         actual=\"${output}/greeting.txt\"/>\n+  </target>\n+\n+</project>\n+",
                "raw_url": "https://github.com/apache/ant/raw/7451a066cb3c801bbb62d05de03619c153161c80/src/tests/antunit/taskdefs/gunzip-test.xml",
                "sha": "5c6f82ca21dc724d988eb370af801c3dae3a90f5",
                "status": "added"
            }
        ],
        "message": "tests that show gunzip for non-file resources is broken\n\nhttp://stackoverflow.com/questions/32500937/nullpointerexception-using-on-the-fly-version-of-gunzip-ant-task",
        "parent": "https://github.com/apache/ant/commit/99684cfd77a3851d098824e9eb871cd6c087934f",
        "patched_files": [],
        "repo": "ant",
        "unit_tests": [
            "gunzip-test.java"
        ]
    },
    "ant_75e6e7f": {
        "bug_id": "ant_75e6e7f",
        "commit": "https://github.com/apache/ant/commit/75e6e7f764495e29e7d15f0c40c125f7654616ee",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/CONTRIBUTORS",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "deletions": 0,
                "filename": "CONTRIBUTORS",
                "patch": "@@ -6,6 +6,7 @@ Alexey Solofnenko\n Andreas Ames\n Andreas Mross\n Andrew Everitt\n+Andrey Urazov\n Anil K. Vijendran\n Anli Shundi\n Anthony Goubard",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/CONTRIBUTORS",
                "sha": "90f80f17375e622a7e513ba53cc2e2d648e73a68",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -17,6 +17,9 @@ Fixed bugs:\n   take comparison with another CompressedResouce into account.\n   Bugzilla 40949.\n \n+* possible NPE in Jar.java.\n+  Bugzilla 40847\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/WHATSNEW",
                "sha": "3111ea6d8136bf7e3e67b8ce72f1d770f5a48846",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/contributors.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "deletions": 0,
                "filename": "contributors.xml",
                "patch": "@@ -34,6 +34,10 @@\n     <first>Andrew</first>\n     <last>Everitt</last>\n   </name>\n+  <name>\n+    <first>Andrey</first>\n+    <last>Urazov</last>\n+  </name>\n   <name>\n     <first>Anil</first>\n     <middle>K.</middle>",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/contributors.xml",
                "sha": "f65dc24d05cf6c1cf95c1458a3ca6d07a110b93e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Jar.java?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "patch": "@@ -526,7 +526,7 @@ private void createIndexList(ZipOutputStream zOut) throws IOException {\n             Manifest.Attribute classpath =\n                 mf.getMainSection().getAttribute(Manifest.ATTRIBUTE_CLASSPATH);\n             String[] cpEntries = null;\n-            if (classpath != null) {\n+            if (classpath != null && classpath.getValue() != null) {\n                 StringTokenizer tok = new StringTokenizer(classpath.getValue(),\n                                                           \" \");\n                 cpEntries = new String[tok.countTokens()];",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "sha": "f58788634185c5eeaffb0136197ce627110a8084",
                "status": "modified"
            }
        ],
        "message": "Bugzilla 40847: possible NPE in Jar.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@474481 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/91a92f10340b639878efaee4d24776f277f9ac1d",
        "patched_files": [
            "Jar.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JarTest.java"
        ]
    },
    "ant_7917d87": {
        "bug_id": "ant_7917d87",
        "commit": "https://github.com/apache/ant/commit/7917d875217ffc9017d54968397a03be5b06a45b",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "deletions": 1,
                "filename": "WHATSNEW",
                "patch": "@@ -67,7 +67,8 @@ Changes that could break older environments:\n \n Fixed bugs:\n -----------\n-* Some potential NullPointerExceptions, Bugzilla Report 37765\n+\n+* Some potential NullPointerExceptions, Bugzilla Reports 37765 and 38056\n \n * Problem when adding multiple filter files, Bugzilla Report 37341\n ",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/WHATSNEW",
                "sha": "0d621a252c1c48c0ace5d6e46b6a21057ba5ee22",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/etc/testcases/taskdefs/presetdef.xml",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/presetdef.xml?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/presetdef.xml",
                "patch": "@@ -118,4 +118,13 @@\n     </javac>\n   </target>\n \n+    <target name=\"presetdef-with-nested-element-twice\">\n+        <copy todir=\".\">\n+            <fileset dir=\".\" includes=\"nonexistent\"/>\n+        </copy>\n+        <presetdef name=\"copy\">\n+            <copy verbose=\"true\"/>\n+        </presetdef>\n+    </target>\n+\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/etc/testcases/taskdefs/presetdef.xml",
                "sha": "32f77216719d9e89d9923ca9ae3a396bccde0f66",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/main/org/apache/tools/ant/UnknownElement.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "patch": "@@ -41,7 +41,7 @@\n     /**\n      * Holds the namespace of the element.\n      */\n-    private String namespace;\n+    private String namespace = \"\";\n \n     /**\n      * Holds the namespace qname of the element.\n@@ -111,7 +111,7 @@ public void setNamespace(String namespace) {\n                 getProject());\n             namespace = helper.getCurrentAntlibUri();\n         }\n-        this.namespace = namespace;\n+        this.namespace = namespace == null ? \"\" : namespace;\n     }\n \n     /** Return the qname of the XML element associated with this component.",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/main/org/apache/tools/ant/UnknownElement.java",
                "sha": "d5b680d8c7b5b028c0d5152cae364e171cf022e9",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "deletions": 0,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "patch": "@@ -80,6 +80,10 @@ public void testCorrectTaskNameBadEl() {\n             \"correct_taskname_badel\", \"element message\", \"javac doesn't support the\");\n     }\n     \n+    public void testPresetdefWithNestedElementTwice() { // #38056\n+        executeTarget(\"presetdef-with-nested-element-twice\");\n+        executeTarget(\"presetdef-with-nested-element-twice\");\n+    }\n     \n     /**\n      * A test class to check default properties",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "sha": "ca82f7860ec793b93f74817c359302bac7e36384",
                "status": "modified"
            }
        ],
        "message": "#38056: NPE when using presetdef under obscure circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@359329 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/5dfc9fa6524211f32349464146215cc6451d415a",
        "patched_files": [
            "presetdef.java",
            "UnknownElement.java",
            "PreSetDef.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PreSetDefTest.java"
        ]
    },
    "ant_7b90e49": {
        "bug_id": "ant_7b90e49",
        "commit": "https://github.com/apache/ant/commit/7b90e493e8f5388bf88f0d951880d6667f9a8016",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/ant/blob/7b90e493e8f5388bf88f0d951880d6667f9a8016/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=7b90e493e8f5388bf88f0d951880d6667f9a8016",
                "deletions": 10,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -365,9 +365,7 @@ public void execute() throws BuildException {\n                 .equals(getProject().getProperty(\"ant.file\"))\n                 && getOwningTarget() != null) {\n \n-                String owningTargetName = getOwningTarget().getName();\n-\n-                if (owningTargetName.equals(\"\")) {\n+                if (getOwningTarget().getName().equals(\"\")) {\n                     if (getTaskName().equals(\"antcall\")) {\n                         throw new BuildException(\"antcall must not be used at\"\n                                                  + \" the top level.\");\n@@ -376,7 +374,22 @@ public void execute() throws BuildException {\n                                                  + \" top level must not invoke\"\n                                                  + \" its own build file.\");\n                     }\n-                } else if (owningTargetName.equals(target)) {\n+                }\n+            }\n+\n+            ProjectHelper.configureProject(newProject, new File(antFile));\n+\n+            if (target == null) {\n+                target = newProject.getDefaultTarget();\n+            }\n+\n+            if (newProject.getProperty(\"ant.file\")\n+                .equals(getProject().getProperty(\"ant.file\"))\n+                && getOwningTarget() != null) {\n+\n+                String owningTargetName = getOwningTarget().getName();\n+\n+                if (owningTargetName.equals(target)) {\n                     throw new BuildException(getTaskName() + \" task calling \"\n                                              + \"its own parent target.\");\n                 } else {\n@@ -393,12 +406,6 @@ public void execute() throws BuildException {\n                 }\n             }\n \n-            ProjectHelper.configureProject(newProject, new File(antFile));\n-\n-            if (target == null) {\n-                target = newProject.getDefaultTarget();\n-            }\n-\n             addReferences();\n \n             if (target != null) {",
                "raw_url": "https://github.com/apache/ant/raw/7b90e493e8f5388bf88f0d951880d6667f9a8016/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "bb631c0759d517f59ee167d7bbe1dfa785dffb70",
                "status": "modified"
            }
        ],
        "message": "It is legal to omit the target attribute in <ant>, don't die with a NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275211 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/da7ebd07b866580dae3c60cd4c7e3aefd0f335f0",
        "patched_files": [
            "Ant.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java"
        ]
    },
    "ant_7db9027": {
        "bug_id": "ant_7db9027",
        "commit": "https://github.com/apache/ant/commit/7db902758895c1c83c8d48efbd4c9780f15e9e17",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/main/org/apache/tools/ant/types/FileSet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/FileSet.java?ref=7db902758895c1c83c8d48efbd4c9780f15e9e17",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/types/FileSet.java",
                "patch": "@@ -182,6 +182,10 @@ public void setDefaultexcludes(boolean useDefaultExcludes) {\n      * Returns the directory scanner needed to access the files to process.\n      */\n     public DirectoryScanner getDirectoryScanner(Project p) {\n+        if (dir == null) {\n+            throw new BuildException(\"No directory specified for fileset.\");\n+        }\n+\n         /*\n          * XXX remove the check here and enable the one in setDir as soon\n          *     as we configure tasks at execution time.",
                "raw_url": "https://github.com/apache/ant/raw/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/main/org/apache/tools/ant/types/FileSet.java",
                "sha": "a1c610cb657ab1590a43a25745a0a35e04b4a425",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/types/CommandlineTest.java?ref=7db902758895c1c83c8d48efbd4c9780f15e9e17",
                "deletions": 3,
                "filename": "src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "patch": "@@ -115,9 +115,8 @@ public void testTokenizer() {\n         // what the Unix sh does but causes a lot of problems on DOS\n         // based platforms otherwise\n         s = Commandline.translateCommandline(\"1 2\\\\ 3 4\");\n-        assertEquals(\"case with quotes whitespace\", 4, s.length);\n-        assertEquals(\"Single quotes stripped, double quote included\", \"2\\\\\",\n-                     s[1]);\n+        assertEquals(\"case with quoted whitespace\", 4, s.length);\n+        assertEquals(\"backslash included\", \"2\\\\\", s[1]);\n \n \n         // now to the expected failures",
                "raw_url": "https://github.com/apache/ant/raw/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "sha": "d4a5ed9eab1060f601866f931132fe5434a44553",
                "status": "modified"
            }
        ],
        "message": "Avoid NullPointerException in FileSet.\nSubmitted by:\tJeff Martin <jeff.martin@synamic.co.uk>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267915 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/e2a75898e88825b87310be19070b68f967ae000c",
        "patched_files": [
            "FileSet.java",
            "Commandline.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "CommandlineTest.java"
        ]
    },
    "ant_8522387": {
        "bug_id": "ant_8522387",
        "commit": "https://github.com/apache/ant/commit/8522387c40027238decd43f7e5028cca491bf26c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/8522387c40027238decd43f7e5028cca491bf26c/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=8522387c40027238decd43f7e5028cca491bf26c",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -204,6 +204,9 @@ Fixed bugs:\n \n * DirectoryScanner.slowScan() was broken. Bugzilla report 34722.\n \n+* DirectoryScanner.scan() could throw a NullPointerException on\n+  case-insensitive filesystems (read Windows or MacOS X).\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/8522387c40027238decd43f7e5028cca491bf26c/WHATSNEW",
                "sha": "d7b21180425ba1e9055e89404b21f7bf08e7deb5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/8522387c40027238decd43f7e5028cca491bf26c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=8522387c40027238decd43f7e5028cca491bf26c",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "patch": "@@ -872,7 +872,7 @@ private void checkIncludePatterns() {\n                 }\n                 if ((myfile == null || !myfile.exists()) && !isCaseSensitive()) {\n                     File f = findFile(basedir, currentelement, false);\n-                    if (f.exists()) {\n+                    if (f != null && f.exists()) {\n                         // adapt currentelement to the case we've\n                         // actually found\n                         currentelement = FILE_UTILS.removeLeadingPath(basedir,",
                "raw_url": "https://github.com/apache/ant/raw/8522387c40027238decd43f7e5028cca491bf26c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "sha": "0bf8267adec2a21ea0930d966a4ec3d3009525e0",
                "status": "modified"
            }
        ],
        "message": "fix NPE reported by Curt Arnold\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278239 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/fddcc94a0c3e2f1687b492627dc5c2e0b6e747c0",
        "patched_files": [
            "DirectoryScanner.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "DirectoryScannerTest.java"
        ]
    },
    "ant_873b850": {
        "bug_id": "ant_873b850",
        "commit": "https://github.com/apache/ant/commit/873b850f39a26e4911d612c157622751ac9582f9",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/873b850f39a26e4911d612c157622751ac9582f9/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=873b850f39a26e4911d612c157622751ac9582f9",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -16,6 +16,9 @@ Fixed bugs:\n * behavior change of DirectoryScanner/AbstractFileset when conditional include\n   patterns are used. Bugzilla 40722.\n \n+* <javac> fails with NPE when compiling with eclipse ecj 3.1.x.\n+  Bugzilla 40839.\n+  \n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/873b850f39a26e4911d612c157622751ac9582f9/WHATSNEW",
                "sha": "b73511beee2ac4abe14390927a89ffd11f79b117",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/ant/blob/873b850f39a26e4911d612c157622751ac9582f9/src/main/org/apache/tools/ant/types/Path.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/Path.java?ref=873b850f39a26e4911d612c157622751ac9582f9",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/types/Path.java",
                "patch": "@@ -201,6 +201,9 @@ public PathElement createPathElement() throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addFileset(FileSet fs) throws BuildException {\n+        if (fs.getProject() == null) {\n+            fs.setProject(getProject());\n+        }\n         add(fs);\n     }\n \n@@ -210,6 +213,9 @@ public void addFileset(FileSet fs) throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addFilelist(FileList fl) throws BuildException {\n+        if (fl.getProject() == null) {\n+            fl.setProject(getProject());\n+        }\n         add(fl);\n     }\n \n@@ -219,6 +225,9 @@ public void addFilelist(FileList fl) throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addDirset(DirSet dset) throws BuildException {\n+        if (dset.getProject() == null) {\n+            dset.setProject(getProject());\n+        }\n         add(dset);\n     }\n \n@@ -229,6 +238,9 @@ public void addDirset(DirSet dset) throws BuildException {\n      * @since Ant 1.6\n      */\n     public void add(Path path) throws BuildException {\n+        if (path.getProject() == null) {\n+            path.setProject(getProject());\n+        }\n         add((ResourceCollection) path);\n     }\n ",
                "raw_url": "https://github.com/apache/ant/raw/873b850f39a26e4911d612c157622751ac9582f9/src/main/org/apache/tools/ant/types/Path.java",
                "sha": "b5cc076d8468c5e2c35b05830238e3a5eb85dfd2",
                "status": "modified"
            }
        ],
        "message": "fix for \n<javac> fails with NPE when compiling with eclipse ecj 3.1.x\nBugzilla 40839.\nroot cause of the problem was in org.eclipse.jdt.core.JDTCompiler\nmethod addExtDirs. A FileSet was created without the Project attribute set,\nthen added to a Path.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@469050 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/de36c747cb45e86fb2d6a49bd9185f8d8b173ec1",
        "patched_files": [
            "Path.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PathTest.java"
        ]
    },
    "ant_89ab116": {
        "bug_id": "ant_89ab116",
        "commit": "https://github.com/apache/ant/commit/89ab1168c984084b8d804744ea8a74f268cb1fe5",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/89ab1168c984084b8d804744ea8a74f268cb1fe5/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=89ab1168c984084b8d804744ea8a74f268cb1fe5",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -321,11 +321,13 @@ public void execute() throws BuildException {\n                     + \" in build file \" +  antFile, Project.MSG_VERBOSE);\n             newProject.setUserProperty(\"ant.file\" , antFile);\n \n+            String thisAntFile = getProject().getProperty(\"ant.file\");\n             // Are we trying to call the target in which we are defined (or\n             // the build file if this is a top level task)?\n-            if (newProject.resolveFile(newProject.getProperty(\"ant.file\"))\n-                .equals(getProject().resolveFile(getProject()\n-                .getProperty(\"ant.file\"))) && getOwningTarget() != null) {\n+            if (thisAntFile != null\n+                && newProject.resolveFile(newProject.getProperty(\"ant.file\"))\n+                .equals(getProject().resolveFile(thisAntFile)) \n+                && getOwningTarget() != null) {\n \n                 if (getOwningTarget().getName().equals(\"\")) {\n                     if (getTaskName().equals(\"antcall\")) {",
                "raw_url": "https://github.com/apache/ant/raw/89ab1168c984084b8d804744ea8a74f268cb1fe5/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "4d49898ebf51cee84a9cc93d2093cdd7d900ffae",
                "status": "modified"
            }
        ],
        "message": "Don't die if the ant.file property hasn't been set.\n\nJelly's Ant tag library currently doesn't set this property and each\n<ant> task used in Jelly will result in an NPE otherwise.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276290 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/e33f1d105f6988df483bc075a630c6aa7a3b536a",
        "patched_files": [
            "Ant.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java"
        ]
    },
    "ant_8a7b803": {
        "bug_id": "ant_8a7b803",
        "commit": "https://github.com/apache/ant/commit/8a7b803fb148a2d92f0074479739534a58acc565",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/8a7b803fb148a2d92f0074479739534a58acc565/src/main/org/apache/tools/ant/types/PropertySet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PropertySet.java?ref=8a7b803fb148a2d92f0074479739534a58acc565",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/types/PropertySet.java",
                "patch": "@@ -320,6 +320,9 @@ public Properties getProperties() {\n         for (Iterator iter = names.iterator(); iter.hasNext();) {\n             String name = (String) iter.next();\n             String value = (String) props.get(name);\n+            if (value != null) {\n+                // may be null if a system property has been added\n+                // after the project instance has been initialized\n             if (m != null) {\n                 //map the names\n                 String[] newname = m.mapFileName(name);\n@@ -328,6 +331,7 @@ public Properties getProperties() {\n                 }\n             }\n             properties.setProperty(name, value);\n+            }\n         }\n         return properties;\n     }",
                "raw_url": "https://github.com/apache/ant/raw/8a7b803fb148a2d92f0074479739534a58acc565/src/main/org/apache/tools/ant/types/PropertySet.java",
                "sha": "36e8c1971a28824f2effe8637bb094071a5ef7bc",
                "status": "modified"
            }
        ],
        "message": "avoid NPE in border-cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@426648 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/9d42b05f174699cda1de0ea34f0ddbce6dee3a37",
        "patched_files": [
            "PropertySet.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PropertySetTest.java"
        ]
    },
    "ant_8a9e8a9": {
        "bug_id": "ant_8a9e8a9",
        "commit": "https://github.com/apache/ant/commit/8a9e8a9034cc1ef7699d76a297ac0194a594d215",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/8a9e8a9034cc1ef7699d76a297ac0194a594d215/src/main/org/apache/tools/ant/util/FileUtils.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=8a9e8a9034cc1ef7699d76a297ac0194a594d215",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "patch": "@@ -1303,6 +1303,9 @@ public boolean isUpToDate(long sourceTime, long destTime) {\n \n     \n     private static void closeQuietly(Object o) {\n+        if (null == o) {\n+            return;\n+        }\n         try {\n             if(ReflectUtil.respondsTo(o, \"close\")) {\n                 ReflectUtil.invoke(o, \"close\");",
                "raw_url": "https://github.com/apache/ant/raw/8a9e8a9034cc1ef7699d76a297ac0194a594d215/src/main/org/apache/tools/ant/util/FileUtils.java",
                "sha": "39a1e77cd795cefaff3f197dfb20c46f6f738a1d",
                "status": "modified"
            }
        ],
        "message": "-sorry prevent NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@518897 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/08ece01ed6dd8c26f47fd82f990a183bbc373f5d",
        "patched_files": [
            "FileUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FileUtilsTest.java"
        ]
    },
    "ant_9238ee8": {
        "bug_id": "ant_9238ee8",
        "commit": "https://github.com/apache/ant/commit/9238ee886509e3ab375a3880a0b64f912ff3b4ea",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/9238ee886509e3ab375a3880a0b64f912ff3b4ea/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java?ref=9238ee886509e3ab375a3880a0b64f912ff3b4ea",
                "deletions": 1,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "patch": "@@ -182,7 +182,9 @@ public void testRecreate() {\n     }\n \n     public void tearDown() {\n-        executeTarget(\"teardown\");\n+        if (supportsSymlinks) {\n+            executeTarget(\"teardown\");\n+        }\n     }\n \n }",
                "raw_url": "https://github.com/apache/ant/raw/9238ee886509e3ab375a3880a0b64f912ff3b4ea/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "sha": "57d7ae8d9972865530b5fdb60806c3d05a5163a1",
                "status": "modified"
            }
        ],
        "message": "NPE in cleanup on Windows (all non-Unix?).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276626 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/d761a89b623f3f8665a5f60679bb10f45ab23e45",
        "patched_files": [
            "Symlink.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SymlinkTest.java"
        ]
    },
    "ant_983f0db": {
        "bug_id": "ant_983f0db",
        "commit": "https://github.com/apache/ant/commit/983f0dbc16a4c8b93fae21bfc480b03138104a7a",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/983f0dbc16a4c8b93fae21bfc480b03138104a7a/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=983f0dbc16a4c8b93fae21bfc480b03138104a7a",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -73,6 +73,9 @@ Fixed bugs:\n    within messageLogged while a different thread also accessed one.\n    Bugzilla report 45194\n \n+ * Handle null result of system getProperty() in CommandlineJava.\n+   Similar to Bugzilla report 42334.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/983f0dbc16a4c8b93fae21bfc480b03138104a7a/WHATSNEW",
                "sha": "f76fae1ebac50a158f959d4ccf6d1e24e344f959",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/983f0dbc16a4c8b93fae21bfc480b03138104a7a/src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/CommandlineJava.java?ref=983f0dbc16a4c8b93fae21bfc480b03138104a7a",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "patch": "@@ -140,7 +140,10 @@ public void setSystem() throws BuildException {\n                 Properties p = new Properties();\n                 for (Enumeration e = sys.propertyNames(); e.hasMoreElements();) {\n                     String name = (String) e.nextElement();\n-                    p.put(name, sys.getProperty(name));\n+                    String value = sys.getProperty(name);\n+                    if (name != null && value != null) {\n+                        p.put(name, value);\n+                    }\n                 }\n                 p.putAll(mergePropertySets());\n                 for (Enumeration e = variables.elements(); e.hasMoreElements();) {",
                "raw_url": "https://github.com/apache/ant/raw/983f0dbc16a4c8b93fae21bfc480b03138104a7a/src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "sha": "921eebd817db11873c59d64bbca67cde74381f13",
                "status": "modified"
            }
        ],
        "message": "fix NPE when running inside a container that puts non-String values inside the system properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@671018 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/d8ae5c5bdd298b9b99b5f9d6f82c4255c01036d2",
        "patched_files": [
            "CommandlineJava.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "CommandlineJavaTest.java"
        ]
    },
    "ant_98e4b51": {
        "bug_id": "ant_98e4b51",
        "commit": "https://github.com/apache/ant/commit/98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ChainedMapper.java?ref=98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "patch": "@@ -18,6 +18,7 @@\n \n package org.apache.tools.ant.util;\n \n+import java.util.Objects;\n import java.util.stream.Stream;\n \n /**\n@@ -33,7 +34,7 @@\n     public String[] mapFileName(String sourceFileName) {\n         String[] result = getMappers().stream()\n             .reduce(new String[] { sourceFileName }, (i, m) -> Stream.of(i)\n-                .map(m::mapFileName).flatMap(Stream::of).toArray(String[]::new),\n+                .map(m::mapFileName).filter(Objects::nonNull).flatMap(Stream::of).toArray(String[]::new),\n                 (i, o) -> o);\n         return result == null || result.length == 0 ? null : result;\n     }",
                "raw_url": "https://github.com/apache/ant/raw/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "sha": "8b3e32f7668299d659df1f3b05bbf4ebb291659a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/types/MapperTest.java?ref=98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
                "deletions": 0,
                "filename": "src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "patch": "@@ -35,6 +35,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n@@ -224,6 +225,9 @@ public void testChained() {\n         List list = Arrays.asList(targets);\n         assertTrue(\"cannot find expected target \\\"def\\\"\", list.contains(\"def\"));\n         assertTrue(\"cannot find expected target \\\"ghi\\\"\", list.contains(\"ghi\"));\n+\n+        targets = fileNameMapper.mapFileName(\"z\");\n+        assertNull(targets);\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/ant/raw/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "sha": "77c181107e16be18213b60d6ba84e70a05c1fb0e",
                "status": "modified"
            }
        ],
        "message": "bz-62086 Fix NPE in ChainedMapper.\n\nThis closes #59 pull request at github/apache/ant repo\n\nThis NPE happens whenever any of the sub mappers returns `null`, which may\nhappen eg. with `GlobPatternMapper`.",
        "parent": "https://github.com/apache/ant/commit/f20b41c9b6b27871eacb1fafcd00242ae6285dee",
        "patched_files": [
            "Mapper.java",
            "ChainedMapper.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "MapperTest.java"
        ]
    },
    "ant_a2ab860": {
        "bug_id": "ant_a2ab860",
        "commit": "https://github.com/apache/ant/commit/a2ab860629780bad667de39114aa335ffdc3d323",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/a2ab860629780bad667de39114aa335ffdc3d323/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java?ref=a2ab860629780bad667de39114aa335ffdc3d323",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "patch": "@@ -64,7 +64,7 @@ protected SymbolicLinkUtils() {\n      * canonical and absolute paths of the file are identical--this\n      * may lead to false positives on some platforms.</p>\n      *\n-     * @param file the file to test.\n+     * @param file the file to test.  Must not be null.\n      *\n      * @return true if the file is a symbolic link.\n      * @throws IOException on error.\n@@ -104,7 +104,9 @@ public boolean isSymbolicLink(String name) throws IOException {\n      */\n     public boolean isSymbolicLink(File parent, String name)\n         throws IOException {\n-        File toTest = new File(parent.getCanonicalPath(), name);\n+        File toTest = parent != null\n+            ? new File(parent.getCanonicalPath(), name)\n+            : new File(name);\n         return !toTest.getAbsolutePath().equals(toTest.getCanonicalPath());\n     }\n ",
                "raw_url": "https://github.com/apache/ant/raw/a2ab860629780bad667de39114aa335ffdc3d323/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "sha": "83fc0ee79b07654c993e8388d90d0a479264c6d2",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/ant/blob/a2ab860629780bad667de39114aa335ffdc3d323/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java?ref=a2ab860629780bad667de39114aa335ffdc3d323",
                "deletions": 0,
                "filename": "src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.tools.ant.util;\n+\n+import java.io.IOException;\n+import junit.framework.TestCase;\n+\n+public class SymlinkUtilsTest extends TestCase {\n+\n+    private static final SymbolicLinkUtils SYMLINK_UTILS =\n+        SymbolicLinkUtils.getSymbolicLinkUtils();\n+\n+    public void testRootIsNoSymlink() throws IOException {\n+        assertFalse(SYMLINK_UTILS.isSymbolicLink(\"/\"));\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/ant/raw/a2ab860629780bad667de39114aa335ffdc3d323/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "sha": "85c12baf4ef430064b0f2d77ecd9ad1b19adf626",
                "status": "added"
            }
        ],
        "message": "isSymbolicLink throws a NPE if invoked for the file system root\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@935069 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/f70ce7b08a54dc6fea51c96a3ee883164e60d47c",
        "patched_files": [
            "SymbolicLinkUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SymlinkUtilsTest.java"
        ]
    },
    "ant_a679a5b": {
        "bug_id": "ant_a679a5b",
        "commit": "https://github.com/apache/ant/commit/a679a5bbce605a1e4326d56030baeecb3a1bf4b7",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/a679a5bbce605a1e4326d56030baeecb3a1bf4b7/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=a679a5bbce605a1e4326d56030baeecb3a1bf4b7",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "patch": "@@ -561,6 +561,9 @@ private void clearCaches() {\n             return listFiles(directory, true);\n         }\n         private void checkRemoteSensitivity(FTPFile[] array, String directory) {\n+            if (array == null) {\n+                return;\n+            }\n             boolean candidateFound = false;\n             String target = null;\n             for (int icounter = 0; icounter < array.length; icounter++) {",
                "raw_url": "https://github.com/apache/ant/raw/a679a5bbce605a1e4326d56030baeecb3a1bf4b7/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "sha": "2781499f82b8504cd66d102b5d609e674910b70f",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE in method CheckRemoteSensitivity\nPR: 24440\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275615 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/3838c6ba287baf4bb3566ed47b0c99840b7ebba8",
        "patched_files": [
            "FTP.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FTPTest.java"
        ]
    },
    "ant_a9592b8": {
        "bug_id": "ant_a9592b8",
        "commit": "https://github.com/apache/ant/commit/a9592b869e5648b3508ecd855bddf1dc182cb8f6",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/a9592b869e5648b3508ecd855bddf1dc182cb8f6/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=a9592b869e5648b3508ecd855bddf1dc182cb8f6",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -154,6 +154,9 @@ Fixed bugs:\n * War task failed with \"No WEB-INF/web.xml file was added\" when called\n   a second time. Bugzilla 43121.\n \n+* FilterMapper could throw an NPE.\n+  Bugzilla 43292.\n+\n Other changes:\n --------------\n * <script> now has basic support for JavaFX scripts",
                "raw_url": "https://github.com/apache/ant/raw/a9592b869e5648b3508ecd855bddf1dc182cb8f6/WHATSNEW",
                "sha": "f5c34f1343865ddfd0fe84c4bf03ed2f5b9170a7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/a9592b869e5648b3508ecd855bddf1dc182cb8f6/src/main/org/apache/tools/ant/util/FileUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=a9592b869e5648b3508ecd855bddf1dc182cb8f6",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "patch": "@@ -930,7 +930,7 @@ public static String readFully(Reader rdr, int bufferSize)\n                 textBuffer.append(new String(buffer, 0, bufferLength));\n             }\n         }\n-        return (textBuffer == null) ? null : textBuffer.toString();\n+        return (textBuffer == null) ? \"\" : textBuffer.toString();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/ant/raw/a9592b869e5648b3508ecd855bddf1dc182cb8f6/src/main/org/apache/tools/ant/util/FileUtils.java",
                "sha": "95e463972848cf99649feaf92122ef089a4a5dff",
                "status": "modified"
            }
        ],
        "message": "Bugzilla 43292: filtermapper could throw an NPE. - change FileUtils to return an empty string rather than null for zero-length files\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@572302 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/709b55e997f18733d16471926b27d2776cd27402",
        "patched_files": [
            "FileUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FileUtilsTest.java"
        ]
    },
    "ant_ab3f805": {
        "bug_id": "ant_ab3f805",
        "commit": "https://github.com/apache/ant/commit/ab3f805895e7c27ca8a724d94c34fabbc9cf3233",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/ab3f805895e7c27ca8a724d94c34fabbc9cf3233/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=ab3f805895e7c27ca8a724d94c34fabbc9cf3233",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "patch": "@@ -553,7 +553,9 @@ public void executeMain() throws BuildException {\n                     }\n                     addResources(oldFiles, r, zOut);\n                 }\n-                zOut.setComment(comment);\n+                if (zOut != null) {\n+                    zOut.setComment(comment);\n+                }\n                 finalizeZipOutputStream(zOut);\n \n                 // If we've been successful on an update, delete the",
                "raw_url": "https://github.com/apache/ant/raw/ab3f805895e7c27ca8a724d94c34fabbc9cf3233/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "sha": "739dc3379ee1defd3dde49789df5c5f36c312056",
                "status": "modified"
            }
        ],
        "message": "NPE when adding comment to zip file that is not there\nPR: 33779\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277746 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/756f96fdf3b1e01b2a0ddd5d1051770dec2540f2",
        "patched_files": [
            "Zip.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ZipTest.java"
        ]
    },
    "ant_abd749a": {
        "bug_id": "ant_abd749a",
        "commit": "https://github.com/apache/ant/commit/abd749ac59547f30196666617311f6737bf4369d",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=abd749ac59547f30196666617311f6737bf4369d",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -42,6 +42,9 @@ Fixed bugs:\n * <replace> would count some internal character replacements when\n   reporting the number of replaced tokens.\n \n+* <concat> would cause an exception if a <filelist> pointed to files\n+  that do not exist.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/WHATSNEW",
                "sha": "045628d35f9716a2d0a2e978fdb0002bc36c255c",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/etc/testcases/taskdefs/concat.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/concat.xml?ref=abd749ac59547f30196666617311f6737bf4369d",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/concat.xml",
                "patch": "@@ -31,4 +31,10 @@\n     <concat>Hello, ${world}!</concat>\n   </target>\n \n+  <target name=\"test6\">\n+    <concat destfile=\"TESTDEST\" append=\"true\">\n+      <filelist dir=\"${basedir}\" files=\"thisfiledoesnotexist\"/>\n+    </concat>\n+  </target>\n+\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/etc/testcases/taskdefs/concat.xml",
                "sha": "a38ae899b6aa6b1749758c53d39a2cbf5d5e83c7",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Concat.java?ref=abd749ac59547f30196666617311f6737bf4369d",
                "deletions": 4,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "patch": "@@ -298,9 +298,8 @@ public void reset() {\n     private void catFiles(File base, String[] files) {\n \n         // First, create a list of absolute paths for the input files.\n-        final int len = files.length;\n-        String[] input = new String[len];\n-        for (int i = 0; i < len; i++) {\n+        Vector inputFileNames = new Vector();\n+        for (int i = 0; i < files.length; i++) {\n \n             File current = new File(base, files[i]);\n \n@@ -314,9 +313,13 @@ private void catFiles(File base, String[] files) {\n                 continue;\n             }\n \n-            input[i] = current.getAbsolutePath();\n+            inputFileNames.addElement(current.getAbsolutePath());\n         }\n \n+        final int len = inputFileNames.size();\n+        String[] input = new String[len];\n+        inputFileNames.copyInto(input);\n+\n         // Next, perform the concatenation.\n         if (encoding == null) {\n             OutputStream os = null;",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "sha": "fcf90b23d1b39fc94fca689f75d047a0940ffddb",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java?ref=abd749ac59547f30196666617311f6737bf4369d",
                "deletions": 0,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "patch": "@@ -161,4 +161,9 @@ public void test5() {\n         expectLog(\"test5\", \"Hello, World!\");\n     }\n \n+    public void test6() {\n+        expectLogContaining(\"test6\", \n+                            \"src/etc/testcases/taskdefs/thisfiledoesnotexist does not exist.\");\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "sha": "3f107036e37a5783f6323ca6c64dca2e521d68de",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in <concat>.\n\nPR: 14310\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273518 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/1967c958ff5363f25742a8b7687a0c9dddcfa38a",
        "patched_files": [
            "WHATSNEW.java",
            "Concat.java",
            "concat.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ConcatTest.java"
        ]
    },
    "ant_ac78dc1": {
        "bug_id": "ant_ac78dc1",
        "commit": "https://github.com/apache/ant/commit/ac78dc16022004312e74b42fbe14b9936341855e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/ac78dc16022004312e74b42fbe14b9936341855e/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=ac78dc16022004312e74b42fbe14b9936341855e",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -18,6 +18,9 @@ Fixed bugs:\n \n * <javac> fails with NPE when compiling with eclipse ecj 3.1.x.\n   Bugzilla 40839.\n+\n+* JUnitTestRunner had a NPE when unable to create parser, the exception\n+  containing the error did not get reported. Bugzilla 36733.\n   \n Other changes:\n --------------",
                "raw_url": "https://github.com/apache/ant/raw/ac78dc16022004312e74b42fbe14b9936341855e/WHATSNEW",
                "sha": "1ee9995b343642248ca385d34705b4397a2e088c",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/ac78dc16022004312e74b42fbe14b9936341855e/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java?ref=ac78dc16022004312e74b42fbe14b9936341855e",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "patch": "@@ -288,6 +288,7 @@ public void write(int b) {}\n \n         Test suite = null;\n         Throwable exception = null;\n+        boolean startTestSuiteSuccess = false;\n \n         try {\n \n@@ -368,6 +369,7 @@ public void write(int b) {}\n             long start = System.currentTimeMillis();\n \n             fireStartTestSuite();\n+            startTestSuiteSuccess = true;        \n             if (exception != null) { // had an exception constructing suite\n                 for (int i = 0; i < formatters.size(); i++) {\n                     ((TestListener) formatters.elementAt(i))\n@@ -405,8 +407,10 @@ public void write(int b) {}\n             systemError = null;\n             systemOut.close();\n             systemOut = null;\n-            sendOutAndErr(new String(outStrm.toByteArray()),\n-                          new String(errStrm.toByteArray()));\n+            if (startTestSuiteSuccess) {\n+                sendOutAndErr(new String(outStrm.toByteArray()),\n+                              new String(errStrm.toByteArray()));\n+            }\n         }\n         fireEndTestSuite();\n ",
                "raw_url": "https://github.com/apache/ant/raw/ac78dc16022004312e74b42fbe14b9936341855e/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "sha": "51d2f671b6cfc7dacdaa762cb183518ba0c995e9",
                "status": "modified"
            }
        ],
        "message": "Bugzilla 36733, NPE when failure in creating parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@469303 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/873b850f39a26e4911d612c157622751ac9582f9",
        "patched_files": [
            "JUnitTestRunner.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JUnitTestRunnerTest.java"
        ]
    },
    "ant_b0d9f8a": {
        "bug_id": "ant_b0d9f8a",
        "commit": "https://github.com/apache/ant/commit/b0d9f8aa0137890a06875525db92bf44decfa512",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/b0d9f8aa0137890a06875525db92bf44decfa512/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=b0d9f8aa0137890a06875525db92bf44decfa512",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -138,6 +138,10 @@ Fixed bugs:\n    from a resource or string explicitly.\n    Bugzilla Report 49587.\n \n+ * Project#setDefault threw an excpetion when null was passed in as\n+   argument, even though the javadoc says, null is a valid value.\n+   Bugzilla Report 49803.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/b0d9f8aa0137890a06875525db92bf44decfa512/WHATSNEW",
                "sha": "d865037bfc2936c42fcf87ec34418284160d0f48",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/b0d9f8aa0137890a06875525db92bf44decfa512/src/main/org/apache/tools/ant/Project.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Project.java?ref=b0d9f8aa0137890a06875525db92bf44decfa512",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/Project.java",
                "patch": "@@ -729,7 +729,9 @@ public String getDefaultTarget() {\n      *                      no default target.\n      */\n     public void setDefault(String defaultTarget) {\n-        setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);\n+        if (defaultTarget != null) {\n+            setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);\n+        }\n         this.defaultTarget = defaultTarget;\n     }\n ",
                "raw_url": "https://github.com/apache/ant/raw/b0d9f8aa0137890a06875525db92bf44decfa512/src/main/org/apache/tools/ant/Project.java",
                "sha": "27f5f3289a2da06653cdc4a2e4e174cb8033c296",
                "status": "modified"
            }
        ],
        "message": "NPE in Project.setDefault.  PR 49803\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@988095 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/7119b3f030ddaa3e88117fa37aeb17b65cdab485",
        "patched_files": [
            "Project.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ProjectTest.java"
        ]
    },
    "ant_b8c3556": {
        "bug_id": "ant_b8c3556",
        "commit": "https://github.com/apache/ant/commit/b8c35567eee957064ae29052eae63ee1b4f9c7aa",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -50,6 +50,10 @@ Fixed bugs:\n    handledirsep=\"true\".\n    Bugzilla Report 53399.\n \n+ * <expandproperties> filter caused a NullPointerExcpetion when input\n+   was empty.\n+   Bugzilla Report 53626.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/WHATSNEW",
                "sha": "eded0c2bf21ce63737050ea360765b295bf160e3",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/filters/ExpandProperties.java?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "deletions": 3,
                "filename": "src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "patch": "@@ -107,9 +107,13 @@ public Object getProperty(String name) {\n                         }\n                     };\n                 }\n-                buffer = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)\n-                        .getExpanders(), getProperty).parseProperties(data).toString()\n-                        .toCharArray();\n+                Object expanded = new ParseProperties(project, PropertyHelper\n+                                                      .getPropertyHelper(project)\n+                                                      .getExpanders(),\n+                                                      getProperty)\n+                    .parseProperties(data);\n+                buffer = expanded == null ? new char[0]\n+                    : expanded.toString().toCharArray();\n             }\n             if (index < buffer.length) {\n                 return buffer[index++];",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "sha": "524a799b1d2fe034a600ee8579e2219066c6c630",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/tests/antunit/filters/expandproperties-test.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/filters/expandproperties-test.xml?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "deletions": 0,
                "filename": "src/tests/antunit/filters/expandproperties-test.xml",
                "patch": "@@ -74,4 +74,19 @@\n     </au:assertTrue>\n   </target>\n \n+  <target name=\"testEmptyResource\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=53626\">\n+    <au:assertTrue>\n+      <resourcesmatch>\n+        <string value=\"\" />\n+        <concat>\n+          <string value=\"\" />\n+          <filterchain>\n+            <expandproperties />\n+          </filterchain>\n+        </concat>\n+      </resourcesmatch>\n+    </au:assertTrue>\n+  </target>\n+\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/tests/antunit/filters/expandproperties-test.xml",
                "sha": "5dff8320c6aa7abf9a2142e3af85b76608b844a6",
                "status": "modified"
            }
        ],
        "message": "NPE in ExpandProperties when input is empty.  PR 53626\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1372266 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/439545ad279327179a54ef755850acbf0a33e648",
        "patched_files": [
            "ExpandProperties.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "expandproperties-test.java"
        ]
    },
    "ant_bb1f1c6": {
        "bug_id": "ant_bb1f1c6",
        "commit": "https://github.com/apache/ant/commit/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0/src/main/org/apache/tools/ant/taskdefs/Input.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Input.java?ref=bb1f1c678b69a5a0df6c94889146a0f1b95bfca0",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Input.java",
                "patch": "@@ -133,7 +133,7 @@ public Input () {\n     }\n \n     /**\n-     * Actual test method executed by jakarta-ant.\n+     * Actual method executed by jakarta-ant.\n      * @exception BuildException\n      */\n     public void execute () throws BuildException {\n@@ -152,7 +152,7 @@ public void execute () throws BuildException {\n             && defaultvalue != null) {\n             value = defaultvalue;\n         }\n-        if (addproperty != null) {\n+        if (addproperty != null && value != null) {\n             getProject().setNewProperty(addproperty, value);\n         }\n     }",
                "raw_url": "https://github.com/apache/ant/raw/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0/src/main/org/apache/tools/ant/taskdefs/Input.java",
                "sha": "752b3d7cf97497e210b0b4cba1c5bfc0a074d58c",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE if input failed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274178 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/6528412d219b05ca763dc198bd3e7d75754e57c5",
        "patched_files": [
            "Input.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "InputTest.java"
        ]
    },
    "ant_bc28d31": {
        "bug_id": "ant_bc28d31",
        "commit": "https://github.com/apache/ant/commit/bc28d31407036126e05e4d64f2b138af69603c7a",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/ant/blob/bc28d31407036126e05e4d64f2b138af69603c7a/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=bc28d31407036126e05e4d64f2b138af69603c7a",
                "deletions": 4,
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "patch": "@@ -155,12 +155,19 @@ public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,\n         Union result = new Union();\n         for (Iterator iter = source.iterator(); iter.hasNext();) {\n             Resource sr = (Resource) iter.next();\n-            String[] targetnames = mapper.mapFileName(\n-                sr.getName().replace('/', File.separatorChar));\n+            String srName = sr.getName();\n+            srName = srName == null\n+                ? srName : srName.replace('/', File.separatorChar);\n \n+            String[] targetnames = null;\n+            try {\n+                targetnames = mapper.mapFileName(srName);\n+            } catch (Exception e) {\n+\t\tlogTo.log(\"Caught \" + e + \" mapping resource \" + sr,\n+                    Project.MSG_VERBOSE);\n+            }\n             if (targetnames == null || targetnames.length == 0) {\n-                logTo.log(sr.getName()\n-                      + \" skipped - don\\'t know how to handle it\",\n+                logTo.log(sr + \" skipped - don\\'t know how to handle it\",\n                       Project.MSG_VERBOSE);\n                 continue;\n             }",
                "raw_url": "https://github.com/apache/ant/raw/bc28d31407036126e05e4d64f2b138af69603c7a/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "sha": "9b681a596ed6b8a1b613223b1540af0918aba006",
                "status": "modified"
            }
        ],
        "message": "last minute; avoid NPE when attempting to map no-name resource. Bugzilla 39960.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@484850 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/efa433f65ff68b646d9b7232f0968a9b697c5cc2",
        "patched_files": [
            "ResourceUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ResourceUtilsTest.java"
        ]
    },
    "ant_c09b4ad": {
        "bug_id": "ant_c09b4ad",
        "commit": "https://github.com/apache/ant/commit/c09b4ad628172a350f73fe99bdc56f33e4008d59",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/WHATSNEW",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -234,6 +234,8 @@ Fixed bugs:\n * <unzip> and <untar> could leave file handles open on invalid\n   archives.  Bugzilla report 34893.\n \n+* propertyset threw NPE with nested, mapped propertysets.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/WHATSNEW",
                "sha": "517d8cec96d1db0ff7eccb9b43ed88a944a21ad3",
                "status": "modified"
            },
            {
                "additions": 39,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/etc/testcases/types/propertyset.xml",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/types/propertyset.xml?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "deletions": 0,
                "filename": "src/etc/testcases/types/propertyset.xml",
                "patch": "@@ -52,4 +52,43 @@\n       exp=\"barB=BarB, fooA=FooA\"\n       got=\"${toString:my-set}\"/>\n   </target>\n+\n+  <target name=\"nested-mapped\">\n+    <propertyset id=\"nested-mapped\">\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-foo\"/>\n+        <globmapper from=\"foo*\" to=\"boo*\" />\n+      </propertyset>\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-bar\"/>\n+        <globmapper from=\"bar*\" to=\"far*\" />\n+      </propertyset>\n+    </propertyset>\n+    <expect.equals\n+      test=\"nested mapped propertysets\"\n+      exp=\"booA=FooA, farB=BarB\"\n+      got=\"${toString:nested-mapped}\"/>\n+  </target>\n+\n+  <target name=\"nested-mapped-mapped\">\n+    <propertyset id=\"nested-mapped-mapped\">\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-foo\"/>\n+        <globmapper from=\"foo*\" to=\"boo*\" />\n+      </propertyset>\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-bar\"/>\n+        <globmapper from=\"bar*\" to=\"far*\" />\n+      </propertyset>\n+      <mapper>\n+        <globmapper from=\"boo*\" to=\"hoo*\" />\n+        <globmapper from=\"far*\" to=\"near*\" />\n+      </mapper>\n+    </propertyset>\n+    <expect.equals\n+      test=\"nested mapped propertysets\"\n+      exp=\"hooA=FooA, nearB=BarB\"\n+      got=\"${toString:nested-mapped-mapped}\"/>\n+  </target>\n+\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/etc/testcases/types/propertyset.xml",
                "sha": "3c2d2d8e35de40b321acdfd21cbb2e0493339cb5",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/main/org/apache/tools/ant/types/PropertySet.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PropertySet.java?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "deletions": 14,
                "filename": "src/main/org/apache/tools/ant/types/PropertySet.java",
                "patch": "@@ -282,6 +282,12 @@ public Properties getProperties() {\n         Hashtable props =\n             prj == null ? getAllSystemProperties() : prj.getProperties();\n \n+        //quick & dirty, to make nested mapped p-sets work:\n+        for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {\n+            PropertySet set = (PropertySet) e.nextElement();\n+            props.putAll(set.getProperties());\n+        }\n+\n         if (getDynamic() || cachedNames == null) {\n             names = new HashSet();\n             addPropertyNames(names, props);\n@@ -382,20 +388,7 @@ private void addPropertyNames(Set names, Hashtable properties) {\n      * @return the referenced PropertySet.\n      */\n     protected PropertySet getRef() {\n-        if (!isChecked()) {\n-            Stack stk = new Stack();\n-            stk.push(this);\n-            dieOnCircularReference(stk, getProject());\n-        }\n-\n-        Object o = getRefid().getReferencedObject(getProject());\n-        if (!(o instanceof PropertySet)) {\n-            String msg = getRefid().getRefId()\n-                + \" doesn\\'t denote a propertyset\";\n-            throw new BuildException(msg);\n-        } else {\n-            return (PropertySet) o;\n-        }\n+        return (PropertySet) getCheckedRef(PropertySet.class, \"propertyset\");\n     }\n \n     /**\n@@ -469,4 +462,5 @@ public String toString() {\n         }\n         return b.toString();\n     }\n+\n }",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/main/org/apache/tools/ant/types/PropertySet.java",
                "sha": "4b6f19a366c3d9a11feffbe6970a3df6e684b16a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/types/PropertySetTest.java?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "deletions": 0,
                "filename": "src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "patch": "@@ -36,4 +36,12 @@ public void setUp() {\n     public void testReferenceToTwoReferences() {\n         executeTarget(\"reference-to-two-references\");\n     }\n+\n+    public void testNestedMapped() {\n+        executeTarget(\"nested-mapped\");\n+    }\n+\n+    public void testNestedMappedMapped() {\n+        executeTarget(\"nested-mapped-mapped\");\n+    }\n }",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "sha": "28164e7c4fa9bcc0cdaa219971a3661fd9be46ba",
                "status": "modified"
            }
        ],
        "message": "propertyset threw NPE with nested, mapped propertysets.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278290 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/3d0a16ece7d56d550d94048a2e7e1986c064e3a7",
        "patched_files": [
            "PropertySet.java",
            "WHATSNEW.java",
            "propertyset.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PropertySetTest.java"
        ]
    },
    "ant_ce81059": {
        "bug_id": "ant_ce81059",
        "commit": "https://github.com/apache/ant/commit/ce81059049a47a2d9da23d84245af9763114cd3f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/CONTRIBUTORS",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "deletions": 0,
                "filename": "CONTRIBUTORS",
                "patch": "@@ -269,6 +269,7 @@ Philip Hourihane\n Phillip Wells\n Pierre Delisle\n Pierre Dittgen\n+riasol\n R Handerson\n Rami Ojares\n Randy Watler",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/CONTRIBUTORS",
                "sha": "bd35ada85ffba0d178b51b500661c19aa8533173",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -192,6 +192,9 @@ Fixed bugs:\n    provided using non-fileset resource collections.\n    Bugzilla Issue 50115.\n \n+*  ftp chmod could throw a NPE.\n+   Bugzilla report 50217.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/WHATSNEW",
                "sha": "88f656d0524bef86860d714bd678648f1965bcc2",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/contributors.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "deletions": 0,
                "filename": "contributors.xml",
                "patch": "@@ -1468,4 +1468,8 @@\n     <first>Zdenek</first>\n     <last>Wagner</last>\n   </name>\n+  <name>\n+    <first/>\n+    <last>riasol</last>\n+  </name>\n </contributors>",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/contributors.xml",
                "sha": "8f8879a07563fe7be6ce5611a612b533ce7c0053",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "patch": "@@ -2102,7 +2102,7 @@ protected void doSiteCommand(FTPClient ftp, String theCMD)\n             myReply = ftp.getReplyStrings();\n \n             for (int x = 0; x < myReply.length; x++) {\n-                if (myReply[x].indexOf(\"200\") == -1) {\n+                if (myReply[x] != null && myReply[x].indexOf(\"200\") == -1) {\n                     log(myReply[x], Project.MSG_WARN);\n                 }\n             }",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "sha": "405bfa539a3f6b858dd98372e670fb7b08769c6d",
                "status": "modified"
            }
        ],
        "message": "fix for bug 50217, NPE in ftp chmod\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1032188 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/8e1d92a9a014ff290213883c678b2d01bfab9c2c",
        "patched_files": [
            "FTP.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FTPTest.java"
        ]
    },
    "ant_d2405f4": {
        "bug_id": "ant_d2405f4",
        "commit": "https://github.com/apache/ant/commit/d2405f4003191f71936d22f956496e8f28035cfa",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/d2405f4003191f71936d22f956496e8f28035cfa/src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Manifest.java?ref=d2405f4003191f71936d22f956496e8f28035cfa",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "patch": "@@ -707,7 +707,11 @@ public boolean equals(Object rhs) {\n         }\n \n         Manifest rhsManifest = (Manifest)rhs;\n-        if (!manifestVersion.equals(rhsManifest.manifestVersion)) {\n+        if (manifestVersion == null) {\n+            if (rhsManifest.manifestVersion != null) {\n+                return false;\n+            }\n+        } else if (!manifestVersion.equals(rhsManifest.manifestVersion)) {\n             return false;\n         }\n         if (sections.size() != rhsManifest.sections.size()) {",
                "raw_url": "https://github.com/apache/ant/raw/d2405f4003191f71936d22f956496e8f28035cfa/src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "sha": "eea2966741a37ffaab63bdb2d72f2298654d61d8",
                "status": "modified"
            }
        ],
        "message": "fix NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@270142 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/4f98ab89b6dbdd6bb5d3d38d7a3c751282dc2dea",
        "patched_files": [
            "Manifest.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ManifestTest.java"
        ]
    },
    "ant_d24621d": {
        "bug_id": "ant_d24621d",
        "commit": "https://github.com/apache/ant/commit/d24621d411a4747336fc76f8dcd2910b43b888ca",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "patch": "@@ -253,7 +253,7 @@ protected synchronized void formatError(String type, Test test,\n         try {\n             resultWriter.write(formatTest(test) + type);\n             resultWriter.newLine();\n-            resultWriter.write(error.getMessage());\n+            resultWriter.write(String.valueOf(error.getMessage()));\n             resultWriter.newLine();\n             String strace = JUnitTestRunner.getFilteredTrace(error);\n             resultWriter.write(strace);",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "sha": "e7b7a076d00f1fe83ffa9b1e325171006850e59d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "patch": "@@ -1969,13 +1969,13 @@ private static JUnitTest createDummyTestForBatchTest(JUnitTest test) {\n \n     private static void printDual(BufferedWriter w, PrintStream s, String text)\n         throws IOException {\n-        w.write(text);\n+        w.write(String.valueOf(text));\n         s.print(text);\n     }\n \n     private static void printlnDual(BufferedWriter w, PrintStream s, String text)\n         throws IOException {\n-        w.write(text);\n+        w.write(String.valueOf(text));\n         w.newLine();\n         s.println(text);\n     }",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "sha": "07c7b7983f7073896cd8b3ac0b5ee3de61f7edb0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "patch": "@@ -247,7 +247,7 @@ private void formatError(String type, Test test, Throwable t) {\n             try {\n                 wri.write(type);\n                 wri.newLine();\n-                wri.write(t.getMessage());\n+                wri.write(String.valueOf(t.getMessage()));\n                 wri.newLine();\n                 String strace = JUnitTestRunner.getFilteredTrace(t);\n                 wri.write(strace);",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "sha": "6adae95e81511b9c7691f6289d127ade36236949",
                "status": "modified"
            }
        ],
        "message": "potential NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@793516 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/104de0d7d21754b2d49321690b46762b699bdd61",
        "patched_files": [
            "JUnitTask.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JUnitTaskTest.java"
        ]
    },
    "ant_d2c225e": {
        "bug_id": "ant_d2c225e",
        "commit": "https://github.com/apache/ant/commit/d2c225e3700130775183d20109426819f2b989ce",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/ant1compat.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/ant1compat.xml?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 0,
                "filename": "proposal/myrmidon/ant1compat.xml",
                "patch": "@@ -63,6 +63,8 @@\n           <exclude name=\"${ant1.package}/ant/Main.class\"/>\n           <exclude name=\"${ant1.package}/ant/Task.class\"/>\n           <exclude name=\"${ant1.package}/ant/BuildException.class\"/>\n+          <exclude name=\"${ant1.package}/ant/taskdefs/Ant.class\"/>\n+          <exclude name=\"${ant1.package}/ant/taskdefs/CallTarget.class\"/>\n           <exclude name=\"${ant1.package}/ant/types/Path.class\"/>\n         </patternset>\n ",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/ant1compat.xml",
                "sha": "3d625bfb448459d3ba8e2106491d1c5f4f5eed25",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/ant1compat/ant-descriptor.xml?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 2,
                "filename": "proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "patch": "@@ -12,13 +12,15 @@\n         <!-- TaskAdapter tasks -->\n         <task name=\"ant1.condition\"\n             classname=\"org.apache.tools.ant.Ant1CompatTaskAdapter\" />\n+            \n+        <!-- Tasks specialised for myrmidon -->\n+        <task name=\"ant1.ant\"\n+              classname=\"org.apache.tools.ant.taskdefs.Ant\" />\n \n         <!-- Tasks not currently supported.\n \n                 <task name=\"ant1.antcall\"\n                     classname=\"org.apache.tools.ant.taskdefs.CallTarget\" />\n-                <task name=\"ant1.ant\"\n-                    classname=\"org.apache.tools.ant.taskdefs.Ant\" />\n         -->\n \n         <!-- standard ant tasks -->",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "sha": "76b5fd7fa755c659ca307547970dc2589a82a322",
                "status": "modified"
            },
            {
                "additions": 300,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 300,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 0,
                "filename": "proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -0,0 +1,300 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.tools.ant.taskdefs;\n+\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.util.FileUtils;\n+import org.apache.avalon.framework.configuration.DefaultConfiguration;\n+import org.apache.avalon.framework.configuration.Configuration;\n+import org.apache.myrmidon.interfaces.executor.Executor;\n+import org.apache.myrmidon.interfaces.executor.ExecutionFrame;\n+import org.apache.myrmidon.api.TaskException;\n+import java.io.File;\n+import java.util.Vector;\n+import java.util.Iterator;\n+\n+/**\n+ * Call Ant in a sub-project.\n+ *\n+ *  <pre>\n+ *  &lt;target name=&quot;foo&quot; depends=&quot;init&quot;&gt;\n+ *    &lt;ant antfile=&quot;build.xml&quot; target=&quot;bar&quot; &gt;\n+ *      &lt;property name=&quot;property1&quot; value=&quot;aaaaa&quot; /&gt;\n+ *      &lt;property name=&quot;foo&quot; value=&quot;baz&quot; /&gt;\n+ *    &lt;/ant&gt;</SPAN>\n+ *  &lt;/target&gt;</SPAN>\n+ *\n+ *  &lt;target name=&quot;bar&quot; depends=&quot;init&quot;&gt;\n+ *    &lt;echo message=&quot;prop is ${property1} ${foo}&quot; /&gt;\n+ *  &lt;/target&gt;\n+ * </pre>\n+ *\n+ *\n+ * @author costin@dnt.ro\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ */\n+public class Ant extends Task {\n+\n+    /** the basedir where is executed the build file */\n+    private File dir = null;\n+    \n+    /** the build.xml file (can be absolute) in this case dir will be ignored */\n+    private String antFile = null;\n+    \n+    /** the target to call if any */\n+    private String target = null;\n+    \n+    /** the output */\n+    private String output = null;\n+    \n+    /** should we inherit properties from the parent ? */\n+    private boolean inheritAll = true;\n+    \n+    /** should we inherit references from the parent ? */\n+    private boolean inheritRefs = false;\n+    \n+    /** the properties to pass to the new project */\n+    private Vector properties = new Vector();\n+    \n+    /** the references to pass to the new project */\n+    private Vector references = new Vector();\n+\n+    /**\n+     * If true, inherit all properties from parent Project\n+     * If false, inherit only userProperties and those defined\n+     * inside the ant call itself\n+     */\n+    public void setInheritAll(boolean value) {\n+       inheritAll = value;\n+    }\n+\n+    /**\n+     * If true, inherit all references from parent Project\n+     * If false, inherit only those defined\n+     * inside the ant call itself\n+     */\n+    public void setInheritRefs(boolean value) {\n+        inheritRefs = value;\n+    }\n+\n+    /**\n+     * ...\n+     */\n+    public void setDir(File d) {\n+        this.dir = d;\n+    }\n+\n+    /**\n+     * set the build file, it can be either absolute or relative.\n+     * If it is absolute, <tt>dir</tt> will be ignored, if it is\n+     * relative it will be resolved relative to <tt>dir</tt>.\n+     */\n+    public void setAntfile(String s) {\n+        // @note: it is a string and not a file to handle relative/absolute\n+        // otherwise a relative file will be resolved based on the current\n+        // basedir.\n+        this.antFile = s;\n+    }\n+\n+    /**\n+     * set the target to execute. If none is defined it will\n+     * execute the default target of the build file\n+     */\n+    public void setTarget(String s) {\n+        this.target = s;\n+    }\n+\n+    public void setOutput(String s) {\n+        this.output = s;\n+    }\n+\n+    /** create a property to pass to the new project as a 'user property' */\n+    public Property createProperty() {\n+        Property p = new Property(true);\n+        properties.addElement( p );\n+        return p;\n+    }\n+\n+    /** \n+     * create a reference element that identifies a data type that\n+     * should be carried over to the new project.\n+     */\n+    public void addReference(Reference r) {\n+        references.addElement(r);\n+    }\n+\n+    /**\n+     * Helper class that implements the nested &lt;reference&gt;\n+     * element of &lt;ant&gt; and &lt;antcall&gt;.\n+     */\n+    public static class Reference \n+        extends org.apache.tools.ant.types.Reference {\n+\n+        public Reference() {super();}\n+        \n+        private String targetid=null;\n+        public void setToRefid(String targetid) { this.targetid=targetid; }\n+        public String getToRefid() { return targetid; }\n+    }\n+\n+    /**\n+     * Called by the project to let the task do its work. This method may be\n+     * called more than once, if the task is invoked more than once.\n+     * For example,\n+     * if target1 and target2 both depend on target3, then running\n+     * \"ant target1 target2\" will run all tasks in target3 twice.\n+     *\n+     * @exception BuildException if something goes wrong with the build\n+     */\n+    public void execute() throws BuildException\n+    {\n+        Object ant1project = unsetProject();\n+\n+        try\n+        {\n+            Configuration antConfig = buildAntTaskConfiguration();\n+\n+            executeTask( antConfig );\n+        }\n+        finally\n+        {\n+            resetProject( ant1project );\n+        }\n+    }\n+\n+    private void executeTask( Configuration antConfig )\n+    {\n+        try\n+        {\n+            Executor executor = (Executor) m_context.getService( Executor.class );\n+            ExecutionFrame frame =\n+                (ExecutionFrame) m_context.getService( ExecutionFrame.class );\n+            executor.execute( antConfig, frame );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+    }\n+\n+    private Configuration buildAntTaskConfiguration()\n+    {\n+        DefaultConfiguration antConfig = new DefaultConfiguration( \"ant\", \"\" );\n+\n+        antConfig.setAttribute( \"inherit-all\", String.valueOf( inheritAll ) );\n+\n+        // Ignore inheritRefs for now ( inheritAll == inheritRefs )\n+\n+        if ( target != null )\n+        {\n+            antConfig.setAttribute( \"target\", target );\n+        }\n+\n+        // Get the \"file\" value.\n+        if (antFile == null) {\n+            antFile = \"build.xml\";\n+        }\n+\n+        if ( dir == null )\n+        {\n+            dir = project.getBaseDir();\n+        }\n+\n+        File file = FileUtils.newFileUtils().resolveFile(dir, antFile);\n+        antFile = file.getAbsolutePath();\n+\n+        antConfig.setAttribute( \"file\", antFile );\n+\n+        // Add all of the properties.\n+        Iterator iter = properties.iterator();\n+        while( iter.hasNext() )\n+        {\n+            DefaultConfiguration param = new DefaultConfiguration( \"param\", \"\" );\n+            Property property = (Property)iter.next();\n+            param.setAttribute( \"name\", property.getName() );\n+            param.setAttribute( \"value\", property.getValue() );\n+            antConfig.addChild( param );\n+        }\n+        return antConfig;\n+    }\n+\n+    private void resetProject( Object ant1project ) throws BuildException\n+    {\n+        try\n+        {\n+            m_context.setProperty( \"ant1.project\", ant1project );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+    }\n+\n+    private Object unsetProject() throws BuildException\n+    {\n+        Object ant1project = null;\n+        try\n+        {\n+            ant1project = m_context.getProperty( \"ant1.project\" );\n+            m_context.setProperty( \"ant1.project\", null );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+        return ant1project;\n+    }\n+}",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "216db6f390439f48ac35bf690ef62dcc738eec07",
                "status": "added"
            },
            {
                "additions": 179,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "changes": 179,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 0,
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "patch": "@@ -0,0 +1,179 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.core;\n+\n+import org.apache.myrmidon.api.AbstractTask;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.myrmidon.interfaces.model.Project;\n+import org.apache.myrmidon.interfaces.workspace.Workspace;\n+import org.apache.myrmidon.interfaces.embeddor.Embeddor;\n+import org.apache.avalon.framework.parameters.Parameters;\n+import java.util.Map;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n+\n+/**\n+ * Abstract base class for Tasks which execute targets.\n+ *\n+ * @author <a href=\"mailto:peter@apache.org\">Peter Donald</a>\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ * @version $Revision$ $Date$\n+ */\n+public abstract class AbstractAntTask extends AbstractTask\n+{\n+    /**\n+     * If true, inherit all properties from parent Project\n+     * If false, inherit only userProperties and those defined\n+     * inside the ant call itself\n+     */\n+    private boolean m_inheritAll;\n+    /**\n+     * The target to process in build file. If not specified\n+     * will use default in specified build file.\n+     */\n+    private String m_target;\n+    private final ArrayList m_parameters = new ArrayList();\n+\n+    /**\n+     * Specify whether should inherit properties in sub-build.\n+     *\n+     * @param inheritAll true to inherit else false\n+     */\n+    public void setInheritAll( final boolean inheritAll )\n+    {\n+        m_inheritAll = inheritAll;\n+    }\n+\n+    /**\n+     * set the target to process. If none is defined it will\n+     * execute the default target of the build file\n+     */\n+    public void setTarget( final String target )\n+    {\n+        m_target = target;\n+    }\n+\n+    /**\n+     * Add a parameter to processing of build file.\n+     *\n+     * @param param the parameter\n+     */\n+    public void addParam( final AntParam param )\n+    {\n+        m_parameters.add( param );\n+    }\n+\n+    /**\n+     * Execute the specified build, with specified parameters.\n+     *\n+     * @throws TaskException if an error occurs.\n+     */\n+    public void execute()\n+        throws TaskException\n+    {\n+        try\n+        {\n+            Project project = getProject();\n+\n+            Embeddor embeddor = getEmbeddor();\n+\n+            final Workspace workspace =\n+                embeddor.createWorkspace( buildParameters() );\n+\n+            workspace.addProjectListener( embeddor.createListener(\"default\"));\n+\n+            if( null == m_target )\n+            {\n+                m_target = project.getDefaultTargetName();\n+            }\n+\n+            workspace.executeProject( project, m_target );\n+        }\n+        catch( final Exception e )\n+        {\n+            throw new TaskException( e.toString(), e );\n+        }\n+    }\n+\n+    /**\n+     * A convenience method for obtaining the Embeddor from the\n+     * TaskContext.\n+     * @return The Embeddor contained in the TaskContext\n+     * @throws TaskException if the Embeddor could not be obtained.\n+     */\n+    protected Embeddor getEmbeddor() throws TaskException\n+    {\n+        final Embeddor embeddor =\n+            (Embeddor)getContext().getService( Embeddor.class );\n+        return embeddor;\n+    }\n+\n+    /**\n+     * Get/create/build the project containing the target to be executed.\n+     * Subclasses will override this method to provide different means\n+     * of obtaining a project to execute.\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n+     */\n+    protected abstract Project getProject() throws Exception;\n+\n+    /**\n+     * Build the parameters to pass to sub-project.\n+     * These include the current tasks properties\n+     * (if inheritall=true) and any supplied by the user.\n+     *\n+     * @return the created parameters\n+     */\n+    private Parameters buildParameters()\n+        throws TaskException\n+    {\n+        final Parameters parameters = new Parameters();\n+\n+        if( m_inheritAll )\n+        {\n+            final Map properties = getContext().getProperties();\n+            final Iterator keys = properties.keySet().iterator();\n+            while( keys.hasNext() )\n+            {\n+                final String key = (String)keys.next();\n+                final Object value = properties.get( key );\n+                setProperty( parameters, key, value );\n+            }\n+        }\n+\n+        final int size = m_parameters.size();\n+        for( int i = 0; i < size; i++ )\n+        {\n+            final AntParam param = (AntParam)m_parameters.get( i );\n+            param.validate();\n+            final String name = param.getName();\n+            final String value = param.getValue().toString();\n+            setProperty( parameters, name, value );\n+        }\n+\n+        return parameters;\n+    }\n+\n+    /**\n+     * Utility method to add the property into parameters object.\n+     *\n+     * @param parameters where to put property\n+     * @param name the property\n+     * @param value the value of property\n+     * @todo allow non-string params to be passed down\n+     */\n+    private void setProperty( final Parameters parameters,\n+                              final String name,\n+                              final Object value )\n+    {\n+        if( !name.startsWith( \"myrmidon.\" ) )\n+        {\n+            parameters.setParameter( name, value.toString() );\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "sha": "a9910dbf829f890ae93f3f31b73f81a49caf024c",
                "status": "added"
            },
            {
                "additions": 68,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "changes": 68,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 0,
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.core;\n+\n+import org.apache.avalon.excalibur.i18n.ResourceManager;\n+import org.apache.avalon.excalibur.i18n.Resources;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.myrmidon.interfaces.model.Project;\n+\n+/**\n+ * A task which executes a target in the current project,\n+ * or a referenced project.\n+ *\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ * @version $Revision$ $Date$\n+ * @ant.task name=\"ant-call\"\n+ */\n+public class AntCallTask extends AbstractAntTask\n+{\n+    private final static Resources REZ =\n+        ResourceManager.getPackageResources( AntCallTask.class );\n+\n+    private String m_project;\n+\n+    /**\n+     * Specifies the project to execute. If not specified, the current\n+     * project is used.\n+     * @param project the name of the Project to execute.\n+     */\n+    public void setProject( String project )\n+    {\n+        m_project = project;\n+    }\n+\n+    /**\n+     * Get/create/build the project which will be executed.\n+     * Subclasses will override this method to provide different means\n+     * of obtaining a project to execute.\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n+     */\n+    protected Project getProject() throws Exception\n+    {\n+        Project currentProject =\n+            (Project)getContext().getService( Project.class );\n+\n+        // By default, use the current project.\n+        Project referencedProject = currentProject;\n+\n+        if( m_project != null )\n+        {\n+            referencedProject = currentProject.getProject( m_project );\n+            if( referencedProject == null )\n+            {\n+                final String message =\n+                    REZ.getString( \"antcall.invalid-project.error\" );\n+                throw new TaskException( message );\n+            }\n+        }\n+\n+        return referencedProject;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "sha": "8acbff796f1ec5ddfd0158bf8530c30b6f6e2921",
                "status": "added"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "changes": 146,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 135,
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "patch": "@@ -8,66 +8,35 @@\n package org.apache.antlib.core;\n \n import java.io.File;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.Map;\n import org.apache.avalon.framework.parameters.Parameters;\n-import org.apache.myrmidon.api.AbstractTask;\n-import org.apache.myrmidon.api.TaskException;\n-import org.apache.myrmidon.interfaces.embeddor.Embeddor;\n import org.apache.myrmidon.interfaces.model.Project;\n-import org.apache.myrmidon.interfaces.workspace.Workspace;\n \n /**\n- * Create a new Workspace and process a build in\n- * that new workspace.\n+ * Executes a target in a named build file.\n  *\n  * @author <a href=\"mailto:peter@apache.org\">Peter Donald</a>\n  * @ant.task name=\"ant\"\n  */\n public class AntTask\n-    extends AbstractTask\n+\n+    extends AbstractAntTask\n {\n     /**\n      * Default build file.\n      */\n     private static final String DEFAULT_BUILD_FILE = \"build.ant\";\n \n-    /**\n-     * If true, inherit all properties from parent Project\n-     * If false, inherit only userProperties and those defined\n-     * inside the ant call itself\n-     */\n-    private boolean m_inheritAll;\n-\n     /**\n      * The build file which to execute. If not set defaults to\n      * using \"build.ant\" in the basedir of current project.\n      */\n     private File m_file;\n \n-    /**\n-     * The target to process in build file. If not specified\n-     * will use default in specified build file.\n-     */\n-    private String m_target;\n-\n     /**\n      * The \"type\" of the build file. By default this is null which\n      * means the type will be determined by the build file extension.\n      */\n     private String m_type;\n-    private final ArrayList m_parameters = new ArrayList();\n-\n-    /**\n-     * Specify whether should inherit properties in sub-build.\n-     *\n-     * @param inheritAll true to inherit else false\n-     */\n-    public void setInheritAll( final boolean inheritAll )\n-    {\n-        m_inheritAll = inheritAll;\n-    }\n \n     /**\n      * set the build file to process.\n@@ -90,114 +59,21 @@ public void setType( final String type )\n     }\n \n     /**\n-     * set the target to process. If none is defined it will\n-     * execute the default target of the build file\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n      */\n-    public void setTarget( final String target )\n-    {\n-        m_target = target;\n-    }\n-\n-    /**\n-     * Add a parameter to processing of build file.\n-     *\n-     * @param param the parameter\n-     */\n-    public void addParam( final AntParam param )\n-    {\n-        m_parameters.add( param );\n-    }\n-\n-    /**\n-     * Execute the specified build, with specified parameters.\n-     *\n-     * @throws TaskException if an error occurs.\n-     */\n-    public void execute()\n-        throws TaskException\n+    protected Project getProject() throws Exception\n     {\n         if( null == m_file )\n         {\n             m_file = getContext().resolveFile( DEFAULT_BUILD_FILE );\n         }\n \n-        final Embeddor embeddor =\n-            (Embeddor)getContext().getService( Embeddor.class );\n-\n-        try\n-        {\n-            final Project project =\n-                embeddor.createProject( m_file.toString(),\n-                                        m_type,\n-                                        new Parameters() );\n-            final Workspace workspace =\n-                embeddor.createWorkspace( buildParameters() );\n-\n-            if( null == m_target )\n-            {\n-                m_target = project.getDefaultTargetName();\n-            }\n-\n-            workspace.executeProject( project, m_target );\n-        }\n-        catch( final Exception e )\n-        {\n-            throw new TaskException( e.toString(), e );\n-        }\n-    }\n-\n-    /**\n-     * Build the parameters to pass to sub-project.\n-     * These include the current tasks properties\n-     * (if inheritall=true) and any supplied by the user.\n-     *\n-     * @return the created parameters\n-     */\n-    private Parameters buildParameters()\n-        throws TaskException\n-    {\n-        final Parameters parameters = new Parameters();\n-\n-        if( m_inheritAll )\n-        {\n-            final Map properties = getContext().getProperties();\n-            final Iterator keys = properties.keySet().iterator();\n-            while( keys.hasNext() )\n-            {\n-                final String key = (String)keys.next();\n-                final Object value = properties.get( key );\n-                setProperty( parameters, key, value );\n-            }\n-        }\n-\n-        final int size = m_parameters.size();\n-        for( int i = 0; i < size; i++ )\n-        {\n-            final AntParam param = (AntParam)m_parameters.get( i );\n-            param.validate();\n-            final String name = param.getName();\n-            final String value = param.getValue().toString();\n-            setProperty( parameters, name, value );\n-        }\n-\n-        return parameters;\n+        final Project project =\n+            getEmbeddor().createProject( m_file.toString(),\n+                                         m_type,\n+                                         new Parameters() );\n+        return project;\n     }\n \n-    /**\n-     * Utility method to add the property into parameters object.\n-     *\n-     * @param parameters where to put property\n-     * @param name the property\n-     * @param value the value of property\n-     * @todo allow non-string params to be passed down\n-     */\n-    private void setProperty( final Parameters parameters,\n-                              final String name,\n-                              final Object value )\n-    {\n-        if( !name.startsWith( \"myrmidon.\" ) )\n-        {\n-            parameters.setParameter( name, value.toString() );\n-        }\n-    }\n }",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "sha": "ad9b9a426701dd56f19e8a8be220663dc2edf7be",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 1,
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "patch": "@@ -34,4 +34,6 @@ filetokenset.not-a-file.error=File {0} does not exist, or is not a file.\n filetokenset.read-tokens.error=Could not read tokens from {0}.\n \n param.noname.error=Missing name from parameter.\n-param.novalue.error=Missing value from parameter \"{0}\".\n\\ No newline at end of file\n+param.novalue.error=Missing value from parameter \"{0}\".\n+\n+antcall.invalid-project.error=Project-reference \"{0}\" not found.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "sha": "757580ed6723440c683bff486fa07b3c76bedf71",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 1,
                "filename": "proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "patch": "@@ -155,7 +155,7 @@ private ClassLoader buildClassLoader( final ArrayList files )\n     private URL[] buildClasspath( final ArrayList files )\n         throws MalformedURLException\n     {\n-        final URL[] urls = new URL[ files.size() + 1 ];\n+        final URL[] urls = new URL[ files.size() ];\n         final int count = files.size();\n         for( int i = 0; i < count; i++ )\n         {",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "sha": "24ee439c963e29347ef5c2355f0fd3baecef1f11",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 1,
                "filename": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "patch": "@@ -214,7 +214,15 @@ public void setProperty( final String name, final Object value )\n     {\n         checkPropertyName( name );\n         checkPropertyValid( name, value );\n-        m_contextData.put( name, value );\n+\n+        if ( value == null )\n+        {\n+            m_contextData.remove( name );\n+        }\n+        else\n+        {\n+            m_contextData.put( name, value );\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "sha": "bfc80b82a3655288a14f03275181be20636c3c0f",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/make/sample.ant",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/make/sample.ant?ref=d2c225e3700130775183d20109426819f2b989ce",
                "deletions": 0,
                "filename": "proposal/myrmidon/src/make/sample.ant",
                "patch": "@@ -279,6 +279,32 @@ Legal:\n         <ant/>\n     </target>\n \n+    <target name=\"antcall-test\">\n+        <log message=\"Testing antcall task...\"/>\n+        <ant-call target=\"if-test\"/>\n+\n+        <log message=\"Using params...\"/>\n+        <ant-call target=\"prop-print\">\n+            <param name=\"meep.meep\" value=\"Meep!\"/>\n+        </ant-call>\n+\n+        <log message=\"Using params value-ref...\"/>\n+        <pattern id=\"meep.data\" name=\"*.java\" if=\"...\" />\n+        <ant-call target=\"prop-print\">\n+            <param name=\"meep.meep\" value-ref=\"meep.data\"/>\n+        </ant-call>\n+\n+        <log message=\"Using inheritall...\"/>\n+        <pattern id=\"meep.meep\" name=\"*.java\" if=\"...\" />\n+        <ant-call target=\"prop-print\" inherit-all=\"true\"/>\n+\n+        <log message=\"Calling referenced project, default target...\"/>\n+        <ant-call project=\"prim\"/>\n+\n+        <log message=\"Calling referenced project, named target...\"/>\n+        <ant-call project=\"prim\" target=\"extensions-test\"/>\n+    </target>\n+\n     <target name=\"prop-print\">\n         <log message=\"Give me a property ... ${meep.meep}\"/>\n     </target>",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/make/sample.ant",
                "sha": "43fc34434126450c8e63a1e9b2aa74a615635118",
                "status": "modified"
            }
        ],
        "message": "* Added new task <ant-call> to core, which can execute a named target\n  in the current project, or any referenced project.\n* <ant1.ant> now works by executing AntTask.\n* Fixed minor bug in DefaultClassloaderManager which was causing NPEs\n  in URLClassLoader.\n* DefaultTaskContext now removes properties when they are set to null.\n  (rather than throwing a NPE inside HashMap).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272067 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/90933557a169db41cbbc635d29d5d68f4a95d94a",
        "patched_files": [
            "Ant.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java"
        ]
    },
    "ant_d2eddd7": {
        "bug_id": "ant_d2eddd7",
        "commit": "https://github.com/apache/ant/commit/d2eddd7e4d3a7509fbebf87e11c1186073316be6",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/d2eddd7e4d3a7509fbebf87e11c1186073316be6/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=d2eddd7e4d3a7509fbebf87e11c1186073316be6",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "patch": "@@ -23,7 +23,7 @@\n  *    Alternately, this acknowlegement may appear in the software itself,\n  *    if and wherever such third-party acknowlegements normally appear.\n  *\n- * 4. The names \"The Jakarta Project\", \"Tomcat\", and \"Apache Software\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *    from this software without prior written permission. For written \n  *    permission, please contact apache@apache.org.\n@@ -486,7 +486,12 @@ protected void addParentDirs(File baseDir, String entry,\n \n         while (!directories.isEmpty()) {\n             String dir = (String) directories.pop();\n-            File f = new File(baseDir, dir);\n+            File f = null;\n+            if (baseDir != null) {\n+                f = new File(baseDir, dir);\n+            } else {\n+                f = new File(dir);\n+            }\n             zipDir(f, zOut, prefix+dir);\n         }\n     }",
                "raw_url": "https://github.com/apache/ant/raw/d2eddd7e4d3a7509fbebf87e11c1186073316be6/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "sha": "f543df55f4fd0f79097d5e70b5872fcbab091a74",
                "status": "modified"
            }
        ],
        "message": "Avoid NullPointerException in JDK 1.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268370 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/c007edc9da8892674744c1142401c5db41dd655f",
        "patched_files": [
            "Zip.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ZipTest.java"
        ]
    },
    "ant_d605afd": {
        "bug_id": "ant_d605afd",
        "commit": "https://github.com/apache/ant/commit/d605afdd5122d55bb5f39829944acbc2271f8474",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/d605afdd5122d55bb5f39829944acbc2271f8474/src/main/org/apache/tools/ant/taskdefs/Available.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Available.java?ref=d605afdd5122d55bb5f39829944acbc2271f8474",
                "deletions": 11,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Available.java",
                "patch": "@@ -442,17 +442,13 @@ private boolean checkClass(String classname) {\n                 loader = getProject().createClassLoader(classpath);\n                 loader.setParentFirst(false);\n                 loader.addJavaLibraries();\n-                if (loader != null) {\n-                    try {\n-                        loader.findClass(classname);\n-                    } catch (SecurityException se) {\n-                        // class found but restricted name; this is\n-                        // actually the case we're looking for in JDK 1.3+,\n-                        // so catch the exception and return\n-                        return true;\n-                    }\n-                } else {\n-                    return false;\n+                try {\n+                    loader.findClass(classname);\n+                } catch (SecurityException se) {\n+                    // class found but restricted name; this is\n+                    // actually the case we're looking for in JDK 1.3+,\n+                    // so catch the exception and return\n+                    return true;\n                 }\n             } else if (loader != null) {\n                 loader.loadClass(classname);",
                "raw_url": "https://github.com/apache/ant/raw/d605afdd5122d55bb5f39829944acbc2271f8474/src/main/org/apache/tools/ant/taskdefs/Available.java",
                "sha": "2061e5f17d46546beab8403eb5f745bc596871ae",
                "status": "modified"
            }
        ],
        "message": "RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1297161 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/538257ea859749802694e257143fce9d6efbd1b4",
        "patched_files": [
            "Available.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AvailableTest.java"
        ]
    },
    "ant_d6bde1c": {
        "bug_id": "ant_d6bde1c",
        "commit": "https://github.com/apache/ant/commit/d6bde1c2c9fe3780f28877f4b772542d63bf07fe",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant/blob/d6bde1c2c9fe3780f28877f4b772542d63bf07fe/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/SQLExec.java?ref=d6bde1c2c9fe3780f28877f4b772542d63bf07fe",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "patch": "@@ -436,6 +436,11 @@ public void execute() throws BuildException {\n             t.setSrc(srcFile);\n             t.addText(sqlCommand);\n \n+            if (getConnection() == null) {\n+                // not a valid rdbms\n+                return;\n+            }\n+\n             try {\n                 PrintStream out = System.out;\n                 try {",
                "raw_url": "https://github.com/apache/ant/raw/d6bde1c2c9fe3780f28877f4b772542d63bf07fe/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "sha": "87f4893c6d1a757f261a714eae2d951906492f29",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE if database doesn't match expected vendor\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@675911 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/543148ca1d5e89008f16eb7de0cfc67f23bddc05",
        "patched_files": [
            "SQLExec.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "SQLExecTest.java"
        ]
    },
    "ant_dc37a17": {
        "bug_id": "ant_dc37a17",
        "commit": "https://github.com/apache/ant/commit/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/WHATSNEW",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -64,6 +64,12 @@ Fixed bugs:\n    archive failed.\n    Port of https://issues.apache.org/jira/browse/COMPRESS-297\n \n+ * FileUtils.rename which is used by several tasks can throw a\n+   NullPointerException if the \"normal\" renameTo operation fails and\n+   an exception occurs while rename falls back to copying and deleting\n+   the file.\n+   Bugzilla Report 57533\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/WHATSNEW",
                "sha": "f53145f77d8e58ac5870201dc69d67c3df18c5ae",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/ant/blob/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
                "deletions": 7,
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "patch": "@@ -435,11 +435,15 @@ public static void copyResource(final Resource source, final Resource dest,\n                     copyUsingFileChannels(sourceFile, destFile);\n                     copied = true;\n                 } catch (final IOException ex) {\n-                    project.log(\"Attempt to copy \" + sourceFile\n-                                + \" to \" + destFile + \" using NIO Channels\"\n-                                + \" failed due to '\" + ex.getMessage()\n-                                + \"'.  Falling back to streams.\",\n-                                Project.MSG_WARN);\n+                    String msg = \"Attempt to copy \" + sourceFile\n+                        + \" to \" + destFile + \" using NIO Channels\"\n+                        + \" failed due to '\" + ex.getMessage()\n+                        + \"'.  Falling back to streams.\";\n+                    if (project != null) {\n+                        project.log(msg, Project.MSG_WARN);\n+                    } else {\n+                        System.err.println(msg);\n+                    }\n                 }\n             }\n             if (!copied) {\n@@ -828,8 +832,13 @@ private static OutputStream getOutputStream(final Resource resource, final boole\n             if (a != null) {\n                 return a.getAppendOutputStream();\n             }\n-            project.log(\"Appendable OutputStream not available for non-appendable resource \"\n-                    + resource + \"; using plain OutputStream\", Project.MSG_VERBOSE);\n+            String msg = \"Appendable OutputStream not available for non-appendable resource \"\n+                + resource + \"; using plain OutputStream\";\n+            if (project != null) {\n+                project.log(msg, Project.MSG_VERBOSE);\n+            } else {\n+                System.out.println(msg);\n+            }\n         }\n         return resource.getOutputStream();\n     }",
                "raw_url": "https://github.com/apache/ant/raw/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "sha": "6397f714b9facbb0ba526f823a1d4a3b7fac795b",
                "status": "modified"
            }
        ],
        "message": "NullPointerException in ResourceUtils.copyUsingFileChannels\n\nBugzilla Report 57533",
        "parent": "https://github.com/apache/ant/commit/6f3185926cb4b1fa7f76c0541f2cba0eb5085c79",
        "patched_files": [
            "ResourceUtils.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ResourceUtilsTest.java"
        ]
    },
    "ant_dc81004": {
        "bug_id": "ant_dc81004",
        "commit": "https://github.com/apache/ant/commit/dc8100463d3c5fbbab209d02d927d1da512ba796",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/KeySubst.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "patch": "@@ -1,7 +1,7 @@\n /*\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2000,2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2000,2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -123,7 +123,7 @@ public void execute() throws BuildException {\n                     // ignore\n                 }\n             }\n-            if (bw != null) {\n+            if (br != null) {\n                 try {\n                     br.close();\n                 } catch (IOException e) {",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "sha": "1b5fbc2d93365066bb858638f9c02d5b14c813e7",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "deletions": 4,
                "filename": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "patch": "@@ -172,10 +172,13 @@ public boolean isSelected(File basedir, String filename, File file) {\n         } catch (IOException ioe) {\n             throw new BuildException(\"Could not read file \" + filename);\n         } finally {\n-            try {\n-                in.close();\n-            } catch (Exception e) {\n-                throw new BuildException(\"Could not close file \" + filename);\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (Exception e) {\n+                    throw new BuildException(\"Could not close file \" \n+                                             + filename);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "sha": "79b807bde06a87d118eb0c31ff35551f248f0b0b",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "deletions": 4,
                "filename": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "patch": "@@ -214,10 +214,13 @@ public boolean isSelected(File basedir, String filename, File file) {\n         } catch (IOException ioe) {\n             throw new BuildException(\"Could not read file \" + filename);\n         } finally {\n-            try {\n-                in.close();\n-            } catch (Exception e) {\n-                throw new BuildException(\"Could not close file \" + filename);\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (Exception e) {\n+                    throw new BuildException(\"Could not close file \" \n+                                             + filename);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "sha": "1b12b5ffd902c3840ecdf3e8fb16da94173cb71d",
                "status": "modified"
            }
        ],
        "message": "Fix potential NPEs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274920 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/b66c87eff7277caeedb01e50a986b70a0d0687aa",
        "patched_files": [
            "ContainsSelector.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ContainsSelectorTest.java"
        ]
    },
    "ant_e15b1d6": {
        "bug_id": "ant_e15b1d6",
        "commit": "https://github.com/apache/ant/commit/e15b1d67a0dc5a117442c1df6e5044d199059907",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/e15b1d67a0dc5a117442c1df6e5044d199059907/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=e15b1d67a0dc5a117442c1df6e5044d199059907",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -7,6 +7,9 @@ Changes that could break older environments:\n Fixed bugs:\n -----------\n \n+* <junit> in Ant 1.7.0 could throw NPE if no <classpath> was defined.\n+  Bugzilla report 41422.\n+\n * In Ant 1.7.0, <fileset> in <javadoc> does not by default include only\n   **/*.java as the documentation claims and earlier revisions did.\n   Bugzilla report 41264.",
                "raw_url": "https://github.com/apache/ant/raw/e15b1d67a0dc5a117442c1df6e5044d199059907/WHATSNEW",
                "sha": "629d42eb8802612cd7389188c54d30f3878abd91",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/e15b1d67a0dc5a117442c1df6e5044d199059907/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=e15b1d67a0dc5a117442c1df6e5044d199059907",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "patch": "@@ -756,7 +756,10 @@ public void execute() throws BuildException {\n         if (splitJunit) {\n             Path path = new Path(getProject());\n             path.add(antRuntimeClasses);\n-            path.add(getCommandline().getClasspath());\n+            Path extra = getCommandline().getClasspath();\n+            if (extra != null) {\n+                path.add(extra);\n+            }\n             mirrorLoader = new SplitLoader(myLoader, path);\n         } else {\n             mirrorLoader = myLoader;",
                "raw_url": "https://github.com/apache/ant/raw/e15b1d67a0dc5a117442c1df6e5044d199059907/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "sha": "541a08e506be7c48f74de34f722261105cae89af",
                "status": "modified"
            }
        ],
        "message": "#41422: <junit> in Ant 1.7.0 could throw NPE if no <classpath> was defined.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@498519 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/bddca28a0f8834581c589bf2d8e6c9a0232a7488",
        "patched_files": [
            "JUnitTask.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "JUnitTaskTest.java"
        ]
    },
    "ant_e3f5250": {
        "bug_id": "ant_e3f5250",
        "commit": "https://github.com/apache/ant/commit/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/WHATSNEW",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -1,6 +1,13 @@\n Changes from Ant 1.9.10 TO Ant 1.9.11\n =====================================\n \n+Fixed bugs:\n+-----------\n+\n+ * Fixed NullPointerException when a mappedresource is used in pathconvert\n+   Bugzilla Report 62076\n+\n+\n Changes from Ant 1.9.9 TO Ant 1.9.10\n ====================================\n ",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/WHATSNEW",
                "sha": "2d4b6f11d994a21ee2b1642eb31d8f34fa6ef9ca",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/etc/testcases/taskdefs/pathconvert.xml",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/pathconvert.xml?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/pathconvert.xml",
                "patch": "@@ -17,6 +17,8 @@\n -->\n <project name=\"pathconvert\">\n \n+    <import file=\"../buildfiletest-base.xml\"/>\n+\n     <path id=\"testpath\">\n         <pathelement path=\"${ant.file}\" />\n     </path>\n@@ -39,4 +41,20 @@\n         <pathconvert property=\"result\" refid=\"testpath\" />\n     </target>\n \n+    <target name=\"test-nonmatching-mapper\" description=\"test for bug fix bz-62076\">\n+        <mkdir dir=\"${output}/mapper-source-dir\"/>\n+        <!-- create 2 files, one of which will be matched/included by the globmapper\n+        later in this target -->\n+        <touch file=\"${output}/mapper-source-dir/file1.txt\"/>\n+        <touch file=\"${output}/mapper-source-dir/file2.log\"/>\n+\n+        <pathconvert property=\"pc\">\n+            <mappedresources>\n+                <fileset dir=\"${output}/mapper-source-dir\"/>\n+                <!-- we intentionally exclude one of the files -->\n+                <globmapper from=\"*.log\" to=\"*.txt\"/>\n+            </mappedresources>\n+        </pathconvert>\n+    </target>\n+\n </project>",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/etc/testcases/taskdefs/pathconvert.xml",
                "sha": "5a1cdf74b39ef192349e7e14f29b7f00e7334e6a",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/IdentityMapper.java?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "patch": "@@ -46,7 +46,16 @@ public void setTo(String to) {\n      * @param sourceFileName the name to map.\n      * @return the source filename in a one-element array.\n      */\n-    public String[] mapFileName(String sourceFileName) {\n+    @Override\n+    public String[] mapFileName(final String sourceFileName) {\n+        if (sourceFileName == null) {\n+            // The FileNameMapper#mapFileName contract states that:\n+            // \"if the given rule doesn't apply to the source file,\n+            //  implementation must return null\"\n+            // we consider a null source file name as non-matching and\n+            // hence return null\n+            return null;\n+        }\n         return new String[] {sourceFileName};\n     }\n }",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "sha": "18a31e5168e50683a3f82421f3c937ceb7f8c115",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "deletions": 0,
                "filename": "src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "patch": "@@ -57,6 +57,17 @@ public void testNoTargetOs() {\n         buildRule.executeTarget(\"testnotargetos\");\n     }\n \n+    /**\n+     * Tests that if a {@code mappedresource}, that excludes certain resources, is used in a {@code pathconvert},\n+     * then it doesn't lead to a {@link NullPointerException}.\n+     *\n+     * @see <a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=62076\">bz-62076</a> for more details\n+     */\n+    @Test\n+    public void testNonMatchingMapper() {\n+        buildRule.executeTarget(\"test-nonmatching-mapper\");\n+    }\n+\n     private void test(String target) {\n         buildRule.executeTarget(target);\n         assertEquals(\"test#\" + BUILD_FILENAME, buildRule.getProject().getProperty(\"result\"));",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "sha": "f29dc12b954f8829e1205fa5d1d4af29ff9a308f",
                "status": "modified"
            }
        ],
        "message": "bz-62076 Make IdentityMapper follow the \"mapFileName\" API contract to avoid NPE when it deals with a non-matching source file name",
        "parent": "https://github.com/apache/ant/commit/a6429c6aa1a713c98528da55059afe9efc2ada59",
        "patched_files": [
            "IdentityMapper.java",
            "PathConvert.java",
            "pathconvert.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "PathConvertTest.java"
        ]
    },
    "ant_f001fcb": {
        "bug_id": "ant_f001fcb",
        "commit": "https://github.com/apache/ant/commit/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -28,6 +28,9 @@ Fixed bugs:\n * dependset failed if the basedir of a target fileset did not exist.\n   Bugzilla 40916.\n \n+* Recursive filtering encountered NullPointerExceptions under certain\n+  circumstances.  Bugzilla 41086.\n+\n Other changes:\n --------------\n ",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/WHATSNEW",
                "sha": "acc8fe6f4994fa702968ea500f2f1f16e56614e3",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/main/org/apache/tools/ant/types/FilterSet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/FilterSet.java?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/types/FilterSet.java",
                "patch": "@@ -581,8 +581,8 @@ private synchronized String replaceTokens(String line, String parent)\n         }\n         passedTokens.addElement(parent);\n         String value = iReplaceTokens(line);\n-        if (value.indexOf(beginToken) == -1 && !duplicateToken) {\n-            duplicateToken = false;\n+        if (value.indexOf(beginToken) == -1 && !duplicateToken\n+                && recurseDepth == 1) {\n             passedTokens = null;\n         } else if (duplicateToken) {\n             // should always be the case...",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/main/org/apache/tools/ant/types/FilterSet.java",
                "sha": "35a2142ef53aa2795b11e18fff93b45adf8b9828",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/tests/antunit/types/filterset-test.xml",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/types/filterset-test.xml?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "deletions": 0,
                "filename": "src/tests/antunit/types/filterset-test.xml",
                "patch": "@@ -0,0 +1,28 @@\n+<project xmlns:au=\"antlib:org.apache.ant.antunit\">\n+\n+  <property name=\"br\" value=\"${line.separator}\" />\n+\n+  <target name=\"testRecursionRegression\">\n+    <copy todir=\"${basedir}\">\n+      <string value=\"@a@${br}@b@${br}@c@${br}\" />\n+      <mergemapper to=\"filterset-output.txt\" />\n+      <filterset>\n+        <filter token=\"a\" value=\"aaa\" />\n+        <filter token=\"b\" value=\"bbb\" />\n+        <filter token=\"c\" value=\"@a@:@b@\" />\n+      </filterset>\n+    </copy>\n+\n+    <au:assertTrue>\n+      <resourcesmatch astext=\"true\">\n+        <file file=\"filterset-output.txt\" />\n+        <string value=\"aaa${br}bbb${br}aaa:bbb${br}\" />\n+      </resourcesmatch>\n+    </au:assertTrue>\n+  </target>\n+\n+  <target name=\"tearDown\">\n+    <delete file=\"filterset-output.txt\" />\n+  </target>\n+\n+</project>",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/tests/antunit/types/filterset-test.xml",
                "sha": "23e122377dc6949a1f7a04808d2af6f4d8fc375b",
                "status": "added"
            }
        ],
        "message": "fix NPE in recursive filtering. BZ 41086.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@481041 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/e5e76b0db4c2b11d19b976eda4fcca9215e2e6d6",
        "patched_files": [
            "FilterSet.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "FilterSetTest.java",
            "filterset-test.java"
        ]
    },
    "ant_f00dea8": {
        "bug_id": "ant_f00dea8",
        "commit": "https://github.com/apache/ant/commit/f00dea8ea73472d2a123aba0bce7b7886462775d",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/WHATSNEW",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -420,6 +420,10 @@ Fixed bugs:\n    failed to load.\n    Bugzilla Report 44103.\n \n+ * Logging exceptions without a message would cause a\n+   NullPointerException.\n+   Bugzilla Report 47623.\n+\n Other changes:\n --------------\n  * The get task now also follows redirects from http to https",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/WHATSNEW",
                "sha": "d0b4d3bda310a2e6a5b903cd3d302a08d0a95e07",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/src/main/org/apache/tools/ant/Project.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Project.java?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "deletions": 0,
                "filename": "src/main/org/apache/tools/ant/Project.java",
                "patch": "@@ -2171,6 +2171,9 @@ protected void fireTaskFinished(Task task, Throwable exception) {\n     private void fireMessageLoggedEvent(BuildEvent event, String message,\n                                         int priority) {\n \n+        if (message == null) {\n+            message = String.valueOf(message);\n+        }\n         if (message.endsWith(StringUtils.LINE_SEP)) {\n             int endIndex = message.length() - StringUtils.LINE_SEP.length();\n             event.setMessage(message.substring(0, endIndex), priority);",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/src/main/org/apache/tools/ant/Project.java",
                "sha": "8487dbc0a2e29aab9cac6266ee6c5c7ecbdb8aea",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/ProjectTest.java?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "deletions": 0,
                "filename": "src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "patch": "@@ -276,6 +276,14 @@ public void run() {\n         assertTrue(\"Expected logging thread to finish successfully\", done[0]);\n     }\n \n+    /**\n+     * @see https://issues.apache.org/bugzilla/show_bug.cgi?id=47623\n+     */\n+    public void testNullThrowableMessageLog() {\n+        p.log(new Task() {}, null, new Throwable(), Project.MSG_ERR);\n+        // be content if no exception has been thrown\n+    }\n+\n     private class DummyTaskPrivate extends Task {\n         public DummyTaskPrivate() {}\n         public void execute() {}",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "sha": "fd4cff15da1a28f188a0b1ce49032b5577433d72",
                "status": "modified"
            }
        ],
        "message": "fix NPE when logging an exception without message.  PR 47623.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@800678 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/37d7a6b6798a55e87f08273bb3b451939bb0dcb1",
        "patched_files": [
            "Project.java",
            "WHATSNEW.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "ProjectTest.java"
        ]
    },
    "ant_f37911b": {
        "bug_id": "ant_f37911b",
        "commit": "https://github.com/apache/ant/commit/f37911b4e528ec77ebc06cd815da76bae5442858",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant/blob/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=f37911b4e528ec77ebc06cd815da76bae5442858",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "patch": "@@ -157,7 +157,7 @@ public void init() {\n     }\n \n     /**\n-     * Called in execute or createProperty of newProject is null.\n+     * Called in execute or createProperty if newProject is null.\n      *\n      * <p>This can happen if the same instance of this task is run\n      * twice as newProject is set to null at the end of execute (to",
                "raw_url": "https://github.com/apache/ant/raw/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "sha": "74aecedafce9f205e99382e78e7d21c0d0c68a56",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/ant/blob/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/CallTarget.java?ref=f37911b4e528ec77ebc06cd815da76bae5442858",
                "deletions": 9,
                "filename": "src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "patch": "@@ -85,8 +85,9 @@\n \n     private Ant callee;\n     private String subTarget;\n-    private boolean initialized = false;\n+    // must match the default value of Ant#inheritAll\n     private boolean inheritAll = true;\n+    // must match the default value of Ant#inheritRefs\n     private boolean inheritRefs = false;\n \n     /**\n@@ -96,7 +97,7 @@\n      **/\n     public void setInheritAll(boolean inherit) {\n        inheritAll = inherit;\n-    } //-- setInheritAll\n+    }\n \n     /**\n      * set the inherit refs flag\n@@ -111,12 +112,11 @@ public void setInheritRefs(boolean inheritRefs) {\n      * configuring it's by calling its own init method.\n      */\n     public void init() {\n-        callee = (Ant) project.createTask(\"ant\");\n-        callee.setOwningTarget(target);\n+        callee = (Ant) getProject().createTask(\"ant\");\n+        callee.setOwningTarget(getOwningTarget());\n         callee.setTaskName(getTaskName());\n-        callee.setLocation(location);\n+        callee.setLocation(getLocation());\n         callee.init();\n-        initialized = true;\n     }\n \n     /**\n@@ -125,7 +125,7 @@ public void init() {\n      * execute\n      */\n     public void execute() throws BuildException {\n-        if (!initialized) {\n+        if (callee == null) {\n             init();\n         }\n         \n@@ -134,30 +134,49 @@ public void execute() throws BuildException {\n                                      location);\n         }\n         \n-        callee.setDir(project.getBaseDir());\n-        callee.setAntfile(project.getProperty(\"ant.file\"));\n+        callee.setDir(getProject().getBaseDir());\n+        callee.setAntfile(getProject().getProperty(\"ant.file\"));\n         callee.setTarget(subTarget);\n         callee.setInheritAll(inheritAll);\n         callee.setInheritRefs(inheritRefs);\n         callee.execute();\n     }\n \n+    /**\n+     * Create a nested param element.\n+     */\n     public Property createParam() {\n+        if (callee == null) {\n+            init();\n+        }\n         return callee.createProperty();\n     }\n \n     /** \n      * create a reference element that identifies a data type that\n      * should be carried over to the new project.\n+     *\n+     * @since Ant 1.5\n      */\n     public void addReference(Ant.Reference r) {\n+        if (callee == null) {\n+            init();\n+        }\n         callee.addReference(r);\n     }\n \n+    /**\n+     * Sets the target attribute, required.\n+     */\n     public void setTarget(String target) {\n         subTarget = target;\n     }\n \n+    /**\n+     * Pass output sent to System.out to the new project.\n+     *\n+     * @since Ant 1.5\n+     */\n     protected void handleOutput(String line) {\n         if (callee != null) {\n             callee.handleOutput(line);\n@@ -167,6 +186,11 @@ protected void handleOutput(String line) {\n         }\n     }\n     \n+    /**\n+     * Pass output sent to System.err to the new project.\n+     *\n+     * @since Ant 1.5\n+     */\n     protected void handleErrorOutput(String line) {\n         if (callee != null) {\n             callee.handleErrorOutput(line);",
                "raw_url": "https://github.com/apache/ant/raw/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "sha": "56310db825e2067a89b2b53439b71c0aca10d17a",
                "status": "modified"
            }
        ],
        "message": "fix possible (but unlikely) NPE in <antcall>, add some docs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272333 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/55adbd06c9bd8887455a28f102e14797756bd9d8",
        "patched_files": [
            "Ant.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "AntTest.java"
        ]
    },
    "ant_f8e0dcd": {
        "bug_id": "ant_f8e0dcd",
        "commit": "https://github.com/apache/ant/commit/f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant/blob/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/WHATSNEW",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
                "deletions": 0,
                "filename": "WHATSNEW",
                "patch": "@@ -44,6 +44,9 @@ Fixed bugs:\n *  If <concat>'s first resourcecollection child is a <resources>,\n    any subsequently added child resourcecollection joins the first.\n    Bugzilla Report 48816.        \n+   \n+*  <get> with an invalid URL could trigger an NPE in some JVMs.\n+   Bugzilla Report 48833 \n \n Other changes:\n --------------",
                "raw_url": "https://github.com/apache/ant/raw/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/WHATSNEW",
                "sha": "1886d2210ec449112972f5a079fddfd2aa4423f6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant/blob/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/src/main/org/apache/tools/ant/taskdefs/Get.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Get.java?ref=f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
                "deletions": 1,
                "filename": "src/main/org/apache/tools/ant/taskdefs/Get.java",
                "patch": "@@ -658,7 +658,12 @@ private URLConnection openConnection(URL aSource) throws IOException {\n                         .setUseCaches(httpUseCaches);\n             }\n             // connect to the remote site (may take some time)\n-            connection.connect();\n+            try {\n+                connection.connect();\n+            } catch (NullPointerException e) {\n+                //bad URLs can trigger NPEs in some JVMs\n+                throw new BuildException(\"Failed to parse \" + source.toString(), e);\n+            }\n \n             // First check on a 301 / 302 (moved) response (HTTP only)\n             if (connection instanceof HttpURLConnection) {",
                "raw_url": "https://github.com/apache/ant/raw/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/src/main/org/apache/tools/ant/taskdefs/Get.java",
                "sha": "3906e88df826635f254f5de0e29f093ff043b2d0",
                "status": "modified"
            }
        ],
        "message": "Bug 48833 -  NPE in <get>\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@917574 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/94099ccb050ba2897ddef01062ad223120c629f4",
        "patched_files": [
            "Get.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "GetTest.java"
        ]
    },
    "ant_facb865": {
        "bug_id": "ant_facb865",
        "commit": "https://github.com/apache/ant/commit/facb8658b28232d1d70fdf09e707efbe8cae920e",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/etc/testcases/taskdefs/typedef.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/typedef.xml?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "deletions": 0,
                "filename": "src/etc/testcases/taskdefs/typedef.xml",
                "patch": "@@ -46,4 +46,11 @@\n     <local id=\"local\" />\n   </target>\n \n+  <target name=\"double-notpresent\">\n+    <typedef name=\"mytask\" classname=\"notpresent\" onerror=\"ignore\"/>\n+    <typedef name=\"mytask\" classname=\"notpresent\" onerror=\"ignore\"/>\n+    <typedef name=\"mytask\" classname=\"org.apache.tools.ant.taskdefs.Echo\"\n+             onerror=\"ignore\"/>\n+    <mytask>hi</mytask>\n+  </target>\n </project>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/etc/testcases/taskdefs/typedef.xml",
                "sha": "39635f8767b5c092ee6a5dba68aea1e833bbb46c",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/main/org/apache/tools/ant/ComponentHelper.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/ComponentHelper.java?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "deletions": 2,
                "filename": "src/main/org/apache/tools/ant/ComponentHelper.java",
                "patch": "@@ -587,9 +587,33 @@ public String getElementName(Object element) {\n     }\n \n \n-    /** return true if the two definitions are the same */\n+    /**\n+     * check if definition is a valid definition - it\n+     * may be a definition of an optional task that\n+     * does not exist\n+     * @param def the definition to test\n+     * @return true if exposed type of definition is present\n+     */\n+    private boolean validDefinition(AntTypeDefinition def) {\n+        if (def.getTypeClass(project) == null\n+            || def.getExposedClass(project) == null) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * check if two definitions are the same\n+     * @param def  the new definition\n+     * @param old the old definition\n+     * @return true if the two definitions are the same\n+     */\n     private boolean sameDefinition(\n         AntTypeDefinition def, AntTypeDefinition old) {\n+        if (!validDefinition(def) || !validDefinition(old)) {\n+            return validDefinition(def) == validDefinition(old);\n+        }\n+\n         if (!(old.getTypeClass(project).equals(def.getTypeClass(project)))) {\n             return false;\n         }\n@@ -600,9 +624,11 @@ private boolean sameDefinition(\n         return true;\n     }\n \n+\n     /**\n      * update the component definition table with a new or\n      * modified definition.\n+     * @param def the definition to update or insert\n      */\n     private void updateDataTypeDefinition(AntTypeDefinition def) {\n         String name = def.getName();\n@@ -615,7 +641,7 @@ private void updateDataTypeDefinition(AntTypeDefinition def) {\n                     return;\n                 }\n                 Class oldClass = antTypeTable.getExposedClass(name);\n-                if (Task.class.isAssignableFrom(oldClass)) {\n+                if (oldClass != null && Task.class.isAssignableFrom(oldClass)) {\n                     int logLevel = Project.MSG_WARN;\n                     if (def.getClassName().equals(old.getClassName())\n                         && def.getClassLoader() == old.getClassLoader()) {",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/main/org/apache/tools/ant/ComponentHelper.java",
                "sha": "a8032e1a24ffe11db1b2708ca7b90f3af6e63364",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "deletions": 0,
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "patch": "@@ -104,4 +104,11 @@ public void testLocal() {\n                      ref.getClass().getName());\n     }\n \n+    /**\n+     * test to make sure that one can define a not present\n+     * optional type twice and then have a valid definition.\n+     */\n+    public void testDoubleNotPresent() {\n+        expectLogContaining(\"double-notpresent\", \"hi\");\n+    }\n }",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "sha": "22f3b04a07bfcddcc544d4ac9558b3680e732e2d",
                "status": "modified"
            }
        ],
        "message": "Fix for NPE reported by Nick Chalko.\nWhen overriding a definition the code did not\ncheck if the old (or new) definitions classes existed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274876 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant/commit/4a1ac5da9c318dd850dad723601f1d586b022b1f",
        "patched_files": [
            "typedef.java",
            "Typedef.java",
            "ComponentHelper.java"
        ],
        "repo": "ant",
        "unit_tests": [
            "TypedefTest.java"
        ]
    }
}