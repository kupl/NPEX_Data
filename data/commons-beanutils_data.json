[
    {
        "repo": "commons-beanutils",
        "message": "[BEANUTILS-408] - MethodUtils.invokeMethod() throws NullPointerException when args==null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@1449465 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9",
        "parent": "https://github.com/apache/commons-beanutils/commit/c6598775e060bddfab7c8f314da504ecb2c90d57",
        "bug_id": "commons-beanutils_1",
        "file": [
            {
                "sha": "dfa0d5e68a2b49ab0b30f8407eb81b1cffd641e7",
                "filename": "src/changes/changes.xml",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/changes/changes.xml",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/changes/changes.xml?ref=5a046686802b6417ee27e6f27c1d66a3bfb8d8c9",
                "patch": "@@ -40,6 +40,9 @@ The <action> type attribute can be add,update,fix,remove.\n   <body>\n \n     <release version=\"1.8.4\" date=\"in SVN\" description=\"Bug fix for 1.8.3\">\n+      <action dev=\"britter\" type=\"fix\" issue=\"BEANUTILS-408\" >\n+         MethodUtils.invokeMethod() throws NullPointerException when args==null\n+      </action>\n       <action dev=\"britter\" type=\"fix\" issue=\"BEANUTILS-426\" >\n          ConstructorUtils.invokeConstructor(Class klass, Object arg) throws \n          NullPointerException when arg==null",
                "deletions": 0
            },
            {
                "sha": "9549d0c033586d99a1ec7d6a7364877a190f188b",
                "filename": "src/main/java/org/apache/commons/beanutils/MethodUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/main/java/org/apache/commons/beanutils/MethodUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/main/java/org/apache/commons/beanutils/MethodUtils.java",
                "status": "modified",
                "changes": 17,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/main/java/org/apache/commons/beanutils/MethodUtils.java?ref=5a046686802b6417ee27e6f27c1d66a3bfb8d8c9",
                "patch": "@@ -173,7 +173,7 @@ public static Object invokeMethod(\n             IllegalAccessException,\n             InvocationTargetException {\n \n-        Object[] args = {arg};\n+        Object[] args = toArray(arg);\n         return invokeMethod(object, methodName, args);\n     }\n \n@@ -309,7 +309,7 @@ public static Object invokeExactMethod(\n             IllegalAccessException,\n             InvocationTargetException {\n \n-        Object[] args = {arg};\n+        Object[] args = toArray(arg);\n         return invokeExactMethod(object, methodName, args);\n     }\n \n@@ -487,7 +487,7 @@ public static Object invokeStaticMethod(\n             IllegalAccessException,\n             InvocationTargetException {\n \n-        Object[] args = {arg};\n+        Object[] args = toArray(arg);\n         return invokeStaticMethod (objectClass, methodName, args);\n     }\n \n@@ -626,11 +626,10 @@ public static Object invokeExactStaticMethod(\n             IllegalAccessException,\n             InvocationTargetException {\n \n-        Object[] args = {arg};\n+        Object[] args = toArray(arg);\n         return invokeExactStaticMethod (objectClass, methodName, args);\n     }\n \n-\n     /**\n      * <p>Invoke a static method whose parameter types match exactly the object\n      * types.</p>\n@@ -671,6 +670,14 @@ public static Object invokeExactStaticMethod(\n     }\n \n \n+    private static Object[] toArray(Object arg) {\n+        Object[] args = {arg};\n+        if (arg == null) {\n+            args = null;\n+        }\n+        return args;\n+    }\n+\n     /**\n      * <p>Return an accessible method (that is, one that can be invoked via\n      * reflection) with given name and a single parameter.  If no such method",
                "deletions": 5
            },
            {
                "sha": "a02027f9d24d6324b4c414c137d09da01e5ec833",
                "filename": "src/test/java/org/apache/commons/beanutils/MethodUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/test/java/org/apache/commons/beanutils/MethodUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/5a046686802b6417ee27e6f27c1d66a3bfb8d8c9/src/test/java/org/apache/commons/beanutils/MethodUtilsTestCase.java",
                "status": "modified",
                "changes": 24,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/java/org/apache/commons/beanutils/MethodUtilsTestCase.java?ref=5a046686802b6417ee27e6f27c1d66a3bfb8d8c9",
                "patch": "@@ -185,6 +185,13 @@ public void testInvokeExactMethod() {\n         }\n     }\n \n+    public void testInvokeExactMethodNull() throws Exception {\n+        Object object = new Object();\n+        Object result = MethodUtils.invokeExactMethod(object, \"toString\", (Object) null);\n+        assertEquals(object.toString(), result);\n+    }\n+\n+\n     /**\n      * <p> Test <code>invokeMethod</code>.\n      */\n@@ -261,6 +268,12 @@ public void testInvokeMethod() throws Exception {\n         MethodUtils.invokeExactMethod(parent, \"getName\", null, null);\n     }\n \n+    public void testInvokeMethodNull() throws Exception {\n+        Object object = new Object();\n+        Object result = MethodUtils.invokeMethod(object, \"toString\", (Object) null);\n+        assertEquals(object.toString(), result);\n+    }\n+\n     /**\n      * <p> Test <code>invokeMethod</code> with a primitive.\n      */\n@@ -328,6 +341,17 @@ public void testStaticInvokeMethod() throws Exception {\n         assertEquals(\"currentCounter value\", current, ((Integer) value).intValue());\n     }\n \n+    public void testInvokeStaticMethodNull() throws Exception {\n+        int current = TestBean.currentCounter();\n+        Object value = MethodUtils.invokeStaticMethod(TestBean.class, \"currentCounter\", (Object) null);\n+        assertEquals(\"currentCounter value\", current, ((Integer) value).intValue());\n+    }\n+\n+    public void testInvokeExactStaticMethodNull() throws Exception {\n+        int current = TestBean.currentCounter();\n+        Object value = MethodUtils.invokeExactStaticMethod(TestBean.class, \"currentCounter\", (Object) null);\n+        assertEquals(\"currentCounter value\", current, ((Integer) value).intValue());\n+    }\n \n     /**\n      * Simple tests for accessing static methods via invokeMethod().",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "BEANUTILS-300 Fix NullPointerExceptions in LazyDynaList\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@800638 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1",
        "parent": "https://github.com/apache/commons-beanutils/commit/727bcac61f5c559ef33fd607081ade8413488b93",
        "bug_id": "commons-beanutils_2",
        "file": [
            {
                "sha": "2174b5f98feccc0a6f7ac9987e5cd892004565ed",
                "filename": "src/java/org/apache/commons/beanutils/LazyDynaList.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1/src/java/org/apache/commons/beanutils/LazyDynaList.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1/src/java/org/apache/commons/beanutils/LazyDynaList.java",
                "status": "modified",
                "changes": 20,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/LazyDynaList.java?ref=a1679107f7e8bfe4a55bdbe9c767bd89de7142e1",
                "patch": "@@ -503,7 +503,8 @@ public void setElementType(Class elementType) {\n             throw new IllegalArgumentException(\"Element Type is missing\");\n         }\n \n-        if (size() > 0) {\n+        boolean changeType = (this.elementType != null && !this.elementType.equals(elementType));\n+        if (changeType && size() > 0) {\n             throw new IllegalStateException(\"Element Type cannot be reset\");\n         }\n \n@@ -634,18 +635,17 @@ private DynaBean transform(Object element) {\n             }\n \n             // Get DynaClass (restore WrapDynaClass lost in serialization)\n-            DynaClass dynaClass = (elementDynaClass == null) ? wrapDynaClass : elementDynaClass;\n-            if (dynaClass == null) {\n+            if (getDynaClass() == null) {\n                 setElementType(elementType);\n             }\n                          \n             // Create a new DynaBean            \n             try {\n-                dynaBean = dynaClass.newInstance();\n+                dynaBean = getDynaClass().newInstance();\n                 newDynaBeanType = dynaBean.getClass();\n             } catch (Exception e) {\n                 throw new IllegalArgumentException(\"Error creating DynaBean: \" \n-                              + dynaClass.getClass().getName() \n+                              + getDynaClass().getClass().getName() \n                               + \" - \" + e);\n             }\n \n@@ -675,13 +675,19 @@ private DynaBean transform(Object element) {\n \n         // Check the new element type, matches all the \n         // other elements in the List\n-        if (newElementType != elementType) {\n+        if (elementType != null && !newElementType.equals(elementType)) {\n             throw new IllegalArgumentException(\"Element Type \"  + newElementType \n                        + \" doesn't match other elements \" + elementType);\n         }\n \n         return dynaBean;\n         \n     }\n-    \n+\n+    /**\n+     * Return the DynaClass.\n+     */\n+    private DynaClass getDynaClass() {\n+        return (elementDynaClass == null ? wrapDynaClass : elementDynaClass);\n+    }\n }",
                "deletions": 7
            },
            {
                "sha": "b37faed7df9163fe61e1f7619d5a5288f5022178",
                "filename": "src/test/org/apache/commons/beanutils/LazyDynaListTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1/src/test/org/apache/commons/beanutils/LazyDynaListTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1/src/test/org/apache/commons/beanutils/LazyDynaListTestCase.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/LazyDynaListTestCase.java?ref=a1679107f7e8bfe4a55bdbe9c767bd89de7142e1",
                "patch": "@@ -219,6 +219,13 @@ public void testCollection(LazyDynaList list, Class testClass, DynaClass testDyn\n \n     }\n \n+    /**\n+     * Test adding a map to List with no type set.\n+     */\n+    public void testNullType() {\n+        LazyDynaList lazyList = new LazyDynaList();\n+        lazyList.add(new HashMap());\n+    }\n \n     /**\n      * Test DynaBean Create\n@@ -519,6 +526,9 @@ public void testSerializationPojo() {\n         target = null;\n         bean = null;\n \n+        // Test BEANUTILS-300\n+        result.add(null);\n+\n         // Confirm property value\n         bean = (WrapDynaBean)result.get(0);\n         assertEquals(\"post-serialize check\", \"value1\", bean.get(\"stringProperty\"));",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Correct change to fix NullPointerException for BEANUTILS-207 !!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@473882 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/7ebb8e9167eec4a436316770d97687b06f59f4d1",
        "parent": "https://github.com/apache/commons-beanutils/commit/3bf52ad0dc783a5f640b6eac31f74e1a91822e77",
        "bug_id": "commons-beanutils_3",
        "file": [
            {
                "sha": "1e393c72509496e278a982dab2724292c9e2ee36",
                "filename": "src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/7ebb8e9167eec4a436316770d97687b06f59f4d1/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/7ebb8e9167eec4a436316770d97687b06f59f4d1/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java?ref=7ebb8e9167eec4a436316770d97687b06f59f4d1",
                "patch": "@@ -845,7 +845,7 @@ public PropertyDescriptor getPropertyDescriptor(Object bean,\n                     nestedBean = getSimpleProperty(bean, next);\n                 }\n             }\n-            if (bean == null) {\n+            if (nestedBean == null) {\n                 throw new NestedNullException\n                        (\"Null property value for '\" + name.substring(0, period) +\n                         \"' on bean class '\" + bean.getClass() + \"'\");\n@@ -1805,7 +1805,7 @@ public void setNestedProperty(Object bean,\n             } else {\n                 nestedBean = getSimpleProperty(bean, next);\n             }\n-            if (bean == null) {\n+            if (nestedBean == null) {\n                 throw new NestedNullException\n                         (\"Null property value for '\" + name.substring(0, delim) +\n                          \"' on bean class '\" + bean.getClass() + \"'\");",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Fix NullPointerException introduced by BEANUTILS-207\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@473736 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/db3d3015f2ff91ef9f3172613e0477959b34820f",
        "parent": "https://github.com/apache/commons-beanutils/commit/3d34b1afb1216042aa83c94461263f45fdacdb85",
        "bug_id": "commons-beanutils_4",
        "file": [
            {
                "sha": "d0230cd3263bae037bda83d94d63a9a3da5945da",
                "filename": "src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/db3d3015f2ff91ef9f3172613e0477959b34820f/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/db3d3015f2ff91ef9f3172613e0477959b34820f/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "status": "modified",
                "changes": 18,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java?ref=db3d3015f2ff91ef9f3172613e0477959b34820f",
                "patch": "@@ -827,15 +827,16 @@ public PropertyDescriptor getPropertyDescriptor(Object bean,\n             String next = name.substring(0, period);\n             int indexOfINDEXED_DELIM = next.indexOf(PropertyUtils.INDEXED_DELIM);\n             int indexOfMAPPED_DELIM = next.indexOf(PropertyUtils.MAPPED_DELIM);\n+            Object nestedBean = null;\n             if (indexOfMAPPED_DELIM >= 0 &&\n                     (indexOfINDEXED_DELIM < 0 ||\n                     indexOfMAPPED_DELIM < indexOfINDEXED_DELIM)) {\n-                bean = getMappedProperty(bean, next);\n+                nestedBean = getMappedProperty(bean, next);\n             } else {\n                 if (indexOfINDEXED_DELIM >= 0) {\n-                    bean = getIndexedProperty(bean, next);\n+                    nestedBean = getIndexedProperty(bean, next);\n                 } else {\n-                    bean = getSimpleProperty(bean, next);\n+                    nestedBean = getSimpleProperty(bean, next);\n                 }\n             }\n             if (bean == null) {\n@@ -844,6 +845,7 @@ public PropertyDescriptor getPropertyDescriptor(Object bean,\n                         name.substring(0, period) + \"' on bean class '\" +\n                         bean.getClass() + \"'\");\n             }\n+            bean = nestedBean;\n             name = name.substring(period + 1);\n         }\n \n@@ -1774,20 +1776,22 @@ public void setNestedProperty(Object bean,\n             String next = name.substring(0, delim);\n             indexOfINDEXED_DELIM = next.indexOf(PropertyUtils.INDEXED_DELIM);\n             indexOfMAPPED_DELIM = next.indexOf(PropertyUtils.MAPPED_DELIM);\n+            Object nestedBean = null;\n             if (bean instanceof Map) {\n-                bean = getPropertyOfMapBean((Map)bean, next);\n+                nestedBean = getPropertyOfMapBean((Map)bean, next);\n             } else if (indexOfMAPPED_DELIM >= 0) {\n-                bean = getMappedProperty(bean, next);\n+                nestedBean = getMappedProperty(bean, next);\n             } else if (indexOfINDEXED_DELIM >= 0) {\n-                bean = getIndexedProperty(bean, next);\n+                nestedBean = getIndexedProperty(bean, next);\n             } else {\n-                bean = getSimpleProperty(bean, next);\n+                nestedBean = getSimpleProperty(bean, next);\n             }\n             if (bean == null) {\n                 throw new IllegalArgumentException\n                         (\"Null property value for '\" + name.substring(0, delim) +\n                          \"' on bean class '\" + bean.getClass() + \"'\");\n             }\n+            bean = nestedBean;\n             name = name.substring(delim + 1);\n         }\n ",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "[BEANUTILS-426] - ConstructorUtils.invokeConstructor(Class klass, Object arg) throws NullPointerException when arg==null, now also fixed for invokeExactConstrucot(Class, Object)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@1449460 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a",
        "parent": "https://github.com/apache/commons-beanutils/commit/f784703dc0685d65a8a485d4e8266b35c675c170",
        "bug_id": "commons-beanutils_5",
        "file": [
            {
                "sha": "897a48661cfd6daa019df15614ecacebf0ff381b",
                "filename": "src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java?ref=8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a",
                "patch": "@@ -194,6 +194,9 @@ public static Object invokeExactConstructor(Class klass, Object arg)\n             InstantiationException {\n \n         Object[] args = { arg };\n+        if (arg == null) {\n+            args = null;\n+        }\n         return invokeExactConstructor(klass, args);\n     }\n ",
                "deletions": 0
            },
            {
                "sha": "70ccb030a2d6365fce15402f72b9d221174ee136",
                "filename": "src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java?ref=8beddb2fa64ebd471535b2cbab7ec04b3cf7b53a",
                "patch": "@@ -147,6 +147,12 @@ public void testInvokeExactConstructor() throws Exception {\n         }\n     }\n \n+    public void testInvokeExactConstructorWithNull() throws Exception {\n+        Object obj = ConstructorUtils.invokeExactConstructor(TestBean.class, (Object) null);\n+        assertNotNull(obj);\n+        assertTrue(obj instanceof TestBean);\n+    }\n+\n     public void testInvokeExactConstructorWithArgArray() throws Exception {\n         {\n             Object[] args = { new Float(17.3f), \"TEST\" };",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "[BEANUTILS-426] - ConstructorUtils.invokeConstructor(Class klass, Object arg) throws NullPointerException when arg==null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@1449456 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/f0716fed8e7e87c52294f4ac71b8f540459c9ac6",
        "parent": "https://github.com/apache/commons-beanutils/commit/d16804e1a2036283ca9f4bc02c3700e2c752b3ab",
        "bug_id": "commons-beanutils_6",
        "file": [
            {
                "sha": "4d06ed5d116c0a97fd6865cd94db1a7ad2bbc333",
                "filename": "src/changes/changes.xml",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/changes/changes.xml",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/changes/changes.xml?ref=f0716fed8e7e87c52294f4ac71b8f540459c9ac6",
                "patch": "@@ -40,6 +40,10 @@ The <action> type attribute can be add,update,fix,remove.\n   <body>\n \n     <release version=\"1.8.4\" date=\"in SVN\" description=\"Bug fix for 1.8.3\">\n+      <action dev=\"britter\" type=\"fix\" issue=\"BEANUTILS-426\" >\n+         ConstructorUtils.invokeConstructor(Class klass, Object arg) throws \n+         NullPointerException when arg==null\n+      </action>\n       <action dev=\"niallp\" type=\"fix\" issue=\"BEANUTILS-380\" due-to=\"Brendan Nolan\">\n          BeanMap methods should initialize the root cause of exceptions that are thrown\n          when running on JDK 1.4+",
                "deletions": 0
            },
            {
                "sha": "daca3c1886b9912b02f5f67ea60bea7b6fcec632",
                "filename": "src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/main/java/org/apache/commons/beanutils/ConstructorUtils.java?ref=f0716fed8e7e87c52294f4ac71b8f540459c9ac6",
                "patch": "@@ -82,6 +82,9 @@ public static Object invokeConstructor(Class klass, Object arg)\n             InstantiationException {\n \n         Object[] args = { arg };\n+        if (arg == null) {\n+            args = null;\n+        }\n         return invokeConstructor(klass, args);\n     }\n ",
                "deletions": 0
            },
            {
                "sha": "744471ab8b637ea7762d9ca16acee2ac7ec46354",
                "filename": "src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f0716fed8e7e87c52294f4ac71b8f540459c9ac6/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/java/org/apache/commons/beanutils/ConstructorUtilsTestCase.java?ref=f0716fed8e7e87c52294f4ac71b8f540459c9ac6",
                "patch": "@@ -88,6 +88,12 @@ public void testInvokeConstructor() throws Exception {\n         }\n     }\n \n+    public void testInvokeConstructorNull() throws Exception {\n+        Object obj = ConstructorUtils.invokeConstructor(TestBean.class, (Object) null);\n+        assertNotNull(obj);\n+        assertTrue(obj instanceof TestBean);\n+    }\n+\n     public void testInvokeConstructorWithArgArray() throws Exception {\n         Object[] args = { new Float(17.3f), \"TEST\" };\n         Object obj = ConstructorUtils.invokeConstructor(TestBean.class,args);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "BEANUTILS-368 Fix NullPointerException in BeanUtilsBean .setProperty() - thanks to Peter Fassev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@834031 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/f65d5883cd0961203b1a4cef8ae0dee0752dd973",
        "parent": "https://github.com/apache/commons-beanutils/commit/cb0804ee03a8857b1dfb25cf890a44e59bf49089",
        "bug_id": "commons-beanutils_7",
        "file": [
            {
                "sha": "376a760a528d18c4715aee559dd436105cef2f18",
                "filename": "RELEASE-NOTES.txt",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f65d5883cd0961203b1a4cef8ae0dee0752dd973/RELEASE-NOTES.txt",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f65d5883cd0961203b1a4cef8ae0dee0752dd973/RELEASE-NOTES.txt",
                "status": "modified",
                "changes": 29,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/RELEASE-NOTES.txt?ref=f65d5883cd0961203b1a4cef8ae0dee0752dd973",
                "patch": "@@ -17,7 +17,7 @@ $Id$\n \n \n                           Commons BeanUtils Package\n-                               Version 1.8.1\n+                               Version 1.8.2\n                                Release Notes\n \n INTRODUCTION:\n@@ -29,19 +29,19 @@ BeanUtils package, and highlights changes since the previous version.\n For more information on Commons BeanUtils, see\n o http://commons.apache.org/beanutils/\n \n-Compatibility with 1.8.0\n+Compatibility with 1.8.1\n ========================\n-BeanUtils 1.8.1 is binary compatible release with Beanutils 1.8.0, containing mostly bug fixes.\n+BeanUtils 1.8.2 is binary compatible release with Beanutils 1.8.1, containing only bug fixes.\n \n-BeanUtils 1.8.1 requires a minimum of JDK 1.3.\n+BeanUtils 1.8.2 requires a minimum of JDK 1.3.\n \n Memory Leak\n ===========\n A memory leak was found in BeanUtils 1.7.0 (see BEANUTILS-291) which was fixed\n in BeanUtils 1.8.0 for JDK 1.5+.\n \n Testing of BeanUtils 1.8.1 revealed that the leak still appears to exist\n-(in both BeanUtils 1.8.0 and 1.8.1 versions) in IBM's JDK 1.6 implementation.\n+(in BeanUtils 1.8.0, 1.8.1 and 1.8.2 versions) in IBM's JDK 1.6 implementation.\n \n \n see http://issues.apache.org/jira/browse/BEANUTILS-291\n@@ -53,22 +53,5 @@ BUGS FIXED:\n \n The following is a list of the bugs fixed in this release, with their Jira issue number:\n \n-  * [BEANUTILS-300] - NPE in LazyDynaList\n-  * [BEANUTILS-327] - JDBCDynaClass throws class not found exception under java6\n-  * [BEANUTILS-336] - MappedPropertyDescriptor#reLoadClass() possible NPE / odd code; also swallows Throwable\n-  * [BEANUTILS-339] - BeanUtilsBean.setProperty throws IllegalArgumentException if value is null\n-  * [BEANUTILS-345] - BeanUtilsBean.setProperty does not handle some kind of nested properties\n-  * [BEANUTILS-347] - MappedPropertyDescriptor throws an exception after method reference has been garbage collected\n-  * [BEANUTILS-349] - copyProperties throws NullPointerException if an IllegalArgumentException is thrown due to a null value parameter for a primitive\n-  * [BEANUTILS-351] - FloatLocaleConverter cannot parse 0\n-  * [BEANUTILS-354] - Type in BooleanConverter: \"Cna't convert value\"\n-\n-\n-ENHANCEMENTS:\n-=============\n-The following is a list of enhancements in this release, with their Jira issue number:\n-\n-  * [BEANUTILS-333] - Avoid calling setAccessible() if not needed\n-  * [BEANUTILS-344] - Method createDynaProperty of JDBCDynaClass should first look for column label instead of column name in ResultSetMetadata object..\n-  * [BEANUTILS-350] - change visibility of method \"evaluateValue\" belongs to the class BeanPropertyValueEqualsPredicate to \"protected\".\n+  * [BEANUTILS-368] - NullPointerException in BeanUtilsBean .setProperty()\n ",
                "deletions": 23
            },
            {
                "sha": "d1c714c44a8049ecfeef93bb486dd0f6cef929f7",
                "filename": "src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f65d5883cd0961203b1a4cef8ae0dee0752dd973/src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f65d5883cd0961203b1a4cef8ae0dee0752dd973/src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/BeanUtilsBean.java?ref=f65d5883cd0961203b1a4cef8ae0dee0752dd973",
                "patch": "@@ -927,7 +927,7 @@ public void setProperty(Object bean, String name, Object value)\n             type = dynaProperty.getType();\n         } else if (target instanceof Map) {\n             type = Object.class;\n-        } else if (target.getClass().isArray() && index >= 0) {\n+        } else if (target != null && target.getClass().isArray() && index >= 0) {\n             type = Array.get(target, index).getClass();\n         } else {\n             PropertyDescriptor descriptor = null;",
                "deletions": 1
            },
            {
                "sha": "ec8cb8d8bfc5563cd35ddd2d960c65b515a2b228",
                "filename": "src/test/org/apache/commons/beanutils/bugs/Jira368TestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f65d5883cd0961203b1a4cef8ae0dee0752dd973/src/test/org/apache/commons/beanutils/bugs/Jira368TestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f65d5883cd0961203b1a4cef8ae0dee0752dd973/src/test/org/apache/commons/beanutils/bugs/Jira368TestCase.java",
                "status": "added",
                "changes": 92,
                "additions": 92,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/bugs/Jira368TestCase.java?ref=f65d5883cd0961203b1a4cef8ae0dee0752dd973",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.beanutils.bugs;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.beanutils.BeanUtils;\n+\n+/**\n+ * See https://issues.apache.org/jira/browse/BEANUTILS-368\n+ * <p />\n+ *\n+ * @version $Revision$ $Date$\n+ */\n+public class Jira368TestCase extends TestCase {\n+\n+    /**\n+     * Create a test case with the specified name.\n+     *\n+     * @param name The name of the test\n+     */\n+    public Jira368TestCase(String name) {\n+        super(name);\n+    }\n+\n+    /**\n+     * Run the Test.\n+     *\n+     * @param args Arguments\n+     */\n+    public static void main(String[] args) {\n+        junit.textui.TestRunner.run(suite());\n+    }\n+\n+    /**\n+     * Create a test suite for this test.\n+     *\n+     * @return a test suite\n+     */\n+    public static Test suite() {\n+        return (new TestSuite(Jira368TestCase.class));\n+    }\n+\n+    /**\n+     * Set up.\n+     *\n+     * @throws java.lang.Exception\n+     */\n+    protected void setUp() throws Exception {\n+        super.setUp();\n+    }\n+\n+    /**\n+     * Tear Down.\n+     *\n+     * @throws java.lang.Exception\n+     */\n+    protected void tearDown() throws Exception {\n+        super.tearDown();\n+    }\n+\n+    /**\n+     * Test {@link BeanUtils} setProperty() with Null value\n+     */\n+    public void testBeanUtilsSetProperty_NullBean() throws Exception {\n+        try {\n+            BeanUtils.setProperty(null, \"foo\", \"bar\");\n+        } catch (NullPointerException e) {\n+            fail(\"Threw NullPointerException\");\n+        } catch (IllegalArgumentException e) {\n+            // expected result\n+        } catch (Exception e) {\n+            fail(\"Threw \" + e);\n+        }\n+    }\n+}",
                "deletions": 0
            },
            {
                "sha": "784c1dddd2952972b7e580ccc020764f22f7fb56",
                "filename": "xdocs/changes.xml",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f65d5883cd0961203b1a4cef8ae0dee0752dd973/xdocs/changes.xml",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f65d5883cd0961203b1a4cef8ae0dee0752dd973/xdocs/changes.xml",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/xdocs/changes.xml?ref=f65d5883cd0961203b1a4cef8ae0dee0752dd973",
                "patch": "@@ -39,6 +39,12 @@ The <action> type attribute can be add,update,fix,remove.\n   </properties>\n   <body>\n \n+    <release version=\"1.8.2\" date=\"2009-11-13\" description=\"Bug fix for 1.8.1\">\n+      <action dev=\"niallp\" type=\"fix\" issue=\"BEANUTILS-368\" due-to=\"Peter Fassev\">\n+         NullPointerException in BeanUtilsBean .setProperty()\n+      </action>\n+    </release>\n+\n     <release version=\"1.8.1\" date=\"2009-10-20\" description=\"Bug fixes for 1.8.0\">\n       <action dev=\"niallp\" type=\"fix\" issue=\"BEANUTILS-300\" due-to=\"Henri and Sebb\">\n          NPE in LazyDynaList",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "BEANUTILS-349 JDK 1.3 & 1.4 throw NullPointerException if null value for a primitive parameter (JDK 1.5+ throws IllegalArgumentException)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@822777 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/8007307e35b296132bfa70ab6788d89bf0e3478a",
        "parent": "https://github.com/apache/commons-beanutils/commit/31b47513e664516db4b08b1e4223a14f3c573795",
        "bug_id": "commons-beanutils_8",
        "file": [
            {
                "sha": "d8e5e1d728edcaee046274fb8337ae55d2aa04ce",
                "filename": "src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/8007307e35b296132bfa70ab6788d89bf0e3478a/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/8007307e35b296132bfa70ab6788d89bf0e3478a/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "status": "modified",
                "changes": 48,
                "additions": 44,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java?ref=8007307e35b296132bfa70ab6788d89bf0e3478a",
                "patch": "@@ -2160,15 +2160,55 @@ private Object invokeMethod(\n                             throws\n                                 IllegalAccessException,\n                                 InvocationTargetException {\n+        if(bean == null) {\n+            throw new IllegalArgumentException(\"No bean specified \" +\n+                \"- this should have been checked before reaching this method\");\n+        }\n+\n         try {\n             \n             return method.invoke(bean, values);\n         \n-        } catch (IllegalArgumentException cause) {\n-            if(bean == null) {\n-                throw new IllegalArgumentException(\"No bean specified \" +\n-                    \"- this should have been checked before reaching this method\");\n+        } catch (NullPointerException cause) {\n+            // JDK 1.3 and JDK 1.4 throw NullPointerException if an argument is\n+            // null for a primitive value (JDK 1.5+ throw IllegalArgumentException)\n+            String valueString = \"\";\n+            if (values != null) {\n+                for (int i = 0; i < values.length; i++) {\n+                    if (i>0) {\n+                        valueString += \", \" ;\n+                    }\n+                    if (values[i] == null) {\n+                        valueString += \"<null>\";\n+                    } else {\n+                        valueString += (values[i]).getClass().getName();\n+                    }\n+                }\n             }\n+            String expectedString = \"\";\n+            Class[] parTypes = method.getParameterTypes();\n+            if (parTypes != null) {\n+                for (int i = 0; i < parTypes.length; i++) {\n+                    if (i > 0) {\n+                        expectedString += \", \";\n+                    }\n+                    expectedString += parTypes[i].getName();\n+                }\n+            }\n+            IllegalArgumentException e = new IllegalArgumentException(\n+                \"Cannot invoke \" + method.getDeclaringClass().getName() + \".\" \n+                + method.getName() + \" on bean class '\" + bean.getClass() +\n+                \"' - \" + cause.getMessage()\n+                // as per https://issues.apache.org/jira/browse/BEANUTILS-224\n+                + \" - had objects of type \\\"\" + valueString\n+                + \"\\\" but expected signature \\\"\"\n+                +   expectedString + \"\\\"\"\n+                );\n+            if (!BeanUtils.initCause(e, cause)) {\n+                log.error(\"Method invocation failed\", cause);\n+            }\n+            throw e;\n+        } catch (IllegalArgumentException cause) {\n             String valueString = \"\";\n             if (values != null) {\n                 for (int i = 0; i < values.length; i++) {",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "BEANUTILS-336 Fix NullPointerException and only catch ClassNotFoundException rather than throwable - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@800643 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/67dae23ac992d38dc0e86fcd0ff04cd9af9ec85e",
        "parent": "https://github.com/apache/commons-beanutils/commit/a1679107f7e8bfe4a55bdbe9c767bd89de7142e1",
        "bug_id": "commons-beanutils_9",
        "file": [
            {
                "sha": "a8c65af49ee3e9fcae0902080d1b7601ce4573fd",
                "filename": "src/java/org/apache/commons/beanutils/MappedPropertyDescriptor.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/67dae23ac992d38dc0e86fcd0ff04cd9af9ec85e/src/java/org/apache/commons/beanutils/MappedPropertyDescriptor.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/67dae23ac992d38dc0e86fcd0ff04cd9af9ec85e/src/java/org/apache/commons/beanutils/MappedPropertyDescriptor.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/MappedPropertyDescriptor.java?ref=67dae23ac992d38dc0e86fcd0ff04cd9af9ec85e",
                "patch": "@@ -491,15 +491,16 @@ private Class reLoadClass() {\n             if (classLoader != null) {\n                 try {\n                     return classLoader.loadClass(className);\n-                } catch (Throwable t) {\n+                } catch (ClassNotFoundException e) {\n                     // ignore\n                 }\n             }\n \n             // Try this class's class loader\n+            classLoader = MappedPropertyDescriptor.class.getClassLoader();\n             try {\n                 return classLoader.loadClass(className);\n-            } catch (Throwable t) {\n+            } catch (ClassNotFoundException e) {\n                 return null;\n             }\n         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Fix for BEANUTILS-349 - copyProperties throws NullPointerException if an IllegalArgumentException is thrown due to a null value parameter - thanks to Eivind Tagseth for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@783269 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/727bcac61f5c559ef33fd607081ade8413488b93",
        "parent": "https://github.com/apache/commons-beanutils/commit/257528a631d66539b9b37d5d6a8347741d323235",
        "bug_id": "commons-beanutils_10",
        "file": [
            {
                "sha": "68af3bd8a8acb283c503a9b81cc21775192027fa",
                "filename": "src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/727bcac61f5c559ef33fd607081ade8413488b93/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/727bcac61f5c559ef33fd607081ade8413488b93/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java?ref=727bcac61f5c559ef33fd607081ade8413488b93",
                "patch": "@@ -2169,7 +2169,11 @@ private Object invokeMethod(\n                     if (i>0) {\n                         valueString += \", \" ;\n                     }\n-                    valueString += (values[i]).getClass().getName();\n+                    if (values[i] == null) {\n+                        valueString += \"<null>\";\n+                    } else {\n+                        valueString += (values[i]).getClass().getName();\n+                    }\n                 }\n             }\n             String expectedString = \"\";",
                "deletions": 1
            },
            {
                "sha": "bf552c1386e0648fafe9428c817d71b1ee3a223f",
                "filename": "src/test/org/apache/commons/beanutils/BeanPropertyValueChangeClosureTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/727bcac61f5c559ef33fd607081ade8413488b93/src/test/org/apache/commons/beanutils/BeanPropertyValueChangeClosureTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/727bcac61f5c559ef33fd607081ade8413488b93/src/test/org/apache/commons/beanutils/BeanPropertyValueChangeClosureTestCase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/BeanPropertyValueChangeClosureTestCase.java?ref=727bcac61f5c559ef33fd607081ade8413488b93",
                "patch": "@@ -217,7 +217,7 @@ public void testExecuteWithSimplePrimitivePropertyAndNullValue() {\n         try {\n             new BeanPropertyValueChangeClosure(\"intProperty\", null).execute(new TestBean());\n             fail(\"Should have thrown an IllegalArgumentException\");\n-        } catch (NullPointerException e) { \n+        } catch (IllegalArgumentException e) { \n             /* this is what we expect */\n         }\n     }",
                "deletions": 1
            },
            {
                "sha": "d61d6e50bf7790910fe0bbd114743121821611ab",
                "filename": "src/test/org/apache/commons/beanutils/bugs/Jira349TestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/727bcac61f5c559ef33fd607081ade8413488b93/src/test/org/apache/commons/beanutils/bugs/Jira349TestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/727bcac61f5c559ef33fd607081ade8413488b93/src/test/org/apache/commons/beanutils/bugs/Jira349TestCase.java",
                "status": "added",
                "changes": 131,
                "additions": 131,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/bugs/Jira349TestCase.java?ref=727bcac61f5c559ef33fd607081ade8413488b93",
                "patch": "@@ -0,0 +1,131 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.commons.beanutils.bugs;\r\n+\r\n+import java.lang.reflect.Method;\r\n+\r\n+import junit.framework.Test;\r\n+import junit.framework.TestCase;\r\n+import junit.framework.TestSuite;\r\n+\r\n+import org.apache.commons.beanutils.MethodUtils;\r\n+import org.apache.commons.beanutils.PropertyUtils;\r\n+import org.apache.commons.beanutils.bugs.other.Jira298BeanFactory;\r\n+import org.apache.commons.beanutils.bugs.other.Jira298BeanFactory.IX;\r\n+import org.apache.commons.logging.Log;\r\n+import org.apache.commons.logging.LogFactory;\r\n+\r\n+/**\r\n+ * See https://issues.apache.org/jira/browse/BEANUTILS-349\r\n+ * <p />\r\n+ *\r\n+ * @version $Revision$ $Date$\r\n+ */\r\n+public class Jira349TestCase extends TestCase {\r\n+\r\n+    private Log log = LogFactory.getLog(Jira349TestCase .class);\r\n+\r\n+    /**\r\n+     * Create a test case with the specified name.\r\n+     *\r\n+     * @param name The name of the test\r\n+     */\r\n+    public Jira349TestCase(String name) {\r\n+        super(name);\r\n+    }\r\n+\r\n+    /**\r\n+     * Run the Test.\r\n+     *\r\n+     * @param args Arguments\r\n+     */\r\n+    public static void main(String[] args) {\r\n+        junit.textui.TestRunner.run(suite());\r\n+    }\r\n+\r\n+    /**\r\n+     * Create a test suite for this test.\r\n+     *\r\n+     * @return a test suite\r\n+     */\r\n+    public static Test suite() {\r\n+        return (new TestSuite(Jira349TestCase.class));\r\n+    }\r\n+\r\n+    /**\r\n+     * Set up.\r\n+     *\r\n+     * @throws java.lang.Exception\r\n+     */\r\n+    protected void setUp() throws Exception {\r\n+        super.setUp();\r\n+    }\r\n+\r\n+    /**\r\n+     * Tear Down.\r\n+     *\r\n+     * @throws java.lang.Exception\r\n+     */\r\n+    protected void tearDown() throws Exception {\r\n+        super.tearDown();\r\n+    }\r\n+\r\n+    /**\r\n+     * Test {@link PropertyUtils#copyProperties(Object, Object)}\r\n+     */\r\n+    public void testIssue_BEANUTILS_349_PropertyUtils_copyProperties() {\r\n+        PrimitiveBean dest = new PrimitiveBean();\r\n+        ObjectBean origin = new ObjectBean ();\r\n+        try {\r\n+            PropertyUtils.copyProperties(dest, origin);\r\n+        } catch (NullPointerException e) {\r\n+            log.error(\"Failed\", e);\r\n+            fail(\"Threw NullPointerException\");\r\n+        } catch (IllegalArgumentException e) {\r\n+            log.warn(\"Expected Result\", e);\r\n+        } catch (Throwable t) {\r\n+            log.error(\"Failed\", t);\r\n+            fail(\"Threw exception: \" + t);\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Test Bean with a primitive boolean property.\r\n+     */\r\n+    public static class PrimitiveBean {\r\n+        private boolean testProperty;\r\n+        public boolean getTestProperty() {\r\n+            return testProperty;\r\n+        }\r\n+        public void setTestProperty(boolean testProperty) {\r\n+            this.testProperty = testProperty;\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Test Bean with a Boolean object property.\r\n+     */\r\n+    public static class ObjectBean {\r\n+        private Boolean testProperty;\r\n+        public Boolean getTestProperty() {\r\n+            return testProperty;\r\n+        }\r\n+        public void setTestProperty(Boolean testProperty) {\r\n+            this.testProperty = testProperty;\r\n+        }\r\n+    }\r\n+}\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Removed misleading @exception from java docs. NullPointerException should never been through in the circumstances lists and the actual exception thrown is listed above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@128719 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/b6de4a544903891c3631abef868bfbea725cd585",
        "parent": "https://github.com/apache/commons-beanutils/commit/fef40c256307f824118e80bd02db1e45c130d25b",
        "bug_id": "commons-beanutils_11",
        "file": [
            {
                "sha": "91c1dfd3d1bdf222a767c76cb7c1c9f6316b76c1",
                "filename": "src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/b6de4a544903891c3631abef868bfbea725cd585/src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/b6de4a544903891c3631abef868bfbea725cd585/src/java/org/apache/commons/beanutils/BeanUtilsBean.java",
                "status": "modified",
                "changes": 10,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/BeanUtilsBean.java?ref=b6de4a544903891c3631abef868bfbea725cd585",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtilsBean.java,v 1.8 2003/05/21 09:41:45 rdonkin Exp $\n- * $Revision: 1.8 $\n- * $Date: 2003/05/21 09:41:45 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtilsBean.java,v 1.9 2003/05/22 14:16:08 rdonkin Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2003/05/22 14:16:08 $\n  *\n  * ====================================================================\n  *\n@@ -93,7 +93,7 @@\n  * @author Chris Audley\n  * @author Rey Fran\ufffdois\n  * @author Gregor Ra\ufffdman\n- * @version $Revision: 1.8 $ $Date: 2003/05/21 09:41:45 $\n+ * @version $Revision: 1.9 $ $Date: 2003/05/22 14:16:08 $\n  * @see BeanUtils\n  * @since 1.7\n  */\n@@ -260,8 +260,6 @@ public Object cloneBean(Object bean)\n      *  <code>orig</code> argument is null\n      * @exception InvocationTargetException if the property accessor method\n      *  throws an exception\n-     * @exception NullPointerException if <code>orig</code> or\n-     *  <code>dest</code> is <code>null</code>\n      */\n     public void copyProperties(Object dest, Object orig)\n         throws IllegalAccessException, InvocationTargetException {",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Fixed a bug that could result in a NullPointerException when an array\ncontains a null value.\n\nPR: 5407\nSubmitted by: Alexei Yudichev\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@128542 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/6323fb9618402b2acad1d64b4cf431f388bfc881",
        "parent": "https://github.com/apache/commons-beanutils/commit/52c46c61b739b6e300e39aa0dcc4c0fd41f0414c",
        "bug_id": "commons-beanutils_12",
        "file": [
            {
                "sha": "77ab3a37a07c66552d88eaaaec037b563fd44058",
                "filename": "src/java/org/apache/commons/beanutils/BeanUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/6323fb9618402b2acad1d64b4cf431f388bfc881/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/6323fb9618402b2acad1d64b4cf431f388bfc881/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "status": "modified",
                "changes": 14,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/BeanUtils.java?ref=6323fb9618402b2acad1d64b4cf431f388bfc881",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.13 2002/02/14 06:59:59 craigmcc Exp $\n- * $Revision: 1.13 $\n- * $Date: 2002/02/14 06:59:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.14 2002/03/07 06:43:17 martinc Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2002/03/07 06:43:17 $\n  *\n  * ====================================================================\n  *\n@@ -86,7 +86,7 @@\n  * @author Chris Audley\n  * @author Rey Fran\ufffdois\n  * @author Gregor Ra\ufffdman\n- * @version $Revision: 1.13 $ $Date: 2002/02/14 06:59:59 $\n+ * @version $Revision: 1.14 $ $Date: 2002/03/07 06:43:17 $\n  */\n \n public class BeanUtils {\n@@ -234,7 +234,11 @@ public static Map describe(Object bean)\n             try {\n                 int n = Array.getLength(value);\n                 for (int i = 0; i < n; i++) {\n-                    values.add(Array.get(value, i).toString());\n+                    Object item = Array.get(value, i);\n+                    if (item == null)\n+                        values.add((String) null);\n+                    else\n+                        values.add(item.toString());\n                 }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 ;",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Fix for BEANUTILS-302 - NPE in ArrayConverter when converting a string with underscores to a string array - reported by Martin Bartlett\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@618207 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4",
        "parent": "https://github.com/apache/commons-beanutils/commit/c8fbf336a870520f42e46696300165374b29ddb0",
        "bug_id": "commons-beanutils_13",
        "file": [
            {
                "sha": "da19ca231b4c931c0f1e2bb1cab0670c585160a9",
                "filename": "src/java/org/apache/commons/beanutils/converters/ArrayConverter.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4/src/java/org/apache/commons/beanutils/converters/ArrayConverter.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4/src/java/org/apache/commons/beanutils/converters/ArrayConverter.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/converters/ArrayConverter.java?ref=b32ef1172046e4b3e9f496c3e06c363a12f3cbf4",
                "patch": "@@ -434,10 +434,12 @@ private List parseElements(Class type, String value) {\n             while (true) {\n                 int ttype = st.nextToken();\n                 if ((ttype == StreamTokenizer.TT_WORD) || (ttype > 0)) {\n-                    if (list == null) {\n-                        list = new ArrayList();\n+                    if (st.sval != null) {\n+                        if (list == null) {\n+                            list = new ArrayList();\n+                        }\n+                        list.add(st.sval);\n                     }\n-                    list.add(st.sval.trim());\n                 } else if (ttype == StreamTokenizer.TT_EOF) {\n                     break;\n                 } else {",
                "deletions": 3
            },
            {
                "sha": "20ec30bdc0d3c5706d79808dd792d8bccc5e889f",
                "filename": "src/test/org/apache/commons/beanutils/converters/ArrayConverterTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4/src/test/org/apache/commons/beanutils/converters/ArrayConverterTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4/src/test/org/apache/commons/beanutils/converters/ArrayConverterTestCase.java",
                "status": "modified",
                "changes": 27,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/converters/ArrayConverterTestCase.java?ref=b32ef1172046e4b3e9f496c3e06c363a12f3cbf4",
                "patch": "@@ -360,6 +360,33 @@ public void testErrors() {\n         }\n     }\n \n+    /**\n+     * Test for BEANUTILS-302 - throwing a NPE when underscore used\n+     */\n+    public void testUnderscore_BEANUTILS_302() {\n+        String value = \"first_value,second_value\";\n+        ArrayConverter converter = new ArrayConverter(String[].class, new StringConverter());\n+\n+        // test underscore not allowed (the default)\n+        String[] result = (String[])converter.convert(String[].class, value);\n+        assertNotNull(\"result.null\", result);\n+        assertEquals(\"result.length\", 4, result.length);\n+        assertEquals(\"result[0]\", \"first\", result[0]);\n+        assertEquals(\"result[1]\", \"value\", result[1]);\n+        assertEquals(\"result[2]\", \"second\", result[2]);\n+        assertEquals(\"result[3]\", \"value\", result[3]);\n+\n+        // configure the converter to allow underscore\n+        converter.setAllowedChars(new char[] {'.', '-', '_'});\n+\n+        // test underscore allowed\n+        result = (String[])converter.convert(String[].class, value);\n+        assertNotNull(\"result.null\", result);\n+        assertEquals(\"result.length\", 2, result.length);\n+        assertEquals(\"result[0]\", \"first_value\", result[0]);\n+        assertEquals(\"result[1]\", \"second_value\", result[1]);\n+    }\n+\n     /**\n      * Check that two arrays are the same.\n      * @param msg Test prefix msg",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Fix for BEANUTILS-306 - LocaleConvertUtilsBean.convert throws NPE on null Locale when debug logging is enabled\n(NOTE: change surefire plugin configuration logging level to \"DEBUG\" in pom.xml to test this is fixed)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@628158 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/f306335d0f7cbe362cc6dd869642b65376db8b6c",
        "parent": "https://github.com/apache/commons-beanutils/commit/b32ef1172046e4b3e9f496c3e06c363a12f3cbf4",
        "bug_id": "commons-beanutils_14",
        "file": [
            {
                "sha": "f37e242acd471c2d106311a883675b92b7b45332",
                "filename": "pom.xml",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f306335d0f7cbe362cc6dd869642b65376db8b6c/pom.xml",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f306335d0f7cbe362cc6dd869642b65376db8b6c/pom.xml",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/pom.xml?ref=f306335d0f7cbe362cc6dd869642b65376db8b6c",
                "patch": "@@ -180,6 +180,23 @@\n                 -->\n                 <exclude>**/*MemoryTestCase.java</exclude>\n               </excludes>\n+\n+              <!-- Configure Logging -->\n+              <systemProperties>\n+                  <property>\n+                      <name>org.apache.commons.logging.LogFactory</name>\n+                      <value>org.apache.commons.logging.impl.LogFactoryImpl</value>\n+                  </property>\n+                  <property>\n+                      <name>org.apache.commons.logging.Log</name>\n+                      <value>org.apache.commons.logging.impl.SimpleLog</value>\n+                  </property>\n+                  <property>\n+                      <name>org.apache.commons.logging.simplelog.defaultlog</name>\n+                      <value>WARN</value>\n+                  </property>\n+              </systemProperties>\n+\n           </configuration>\n         </plugin>\n         <plugin>",
                "deletions": 0
            },
            {
                "sha": "d6896f453e823fe1a6f4e0ea734b05814da92448",
                "filename": "src/java/org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f306335d0f7cbe362cc6dd869642b65376db8b6c/src/java/org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f306335d0f7cbe362cc6dd869642b65376db8b6c/src/java/org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java?ref=f306335d0f7cbe362cc6dd869642b65376db8b6c",
                "patch": "@@ -263,7 +263,7 @@ public Object convert(String value, Class clazz, Locale locale, String pattern)\n \n         if (log.isDebugEnabled()) {\n             log.debug(\"Convert string \" + value + \" to class \" +\n-                    clazz.getName() + \" using \" + locale.toString() +\n+                    clazz.getName() + \" using \" + locale +\n                     \" locale and \" + pattern + \" pattern\");\n         }\n \n@@ -333,7 +333,7 @@ public Object convert(String[] values, Class clazz, Locale locale, String patter\n         }\n         if (log.isDebugEnabled()) {\n             log.debug(\"Convert String[\" + values.length + \"] to class \" +\n-                    type.getName() + \"[] using \" + locale.toString() +\n+                    type.getName() + \"[] using \" + locale +\n                     \" locale and \" + pattern + \" pattern\");\n         }\n ",
                "deletions": 2
            },
            {
                "sha": "df70c7253fb26fa67439c8fbc4aed8ccf09a7d4b",
                "filename": "src/test/org/apache/commons/beanutils/locale/LocaleConvertUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/f306335d0f7cbe362cc6dd869642b65376db8b6c/src/test/org/apache/commons/beanutils/locale/LocaleConvertUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/f306335d0f7cbe362cc6dd869642b65376db8b6c/src/test/org/apache/commons/beanutils/locale/LocaleConvertUtilsTestCase.java",
                "status": "modified",
                "changes": 34,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/locale/LocaleConvertUtilsTestCase.java?ref=f306335d0f7cbe362cc6dd869642b65376db8b6c",
                "patch": "@@ -23,6 +23,7 @@\n import java.sql.Timestamp;\n import java.text.DecimalFormat;\n import java.text.NumberFormat;\n+import java.util.Locale;\n \n import junit.framework.TestCase;\n import junit.framework.Test;\n@@ -595,6 +596,39 @@ public void fixmetestPositiveStringArray() {\n \n     }\n \n+    /**\n+     * Test conversion of a String using a Locale and pattern.\n+     */\n+    public void testConvertStringLocaleNull() {\n+        Object result = null;\n+        try {\n+            result = LocaleConvertUtils.convert(\"123\", Integer.class, (Locale)null, \"#,###\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            fail(\"Threw: \" + e);\n+        }\n+        assertNotNull(\"Null Result\", result);\n+        assertEquals(\"Integer Type\", Integer.class, result.getClass());\n+        assertEquals(\"Integer Value\", new Integer(123), result);\n+    }\n+\n+    /**\n+     * Test conversion of a String array using a Locale and pattern.\n+     */\n+    public void testConvertStringArrayLocaleNull() {\n+        Object result = null;\n+        try {\n+            result = LocaleConvertUtils.convert(new String[] {\"123\"}, Integer[].class, (Locale)null, \"#,###\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            fail(\"Threw: \" + e);\n+        }\n+        assertNotNull(\"Null Result\", result);\n+        assertEquals(\"Integer Array Type\", Integer[].class, result.getClass());\n+        assertEquals(\"Integer Array Length\", 1, ((Integer[])result).length);\n+        assertEquals(\"Integer Array Value\", new Integer(123), ((Integer[])result)[0]);\n+    }\n+\n \n     // -------------------------------------------------------- Private Methods\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Check for null \"new\" values in setProperty() appropriately, to avoid NPEs.\n\nPR: Bugzilla #15773\nSubmitted by:\tBen Tomasini <btomasini at neteverything.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@128659 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/6b8041f96ce1017be49d4eb460ae2ef1c81294f7",
        "parent": "https://github.com/apache/commons-beanutils/commit/d981b1ffa632617ca096b2a9816557f68cce1ea4",
        "bug_id": "commons-beanutils_15",
        "file": [
            {
                "sha": "8a8d1d3fb0833d7ca5a089f7812e698d06f6093b",
                "filename": "src/java/org/apache/commons/beanutils/BeanUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "status": "modified",
                "changes": 17,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/BeanUtils.java?ref=6b8041f96ce1017be49d4eb460ae2ef1c81294f7",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.32 2002/12/21 19:33:19 craigmcc Exp $\n- * $Revision: 1.32 $\n- * $Date: 2002/12/21 19:33:19 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.33 2003/01/03 20:32:35 craigmcc Exp $\n+ * $Revision: 1.33 $\n+ * $Date: 2003/01/03 20:32:35 $\n  *\n  * ====================================================================\n  *\n@@ -87,7 +87,7 @@\n  * @author Chris Audley\n  * @author Rey Fran\ufffdois\n  * @author Gregor Ra\ufffdman\n- * @version $Revision: 1.32 $ $Date: 2002/12/21 19:33:19 $\n+ * @version $Revision: 1.33 $ $Date: 2003/01/03 20:32:35 $\n  */\n \n public class BeanUtils {\n@@ -880,7 +880,12 @@ public static void setProperty(Object bean, String name, Object value)\n         // Convert the specified value to the required type\n         Object newValue = null;\n         if (type.isArray() && (index < 0)) { // Scalar value into array\n-            if (value instanceof String) {\n+            log.debug(\"CONVERTING SCALAR '\" + value + \"' TO ARRAY\");\n+            if (value == null) {\n+                String values[] = new String[1];\n+                values[0] = (String) value;\n+                newValue = ConvertUtils.convert((String[]) values, type);\n+            } else if (value instanceof String) {\n                 String values[] = new String[1];\n                 values[0] = (String) value;\n                 newValue = ConvertUtils.convert((String[]) values, type);\n@@ -900,7 +905,7 @@ public static void setProperty(Object bean, String name, Object value)\n                 newValue = value;\n             }\n         } else {                             // Value into scalar\n-            if (value instanceof String || (value == null && type.isPrimitive())) {\n+            if ((value instanceof String) || (value == null)) {\n                 newValue = ConvertUtils.convert((String) value, type);\n             } else if (value instanceof String[]) {\n                 newValue = ConvertUtils.convert(((String[]) value)[0],",
                "deletions": 6
            },
            {
                "sha": "82604665096201b8fd1b6ad27edca33dfe596efa",
                "filename": "src/java/org/apache/commons/beanutils/ResultSetDynaClass.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/java/org/apache/commons/beanutils/ResultSetDynaClass.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/java/org/apache/commons/beanutils/ResultSetDynaClass.java",
                "status": "modified",
                "changes": 16,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/ResultSetDynaClass.java?ref=6b8041f96ce1017be49d4eb460ae2ef1c81294f7",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/ResultSetDynaClass.java,v 1.7 2002/12/16 01:53:20 craigmcc Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/12/16 01:53:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/ResultSetDynaClass.java,v 1.8 2003/01/03 20:32:35 craigmcc Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2003/01/03 20:32:35 $\n  *\n  * ====================================================================\n  *\n@@ -87,8 +87,8 @@\n  * </pre>\n  *\n  * <p>Each column in the result set will be represented as a DynaBean\n- * property of the corresponding name (forced to lower case for portability).\n- * </p>\n+ * property of the corresponding name (optionally forced to lower case\n+ * for portability).</p>\n  *\n  * <p><strong>WARNING</strong> - Any {@link DynaBean} instance returned by\n  * this class, or from the <code>Iterator</code> returned by the\n@@ -125,7 +125,7 @@\n  * </pre>\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.7 $ $Date: 2002/12/16 01:53:20 $\n+ * @version $Revision: 1.8 $ $Date: 2003/01/03 20:32:35 $\n  */\n \n public class ResultSetDynaClass implements DynaClass {\n@@ -142,7 +142,7 @@\n      * @param resultSet The result set to be wrapped\n      *\n      * @exception NullPointerException if <code>resultSet</code>\n-     *  is <code>false</code>\n+     *  is <code>null</code>\n      * @exception SQLException if the metadata for this result set\n      *  cannot be introspected\n      */\n@@ -170,7 +170,7 @@ public ResultSetDynaClass(ResultSet resultSet) throws SQLException {\n      * @param lowerCase Should property names be lower cased?\n      *\n      * @exception NullPointerException if <code>resultSet</code>\n-     *  is <code>false</code>\n+     *  is <code>null</code>\n      * @exception SQLException if the metadata for this result set\n      *  cannot be introspected\n      */",
                "deletions": 8
            },
            {
                "sha": "ec66925469a4922ecf0aece788d3b74244f75569",
                "filename": "src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "status": "modified",
                "changes": 50,
                "additions": 46,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java?ref=6b8041f96ce1017be49d4eb460ae2ef1c81294f7",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java,v 1.16 2002/12/21 19:33:20 craigmcc Exp $\n- * $Revision: 1.16 $\n- * $Date: 2002/12/21 19:33:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java,v 1.17 2003/01/03 20:32:35 craigmcc Exp $\n+ * $Revision: 1.17 $\n+ * $Date: 2003/01/03 20:32:35 $\n  *\n  * ====================================================================\n  *\n@@ -97,7 +97,7 @@\n  * </ul>\n  *\n  * @author <a href=\"mailto:geirm@optonline.net\">Geir Magnusson Jr.</a>\n- * @version $Revision: 1.16 $\n+ * @version $Revision: 1.17 $\n  */\n \n public class BeanUtilsTestCase extends TestCase {\n@@ -782,6 +782,48 @@ public void testPopulateScalar() {\n     }\n \n \n+    /**\n+     * Test calling setProperty() with null property values.\n+     */\n+    public void testSetPropertyNullValues() throws Exception {\n+\n+        Object oldValue = null;\n+        Object newValue = null;\n+\n+        // Scalar value into array\n+        oldValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        BeanUtils.setProperty(bean, \"stringArray\", (String) null);\n+        newValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        assertNotNull(\"stringArray is not null\", newValue);\n+        assertTrue(\"stringArray of correct type\",\n+                   newValue instanceof String[]);\n+        assertEquals(\"stringArray length\",\n+                     1, ((String[]) newValue).length);\n+        assertTrue(\"stringArray[0] is null\",\n+                   ((String[]) newValue)[0] == null);\n+        PropertyUtils.setProperty(bean, \"stringArray\", oldValue);\n+\n+        // Indexed value into array\n+        oldValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        BeanUtils.setProperty(bean, \"stringArray[2]\", (String) null);\n+        newValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        assertNotNull(\"stringArray is not null\", newValue);\n+        assertTrue(\"stringArray of correct type\",\n+                   newValue instanceof String[]);\n+        assertEquals(\"stringArray length\",\n+                     5, ((String[]) newValue).length);\n+        assertTrue(\"stringArray[2] is null\",\n+                   ((String[]) newValue)[2] == null);\n+        PropertyUtils.setProperty(bean, \"stringArray\", oldValue);\n+\n+        // Value into scalar\n+        BeanUtils.setProperty(bean, \"stringProperty\", null);\n+        assertTrue(\"stringProperty is now null\",\n+                   BeanUtils.getProperty(bean, \"stringProperty\") == null);\n+\n+    }\n+\n+\n     /**\n      * Test converting to and from primitive wrapper types.\n      */",
                "deletions": 4
            },
            {
                "sha": "7ef7049d33225f026cc9b32605eb373c92fa0feb",
                "filename": "src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/6b8041f96ce1017be49d4eb460ae2ef1c81294f7/src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java",
                "status": "modified",
                "changes": 50,
                "additions": 46,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java?ref=6b8041f96ce1017be49d4eb460ae2ef1c81294f7",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java,v 1.13 2002/12/21 19:33:20 craigmcc Exp $\n- * $Revision: 1.13 $\n- * $Date: 2002/12/21 19:33:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/DynaBeanUtilsTestCase.java,v 1.14 2003/01/03 20:32:35 craigmcc Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2003/01/03 20:32:35 $\n  *\n  * ====================================================================\n  *\n@@ -77,7 +77,7 @@\n  * Test case for BeanUtils when the underlying bean is actually a DynaBean.\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.13 $ $Date: 2002/12/21 19:33:20 $\n+ * @version $Revision: 1.14 $ $Date: 2003/01/03 20:32:35 $\n  */\n \n public class DynaBeanUtilsTestCase extends TestCase {\n@@ -832,6 +832,48 @@ public void testPopulateScalar() {\n     }\n \n \n+    /**\n+     * Test calling setProperty() with null property values.\n+     */\n+    public void testSetPropertyNullValues() throws Exception {\n+\n+        Object oldValue = null;\n+        Object newValue = null;\n+\n+        // Scalar value into array\n+        oldValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        BeanUtils.setProperty(bean, \"stringArray\", (String) null);\n+        newValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        assertNotNull(\"stringArray is not null\", newValue);\n+        assertTrue(\"stringArray of correct type\",\n+                   newValue instanceof String[]);\n+        assertEquals(\"stringArray length\",\n+                     1, ((String[]) newValue).length);\n+        assertTrue(\"stringArray[0] is null\",\n+                   ((String[]) newValue)[0] == null);\n+        PropertyUtils.setProperty(bean, \"stringArray\", oldValue);\n+\n+        // Indexed value into array\n+        oldValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        BeanUtils.setProperty(bean, \"stringArray[2]\", (String) null);\n+        newValue = PropertyUtils.getSimpleProperty(bean, \"stringArray\");\n+        assertNotNull(\"stringArray is not null\", newValue);\n+        assertTrue(\"stringArray of correct type\",\n+                   newValue instanceof String[]);\n+        assertEquals(\"stringArray length\",\n+                     5, ((String[]) newValue).length);\n+        assertTrue(\"stringArray[2] is null\",\n+                   ((String[]) newValue)[2] == null);\n+        PropertyUtils.setProperty(bean, \"stringArray\", oldValue);\n+\n+        // Value into scalar\n+        BeanUtils.setProperty(bean, \"stringProperty\", null);\n+        assertTrue(\"stringProperty is now null\",\n+                   BeanUtils.getProperty(bean, \"stringProperty\") == null);\n+\n+    }\n+\n+\n     /**\n      * Test converting to and from primitive wrapper types.\n      */",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "commons-beanutils",
        "message": "Committed 'NoSuchMethod for read only properties and NullPointer when populating primitives' patch submitted by Tomas Viberg. this is one of those patches that i thought long and hard about committing. this isn't a part of beanutils that i'm particularly familiar with but no one spoke up on the list when i asked so i'm going to back my judgement. if i've got it wrong, i'm sure someone will be kind enough to commit a correction. this patch changes the behaviour of two problematic setProperty issues. when a setProperty was called on a read only method, the previous behaviour was to throw a InvocationTargetException. this patch now returns (after logging). when an primitive property was set with a null, a NullPointerException was throw. now, the null is converted.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@128574 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-beanutils/commit/d88bee9681a123a55b9b8e4c86871438b0857b77",
        "parent": "https://github.com/apache/commons-beanutils/commit/14af17fb29cbed039ae1347911335b6764090a46",
        "bug_id": "commons-beanutils_16",
        "file": [
            {
                "sha": "d952df70a56fa86ee98da266584a0cffd0ae113a",
                "filename": "src/java/org/apache/commons/beanutils/BeanUtils.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/d88bee9681a123a55b9b8e4c86871438b0857b77/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/d88bee9681a123a55b9b8e4c86871438b0857b77/src/java/org/apache/commons/beanutils/BeanUtils.java",
                "status": "modified",
                "changes": 32,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/java/org/apache/commons/beanutils/BeanUtils.java?ref=d88bee9681a123a55b9b8e4c86871438b0857b77",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.22 2002/05/17 07:25:50 jstrachan Exp $\n- * $Revision: 1.22 $\n- * $Date: 2002/05/17 07:25:50 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/java/org/apache/commons/beanutils/BeanUtils.java,v 1.23 2002/06/05 20:46:38 rdonkin Exp $\n+ * $Revision: 1.23 $\n+ * $Date: 2002/06/05 20:46:38 $\n  *\n  * ====================================================================\n  *\n@@ -87,7 +87,7 @@\n  * @author Chris Audley\n  * @author Rey Fran\ufffdois\n  * @author Gregor Ra\ufffdman\n- * @version $Revision: 1.22 $ $Date: 2002/05/17 07:25:50 $\n+ * @version $Revision: 1.23 $ $Date: 2002/06/05 20:46:38 $\n  */\n \n public class BeanUtils {\n@@ -509,8 +509,14 @@ public static void populate(Object bean, Map properties)\n \n \n     /**\n-     * Set the specified property value, performing type conversions as\n-     * required to conform to the type of the destination property.\n+     * <p>Set the specified property value, performing type conversions as\n+     * required to conform to the type of the destination property.</p>\n+     *\n+     * <p>If the property is read only then the method returns \n+     * without throwing an exception.</p>\n+     *\n+     * <p>If <code>null</code> is passed into a property expecting a primitive value,\n+     * then this will be converted as if it were a <code>null</code> string.</p>\n      *\n      * @param bean Bean on which setting is to be performed\n      * @param name Property name (can be nested/indexed/mapped/combo)\n@@ -619,12 +625,24 @@ public static void setProperty(Object bean, String name, Object value)\n                 return; // Skip this property setter\n             }\n             if (descriptor instanceof MappedPropertyDescriptor) {\n+                if (((MappedPropertyDescriptor) descriptor).getMappedWriteMethod() == null) {\n+                    log.debug(\"Skipping read-only property\");\n+                    return; // Read-only, skip this property setter\n+                }\n                 type = ((MappedPropertyDescriptor) descriptor).\n                     getMappedPropertyType();\n             } else if (descriptor instanceof IndexedPropertyDescriptor) {\n+                if (((IndexedPropertyDescriptor) descriptor).getIndexedWriteMethod() == null) {\n+                    log.debug(\"Skipping read-only property\");\n+                    return; // Read-only, skip this property setter\n+                }\n                 type = ((IndexedPropertyDescriptor) descriptor).\n                     getIndexedPropertyType();\n             } else {\n+                if (descriptor.getWriteMethod() == null) {\n+                    log.debug(\"Skipping read-only property\");\n+                    return; // Read-only, skip this property setter\n+                }\n                 type = descriptor.getPropertyType();\n             }\n         }\n@@ -652,7 +670,7 @@ public static void setProperty(Object bean, String name, Object value)\n                 newValue = value;\n             }\n         } else {                             // Value into scalar\n-            if (value instanceof String) {\n+            if (value instanceof String || (value == null && type.isPrimitive())) {\n                 newValue = ConvertUtils.convert((String) value, type);\n             } else if (value instanceof String[]) {\n                 newValue = ConvertUtils.convert(((String[]) value)[0],",
                "deletions": 7
            },
            {
                "sha": "71435af3681f13e2bb09d6969b4b661b4e087378",
                "filename": "src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "blob_url": "https://github.com/apache/commons-beanutils/blob/d88bee9681a123a55b9b8e4c86871438b0857b77/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "raw_url": "https://github.com/apache/commons-beanutils/raw/d88bee9681a123a55b9b8e4c86871438b0857b77/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java",
                "status": "modified",
                "changes": 18,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java?ref=d88bee9681a123a55b9b8e4c86871438b0857b77",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java,v 1.9 2002/04/27 23:11:23 craigmcc Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/04/27 23:11:23 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//beanutils/src/test/org/apache/commons/beanutils/BeanUtilsTestCase.java,v 1.10 2002/06/05 20:46:38 rdonkin Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/06/05 20:46:38 $\n  *\n  * ====================================================================\n  *\n@@ -95,7 +95,7 @@\n  * </ul>\n  *\n  * @author <a href=\"mailto:geirm@optonline.net\">Geir Magnusson Jr.</a>\n- * @version $Revision: 1.9 $\n+ * @version $Revision: 1.10 $\n  */\n \n public class BeanUtilsTestCase extends TestCase {\n@@ -472,10 +472,11 @@ public void testPopulateScalar() {\n             map.put(\"doubleProperty\", \"432.0\");\n             // floatProperty is left at 123.0\n             map.put(\"intProperty\", \"543\");\n-            // longProperty is left at 321\n+            map.put(\"longProperty\", null);\n             map.put(\"shortProperty\", \"654\");\n             // stringProperty is left at \"This is a string\"\n             map.put(\"writeOnlyProperty\", \"New writeOnlyProperty value\");\n+            map.put(\"readOnlyProperty\", \"New readOnlyProperty value\");\n \n             BeanUtils.populate(bean, map);\n \n@@ -489,15 +490,18 @@ public void testPopulateScalar() {\n                          (float) 0.005);\n             assertEquals(\"intProperty is 543\",\n                          543, bean.getIntProperty());\n-            assertEquals(\"longProperty is 321\",\n-                         (long) 321, bean.getLongProperty());\n+            assertEquals(\"longProperty is 0\",\n+                         (long) 0, bean.getLongProperty());\n             assertEquals(\"shortProperty is 654\",\n                          (short) 654, bean.getShortProperty());\n             assertEquals(\"stringProperty is \\\"This is a string\\\"\",\n                          \"This is a string\", bean.getStringProperty());\n             assertEquals(\"writeOnlyProperty is \\\"New writeOnlyProperty value\\\"\",\n                          \"New writeOnlyProperty value\",\n                          bean.getWriteOnlyPropertyValue());\n+            assertEquals(\"readOnlyProperty is \\\"Read Only String Property\\\"\",\n+                         \"Read Only String Property\",\n+                         bean.getReadOnlyProperty());\n \n         } catch (IllegalAccessException e) {\n             fail(\"IllegalAccessException\");",
                "deletions": 7
            }
        ]
    }
]