[
    {
        "repo": "sling-org-apache-sling-testing-osgi-mock",
        "commit": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
        "bug_id": "sling-org-apache-sling-testing-osgi-mock_35d51a1",
        "message": "SLING-5372 osgi-mock: MockBundleContext.getServices(Class,String) throws NPE when no services found\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1719219 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/5d71e9383bb8e4299388105c4ded8aa2d230dfa7",
        "patched_files": [
            "MockBundleContext.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java?ref=35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
                "filename": "src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "deletions": 1,
                "sha": "3c0ad53f4ae498a6240634f2e43aa8852dc7e361",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "patch": "@@ -218,7 +218,13 @@ public ServiceReference getServiceReference(final String clazz) {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public <S> Collection<ServiceReference<S>> getServiceReferences(Class<S> clazz, String filter) throws InvalidSyntaxException {\n-        return ImmutableList.<ServiceReference<S>>copyOf(getServiceReferences(clazz.getName(), filter));\n+        ServiceReference<S>[] result = getServiceReferences(clazz.getName(), filter);\n+        if (result == null) {\n+            return ImmutableList.<ServiceReference<S>>of();\n+        }\n+        else {\n+            return ImmutableList.<ServiceReference<S>>copyOf(result);\n+        }\n     }\n \n     @SuppressWarnings(\"unchecked\")",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 15,
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java?ref=35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
                "filename": "src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "deletions": 0,
                "sha": "2b1cded8dbc8ee1ae8d6ad7a6c6d66ff58012fae",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "patch": "@@ -29,6 +29,7 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n \n+import java.util.Collection;\n import java.util.Dictionary;\n import java.util.Hashtable;\n \n@@ -92,6 +93,10 @@ public void testServiceRegistration() throws InvalidSyntaxException {\n         assertSame(reg1.getReference(), refsString[0]);\n         assertSame(reg2.getReference(), refsString[1]);\n \n+        Collection<ServiceReference<String>> refColString = bundleContext.getServiceReferences(String.class, null);\n+        assertEquals(2, refColString.size());\n+        assertSame(reg1.getReference(), refColString.iterator().next());\n+\n         ServiceReference<?>[] refsInteger = bundleContext.getServiceReferences(Integer.class.getName(), null);\n         assertEquals(2, refsInteger.length);\n         assertSame(reg3.getReference(), refsInteger[0]);\n@@ -111,6 +116,16 @@ public void testServiceRegistration() throws InvalidSyntaxException {\n         bundleContext.ungetService(refInteger);\n     }\n     \n+    @Test\n+    public void testNoServiceReferences() throws InvalidSyntaxException {\n+        ServiceReference<?>[] refs = bundleContext.getServiceReferences(String.class.getName(), null);\n+        assertNull(refs);\n+\n+        Collection<ServiceReference<String>> refCol = bundleContext.getServiceReferences(String.class, null);\n+        assertNotNull(refCol);\n+        assertTrue(refCol.isEmpty());\n+    }\n+    \n     @Test\n     public void testServiceUnregistration() {\n         // prepare test services",
                "changes": 15
            }
        ],
        "unit_tests": [
            "MockBundleContextTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
        "buggy_files": [
            "src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java"
        ],
        "fixed": true
    }
]