[{"commit": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/6511aa84f4a0e0ace87266b408bb6c2094bf4eb0", "parent": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/16af393f824b30fe46fcc2c7c0b5f9a5178c99f5", "message": "SLING-8344 Avoid NPE in ConfigurationOverrideMultiplexerImpl when not configuration resource is present", "bug_id": "sling-org-apache-sling-caconfig-impl_1", "file": [{"additions": 3, "raw_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/raw/6511aa84f4a0e0ace87266b408bb6c2094bf4eb0/src/main/java/org/apache/sling/caconfig/impl/override/ConfigurationOverrideMultiplexerImpl.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/blob/6511aa84f4a0e0ace87266b408bb6c2094bf4eb0/src/main/java/org/apache/sling/caconfig/impl/override/ConfigurationOverrideMultiplexerImpl.java", "sha": "c788e5838d6567756066ec3220d113ba31d0ac05", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-caconfig-impl/contents/src/main/java/org/apache/sling/caconfig/impl/override/ConfigurationOverrideMultiplexerImpl.java?ref=6511aa84f4a0e0ace87266b408bb6c2094bf4eb0", "patch": "@@ -117,7 +117,7 @@ public Resource overrideProperties(@NotNull String contextPath, @NotNull String\n         if (configResource == null) {\n             return null;\n         }\n-        return overrideProperties(contextPath, configName, configResource, null);\n+        return overrideProperties(contextPath, configName, configResource, configResource.getResourceResolver());\n     }\n     \n     @Override\n@@ -133,8 +133,8 @@ public Resource overrideProperties(@NotNull String contextPath, @NotNull String\n         }\n         if (log.isTraceEnabled()) {\n             log.trace(\"! Override properties for context path \" + contextPath + \", name '\" + configName + \"', \"\n-                    + (configResource.getPath() != null ? \"config path \" + configResource.getPath() : \"no config path\") + \": \"\n-                    + MapUtil.traceOutput(configResource.getValueMap()) + \" -> \" + MapUtil.traceOutput(overrideProperties));\n+                    + (configResource != null ? \"config path \" + configResource.getPath() : \"no config path\") + \": \"\n+                    + (configResource != null ? MapUtil.traceOutput(configResource.getValueMap()) : \"empty\") + \" -> \" + MapUtil.traceOutput(overrideProperties));\n         }\n         return new ConfigurationResourceWrapper(configResourceToUse, new ValueMapDecorator(overrideProperties));\n     }", "filename": "src/main/java/org/apache/sling/caconfig/impl/override/ConfigurationOverrideMultiplexerImpl.java"}], "repo": "sling-org-apache-sling-caconfig-impl"}, {"commit": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/394418f7fc579d846c8ef9cb2361b7199ec7dbe2", "parent": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/3b219357449b26c715e70e5fefb4dc38731a0301", "message": "SLING-7361 CAConfig Impl: Fix potential NPE in ConfigurationBuilder", "bug_id": "sling-org-apache-sling-caconfig-impl_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/raw/394418f7fc579d846c8ef9cb2361b7199ec7dbe2/src/main/java/org/apache/sling/caconfig/impl/ConfigurationBuilderImpl.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/blob/394418f7fc579d846c8ef9cb2361b7199ec7dbe2/src/main/java/org/apache/sling/caconfig/impl/ConfigurationBuilderImpl.java", "sha": "8acb8ee43be6425f5d7a8fc4dbe4795d900376f4", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-caconfig-impl/contents/src/main/java/org/apache/sling/caconfig/impl/ConfigurationBuilderImpl.java?ref=394418f7fc579d846c8ef9cb2361b7199ec7dbe2", "patch": "@@ -188,7 +188,7 @@ public Object transform(Object input) {\n             // apply resource inheritance\n             configResource = configurationInheritanceStrategy.getResource(transformedResources);\n             // apply overrides\n-            configResource = configurationOverrideMultiplexer.overrideProperties(contentResource.getPath(), name, configResource, configResource.getResourceResolver());\n+            configResource = configurationOverrideMultiplexer.overrideProperties(contentResource.getPath(), name, configResource, contentResource.getResourceResolver());\n             // build name\n             if (isCollection) {\n                 // get untransformed resource for getting collection item name", "filename": "src/main/java/org/apache/sling/caconfig/impl/ConfigurationBuilderImpl.java"}], "repo": "sling-org-apache-sling-caconfig-impl"}, {"commit": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/9a15aeafa15b860a8513f29470012db5b9ef3a52", "parent": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/commit/a3f4669bd60dd893af6178aa2fe2f7126d4278a6", "message": "SLING-6935 fix NPE when no config name is given\ndefault content path to /content\nfallback to web console resource resolver if no valid system user mapping is configured\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1808876 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "sling-org-apache-sling-caconfig-impl_3", "file": [{"additions": 15, "raw_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/raw/9a15aeafa15b860a8513f29470012db5b9ef3a52/src/main/java/org/apache/sling/caconfig/management/impl/console/ConfigurationWebConsolePlugin.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-caconfig-impl/blob/9a15aeafa15b860a8513f29470012db5b9ef3a52/src/main/java/org/apache/sling/caconfig/management/impl/console/ConfigurationWebConsolePlugin.java", "sha": "c81c6b2dbf14b3d750afcaef123863555e499e26", "changes": 22, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-caconfig-impl/contents/src/main/java/org/apache/sling/caconfig/management/impl/console/ConfigurationWebConsolePlugin.java?ref=9a15aeafa15b860a8513f29470012db5b9ef3a52", "patch": "@@ -112,7 +112,7 @@ private String getParameter(final HttpServletRequest request, final String name,\n     }\n \n     private void printResolutionTestTool(HttpServletRequest request, PrintWriter pw) {\n-        final String path = this.getParameter(request, \"path\", null);\n+        final String path = this.getParameter(request, \"path\", \"/content\");\n         String configNameOther = this.getParameter(request, \"configNameOther\", null);\n         String configName = this.getParameter(request, \"configName\", null);\n         if (configName == null) {\n@@ -127,7 +127,7 @@ private void printResolutionTestTool(HttpServletRequest request, PrintWriter pw)\n         try {\n             Resource contentResource = null;\n             if (path != null) {\n-                resolver = getResolver();\n+                resolver = getResolver(request);\n                 if (resolver != null) {\n                     contentResource = resolver.getResource(path);\n                 }\n@@ -166,7 +166,7 @@ else if (contentResource == null) {\n \n             pw.println(\"<br/>\");\n \n-            if (contentResource != null) {\n+            if (contentResource != null && configName != null) {\n                 \n                 // context paths\n                 Iterator<ContextResource> contextResources = contextPathStrategyMultiplexer.findContextResources(contentResource);\n@@ -375,14 +375,22 @@ private void td(PrintWriter pw, Object value, String... title) {\n         pw.print(\"</td>\");\n     }\n \n-    private ResourceResolver getResolver() {\n+    private ResourceResolver getResolver(HttpServletRequest request) {\n+        ResourceResolver resolver = null;\n         try {\n-            return resolverFactory.getServiceResourceResolver(null);\n+            resolver = resolverFactory.getServiceResourceResolver(null);\n         }\n         catch (final LoginException ex) {\n-            log.warn(\"Unable to get resource resolver - please ensure a system user is configured: {}\", ex.getMessage());\n-            return null;\n+            // fallback if no service user is registered - try to get current web console resource resolver\n+            resolver = (ResourceResolver)request.getAttribute(\"org.apache.sling.auth.core.ResourceResolver\");\n+            if (resolver == null) {\n+                log.warn(\"Unable to get resource resolver - please ensure a system user is configured: {}\", ex.getMessage());\n+            }\n+            else {\n+                log.debug(\"No system user configured, use resource resolver from web console.\");\n+            }\n         }\n+        return resolver;\n     }\n \n }", "filename": "src/main/java/org/apache/sling/caconfig/management/impl/console/ConfigurationWebConsolePlugin.java"}], "repo": "sling-org-apache-sling-caconfig-impl"}]
