{
    "oodt_818d781": {
        "bug_id": "oodt_818d781",
        "commit": "https://github.com/apache/oodt/commit/818d7814d5862b197cdef558ab5a694359e776a8",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/oodt/blob/818d7814d5862b197cdef558ab5a694359e776a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/cli/action/FileManagerCliAction.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/filemgr/src/main/java/org/apache/oodt/cas/filemgr/cli/action/FileManagerCliAction.java?ref=818d7814d5862b197cdef558ab5a694359e776a8",
                "deletions": 1,
                "filename": "filemgr/src/main/java/org/apache/oodt/cas/filemgr/cli/action/FileManagerCliAction.java",
                "patch": "@@ -40,7 +40,10 @@ public String getUrl() {\n     }\n \n     /**\n-     * TODO(imesha) Fix client closing problem which makes it usable only once\n+     * Returns a new {@link FileManagerClient}. The client should be closed by calling {@link FileManagerClient#close()}\n+     * after using.\n+     *\n+     * TODO remove reference to {@link #fmc} which cannot be removed atm due to mock client used in tests.\n      *\n      * @return client\n      * @throws MalformedURLException",
                "raw_url": "https://github.com/apache/oodt/raw/818d7814d5862b197cdef558ab5a694359e776a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/cli/action/FileManagerCliAction.java",
                "sha": "d1dd9cdad2db87910b23a5689af236a0e7e3d159",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/oodt/blob/818d7814d5862b197cdef558ab5a694359e776a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/structs/Product.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/filemgr/src/main/java/org/apache/oodt/cas/filemgr/structs/Product.java?ref=818d7814d5862b197cdef558ab5a694359e776a8",
                "deletions": 2,
                "filename": "filemgr/src/main/java/org/apache/oodt/cas/filemgr/structs/Product.java",
                "patch": "@@ -360,7 +360,7 @@ private void parse(Document doc) {\n     }\n     /**\n      * Set time product was ingested.\n-     * @param productRecievedTime\n+     * @param productReceivedTime\n      */\n     public void setProductRecievedTime(String productReceivedTime) {\n         this.productReceivedTime = productReceivedTime;\n@@ -372,6 +372,6 @@ public String getProductReceivedTime() {\n \n     @Override\n     public String toString() {\n-        return String.format(\"%s[%s-%s]\", this.getProductId(), this.getProductName(), this.getProductType().getName());\n+        return String.format(\"%s[%s-%s]\", this.getProductId(), this.getProductName(), this.getProductType());\n     }\n }",
                "raw_url": "https://github.com/apache/oodt/raw/818d7814d5862b197cdef558ab5a694359e776a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/structs/Product.java",
                "sha": "af7ae79880827adc8c7f63185599688a98711b96",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/oodt/blob/818d7814d5862b197cdef558ab5a694359e776a8/pge/src/main/java/org/apache/oodt/cas/pge/PGETaskInstance.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/pge/src/main/java/org/apache/oodt/cas/pge/PGETaskInstance.java?ref=818d7814d5862b197cdef558ab5a694359e776a8",
                "deletions": 5,
                "filename": "pge/src/main/java/org/apache/oodt/cas/pge/PGETaskInstance.java",
                "patch": "@@ -552,7 +552,7 @@ protected void runIngestCrawler(ProductCrawler crawler) throws Exception {\n    }\n \n    protected void verifyIngests(ProductCrawler crawler) throws PGEException {\n-      logger.debug(\"Verifying ingests successful...\");\n+      julLogger.info(\"Verifying ingests successful...\");\n       boolean ingestsSuccess = true;\n       String exceptionMsg = \"\";\n       for (IngestStatus status : crawler.getIngestStatus()) {\n@@ -563,16 +563,16 @@ protected void verifyIngests(ProductCrawler crawler) throws PGEException {\n                   + status.getResult() + \"',msg='\" + status.getMessage() + \"']\";\n             ingestsSuccess = false;\n          } else if (!status.getResult().equals(IngestStatus.Result.SUCCESS)) {\n-            logger.warn(\"Product was not ingested [file='{}', result='{}', msg='{}'\",\n-                    status.getProduct().getAbsolutePath(), status.getResult(),status.getMessage());\n+            julLogger.warning(String.format(\"Product was not ingested [file='%s',result='%s',msg='%s']\",\n+                    status.getProduct().getAbsolutePath(), status.getResult(),status.getMessage()));\n          }\n       }\n \n       if (!ingestsSuccess) {\n-         logger.error(\"Ingest wasn't successful: {}\", exceptionMsg);\n+         julLogger.severe(\"Ingest wasn't successful: \" + exceptionMsg);\n          throw new PGEException(exceptionMsg);\n       } else {\n-         logger.info(\"Ingests were successful\");\n+         julLogger.info(\"Ingests were successful\");\n       }\n    }\n ",
                "raw_url": "https://github.com/apache/oodt/raw/818d7814d5862b197cdef558ab5a694359e776a8/pge/src/main/java/org/apache/oodt/cas/pge/PGETaskInstance.java",
                "sha": "edfe6927c6cfb28b63df61ea1bf8a361613dc07e",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE in Product.toString() and fixed JUL logger related test failure\nin PGETaskInstance",
        "parent": "https://github.com/apache/oodt/commit/a3e51edaafdd221faea3a7d9f9ab3a3471ddf009",
        "repo": "oodt",
        "unit_tests": [
            "TestPGETaskInstance.java"
        ]
    },
    "oodt_a51bd6a": {
        "bug_id": "oodt_a51bd6a",
        "commit": "https://github.com/apache/oodt/commit/a51bd6a15b2c653a7876d1180924a553d3376ee6",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/oodt/blob/a51bd6a15b2c653a7876d1180924a553d3376ee6/CHANGES.txt",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/CHANGES.txt?ref=a51bd6a15b2c653a7876d1180924a553d3376ee6",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -4,6 +4,8 @@ Apache OODT Change Log\n Release 0.7 - Current Development\n --------------------------------------------\n \n+* OODT-593 Dyn workflows in Workflow Manager cause NPEs on restart (mattmann)\n+\n * OODT-705 RADIX one step script (mattmann)\n \n * OODT-703 DataUtil.createProductZipFile throws exception when creating a zipfile of a hierarchical product (thomas)",
                "raw_url": "https://github.com/apache/oodt/raw/a51bd6a15b2c653a7876d1180924a553d3376ee6/CHANGES.txt",
                "sha": "8db617e546336d8e7c2cf258001bf119ea3643ab",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/oodt/blob/a51bd6a15b2c653a7876d1180924a553d3376ee6/workflow/src/main/java/org/apache/oodt/cas/workflow/system/XmlRpcWorkflowManager.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/workflow/src/main/java/org/apache/oodt/cas/workflow/system/XmlRpcWorkflowManager.java?ref=a51bd6a15b2c653a7876d1180924a553d3376ee6",
                "deletions": 4,
                "filename": "workflow/src/main/java/org/apache/oodt/cas/workflow/system/XmlRpcWorkflowManager.java",
                "patch": "@@ -165,7 +165,7 @@ public Vector getRegisteredEvents() throws RepositoryException {\n     }\n \n     public Hashtable getFirstPage() {\n-        WorkflowInstancePage page = engine.getInstanceRepository()\n+    \tWorkflowInstancePage page = engine.getInstanceRepository()\n                 .getFirstPage();\n         if (page != null) {\n             populateWorkflows(page.getPageWorkflows());\n@@ -174,7 +174,6 @@ public Hashtable getFirstPage() {\n             return XmlRpcStructFactory\n                     .getXmlRpcWorkflowInstancePage(WorkflowInstancePage\n                             .blankPage());\n-\n     }\n \n     public Hashtable getNextPage(Hashtable currentPage) {\n@@ -399,6 +398,12 @@ public Vector getWorkflowInstancesByStatus(String status)\n                     // TODO: hack for now, fix this, we shouldn't have to cast\n                     // here, bad\n                     // design\n+                    if(wDesc == null){\n+                      //Possible dynamic workflow for instance\n+                      //reconsitute it from cache\n+                      wDesc = wInst.getWorkflow();\n+\n+                    }\n                     wInst.setWorkflow(wDesc);\n                     Hashtable workflowInstance = XmlRpcStructFactory\n                             .getXmlRpcWorkflowInstance(wInst);\n@@ -441,6 +446,12 @@ public Vector getWorkflowInstances() throws EngineException {\n                     // pick up the description of the workflow\n                     Workflow wDesc = repo.getWorkflowById(wInst.getWorkflow()\n                             .getId());\n+                    if(wDesc == null){\n+                      //possible dynamic workflow\n+                      //reconsitute it from cached instance\n+                      wDesc = wInst.getWorkflow();\n+\n+                    }\n                     // TODO: hack for now, fix this, we shouldn't have to cast\n                     // here, bad\n                     // design\n@@ -666,8 +677,13 @@ private void populateWorkflows(List wInsts) {\n         if (wInsts != null && wInsts.size() > 0) {\n             for (Iterator i = wInsts.iterator(); i.hasNext();) {\n                 WorkflowInstance wInst = (WorkflowInstance) i.next();\n-                wInst.setWorkflow(safeGetWorkflowById(wInst.getWorkflow()\n-                        .getId()));\n+                if(wInst.getWorkflow() == null || \n+                \t(wInst.getWorkflow() != null && \n+                \t  (wInst.getWorkflow().getName() == null || \n+                \t   wInst.getWorkflow().getId() == null))){\n+                    wInst.setWorkflow(safeGetWorkflowById(wInst.getWorkflow()\n+                            .getId()));                \t\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/oodt/raw/a51bd6a15b2c653a7876d1180924a553d3376ee6/workflow/src/main/java/org/apache/oodt/cas/workflow/system/XmlRpcWorkflowManager.java",
                "sha": "26ed5d5bb25f2bd321389c8eac9972f7642e22d7",
                "status": "modified"
            }
        ],
        "message": "- fix for OODT-593 Dyn workflows in Workflow Manager cause NPEs on restart\n\ngit-svn-id: https://svn.apache.org/repos/asf/oodt/trunk@1601671 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/oodt/commit/1ed354fc4c5756e51ca508c34cc35da8e9b16553",
        "repo": "oodt",
        "unit_tests": [
            "TestXmlRpcWorkflowManager.java"
        ]
    },
    "oodt_e2cb723": {
        "bug_id": "oodt_e2cb723",
        "commit": "https://github.com/apache/oodt/commit/e2cb7237bf6bd0d01248ea35f78c97347fa024a8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/oodt/blob/e2cb7237bf6bd0d01248ea35f78c97347fa024a8/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/CHANGES.txt?ref=e2cb7237bf6bd0d01248ea35f78c97347fa024a8",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -4,6 +4,9 @@ Apache OODT Change Log\n Release 0.3-SNAPSHOT (in progress)\n --------------------------------------------\n \n+* OODT-197 Null descriptions from elements.xml cause NPE when writing \n+  elements.xml file back out (mattmann, Michael Starch)\n+\n * OODT-193 PGE ExternMetExtractor MetWriter (bfoster, mattmann)\n \n * OODT-192 PGE FilenameExtractorMetWriter (mattmann)",
                "raw_url": "https://github.com/apache/oodt/raw/e2cb7237bf6bd0d01248ea35f78c97347fa024a8/CHANGES.txt",
                "sha": "23b94b91dfea3e65e5524b451c0d0ad60c3f6d21",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/oodt/blob/e2cb7237bf6bd0d01248ea35f78c97347fa024a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/util/XmlStructFactory.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/oodt/contents/filemgr/src/main/java/org/apache/oodt/cas/filemgr/util/XmlStructFactory.java?ref=e2cb7237bf6bd0d01248ea35f78c97347fa024a8",
                "deletions": 6,
                "filename": "filemgr/src/main/java/org/apache/oodt/cas/filemgr/util/XmlStructFactory.java",
                "patch": "@@ -290,17 +290,17 @@ public static Document getElementXmlDocument(List<org.apache.oodt.cas.filemgr.st\n             for (Iterator<org.apache.oodt.cas.filemgr.structs.Element> i = elements.iterator(); i.hasNext();) {\n                 org.apache.oodt.cas.filemgr.structs.Element element = i.next();\n                 Element elementElem = document.createElement(\"element\");\n-                elementElem.setAttribute(\"id\", element.getElementId());\n-                elementElem.setAttribute(\"name\", element.getElementName());\n+                elementElem.setAttribute(\"id\", friendlyXml(element.getElementId()));\n+                elementElem.setAttribute(\"name\", friendlyXml(element.getElementName()));\n \n                 Element descriptionElem = document.createElement(\"description\");\n-                descriptionElem.appendChild(document.createTextNode(element\n-                        .getDescription()));\n+                descriptionElem.appendChild(document.createTextNode(friendlyXml(element\n+                        .getDescription())));\n                 elementElem.appendChild(descriptionElem);\n \n                 Element dcElementElem = document.createElement(\"dcElement\");\n-                dcElementElem.appendChild(document.createTextNode(element\n-                        .getDCElement() != null ? element.getDCElement() : \"\"));\n+                dcElementElem.appendChild(document.createTextNode(friendlyXml(element\n+                        .getDCElement())));\n                 elementElem.appendChild(dcElementElem);\n                 \n                 root.appendChild(elementElem);\n@@ -423,5 +423,9 @@ public static Document getProductTypeXmlDocument(List<ProductType> productTypes)\n         productTypeElementMap.put(typeId, elementList);\n         return productTypeElementMap;\n     }\n+    \n+    private static String friendlyXml(String value){\n+      return value != null ? value:\"\";\n+    }\n \n }",
                "raw_url": "https://github.com/apache/oodt/raw/e2cb7237bf6bd0d01248ea35f78c97347fa024a8/filemgr/src/main/java/org/apache/oodt/cas/filemgr/util/XmlStructFactory.java",
                "sha": "1bf47bbfe93aaba2b55b379f8994e3db64e62265",
                "status": "modified"
            }
        ],
        "message": "- fix for OODT-197 Null descriptions from elements.xml cause NPE when writing elements.xml file back out\n\ngit-svn-id: https://svn.apache.org/repos/asf/oodt/trunk@1128938 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/oodt/commit/ce0bd70f7a93f2175e39b063b0dc17bfafde097d",
        "repo": "oodt",
        "unit_tests": [
            "TestXmlStructFactory.java"
        ]
    }
}