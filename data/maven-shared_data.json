[{"commit": "https://github.com/apache/maven-shared/commit/570843f36d2bdb5d780c292d051de1bdfa9b5a9a", "parent": "https://github.com/apache/maven-shared/commit/d95c65394948b820ae485fb507ed0ee21d73e405", "message": "Drop some exception\n\nThe API does not clearly describe wether this can be null or not. Even if, a NPE would be appropriate. At at the end, an null value will fail with an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1777736 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_1", "file": [{"additions": 0, "raw_url": "https://github.com/apache/maven-shared/raw/570843f36d2bdb5d780c292d051de1bdfa9b5a9a/maven-reporting-impl/src/main/java/org/apache/maven/reporting/AbstractMavenReport.java", "blob_url": "https://github.com/apache/maven-shared/blob/570843f36d2bdb5d780c292d051de1bdfa9b5a9a/maven-reporting-impl/src/main/java/org/apache/maven/reporting/AbstractMavenReport.java", "sha": "ee3ce9a70e5d6a5ba1f2d321be525abff08e3a2e", "changes": 5, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-reporting-impl/src/main/java/org/apache/maven/reporting/AbstractMavenReport.java?ref=570843f36d2bdb5d780c292d051de1bdfa9b5a9a", "patch": "@@ -237,11 +237,6 @@ public void generate( Sink sink, Locale locale )\n     public void generate( Sink sink, SinkFactory sinkFactory, Locale locale )\n         throws MavenReportException\n     {\n-        if ( sink == null )\n-        {\n-            throw new MavenReportException( \"You must specify a sink.\" );\n-        }\n-\n         if ( !canGenerateReport() )\n         {\n             getLog().info( \"This report cannot be generated as part of the current build. \"", "filename": "maven-reporting-impl/src/main/java/org/apache/maven/reporting/AbstractMavenReport.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/cc912b8ec03807efca1763421b3899bd3e8fac34", "parent": "https://github.com/apache/maven-shared/commit/64fabcee048fa59718390cc254f50ff266186ad6", "message": "Prevent NPE with dependencyManagement and dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1722498 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-shared/raw/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java", "blob_url": "https://github.com/apache/maven-shared/blob/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java", "sha": "ba840ea8c078d84e5124cb7291d3191002d89a81", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java?ref=cc912b8ec03807efca1763421b3899bd3e8fac34", "patch": "@@ -50,7 +50,7 @@\n \r\n     /**\r\n      * @param buildingRequest the project building request, never {@code null}\r\n-     * @param dependencies the dependencies to resolve, never {@code null}\r\n+     * @param dependencies the dependencies to resolve, can be {@code null}\r\n      * @param managedDependencies managed dependencies, can be {@code null}\r\n      * @param filter a filter, can be {@code null}\r\n      * @return the resolved dependencies.\r", "filename": "maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java"}, {"additions": 25, "raw_url": "https://github.com/apache/maven-shared/raw/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java", "blob_url": "https://github.com/apache/maven-shared/blob/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java", "sha": "8f3334a55b9c9cb151e5e71224903147f43dfdeb", "changes": 40, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java?ref=cc912b8ec03807efca1763421b3899bd3e8fac34", "patch": "@@ -103,31 +103,41 @@\n             (ArtifactTypeRegistry) Invoker.invoke( RepositoryUtils.class, \"newArtifactTypeRegistry\",\r\n                                                    ArtifactHandlerManager.class, artifactHandlerManager );\r\n \r\n-        List<Dependency> aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n-\r\n         final Class<?>[] argClasses =\r\n             new Class<?>[] { org.apache.maven.model.Dependency.class, ArtifactTypeRegistry.class };\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n-        {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+         List<Dependency> aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+         if ( mavenDependencies != null )\r\n+         {\r\n+             aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            aetherDependencies.add( aetherDependency );\r\n-        }\r\n+             for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+             {\r\n+                 Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+\r\n+                 Dependency aetherDependency =\r\n+                     (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-        List<Dependency> aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+                 aetherDependencies.add( aetherDependency );\r\n+             }\r\n+         }\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+        List<Dependency> aetherManagedDependencies = null;\r\n+\r\n+        if ( managedMavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-            aetherManagedDependencies.add( aetherDependency );\r\n+                aetherManagedDependencies.add( aetherDependency );\r\n+            }\r\n         }\r\n \r\n         @SuppressWarnings( \"unchecked\" )\r", "filename": "maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java"}, {"additions": 25, "raw_url": "https://github.com/apache/maven-shared/raw/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java", "blob_url": "https://github.com/apache/maven-shared/blob/cc912b8ec03807efca1763421b3899bd3e8fac34/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java", "sha": "bee9d22b3db561ca541c4c3ad1d91d7a9f27ae78", "changes": 40, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java?ref=cc912b8ec03807efca1763421b3899bd3e8fac34", "patch": "@@ -102,39 +102,49 @@\n             (ArtifactTypeRegistry) Invoker.invoke( RepositoryUtils.class, \"newArtifactTypeRegistry\",\r\n                                                    ArtifactHandlerManager.class, artifactHandlerManager );\r\n \r\n-        List<Dependency> aetherDeps = new ArrayList<Dependency>( mavenDependencies.size() );\r\n-\r\n         final Class<?>[] argClasses =\r\n             new Class<?>[] { org.apache.maven.model.Dependency.class, ArtifactTypeRegistry.class };\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+        List<Dependency> aetherDeps = null;\r\n+\r\n+        if ( mavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherDeps = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            aetherDeps.add( aetherDependency );\r\n-        }\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-        List<Dependency> aetherManagedDeps = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+                aetherDeps.add( aetherDependency );\r\n+            }\r\n+        }\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+        List<Dependency> aetherManagedDependencies = null;\r\n+        \r\n+        if ( managedMavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-            aetherManagedDeps.add( aetherDependency );\r\n+                aetherManagedDependencies.add( aetherDependency );\r\n+            }\r\n         }\r\n \r\n         @SuppressWarnings( \"unchecked\" )\r\n         List<RemoteRepository> aetherRepos =\r\n             (List<RemoteRepository>) Invoker.invoke( RepositoryUtils.class, \"toRepos\", List.class,\r\n                                                      buildingRequest.getRemoteRepositories() );\r\n \r\n-        CollectRequest request = new CollectRequest( aetherDeps, aetherManagedDeps, aetherRepos );\r\n+        CollectRequest request = new CollectRequest( aetherDeps, aetherManagedDependencies, aetherRepos );\r\n \r\n         return resolveDependencies( buildingRequest, aetherRepos, filter, request );\r\n     }\r", "filename": "maven-artifact-transfer/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/85b32637f27df129d618c9b72bb6bc44a7895e44", "parent": "https://github.com/apache/maven-shared/commit/7d3cbfaaa84090ab3d16ca2f10642196ac3011c9", "message": "npe free\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1413920 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_3", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-shared/raw/85b32637f27df129d618c9b72bb6bc44a7895e44/maven-shared-incremental/src/main/java/org/apache/maven/shared/incremental/IncrementalBuildHelper.java", "blob_url": "https://github.com/apache/maven-shared/blob/85b32637f27df129d618c9b72bb6bc44a7895e44/maven-shared-incremental/src/main/java/org/apache/maven/shared/incremental/IncrementalBuildHelper.java", "sha": "8904201b4503b32ca8cd384b2ea294e023cafdb9", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-shared-incremental/src/main/java/org/apache/maven/shared/incremental/IncrementalBuildHelper.java?ref=85b32637f27df129d618c9b72bb6bc44a7895e44", "patch": "@@ -43,6 +43,8 @@\n     public static final String CREATED_FILES_LST_FILENAME = \"createdFiles.lst\";\n     private static final String INPUT_FILES_LST_FILENAME = \"inputFiles.lst\";\n \n+    private static final String[] EMPTY_ARRAY = new String[0];\n+\n     /**\n      * Needed for storing the status for the incremental build support.\n      */\n@@ -355,7 +357,10 @@ public void afterRebuildExecution( Set<File> sources )\n \n     private String[] toArrayOfPath( Set<File> files )\n     {\n-\n+        if (files == null || files.isEmpty())\n+        {\n+            return EMPTY_ARRAY;\n+        }\n         String[] paths = new String[files.size()];\n \n         int i = 0;", "filename": "maven-shared-incremental/src/main/java/org/apache/maven/shared/incremental/IncrementalBuildHelper.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/18862672ed69bf56a319ea7d05da9580c8ca79c3", "parent": "https://github.com/apache/maven-shared/commit/95732c167128d807a94e7bd7d1b3fba52afd5a71", "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@447321 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_4", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-shared/raw/18862672ed69bf56a319ea7d05da9580c8ca79c3/maven-user/maven-user-acegi/src/main/java/org/apache/maven/user/acegi/AclManager.java", "blob_url": "https://github.com/apache/maven-shared/blob/18862672ed69bf56a319ea7d05da9580c8ca79c3/maven-user/maven-user-acegi/src/main/java/org/apache/maven/user/acegi/AclManager.java", "sha": "5610c6e05a28b1c4fd1ae0541235a172f3876968", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-user/maven-user-acegi/src/main/java/org/apache/maven/user/acegi/AclManager.java?ref=18862672ed69bf56a319ea7d05da9580c8ca79c3", "patch": "@@ -62,7 +62,7 @@ public BasicAclExtendedDao getAclDao()\n     protected String getCurrentUserName()\n     {\n         Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n-        \n+\n         /* seems that anonymous user sets principal as String */\n         if ( principal instanceof String )\n         {\n@@ -171,7 +171,11 @@ public List getUsersInstancePermissions( Class clazz, Object id, List userPermis\n     public InstancePermissions getUserInstancePermissions( Class clazz, Object id )\n     {\n         InstancePermissions permission = new InstancePermissions();\n-        aclToPermission( getAcl( clazz, id, getCurrentUserName() ), permission );\n+        BasicAclEntry acl = getAcl( clazz, id, getCurrentUserName() );\n+        if ( acl != null )\n+        {\n+            aclToPermission( acl, permission );\n+        }\n         return permission;\n     }\n ", "filename": "maven-user/maven-user-acegi/src/main/java/org/apache/maven/user/acegi/AclManager.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/4777adaf6badd1dd4f2a5f22d77c93be2dc16766", "parent": "https://github.com/apache/maven-shared/commit/07dc0e2c9cd3ffaa058c824f95931ae57acf9435", "message": "[MSHARED-319] Filtering throws NPE when using JDK8\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1563467 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_5", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-shared/raw/4777adaf6badd1dd4f2a5f22d77c93be2dc16766/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenFileFilter.java", "blob_url": "https://github.com/apache/maven-shared/blob/4777adaf6badd1dd4f2a5f22d77c93be2dc16766/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenFileFilter.java", "sha": "7fbf119715814dfed1a5095d5709275e0f91bd5b", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenFileFilter.java?ref=4777adaf6badd1dd4f2a5f22d77c93be2dc16766", "patch": "@@ -214,7 +214,12 @@ public void copyFile( File from, File to, boolean filtering, List<FileUtils.Filt\n             {\n                 @SuppressWarnings( \"unchecked\" )\n                 List<String> buildFilters = new ArrayList<String>( request.getMavenProject().getBuild().getFilters() );\n-                buildFilters.removeAll( request.getFileFilters() );\n+\n+                // JDK-8015656: (coll) unexpected NPE from removeAll \n+                if ( request.getFileFilters() != null )\n+                {\n+                    buildFilters.removeAll( request.getFileFilters() );\n+                }\n \n                 loadProperties( filterProperties, buildFilters, baseProps );\n             }", "filename": "maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenFileFilter.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/a808a89dbcc0fa5377e03ed27bcdd7cd6115009f", "parent": "https://github.com/apache/maven-shared/commit/b8ed5986ba64023d84826b1c3f4e0b5fae5eca7e", "message": "avoid NPE if parent has no modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1475951 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_6", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-shared/raw/a808a89dbcc0fa5377e03ed27bcdd7cd6115009f/maven-project-utils/src/main/java/org/apache/maven/shared/project/utils/ProjectUtils.java", "blob_url": "https://github.com/apache/maven-shared/blob/a808a89dbcc0fa5377e03ed27bcdd7cd6115009f/maven-project-utils/src/main/java/org/apache/maven/shared/project/utils/ProjectUtils.java", "sha": "20cde56b6ebc88d6f9a100490e248bba88070735", "changes": 11, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-project-utils/src/main/java/org/apache/maven/shared/project/utils/ProjectUtils.java?ref=a808a89dbcc0fa5377e03ed27bcdd7cd6115009f", "patch": "@@ -48,12 +48,15 @@ public static boolean isRootProject( MavenProject project )\n         @SuppressWarnings( \"unchecked\" )\r\n         List<MavenProject> collectedProjects = (List<MavenProject>) parent.getCollectedProjects();\r\n \r\n-        for ( MavenProject collectedProject : collectedProjects )\r\n+        if ( collectedProjects != null )\r\n         {\r\n-            if ( project.getId().equals( collectedProject.getId() ) )\r\n+            for ( MavenProject collectedProject : collectedProjects )\r\n             {\r\n-                // project is a module of its parent\r\n-                return false;\r\n+                if ( project.getId().equals( collectedProject.getId() ) )\r\n+                {\r\n+                    // project is a module of its parent\r\n+                    return false;\r\n+                }\r\n             }\r\n         }\r\n \r", "filename": "maven-project-utils/src/main/java/org/apache/maven/shared/project/utils/ProjectUtils.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/8da73e09aa5850c31b5c3bdf1d651808e5a3e150", "parent": "https://github.com/apache/maven-shared/commit/55488ea09de76ead28046c77a212085b627459e0", "message": "[MSHARED-434] NPE due to concurrent calls in close() method of StreamFeeder class\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1703274 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_7", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-shared/raw/8da73e09aa5850c31b5c3bdf1d651808e5a3e150/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/AbstractStreamHandler.java", "blob_url": "https://github.com/apache/maven-shared/blob/8da73e09aa5850c31b5c3bdf1d651808e5a3e150/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/AbstractStreamHandler.java", "sha": "979e86151d6232a4019627947cc139850b5c3d70", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/AbstractStreamHandler.java?ref=8da73e09aa5850c31b5c3bdf1d651808e5a3e150", "patch": "@@ -25,7 +25,7 @@\n class AbstractStreamHandler\n     extends Thread\n {\n-    private boolean done;\n+    private volatile boolean done;\n \n     private volatile boolean disabled;\n ", "filename": "maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/AbstractStreamHandler.java"}, {"additions": 32, "raw_url": "https://github.com/apache/maven-shared/raw/8da73e09aa5850c31b5c3bdf1d651808e5a3e150/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/StreamFeeder.java", "blob_url": "https://github.com/apache/maven-shared/blob/8da73e09aa5850c31b5c3bdf1d651808e5a3e150/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/StreamFeeder.java", "sha": "8409eebb14179bcdc6ef4a87cb34ceb9abe427c8", "changes": 75, "status": "modified", "deletions": 43, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/StreamFeeder.java?ref=8da73e09aa5850c31b5c3bdf1d651808e5a3e150", "patch": "@@ -22,6 +22,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.util.concurrent.atomic.AtomicReference;\n \n /**\n  * Read from an InputStream and write the output to an OutputStream.\n@@ -32,10 +33,8 @@\n class StreamFeeder\n     extends AbstractStreamHandler\n {\n-    private InputStream input;\n-\n-    private OutputStream output;\n-\n+    private final AtomicReference<InputStream> input;\n+    private final AtomicReference<OutputStream> output;\n \n     /**\n      * Create a new StreamFeeder\n@@ -45,34 +44,32 @@\n      */\n     public StreamFeeder( InputStream input, OutputStream output )\n     {\n-        this.input = input;\n-\n-        this.output = output;\n+        this.input = new AtomicReference<InputStream>( input );\n+        this.output = new AtomicReference<OutputStream>( output );\n     }\n \n     // ----------------------------------------------------------------------\n     // Runnable implementation\n     // ----------------------------------------------------------------------\n \n+    @Override\n     public void run()\n     {\n         try\n         {\n             feed();\n         }\n-        catch ( Throwable ex )\n+        catch ( Throwable e )\n         {\n-            // Catched everything so the streams will be closed and flagged as done.\n+            // Catch everything so the streams will be closed and flagged as done.\n         }\n         finally\n         {\n             close();\n \n             synchronized ( this )\n             {\n-                setDone();\n-\n-                this.notifyAll();\n+                notifyAll();\n             }\n         }\n     }\n@@ -83,37 +80,30 @@ public void run()\n \n     public void close()\n     {\n-        if ( input != null )\n+        setDone();\n+        final InputStream is = input.getAndSet( null );\n+        if ( is != null )\n         {\n-            synchronized ( input )\n+            try\n             {\n-                try\n-                {\n-                    input.close();\n-                }\n-                catch ( IOException ex )\n-                {\n-                    // ignore\n-                }\n-\n-                input = null;\n+                is.close();\n+            }\n+            catch ( IOException ex )\n+            {\n+                // ignore\n             }\n         }\n \n-        if ( output != null )\n+        final OutputStream os = output.getAndSet( null );\n+        if ( os != null )\n         {\n-            synchronized ( output )\n+            try\n             {\n-                try\n-                {\n-                    output.close();\n-                }\n-                catch ( IOException ex )\n-                {\n-                    // ignore\n-                }\n-\n-                output = null;\n+                os.close();\n+            }\n+            catch ( IOException ex )\n+            {\n+                // ignore\n             }\n         }\n     }\n@@ -122,21 +112,20 @@ public void close()\n     //\n     // ----------------------------------------------------------------------\n \n+    @SuppressWarnings( \"checkstyle:innerassignment\" )\n     private void feed()\n         throws IOException\n     {\n-        int data = input.read();\n-\n-        while ( !isDone() && data != -1 )\n+        InputStream is = input.get();\n+        OutputStream os = output.get();\n+        if ( is != null && os != null )\n         {\n-            synchronized ( output )\n+            for ( int data; !isDone() && ( data = is.read() ) != -1; )\n             {\n                 if ( !isDisabled() )\n                 {\n-                    output.write( data );\n+                    os.write( data );\n                 }\n-\n-                data = input.read();\n             }\n         }\n     }", "filename": "maven-shared-utils/src/main/java/org/apache/maven/shared/utils/cli/StreamFeeder.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/0f9c4783604809d7e497022af3f89b3364a63777", "parent": "https://github.com/apache/maven-shared/commit/a7dc99cd560b941812c8e9cf3540c77bf007c043", "message": "more generics and prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1358529 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_8", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-shared/raw/0f9c4783604809d7e497022af3f89b3364a63777/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFiltering.java", "blob_url": "https://github.com/apache/maven-shared/blob/0f9c4783604809d7e497022af3f89b3364a63777/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFiltering.java", "sha": "9cd5e9fde3563c0532d64372c10226bceb79a68f", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFiltering.java?ref=0f9c4783604809d7e497022af3f89b3364a63777", "patch": "@@ -40,7 +40,6 @@\n \n /**\n  * @author Olivier Lamy\n- *\n  * @plexus.component role=\"org.apache.maven.shared.filtering.MavenResourcesFiltering\"\n  * role-hint=\"default\"\n  */\n@@ -124,8 +123,12 @@ public boolean filteredFileExtension( String fileName, List<String> userNonFilte\n         return filteredFileExtension;\n     }\n \n-    public List getDefaultNonFilteredFileExtensions()\n+    public List<String> getDefaultNonFilteredFileExtensions()\n     {\n+        if ( this.defaultNonFilteredFileExtensions == null )\n+        {\n+            this.defaultNonFilteredFileExtensions = new ArrayList<String>();\n+        }\n         return this.defaultNonFilteredFileExtensions;\n     }\n ", "filename": "maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFiltering.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/2a16c67457c6058b3ba5c1725158bbd384bdfa25", "parent": "https://github.com/apache/maven-shared/commit/5521982b752a978a7f94a9c5882945ad632c0038", "message": "avoid NPE if decoration == null\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1060297 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_9", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-shared/raw/2a16c67457c6058b3ba5c1725158bbd384bdfa25/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java", "blob_url": "https://github.com/apache/maven-shared/blob/2a16c67457c6058b3ba5c1725158bbd384bdfa25/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java", "sha": "b66b5bfc68ce9234824e2dfffedb5dd490ded971", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java?ref=2a16c67457c6058b3ba5c1725158bbd384bdfa25", "patch": "@@ -1269,8 +1269,11 @@ private DecorationModel getDecorationModel( MavenProject project, MavenProject p\n                 decoration = new DecorationModel();\n             }\n \n-            final String name = ( StringUtils.isEmpty( decoration.getName() ) ?\n-                project.getName() : decoration.getName() );\n+            String name = project.getName();\n+            if ( decoration != null && StringUtils.isNotEmpty( decoration.getName() ) )\n+            {\n+                name = decoration.getName();\n+            }\n \n             // Merge the parent and child site descriptors\n             assembler.assembleModelInheritance( name, decoration, parent, project.getUrl(),", "filename": "maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/d392767889834c08ce4001dafbc267b5b1f0d35f", "parent": "https://github.com/apache/maven-shared/commit/571965128dba3bf45cec595d1e8c0ac262830c50", "message": "[MSHARED-144] NPE in DefaultSiteTool.populateParentMenu() under certain conditions\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@919638 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_10", "file": [{"additions": 21, "raw_url": "https://github.com/apache/maven-shared/raw/d392767889834c08ce4001dafbc267b5b1f0d35f/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java", "blob_url": "https://github.com/apache/maven-shared/blob/d392767889834c08ce4001dafbc267b5b1f0d35f/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java", "sha": "359669b242bbc9b0619865fc62bab5494cb761ab", "changes": 31, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java?ref=d392767889834c08ce4001dafbc267b5b1f0d35f", "patch": "@@ -827,20 +827,31 @@ public void populateParentMenu( DecorationModel decorationModel, Locale locale,\n             else\n             {\n                 // parent has no url, assume relative path is given by site structure\n-                String parentPath = parentProject.getBasedir().getAbsolutePath();\n-                String projectPath = project.getBasedir().getAbsolutePath();\n-                parentUrl = getRelativePath( parentPath, projectPath ) + \"/index.html\";\n+                File parentBasedir = parentProject.getBasedir();\n+                // First make sure that the parent is available on the file system\n+                if( parentBasedir != null ) {\n+                    // Try to find the relative path to the parent via the file system\n+                    String parentPath = parentBasedir.getAbsolutePath();\n+                    String projectPath = project.getBasedir().getAbsolutePath();\n+                    parentUrl = getRelativePath( parentPath, projectPath ) + \"/index.html\";\n+                }\n             }\n \n-            if ( menu.getName() == null )\n-            {\n-                menu.setName( i18n.getString( \"site-tool\", locale, \"decorationModel.menu.parentproject\" ) );\n+            // Only add the parent menu if we were able to find a URL for it\n+            if( parentUrl == null ) {\n+                getLogger().warn( \"Unable to find a URL to the parent project. The parent menu will NOT be added.\" );\n             }\n+            else {\n+                if ( menu.getName() == null )\n+                {\n+                    menu.setName( i18n.getString( \"site-tool\", locale, \"decorationModel.menu.parentproject\" ) );\n+                }\n \n-            MenuItem item = new MenuItem();\n-            item.setName( parentProject.getName() );\n-            item.setHref( parentUrl );\n-            menu.addItem( item );\n+                MenuItem item = new MenuItem();\n+                item.setName( parentProject.getName() );\n+                item.setHref( parentUrl );\n+                menu.addItem( item );\n+            }\n         }\n     }\n ", "filename": "maven-doxia-tools/src/main/java/org/apache/maven/doxia/tools/DefaultSiteTool.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/3c11c03273c2ba0d1726226aaea6c9543d562cf9", "parent": "https://github.com/apache/maven-shared/commit/c006e67596e295404dae323f090fc97b56af2dd7", "message": "prevent NPE, use 3.0.9-SNAPSHOT dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@600697 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_11", "file": [{"additions": 34, "raw_url": "https://github.com/apache/maven-shared/raw/3c11c03273c2ba0d1726226aaea6c9543d562cf9/maven-toolchain/pom.xml", "blob_url": "https://github.com/apache/maven-shared/blob/3c11c03273c2ba0d1726226aaea6c9543d562cf9/maven-toolchain/pom.xml", "sha": "3fcee468ea4c6cf8863710e19370c41f62e0fcbf", "changes": 37, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-toolchain/pom.xml?ref=3c11c03273c2ba0d1726226aaea6c9543d562cf9", "patch": "@@ -20,12 +20,12 @@\n         <dependency>\n             <groupId>org.apache.maven</groupId>\n             <artifactId>maven-core</artifactId>\n-            <version>2.1-SNAPSHOT</version>\n+            <version>2.0.9-SNAPSHOT</version>\n         </dependency>\n         <dependency>\n-            <groupId>org.apache.maven.artifact</groupId>\n+            <groupId>org.apache.maven</groupId>\n             <artifactId>maven-artifact</artifactId>\n-            <version>3.0-SNAPSHOT</version>\n+            <version>2.0.9-SNAPSHOT</version>\n         </dependency>\n     </dependencies>\n     <build>\n@@ -48,6 +48,37 @@\n                     <model>src/main/mdo/toolchains.xml</model>\n                 </configuration>\n             </plugin>\n+                <plugin>\n+                    <artifactId>maven-shade-plugin</artifactId>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <version>1.0-alpha-13-SNAPSHOT</version>\n+                    <executions>\n+                        <execution>\n+                            <id>shading</id>                                \n+                            <phase>package</phase>\n+                            <goals>\n+                                <goal>shade</goal>\n+                            </goals>\n+                            <configuration>\n+                                <artifactSet>\n+                                    <includes>\n+                                        <include>${project.groupId}:${project.artifactId}</include>\n+                                    </includes>\n+                                </artifactSet>\n+                                <relocations>\n+                                    <relocation>\n+                                        <pattern>org.codehaus.plexus.util</pattern>\n+                                        <excludes>\n+                                            <exclude>org.codehaus.plexus.util.xml.Xpp3Dom</exclude>\n+                                            <exclude>org.codehaus.plexus.util.xml.pull.*</exclude>\n+                                        </excludes>\n+                                    </relocation>\n+                                </relocations>\n+                            </configuration>\n+                        </execution>\n+                    </executions>\n+                </plugin>\n+            \n         </plugins>\n     </build>\n     ", "filename": "maven-toolchain/pom.xml"}, {"additions": 4, "raw_url": "https://github.com/apache/maven-shared/raw/3c11c03273c2ba0d1726226aaea6c9543d562cf9/maven-toolchain/src/main/java/org/apache/maven/toolchain/DefaultToolchainManager.java", "blob_url": "https://github.com/apache/maven-shared/blob/3c11c03273c2ba0d1726226aaea6c9543d562cf9/maven-toolchain/src/main/java/org/apache/maven/toolchain/DefaultToolchainManager.java", "sha": "f0a2fbb56a84954bafabce5991be28358a4dad02", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-toolchain/src/main/java/org/apache/maven/toolchain/DefaultToolchainManager.java?ref=3c11c03273c2ba0d1726226aaea6c9543d562cf9", "patch": "@@ -24,6 +24,7 @@\n import java.io.FileInputStream;\n import java.io.InputStreamReader;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -148,6 +149,9 @@ public Toolchain getToolchainFromBuildContext( String type,\n     \n     private Map retrieveContext( MavenSession session ) \n     {\n+        if (session == null) {\n+            return Collections.EMPTY_MAP;\n+        }\n         PluginDescriptor desc = new PluginDescriptor();\n         desc.setGroupId( PluginDescriptor.getDefaultPluginGroupId() );\n         desc.setArtifactId( PluginDescriptor.getDefaultPluginArtifactId (\"toolchains\") );", "filename": "maven-toolchain/src/main/java/org/apache/maven/toolchain/DefaultToolchainManager.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/29fb14af3bfe36802e0569b3161942e76858a9b0", "parent": "https://github.com/apache/maven-shared/commit/49848f014ec604430bc75bfecf3ae42a20339c4b", "message": "Handle potential NPE when things go wrong inside Maven\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@553244 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-shared/raw/29fb14af3bfe36802e0569b3161942e76858a9b0/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/ResolutionNodeUtils.java", "blob_url": "https://github.com/apache/maven-shared/blob/29fb14af3bfe36802e0569b3161942e76858a9b0/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/ResolutionNodeUtils.java", "sha": "f67ca52503d3c7299e90bead68f29ccb08d7db2f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/ResolutionNodeUtils.java?ref=29fb14af3bfe36802e0569b3161942e76858a9b0", "patch": "@@ -127,7 +127,7 @@ private static StringBuffer append( StringBuffer buffer, ResolutionNode node, in\n         buffer.append( node );\n         buffer.append( System.getProperty( \"line.separator\" ) );\n         \n-        if ( node.isResolved() )\n+        if ( node != null && node.isResolved() )\n         {\n             append( buffer, node.getChildrenIterator(), depth + 1 );\n         }", "filename": "maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/ResolutionNodeUtils.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/ea03b37056a1c06132a25b43161649218b585305", "parent": "https://github.com/apache/maven-shared/commit/0175757c48ceaf17e266e39267054334448c4344", "message": "avoid NPEs for non-existing build/plugins elements in POM\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@417396 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_13", "file": [{"additions": 20, "raw_url": "https://github.com/apache/maven-shared/raw/ea03b37056a1c06132a25b43161649218b585305/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/AbstractMojoTestCase.java", "blob_url": "https://github.com/apache/maven-shared/blob/ea03b37056a1c06132a25b43161649218b585305/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/AbstractMojoTestCase.java", "sha": "bec321b94c8323b8898a3858085d897ef23c595e", "changes": 30, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/AbstractMojoTestCase.java?ref=ea03b37056a1c06132a25b43161649218b585305", "patch": "@@ -194,27 +194,37 @@ protected PlexusConfiguration extractPluginConfiguration( String artifactId, Fil\n     protected PlexusConfiguration extractPluginConfiguration( String artifactId, Xpp3Dom pomDom )\n         throws Exception\n     {\n-        Xpp3Dom[] pluginElements = pomDom.getChild( \"build\" ).getChild( \"plugins\" ).getChildren();\n-\n         Xpp3Dom pluginConfigurationElement = null;\n \n-        for ( int i = 0; i < pluginElements.length; i++ )\n+        Xpp3Dom buildElement = pomDom.getChild( \"build\" );\n+        if ( buildElement != null )\n         {\n-            Xpp3Dom pluginElement = pluginElements[i];\n-\n-            String pluginElementArtifactId = pluginElement.getChild( \"artifactId\" ).getValue();\n+            Xpp3Dom pluginsRootElement = buildElement.getChild( \"plugins\" );\n \n-            if ( pluginElementArtifactId.equals( artifactId ) )\n+            if ( pluginsRootElement != null )\n             {\n-                pluginConfigurationElement = pluginElement.getChild( \"configuration\" );\n+                Xpp3Dom[] pluginElements = pluginsRootElement.getChildren();\n+\n+                for ( int i = 0; i < pluginElements.length; i++ )\n+                {\n+                    Xpp3Dom pluginElement = pluginElements[i];\n \n-                break;\n+                    String pluginElementArtifactId = pluginElement.getChild( \"artifactId\" ).getValue();\n+\n+                    if ( pluginElementArtifactId.equals( artifactId ) )\n+                    {\n+                        pluginConfigurationElement = pluginElement.getChild( \"configuration\" );\n+\n+                        break;\n+                    }\n+                }\n             }\n         }\n \n         if ( pluginConfigurationElement == null )\n         {\n-            throw new ConfigurationException( \"Cannot find a configuration element for a plugin with an artifactId of \" + artifactId + \".\" );\n+            throw new ConfigurationException( \"Cannot find a configuration element for a plugin with an artifactId of \"\n+                + artifactId + \".\" );\n         }\n \n         return new XmlPlexusConfiguration( pluginConfigurationElement );", "filename": "maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/AbstractMojoTestCase.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/033d9cdeeb7b585e473983f7685b8dbede33464b", "parent": "https://github.com/apache/maven-shared/commit/9b2977af6efbba8a5b35b6ec99c2c9e9c70000c5", "message": "[MSHARED-506]\u00a0Upgrade plexus-archiver from 2.9.1 to 3.1.1\n o Using the new version which fixes an NPE issue.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1738420 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_14", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-shared/raw/033d9cdeeb7b585e473983f7685b8dbede33464b/maven-archiver/pom.xml", "blob_url": "https://github.com/apache/maven-shared/blob/033d9cdeeb7b585e473983f7685b8dbede33464b/maven-archiver/pom.xml", "sha": "096394c015474359596fc30b77a0fac17df7781e", "changes": 6, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-archiver/pom.xml?ref=033d9cdeeb7b585e473983f7685b8dbede33464b", "patch": "@@ -84,11 +84,7 @@\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-archiver</artifactId>\n-      <!--\n-        ! Currently the version 2.9.1 is the only one which works.\n-        ! Version 2.10... etc. will fail in unit test with NPE\n-      -->\n-      <version>2.9.1</version>\n+      <version>3.1.1</version>\n     </dependency>\n     <!-- plexus-archiver needs this, or else maven-artifact will pull in a version from the pliocene era -->\n     <dependency>", "filename": "maven-archiver/pom.xml"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/b590c92bb40a1da53073840f7af3ed8c083675da", "parent": "https://github.com/apache/maven-shared/commit/77902661d49c471f7d2800bb8b40a200da9c267d", "message": "Fixed potential NPE when project's dependencies are not yet initialised.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@575733 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_15", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-shared/raw/b590c92bb40a1da53073840f7af3ed8c083675da/maven-dependency-analyzer/src/main/java/org/apache/maven/shared/dependency/analyzer/DefaultProjectDependencyAnalyzer.java", "blob_url": "https://github.com/apache/maven-shared/blob/b590c92bb40a1da53073840f7af3ed8c083675da/maven-dependency-analyzer/src/main/java/org/apache/maven/shared/dependency/analyzer/DefaultProjectDependencyAnalyzer.java", "sha": "8d7eb86d263bd023099b471c6157b2e9c4bb5671", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-dependency-analyzer/src/main/java/org/apache/maven/shared/dependency/analyzer/DefaultProjectDependencyAnalyzer.java?ref=b590c92bb40a1da53073840f7af3ed8c083675da", "patch": "@@ -82,6 +82,11 @@ public ProjectDependencyAnalysis analyze( MavenProject project )\n             Set dependencyClasses = buildDependencyClasses( project );\n \n             Set declaredArtifacts = project.getDependencyArtifacts();\n+            \n+            if ( declaredArtifacts == null )\n+            {\n+                declaredArtifacts = Collections.EMPTY_SET;\n+            }\n \n             Set usedArtifacts = new HashSet();\n ", "filename": "maven-dependency-analyzer/src/main/java/org/apache/maven/shared/dependency/analyzer/DefaultProjectDependencyAnalyzer.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/ce2fd9bb0926cd28de33771cc66f8a44b98f99a5", "parent": "https://github.com/apache/maven-shared/commit/31425833c95dadcd4f935b8391197c6eed847436", "message": "[MNG-3050] Implement ArtifactStub.getDependencyConflictId\n\no Added simple implementation to avoid potential NPEs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@547593 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_16", "file": [{"additions": 9, "raw_url": "https://github.com/apache/maven-shared/raw/ce2fd9bb0926cd28de33771cc66f8a44b98f99a5/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/stubs/ArtifactStub.java", "blob_url": "https://github.com/apache/maven-shared/blob/ce2fd9bb0926cd28de33771cc66f8a44b98f99a5/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/stubs/ArtifactStub.java", "sha": "d463d7e78eba7be1ba55a42a44a7a4391da9bd26", "changes": 11, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/stubs/ArtifactStub.java?ref=ce2fd9bb0926cd28de33771cc66f8a44b98f99a5", "patch": "@@ -186,13 +186,20 @@ public String getId()\n     }\n \n     /**\n-     * By default, return <code>null</code>.\n+     * By default, return <code>groupId:artifactId:type:classifier</code>.\n      *\n      * @see org.apache.maven.artifact.Artifact#getDependencyConflictId()\n      */\n     public String getDependencyConflictId()\n     {\n-        return null;\n+        StringBuffer buffer = new StringBuffer();\n+        \n+        buffer.append( getGroupId() );\n+        buffer.append( \":\" ).append( getArtifactId() );\n+        buffer.append( \":\" ).append( getType() );\n+        buffer.append( \":\" ).append( getClassifier() );\n+        \n+        return buffer.toString();\n     }\n \n     /**", "filename": "maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/stubs/ArtifactStub.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/d41efd6a8058c4d8a59008fe6e46969d8625f603", "parent": "https://github.com/apache/maven-shared/commit/34eccc4f66065c10d108b0206d4746dc3b29ff95", "message": "[CONTINUUM-1203] Fix NPE when the config file doesn't exist in user directory\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@516052 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_17", "file": [{"additions": 3, "raw_url": "https://github.com/apache/maven-shared/raw/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/model/pom.xml", "blob_url": "https://github.com/apache/maven-shared/blob/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/model/pom.xml", "sha": "69d1ecfd01434c9024e19b227ae24076e30cf507", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-app-configuration/model/pom.xml?ref=d41efd6a8058c4d8a59008fe6e46969d8625f603", "patch": "@@ -12,6 +12,7 @@\n       <plugin>\n         <groupId>org.codehaus.modello</groupId>\n         <artifactId>modello-maven-plugin</artifactId>\n+        <version>1.0-alpha-15-SNAPSHOT</version>\n         <executions>\n           <execution>\n             <goals>\n@@ -32,12 +33,12 @@\n     <dependency>\n       <groupId>org.codehaus.plexus.registry</groupId>\n       <artifactId>plexus-registry-api</artifactId>\n-      <version>1.0-SNAPSHOT</version>\n+      <version>1.0-alpha-2-SNAPSHOT</version>\n     </dependency>\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-component-api</artifactId>\n-      <version>1.0-alpha-17</version>\n+      <version>1.0-alpha-18</version>\n     </dependency>\n   </dependencies>\n </project>", "filename": "maven-app-configuration/model/pom.xml"}, {"additions": 15, "raw_url": "https://github.com/apache/maven-shared/raw/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/model/src/main/java/org/apache/maven/shared/app/configuration/DefaultMavenAppConfiguration.java", "blob_url": "https://github.com/apache/maven-shared/blob/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/model/src/main/java/org/apache/maven/shared/app/configuration/DefaultMavenAppConfiguration.java", "sha": "f7e29f359e76bda5f7a69f1edd4f78ac1e71d4c2", "changes": 18, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-app-configuration/model/src/main/java/org/apache/maven/shared/app/configuration/DefaultMavenAppConfiguration.java?ref=d41efd6a8058c4d8a59008fe6e46969d8625f603", "patch": "@@ -65,7 +65,11 @@ public synchronized Configuration getConfiguration()\n     public void save( Configuration configuration )\n         throws RegistryException\n     {\n-        Registry section = registry.getSection( KEY );\n+        Registry section = registry.getSection( KEY + \".user\" );\n+        if ( section == null )\n+        {\n+            section = registry.getSection( KEY + \".base\" );\n+        }\n         new ConfigurationRegistryWriter().write( configuration, section );\n         section.save();\n \n@@ -74,8 +78,16 @@ public void save( Configuration configuration )\n \n     public void addChangeListener( RegistryListener listener )\n     {\n-        Registry section = registry.getSection( KEY );\n-        section.addChangeListener( listener );\n+        Registry section = registry.getSection( KEY + \".user\" );\n+        if ( section != null )\n+        {\n+            section.addChangeListener( listener );\n+        }\n+        section = registry.getSection( KEY + \".base\" );\n+        if ( section != null )\n+        {\n+            section.addChangeListener( listener );\n+        }\n     }\n \n     public void initialize()", "filename": "maven-app-configuration/model/src/main/java/org/apache/maven/shared/app/configuration/DefaultMavenAppConfiguration.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-shared/raw/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/web/pom.xml", "blob_url": "https://github.com/apache/maven-shared/blob/d41efd6a8058c4d8a59008fe6e46969d8625f603/maven-app-configuration/web/pom.xml", "sha": "235c1e9586e4de6d8da90197c30596e77b1bc1cd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-app-configuration/web/pom.xml?ref=d41efd6a8058c4d8a59008fe6e46969d8625f603", "patch": "@@ -27,7 +27,7 @@\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-container-default</artifactId>\n-      <version>1.0-alpha-17</version>\n+      <version>1.0-alpha-18</version>\n       <scope>test</scope>\n     </dependency>\n   </dependencies>", "filename": "maven-app-configuration/web/pom.xml"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/d347960b9509515cef3b6bb7314e434aea66e6d6", "parent": "https://github.com/apache/maven-shared/commit/66b9b54252779e9e8320f695c50cfa9d7100c304", "message": "Fix NPE when no settings.xml available or localRepository not specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@489698 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_18", "file": [{"additions": 15, "raw_url": "https://github.com/apache/maven-shared/raw/d347960b9509515cef3b6bb7314e434aea66e6d6/maven-plugin-testing-tools/src/main/java/org/apache/maven/shared/test/plugin/RepositoryTool.java", "blob_url": "https://github.com/apache/maven-shared/blob/d347960b9509515cef3b6bb7314e434aea66e6d6/maven-plugin-testing-tools/src/main/java/org/apache/maven/shared/test/plugin/RepositoryTool.java", "sha": "7af6802f97bacb4537a414e1685c999733454813", "changes": 28, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-plugin-testing-tools/src/main/java/org/apache/maven/shared/test/plugin/RepositoryTool.java?ref=d347960b9509515cef3b6bb7314e434aea66e6d6", "patch": "@@ -47,16 +47,16 @@\n import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n \n /**\n- * Tools to access and manage Maven repositories for test builds, including construction of a local \n+ * Tools to access and manage Maven repositories for test builds, including construction of a local\n  * repository directory structure.\n- * \n+ *\n  * <p>\n- * <b>WARNING:</b> Currently, the <code>createLocalRepositoryFromPlugin</code> method will not \n- * resolve parent POMs that exist <b>only</b> in your normal local repository, and are not reachable \n- * using the relativePath element. This may result in failed test builds, as one or more of the \n+ * <b>WARNING:</b> Currently, the <code>createLocalRepositoryFromPlugin</code> method will not\n+ * resolve parent POMs that exist <b>only</b> in your normal local repository, and are not reachable\n+ * using the relativePath element. This may result in failed test builds, as one or more of the\n  * plugin's ancestor POMs cannot be resolved.\n  * </p>\n- * \n+ *\n  * @plexus.component role=\"org.apache.maven.shared.test.plugin.RepositoryTool\" role-hint=\"default\"\n  * @author jdcasey\n  */\n@@ -108,7 +108,9 @@ public File findLocalRepositoryDirectory()\n             throw new TestToolsException( \"Error building Maven settings.\", e );\n         }\n \n-        return new File( settings.getLocalRepository() );\n+        return settings == null || settings.getLocalRepository() == null\n+            ? new File( new File( System.getProperty( \"user.home\" ) ), \".m2/repository\" )\n+            : new File( settings.getLocalRepository() );\n     }\n \n     /**\n@@ -155,13 +157,13 @@ public ArtifactRepository createLocalArtifactRepositoryInstance( File localRepos\n      * Install a test version of a plugin - along with its POM, and as many ancestor POMs as can be\n      * reached using the &lt;relativePath/&gt; element - to a clean local repository directory for\n      * use in test builds.\n-     * \n+     *\n      * <p>\n      * <b>WARNING:</b> Currently, this method will not resolve parent POMs that exist <b>only</b> in\n      * your normal local repository, and are not reachable using the relativePath element. This may\n      * result in failed test builds, as one or more of the plugin's ancestor POMs cannot be resolved.\n      * </p>\n-     * \n+     *\n      * @param pluginProject\n      * @param targetLocalRepoBasedir\n      * @throws TestToolsException\n@@ -196,8 +198,8 @@ public void createLocalRepositoryFromPlugin( MavenProject pluginProject, File re\n     /**\n      * Traverse &lt;relativePath/&gt; links for successive POMs in the plugin's ancestry, installing\n      * each one into the test-time local repository.\n-     * \n-     * @param realPomFile The real plugin POM; a starting point, but the POM is already installed, \n+     *\n+     * @param realPomFile The real plugin POM; a starting point, but the POM is already installed,\n      *   so we won't actually install this file, only use it to locate parents.\n      * @param localRepo The test-time local repository instance\n      */\n@@ -241,12 +243,12 @@ private void installLocallyReachableAncestorPoms( File realPomFile, ArtifactRepo\n                 if ( parent != null )\n                 {\n                     pom = new File( pom.getParentFile(), parent.getRelativePath() );\n-                    \n+\n                     if ( pomGroupId == null )\n                     {\n                         pomGroupId = parent.getGroupId();\n                     }\n-                    \n+\n                     if ( pomVersion == null )\n                     {\n                         pomVersion = parent.getVersion();", "filename": "maven-plugin-testing-tools/src/main/java/org/apache/maven/shared/test/plugin/RepositoryTool.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/593b376f3e360cf7f646f58d036f40b5bc10c0dd", "parent": "https://github.com/apache/maven-shared/commit/7807d967971ba93f2a11ee2c3040ade32003766a", "message": "[MSHARED-74] Fix NPE for Artifact.getId() when artifact uses a version range instead of a single version...this is triggered when an artifact is excluded from the ScopeArtifactFilter.include() method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@697220 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_19", "file": [{"additions": 13, "raw_url": "https://github.com/apache/maven-shared/raw/593b376f3e360cf7f646f58d036f40b5bc10c0dd/maven-common-artifact-filters/src/main/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilter.java", "blob_url": "https://github.com/apache/maven-shared/blob/593b376f3e360cf7f646f58d036f40b5bc10c0dd/maven-common-artifact-filters/src/main/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilter.java", "sha": "b2d281d5d590202aef018f602f28e484736a170d", "changes": 14, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-common-artifact-filters/src/main/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilter.java?ref=593b376f3e360cf7f646f58d036f40b5bc10c0dd", "patch": "@@ -139,7 +139,19 @@ else if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n \n         if ( !result )\n         {\n-            filteredArtifactIds.add( artifact.getId() );\n+            // We have to be very careful with artifacts that have ranges, \n+            // because artifact.getId() will throw a NPE if a range is specified.\n+            String id;\n+            if ( artifact.getVersionRange() != null )\n+            {\n+                id = artifact.getDependencyConflictId() + \":\" + artifact.getVersionRange();\n+            }\n+            else\n+            {\n+                id = artifact.getId();\n+            }\n+            \n+            filteredArtifactIds.add( id );\n         }\n \n         return result;", "filename": "maven-common-artifact-filters/src/main/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilter.java"}, {"additions": 21, "raw_url": "https://github.com/apache/maven-shared/raw/593b376f3e360cf7f646f58d036f40b5bc10c0dd/maven-common-artifact-filters/src/test/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilterTest.java", "blob_url": "https://github.com/apache/maven-shared/blob/593b376f3e360cf7f646f58d036f40b5bc10c0dd/maven-common-artifact-filters/src/test/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilterTest.java", "sha": "13b6c75764414c1bcf16c73572d3895d9395b236", "changes": 39, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-common-artifact-filters/src/test/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilterTest.java?ref=593b376f3e360cf7f646f58d036f40b5bc10c0dd", "patch": "@@ -18,16 +18,29 @@\n  */\n package org.apache.maven.shared.artifact.filter;\n \n-import junit.framework.TestCase;\n-\n import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n+import org.apache.maven.artifact.versioning.VersionRange;\n import org.apache.maven.shared.tools.easymock.MockManager;\n+import org.codehaus.plexus.PlexusTestCase;\n import org.easymock.MockControl;\n \n public class ScopeArtifactFilterTest\n-    extends TestCase\n+    extends PlexusTestCase\n {\n+    \n+    public void testExcludedArtifactWithRangeShouldNotCauseNPE()\n+        throws Exception\n+    {\n+        ArtifactFactory factory = (ArtifactFactory) lookup( ArtifactFactory.ROLE );\n+        \n+        Artifact excluded = factory.createDependencyArtifact( \"group\", \"artifact\", VersionRange.createFromVersionSpec( \"[1.2.3]\" ), \"jar\", null, Artifact.SCOPE_PROVIDED );\n+        \n+        ArtifactFilter filter = new ScopeArtifactFilter( Artifact.SCOPE_RUNTIME );\n+        \n+        assertFalse( filter.include( excluded ) );\n+    }\n \n     private MockManager mockManager = new MockManager();\n \n@@ -148,31 +161,21 @@ private void verifyExcluded( String filterScope, String artifactScope )\n \n         MockControl control;\n \n-        private final String scope;\n-\n         ArtifactMockAndControl( String scope )\n         {\n-            this.scope = scope;\n-\n             control = MockControl.createControl( Artifact.class );\n             mockManager.add( control );\n \n             artifact = (Artifact) control.getMock();\n \n-            enableGetScope();\n-            enableGetId();\n-        }\n-\n-        void enableGetScope()\n-        {\n             artifact.getScope();\n-            control.setReturnValue( scope, MockControl.ONE_OR_MORE );\n-        }\n-\n-        void enableGetId()\n-        {\n+            control.setReturnValue( scope, MockControl.ZERO_OR_MORE );\n+            \n             artifact.getId();\n             control.setReturnValue( \"group:artifact:type:version\", MockControl.ZERO_OR_MORE );\n+            \n+            artifact.getVersionRange();\n+            control.setReturnValue( null, MockControl.ZERO_OR_MORE );\n         }\n     }\n ", "filename": "maven-common-artifact-filters/src/test/java/org/apache/maven/shared/artifact/filter/ScopeArtifactFilterTest.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/b9541fb1d2afae8bc62741f170123d8f47df2e84", "parent": "https://github.com/apache/maven-shared/commit/7259f4178a3ca50263b23d173406be0223415513", "message": "o Changed commented-out testProjectWithConflictDependencyScope to the behaviour Maven appears to exhibit - real expected outcome is still preserved in comments\n\no Added commented-out testProjectWithConflictDependencyScopeReversedOrder to fix corrected NPE - cannot uncomment since Maven's internal resolution tree is contradictory to the events it fires\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@556047 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_20", "file": [{"additions": 44, "raw_url": "https://github.com/apache/maven-shared/raw/b9541fb1d2afae8bc62741f170123d8f47df2e84/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/DependencyTreeBuilderTest.java", "blob_url": "https://github.com/apache/maven-shared/blob/b9541fb1d2afae8bc62741f170123d8f47df2e84/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/DependencyTreeBuilderTest.java", "sha": "38a94e9cb61b8a813b912cba42cced6cb6eb7f89", "changes": 46, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/DependencyTreeBuilderTest.java?ref=b9541fb1d2afae8bc62741f170123d8f47df2e84", "patch": "@@ -227,15 +227,57 @@ public void testProjectWithConflictDependencyScope() throws DependencyTreeBuilde\n \n         MavenProject project = createProject( projectArtifact, new Artifact[] { childArtifact } );\n \n+        // TODO: i would have expected this..\n+//        DependencyNode expectedRootNode = createNode( \"g:p:t:1\" );\n+//        DependencyNode childArtifactNode = createNode( \"g:a:t:1\" );\n+//        expectedRootNode.addChild( childArtifactNode );\n+//        DependencyNode nearestArtifactNode = createNode( \"g:c:t:1:compile\" );\n+//        nearestArtifactNode.setOriginalScope( \"test\" );\n+//        childArtifactNode.addChild( nearestArtifactNode );\n+//        DependencyNode grandchildArtifactNode = createNode( \"g:b:t:1\" );\n+//        childArtifactNode.addChild( grandchildArtifactNode );\n+//        grandchildArtifactNode.addChild( createNode( \"g:c:t:1:compile\", DependencyNode.OMITTED_FOR_DUPLICATE, nearestArtifactNode.getArtifact() ) );\n+\n         DependencyNode expectedRootNode = createNode( \"g:p:t:1\" );\n         DependencyNode childArtifactNode = createNode( \"g:a:t:1\" );\n         expectedRootNode.addChild( childArtifactNode );\n-        DependencyNode nearestArtifactNode = createNode( \"g:c:t:1:compile\" );\n+        DependencyNode farthestArtifactNode = createNode( \"g:c:t:1:compile\" );\n+        DependencyNode nearestArtifactNode = createNode( \"g:c:t:1:compile\", DependencyNode.OMITTED_FOR_DUPLICATE, farthestArtifactNode.getArtifact() );\n         nearestArtifactNode.setOriginalScope( \"test\" );\n         childArtifactNode.addChild( nearestArtifactNode );\n         DependencyNode grandchildArtifactNode = createNode( \"g:b:t:1\" );\n         childArtifactNode.addChild( grandchildArtifactNode );\n-        grandchildArtifactNode.addChild( createNode( \"g:c:t:1:compile\", DependencyNode.OMITTED_FOR_DUPLICATE, nearestArtifactNode.getArtifact() ) );\n+        grandchildArtifactNode.addChild( farthestArtifactNode );\n+        \n+        assertDependencyTree( expectedRootNode, project );\n+    }\n+    */\n+\n+    // TODO: fix when discussion resolved: http://www.mail-archive.com/dev@maven.apache.org/msg68011.html\n+    /*\n+    public void testProjectWithConflictDependencyScopeReversedOrder() throws DependencyTreeBuilderException, ArtifactResolutionException\n+    {\n+        Artifact projectArtifact = createArtifact( \"g:p:t:1\" );\n+        Artifact childArtifact = createArtifact( \"g:a:t:1\" );\n+        Artifact nearestArtifact = createArtifact( \"g:c:t:1:test\" );\n+        Artifact grandchildArtifact = createArtifact( \"g:b:t:1\" );\n+        Artifact farthestArtifact = createArtifact( \"g:c:t:1:compile\" );\n+        addArtifactMetadata( childArtifact, new Artifact[] { grandchildArtifact, nearestArtifact } );\n+        addArtifactMetadata( grandchildArtifact, farthestArtifact );\n+\n+        MavenProject project = createProject( projectArtifact, new Artifact[] { childArtifact } );\n+\n+        // TODO: add expected results as per above test method\n+        DependencyNode expectedRootNode = createNode( \"g:p:t:1\" );\n+        DependencyNode childArtifactNode = createNode( \"g:a:t:1\" );\n+        expectedRootNode.addChild( childArtifactNode );\n+        DependencyNode grandchildArtifactNode = createNode( \"g:b:t:1\" );\n+        childArtifactNode.addChild( grandchildArtifactNode );\n+        DependencyNode farthestArtifactNode = createNode( \"g:c:t:1:compile\" );\n+        grandchildArtifactNode.addChild( farthestArtifactNode );\n+        DependencyNode nearestArtifactNode = createNode( \"g:c:t:1:compile\", DependencyNode.OMITTED_FOR_DUPLICATE, farthestArtifactNode.getArtifact() );\n+        nearestArtifactNode.setOriginalScope( \"test\" );\n+        childArtifactNode.addChild( nearestArtifactNode );\n         \n         assertDependencyTree( expectedRootNode, project );\n     }", "filename": "maven-dependency-tree/src/test/java/org/apache/maven/shared/dependency/tree/DependencyTreeBuilderTest.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/30cd2ec7a9b4875a3aa1e7cab0588f79e9ef2463", "parent": "https://github.com/apache/maven-shared/commit/3fbe2e2d0547fd9169611fc6f7233a73726cacf5", "message": "OPEN - issue MASSEMBLY-210: repository does not include the parent pom \nhttp://jira.codehaus.org/browse/MASSEMBLY-210\n\nFixing NPE when copying a parent-POM whose MavenProject.getFile() returns null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@548510 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_21", "file": [{"additions": 10, "raw_url": "https://github.com/apache/maven-shared/raw/30cd2ec7a9b4875a3aa1e7cab0588f79e9ef2463/maven-repository-builder/src/main/java/org/apache/maven/shared/repository/DefaultRepositoryAssembler.java", "blob_url": "https://github.com/apache/maven-shared/blob/30cd2ec7a9b4875a3aa1e7cab0588f79e9ef2463/maven-repository-builder/src/main/java/org/apache/maven/shared/repository/DefaultRepositoryAssembler.java", "sha": "dba3b88c6375f43eec58e160352d95693fad5285", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-repository-builder/src/main/java/org/apache/maven/shared/repository/DefaultRepositoryAssembler.java?ref=30cd2ec7a9b4875a3aa1e7cab0588f79e9ef2463", "patch": "@@ -332,13 +332,16 @@ private void addPomWithAncestry( Artifact artifact, List remoteArtifactRepositor\n \n             setAlignment( artifact, groupVersionAlignments );\n \n-//            File sourceFile = new File( localRepository.getBasedir(), localRepository.pathOf( artifact ) );\n-//\n-//            if ( !sourceFile.exists() )\n-//            {\n-//                break;\n-//            }\n-//\n+            if ( ( sourceFile == null ) || !sourceFile.exists() )\n+            {\n+                sourceFile = new File( localRepository.getBasedir(), localRepository.pathOf( artifact ) );\n+            }\n+\n+            if ( !sourceFile.exists() )\n+            {\n+                break;\n+            }\n+\n             File targetFile = new File( targetRepository.getBasedir(), targetRepository.pathOf( artifact ) );\n \n             try", "filename": "maven-repository-builder/src/main/java/org/apache/maven/shared/repository/DefaultRepositoryAssembler.java"}], "repo": "maven-shared"}, {"commit": "https://github.com/apache/maven-shared/commit/47e3a4c1a89f50166ead37ad19e6728f96dc7a2e", "parent": "https://github.com/apache/maven-shared/commit/d6e8543b1933a5c97f1fcf2223fd5f326a13b161", "message": "MNG-2981: [PATCH] NPE in PluginXDocGenerator while creating plugin site\nSubmitted by: Steve Rowe and Jason Melnick\nReviewed by: Vincent Siveton\n\no patch applied\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@541624 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-shared_22", "file": [{"additions": 11, "raw_url": "https://github.com/apache/maven-shared/raw/47e3a4c1a89f50166ead37ad19e6728f96dc7a2e/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java", "blob_url": "https://github.com/apache/maven-shared/blob/47e3a4c1a89f50166ead37ad19e6728f96dc7a2e/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java", "sha": "115283680d89ccb194e87fc386b230a274db726a", "changes": 18, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/maven-shared/contents/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java?ref=47e3a4c1a89f50166ead37ad19e6728f96dc7a2e", "patch": "@@ -250,17 +250,20 @@ private List filterParameters( List parameterList )\n     {\n         List filtered = new ArrayList();\n \n-        for ( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n+        if ( parameterList != null )\n         {\n-            Parameter parameter = (Parameter) parameters.next();\n-\n-            if ( parameter.isEditable() )\n+            for ( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n             {\n-                String expression = parameter.getExpression();\n+                Parameter parameter = (Parameter) parameters.next();\n \n-                if ( expression == null || !expression.startsWith( \"${component.\" ) )\n+                if ( parameter.isEditable() )\n                 {\n-                    filtered.add( parameter );\n+                    String expression = parameter.getExpression();\n+\n+                    if ( expression == null || !expression.startsWith( \"${component.\" ) )\n+                    {\n+                        filtered.add( parameter );\n+                    }\n                 }\n             }\n         }\n@@ -418,3 +421,4 @@ private List getParametersByRequired( boolean required, List parameterList )\n     }\n }\n \n+", "filename": "maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java"}], "repo": "maven-shared"}]
