[{"commit": "https://github.com/apache/metamodel/commit/3a7483c89b2e4ab15ca6a2af514fe7679718603c", "parent": "https://github.com/apache/metamodel/commit/406422c6715ba9187bc4de2b2dd615054dc8fc97", "message": "METAMODEL-109: CassandraDataContext throws IllegalArgumentException with\nproper message instead of NPE when keystore does not exist.", "bug_id": "metamodel_1", "file": [{"additions": 3, "raw_url": "https://github.com/apache/metamodel/raw/3a7483c89b2e4ab15ca6a2af514fe7679718603c/cassandra/src/main/java/org/apache/metamodel/cassandra/CassandraDataContext.java", "blob_url": "https://github.com/apache/metamodel/blob/3a7483c89b2e4ab15ca6a2af514fe7679718603c/cassandra/src/main/java/org/apache/metamodel/cassandra/CassandraDataContext.java", "sha": "f7af49b9eb535306a3e4845b9dbe2e6fa35d0bef", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/metamodel/contents/cassandra/src/main/java/org/apache/metamodel/cassandra/CassandraDataContext.java?ref=3a7483c89b2e4ab15ca6a2af514fe7679718603c", "patch": "@@ -105,6 +105,9 @@ public CassandraDataContext(Cluster cluster, String keySpace) {\n     public static SimpleTableDef[] detectSchema(Cluster cluster, String keyspaceName) {\n         final Metadata metadata = cluster.getMetadata();\n         final KeyspaceMetadata keyspace = metadata.getKeyspace(keyspaceName);\n+        if (keyspace == null) {\n+            throw new IllegalArgumentException(\"Keyspace '\" + keyspaceName + \"' does not exist in the database\");\n+        }\n         final Collection<TableMetadata> tables = keyspace.getTables();\n         final SimpleTableDef[] result = new SimpleTableDef[tables.size()];\n         int i = 0;", "filename": "cassandra/src/main/java/org/apache/metamodel/cassandra/CassandraDataContext.java"}, {"additions": 13, "raw_url": "https://github.com/apache/metamodel/raw/3a7483c89b2e4ab15ca6a2af514fe7679718603c/cassandra/src/test/java/org/apache/metamodel/cassandra/CassandraDataContextTest.java", "blob_url": "https://github.com/apache/metamodel/blob/3a7483c89b2e4ab15ca6a2af514fe7679718603c/cassandra/src/test/java/org/apache/metamodel/cassandra/CassandraDataContextTest.java", "sha": "a48e3a9d2fea840bb28eef7bf2e64969676a4128", "changes": 13, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/metamodel/contents/cassandra/src/test/java/org/apache/metamodel/cassandra/CassandraDataContextTest.java?ref=3a7483c89b2e4ab15ca6a2af514fe7679718603c", "patch": "@@ -197,6 +197,19 @@ public void testQueryForAnExistingTableAndNonExistingField() throws Exception {\n         assertTrue(thrown);\n     }\n \n+    public void testNonExistentKeystore() {\n+        if (!isConfigured()) {\n+            System.err.println(getInvalidConfigurationMessage());\n+            return;\n+        }\n+        try {\n+            new CassandraDataContext(cluster, \"nonExistentKeyspace\");\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n     private void createCassandraKeySpaceAndTable(Session session) {\n         session.execute(\"CREATE KEYSPACE IF NOT EXISTS \" + getKeyspaceName() + \" WITH replication \"\n                 + \"= {'class':'SimpleStrategy', 'replication_factor':1};\");", "filename": "cassandra/src/test/java/org/apache/metamodel/cassandra/CassandraDataContextTest.java"}], "repo": "metamodel"}]
