[
    {
        "repo": "knox",
        "commit": "https://github.com/apache/knox/commit/c211d05e98c82d57eb0af61487a76f0ddd99660d",
        "bug_id": "knox_c211d05",
        "message": "KNOX-1049 - check for null topology to avoid NPE in tests",
        "parent": "https://github.com/apache/knox/commit/1ee937071b236909a38dc764db451e65a3225ad6",
        "patched_files": [
            "GatewayFilter.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 21,
                "raw_url": "https://github.com/apache/knox/raw/c211d05e98c82d57eb0af61487a76f0ddd99660d/gateway-server/src/main/java/org/apache/hadoop/gateway/GatewayFilter.java",
                "contents_url": "https://api.github.com/repos/apache/knox/contents/gateway-server/src/main/java/org/apache/hadoop/gateway/GatewayFilter.java?ref=c211d05e98c82d57eb0af61487a76f0ddd99660d",
                "filename": "gateway-server/src/main/java/org/apache/hadoop/gateway/GatewayFilter.java",
                "deletions": 20,
                "sha": "7617ae8b34542b03323cc3f143f9a52cfca1d659",
                "blob_url": "https://github.com/apache/knox/blob/c211d05e98c82d57eb0af61487a76f0ddd99660d/gateway-server/src/main/java/org/apache/hadoop/gateway/GatewayFilter.java",
                "patch": "@@ -128,28 +128,29 @@ public void doFilter( ServletRequest servletRequest, ServletResponse servletResp\n     // if there was no match then look for a default service for the topology\n     if (match == null) {\n       Topology topology = (Topology) servletRequest.getServletContext().getAttribute(\"org.apache.hadoop.gateway.topology\");\n-      String defaultServicePath = topology.getDefaultServicePath();\n-      if (defaultServicePath != null) {\n-        try {\n-          String newPathWithQuery = defaultServicePath + \"/\" + pathWithQueryTemplate;\n-          match = chains.match(Parser.parseLiteral(newPathWithQuery));\n-          String origUrl = ((HttpServletRequest) servletRequest).getRequestURL().toString();\n-          String url = origUrl;\n-          if (path.equals(\"/\")) {\n-            url += defaultServicePath;\n-          }\n-          else {\n-            int index = origUrl.indexOf(path);\n-            url = origUrl.substring(0, index) + \"/\" + defaultServicePath + path;\n+      if (topology != null) {\n+        String defaultServicePath = topology.getDefaultServicePath();\n+        if (defaultServicePath != null) {\n+          try {\n+            String newPathWithQuery = defaultServicePath + \"/\" + pathWithQueryTemplate;\n+            match = chains.match(Parser.parseLiteral(newPathWithQuery));\n+            String origUrl = ((HttpServletRequest) servletRequest).getRequestURL().toString();\n+            String url = origUrl;\n+            if (path.equals(\"/\")) {\n+              url += defaultServicePath;\n+            }\n+            else {\n+              int index = origUrl.indexOf(path);\n+              url = origUrl.substring(0, index) + \"/\" + defaultServicePath + path;\n+            }\n+            String contextPath = defaultServicePath;\n+            servletRequest = new ForwardedRequest((HttpServletRequest) servletRequest, \n+                contextPath, \n+                url);\n+          } catch (URISyntaxException e) {\n+            throw new ServletException( e );\n           }\n-          String contextPath = defaultServicePath;\n-          servletRequest = new ForwardedRequest((HttpServletRequest) servletRequest, \n-              contextPath, \n-              url);\n-        } catch (URISyntaxException e) {\n-          throw new ServletException( e );\n         }\n-//        ((HttpServletRequest) servletRequest).getRequestURL();\n       }\n     }\n ",
                "changes": 41
            }
        ],
        "unit_tests": [
            "GatewayFilterTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "gateway-server/src/test/java/org/apache/hadoop/gateway/GatewayFilterTest.java",
        "buggy_files": [
            "gateway-server/src/main/java/org/apache/hadoop/gateway/GatewayFilter.java"
        ],
        "fixed": true
    }
]