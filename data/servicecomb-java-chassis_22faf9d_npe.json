[
    {
        "repo": "servicecomb-java-chassis",
        "commit": "https://github.com/apache/servicecomb-java-chassis/commit/22faf9d55744c9485996d2852d7db9815b888048",
        "bug_id": "servicecomb-java-chassis_22faf9d",
        "message": "[SCB-617] avoid MetricsBootstrap shutdown NPE",
        "parent": "https://github.com/apache/servicecomb-java-chassis/commit/fd4acf1b421062b17189b4c6d383316f7eb154f9",
        "patched_files": [
            "MetricsInitializer.java",
            "MetricsBootstrap.java",
            "DefaultRegistryInitializer.java",
            "PrometheusPublisher.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsBootstrap.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsBootstrap.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsBootstrap.java",
                "deletions": 2,
                "sha": "7f13bf17c87e193195ba179343f85841ef6e90b4",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsBootstrap.java",
                "patch": "@@ -54,12 +54,14 @@ public void start(CompositeRegistry globalRegistry, EventBus eventBus) {\n   }\n \n   public void shutdown() {\n-    executorService.shutdown();\n+    if (executorService != null) {\n+      executorService.shutdown();\n+    }\n \n     List<MetricsInitializer> initializers = new ArrayList<>(SPIServiceUtils.getSortedService(MetricsInitializer.class));\n     Collections.reverse(initializers);\n     initializers.forEach(initializer -> {\n-      initializer.uninit();\n+      initializer.destroy();\n     });\n   }\n ",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsInitializer.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsInitializer.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsInitializer.java",
                "deletions": 1,
                "sha": "b232f48153017ec1e65a903b7e694953cd5e2d58",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsInitializer.java",
                "patch": "@@ -29,7 +29,7 @@ default int getOrder() {\n    */\n   void init(CompositeRegistry globalRegistry, EventBus eventBus, MetricsBootstrapConfig config);\n \n-  default void uninit() {\n+  default void destroy() {\n \n   }\n }",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 14,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/test/java/org/apache/servicecomb/foundation/metrics/TestMetricsBootstrap.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/foundations/foundation-metrics/src/test/java/org/apache/servicecomb/foundation/metrics/TestMetricsBootstrap.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "foundations/foundation-metrics/src/test/java/org/apache/servicecomb/foundation/metrics/TestMetricsBootstrap.java",
                "deletions": 6,
                "sha": "50cb30c72cba7b7ece118e6c9690f9f3e198515c",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/foundations/foundation-metrics/src/test/java/org/apache/servicecomb/foundation/metrics/TestMetricsBootstrap.java",
                "patch": "@@ -102,7 +102,7 @@ public void onEvent(PolledEvent event) {\n \n   @Test\n   public void shutdown(@Mocked ScheduledExecutorService scheduledExecutorService) {\n-    List<MetricsInitializer> uninitList = new ArrayList<>();\n+    List<MetricsInitializer> destroyList = new ArrayList<>();\n     MetricsInitializer initializer1 = new MetricsInitializer() {\n       @Override\n       public int getOrder() {\n@@ -114,8 +114,8 @@ public void init(CompositeRegistry globalRegistry, EventBus eventBus, MetricsBoo\n       }\n \n       @Override\n-      public void uninit() {\n-        uninitList.add(this);\n+      public void destroy() {\n+        destroyList.add(this);\n       }\n     };\n \n@@ -130,8 +130,8 @@ public void init(CompositeRegistry globalRegistry, EventBus eventBus, MetricsBoo\n       }\n \n       @Override\n-      public void uninit() {\n-        uninitList.add(this);\n+      public void destroy() {\n+        destroyList.add(this);\n       }\n     };\n \n@@ -145,6 +145,14 @@ public void uninit() {\n \n     bootstrap.shutdown();\n \n-    Assert.assertThat(uninitList, Matchers.contains(initializer2, initializer1));\n+    Assert.assertThat(destroyList, Matchers.contains(initializer2, initializer1));\n+  }\n+\n+  @Test\n+  public void shutdown_notStart() {\n+    Assert.assertNull(Deencapsulation.getField(bootstrap, \"executorService\"));\n+\n+    // should not throw exception\n+    bootstrap.shutdown();\n   }\n }",
                "changes": 20
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-core/src/main/java/org/apache/servicecomb/metrics/core/DefaultRegistryInitializer.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/metrics/metrics-core/src/main/java/org/apache/servicecomb/metrics/core/DefaultRegistryInitializer.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "metrics/metrics-core/src/main/java/org/apache/servicecomb/metrics/core/DefaultRegistryInitializer.java",
                "deletions": 1,
                "sha": "6bd81463868e26a6364cc89ffcae451064d4cd31",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-core/src/main/java/org/apache/servicecomb/metrics/core/DefaultRegistryInitializer.java",
                "patch": "@@ -49,7 +49,7 @@ public void init(CompositeRegistry globalRegistry, EventBus eventBus, MetricsBoo\n   }\n \n   @Override\n-  public void uninit() {\n+  public void destroy() {\n     DefaultMonitorRegistry.getInstance().unregister(registry);\n     globalRegistry.remove(registry);\n   }",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-core/src/test/java/org/apache/servicecomb/metrics/core/TestDefaultRegistryInitializer.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/metrics/metrics-core/src/test/java/org/apache/servicecomb/metrics/core/TestDefaultRegistryInitializer.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "metrics/metrics-core/src/test/java/org/apache/servicecomb/metrics/core/TestDefaultRegistryInitializer.java",
                "deletions": 1,
                "sha": "4b2a1c3ffd2c2a6c33f8f5aa9b171ba5a692bc24",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-core/src/test/java/org/apache/servicecomb/metrics/core/TestDefaultRegistryInitializer.java",
                "patch": "@@ -49,7 +49,7 @@ public void init() {\n     Assert.assertEquals(1, registries.size());\n     Assert.assertEquals(1, DefaultMonitorRegistry.getInstance().getRegisteredMonitors().size());\n \n-    registryInitializer.uninit();\n+    registryInitializer.destroy();\n \n     Assert.assertEquals(0, registries.size());\n     Assert.assertEquals(0, DefaultMonitorRegistry.getInstance().getRegisteredMonitors().size());",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-integration/metrics-prometheus/src/main/java/org/apache/servicecomb/metrics/prometheus/PrometheusPublisher.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/metrics/metrics-integration/metrics-prometheus/src/main/java/org/apache/servicecomb/metrics/prometheus/PrometheusPublisher.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "metrics/metrics-integration/metrics-prometheus/src/main/java/org/apache/servicecomb/metrics/prometheus/PrometheusPublisher.java",
                "deletions": 1,
                "sha": "b1eb9c67c610fdc932b6dea8b6926097594e72da",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-integration/metrics-prometheus/src/main/java/org/apache/servicecomb/metrics/prometheus/PrometheusPublisher.java",
                "patch": "@@ -114,7 +114,7 @@ protected Sample convertMeasurementToSample(Measurement measurement) {\n   }\n \n   @Override\n-  public void uninit() {\n+  public void destroy() {\n     if (httpServer == null) {\n       return;\n     }",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/servicecomb-java-chassis/raw/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-integration/metrics-prometheus/src/test/java/org/apache/servicecomb/metrics/prometheus/TestPrometheusPublisher.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-java-chassis/contents/metrics/metrics-integration/metrics-prometheus/src/test/java/org/apache/servicecomb/metrics/prometheus/TestPrometheusPublisher.java?ref=22faf9d55744c9485996d2852d7db9815b888048",
                "filename": "metrics/metrics-integration/metrics-prometheus/src/test/java/org/apache/servicecomb/metrics/prometheus/TestPrometheusPublisher.java",
                "deletions": 1,
                "sha": "c953730f4c0edfe25296c660dc64e59619f12178",
                "blob_url": "https://github.com/apache/servicecomb-java-chassis/blob/22faf9d55744c9485996d2852d7db9815b888048/metrics/metrics-integration/metrics-prometheus/src/test/java/org/apache/servicecomb/metrics/prometheus/TestPrometheusPublisher.java",
                "patch": "@@ -102,6 +102,6 @@ public void collect() throws IllegalAccessException, IOException {\n           \"count_name{tag1=\\\"tag1v\\\",tag2=\\\"tag2v\\\",} 1.0\\n\", IOUtils.toString(is));\n     }\n \n-    publisher.uninit();\n+    publisher.destroy();\n   }\n }",
                "changes": 2
            }
        ],
        "unit_tests": [
            "TestDefaultRegistryInitializer.java",
            "TestMetricsBootstrap.java",
            "TestPrometheusPublisher.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "metrics/metrics-core/src/test/java/org/apache/servicecomb/metrics/core/TestDefaultRegistryInitializer.java",
        "buggy_files": [
            "foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsInitializer.java",
            "foundations/foundation-metrics/src/main/java/org/apache/servicecomb/foundation/metrics/MetricsBootstrap.java",
            "metrics/metrics-core/src/main/java/org/apache/servicecomb/metrics/core/DefaultRegistryInitializer.java",
            "metrics/metrics-integration/metrics-prometheus/src/main/java/org/apache/servicecomb/metrics/prometheus/PrometheusPublisher.java"
        ],
        "fixed": true
    }
]