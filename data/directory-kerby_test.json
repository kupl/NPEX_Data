{
    "directory-kerby_158a6a1": {
        "bug_id": "directory-kerby_158a6a1",
        "commit": "https://github.com/apache/directory-kerby/commit/158a6a1c294fe4904277aa592a677082aab0cf74",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-kerby/blob/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java?ref=158a6a1c294fe4904277aa592a677082aab0cf74",
                "deletions": 1,
                "filename": "kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "patch": "@@ -41,7 +41,6 @@ public void test() throws Exception {\n     }\n \n     @Test\n-    @org.junit.Ignore\n     public void testJAAS() throws Exception {\n         super.testJAAS();\n     }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "sha": "2e01975557e368e5fcd39bbd77c3848c40c98dcb",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/directory-kerby/blob/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java?ref=158a6a1c294fe4904277aa592a677082aab0cf74",
                "deletions": 0,
                "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java",
                "patch": "@@ -20,6 +20,8 @@\n package org.apache.kerby.kerberos.kerb.gss.impl;\n \n import org.ietf.jgss.GSSException;\n+import org.ietf.jgss.GSSName;\n+\n import sun.security.jgss.GSSCaller;\n \n import javax.security.auth.kerberos.KerberosTicket;\n@@ -35,6 +37,12 @@ private GssInitCred(GSSCaller caller, GssNameElement name, KerberosTicket ticket\n     }\n \n     public static GssInitCred getInstance(GSSCaller caller, GssNameElement name, int lifeTime) throws GSSException {\n+        if (name == null) {\n+            KerberosTicket ticket = CredUtils.getKerberosTicketFromContext(caller, null, null);\n+            GssNameElement clientName = GssNameElement.getInstance(ticket.getClient().getName(), GSSName.NT_USER_NAME);\n+            return new GssInitCred(caller, clientName, ticket, lifeTime);\n+        }\n+\n         KerberosTicket ticket = CredUtils.getKerberosTicketFromContext(caller, name.getPrincipalName().getName(), null);\n         return new GssInitCred(caller, name, ticket, lifeTime);\n     }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java",
                "sha": "fd042519041cf0766ab504b161a91695192ddf86",
                "status": "modified"
            }
        ],
        "message": "DIRKRB-636 - NPE in GssInitCred when a tgt is obtained via JAAS",
        "parent": "https://github.com/apache/directory-kerby/commit/7a33acebb97b9676ce4b284a2ea3f6004a4317ca",
        "patched_files": [
            "GssInitCred.java"
        ],
        "repo": "directory-kerby",
        "unit_tests": [
            "KerbyGssAppTest.java"
        ]
    },
    "directory-kerby_a5dead5": {
        "bug_id": "directory-kerby_a5dead5",
        "commit": "https://github.com/apache/directory-kerby/commit/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/directory-kerby/blob/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java?ref=a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f",
                "deletions": 1,
                "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java",
                "patch": "@@ -179,6 +179,8 @@ public void start() {\n     }\n \n     public void stop() {\n-        innerKdc.stop();\n+        if (innerKdc != null) {\n+            innerKdc.stop();\n+        }\n     }\n }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java",
                "sha": "96a8540d93a3095d1cacaf1b0573cf781d525818",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE",
        "parent": "https://github.com/apache/directory-kerby/commit/358277ee7b2377167fe05527b0cc7afbee033acb",
        "patched_files": [
            "KdcServer.java"
        ],
        "repo": "directory-kerby",
        "unit_tests": [
            "TestKdcServer.java"
        ]
    },
    "directory-kerby_c3ada0c": {
        "bug_id": "directory-kerby_c3ada0c",
        "commit": "https://github.com/apache/directory-kerby/commit/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9",
                "deletions": 0,
                "filename": "kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java",
                "patch": "@@ -20,6 +20,8 @@\n package org.apache.kerby.kerberos.kdc;\n \n import java.io.InputStream;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n import java.security.PrivateKey;\n \n import org.apache.kerby.kerberos.kerb.KrbException;\n@@ -83,6 +85,21 @@ public void testUnsignedToken() throws Exception {\n         }\n     }\n     \n+    @Test\n+    public void testSignedTokenWithABadKey() throws Exception {\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPair keyPair = keyGen.generateKeyPair();\n+        prepareToken(getServerPrincipal(), ISSUER, AUDIENCE, keyPair.getPrivate());\n+        \n+        try {\n+            performTest();\n+            Assert.fail(\"Failure expected on a bad key\");\n+        } catch (Exception ex) {\n+            // expected\n+            Assert.assertTrue(ex instanceof KrbException);\n+        }\n+    }\n+    \n     private void performTest() throws Exception {\n         createCredentialCache(getClientPrincipal(), getClientPassword());\n ",
                "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java",
                "sha": "544923d3af17aba8bec226f809b06f104bf1ed65",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9",
                "deletions": 0,
                "filename": "kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java",
                "patch": "@@ -27,6 +27,8 @@\n import org.junit.Test;\n \n import java.io.InputStream;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n import java.security.PrivateKey;\n \n public class WithIdentityTokenKdcTest extends WithTokenKdcTestBase {\n@@ -85,6 +87,21 @@ public void testUnsignedToken() throws Exception {\n         }\n     }\n     \n+    @Test\n+    public void testSignedTokenWithABadKey() throws Exception {\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPair keyPair = keyGen.generateKeyPair();\n+        prepareToken(null, ISSUER, AUDIENCE, keyPair.getPrivate());\n+        \n+        try {\n+            performTest();\n+            Assert.fail(\"Failure expected on a bad key\");\n+        } catch (Exception ex) {\n+            // expected\n+            Assert.assertTrue(ex instanceof KrbException);\n+        }\n+    }\n+    \n     private void performTest() throws Exception {\n \n         createCredentialCache(getClientPrincipal(), getClientPassword());",
                "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java",
                "sha": "71f9da7c525c350f748dbfb9f9bdc4d19752df6e",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9",
                "deletions": 0,
                "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java",
                "patch": "@@ -103,6 +103,10 @@ public boolean verify(KdcRequest kdcRequest, PluginRequestContext requestContext\n             } catch (IOException e) {\n                 throw new KrbException(\"Decoding failed\", e);\n             }\n+            \n+            if (authToken == null) {\n+                throw new KrbException(\"Token Decoding failed\");\n+            }\n \n             if (kdcRequest instanceof AsRequest) {\n                 AsRequest asRequest = (AsRequest) kdcRequest;",
                "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java",
                "sha": "2de66b542b98a2908d2eb773aceb301cba266e87",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE on a bad JWT signature validation + added tests.",
        "parent": "https://github.com/apache/directory-kerby/commit/3cec9dc02ff630d3ad4eea563c384afc84ff6cb7",
        "patched_files": [
            "TokenPreauth.java"
        ],
        "repo": "directory-kerby",
        "unit_tests": [
            "WithAccessTokenKdcTest.java",
            "WithIdentityTokenKdcTest.java"
        ]
    },
    "directory-kerby_cc2e35b": {
        "bug_id": "directory-kerby_cc2e35b",
        "commit": "https://github.com/apache/directory-kerby/commit/cc2e35bcec4566e74144b17f47151a6065194dd5",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 2,
                "filename": "haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java",
                "patch": "@@ -31,8 +31,11 @@ protected void setBytes(byte[] bytes) {\n     @Override\n     public void encode(ByteBuffer buffer) {\n         encodeTag(buffer, tagFlags(), tagNo());\n-        encodeLength(buffer, encodingBodyLength());\n-        buffer.put(encodeBody());\n+        int bodyLen = encodingBodyLength();\n+        encodeLength(buffer, bodyLen);\n+        if (bodyLen > 0) {\n+            buffer.put(encodeBody());\n+        }\n     }\n \n     protected byte[] encodeBody() {",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java",
                "sha": "3f7032bd3f76aea5bc27509fa853325db96a0df8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 1,
                "filename": "haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java",
                "patch": "@@ -27,7 +27,10 @@ protected void toBytes() {\n \n     @Override\n     protected int encodingBodyLength() {\n-        return getValue().length();\n+        if (getValue() != null) {\n+            return getValue().length();\n+        }\n+        return 0;\n     }\n \n     protected void toValue() throws IOException {",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java",
                "sha": "78a246424519704cf1904fd708e3a83e4c2ace34",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 1,
                "filename": "haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java",
                "patch": "@@ -23,7 +23,7 @@\n \n     private List<HostAddress> hostAddresses = new ArrayList<HostAddress>();\n     private KdcOptions kdcOptions = new KdcOptions();\n-    private boolean preAuthEnabled = false;\n+    private boolean preAuthEnabled = true;\n     private List<EncryptionType> etypes;\n     private EncryptionType chosenEtype;\n     private EncryptionKey clientKey;",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java",
                "sha": "137b2167f9a0e7cb2d151b6229723b1a70b07fdf",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 3,
                "filename": "haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java",
                "patch": "@@ -60,12 +60,11 @@ public KdcReq makeKdcRequest() throws KrbException {\n         EncryptionType encryptionType = etypes.iterator().next();\n         setChosenEtype(encryptionType);\n \n-        AsReq req = new AsReq();\n-        req.setReqBody(body);\n+        asReq.setReqBody(body);\n \n         if (isPreAuthEnabled()) {\n             PaDataEntry tsPaEntry = makeTimeStampPaDataEntry();\n-            req.addPaData(tsPaEntry);\n+            asReq.addPaData(tsPaEntry);\n         }\n \n         return asReq;",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java",
                "sha": "c28c3a37868d4132d6d925136b40691967ee9c6f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 5,
                "filename": "haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java",
                "patch": "@@ -22,11 +22,11 @@\n     private static int AUTHENTICATOR = 4;\n \n     static Asn1FieldInfo[] fieldInfos = new Asn1FieldInfo[] {\n-            new Asn1FieldInfo(PVNO, 0, Asn1Integer.class),\n-            new Asn1FieldInfo(MSG_TYPE, 1, Asn1Integer.class),\n-            new Asn1FieldInfo(AP_OPTIONS, 2, ApOptions.class),\n-            new Asn1FieldInfo(TICKET, 3, Ticket.class),\n-            new Asn1FieldInfo(AUTHENTICATOR, 4, EncryptedData.class)\n+            new Asn1FieldInfo(PVNO, Asn1Integer.class),\n+            new Asn1FieldInfo(MSG_TYPE, Asn1Integer.class),\n+            new Asn1FieldInfo(AP_OPTIONS, ApOptions.class),\n+            new Asn1FieldInfo(TICKET, Ticket.class),\n+            new Asn1FieldInfo(AUTHENTICATOR, EncryptedData.class)\n     };\n \n     private Authenticator authenticator;",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java",
                "sha": "28343e7addae7d5c24eae906773cc64f89c70a61",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 7,
                "filename": "haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java",
                "patch": "@@ -29,13 +29,13 @@\n     private static int ENC_PART = 6;\n \n     static Asn1FieldInfo[] fieldInfos = new Asn1FieldInfo[] {\n-            new Asn1FieldInfo(PVNO, 0, Asn1Integer.class),\n-            new Asn1FieldInfo(MSG_TYPE, 1, Asn1Integer.class),\n-            new Asn1FieldInfo(PADATA, 2, PaData.class),\n-            new Asn1FieldInfo(CREALM, 3, KerberosString.class),\n-            new Asn1FieldInfo(CNAME, 4, PrincipalName.class),\n-            new Asn1FieldInfo(TICKET, 5, Ticket.class),\n-            new Asn1FieldInfo(ENC_PART, 6, EncryptedData.class)\n+            new Asn1FieldInfo(PVNO, Asn1Integer.class),\n+            new Asn1FieldInfo(MSG_TYPE, Asn1Integer.class),\n+            new Asn1FieldInfo(PADATA, PaData.class),\n+            new Asn1FieldInfo(CREALM, KerberosString.class),\n+            new Asn1FieldInfo(CNAME, PrincipalName.class),\n+            new Asn1FieldInfo(TICKET, Ticket.class),\n+            new Asn1FieldInfo(ENC_PART, EncryptedData.class)\n     };\n \n     private EncKdcRepPart encPart;",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java",
                "sha": "4bf1c2581d4f78f07b9c358d8f468320042b92fd",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5",
                "deletions": 1,
                "filename": "haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java",
                "patch": "@@ -25,7 +25,7 @@ public void setUp() throws Exception {\n         kdcServer.start();\n     }\n \n-    //@Test\n+    @Test\n     public void testKdc() throws Exception {\n         Assert.assertTrue(kdcServer.isStarted());\n ",
                "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java",
                "sha": "92a7a48c80c6543e0c6a27ea032ed8af95347920",
                "status": "modified"
            }
        ],
        "message": "Fixed some NPE issues",
        "parent": "https://github.com/apache/directory-kerby/commit/3d15ccb99a015e956f6f7bc6301f147b592cb1d2",
        "patched_files": [
            "Asn1String.java",
            "Asn1Simple.java",
            "KdcRep.java",
            "ApReq.java",
            "KdcRequest.java",
            "AsRequest.java"
        ],
        "repo": "directory-kerby",
        "unit_tests": [
            "KdcTest.java"
        ]
    },
    "directory-kerby_db14ad6": {
        "bug_id": "directory-kerby_db14ad6",
        "commit": "https://github.com/apache/directory-kerby/commit/db14ad6b219c969e744c1d14e40f19230a5a5498",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498",
                "deletions": 6,
                "filename": "kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import org.apache.kerby.kerberos.kerb.gss.KerbyGssProvider;\n import org.junit.Before;\n-import org.junit.Test;\n \n import java.security.Provider;\n \n@@ -35,9 +34,4 @@ public void setUp() throws Exception {\n         super.setUp();\n     }\n \n-    @Test\n-    @org.junit.Ignore\n-    public void testServerWithoutInitialCredential() throws Exception {\n-        super.testServerWithoutInitialCredential();\n-    }\n }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java",
                "sha": "b6f4e43100b4460cb39f6bd60717e486b5105c3c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498",
                "deletions": 1,
                "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java",
                "patch": "@@ -52,7 +52,13 @@ public static KerberosTicket getKerberosTicketFromContext(GSSCaller caller,\n     public static KeyTab getKeyTabFromContext(KerberosPrincipal principal) throws GSSException {\n         Set<KeyTab> tabs = getContextCredentials(KeyTab.class);\n         for (KeyTab tab : tabs) {\n-            KerberosKey[] keys = tab.getKeys(principal);\n+            // Use the supplied principal, fall back to the principal of the KeyTab if none is supplied\n+            KerberosPrincipal princ = principal;\n+            if (princ == null) {\n+                princ = tab.getPrincipal();\n+            }\n+\n+            KerberosKey[] keys = tab.getKeys(princ);\n             if (keys != null && keys.length > 0) {\n                 return tab;\n             }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java",
                "sha": "4088b5c1a72e7344be2d2d30997ce3fc684606ca",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498",
                "deletions": 3,
                "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java",
                "patch": "@@ -21,6 +21,8 @@\n \n \n import org.ietf.jgss.GSSException;\n+import org.ietf.jgss.GSSName;\n+\n import sun.security.jgss.GSSCaller;\n \n import javax.security.auth.kerberos.KerberosKey;\n@@ -34,15 +36,24 @@\n     public static GssAcceptCred getInstance(final GSSCaller caller,\n                                             GssNameElement name, int lifeTime) throws GSSException {\n \n-        KerberosPrincipal princ = new KerberosPrincipal(name.getPrincipalName().getName(),\n-                name.getPrincipalName().getNameType().getValue());\n-        KeyTab keyTab = CredUtils.getKeyTabFromContext(princ);\n+        KeyTab keyTab = null;\n+        if (name == null) {\n+            keyTab = CredUtils.getKeyTabFromContext(null);\n+        } else {\n+            KerberosPrincipal princ = new KerberosPrincipal(name.getPrincipalName().getName(),\n+                                                            name.getPrincipalName().getNameType().getValue());\n+            keyTab = CredUtils.getKeyTabFromContext(princ);\n+        }\n \n         if (keyTab == null) {\n             throw new GSSException(GSSException.NO_CRED, -1,\n                     \"Failed to find any Kerberos credential for \" + name.getPrincipalName().getName());\n         }\n \n+        if (name == null) {\n+            name = GssNameElement.getInstance(keyTab.getPrincipal().getName(), GSSName.NT_HOSTBASED_SERVICE);\n+        }\n+\n         return new GssAcceptCred(caller, name, keyTab, lifeTime);\n     }\n ",
                "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java",
                "sha": "120f9de12c09464ed659d016d70d3bb81c459cce",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498",
                "deletions": 0,
                "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java",
                "patch": "@@ -68,6 +68,10 @@ public static NameType toKerbyNameType(Oid nameType) throws GSSException {\n \n     public static GssNameElement getInstance(String name, Oid oidNameType)\n             throws GSSException {\n+        if (oidNameType == null) {\n+            PrincipalName principalName = new PrincipalName(name);\n+            return new GssNameElement(principalName, null);\n+        }\n         PrincipalName principalName = new PrincipalName(name, toKerbyNameType(oidNameType));\n         return new GssNameElement(principalName, oidNameType);\n     }",
                "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java",
                "sha": "619b7639dc00982fc1acb0f9b825d54c79d4087d",
                "status": "modified"
            }
        ],
        "message": "DIRKRB-637 - NPE in GssAcceptCred when no initial GSSCredential is passed to manager.createContext",
        "parent": "https://github.com/apache/directory-kerby/commit/6d38f80bd9e4952f0f272728a164c7ab00e81e6c",
        "patched_files": [
            "GssAcceptCred.java",
            "CredUtils.java",
            "GssNameElement.java"
        ],
        "repo": "directory-kerby",
        "unit_tests": [
            "KerbyGssAppTest.java"
        ]
    }
}