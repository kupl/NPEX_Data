[{"commit": "https://github.com/apache/olingo-odata4/commit/3395683b5a68629a2bf12d3ed577a82e04909c5a", "parent": "https://github.com/apache/olingo-odata4/commit/256b14f02ba4763e0cf741710b705b987b4e98d5", "message": "[OLINGO-1333]ODataResponse for delta client throws NPE on Asynchronous calls", "bug_id": "olingo-odata4_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/olingo-odata4/raw/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/commons-api/src/main/java/org/apache/olingo/commons/api/Constants.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/commons-api/src/main/java/org/apache/olingo/commons/api/Constants.java", "sha": "9f29f6392cba9505124323b2e20560b2d559c81d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-api/src/main/java/org/apache/olingo/commons/api/Constants.java?ref=3395683b5a68629a2bf12d3ed577a82e04909c5a", "patch": "@@ -333,4 +333,5 @@\n   String REMOVED = \"removed\";\n   String ENTITY = \"/$entity\";\n   String REASON = \"Reason\";\n+  String ID = \"@id\";\n }", "filename": "lib/commons-api/src/main/java/org/apache/olingo/commons/api/Constants.java"}, {"additions": 1, "raw_url": "https://github.com/apache/olingo-odata4/raw/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializer.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializer.java", "sha": "c6c5ac4e740ec9715c2c49237de46d3522595bab", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializer.java?ref=3395683b5a68629a2bf12d3ed577a82e04909c5a", "patch": "@@ -191,7 +191,7 @@ private void writeDeletedEntity(DeletedEntity deletedEntity,\n     }\r\n     json.writeStartObject();\r\n     json.writeStringField(Constants.JSON_CONTEXT, HASH + deletedEntity.getId().toASCIIString() + DELETEDENTITY);\r\n-    json.writeStringField(Constants.JSON_ID, deletedEntity.getId().toASCIIString());\r\n+    json.writeStringField(Constants.ATOM_ATTR_ID, deletedEntity.getId().toASCIIString());\r\n     json.writeStringField(Constants.ELEM_REASON, deletedEntity.getReason().name());\r\n     json.writeEndObject();\r\n \r", "filename": "lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/olingo-odata4/raw/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerWithNavigations.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerWithNavigations.java", "sha": "ad8635d43e55f31e33999099b150990a07ffb703", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerWithNavigations.java?ref=3395683b5a68629a2bf12d3ed577a82e04909c5a", "patch": "@@ -225,7 +225,7 @@ private void writeDeletedEntity(Entity deletedEntity,\n         json.writeStringField(property.getName(), property.getValue().toString());\r\n       }\r\n     }\r\n-    json.writeStringField(Constants.AT + Constants.ATOM_ATTR_ID, deletedEntity.getId().toASCIIString());\r\n+    json.writeStringField(Constants.ID,  deletedEntity.getId().toASCIIString());\r\n     json.writeEndObject();\r\n \r\n   }\r", "filename": "lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerWithNavigations.java"}, {"additions": 4, "raw_url": "https://github.com/apache/olingo-odata4/raw/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/3395683b5a68629a2bf12d3ed577a82e04909c5a/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerTest.java", "sha": "0ade205e3bd4bebded9c69ac8fa855977da7976c", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerTest.java?ref=3395683b5a68629a2bf12d3ed577a82e04909c5a", "patch": "@@ -144,9 +144,9 @@ public void deletedEntity() throws Exception {\n        final String expectedResult = \"{\"\n            +\"\\\"@odata.context\\\":\\\"$metadata#ESDelta/$delta\\\",\\\"value\\\":[{\"\n            + \"\\\"@odata.context\\\":\\\"#ESDelta(100)/$deletedEntity\\\",\"\n-           + \"\\\"@odata.id\\\":\\\"ESDelta(100)\\\",\\\"reason\\\":\\\"deleted\\\"},{\"\n+           + \"\\\"id\\\":\\\"ESDelta(100)\\\",\\\"reason\\\":\\\"deleted\\\"},{\"\n            + \"\\\"@odata.context\\\":\\\"#ESDelta(-32768)/$deletedEntity\\\",\"\n-           + \"\\\"@odata.id\\\":\\\"ESDelta(-32768)\\\",\\\"reason\\\":\\\"changed\\\"}]\"\n+           + \"\\\"id\\\":\\\"ESDelta(-32768)\\\",\\\"reason\\\":\\\"changed\\\"}]\"\n            + \"}\";\n        Assert.assertNotNull(jsonString);\n        Assert.assertEquals(expectedResult, jsonString);\n@@ -231,8 +231,8 @@ public void basicDeltaTest() throws Exception {\n          + \"\\\"@odata.id\\\":\\\"ESDelta(32767)\\\",\\\"PropertyInt16\\\":32767,\"\n          + \"\\\"PropertyString\\\":\\\"Number:32767\\\"},{\\\"@odata.id\\\":\\\"ESDelta(-32768)\\\",\"\n          + \"\\\"PropertyString\\\":\\\"Number:-32768\\\"},{\\\"@odata.context\\\":\\\"#ESDelta(100)/$deletedEntity\\\",\"\n-         + \"\\\"@odata.id\\\":\\\"ESDelta(100)\\\",\\\"reason\\\":\\\"deleted\\\"},\"\n-         + \"{\\\"@odata.context\\\":\\\"#ESDelta(-32768)/$deletedEntity\\\",\\\"@odata.id\\\":\\\"ESDelta(-32768)\\\",\"\n+         + \"\\\"id\\\":\\\"ESDelta(100)\\\",\\\"reason\\\":\\\"deleted\\\"},\"\n+         + \"{\\\"@odata.context\\\":\\\"#ESDelta(-32768)/$deletedEntity\\\",\\\"id\\\":\\\"ESDelta(-32768)\\\",\"\n          + \"\\\"reason\\\":\\\"changed\\\"},{\\\"@odata.context\\\":\\\"#ESDelta/$link\\\",\\\"source\\\":\\\"ESDelta(100)\\\",\"\n          + \"\\\"relationship\\\":\\\"NavPropertyETAllPrimOne\\\",\\\"target\\\":\\\"ESAllPrim(0)\\\"},{\\\"@odata.context\\\":\"\n          + \"\\\"#ESDelta/$deletedLink\\\",\\\"source\\\":\\\"ESDelta(100)\\\",\\\"relationship\\\":\\\"NavPropertyETAllPrimOne\\\",\"", "filename": "lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/JsonDeltaSerializerTest.java"}], "repo": "olingo-odata4"}, {"commit": "https://github.com/apache/olingo-odata4/commit/256b14f02ba4763e0cf741710b705b987b4e98d5", "parent": "https://github.com/apache/olingo-odata4/commit/f91568e1abe6e4b606d541d6c3a85218d6ab739e", "message": "[OLINGO-1333]ODataResponse for delta client throws NPE on Asynchronous calls", "bug_id": "olingo-odata4_2", "file": [{"additions": 44, "raw_url": "https://github.com/apache/olingo-odata4/raw/256b14f02ba4763e0cf741710b705b987b4e98d5/fit/src/test/java/org/apache/olingo/fit/base/ConformanceTestITCase.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/256b14f02ba4763e0cf741710b705b987b4e98d5/fit/src/test/java/org/apache/olingo/fit/base/ConformanceTestITCase.java", "sha": "23215a33bb15407042608bd50597b1efae8b4438", "changes": 45, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/fit/src/test/java/org/apache/olingo/fit/base/ConformanceTestITCase.java?ref=256b14f02ba4763e0cf741710b705b987b4e98d5", "patch": "@@ -25,6 +25,7 @@\n \n import java.net.URI;\n \n+import org.apache.olingo.client.api.communication.request.AsyncRequestFactory;\n import org.apache.olingo.client.api.communication.request.AsyncRequestWrapper;\n import org.apache.olingo.client.api.communication.request.cud.ODataEntityCreateRequest;\n import org.apache.olingo.client.api.communication.request.retrieve.ODataDeltaRequest;\n@@ -41,8 +42,8 @@\n import org.apache.olingo.client.api.uri.URIBuilder;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveTypeKind;\n import org.apache.olingo.commons.api.edm.FullQualifiedName;\n-import org.apache.olingo.commons.api.http.HttpHeader;\n import org.apache.olingo.commons.api.format.ContentType;\n+import org.apache.olingo.commons.api.http.HttpHeader;\n import org.junit.Test;\n \n /**\n@@ -163,6 +164,48 @@ public void item10() {\n     assertTrue(property.hasComplexValue());\n   }\n \n+  \n+  /**\n+   * 10. MAY support deleted entities, link entities, deleted link entities in a delta response for asynch req.\n+   */\n+  @Test\n+  public void itemAsynch10() {\n+\n+    final ODataEntitySetRequest<ClientEntitySet> req = client.getRetrieveRequestFactory().getEntitySetRequest(\n+        client.newURIBuilder(testStaticServiceRootURL).appendEntitySetSegment(\"Customers\").build());\n+    req.setPrefer(client.newPreferences().trackChanges());\n+ \n+    final ClientEntitySet customers = req.execute().getBody();\n+    assertNotNull(customers);\n+    assertNotNull(customers.getDeltaLink());\n+ \n+    final ODataDeltaRequest deltaReq = client.getRetrieveRequestFactory().getDeltaRequest(customers.getDeltaLink());\n+    \n+    AsyncRequestFactory asyncRequestFactory = client.getAsyncRequestFactory();\n+    AsyncRequestWrapper<ODataRetrieveResponse<ClientDelta>> asyncRequestWrapper =\n+            asyncRequestFactory\n+                    .<ODataRetrieveResponse<ClientDelta>>getAsyncRequestWrapper(deltaReq);\n+    \n+    AsyncResponseWrapper<ODataRetrieveResponse<ClientDelta>> responseWrapper =\n+            asyncRequestWrapper\n+                    .execute();\n+    if (responseWrapper.isPreferenceApplied()) {\n+        int waitInSec = 5;\n+        while (!responseWrapper.isDone()) {\n+            try {\n+                Thread.sleep(waitInSec);\n+            } catch (InterruptedException e) {\n+                // TODO Auto-generated catch block\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    boolean done = responseWrapper.isDone();\n+    ODataRetrieveResponse<ClientDelta> res = responseWrapper.getODataResponse();\n+    ClientDelta delta = res.getBody(); // NPE !!!\n+    assertNotNull(delta);\n+  }\n+  \n   /**\n    * 11. MAY support asynchronous responses (section 9.1.3).\n    */", "filename": "fit/src/test/java/org/apache/olingo/fit/base/ConformanceTestITCase.java"}, {"additions": 12, "raw_url": "https://github.com/apache/olingo-odata4/raw/256b14f02ba4763e0cf741710b705b987b4e98d5/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/retrieve/ODataDeltaRequestImpl.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/256b14f02ba4763e0cf741710b705b987b4e98d5/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/retrieve/ODataDeltaRequestImpl.java", "sha": "629e15888c6913f8f63f0d56573d0360cfe0e41c", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/retrieve/ODataDeltaRequestImpl.java?ref=256b14f02ba4763e0cf741710b705b987b4e98d5", "patch": "@@ -18,6 +18,8 @@\n  */\n package org.apache.olingo.client.core.communication.request.retrieve;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n import java.net.URI;\n \n import org.apache.http.HttpResponse;\n@@ -27,6 +29,7 @@\n import org.apache.olingo.client.api.communication.response.ODataRetrieveResponse;\n import org.apache.olingo.client.api.data.ResWrap;\n import org.apache.olingo.client.api.domain.ClientDelta;\n+import org.apache.olingo.client.api.http.HttpClientException;\n import org.apache.olingo.client.api.serialization.ODataDeserializerException;\n import org.apache.olingo.commons.api.data.Delta;\n import org.apache.olingo.commons.api.format.ContentType;\n@@ -63,12 +66,20 @@ private ODataDeltaResponseImpl(final ODataClient odataClient, final HttpClient h\n     public ClientDelta getBody() {\n       if (delta == null) {\n         try {\n+          InputStream content;\n+          if(res == null){\n+            content = payload;\n+          }else{\n+            content = res.getEntity().getContent();\n+          }\n           final ResWrap<Delta> resource = odataClient.getDeserializer(ContentType.parse(getContentType())).\n-              toDelta(getRawResponse());\n+              toDelta(content);\n \n           delta = odataClient.getBinder().getODataDelta(resource);\n         } catch (final ODataDeserializerException e) {\n           throw new IllegalArgumentException(e);\n+        } catch (IOException e) {\n+          throw new HttpClientException(e);\n         } finally {\n           this.close();\n         }", "filename": "lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/retrieve/ODataDeltaRequestImpl.java"}], "repo": "olingo-odata4"}, {"commit": "https://github.com/apache/olingo-odata4/commit/824c174d75bb28a29d177bc48376225c093439e8", "parent": "https://github.com/apache/olingo-odata4/commit/3baa3993ea532b980cc2a4b0200abf2c53d59dca", "message": "[OLINGO-931] Replace NPE with correct exception", "bug_id": "olingo-odata4_3", "file": [{"additions": 2, "raw_url": "https://github.com/apache/olingo-odata4/raw/824c174d75bb28a29d177bc48376225c093439e8/lib/server-api/src/main/java/org/apache/olingo/server/api/serializer/SerializerException.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/824c174d75bb28a29d177bc48376225c093439e8/lib/server-api/src/main/java/org/apache/olingo/server/api/serializer/SerializerException.java", "sha": "be3416b5f88e022c5c565767d90ba7f1518a784d", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-api/src/main/java/org/apache/olingo/server/api/serializer/SerializerException.java?ref=824c174d75bb28a29d177bc48376225c093439e8", "patch": "@@ -41,6 +41,8 @@\n     INCONSISTENT_PROPERTY_TYPE,\n     /** parameter: property name */\n     MISSING_PROPERTY,\n+    /** parameter: - */\n+    MISSING_ID,\n     /** parameters: property name, property value */\n     WRONG_PROPERTY_VALUE,\n     /** parameters: primitive-type name, value */", "filename": "lib/server-api/src/main/java/org/apache/olingo/server/api/serializer/SerializerException.java"}, {"additions": 17, "raw_url": "https://github.com/apache/olingo-odata4/raw/824c174d75bb28a29d177bc48376225c093439e8/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializer.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/824c174d75bb28a29d177bc48376225c093439e8/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializer.java", "sha": "396261fe55ecfac5ba0aab920af3384a37904f71", "changes": 20, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializer.java?ref=824c174d75bb28a29d177bc48376225c093439e8", "patch": "@@ -267,7 +267,7 @@ protected void writeEntitySet(final ServiceMetadata metadata, final EdmEntityTyp\n     for (final Entity entity : entitySet) {\n       if (onlyReference) {\n         json.writeStartObject();\n-        json.writeStringField(Constants.JSON_ID, entity.getId().toASCIIString());\n+        json.writeStringField(Constants.JSON_ID, getEntityId(entity));\n         json.writeEndObject();\n       } else {\n         writeEntity(metadata, entityType, entity, null, expand, select, false, json);\n@@ -276,6 +276,20 @@ protected void writeEntitySet(final ServiceMetadata metadata, final EdmEntityTyp\n     json.writeEndArray();\n   }\n \n+  /**\n+   * Get the ascii representation of the entity id\n+   * or thrown an {@link SerializerException} if id is <code>null</code>.\n+   *\n+   * @param entity the entity\n+   * @return ascii representation of the entity id\n+   */\n+  private String getEntityId(Entity entity) throws SerializerException {\n+    if(entity.getId() == null) {\n+      throw new SerializerException(\"Entity id is null.\", SerializerException.MessageKeys.MISSING_ID);\n+    }\n+    return entity.getId().toASCIIString();\n+  }\n+\n   private boolean areKeyPredicateNamesSelected(SelectOption select, EdmEntityType type) {\n     if (select == null || ExpandSelectHelper.isAll(select)) {\n       return true;\n@@ -319,14 +333,14 @@ public void writeEntity(final ServiceMetadata metadata, final EdmEntityType enti\n       }\n     }\n     if (onlyReference) {\n-      json.writeStringField(Constants.JSON_ID, entity.getId().toASCIIString());\n+      json.writeStringField(Constants.JSON_ID, getEntityId(entity));\n     } else {\n       final EdmEntityType resolvedType = resolveEntityType(metadata, entityType, entity.getType());\n       if (!isODataMetadataNone && !resolvedType.equals(entityType)) {\n         json.writeStringField(Constants.JSON_TYPE, \"#\" + entity.getType());\n       }\n       if (!isODataMetadataNone && !areKeyPredicateNamesSelected(select, resolvedType)) {\n-        json.writeStringField(Constants.JSON_ID, entity.getId().toASCIIString());\n+        json.writeStringField(Constants.JSON_ID, getEntityId(entity));\n       }\n       writeProperties(metadata, resolvedType, entity.getProperties(), select, json);\n       writeNavigationProperties(metadata, resolvedType, entity, expand, json);", "filename": "lib/server-core/src/main/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/olingo-odata4/raw/824c174d75bb28a29d177bc48376225c093439e8/lib/server-core/src/main/resources/server-core-exceptions-i18n.properties", "blob_url": "https://github.com/apache/olingo-odata4/blob/824c174d75bb28a29d177bc48376225c093439e8/lib/server-core/src/main/resources/server-core-exceptions-i18n.properties", "sha": "3b63c1b5b8b3af504c3278edd3b7d877473f54e8", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-core/src/main/resources/server-core-exceptions-i18n.properties?ref=824c174d75bb28a29d177bc48376225c093439e8", "patch": "@@ -107,6 +107,7 @@ SerializerException.NO_CONTEXT_URL=No context URL has been provided.\n SerializerException.UNSUPPORTED_PROPERTY_TYPE=The type of the property '%1$s' is not yet supported.\n SerializerException.INCONSISTENT_PROPERTY_TYPE=An inconsistency has been detected in the type definition of property '%1$s'.\n SerializerException.MISSING_PROPERTY=The non-nullable property '%1$s' is missing.\n+SerializerException.MISSING_ID=The entity id value is missing.\n SerializerException.WRONG_PROPERTY_VALUE=The value '%2$s' is not valid for property '%1$s'.\n SerializerException.WRONG_PRIMITIVE_VALUE=The value '%2$s' is not valid for the primitive type '%1$s' and the given facets.\n SerializerException.UNKNOWN_TYPE=Type '%1s' not found in metadata.", "filename": "lib/server-core/src/main/resources/server-core-exceptions-i18n.properties"}, {"additions": 27, "raw_url": "https://github.com/apache/olingo-odata4/raw/824c174d75bb28a29d177bc48376225c093439e8/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializerTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/824c174d75bb28a29d177bc48376225c093439e8/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializerTest.java", "sha": "e4f62c21ae3fd317b685a5ef7747ad802c7327e0", "changes": 27, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializerTest.java?ref=824c174d75bb28a29d177bc48376225c093439e8", "patch": "@@ -719,6 +719,33 @@ public void selectComplexTwice() throws Exception {\n         resultString);\n   }\n \n+\n+  @Test(expected = SerializerException.class)\n+  public void selectMissingId() throws Exception {\n+    final EdmEntitySet edmEntitySet = entityContainer.getEntitySet(\"ESAllPrim\");\n+    final EdmEntityType entityType = edmEntitySet.getEntityType();\n+    final Entity entity = data.readAll(edmEntitySet).getEntities().get(0);\n+    entity.setId(null);\n+    final SelectItem selectItem1 = ExpandSelectMock.mockSelectItem(edmEntitySet, \"PropertyDate\");\n+    final SelectItem selectItem2 = ExpandSelectMock.mockSelectItem(edmEntitySet, \"PropertyBoolean\");\n+    final SelectOption select = ExpandSelectMock.mockSelectOption(Arrays.asList(\n+        selectItem1, selectItem2, selectItem2));\n+\n+    try {\n+    serializer.entity(metadata, entityType, entity,\n+            EntitySerializerOptions.with()\n+                .contextURL(ContextURL.with().entitySet(edmEntitySet)\n+                    .selectList(helper.buildContextURLSelectList(entityType, null, select))\n+                    .suffix(Suffix.ENTITY).build())\n+                .select(select)\n+                .build()).getContent();\n+      Assert.fail(\"Expected exception not thrown!\");\n+    } catch (final SerializerException e) {\n+      Assert.assertEquals(SerializerException.MessageKeys.MISSING_ID, e.getMessageKey());\n+      throw e;\n+    }\n+  }\n+\n   @Test\n   public void expand() throws Exception {\n     final EdmEntitySet edmEntitySet = entityContainer.getEntitySet(\"ESTwoPrim\");", "filename": "lib/server-test/src/test/java/org/apache/olingo/server/core/serializer/json/ODataJsonSerializerTest.java"}], "repo": "olingo-odata4"}, {"commit": "https://github.com/apache/olingo-odata4/commit/17e4a3aeffb892667e670b71f303ea2b5522bd06", "parent": "https://github.com/apache/olingo-odata4/commit/46cad03fed25184cb72fcb72b92446e6f0cd219a", "message": "[OLINGO-784] Prevent NPE in combination with typeinfo objects", "bug_id": "olingo-odata4_4", "file": [{"additions": 8, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java", "sha": "089acc3a1d4917acab7b9697d44ea0f9719bc2b4", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -33,7 +33,7 @@\n \n   private String name;\n \n-  private FullQualifiedName type;\n+  private String type;\n \n   private boolean isCollection;\n \n@@ -74,7 +74,7 @@ public CsdlParameter setName(final String name) {\n    * @return the type\n    */\n   public String getType() {\n-    return type.getFullQualifiedNameAsString();\n+    return type;\n   }\n \n   /**\n@@ -83,7 +83,7 @@ public String getType() {\n    * @return the type fQN\n    */\n   public FullQualifiedName getTypeFQN() {\n-    return type;\n+    return new FullQualifiedName(type);\n   }\n \n   /**\n@@ -93,7 +93,7 @@ public FullQualifiedName getTypeFQN() {\n    * @return the type\n    */\n   public CsdlParameter setType(final String type) {\n-    this.type = new FullQualifiedName(type);\n+    this.type = type;\n     return this;\n   }\n \n@@ -104,7 +104,7 @@ public CsdlParameter setType(final String type) {\n    * @return the type\n    */\n   public CsdlParameter setType(final FullQualifiedName type) {\n-    this.type = type;\n+    this.type = type.getFullQualifiedNameAsString();\n     return this;\n   }\n \n@@ -232,7 +232,7 @@ public CsdlParameter setSrid(final SRID srid) {\n   public List<CsdlAnnotation> getAnnotations() {\n     return annotations;\n   }\n-  \n+\n   /**\n    * Sets a list of annotations\n    * @param annotations list of annotations", "filename": "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java"}, {"additions": 5, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java", "sha": "7d1b02d05481417f333997b01a23e3357a1a6a87", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -28,7 +28,7 @@\n \n   private static final long serialVersionUID = 4816954124986010965L;\n \n-  private FullQualifiedName type;\n+  private String type;\n \n   private boolean isCollection;\n \n@@ -49,7 +49,7 @@\n    * @return the type\n    */\n   public String getType() {\n-    return type.getFullQualifiedNameAsString();\n+    return type;\n   }\n \n   /**\n@@ -58,7 +58,7 @@ public String getType() {\n    * @return the type fQN\n    */\n   public FullQualifiedName getTypeFQN() {\n-    return type;\n+    return new FullQualifiedName(type);\n   }\n \n   /**\n@@ -68,7 +68,7 @@ public FullQualifiedName getTypeFQN() {\n    * @return the type\n    */\n   public CsdlReturnType setType(final String type) {\n-    this.type = new FullQualifiedName(type);\n+    this.type = type;\n     return this;\n   }\n \n@@ -79,7 +79,7 @@ public CsdlReturnType setType(final String type) {\n    * @return the type\n    */\n   public CsdlReturnType setType(final FullQualifiedName type) {\n-    this.type = type;\n+    this.type = type.getFullQualifiedNameAsString();\n     return this;\n   }\n ", "filename": "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java"}, {"additions": 11, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java", "sha": "b31b8277a333fcb025d1de28c67a6b7b9311a968", "changes": 22, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -40,7 +40,6 @@\n public abstract class AbstractEdm implements Edm {\n \n   protected Map<String, EdmSchema> schemas;\n-\n   protected List<EdmSchema> schemaList;\n \n   private final Map<FullQualifiedName, EdmEntityContainer> entityContainers =\n@@ -79,8 +78,7 @@\n   private final Map<TargetQualifierMapKey, EdmAnnotations> annotationGroups =\n       Collections.synchronizedMap(new HashMap<TargetQualifierMapKey, EdmAnnotations>());\n \n-  private Map<String, String> aliasToNamespaceInfo = Collections.synchronizedMap(new HashMap<String, String>());\n-  private boolean aliasToNamespaceInfoCreated = false;\n+  private Map<String, String> aliasToNamespaceInfo = null;\n \n   @Override\n   public List<EdmSchema> getSchemas() {\n@@ -98,25 +96,27 @@ public EdmSchema getSchema(final String namespace) {\n \n     EdmSchema schema = schemas.get(namespace);\n     if (schema == null) {\n-      if (!aliasToNamespaceInfoCreated) {\n-        aliasToNamespaceInfo = createAliasToNamespaceInfo();\n-      }\n       schema = schemas.get(aliasToNamespaceInfo.get(namespace));\n     }\n-\n     return schema;\n   }\n \n   private void initSchemas() {\n-    schemas = createSchemas();\n-    aliasToNamespaceInfoCreated = true;\n+    loadAliasToNamespaceInfo();\n+    Map<String, EdmSchema> localSchemas = createSchemas();\n+    schemas = Collections.synchronizedMap(localSchemas);\n \n     if (schemas == null) {\n       schemas = Collections.emptyMap();\n     }\n     schemaList = Collections.unmodifiableList(new ArrayList<EdmSchema>(schemas.values()));\n   }\n \n+  private void loadAliasToNamespaceInfo() {\n+    Map<String, String> localAliasToNamespaceInfo = createAliasToNamespaceInfo();\n+    aliasToNamespaceInfo = Collections.synchronizedMap(localAliasToNamespaceInfo);\n+  }\n+\n   @Override\n   public EdmEntityContainer getEntityContainer() {\n     return getEntityContainer(null);\n@@ -311,8 +311,8 @@ public EdmAnnotations getAnnotationGroup(final FullQualifiedName targetName, Str\n   }\n \n   private FullQualifiedName resolvePossibleAlias(final FullQualifiedName namespaceOrAliasFQN) {\n-    if (!aliasToNamespaceInfoCreated) {\n-      aliasToNamespaceInfo = createAliasToNamespaceInfo();\n+    if (aliasToNamespaceInfo == null) {\n+      loadAliasToNamespaceInfo();\n     }\n     FullQualifiedName finalFQN = null;\n     if (namespaceOrAliasFQN != null) {", "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java"}, {"additions": 7, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java", "sha": "69af130be1712b49c3a8b8eb6e12e1a0a8d16f2d", "changes": 13, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -30,13 +30,11 @@\n public class EdmParameterImpl extends AbstractEdmNamed implements EdmParameter, EdmElement {\n \n   private final CsdlParameter parameter;\n-  private final EdmTypeInfo typeInfo;\n   private EdmType typeImpl;\n \n   public EdmParameterImpl(final Edm edm, final CsdlParameter parameter) {\n     super(edm, parameter.getName(), parameter);\n     this.parameter = parameter;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(parameter.getType()).build();\n   }\n \n   @Override\n@@ -77,9 +75,12 @@ public SRID getSrid() {\n   @Override\n   public EdmType getType() {\n     if (typeImpl == null) {\n-      typeImpl = typeInfo.getType();\n+      if (parameter.getType() == null) {\n+        throw new EdmException(\"Parameter \" + parameter.getName() + \" must hava a full qualified type.\");\n+      }\n+      typeImpl = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(parameter.getType()).build().getType();\n       if (typeImpl == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + parameter.getTypeFQN());\n       }\n     }\n ", "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java"}, {"additions": 17, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java", "sha": "5385d8a502951e0c7a7e774a56459b1b144b8c3d", "changes": 21, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -30,19 +30,22 @@\n public class EdmPropertyImpl extends AbstractEdmNamed implements EdmProperty, EdmElement {\n \n   private final CsdlProperty property;\n-  private final EdmTypeInfo typeInfo;\n+  private EdmTypeInfo typeInfo;\n   private EdmType propertyType;\n \n   public EdmPropertyImpl(final Edm edm, final CsdlProperty property) {\n     super(edm, property.getName(), property);\n \n     this.property = property;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(property.getType().toString()).build();\n+\n   }\n \n   @Override\n   public EdmType getType() {\n     if (propertyType == null) {\n+      if (typeInfo == null) {\n+        buildTypeInfo();\n+      }\n       propertyType = typeInfo.getType();\n       if (propertyType == null) {\n         throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n@@ -52,6 +55,13 @@ public EdmType getType() {\n     return propertyType;\n   }\n \n+  private void buildTypeInfo() {\n+    if (property.getType() == null) {\n+      throw new EdmException(\"Property \" + property.getName() + \" must hava a full qualified type.\");\n+    }\n+    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(property.getType().toString()).build();\n+  }\n+\n   @Override\n   public boolean isCollection() {\n     return property.isCollection();\n@@ -104,6 +114,9 @@ public String getDefaultValue() {\n \n   @Override\n   public boolean isPrimitive() {\n+    if (typeInfo == null) {\n+      buildTypeInfo();\n+    }\n     return typeInfo.isPrimitiveType();\n   }\n }", "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java"}, {"additions": 9, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java", "sha": "a3e98dac458c98b053fdc0394b7e5f0f339f7f3c", "changes": 15, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -28,12 +28,12 @@\n public class EdmReturnTypeImpl implements EdmReturnType {\n \n   private final CsdlReturnType returnType;\n-  private final EdmTypeInfo typeInfo;\n+  private final Edm edm;\n   private EdmType typeImpl;\n \n   public EdmReturnTypeImpl(final Edm edm, final CsdlReturnType returnType) {\n+    this.edm = edm;\n     this.returnType = returnType;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(returnType.getType()).build();\n   }\n \n   @Override\n@@ -69,9 +69,12 @@ public SRID getSrid() {\n   @Override\n   public EdmType getType() {\n     if (typeImpl == null) {\n-      typeImpl = typeInfo.getType();\n+      if (returnType.getType() == null) {\n+        throw new EdmException(\"Return types must hava a full qualified type.\");\n+      }\n+      typeImpl = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(returnType.getType()).build().getType();\n       if (typeImpl == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + returnType.getType());\n       }\n     }\n ", "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java"}, {"additions": 5, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java", "sha": "f585bbcfb829761193ef81a34cc3b8ee17c55ff0", "changes": 22, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -30,23 +30,19 @@\n import org.apache.olingo.commons.api.edm.TargetType;\n import org.apache.olingo.commons.api.edm.geo.SRID;\n import org.apache.olingo.commons.api.edm.provider.CsdlTerm;\n-import org.apache.olingo.commons.core.edm.primitivetype.EdmPrimitiveTypeFactory;\n \n public class EdmTermImpl extends AbstractEdmNamed implements EdmTerm {\n \n   private final CsdlTerm term;\n   private final FullQualifiedName fqn;\n-  private final EdmTypeInfo typeInfo;\n   private EdmType termType;\n   private EdmTerm baseTerm;\n   private List<TargetType> appliesTo;\n \n   public EdmTermImpl(final Edm edm, final String namespace, final CsdlTerm term) {\n     super(edm, term.getName(), term);\n-\n     this.term = term;\n     fqn = new FullQualifiedName(namespace, term.getName());\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(term.getType()).build();\n   }\n \n   @Override\n@@ -57,22 +53,14 @@ public FullQualifiedName getFullQualifiedName() {\n   @Override\n   public EdmType getType() {\n     if (termType == null) {\n-      termType = typeInfo.isPrimitiveType()\n-          ? EdmPrimitiveTypeFactory.getInstance(typeInfo.getPrimitiveTypeKind())\n-          : typeInfo.isTypeDefinition()\n-              ? typeInfo.getTypeDefinition()\n-              : typeInfo.isEnumType()\n-                  ? typeInfo.getEnumType()\n-                  : typeInfo.isComplexType()\n-                      ? typeInfo.getComplexType()\n-                      : typeInfo.isEntityType()\n-                          ? typeInfo.getEntityType()\n-                          : null;\n+      if (term.getType() == null) {\n+        throw new EdmException(\"Terms must hava a full qualified type.\");\n+      }\n+      termType = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(term.getType()).build().getType();\n       if (termType == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + term.getType());\n       }\n     }\n-\n     return termType;\n   }\n ", "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java"}, {"additions": 27, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java", "sha": "c174bf2612bfeba7ef8f391698a5f9728dd68304", "changes": 27, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -20,10 +20,14 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmException;\n import org.apache.olingo.commons.api.edm.EdmParameter;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveType;\n@@ -42,6 +46,29 @@\n \n public class EdmParameterImplTest {\n \n+  @Test\n+  public void initialParameter() {\n+    EdmParameterImpl parameter = new EdmParameterImpl(mock(Edm.class), new CsdlParameter());\n+\n+    assertTrue(parameter.isNullable());\n+    assertFalse(parameter.isCollection());\n+    assertNull(parameter.getName());\n+    assertNull(parameter.getMapping());\n+    assertNull(parameter.getMaxLength());\n+    assertNull(parameter.getPrecision());\n+    assertNull(parameter.getScale());\n+    assertNull(parameter.getSrid());\n+    assertNotNull(parameter.getAnnotations());\n+    assertTrue(parameter.getAnnotations().isEmpty());\n+\n+    try {\n+      parameter.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Parameter null must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+\n   @Test\n   public void getTypeReturnsPrimitiveType() {\n     EdmProviderImpl edm = new EdmProviderImpl(mock(CsdlEdmProvider.class));", "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java"}, {"additions": 32, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java", "sha": "ef45af5b19e1996bd0c045236bbf3733616c750f", "changes": 32, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -20,12 +20,14 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmException;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveType;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveTypeKind;\n@@ -44,6 +46,36 @@\n \n public class EdmPropertyImplTest {\n \n+  @Test\n+  public void initialProperty() {\n+    EdmProperty property = new EdmPropertyImpl(mock(Edm.class), new CsdlProperty());\n+\n+    assertTrue(property.isNullable());\n+    assertFalse(property.isCollection());\n+    assertNull(property.getName());\n+    assertNull(property.getMapping());\n+    assertNull(property.getMaxLength());\n+    assertNull(property.getPrecision());\n+    assertNull(property.getScale());\n+    assertNull(property.getSrid());\n+    assertNotNull(property.getAnnotations());\n+    assertTrue(property.getAnnotations().isEmpty());\n+\n+    try {\n+      property.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Property null must hava a full qualified type.\", e.getMessage());\n+    }\n+   \n+    try {\n+      property.isPrimitive();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Property null must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+  \n   @Test\n   public void getTypeReturnsPrimitiveType() {\n     EdmProviderImpl edm = new EdmProviderImpl(mock(CsdlEdmProvider.class));", "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java"}, {"additions": 20, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java", "sha": "bc7b62eb3bd9bc127bc2aa929ab9af81e93f9a99", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -22,9 +22,11 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmComplexType;\n import org.apache.olingo.commons.api.edm.EdmEntityType;\n import org.apache.olingo.commons.api.edm.EdmEnumType;\n@@ -42,6 +44,24 @@\n \n public class EdmReturnTypeImplTest {\n \n+  @Test\n+  public void initialReturnType() {\n+    EdmReturnType returnType = new EdmReturnTypeImpl(mock(Edm.class), new CsdlReturnType());\n+\n+    assertTrue(returnType.isNullable());\n+    assertNull(returnType.getMaxLength());\n+    assertNull(returnType.getPrecision());\n+    assertNull(returnType.getScale());\n+    assertNull(returnType.getSrid());\n+\n+    try {\n+      returnType.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Return types must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+  \n   @Test\n   public void primitiveReturnType() {\n     CsdlReturnType providerType = new CsdlReturnType().setType(new FullQualifiedName(\"Edm\", \"String\"));", "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java"}, {"additions": 6, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java", "sha": "e6502af1cb00fbc770fe08968d477fd08cc745fc", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -25,6 +25,7 @@\n import static org.mockito.Mockito.when;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n \n import org.apache.olingo.commons.api.edm.Edm;\n@@ -173,7 +174,7 @@ public void getFunctions() {\n     for (EdmFunction function : functions) {\n       FullQualifiedName functionName = new FullQualifiedName(NAMESPACE, function.getName());\n       assertTrue(function == edm.getUnboundFunction(functionName, null));\n-      \n+\n       functionName = new FullQualifiedName(ALIAS, function.getName());\n       assertTrue(function == edm.getUnboundFunction(functionName, null));\n     }\n@@ -193,7 +194,6 @@ public void getAnnotationGroups() {\n     }\n   }\n \n-  \n   @Test\n   public void getContainer() {\n     EdmEntityContainer container = schema.getEntityContainer();\n@@ -301,7 +301,7 @@ public CsdlEntityContainerInfo getEntityContainerInfo(final FullQualifiedName en\n \n     @Override\n     public List<CsdlAliasInfo> getAliasInfos() throws ODataException {\n-      throw new RuntimeException(\"Provider must not be called in the schema case\");\n+      return Collections.emptyList();\n     }\n \n     @Override\n@@ -373,17 +373,17 @@ public CsdlEntityContainerInfo getEntityContainerInfo(final FullQualifiedName en\n       functions.add(new CsdlFunction().setName(\"function1\"));\n       functions.add(new CsdlFunction().setName(\"function2\"));\n       providerSchema.setFunctions(functions);\n-      \n+\n       List<CsdlAnnotations> annotationGroups = new ArrayList<CsdlAnnotations>();\n       annotationGroups.add(new CsdlAnnotations().setTarget(NAMESPACE + \".entityType1\"));\n       annotationGroups.add(new CsdlAnnotations().setTarget(NAMESPACE + \".entityType2\"));\n       providerSchema.setAnnotationsGroup(annotationGroups);\n-      \n+\n       List<CsdlTerm> terms = new ArrayList<CsdlTerm>();\n       terms.add(new CsdlTerm().setName(\"term1\").setType(\"Edm.String\"));\n       terms.add(new CsdlTerm().setName(\"term2\").setType(\"Edm.String\"));\n       providerSchema.setTerms(terms);\n-      \n+\n       ArrayList<CsdlSchema> schemas = new ArrayList<CsdlSchema>();\n       schemas.add(providerSchema);\n       return schemas;", "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java"}, {"additions": 22, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java", "sha": "80d1fb5d28dc6a7c56879f2b1327ca47e67b4bb8", "changes": 22, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -54,6 +54,28 @@\n   private EdmTerm initialTerm;\n   private EdmTerm derivedTerm;\n \n+  @Test\n+  public void initialTerm() {\n+    EdmTerm term = new EdmTermImpl(mock(Edm.class), \"namespace\", new CsdlTerm());\n+\n+    assertTrue(term.isNullable());\n+    assertNull(term.getName());\n+    assertNull(term.getMaxLength());\n+    assertNull(term.getPrecision());\n+    assertNull(term.getScale());\n+    assertNull(term.getSrid());\n+    assertNotNull(term.getAnnotations());\n+    assertTrue(term.getAnnotations().isEmpty());\n+\n+    assertNotNull(term.getFullQualifiedName());\n+    try {\n+      term.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Terms must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+\n   @Before\n   public void setupTypes() throws Exception {\n     CsdlEdmProvider provider = mock(CsdlEdmProvider.class);", "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java"}, {"additions": 3, "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java", "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java", "sha": "f5fb038dee2f85c313f047d08d705f5ff452d44c", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06", "patch": "@@ -190,19 +190,19 @@ public CsdlEntitySet getEntitySet(final FullQualifiedName entityContainer, final\n                 Arrays\n                     .asList(\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.Description\")\n+                            .setTerm(\"Org.OData.Core.V1.Description\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)\n                                     .setValue(\"Contains entities with collection of each primitive type\")),\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.LongDescription\")\n+                            .setTerm(\"Org.OData.Core.V1.LongDescription\")\n                             .setQualifier(\"EnabledForEntitySet\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)\n                                     .setValue(\"System Query Options: $filter, $count, $orderby, \"\n                                         + \"$skip, $top, $expand, $select, $format; Operations: Create, Read\")),\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.LongDescription\")\n+                            .setTerm(\"Org.OData.Core.V1.LongDescription\")\n                             .setQualifier(\"EnabledForEntity\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)", "filename": "lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java"}], "repo": "olingo-odata4"}]
