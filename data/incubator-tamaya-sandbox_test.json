{
    "incubator-tamaya-sandbox_0db3dd8": {
        "repo": "incubator-tamaya-sandbox",
        "message": "Block until the vertx deployment happens so we can get a clean (non-NPE) eventBus call.",
        "commit": "https://github.com/apache/incubator-tamaya-sandbox/commit/0db3dd8ad85013ae4faf75f0e27cb8ac28fcd8ca",
        "parent": "https://github.com/apache/incubator-tamaya-sandbox/commit/3a964e3cda341d85ea706602273fbb39f48a0d8f",
        "bug_id": "incubator-tamaya-sandbox_0db3dd8",
        "file": [
            {
                "sha": "e668c5b1afcbe6352acee91664423d6a42fb1ba3",
                "filename": "vertx/src/test/java/org/apache/tamaya/vertx/ConfigVerticleTest.java",
                "blob_url": "https://github.com/apache/incubator-tamaya-sandbox/blob/0db3dd8ad85013ae4faf75f0e27cb8ac28fcd8ca/vertx/src/test/java/org/apache/tamaya/vertx/ConfigVerticleTest.java",
                "raw_url": "https://github.com/apache/incubator-tamaya-sandbox/raw/0db3dd8ad85013ae4faf75f0e27cb8ac28fcd8ca/vertx/src/test/java/org/apache/tamaya/vertx/ConfigVerticleTest.java",
                "status": "modified",
                "changes": 45,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/incubator-tamaya-sandbox/contents/vertx/src/test/java/org/apache/tamaya/vertx/ConfigVerticleTest.java?ref=0db3dd8ad85013ae4faf75f0e27cb8ac28fcd8ca",
                "patch": "@@ -40,8 +40,8 @@\n import java.util.Set;\n \n /**\n- * Tests the Tamaya Vertx configuration support.\n- * Created by atsticks on 08.03.17.\n+ * Tests the Tamaya Vertx configuration support. Created by atsticks on\n+ * 08.03.17.\n  */\n @RunWith(VertxUnitRunner.class)\n public class ConfigVerticleTest {\n@@ -52,39 +52,46 @@\n     private TamayaConfigurationProducer producerVerticle = new TamayaConfigurationProducer();\n \n     @Before\n-    public void prepare(){\n-        vertxContext.vertx().deployVerticle(producerVerticle);\n+    public void prepare(final TestContext testContext) {\n+        final Async deployAsync = testContext.async();\n+        vertxContext.vertx().deployVerticle(producerVerticle, res -> {\n+            if (!res.succeeded()) {\n+                testContext.fail();\n+            }\n+            deployAsync.complete();\n+        });\n     }\n \n     @Test\n-    public void testSingle(final TestContext testContext){\n+\n+    public void testSingle(final TestContext testContext) {\n         final Async async = testContext.async();\n         vertxContext.vertx().eventBus().send(TamayaConfigurationProducer.DEFAULT_CONFIG_GET_SINGLE_ADDRESS,\n                 \"user.home\", new Handler<AsyncResult<Message<String>>>() {\n-                    @Override\n-                    public void handle(AsyncResult<Message<String>> reply) {\n-                        testContext.assertEquals(\n-                                reply.result().body(),\n-                                System.getProperty(\"user.home\"));\n-                        async.complete();\n-                    }\n-                });\n+            @Override\n+            public void handle(AsyncResult<Message<String>> reply) {\n+                testContext.assertEquals(\n+                        reply.result().body(),\n+                        System.getProperty(\"user.home\"));\n+                async.complete();\n+            }\n+        });\n     }\n \n     @Test\n-    public void testMap(final TestContext testContext){\n+    public void testMap(final TestContext testContext) {\n         final Async async = testContext.async();\n         String selector = \"[]{\\\"user.*\\\"}\";\n         vertxContext.vertx().eventBus().send(TamayaConfigurationProducer.DEFAULT_CONFIG_GET_MULTI_ADDRESS,\n                 selector, reply -> {\n                     testContext.assertNotNull(reply.result());\n                     testContext.assertNotNull(reply.result().body());\n-                    Map<String,String> config = Json.decodeValue((String)reply.result().body(),\n+                    Map<String, String> config = Json.decodeValue((String) reply.result().body(),\n                             Map.class);\n-                    Map<String,String> compareTo = Configuration.current()\n-                    .map(ConfigurationFunctions.filter((k,v) -> k.matches(\"user.\"))).getProperties();\n+                    Map<String, String> compareTo = Configuration.current()\n+                            .map(ConfigurationFunctions.filter((k, v) -> k.matches(\"user.\"))).getProperties();\n                     testContext.assertEquals(config.size(), compareTo.size());\n-                    for(Map.Entry<String,String> en:compareTo.entrySet()){\n+                    for (Map.Entry<String, String> en : compareTo.entrySet()) {\n                         testContext.assertEquals(\n                                 config.get(en.getKey()), en.getValue());\n                     }\n@@ -93,7 +100,7 @@ public void testMap(final TestContext testContext){\n     }\n \n     @Test\n-    public void testConfigCalls(TestContext testContext){\n+    public void testConfigCalls(TestContext testContext) {\n         testContext.assertNotNull(producerVerticle.getConfiguration());\n         testContext.assertEquals(\n                 producerVerticle.getConfigValue(\"user.home\"),",
                "deletions": 19
            }
        ],
        "patched_files": [],
        "unit_tests": [
            "ConfigVerticleTest.java"
        ]
    }
}