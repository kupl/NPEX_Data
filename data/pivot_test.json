{
    "pivot_2f2122f": {
        "bug_id": "pivot_2f2122f",
        "commit": "https://github.com/apache/pivot/commit/2f2122f0589ba80be4b21bf6b52153a03ec0c701",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 18,
                "filename": "tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx",
                "patch": "@@ -25,25 +25,21 @@ limitations under the License.\n             <left>\n                 <Border styles=\"{padding:4}\">\n                     <content>\n-                        <BoxPane orientation=\"vertical\" styles=\"{verticalAlignment:'center', fill:true}\">\n-                            <Border>\n-                                <content>\n-                                    <FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\">\n-                                        <decorators>\n-                                            <effects:BaselineDecorator/>\n-                                        </decorators>\n+                        <BoxPane orientation=\"vertical\" styles=\"{fill:true}\">\n+                            <FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\">\n+                                <decorators>\n+                                    <effects:BaselineDecorator/>\n+                                </decorators>\n \n-                                        <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/>\n-                                        <PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/>\n-                                        <PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/>\n-                                        <PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                    </FlowPane>\n-                                </content>\n-                            </Border>\n+                                <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/>\n+                                <PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/>\n+                                <PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/>\n+                                <PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                            </FlowPane>\n                         </BoxPane>\n                     </content>\n                 </Border>",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx",
                "sha": "f7e39bc02b2e5cdffdac62b30fbc172bce0336d9",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/www/flow_panes.html",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/www/flow_panes.html?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 20,
                "filename": "tutorials/www/flow_panes.html",
                "patch": "@@ -35,7 +35,7 @@\n <h1>Flow Panes</h1>\n <p>Flow panes arrange components in a horizontal line, wrapping when the contents don't fit on a single line. Components may be horizontally aligned to left, right, or center when there is space left over within a given line, and may optionally be vertically aligned by to their baselines.</p>\n \n-<p>The following example demonstrates the use of the <tt>FlowPane</tt> container. The buttons on the right can be used to modify the alignment properties:</p>\n+<p>The following example demonstrates the use of the <tt>FlowPane</tt> container. The buttons on the right can be used to modify the alignment properties. A <tt>BaselineDecorator</tt> is used to highlight the flow pane's baseline. This decorator draws a red line across a component's baseline. If the component does not have a baseline, it draws a blue line across the component's vertical midpoint:</p>\n \n <script src=\"version.js\"></script>\n <script>\n@@ -66,25 +66,21 @@ <h1>Flow Panes</h1>\n             &lt;left&gt;\n                 &lt;Border styles=\"{padding:4}\"&gt;\n                     &lt;content&gt;\n-                        &lt;BoxPane orientation=\"vertical\" styles=\"{verticalAlignment:'center', fill:true}\"&gt;\n-                            &lt;Border&gt;\n-                                &lt;content&gt;\n-                                    &lt;FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\"&gt;\n-                                        &lt;decorators&gt;\n-                                            &lt;effects:BaselineDecorator/&gt;\n-                                        &lt;/decorators&gt;\n-\n-                                        &lt;PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/&gt;\n-                                        &lt;PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/&gt;\n-                                        &lt;PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/&gt;\n-                                        &lt;PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                    &lt;/FlowPane&gt;\n-                                &lt;/content&gt;\n-                            &lt;/Border&gt;\n+                        &lt;BoxPane orientation=\"vertical\" styles=\"{fill:true}\"&gt;\n+                            &lt;FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\"&gt;\n+                                &lt;decorators&gt;\n+                                    &lt;effects:BaselineDecorator/&gt;\n+                                &lt;/decorators&gt;\n+\n+                                &lt;PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/&gt;\n+                                &lt;PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/&gt;\n+                                &lt;PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/&gt;\n+                                &lt;PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                            &lt;/FlowPane&gt;\n                         &lt;/BoxPane&gt;\n                     &lt;/content&gt;\n                 &lt;/Border&gt;",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/www/flow_panes.html",
                "sha": "b47ffbe3a8f043edc9235234402918563ee4720b",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 32,
                "filename": "wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java",
                "patch": "@@ -98,7 +98,17 @@ public int getPreferredHeight(int width) {\n         int preferredHeight = 0;\n \n         Orientation orientation = boxPane.getOrientation();\n-        if (orientation == Orientation.VERTICAL) {\n+        if (orientation == Orientation.HORIZONTAL) {\n+            // Preferred height is the maximum preferred height of all components\n+            for (int i = 0, n = boxPane.getLength(); i < n; i++) {\n+                Component component = boxPane.get(i);\n+\n+                if (component.isVisible()) {\n+                    preferredHeight = Math.max(preferredHeight,\n+                        component.getPreferredHeight());\n+                }\n+            }\n+        } else {\n             // Include padding in constraint\n             if (width != -1) {\n                 width = Math.max(width - (padding.left + padding.right), 0);\n@@ -119,16 +129,6 @@ public int getPreferredHeight(int width) {\n             if (j > 1) {\n                 preferredHeight += spacing * (j - 1);\n             }\n-        } else {\n-            // Preferred height is the maximum preferred height of all components\n-            for (int i = 0, n = boxPane.getLength(); i < n; i++) {\n-                Component component = boxPane.get(i);\n-\n-                if (component.isVisible()) {\n-                    preferredHeight = Math.max(preferredHeight,\n-                        component.getPreferredHeight());\n-                }\n-            }\n         }\n \n         // Include top and bottom padding values\n@@ -206,36 +206,45 @@ public int getBaseline(int width, int height) {\n \n         switch (boxPane.getOrientation()) {\n             case HORIZONTAL: {\n-                int clientHeight = Math.max(height - (padding.top + padding.bottom), 0);\n+                if (fill) {\n+                    int clientHeight = Math.max(height - (padding.top + padding.bottom), 0);\n \n-                for (Component component : boxPane) {\n-                    if (component.isVisible()) {\n-                        Dimensions size;\n-                        if (fill) {\n-                            size = new Dimensions(component.getPreferredWidth(clientHeight), clientHeight);\n-                        } else {\n-                            size = component.getPreferredSize();\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            int componentWidth = component.getPreferredWidth(clientHeight);\n+                            baseline = Math.max(baseline, component.getBaseline(componentWidth, clientHeight));\n+                        }\n+                    }\n+                } else {\n+                    contentHeight = 0;\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            contentHeight = Math.max(contentHeight, component.getPreferredHeight());\n                         }\n+                    }\n \n-                        contentHeight = Math.max(contentHeight, size.height);\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            Dimensions size = component.getPreferredSize();\n \n-                        int componentBaseline = component.getBaseline(size.width, size.height);\n+                            int componentBaseline = component.getBaseline(size.width, size.height);\n \n-                        if (!fill) {\n-                            switch (verticalAlignment) {\n-                                case CENTER: {\n-                                    componentBaseline += (clientHeight - size.height) / 2;\n-                                    break;\n-                                }\n+                            if (componentBaseline != -1) {\n+                                switch (verticalAlignment) {\n+                                    case CENTER: {\n+                                        componentBaseline += (contentHeight - size.height) / 2;\n+                                        break;\n+                                    }\n \n-                                case BOTTOM: {\n-                                    componentBaseline += clientHeight - size.height;\n-                                    break;\n+                                    case BOTTOM: {\n+                                        componentBaseline += contentHeight - size.height;\n+                                        break;\n+                                    }\n                                 }\n                             }\n-                        }\n \n-                        baseline = Math.max(baseline, componentBaseline);\n+                            baseline = Math.max(baseline, componentBaseline);\n+                        }\n                     }\n                 }\n ",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java",
                "sha": "d5bd725c2cf4b962ec42e62b1659c80dbc729e82",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 11,
                "filename": "wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java",
                "patch": "@@ -309,18 +309,13 @@ public void layout() {\n \n             for (Component component : row) {\n                 int y;\n+                int componentBaseline = component.getBaseline(component.getWidth(),\n+                    component.getHeight());\n                 if (alignToBaseline\n-                    && baseline != -1) {\n-                    int componentBaseline = component.getBaseline(component.getWidth(),\n-                        component.getHeight());\n-\n-                    if (componentBaseline != -1) {\n-                        // Align to baseline\n-                        y = baseline - componentBaseline;\n-                    } else {\n-                        // Align to bottom\n-                        y = rowHeight - component.getHeight();\n-                    }\n+                    && baseline != -1\n+                    && componentBaseline != -1) {\n+                    // Align to baseline\n+                    y = baseline - componentBaseline;\n                 } else {\n                     // Align to bottom\n                     y = rowHeight - component.getHeight();",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java",
                "sha": "6c9e7caa3db0c2034800a1565cf37d2d4acdb5aa",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 3,
                "filename": "wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java",
                "patch": "@@ -401,7 +401,11 @@ public Bounds getCharacterBounds(int offset) {\n                 }\n             }\n \n-            return characterBounds.intersect(0, 0, getWidth(), getHeight());\n+            if (characterBounds != null) {\n+                characterBounds = characterBounds.intersect(0, 0, getWidth(), getHeight());\n+            }\n+\n+            return characterBounds;\n         }\n \n         @Override\n@@ -1627,8 +1631,11 @@ public Bounds getCharacterBounds(int offset) {\n     private void scrollCharacterToVisible(int offset) {\n         TextArea textArea = (TextArea)getComponent();\n         Bounds characterBounds = getCharacterBounds(offset);\n-        textArea.scrollAreaToVisible(0, characterBounds.y, characterBounds.width,\n-            characterBounds.height);\n+\n+        if (characterBounds != null) {\n+            textArea.scrollAreaToVisible(0, characterBounds.y, characterBounds.width,\n+                characterBounds.height);\n+        }\n     }\n \n     public Color getColor() {",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java",
                "sha": "f5965aeefa0c10380affa1bd3cfa2432d5c1212c",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 12,
                "filename": "wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java",
                "patch": "@@ -460,15 +460,21 @@ public int getInsertionPoint(int x) {\n     }\n \n     public Bounds getCharacterBounds(int offset) {\n-        Shape glyphBounds = glyphVector.getGlyphLogicalBounds(offset);\n-        Rectangle2D glyphBounds2D = glyphBounds.getBounds2D();\n+        Bounds characterBounds = null;\n \n-        int x = (int)Math.floor(glyphBounds2D.getX()) + padding.left - scrollLeft + 1;\n-        int y = padding.top + 1;\n-        int width = (int)Math.ceil(glyphBounds2D.getWidth());\n-        int height = getHeight() - (padding.top + padding.bottom + 2);\n+        if (glyphVector != null) {\n+            Shape glyphBounds = glyphVector.getGlyphLogicalBounds(offset);\n+            Rectangle2D glyphBounds2D = glyphBounds.getBounds2D();\n \n-        return new Bounds(x, y, width, height);\n+            int x = (int)Math.floor(glyphBounds2D.getX()) + padding.left - scrollLeft + 1;\n+            int y = padding.top + 1;\n+            int width = (int)Math.ceil(glyphBounds2D.getWidth());\n+            int height = getHeight() - (padding.top + padding.bottom + 2);\n+\n+            characterBounds = new Bounds(x, y, width, height);\n+        }\n+\n+        return characterBounds;\n     }\n \n     private void setScrollLeft(int scrollLeft) {\n@@ -480,12 +486,15 @@ private void setScrollLeft(int scrollLeft) {\n     private void scrollCharacterToVisible(int offset) {\n         int width = getWidth();\n         Bounds characterBounds = getCharacterBounds(offset);\n-        int glyphX = characterBounds.x - (padding.left + 1) + scrollLeft;\n \n-        if (characterBounds.x < padding.left + 1) {\n-            setScrollLeft(glyphX);\n-        } else if (characterBounds.x + characterBounds.width > width - (padding.right + 1)) {\n-            setScrollLeft(glyphX + (padding.left + padding.right + 2) + characterBounds.width - width);\n+        if (characterBounds != null) {\n+            int glyphX = characterBounds.x - (padding.left + 1) + scrollLeft;\n+\n+            if (characterBounds.x < padding.left + 1) {\n+                setScrollLeft(glyphX);\n+            } else if (characterBounds.x + characterBounds.width > width - (padding.right + 1)) {\n+                setScrollLeft(glyphX + (padding.left + padding.right + 2) + characterBounds.width - width);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java",
                "sha": "70968a57c8bd628b481a956559fd859d0653d53e",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701",
                "deletions": 3,
                "filename": "wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx",
                "patch": "@@ -16,12 +16,14 @@ See the License for the specific language governing permissions and\n limitations under the License.\n -->\n \n-<Frame title=\"FlowPane Test\" preferredWidth=\"320\"\n-    styles=\"{padding:0}\"\n+<Frame title=\"FlowPane Test\" styles=\"{padding:0}\"\n     xmlns:wtkx=\"http://pivot.apache.org/wtkx\"\n+    xmlns:content=\"org.apache.pivot.wtk.content\"\n+    xmlns:effects=\"org.apache.pivot.wtk.effects\"\n     xmlns=\"org.apache.pivot.wtk\">\n     <content>\n-        <FlowPane styles=\"{alignment:'left', backgroundColor:'#ff0000', padding:4}\">\n+        <FlowPane styles=\"{alignment:'left', padding:4}\">\n+            <!--\n             <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:15}\"/>\n             <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"2\" visible=\"false\" styles=\"{minimumAspectRatio:1.5}\"/>\n@@ -39,6 +41,24 @@ limitations under the License.\n             <PushButton buttonData=\"D\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"E\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"F\" styles=\"{minimumAspectRatio:1.5}\"/>\n+            -->\n+            <PushButton buttonData=\"Hello\" preferredHeight=\"80\">\n+                <decorators>\n+                    <effects:BaselineDecorator/>\n+                </decorators>\n+                <dataRenderer>\n+                    <content:ButtonDataRenderer styles=\"{verticalAlignment:'bottom'}\"/>\n+                </dataRenderer>\n+            </PushButton>\n+\n+            <PushButton buttonData=\"World\" preferredHeight=\"80\">\n+                <decorators>\n+                    <effects:BaselineDecorator/>\n+                </decorators>\n+                <dataRenderer>\n+                    <content:ButtonDataRenderer styles=\"{verticalAlignment:'top'}\"/>\n+                </dataRenderer>\n+            </PushButton>\n         </FlowPane>\n     </content>\n </Frame>",
                "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx",
                "sha": "54e82be398d2070038b2c6ac1c712dcc37723dae",
                "status": "modified"
            }
        ],
        "message": "Fix NPE bugs in TextArea and TextInput; fix baseline calculation issue in BoxPane.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@834608 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pivot/commit/941c61ec41b3ad40e1ab7afae8090729e16cc1da",
        "patched_files": [
            "BoxPaneSkin.java",
            "TextAreaSkin.java",
            "FlowPaneSkin.java",
            "TerraTextInputSkin.java",
            "flow_panes.java"
        ],
        "repo": "pivot",
        "unit_tests": [
            "flow_pane_test.java"
        ]
    },
    "pivot_3f2a9a2": {
        "bug_id": "pivot_3f2a9a2",
        "commit": "https://github.com/apache/pivot/commit/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/build.xml?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
                "deletions": 2,
                "filename": "build.xml",
                "patch": "@@ -36,12 +36,12 @@ limitations under the License.\n     <property name=\"keystore.passwd\" value=\"apache\"/>\n \n     <!-- Compiler properties -->\n-    <property name=\"compiler.deprecation\" value=\"true\"/>\n+    <property name=\"compiler.deprecation\" value=\"false\"/>\n     <property name=\"compiler.debug\" value=\"false\"/>\n     <property name=\"compiler.target\" value=\"1.6\"/>\n     <property name=\"compiler.encoding\" value=\"UTF-8\"/>\n     <property name=\"compiler.indexJars\" value=\"true\"/>\n-    <property name=\"compiler.arg\" value=\"-Xlint\"/>\n+    <property name=\"compiler.arg\" value=\"-Xlint:-deprecation\"/>\n \n     <!-- Test properties -->\n     <property name=\"test.verbose\" value=\"false\"/>",
                "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml",
                "sha": "58829fe6830b2f5510ce6bd0e6877b1b158af2d9",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/JSONSerializer.java?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
                "deletions": 5,
                "filename": "core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "patch": "@@ -772,7 +772,8 @@ public static Number getNumber(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Short getShort(Object root, String path) {\n-        return getNumber(root, path).shortValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.shortValue();\n     }\n \n     /**\n@@ -784,7 +785,8 @@ public static Short getShort(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Integer getInteger(Object root, String path) {\n-        return getNumber(root, path).intValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.intValue();\n     }\n \n     /**\n@@ -796,7 +798,8 @@ public static Integer getInteger(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Long getLong(Object root, String path) {\n-        return getNumber(root, path).longValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.longValue();\n     }\n \n     /**\n@@ -808,7 +811,8 @@ public static Long getLong(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Float getFloat(Object root, String path) {\n-        return getNumber(root, path).floatValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.floatValue();\n     }\n \n     /**\n@@ -820,7 +824,8 @@ public static Float getFloat(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Double getDouble(Object root, String path) {\n-        return getNumber(root, path).doubleValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.doubleValue();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "sha": "1c74f54873393082c43537e738b50873fb664473",
                "status": "modified"
            }
        ],
        "message": "Fix potential NPEs in JSONSerializer; temporarily disable deprecation warnings in build.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@918160 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pivot/commit/cf5f62a024ca7da2674d3f2442988dfe05668f82",
        "patched_files": [
            "JSONSerializer.java"
        ],
        "repo": "pivot",
        "unit_tests": [
            "JSONSerializerTest.java"
        ]
    },
    "pivot_557e08f": {
        "bug_id": "pivot_557e08f",
        "commit": "https://github.com/apache/pivot/commit/557e08f43dafaa10a20df21ef247dcc1ed5915d5",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/pivot/blob/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtk/ButtonGroup.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/ButtonGroup.java?ref=557e08f43dafaa10a20df21ef247dcc1ed5915d5",
                "deletions": 2,
                "filename": "wtk/src/org/apache/pivot/wtk/ButtonGroup.java",
                "patch": "@@ -112,14 +112,18 @@ public Button getSelection() {\n     }\n \n     public void setSelection(Button selection) {\n-        if (!contains(selection)) {\n+        if (selection != null\n+            && !contains(selection)) {\n             throw new IllegalArgumentException();\n         }\n \n         Button previousSelection = this.selection;\n         if (previousSelection != selection) {\n             this.selection = selection;\n-            selection.setSelected(true);\n+\n+            if (selection != null) {\n+                selection.setSelected(true);\n+            }\n \n             buttonGroupListeners.selectionChanged(this, previousSelection);\n         }",
                "raw_url": "https://github.com/apache/pivot/raw/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtk/ButtonGroup.java",
                "sha": "9299c2fc1ce97867f59898a913d813cc5632c1c4",
                "status": "modified"
            },
            {
                "additions": 68,
                "blob_url": "https://github.com/apache/pivot/blob/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java",
                "changes": 157,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java?ref=557e08f43dafaa10a20df21ef247dcc1ed5915d5",
                "deletions": 89,
                "filename": "wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java",
                "patch": "@@ -163,16 +163,18 @@ public int size() {\n \n         public final Element parent;\n         public final Type type;\n+        public final String id;\n         public final String tagName;\n         public final int lineNumber;\n         public final List<Attribute> attributes;\n \n         public Object value;\n \n-        public Element(Element parent, Type type, String tagName, int lineNumber,\n+        public Element(Element parent, Type type, String id, String tagName, int lineNumber,\n             List<Attribute> attributes, Object value) {\n             this.parent = parent;\n             this.type = type;\n+            this.id = id;\n             this.tagName = tagName;\n             this.lineNumber = lineNumber;\n             this.attributes = attributes;\n@@ -182,23 +184,25 @@ public Element(Element parent, Type type, String tagName, int lineNumber,\n \n     private static class Attribute {\n         public final String namespaceURI;\n-        public final String prefix;\n         public final String localName;\n         public final String value;\n \n-        public Attribute(String namespaceURI, String prefix, String localName, String value) {\n+        public Attribute(String namespaceURI, String localName, String value) {\n             this.namespaceURI = namespaceURI;\n-            this.prefix = prefix;\n             this.localName = localName;\n             this.value = value;\n         }\n     }\n \n-    private class ElementInvocationHandler implements InvocationHandler {\n+    private class AttributeInvocationHandler implements InvocationHandler {\n         private ScriptEngine scriptEngine;\n+        private String event;\n+        private String script;\n \n-        public ElementInvocationHandler(ScriptEngine scriptEngine) {\n+        public AttributeInvocationHandler(ScriptEngine scriptEngine, String event, String script) {\n             this.scriptEngine = scriptEngine;\n+            this.event = event;\n+            this.script = script;\n         }\n \n         @Override\n@@ -207,16 +211,13 @@ public Object invoke(Object proxy, Method method, Object[] args)\n             Object result = null;\n \n             String methodName = method.getName();\n-            Bindings bindings = scriptEngine.getBindings(ScriptContext.ENGINE_SCOPE);\n-            if (bindings.containsKey(methodName)) {\n-                Invocable invocable;\n+            if (methodName.equals(event)) {\n                 try {\n-                    invocable = (Invocable)scriptEngine;\n-                } catch (ClassCastException exception) {\n-                    throw new SerializationException(exception);\n+                    scriptEngine.eval(script);\n+                } catch (ScriptException exception) {\n+                    System.err.println(exception);\n+                    System.err.println(script);\n                 }\n-\n-                result = invocable.invokeFunction(methodName, args);\n             }\n \n             // If the function didn't return a value, return the default\n@@ -231,17 +232,13 @@ public Object invoke(Object proxy, Method method, Object[] args)\n \n             return result;\n         }\n-    };\n+    }\n \n-    private class AttributeInvocationHandler implements InvocationHandler {\n+    private class ElementInvocationHandler implements InvocationHandler {\n         private ScriptEngine scriptEngine;\n-        private String event;\n-        private String script;\n \n-        public AttributeInvocationHandler(ScriptEngine scriptEngine, String event, String script) {\n+        public ElementInvocationHandler(ScriptEngine scriptEngine) {\n             this.scriptEngine = scriptEngine;\n-            this.event = event;\n-            this.script = script;\n         }\n \n         @Override\n@@ -250,13 +247,16 @@ public Object invoke(Object proxy, Method method, Object[] args)\n             Object result = null;\n \n             String methodName = method.getName();\n-            if (methodName.equals(event)) {\n+            Bindings bindings = scriptEngine.getBindings(ScriptContext.ENGINE_SCOPE);\n+            if (bindings.containsKey(methodName)) {\n+                Invocable invocable;\n                 try {\n-                    scriptEngine.eval(script);\n-                } catch (ScriptException exception) {\n-                    System.err.println(exception);\n-                    System.err.println(script);\n+                    invocable = (Invocable)scriptEngine;\n+                } catch (ClassCastException exception) {\n+                    throw new SerializationException(exception);\n                 }\n+\n+                result = invocable.invokeFunction(methodName, args);\n             }\n \n             // If the function didn't return a value, return the default\n@@ -271,7 +271,7 @@ public Object invoke(Object proxy, Method method, Object[] args)\n \n             return result;\n         }\n-    }\n+    };\n \n     private URL location = null;\n     private Resources resources = null;\n@@ -510,20 +510,31 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n         String localName = reader.getLocalName();\n \n         // Build attribute list; these will be processed in the close tag\n+        String id = null;\n         ArrayList<Attribute> attributes = new ArrayList<Attribute>();\n \n         for (int i = 0, n = reader.getAttributeCount(); i < n; i++) {\n-            String attributeNamespaceURI = reader.getAttributeNamespace(i);\n-            if (attributeNamespaceURI == null) {\n-                attributeNamespaceURI = reader.getNamespaceURI(\"\");\n-            }\n-\n             String attributePrefix = reader.getAttributePrefix(i);\n             String attributeLocalName = reader.getAttributeLocalName(i);\n             String attributeValue = reader.getAttributeValue(i);\n \n-            attributes.add(new Attribute(attributeNamespaceURI,\n-                attributePrefix, attributeLocalName, attributeValue));\n+            if (attributePrefix != null\n+                && attributePrefix.equals(WTKX_PREFIX)) {\n+                if (attributeLocalName.equals(ID_ATTRIBUTE)) {\n+                    id = attributeValue;\n+                } else {\n+                    throw new SerializationException(attributePrefix + \":\" + attributeLocalName\n+                        + \" is not a valid attribute.\");\n+                }\n+            } else {\n+                String attributeNamespaceURI = reader.getAttributeNamespace(i);\n+                if (attributeNamespaceURI == null) {\n+                    attributeNamespaceURI = reader.getNamespaceURI(\"\");\n+                }\n+\n+                attributes.add(new Attribute(attributeNamespaceURI, attributeLocalName,\n+                    attributeValue));\n+            }\n         }\n \n         // Determine the type and value of this element\n@@ -567,6 +578,12 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n                     Class<?> type = Class.forName(className);\n                     elementType = Element.Type.INSTANCE;\n                     value = type.newInstance();\n+\n+                    // Add the value to the named objects map here so it is available to\n+                    // sub-elements (rather than waiting until the close tag)\n+                    if (id != null) {\n+                        namedObjects.put(id, value);\n+                    }\n                 } catch (Exception exception) {\n                     throw new SerializationException(exception);\n                 }\n@@ -611,7 +628,7 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n         }\n \n         Location xmlStreamLocation = reader.getLocation();\n-        element = new Element(element, elementType, tagName, xmlStreamLocation.getLineNumber(),\n+        element = new Element(element, elementType, id, tagName, xmlStreamLocation.getLineNumber(),\n             attributes, value);\n \n         // If this is the root, set it\n@@ -628,7 +645,6 @@ private void processEndElement(XMLStreamReader reader)\n         switch (element.type) {\n             case INSTANCE:\n             case INCLUDE: {\n-                String id = null;\n                 ArrayList<Attribute> instancePropertyAttributes = new ArrayList<Attribute>();\n                 ArrayList<Attribute> staticPropertyAttributes = new ArrayList<Attribute>();\n \n@@ -639,28 +655,18 @@ private void processEndElement(XMLStreamReader reader)\n                     Resources resources = this.resources;\n \n                     for (Attribute attribute : element.attributes) {\n-                        if (attribute.prefix != null\n-                            && attribute.prefix.equals(WTKX_PREFIX)) {\n-                            if (attribute.localName.equals(ID_ATTRIBUTE)) {\n-                                id = attribute.value;\n-                            } else {\n-                                throw new SerializationException(WTKX_PREFIX + \":\" + attribute.localName\n-                                    + \" is not a valid attribute.\");\n-                            }\n+                        if (attribute.localName.equals(INCLUDE_SRC_ATTRIBUTE)) {\n+                            src = attribute.value;\n+                        } else if (attribute.localName.equals(INCLUDE_RESOURCES_ATTRIBUTE)) {\n+                            resources = new Resources(resources, attribute.value);\n                         } else {\n-                            if (attribute.localName.equals(INCLUDE_SRC_ATTRIBUTE)) {\n-                                src = attribute.value;\n-                            } else if (attribute.localName.equals(INCLUDE_RESOURCES_ATTRIBUTE)) {\n-                                resources = new Resources(resources, attribute.value);\n-                            } else {\n-                                if (!Character.isUpperCase(attribute.localName.charAt(0))) {\n-                                    throw new SerializationException(\"Instance property setters are not\"\n-                                        + \" supported for \" + WTKX_PREFIX + \":\" + INCLUDE_TAG\n-                                        + \" \" + \" tag.\");\n-                                }\n-\n-                                staticPropertyAttributes.add(attribute);\n+                            if (!Character.isUpperCase(attribute.localName.charAt(0))) {\n+                                throw new SerializationException(\"Instance property setters are not\"\n+                                    + \" supported for \" + WTKX_PREFIX + \":\" + INCLUDE_TAG\n+                                    + \" \" + \" tag.\");\n                             }\n+\n+                            staticPropertyAttributes.add(attribute);\n                         }\n                     }\n \n@@ -672,8 +678,8 @@ private void processEndElement(XMLStreamReader reader)\n \n                     // Read the object\n                     WTKXSerializer serializer = new WTKXSerializer(resources);\n-                    if (id != null) {\n-                        includeSerializers.put(id, serializer);\n+                    if (element.id != null) {\n+                        includeSerializers.put(element.id, serializer);\n                     }\n \n                     if (src.charAt(0) == '/') {\n@@ -682,42 +688,22 @@ private void processEndElement(XMLStreamReader reader)\n                         element.value = serializer.readObject(new URL(location, src));\n                     }\n \n-                    if (id == null\n+                    if (element.id == null\n                         && !serializer.isEmpty()\n                         && serializer.scriptEngineManager == null) {\n                         System.err.println(\"Include \\\"\" + src + \"\\\" defines unreachable objects.\");\n                     }\n                 } else {\n                     // Process attributes looking for wtkx:id and all property setters\n                     for (Attribute attribute : element.attributes) {\n-                        if (attribute.prefix != null\n-                            && attribute.prefix.equals(WTKX_PREFIX)) {\n-                            if (attribute.localName.equals(ID_ATTRIBUTE)) {\n-                                id = attribute.value;\n-                            } else {\n-                                throw new SerializationException(WTKX_PREFIX + \":\" + attribute.localName\n-                                    + \" is not a valid attribute.\");\n-                            }\n+                        if (Character.isUpperCase(attribute.localName.charAt(0))) {\n+                            staticPropertyAttributes.add(attribute);\n                         } else {\n-                            if (Character.isUpperCase(attribute.localName.charAt(0))) {\n-                                staticPropertyAttributes.add(attribute);\n-                            } else {\n-                                instancePropertyAttributes.add(attribute);\n-                            }\n+                            instancePropertyAttributes.add(attribute);\n                         }\n                     }\n                 }\n \n-                // If an ID was specified, add the value to the named object map\n-                if (id != null) {\n-                    if (id.length() == 0) {\n-                        throw new IllegalArgumentException(WTKX_PREFIX + \":\" + ID_ATTRIBUTE\n-                            + \" must not be null.\");\n-                    }\n-\n-                    namedObjects.put(id, element.value);\n-                }\n-\n                 // Apply instance attributes\n                 Dictionary<String, Object> dictionary;\n                 if (element.value instanceof Dictionary<?, ?>) {\n@@ -899,13 +885,6 @@ private void processEndElement(XMLStreamReader reader)\n                 String src = null;\n                 String language = this.language;\n                 for (Attribute attribute : element.attributes) {\n-                    if (attribute.prefix != null\n-                        && attribute.prefix.length() > 0) {\n-                        throw new SerializationException(attribute.prefix + \":\" +\n-                            attribute.localName + \" is not a valid\" + \" attribute for the \"\n-                            + WTKX_PREFIX + \":\" + SCRIPT_TAG + \" tag.\");\n-                    }\n-\n                     if (attribute.localName.equals(SCRIPT_SRC_ATTRIBUTE)) {\n                         src = attribute.value;\n                     } else if (attribute.localName.equals(SCRIPT_LANGUAGE_ATTRIBUTE)) {",
                "raw_url": "https://github.com/apache/pivot/raw/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java",
                "sha": "3041b0c628c4cf4e91c58ad12e9aeb85fe763626",
                "status": "modified"
            }
        ],
        "message": "Process wtkx:id as soon as the associated instance is available (don't wait until closing tag for instance elements); fix NPE in ButtonGroup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@819508 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pivot/commit/1ad73f36e980780412d6e3874dc98e2faabce82c",
        "patched_files": [
            "ButtonGroup.java"
        ],
        "repo": "pivot",
        "unit_tests": [
            "ButtonGroupTest.java"
        ]
    },
    "pivot_9ee479f": {
        "bug_id": "pivot_9ee479f",
        "commit": "https://github.com/apache/pivot/commit/9ee479fcbc66fe77821e25823a18f35df317fd30",
        "file": [
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/pivot/blob/9ee479fcbc66fe77821e25823a18f35df317fd30/core/src/org/apache/pivot/collections/MapList.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/collections/MapList.java?ref=9ee479fcbc66fe77821e25823a18f35df317fd30",
                "deletions": 28,
                "filename": "core/src/org/apache/pivot/collections/MapList.java",
                "patch": "@@ -26,13 +26,13 @@\n  * Decorates a {@link Map} to look like a {@link List} of key/value pairs. This\n  * facilitates the use of a <tt>Map</tt> as table data in a\n  * {@link org.apache.pivot.wtk.TableView}.\n- *\n+ * \n  * @author tvolkert\n  */\n public class MapList<K, V> implements List<Pair<K, V>> {\n     /**\n      * Map list listener list.\n-     *\n+     * \n      * @author tvolkert\n      */\n     private static class MapListListenerList<K, V> extends ListenerList<MapListListener<K, V>>\n@@ -48,6 +48,8 @@ public void sourceChanged(MapList<K, V> mapList, Map<K, V> previousSource) {\n \n     private ArrayList<Pair<K, V>> view = null;\n \n+    // this flag is used to prevent recursion if the source is updated\n+    // externally\n     private boolean updating = false;\n \n     private ListListenerList<Pair<K, V>> listListeners = new ListListenerList<Pair<K, V>>();\n@@ -120,31 +122,34 @@ public MapList() {\n \n     /**\n      * Creates a new map list that decorates the specified source map.\n-     *\n+     * \n      * @param source\n-     * The map to present as a list\n+     *            The map to present as a list\n      */\n     public MapList(Map<K, V> source) {\n         setSource(source);\n     }\n \n     /**\n      * Gets the source map.\n-     *\n-     * @return\n-     * The source map, or <tt>null</tt> if no source is set\n+     * \n+     * @return The source map, or <tt>null</tt> if no source is set\n      */\n     public Map<K, V> getSource() {\n         return source;\n     }\n \n     /**\n      * Sets the source map.\n-     *\n+     * \n      * @param source\n-     * The source map, or <tt>null</tt> to clear the source\n+     *            The source map, or <tt>null</tt> to clear the source\n      */\n     public void setSource(Map<K, V> source) {\n+        if (source == null) {\n+            source = new HashMap<K, V>();\n+        }\n+\n         Map<K, V> previousSource = this.source;\n \n         if (previousSource != source) {\n@@ -168,14 +173,10 @@ public void setSource(Map<K, V> source) {\n             mapListListeners.sourceChanged(this, previousSource);\n \n             // Refresh the view\n-            if (source == null) {\n-                view = null;\n-            } else {\n-                view = new ArrayList<Pair<K, V>>(source.count());\n+            view = new ArrayList<Pair<K, V>>(source.count());\n \n-                for (K key : source) {\n-                    listListeners.itemInserted(this, view.add(new Pair<K, V>(key, source.get(key))));\n-                }\n+            for (K key : source) {\n+                listListeners.itemInserted(this, view.add(new Pair<K, V>(key, source.get(key))));\n             }\n         }\n     }\n@@ -249,8 +250,7 @@ public void insert(Pair<K, V> pair, int index) {\n \n         Pair<K, V> previousPair = view.get(index);\n \n-        if (!pair.key.equals(previousPair.key)\n-            && source.containsKey(pair.key)) {\n+        if (!pair.key.equals(previousPair.key) && source.containsKey(pair.key)) {\n             throw new IllegalArgumentException(\"Duplicate keys not allowed.\");\n         }\n \n@@ -260,7 +260,6 @@ public void insert(Pair<K, V> pair, int index) {\n         // Update the source\n         updating = true;\n         try {\n-            source.remove(previousPair.key);\n             source.put(pair.key, pair.value);\n         } finally {\n             updating = false;\n@@ -280,7 +279,7 @@ public int remove(Pair<K, V> pair) {\n         int index = indexOf(pair);\n \n         if (index >= 0) {\n-           remove(index, 1);\n+            remove(index, 1);\n         }\n \n         return index;\n@@ -328,15 +327,13 @@ public int indexOf(Pair<K, V> pair) {\n     }\n \n     /**\n-     * Finds the specified pair in the view list by searching linearly\n-     * and reporting an exact match only (bypasses the list's\n-     * comparator).\n-     *\n+     * Finds the specified pair in the view list by searching linearly and\n+     * reporting an exact match only (bypasses the list's comparator).\n+     * \n      * @param pair\n-     * The pair to search for\n-     *\n-     * @return\n-     * The index of the pair in the list, or <tt>-1</tt> if not found\n+     *            The pair to search for\n+     * \n+     * @return The index of the pair in the list, or <tt>-1</tt> if not found\n      */\n     private int linearSearch(Pair<K, V> pair) {\n         int index = -1;",
                "raw_url": "https://github.com/apache/pivot/raw/9ee479fcbc66fe77821e25823a18f35df317fd30/core/src/org/apache/pivot/collections/MapList.java",
                "sha": "05d81d58a03d8e935baf8fe348015ed0bccca125",
                "status": "modified"
            },
            {
                "additions": 167,
                "blob_url": "https://github.com/apache/pivot/blob/9ee479fcbc66fe77821e25823a18f35df317fd30/core/test/org/apache/pivot/collections/test/MapListTest.java",
                "changes": 167,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/test/org/apache/pivot/collections/test/MapListTest.java?ref=9ee479fcbc66fe77821e25823a18f35df317fd30",
                "deletions": 0,
                "filename": "core/test/org/apache/pivot/collections/test/MapListTest.java",
                "patch": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.pivot.collections.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.fail;\n+\n+import java.util.Comparator;\n+import java.util.Iterator;\n+\n+import org.apache.pivot.collections.HashMap;\n+import org.apache.pivot.collections.Map;\n+import org.apache.pivot.collections.MapList;\n+import org.apache.pivot.collections.MapListListener;\n+import org.apache.pivot.collections.Sequence;\n+import org.apache.pivot.collections.Map.Pair;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class MapListTest {\n+\n+    private TestMapListListener listener;\n+\n+    @Before\n+    public void createListener() {\n+        listener = new TestMapListListener();\n+    }\n+\n+    @Test\n+    public void basicTest() {\n+        MapList<String, Integer> mapList = new MapList<String, Integer>();\n+        assertMapList(mapList);\n+\n+        mapList = new MapList<String, Integer>(new HashMap<String, Integer>());\n+        assertMapList(mapList);\n+\n+        Map<String, Integer> source = mapList.getSource();\n+        mapList.getMapListListeners().add(listener);\n+        mapList.setSource(null);\n+        assertEquals(1, listener.calls);\n+        assertEquals(mapList, listener.mapList);\n+        assertEquals(source, listener.previousSource);\n+        assertMapList(mapList);\n+\n+        TestComparator comparator = new TestComparator();\n+        mapList.setComparator(comparator);\n+        assertEquals(comparator, mapList.getComparator());\n+    }\n+\n+    private void assertMapList(MapList<String, Integer> mapList) {\n+        assertNull(mapList.getComparator());\n+        assertNotNull(mapList.getListListeners());\n+        assertNotNull(mapList.getMapListListeners());\n+        assertEquals(0, mapList.getLength());\n+\n+        Pair<String, Integer> pair = new Pair<String, Integer>(\"a\", 1);\n+\n+        assertEquals(-1, mapList.indexOf(pair));\n+\n+        mapList.add(pair);\n+        assertEquals(1, mapList.getLength());\n+\n+        Map<String, Integer> newSource = new HashMap<String, Integer>();\n+        newSource.put(\"b\", 2);\n+        newSource.put(\"c\", 3);\n+        mapList.setSource(newSource);\n+\n+        assertEquals(newSource, mapList.getSource());\n+        assertEquals(2, mapList.getLength());\n+\n+        int iteratorCount = 0;\n+        Iterator<Pair<String, Integer>> iter = mapList.iterator();\n+        while (iter.hasNext()) {\n+            pair = iter.next();\n+            if (mapList.indexOf(pair) != iteratorCount) {\n+                fail(\"Unexpected pair \" + pair + \" in iterator\");\n+            }\n+            iteratorCount++;\n+        }\n+        assertEquals(2, iteratorCount);\n+\n+        Pair<String, Integer> newCPair = new Pair<String, Integer>(\"c\", 33);\n+        mapList.update(1, newCPair);\n+        assertEquals(newCPair, mapList.get(1));\n+\n+        Pair<String, Integer> aaPair = new Pair<String, Integer>(\"aa\", 11);\n+        mapList.insert(aaPair, 1);\n+        assertEquals(3, mapList.getLength());\n+        assertEquals(aaPair, mapList.get(1));\n+        assertEquals(newCPair, mapList.get(2));\n+\n+        Sequence<Pair<String, Integer>> sequence = mapList.remove(0, 1);\n+        assertNotNull(sequence);\n+        pair = sequence.get(0);\n+        assertNotNull(pair);\n+        assertEquals(\"b\", pair.key);\n+        assertEquals(2, pair.value);\n+\n+        assertEquals(2, mapList.getLength());\n+\n+        newSource.put(\"aa\", 77);\n+        pair = mapList.get(1);\n+        assertEquals(pair.key, \"aa\");\n+        assertEquals(pair.value, 77);\n+\n+        newSource.remove(\"aa\");\n+        assertEquals(1, mapList.getLength());\n+\n+        mapList.clear();\n+        assertEquals(0, mapList.getLength());\n+\n+        pair = new Pair<String, Integer>(\"d\", 4);\n+        mapList.add(pair);\n+        assertEquals(1, mapList.getLength());\n+        assertEquals(pair, mapList.get(0));\n+        \n+        assertEquals(0, mapList.remove(pair));\n+        assertEquals(0, mapList.getLength());\n+\n+        newSource.put(\"z\", 24);\n+        assertEquals(1, mapList.getLength());\n+        \n+        newSource.put(\"z\", 24);\n+        assertEquals(1, mapList.getLength());\n+        \n+        newSource.clear();\n+        assertEquals(0, mapList.getLength());\n+    }\n+\n+    private class TestMapListListener implements MapListListener<String, Integer> {\n+        private MapList<String, Integer> mapList;\n+        private Map<String, Integer> previousSource;\n+        private int calls;\n+\n+        @Override\n+        public void sourceChanged(MapList<String, Integer> mapList,\n+            Map<String, Integer> previousSource) {\n+            this.mapList = mapList;\n+            this.previousSource = previousSource;\n+            this.calls++;\n+        }\n+    }\n+\n+    private class TestComparator implements Comparator<Pair<String, Integer>> {\n+        @Override\n+        public int compare(Pair<String, Integer> o1, Pair<String, Integer> o2) {\n+            return o1.key.compareTo(o2.key);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/pivot/raw/9ee479fcbc66fe77821e25823a18f35df317fd30/core/test/org/apache/pivot/collections/test/MapListTest.java",
                "sha": "82dfcf264bca3ae6949d04c2369f40305ea07b13",
                "status": "added"
            }
        ],
        "message": "Added a test for MapList\n\nChanged MapList:\n- source is never null. previously it was easy to generate an NPE\n- changed update so that it doesn't remove before doing a put from the source.  previously update on the map handler was never being called\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@804476 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pivot/commit/de2e283c595c01ad375d6008bb534003445854c0",
        "patched_files": [
            "MapList.java"
        ],
        "repo": "pivot",
        "unit_tests": [
            "MapListTest.java"
        ]
    },
    "pivot_c32c0d3": {
        "bug_id": "pivot_c32c0d3",
        "commit": "https://github.com/apache/pivot/commit/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/pivot/blob/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/CSVSerializer.java?ref=c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca",
                "deletions": 1,
                "filename": "core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "patch": "@@ -397,7 +397,9 @@ private String readValue(Reader reader)\n         }\n \n         // Trim the value\n-        value = value.trim();\n+        if (value != null) {\n+            value = value.trim();\n+        }\n \n         return value;\n     }",
                "raw_url": "https://github.com/apache/pivot/raw/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "sha": "5af9b8856b80ec3ce22bfbf3d7016dd7efb6f24f",
                "status": "modified"
            }
        ],
        "message": "fix potential NPE, value can be null in readValue()\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@957451 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pivot/commit/a7af7295c46fbd8c3772e183ce3e96a8345c1a2f",
        "patched_files": [
            "CSVSerializer.java"
        ],
        "repo": "pivot",
        "unit_tests": [
            "CSVSerializerTest.java"
        ]
    }
}