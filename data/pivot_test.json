{
    "pivot_3f2a9a2": {
        "repo": "pivot",
        "message": "Fix potential NPEs in JSONSerializer; temporarily disable deprecation warnings in build.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@918160 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pivot/commit/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
        "parent": "https://github.com/apache/pivot/commit/cf5f62a024ca7da2674d3f2442988dfe05668f82",
        "bug_id": "pivot_3f2a9a2",
        "file": [
            {
                "sha": "58829fe6830b2f5510ce6bd0e6877b1b158af2d9",
                "filename": "build.xml",
                "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml",
                "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/build.xml?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
                "patch": "@@ -36,12 +36,12 @@ limitations under the License.\n     <property name=\"keystore.passwd\" value=\"apache\"/>\n \n     <!-- Compiler properties -->\n-    <property name=\"compiler.deprecation\" value=\"true\"/>\n+    <property name=\"compiler.deprecation\" value=\"false\"/>\n     <property name=\"compiler.debug\" value=\"false\"/>\n     <property name=\"compiler.target\" value=\"1.6\"/>\n     <property name=\"compiler.encoding\" value=\"UTF-8\"/>\n     <property name=\"compiler.indexJars\" value=\"true\"/>\n-    <property name=\"compiler.arg\" value=\"-Xlint\"/>\n+    <property name=\"compiler.arg\" value=\"-Xlint:-deprecation\"/>\n \n     <!-- Test properties -->\n     <property name=\"test.verbose\" value=\"false\"/>",
                "deletions": 2
            },
            {
                "sha": "1c74f54873393082c43537e738b50873fb664473",
                "filename": "core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java",
                "status": "modified",
                "changes": 15,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/JSONSerializer.java?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e",
                "patch": "@@ -772,7 +772,8 @@ public static Number getNumber(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Short getShort(Object root, String path) {\n-        return getNumber(root, path).shortValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.shortValue();\n     }\n \n     /**\n@@ -784,7 +785,8 @@ public static Short getShort(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Integer getInteger(Object root, String path) {\n-        return getNumber(root, path).intValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.intValue();\n     }\n \n     /**\n@@ -796,7 +798,8 @@ public static Integer getInteger(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Long getLong(Object root, String path) {\n-        return getNumber(root, path).longValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.longValue();\n     }\n \n     /**\n@@ -808,7 +811,8 @@ public static Long getLong(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Float getFloat(Object root, String path) {\n-        return getNumber(root, path).floatValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.floatValue();\n     }\n \n     /**\n@@ -820,7 +824,8 @@ public static Float getFloat(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Double getDouble(Object root, String path) {\n-        return getNumber(root, path).doubleValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.doubleValue();\n     }\n \n     /**",
                "deletions": 5
            }
        ],
        "patched_files": [
            "JSONSerializer.java"
        ],
        "unit_tests": [
            "JSONSerializerTest.java"
        ]
    },
    "pivot_c32c0d3": {
        "repo": "pivot",
        "message": "fix potential NPE, value can be null in readValue()\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@957451 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pivot/commit/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca",
        "parent": "https://github.com/apache/pivot/commit/a7af7295c46fbd8c3772e183ce3e96a8345c1a2f",
        "bug_id": "pivot_c32c0d3",
        "file": [
            {
                "sha": "5af9b8856b80ec3ce22bfbf3d7016dd7efb6f24f",
                "filename": "core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "blob_url": "https://github.com/apache/pivot/blob/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "raw_url": "https://github.com/apache/pivot/raw/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/CSVSerializer.java?ref=c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca",
                "patch": "@@ -397,7 +397,9 @@ private String readValue(Reader reader)\n         }\n \n         // Trim the value\n-        value = value.trim();\n+        if (value != null) {\n+            value = value.trim();\n+        }\n \n         return value;\n     }",
                "deletions": 1
            }
        ],
        "patched_files": [
            "CSVSerializer.java"
        ],
        "unit_tests": [
            "CSVSerializerTest.java"
        ]
    }
}