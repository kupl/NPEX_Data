[
    {
        "repo": "sling-org-apache-sling-jcr-jackrabbit-usermanager",
        "message": "SLING-2067 Added null check to AuthorizablePrivilegesInfo to fix NPE when used in a script that is being rendered for the anonymous user \n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1098439 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-jackrabbit-usermanager/commit/cbdef2844aa13fb93ea9b164f8e8a756f9e2c25c",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-jackrabbit-usermanager/commit/6729df63e29320c06bff97a584118971b41ffb26",
        "bug_id": "sling-org-apache-sling-jcr-jackrabbit-usermanager_1",
        "file": [
            {
                "sha": "f3fc51a0a709caec1607fc20d615568703721f82",
                "filename": "src/main/java/org/apache/sling/jackrabbit/usermanager/impl/AuthorizablePrivilegesInfoImpl.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-jackrabbit-usermanager/blob/cbdef2844aa13fb93ea9b164f8e8a756f9e2c25c/src/main/java/org/apache/sling/jackrabbit/usermanager/impl/AuthorizablePrivilegesInfoImpl.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-jackrabbit-usermanager/raw/cbdef2844aa13fb93ea9b164f8e8a756f9e2c25c/src/main/java/org/apache/sling/jackrabbit/usermanager/impl/AuthorizablePrivilegesInfoImpl.java",
                "status": "modified",
                "changes": 76,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-jackrabbit-usermanager/contents/src/main/java/org/apache/sling/jackrabbit/usermanager/impl/AuthorizablePrivilegesInfoImpl.java?ref=cbdef2844aa13fb93ea9b164f8e8a756f9e2c25c",
                "patch": "@@ -23,6 +23,7 @@\n \n import javax.jcr.RepositoryException;\n import javax.jcr.Session;\n+import javax.servlet.Servlet;\n \n import org.apache.jackrabbit.api.security.user.Authorizable;\n import org.apache.jackrabbit.api.security.user.Group;\n@@ -31,6 +32,9 @@\n import org.apache.sling.commons.osgi.OsgiUtil;\n import org.apache.sling.jackrabbit.usermanager.AuthorizablePrivilegesInfo;\n import org.apache.sling.jcr.base.util.AccessControlUtil;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceReference;\n import org.osgi.service.component.ComponentContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -110,16 +114,18 @@ public boolean canAddGroup(Session jcrSession) {\n \t\t\tUserManager userManager = AccessControlUtil.getUserManager(jcrSession);\n \t\t\tAuthorizable currentUser = userManager.getAuthorizable(jcrSession.getUserID());\n \n-\t\t\tif (((User)currentUser).isAdmin()) {\n-\t\t\t\treturn true; //admin user has full control\n-\t\t\t}\n-\t\t\t\n-\t\t\t//check if the user is a member of the 'Group administrator' group\n-\t\t\tAuthorizable groupAdmin = userManager.getAuthorizable(this.groupAdminGroupName);\n-\t\t\tif (groupAdmin instanceof Group) {\n-\t\t\t\tboolean isMember = ((Group)groupAdmin).isMember(currentUser);\n-\t\t\t\tif (isMember) {\n-\t\t\t\t\treturn true;\n+\t\t\tif (currentUser != null) {\n+\t\t\t\tif (((User)currentUser).isAdmin()) {\n+\t\t\t\t\treturn true; //admin user has full control\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\t//check if the user is a member of the 'Group administrator' group\n+\t\t\t\tAuthorizable groupAdmin = userManager.getAuthorizable(this.groupAdminGroupName);\n+\t\t\t\tif (groupAdmin instanceof Group) {\n+\t\t\t\t\tboolean isMember = ((Group)groupAdmin).isMember(currentUser);\n+\t\t\t\t\tif (isMember) {\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t} catch (RepositoryException e) {\n@@ -133,23 +139,46 @@ public boolean canAddGroup(Session jcrSession) {\n \t */\n \tpublic boolean canAddUser(Session jcrSession) {\n \t\ttry {\n+\t\t\t//if self-registration is enabled, then anyone can create a user\n+\t\t\tif (componentContext != null) {\n+\t\t\t\tString filter = \"(&(sling.servlet.resourceTypes=sling/users)(|(sling.servlet.methods=POST)(sling.servlet.selectors=create)))\";\n+\t\t\t\tBundleContext bundleContext = componentContext.getBundleContext();\n+\t\t\t\tServiceReference[] serviceReferences = bundleContext.getServiceReferences(Servlet.class.getName(), filter);\n+\t\t\t\tif (serviceReferences != null) {\n+\t\t\t\t\tString propName = \"self.registration.enabled\";\n+\t\t\t\t\tfor (ServiceReference serviceReference : serviceReferences) {\n+\t\t\t\t\t\tObject propValue = serviceReference.getProperty(propName);\n+\t\t\t\t\t\tif (propValue != null) {\n+\t\t\t\t\t\t\tboolean selfRegEnabled = Boolean.TRUE.equals(propValue);\n+\t\t\t\t\t\t\tif (selfRegEnabled) {\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\n \t\t\tUserManager userManager = AccessControlUtil.getUserManager(jcrSession);\n \t\t\tAuthorizable currentUser = userManager.getAuthorizable(jcrSession.getUserID());\n-\n-\t\t\tif (((User)currentUser).isAdmin()) {\n-\t\t\t\treturn true; //admin user has full control\n-\t\t\t}\n-\t\t\t\n-\t\t\t//check if the user is a member of the 'User administrator' group\n-\t\t\tAuthorizable userAdmin = userManager.getAuthorizable(this.userAdminGroupName);\n-\t\t\tif (userAdmin instanceof Group) {\n-\t\t\t\tboolean isMember = ((Group)userAdmin).isMember(currentUser);\n-\t\t\t\tif (isMember) {\n-\t\t\t\t\treturn true;\n+\t\t\tif (currentUser != null) {\n+\t\t\t\tif (((User)currentUser).isAdmin()) {\n+\t\t\t\t\treturn true; //admin user has full control\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\t//check if the user is a member of the 'User administrator' group\n+\t\t\t\tAuthorizable userAdmin = userManager.getAuthorizable(this.userAdminGroupName);\n+\t\t\t\tif (userAdmin instanceof Group) {\n+\t\t\t\t\tboolean isMember = ((Group)userAdmin).isMember(currentUser);\n+\t\t\t\t\tif (isMember) {\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t} catch (RepositoryException e) {\n \t\t\tlog.warn(\"Failed to determine if {} can add a new user\", jcrSession.getUserID());\n+\t\t} catch (InvalidSyntaxException e) {\n+\t\t\tlog.warn(\"Failed to determine if {} can add a new user\", jcrSession.getUserID());\n \t\t}\n \t\treturn false;\n \t}\n@@ -276,6 +305,9 @@ public boolean canUpdateProperties(Session jcrSession, String principalId) {\n \n \t// ---------- SCR Integration ----------------------------------------------\n \n+\t//keep track of the bundle context\n+\tprivate ComponentContext componentContext;\n+\n     /**\n      * Called by SCR to activate the component.\n      *\n@@ -288,6 +320,8 @@ protected void activate(ComponentContext componentContext)\n             throws InvalidKeyException, NoSuchAlgorithmException,\n             IllegalStateException, UnsupportedEncodingException {\n \n+    \tthis.componentContext = componentContext;\n+    \t\n         Dictionary<?, ?> properties = componentContext.getProperties();\n \n         this.userAdminGroupName = OsgiUtil.toString(properties.get(PAR_USER_ADMIN_GROUP_NAME),",
                "deletions": 21
            }
        ]
    }
]