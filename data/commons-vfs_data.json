[{"commit": "https://github.com/apache/commons-vfs/commit/48195e4db32269bb93191a6a4dc4587023cf7a4a", "parent": "https://github.com/apache/commons-vfs/commit/2a332980fc22f8fbc5b8a874f0a7576f9f8af56b", "message": "Avoid very unlikely NPE.", "bug_id": "commons-vfs_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-vfs/raw/48195e4db32269bb93191a6a4dc4587023cf7a4a/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java", "blob_url": "https://github.com/apache/commons-vfs/blob/48195e4db32269bb93191a6a4dc4587023cf7a4a/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java", "sha": "e98d58db050c34da56a0962fb8b88f1925df7480", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java?ref=48195e4db32269bb93191a6a4dc4587023cf7a4a", "patch": "@@ -260,7 +260,8 @@ private String dumpThreadSnapshot(final Thread[] threadSnapshot) {\n             sb.append(\"#\");\n             sb.append(iter + 1);\n             sb.append(\": \");\n-            sb.append(thread.getThreadGroup() != null ? thread.getThreadGroup().getName() : \"(null)\");\n+            final ThreadGroup threadGroup = thread.getThreadGroup();\n+            sb.append(threadGroup != null ? threadGroup.getName() : \"(null)\");\n             sb.append(\"\\t\");\n             sb.append(thread.getName());\n             sb.append(\"\\t\");", "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/3286bf48497f3f831f5034569c8d37da1ed6e76f", "parent": "https://github.com/apache/commons-vfs/commit/516f44080f6f8ae0c013c1cd33dbdbf25f8c7911", "message": "[VFS-668] Throw a NPE with a better message when a class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836502 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_2", "file": [{"additions": 16, "raw_url": "https://github.com/apache/commons-vfs/raw/3286bf48497f3f831f5034569c8d37da1ed6e76f/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java", "blob_url": "https://github.com/apache/commons-vfs/blob/3286bf48497f3f831f5034569c8d37da1ed6e76f/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java", "sha": "06ecf39def4165c7002d5826903816c783bac5cd", "changes": 23, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java?ref=3286bf48497f3f831f5034569c8d37da1ed6e76f", "patch": "@@ -22,6 +22,7 @@\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.Enumeration;\n+import java.util.Objects;\n \n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -138,13 +139,11 @@ private ClassLoader findClassLoader() {\n         if (classLoader != null) {\n             return classLoader;\n         }\n-\n         ClassLoader cl = Thread.currentThread().getContextClassLoader();\n-        if (cl == null) {\n-            cl = getClass().getClassLoader();\n+        if (cl != null) {\n+            return cl;\n         }\n-\n-        return cl;\n+        return getValidClassLoader(getClass());\n     }\n \n     protected DefaultFileReplicator createDefaultFileReplicator() {\n@@ -404,6 +403,15 @@ private boolean findClass(final String className) {\n         return schemas.toArray(new String[schemas.size()]);\n     }\n \n+    private ClassLoader getValidClassLoader(final Class<?> clazz) {\n+        return validateClassLoader(clazz.getClassLoader(), clazz);\n+    }\n+\n+    private ClassLoader validateClassLoader(final ClassLoader clazzLoader, final Class<?> clazz) {\n+        return Objects.requireNonNull(clazzLoader, \"The class loader for \" + clazz\n+                + \" is null; some Java implementions use null for the bootstrap class loader.\");\n+    }\n+\n     /**\n      * Creates a provider.\n      */\n@@ -426,7 +434,7 @@ private Object createInstance(final String className) throws FileSystemException\n         try {\n             return findClassLoader().loadClass(className);\n         } catch (final ClassNotFoundException e) {\n-            return getClass().getClassLoader().loadClass(className);\n+            return getValidClassLoader(getClass()).loadClass(className);\n         }\n     }\n \n@@ -439,8 +447,9 @@ private Object createInstance(final String className) throws FileSystemException\n     private Enumeration<URL> loadResources(final String name) throws IOException {\n         Enumeration<URL> res = findClassLoader().getResources(name);\n         if (res == null || !res.hasMoreElements()) {\n-            res = getClass().getClassLoader().getResources(name);\n+            res = getValidClassLoader(getClass()).getResources(name);\n         }\n         return res;\n     }\n+    \n }", "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/3286bf48497f3f831f5034569c8d37da1ed6e76f/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/3286bf48497f3f831f5034569c8d37da1ed6e76f/src/changes/changes.xml", "sha": "cac2865d3b2f4001af1efe1e9dbc8e380270db58", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=3286bf48497f3f831f5034569c8d37da1ed6e76f", "patch": "@@ -80,6 +80,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-667\" dev=\"ggregory\" type=\"fix\">\n         org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n       </action>\n+      <action issue=\"VFS-668\" dev=\"ggregory\" type=\"update\">\n+        Throw a NPE with a better message when a class loader is null.\n+      </action>\n     </release>\n     <release version=\"2.2\" date=\"2017-10-06\" description=\"New features and bug fix release.\">\n       <action issue=\"VFS-642\" dev=\"pschumacher\" type=\"update\" due-to=\"ilangoldfeld\">", "filename": "src/changes/changes.xml"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/38d899e0f288a24173a6c4c5898bb176102ca9b9", "parent": "https://github.com/apache/commons-vfs/commit/3286bf48497f3f831f5034569c8d37da1ed6e76f", "message": "[VFS-669] org.apache.commons.vfs2.util.CombinedResources.loadResources(String) should not throw an NPE for the system class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836503 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_3", "file": [{"additions": 13, "raw_url": "https://github.com/apache/commons-vfs/raw/38d899e0f288a24173a6c4c5898bb176102ca9b9/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/CombinedResources.java", "blob_url": "https://github.com/apache/commons-vfs/blob/38d899e0f288a24173a6c4c5898bb176102ca9b9/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/CombinedResources.java", "sha": "e65b01763b325a1f6bbb02747dcf66c6bfb7e036", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/CombinedResources.java?ref=38d899e0f288a24173a6c4c5898bb176102ca9b9", "patch": "@@ -74,19 +74,21 @@ protected void loadResources(String resourceName) {\n         if (loader == null) {\n             loader = ClassLoader.getSystemClassLoader();\n         }\n-        resourceName = resourceName.replace('.', '/') + \".properties\";\n-        try {\n-            final Enumeration<URL> resources = loader.getResources(resourceName);\n-            while (resources.hasMoreElements()) {\n-                final URL resource = resources.nextElement();\n-                try {\n-                    properties.load(resource.openConnection().getInputStream());\n-                } catch (final IOException ignored) {\n-                    // Ignore\n+        if (loader != null) {\n+            resourceName = resourceName.replace('.', '/') + \".properties\";\n+            try {\n+                final Enumeration<URL> resources = loader.getResources(resourceName);\n+                while (resources.hasMoreElements()) {\n+                    final URL resource = resources.nextElement();\n+                    try {\n+                        properties.load(resource.openConnection().getInputStream());\n+                    } catch (final IOException ignored) {\n+                        // Ignore\n+                    }\n                 }\n+            } catch (final IOException ignored) {\n+                // Ignore\n             }\n-        } catch (final IOException ignored) {\n-            // Ignore\n         }\n     }\n ", "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/util/CombinedResources.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/38d899e0f288a24173a6c4c5898bb176102ca9b9/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/38d899e0f288a24173a6c4c5898bb176102ca9b9/src/changes/changes.xml", "sha": "88fced6ffd4955d352f79b19a1895638bec3f69c", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=38d899e0f288a24173a6c4c5898bb176102ca9b9", "patch": "@@ -83,6 +83,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-668\" dev=\"ggregory\" type=\"update\">\n         Throw a NPE with a better message when a class loader is null.\n       </action>\n+      <action issue=\"VFS-669\" dev=\"ggregory\" type=\"fix\">\n+        org.apache.commons.vfs2.util.CombinedResources.loadResources(String) should not throw an NPE for the system class loader is null.\n+      </action>\n     </release>\n     <release version=\"2.2\" date=\"2017-10-06\" description=\"New features and bug fix release.\">\n       <action issue=\"VFS-642\" dev=\"pschumacher\" type=\"update\" due-to=\"ilangoldfeld\">", "filename": "src/changes/changes.xml"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/ad548a350635141c415930c70ce31d8173592a0f", "parent": "https://github.com/apache/commons-vfs/commit/cd37b90bc7220c5edebce1edebd36433ee454909", "message": "[VFS-667] org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836500 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_4", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/ad548a350635141c415930c70ce31d8173592a0f/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/res/ResourceFileProvider.java", "blob_url": "https://github.com/apache/commons-vfs/blob/ad548a350635141c415930c70ce31d8173592a0f/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/res/ResourceFileProvider.java", "sha": "063c2a4b0b526494a1552275875dbfafbf492c2c", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/res/ResourceFileProvider.java?ref=ad548a350635141c415930c70ce31d8173592a0f", "patch": "@@ -64,6 +64,9 @@ public FileObject findFile(final FileObject baseFile, final String uri, final Fi\n         if (cl == null) {\n             cl = getClass().getClassLoader();\n         }\n+        if (cl == null) {\n+            throw new FileSystemException(\"vfs.provider.url/badly-formed-uri.error\", uri);\n+        }\n         final URL url = cl.getResource(resourceName);\n \n         if (url == null) {", "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/res/ResourceFileProvider.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/ad548a350635141c415930c70ce31d8173592a0f/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/ad548a350635141c415930c70ce31d8173592a0f/src/changes/changes.xml", "sha": "8a9f40fe1bdf765557d45414aeef4872c0cf1a72", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=ad548a350635141c415930c70ce31d8173592a0f", "patch": "@@ -77,6 +77,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-666\" dev=\"ggregory\" type=\"update\">\n         Update Apache Commons Collections from 4.1 to 4.2.\n       </action>\n+      <action issue=\"VFS-667\" dev=\"ggregory\" type=\"fix\">\n+        org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n+      </action>\n     </release>\n     <release version=\"2.2\" date=\"2017-10-06\" description=\"New features and bug fix release.\">\n       <action issue=\"VFS-642\" dev=\"pschumacher\" type=\"update\" due-to=\"ilangoldfeld\">", "filename": "src/changes/changes.xml"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/cd37b90bc7220c5edebce1edebd36433ee454909", "parent": "https://github.com/apache/commons-vfs/commit/14285f15b092abb2f063dd3c3ff51de7039f5c33", "message": "Internal Javadoc related to same issue as [VFS-667]: org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836499 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_5", "file": [{"additions": 5, "raw_url": "https://github.com/apache/commons-vfs/raw/cd37b90bc7220c5edebce1edebd36433ee454909/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java", "blob_url": "https://github.com/apache/commons-vfs/blob/cd37b90bc7220c5edebce1edebd36433ee454909/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java", "sha": "def3fd2d6fd0509118a8146de4390106c9a559f3", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java?ref=cd37b90bc7220c5edebce1edebd36433ee454909", "patch": "@@ -129,6 +129,11 @@ protected void configurePlugins() throws FileSystemException {\n         }\n     }\n \n+    /**\n+     * Returns a class loader or null since some Java implementation is null for the bootstrap class loader.\n+     * \n+     * @return A class loader or null since some Java implementation is null for the bootstrap class loader.\n+     */\n     private ClassLoader findClassLoader() {\n         if (classLoader != null) {\n             return classLoader;", "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/430aff38a3c4428ce43d0f30f259ee0b8b80122e", "parent": "https://github.com/apache/commons-vfs/commit/add2c3098953d0766950e8dc78e3484a46bcde7c", "message": "Looking for an NPE...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1813413 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_6", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-vfs/raw/430aff38a3c4428ce43d0f30f259ee0b8b80122e/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java", "blob_url": "https://github.com/apache/commons-vfs/blob/430aff38a3c4428ce43d0f30f259ee0b8b80122e/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java", "sha": "f3f96a232624b050a0d39b57f74db4f46a40f85d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java?ref=430aff38a3c4428ce43d0f30f259ee0b8b80122e", "patch": "@@ -35,8 +35,8 @@ public void testAbsoluteFileName() throws Exception {\n         // Locate file by absolute file name\n         final String fileName = new File(\"testdir\").getAbsolutePath();\n         DefaultFileSystemManager manager = getManager();\n+        Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\n         try (final FileObject absFile = manager.resolveFile(fileName)) {\n-            Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\n \n             // Locate file by URI\n             final String uri = \"file://\" + fileName.replace(File.separatorChar, '/');", "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/064cecd073953686418d089495eea9d534af9e73", "parent": "https://github.com/apache/commons-vfs/commit/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5", "message": "Looking for an NPE...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1813411 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_7", "file": [{"additions": 8, "raw_url": "https://github.com/apache/commons-vfs/raw/064cecd073953686418d089495eea9d534af9e73/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java", "blob_url": "https://github.com/apache/commons-vfs/blob/064cecd073953686418d089495eea9d534af9e73/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java", "sha": "28ab6542f4f11bf920e2fc866a57027383176c12", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java?ref=064cecd073953686418d089495eea9d534af9e73", "patch": "@@ -19,23 +19,28 @@\n import java.io.File;\n \n import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.impl.DefaultFileSystemManager;\n import org.apache.commons.vfs2.test.AbstractProviderTestCase;\n+import org.junit.Assert;\n \n /**\n  * Additional naming tests for local file system.\n  */\n public class FileNameTests extends AbstractProviderTestCase {\n+    \n     /**\n      * Tests resolution of an absolute file name.\n      */\n     public void testAbsoluteFileName() throws Exception {\n         // Locate file by absolute file name\n         final String fileName = new File(\"testdir\").getAbsolutePath();\n-        final FileObject absFile = getManager().resolveFile(fileName);\n-\n+        DefaultFileSystemManager manager = getManager();\n+        final FileObject absFile = manager.resolveFile(fileName);\n+        Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\n+        \n         // Locate file by URI\n         final String uri = \"file://\" + fileName.replace(File.separatorChar, '/');\n-        final FileObject uriFile = getManager().resolveFile(uri);\n+        final FileObject uriFile = manager.resolveFile(uri);\n \n         assertSame(\"file object\", absFile, uriFile);\n     }", "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/FileNameTests.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5", "parent": "https://github.com/apache/commons-vfs/commit/cfdb66c12ca5dedebadc672601139e8ecf1dc265", "message": "Looking for an NPE...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1813410 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_8", "file": [{"additions": 14, "raw_url": "https://github.com/apache/commons-vfs/raw/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/WindowsFileNameTests.java", "blob_url": "https://github.com/apache/commons-vfs/blob/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/WindowsFileNameTests.java", "sha": "2f6927d819205b58246240842a4da94b2b6cbf96", "changes": 18, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/WindowsFileNameTests.java?ref=222061e1a92d6abfaabfc9406cd655a5ca8ea2e5", "patch": "@@ -19,8 +19,10 @@\n import org.apache.commons.vfs2.FileName;\r\n import org.apache.commons.vfs2.FileObject;\r\n import org.apache.commons.vfs2.FileSystemException;\r\n+import org.apache.commons.vfs2.impl.DefaultFileSystemManager;\r\n import org.apache.commons.vfs2.provider.local.WindowsFileName;\r\n import org.apache.commons.vfs2.test.AbstractProviderTestCase;\r\n+import org.junit.Assert;\r\n \r\n /**\r\n  * Additional naming tests for local file system.\r\n@@ -33,7 +35,9 @@ public void testWindowsRoots() throws Exception {\n         final String[] tests = new String[] { \"file:///C:/\", \"file://C:/\", \"file:/C:/\", \"file:C:/\" };\r\n \r\n         for (final String name : tests) {\r\n-            final FileName fn = getManager().resolveFile(name).getName();\r\n+            final DefaultFileSystemManager manager = getManager();\r\n+            Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\r\n+            final FileName fn = manager.resolveFile(name).getName();\r\n \r\n             // the following tests work for Windows file names only\r\n             assertSame(WindowsFileName.class, fn.getClass());\r\n@@ -57,7 +61,9 @@ public void testWindowsWrongRoots() throws Exception {\n \r\n         for (final String name : tests) {\r\n             try {\r\n-                final FileName fn = getManager().resolveFile(name).getName();\r\n+                final DefaultFileSystemManager manager = getManager();\r\n+                Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\r\n+                final FileName fn = manager.resolveFile(name).getName();\r\n                 fail(\"should not accept root \" + name);\r\n             } catch (final FileSystemException ex) {\r\n                 assertEquals(\"vfs.provider/invalid-absolute-uri.error\", ex.getCode());\r\n@@ -69,7 +75,9 @@ public void testWindowsWrongRoots() throws Exception {\n     public void testWindowsFilenameUNCStartError() throws Exception {\r\n         try {\r\n             final String FILE = \"file://///\";\r\n-            final FileObject fo = getManager().resolveFile(FILE);\r\n+            final DefaultFileSystemManager manager = getManager();\r\n+            Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\r\n+            final FileObject fo = manager.resolveFile(FILE);\r\n             fail(\"Windows File Parser should not allow \" + FILE + \" \" + fo);\r\n         } catch (FileSystemException ex) {\r\n             assertEquals(\"Exception code\", \"vfs.provider/invalid-absolute-uri.error\", ex.getCode());\r\n@@ -82,7 +90,9 @@ public void testWindowsFilenameParserError() throws Exception {\n         // check VFS-338 with 2+4 slashes we want a dedicated error\r\n         try {\r\n             final String FILE = \"file://////\";\r\n-            final FileObject fo = getManager().resolveFile(FILE);\r\n+            final DefaultFileSystemManager manager = getManager();\r\n+            Assert.assertNotNull(\"Unexpected null manager for test \" + this, manager);\r\n+            final FileObject fo = manager.resolveFile(FILE);\r\n             fail(\"Windows File Parser should not allow \" + FILE + \" \" + fo);\r\n         } catch (FileSystemException ex) {\r\n             assertEquals(\"Exception code\", \"vfs.provider/invalid-absolute-uri.error\", ex.getCode());\r", "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/local/test/WindowsFileNameTests.java"}, {"additions": 7, "raw_url": "https://github.com/apache/commons-vfs/raw/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractProviderTestCase.java", "blob_url": "https://github.com/apache/commons-vfs/blob/222061e1a92d6abfaabfc9406cd655a5ca8ea2e5/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractProviderTestCase.java", "sha": "be951f5760ba2fe87ef0b7d9dbfbcc0a8ea7c52c", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractProviderTestCase.java?ref=222061e1a92d6abfaabfc9406cd655a5ca8ea2e5", "patch": "@@ -346,4 +346,11 @@ protected void runTest() {\n             }\n         };\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"AbstractProviderTestCase [baseFolder=\" + baseFolder + \", readFolder=\" + readFolder + \", writeFolder=\"\n+                + writeFolder + \", manager=\" + manager + \", providerConfig=\" + providerConfig + \", method=\" + method\n+                + \", addEmptyDir=\" + addEmptyDir + \"]\";\n+    }\n }", "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractProviderTestCase.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/0e681a785066d2bbecaed0deb9366586d156ca49", "parent": "https://github.com/apache/commons-vfs/commit/4b9ef61dfe2b904af86a09be6d5dbe77482ba32c", "message": "[VFS-427][HTTP] NPE on HttpFileObject.getContent().getContentInfo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1362235 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_9", "file": [{"additions": 14, "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java", "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java", "sha": "3c6cfcfdfc18563fbecd3b8f8d27105e616d6b15", "changes": 17, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49", "patch": "@@ -16,8 +16,11 @@\n  */\n package org.apache.commons.vfs2.provider.http;\n \n+import java.io.IOException;\n+\n import org.apache.commons.httpclient.Header;\n import org.apache.commons.httpclient.HeaderElement;\n+import org.apache.commons.httpclient.methods.HeadMethod;\n import org.apache.commons.vfs2.FileContent;\n import org.apache.commons.vfs2.FileContentInfo;\n import org.apache.commons.vfs2.FileContentInfoFactory;\n@@ -26,7 +29,7 @@\n import org.apache.commons.vfs2.util.FileObjectUtils;\n \n /**\n- * Creates the FileContentInfo.\n+ * Creates FileContentInfo instances for HTTP.\n  */\n public class HttpFileContentInfoFactory implements FileContentInfoFactory\n {\n@@ -38,7 +41,15 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio\n         String contentType = null;\n         String contentEncoding = null;\n \n-        Header header = httpFile.getHeadMethod().getResponseHeader(\"content-type\");\n+        HeadMethod headMethod;\n+        try\n+        {\n+            headMethod = httpFile.getHeadMethod();\n+        } catch (IOException e)\n+        {\n+            throw new FileSystemException(e);\n+        }\n+        Header header = headMethod.getResponseHeader(\"content-type\");\n         if (header != null)\n         {\n             HeaderElement[] element = header.getElements();\n@@ -48,7 +59,7 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio\n             }\n         }\n \n-        contentEncoding = httpFile.getHeadMethod().getResponseCharSet();\n+        contentEncoding = headMethod.getResponseCharSet();\n \n         return new DefaultFileContentInfo(contentType, contentEncoding);\n     }", "filename": "core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java"}, {"additions": 10, "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java", "sha": "c8b044bb5fdd7d2a6bd74b03a8f95f345328cb85", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49", "patch": "@@ -74,11 +74,7 @@ protected void doDetach() throws Exception\n     protected FileType doGetType() throws Exception\n     {\n         // Use the HEAD method to probe the file.\n-        method = new HeadMethod();\n-        setupMethod(method);\n-        final HttpClient client = fileSystem.getClient();\n-        final int status = client.executeMethod(method);\n-        method.releaseConnection();\n+        final int status = this.getHeadMethod().getStatusCode();\n         if (status == HttpURLConnection.HTTP_OK)\n         {\n             return FileType.FILE;\n@@ -216,8 +212,16 @@ protected FileContentInfoFactory getFileContentInfoFactory()\n         return new HttpFileContentInfoFactory();\n     }\n \n-    HeadMethod getHeadMethod()\n+    HeadMethod getHeadMethod() throws IOException\n     {\n+        if (method != null) {\n+            return method;\n+        }\n+        method = new HeadMethod();\n+        setupMethod(method);\n+        final HttpClient client = fileSystem.getClient();\n+        client.executeMethod(method);\n+        method.releaseConnection();\n         return method;\n     }\n ", "filename": "core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java"}, {"additions": 35, "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java", "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java", "sha": "7c1c4c5d91c9905baa4c90ec0417de5a78d9100f", "changes": 35, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49", "patch": "@@ -0,0 +1,35 @@\n+package org.apache.commons.vfs2.provider.http.test;\n+\n+import org.apache.commons.vfs2.FileContent;\n+import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.FileSystemException;\n+import org.apache.commons.vfs2.FileSystemManager;\n+import org.apache.commons.vfs2.VFS;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()\n+ * \n+ * @since 2.1\n+ */\n+public class GetContentInfoFunctionalTest\n+{\n+\n+    /**\n+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().\n+     * \n+     * @throws FileSystemException\n+     *             thrown when the getContentInfo API fails.\n+     */\n+    @Test\n+    public void testGoogle() throws FileSystemException\n+    {\n+        final FileSystemManager fsManager = VFS.getManager();\n+        final FileObject fo = fsManager.resolveFile(\"http://www.google.com/images/logos/ps_logo2.png\");\n+        final FileContent content = fo.getContent();\n+        Assert.assertNotNull(content);\n+        // Used to NPE before fix:\n+        content.getContentInfo();\n+    }\n+}", "filename": "core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java"}, {"additions": 35, "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java", "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java", "sha": "5b9ca1388be1231b1917cfadad52c8e9989819ba", "changes": 35, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49", "patch": "@@ -0,0 +1,35 @@\n+package org.apache.commons.vfs2.provider.https.test;\n+\n+import org.apache.commons.vfs2.FileContent;\n+import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.FileSystemException;\n+import org.apache.commons.vfs2.FileSystemManager;\n+import org.apache.commons.vfs2.VFS;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()\n+ * \n+ * @since 2.1\n+ */\n+public class GetContentInfoFunctionalTest\n+{\n+\n+    /**\n+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().\n+     * \n+     * @throws FileSystemException\n+     *             thrown when the getContentInfo API fails.\n+     */\n+    @Test\n+    public void testGoogle() throws FileSystemException\n+    {\n+        final FileSystemManager fsManager = VFS.getManager();\n+        final FileObject fo = fsManager.resolveFile(\"https://www.google.com/images/logos/ps_logo2.png\");\n+        final FileContent content = fo.getContent();\n+        Assert.assertNotNull(content);\n+        // Used to NPE before fix:\n+        content.getContentInfo();\n+    }\n+}", "filename": "core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java"}, {"additions": 4, "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/src/changes/changes.xml", "sha": "4effa43c6956f27c2f2ebd1c756fef9ba8ecccc8", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=0e681a785066d2bbecaed0deb9366586d156ca49", "patch": "@@ -23,6 +23,9 @@\n \n   <body>\n     <release version=\"2.1\" date=\"TBD\" description=\"New features and bug fix release.\">\n+      <action issue=\"VFS-427\" dev=\"ggregory\" type=\"add\" due-to=\"awelynant\">\n+        [HTTP] NPE on HttpFileObject.getContent().getContentInfo().\n+      </action>\n       <action issue=\"VFS-405\" dev=\"ggregory\" type=\"add\" due-to=\"dwaszak\">\n         Get/set the file permissions.\n       </action>\n@@ -108,7 +111,7 @@\n         [RAM] Reading a RAM FileSystem file fails because it never returns EOF -1.\n       </action>\n       <action issue=\"VFS-404\" dev=\"ggregory\" type=\"update\">\n-        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1\n+        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1.\n       </action>\n       <action issue=\"VFS-402\" dev=\"ggregory\" type=\"update\">\n         [WebDAV] Update Apache Jackrabbit 1.5.2 to 1.6.5.", "filename": "src/changes/changes.xml"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/74b3a33258b529f04ba312b9f42700de75665e1a", "parent": "https://github.com/apache/commons-vfs/commit/1f7b7bad555c4bf2b05cd6406c1c60df1eb7b26c", "message": "[VFS-327] UriParser.canonicalizePath possible NPE for filenameParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1339277 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-vfs/raw/74b3a33258b529f04ba312b9f42700de75665e1a/core/src/main/java/org/apache/commons/vfs2/provider/UriParser.java", "blob_url": "https://github.com/apache/commons-vfs/blob/74b3a33258b529f04ba312b9f42700de75665e1a/core/src/main/java/org/apache/commons/vfs2/provider/UriParser.java", "sha": "d3695c8d498b8d694ad2d7f1a586c08f41ad3f7b", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/UriParser.java?ref=74b3a33258b529f04ba312b9f42700de75665e1a", "patch": "@@ -490,8 +490,7 @@ public static void canonicalizePath(StringBuilder buffer, int offset,\n                 }\n                 char value = (char) (dig1 << BITS_IN_HALF_BYTE | dig2);\n \n-                boolean match = value == '%'\n-                        || (fileNameParser != null && fileNameParser.encodeCharacter(value));\n+                boolean match = value == '%' || fileNameParser.encodeCharacter(value);\n \n                 if (match)\n                 {", "filename": "core/src/main/java/org/apache/commons/vfs2/provider/UriParser.java"}, {"additions": 11, "raw_url": "https://github.com/apache/commons-vfs/raw/74b3a33258b529f04ba312b9f42700de75665e1a/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/74b3a33258b529f04ba312b9f42700de75665e1a/src/changes/changes.xml", "sha": "a56dbfea06d0455850fb83e0fdc8e6a2333e3805", "changes": 19, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=74b3a33258b529f04ba312b9f42700de75665e1a", "patch": "@@ -23,34 +23,37 @@\n \n   <body>\n     <release version=\"2.1\" date=\"TBD\" description=\"\">\n-      <action issue=\"VFS-353\" dev=\"ggregory\" type=\"update\" due-to=\"bergander\">\n+      <action issue=\"VFS-327\" dev=\"ggregory\" type=\"update\" due-to=\"sebb@apache.org\">\n+        UriParser.canonicalizePath possible NPE for filenameParser.\n+      </action>\n+      <action issue=\"VFS-353\" dev=\"ggregory\" type=\"fix\" due-to=\"bergander\">\n         [FTP] Client should call logout before disconnecting.\n       </action>\n-      <action issue=\"VFS-408\" dev=\"ggregory\" type=\"update\" due-to=\"anilm2@yahoo.com\">\n+      <action issue=\"VFS-408\" dev=\"ggregory\" type=\"fix\" due-to=\"anilm2@yahoo.com\">\n         CompressedFileFileObject Exception thrown when container file has no extension.\n       </action>\n       <action issue=\"VFS-400\" dev=\"ggregory\" type=\"add\">\n         Add a FileSelector based on regular expressions.\n       </action>\n-      <action issue=\"VFS-258\" dev=\"ggregory\" type=\"update\" due-to=\"mzawirski\">\n+      <action issue=\"VFS-258\" dev=\"ggregory\" type=\"fix\" due-to=\"mzawirski\">\n         [SFTP][RAM] Unsafe casting to AbstractFileObject subclasses in doRename().\n       </action>\n-      <action issue=\"VFS-254\" dev=\"ggregory\" type=\"update\" due-to=\"mzawirski\">\n+      <action issue=\"VFS-254\" dev=\"ggregory\" type=\"add\" due-to=\"mzawirski\">\n         Let FileObject and FileContent extend java.io.Closeable.\n       </action>\n-      <action issue=\"VFS-413\" dev=\"ggregory\" type=\"update\" due-to=\"polivenok\">\n+      <action issue=\"VFS-413\" dev=\"ggregory\" type=\"fix\" due-to=\"polivenok\">\n         [FTP] No support for FTP servers with non Latin-1 control encoding.\n       </action>\n-      <action issue=\"VFS-252\" dev=\"ggregory\" type=\"update\">\n+      <action issue=\"VFS-252\" dev=\"ggregory\" type=\"add\">\n         [SMB] SmbFileObject does not support setLastModifiedTime while jcifs supports it.\n       </action>\n-      <action issue=\"VFS-200\" dev=\"ggregory\" type=\"update\">\n+      <action issue=\"VFS-200\" dev=\"ggregory\" type=\"fix\">\n         [SFTP] Failure when files are very large.\n       </action>\n       <action issue=\"VFS-416\" dev=\"ggregory\" type=\"update\">\n         [SFTP] Update Jsch to version 0.1.48 from 0.1.47.\n       </action>\n-      <action issue=\"VFS-296\" dev=\"ggregory\" type=\"add\" due-to=\"andreasp\">\n+      <action issue=\"VFS-296\" dev=\"ggregory\" type=\"fix\" due-to=\"andreasp\">\n         [FTP] FTP socket timeout setting doesn't work if connect hangs.\n       </action>\n       <action issue=\"VFS-313\" dev=\"ggregory\" type=\"add\" due-to=\"bdavis@saintandreas.org\">", "filename": "src/changes/changes.xml"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/40bd76909735bbadbb0e29c6b3a2ceda4b30e123", "parent": "https://github.com/apache/commons-vfs/commit/be3356c5146ad904d86ab4e80bc2529795961808", "message": "Simplify code and avoid potential NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1038094 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-vfs/raw/40bd76909735bbadbb0e29c6b3a2ceda4b30e123/core/src/main/java/org/apache/commons/vfs2/provider/tar/TarInputStream.java", "blob_url": "https://github.com/apache/commons-vfs/blob/40bd76909735bbadbb0e29c6b3a2ceda4b30e123/core/src/main/java/org/apache/commons/vfs2/provider/tar/TarInputStream.java", "sha": "c8e9eef58235fa9b70e1915e0e7e07533eed4ac2", "changes": 5, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/tar/TarInputStream.java?ref=40bd76909735bbadbb0e29c6b3a2ceda4b30e123", "patch": "@@ -144,6 +144,7 @@ public TarEntry getNextEntry() throws IOException\n                 debug(\"READ NULL RECORD\");\n             }\n             hasHitEOF = true;\n+            currEntry = null;\n         }\n         else if (buffer.isEOFRecord(headerBuf))\n         {\n@@ -152,10 +153,6 @@ else if (buffer.isEOFRecord(headerBuf))\n                 debug(\"READ EOF RECORD\");\n             }\n             hasHitEOF = true;\n-        }\n-\n-        if (hasHitEOF)\n-        {\n             currEntry = null;\n         }\n         else", "filename": "core/src/main/java/org/apache/commons/vfs2/provider/tar/TarInputStream.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/e2f1604cedef626835fc7ab1c282005cb2874d25", "parent": "https://github.com/apache/commons-vfs/commit/fe3a4ece1438845504c67584da3a7b36fdb5372f", "message": "Fix possible NPE / ClassCastException in RamFileData.equals()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@755317 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_12", "file": [{"additions": 6, "raw_url": "https://github.com/apache/commons-vfs/raw/e2f1604cedef626835fc7ab1c282005cb2874d25/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java", "blob_url": "https://github.com/apache/commons-vfs/blob/e2f1604cedef626835fc7ab1c282005cb2874d25/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java", "sha": "8089b841f45af3fd970f6c900d637ff583de13a6", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java?ref=e2f1604cedef626835fc7ab1c282005cb2874d25", "patch": "@@ -222,6 +222,12 @@ Collection getChildren()\n \t */\n \tpublic boolean equals(Object o)\n \t{\n+\t    if (this == o) {\n+\t        return true;\n+\t    }\n+\t    if (!(o instanceof RamFileData)){\n+\t        return false;\n+\t    }\n \t\tRamFileData data = (RamFileData) o;\n \t\treturn this.getName().equals(data.getName());\n \t}", "filename": "core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/c435354f3e1e8753abcdc6156e16d0a2c6b179da", "parent": "https://github.com/apache/commons-vfs/commit/d57060f6a7a345be121bb2f3b17bcb7a5292d87b", "message": "VFS-113: avoid npe in multithreaded environments\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@520072 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_13", "file": [{"additions": 18, "raw_url": "https://github.com/apache/commons-vfs/raw/c435354f3e1e8753abcdc6156e16d0a2c6b179da/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/c435354f3e1e8753abcdc6156e16d0a2c6b179da/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java", "sha": "9c5c1a939571cee8c939f1964f1c61c85c178837", "changes": 32, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java?ref=c435354f3e1e8753abcdc6156e16d0a2c6b179da", "patch": "@@ -372,23 +372,27 @@ InputStream getInputStream(long filePointer) throws IOException\n \t */\n \tprotected InputStream doGetInputStream() throws Exception\n \t{\n-\t\tfinal ChannelSftp channel = fileSystem.getChannel();\n-\t\ttry\n+\t\t// VFS-113: avoid npe\n+\t\tsynchronized(fileSystem)\n \t\t{\n-\t\t\t// return channel.get(getName().getPath());\n-\t\t\t// hmmm - using the in memory method is soooo much faster ...\n+\t\t\tfinal ChannelSftp channel = fileSystem.getChannel();\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\t// return channel.get(getName().getPath());\n+\t\t\t\t// hmmm - using the in memory method is soooo much faster ...\n \n-\t\t\t// TODO - Don't read the entire file into memory. Use the\n-\t\t\t// stream-based methods on ChannelSftp once they work properly\n-\t\t\tfinal ByteArrayOutputStream outstr = new ByteArrayOutputStream();\n-\t\t\tchannel.get(relPath, outstr);\n-\t\t\toutstr.close();\n-\t\t\treturn new ByteArrayInputStream(outstr.toByteArray());\n+\t\t\t\t// TODO - Don't read the entire file into memory. Use the\n+\t\t\t\t// stream-based methods on ChannelSftp once they work properly\n+\t\t\t\tfinal ByteArrayOutputStream outstr = new ByteArrayOutputStream();\n+\t\t\t\tchannel.get(relPath, outstr);\n+\t\t\t\toutstr.close();\n+\t\t\t\treturn new ByteArrayInputStream(outstr.toByteArray());\n \n-\t\t}\n-\t\tfinally\n-\t\t{\n-\t\t\tfileSystem.putChannel(channel);\n+\t\t\t}\n+\t\t\tfinally\n+\t\t\t{\n+\t\t\t\tfileSystem.putChannel(channel);\n+\t\t\t}\n \t\t}\n \t}\n ", "filename": "core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/38f57de3a6f3c443e2256a643f9a8263d74ee724", "parent": "https://github.com/apache/commons-vfs/commit/62a50e90d2cdc7a3ce7e44d66f6664094ab05f8e", "message": "avoid npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@497043 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_14", "file": [{"additions": 6, "raw_url": "https://github.com/apache/commons-vfs/raw/38f57de3a6f3c443e2256a643f9a8263d74ee724/sandbox/src/main/java/org/apache/commons/vfs/provider/mime/MimeFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/38f57de3a6f3c443e2256a643f9a8263d74ee724/sandbox/src/main/java/org/apache/commons/vfs/provider/mime/MimeFileObject.java", "sha": "120239f62142a57a6d1a6c12b577bd6778bc3501", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/sandbox/src/main/java/org/apache/commons/vfs/provider/mime/MimeFileObject.java?ref=38f57de3a6f3c443e2256a643f9a8263d74ee724", "patch": "@@ -22,6 +22,7 @@\n import org.apache.commons.vfs.FileSystemException;\n import org.apache.commons.vfs.FileType;\n import org.apache.commons.vfs.NameScope;\n+import org.apache.commons.vfs.VFS;\n import org.apache.commons.vfs.provider.AbstractFileObject;\n import org.apache.commons.vfs.provider.AbstractFileSystem;\n import org.apache.commons.vfs.provider.UriParser;\n@@ -34,6 +35,7 @@\n import javax.mail.internet.MimeMultipart;\n import java.io.ByteArrayInputStream;\n import java.io.InputStream;\n+import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Enumeration;\n@@ -161,7 +163,6 @@ protected FileType doGetType() throws Exception\n \t\t\tif (container instanceof Multipart)\n \t\t\t{\n \t\t\t\tMultipart multipart = (Multipart) container;\n-\t\t\t\tvfs = new ArrayList(multipart.getCount());\n \n \t\t\t\tfor (int i = 0; i<multipart.getCount(); i++)\n \t\t\t\t{\n@@ -243,6 +244,10 @@ protected InputStream doGetInputStream() throws Exception\n \t\t\t// deliver the preamble as the only content\n \n \t\t\tString preamble = ((MimeMultipart) part.getContent()).getPreamble();\n+\t\t\tif (preamble == null)\n+\t\t\t{\n+\t\t\t\treturn new ByteArrayInputStream(new byte[]{});\n+\t\t\t}\n \t\t\treturn new ByteArrayInputStream(preamble.getBytes(MimeFileSystem.PREAMBLE_CHARSET));\n \t\t}\n ", "filename": "sandbox/src/main/java/org/apache/commons/vfs/provider/mime/MimeFileObject.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/70abf1063461a6eb4af872387f79ac07abb7c6e1", "parent": "https://github.com/apache/commons-vfs/commit/9fc99ec59cd3cc24d7ffce8ed562cdbf87c71e2a", "message": "VFS-93: fixed NPE with urls without password\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@453502 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_15", "file": [{"additions": 5, "raw_url": "https://github.com/apache/commons-vfs/raw/70abf1063461a6eb4af872387f79ac07abb7c6e1/src/java/org/apache/commons/vfs/provider/sftp/SftpClientFactory.java", "blob_url": "https://github.com/apache/commons-vfs/blob/70abf1063461a6eb4af872387f79ac07abb7c6e1/src/java/org/apache/commons/vfs/provider/sftp/SftpClientFactory.java", "sha": "772da2b5677acc11a87191e3bad3239b568ccb48", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/sftp/SftpClientFactory.java?ref=70abf1063461a6eb4af872387f79ac07abb7c6e1", "patch": "@@ -131,14 +131,17 @@ public static Session createConnection(String hostname, int port, char[] usernam\n             session = jsch.getSession(new String(username),\n                     hostname,\n                     port);\n-            session.setPassword(new String(password));\n+            if (password != null)\n+            {\n+                session.setPassword(new String(password));\n+            }\n \n             Integer timeout = SftpFileSystemConfigBuilder.getInstance().getTimeout(fileSystemOptions);\n             if (timeout != null)\n             {\n             \tsession.setTimeout(timeout.intValue());\n             }\n-            \n+\n             UserInfo userInfo = SftpFileSystemConfigBuilder.getInstance().getUserInfo(fileSystemOptions);\n             if (userInfo != null)\n             {", "filename": "src/java/org/apache/commons/vfs/provider/sftp/SftpClientFactory.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/2e5b6958527e6fd08068655f60a586fa9572b63c", "parent": "https://github.com/apache/commons-vfs/commit/c0b5397ac81e327aaa81d5bc41e508ecd8ba7f18", "message": "NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/vfs/trunk@148066 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_16", "file": [{"additions": 9, "raw_url": "https://github.com/apache/commons-vfs/raw/2e5b6958527e6fd08068655f60a586fa9572b63c/src/java/org/apache/commons/vfs/util/Messages.java", "blob_url": "https://github.com/apache/commons-vfs/blob/2e5b6958527e6fd08068655f60a586fa9572b63c/src/java/org/apache/commons/vfs/util/Messages.java", "sha": "9d2079370a0b14573a2435de38ca53b5e7e91d79", "changes": 13, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/util/Messages.java?ref=2e5b6958527e6fd08068655f60a586fa9572b63c", "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 2002, 2003,2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -25,7 +25,7 @@\n  * Formats messages.\n  *\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n- * @version $Revision: 1.10 $ $Date: 2004/05/10 20:09:50 $\n+ * @version $Revision: 1.11 $ $Date: 2004/05/26 08:21:29 $\n  */\n public class Messages\n {\n@@ -73,6 +73,11 @@ public static String getString(final String code, final Object[] params)\n     {\n         try\n         {\n+            if (code == null)\n+            {\n+                return null;\n+            }\n+\n             final MessageFormat msg = findMessage(code);\n             return msg.format(params);\n         }", "filename": "src/java/org/apache/commons/vfs/util/Messages.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/360262fbff630e47e6b9ce9ae96c56818d7f4efc", "parent": "https://github.com/apache/commons-vfs/commit/160d5b5df6edd218fffa8ba717a7c798f5e63200", "message": "Evaluate thread snapshot after tearDown. Do not wipe fTest, it results in a NPE for any filing assertion later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1452354 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_17", "file": [{"additions": 31, "raw_url": "https://github.com/apache/commons-vfs/raw/360262fbff630e47e6b9ce9ae96c56818d7f4efc/core/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java", "blob_url": "https://github.com/apache/commons-vfs/blob/360262fbff630e47e6b9ce9ae96c56818d7f4efc/core/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java", "sha": "cf23fdc1976e550b94dd3dd8bc087168720a6f36", "changes": 40, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java?ref=360262fbff630e47e6b9ce9ae96c56818d7f4efc", "patch": "@@ -24,6 +24,9 @@\n import java.util.Enumeration;\n import java.util.List;\n \n+import junit.framework.Protectable;\n+import junit.framework.TestResult;\n+\n import junit.extensions.TestSetup;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n@@ -136,6 +139,20 @@ public void addTests(final Class<?> testClass) throws Exception\n         }\n     }\n \n+    @Override\n+    public void run(final TestResult result) {\n+        Protectable p = new Protectable() {\n+            @Override\n+            public void protect() throws Exception {\n+                setUp();\n+                basicRun(result);\n+                tearDown();\n+                validateThreadSnapshot();\n+            }\n+        };\n+        result.runProtected(this, p);\n+    }\n+\n     @Override\n     protected void setUp() throws Exception\n     {\n@@ -195,7 +212,6 @@ protected void tearDown() throws Exception\n         writeFolder = null;\n         baseFolder = null;\n         testSuite = null;\n-        fTest = null;\n \n         // force the SoftRefFilesChache to free all files\n         System.gc();\n@@ -208,8 +224,16 @@ protected void tearDown() throws Exception\n         Thread.sleep(1000);\n \n         manager.freeUnusedResources();\n-        endThreadSnapshot = createThreadSnapshot();\n+        manager.close();\n \n+        // Make sure temp directory is empty or gone\n+        checkTempDir(\"Temp dir not empty after test\");\n+    }\n+\n+    private void validateThreadSnapshot()\n+    {\n+        endThreadSnapshot = createThreadSnapshot();\n+    \n         final Thread[] diffThreadSnapshot = diffThreadSnapshot(startThreadSnapshot, endThreadSnapshot);\n         if (diffThreadSnapshot.length > 0)\n         {\n@@ -229,11 +253,6 @@ protected void tearDown() throws Exception\n             // }\n         }\n         // System.in.read();\n-\n-        manager.close();\n-\n-        // Make sure temp directory is empty or gone\n-        checkTempDir(\"Temp dir not empty after test\");\n     }\n \n     /**\n@@ -266,18 +285,21 @@ private String dumpThreadSnapshot(final Thread[] threadSnapshot)\n         for (int iter = 0; iter < threadSnapshot.length; iter++)\n         {\n             final Thread thread = threadSnapshot[iter];\n-            if (thread == null)\n+            if (thread == null || !thread.isAlive())\n             {\n                 continue;\n             }\n \n             sb.append(\"#\");\n             sb.append(iter + 1);\n             sb.append(\": \");\n-            sb.append(thread.getThreadGroup().getName());\n+            sb.append(thread.getThreadGroup() != null ? \n+                thread.getThreadGroup().getName() : \"(null)\");\n             sb.append(\"\\t\");\n             sb.append(thread.getName());\n             sb.append(\"\\t\");\n+            sb.append(thread.getState());\n+            sb.append(\"\\t\");\n             if (thread.isDaemon())\n             {\n                 sb.append(\"daemon\");", "filename": "core/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181", "parent": "https://github.com/apache/commons-vfs/commit/9a33b3e37735dfa34b01b1a82a017c891f43ebb1", "message": "Test getContent() and getContent().getContentInfo() in isolation for VFS-427: NPE on HttpFileObject.getContent().getContentInfo(). No issue yet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1360518 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_18", "file": [{"additions": 23, "raw_url": "https://github.com/apache/commons-vfs/raw/6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java", "blob_url": "https://github.com/apache/commons-vfs/blob/6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java", "sha": "37de6039f7b699c6c6460f58df6b8bcc701d3b50", "changes": 28, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java?ref=6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181", "patch": "@@ -19,10 +19,14 @@\n import java.io.File;\n import java.io.IOException;\n \n+import junit.framework.Assert;\n import junit.framework.Test;\n \n+import org.apache.commons.vfs2.FileContent;\n import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.FileSystemException;\n import org.apache.commons.vfs2.FileSystemManager;\n+import org.apache.commons.vfs2.VFS;\n import org.apache.commons.vfs2.impl.DefaultFileSystemManager;\n import org.apache.commons.vfs2.provider.http.HttpFileProvider;\n import org.apache.commons.vfs2.test.AbstractProviderTestConfig;\n@@ -32,7 +36,7 @@\n \n /**\n  * Test cases for the HTTP provider.\n- *\n+ * \n  */\n public class HttpProviderTestCase extends AbstractProviderTestConfig\n {\n@@ -54,7 +58,7 @@ private static String getSystemTestUriOverride()\n \n     /**\n      * Creates and starts an embedded Apache HTTP Server (HttpComponents).\n-     *\n+     * \n      * @throws Exception\n      */\n     private static void setUpClass() throws Exception\n@@ -68,7 +72,7 @@ private static void setUpClass() throws Exception\n \n     /**\n      * Creates a new test suite.\n-     *\n+     * \n      * @return a new test suite.\n      * @throws Exception\n      *             Thrown when the suite cannot be constructed.\n@@ -98,7 +102,7 @@ protected void tearDown() throws Exception\n \n     /**\n      * Stops the embedded Apache HTTP Server.\n-     *\n+     * \n      * @throws IOException\n      */\n     private static void tearDownClass() throws IOException\n@@ -111,7 +115,7 @@ private static void tearDownClass() throws IOException\n \n     /**\n      * Builds a new test case.\n-     *\n+     * \n      * @throws IOException\n      *             Thrown if a free local socket port cannot be found.\n      */\n@@ -144,4 +148,18 @@ public void prepare(final DefaultFileSystemManager manager) throws Exception\n     {\n         manager.addProvider(\"http\", new HttpFileProvider());\n     }\n+\n+    public void testGetContent() throws FileSystemException\n+    {\n+        final FileObject file = VFS.getManager().resolveFile(ConnectionUri + \"/read-tests/file1.txt\");\n+        Assert.assertNotNull(file.getContent());\n+    }\n+\n+    public void testGetContentInfo() throws FileSystemException\n+    {\n+        final FileObject file = VFS.getManager().resolveFile(ConnectionUri + \"/read-tests/file1.txt\");\n+        final FileContent content = file.getContent();\n+        Assert.assertNotNull(content);\n+        Assert.assertNotNull(content.getContentInfo());\n+    }\n }", "filename": "core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java"}, {"additions": 18, "raw_url": "https://github.com/apache/commons-vfs/raw/6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java", "blob_url": "https://github.com/apache/commons-vfs/blob/6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java", "sha": "6219d436d2c38c5b85b52d673637d6e950db45b2", "changes": 36, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java?ref=6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181", "patch": "@@ -243,6 +243,24 @@ public void testFolderIsReadable() throws Exception\n         Assert.assertTrue(folder.isReadable());\n     }\n     \n+    public void testGetContent() throws Exception\n+    {\n+        final FileObject file = resolveFile1Txt();\n+        assertTrue(file.exists());\n+        final FileContent content = file.getContent();\n+        assertNotNull(content);\n+    }\n+\n+    public void testGetContentInfo() throws Exception\n+    {\n+        final FileObject file = resolveFile1Txt();\n+        assertTrue(file.exists());\n+        final FileContent content = file.getContent();\n+        assertNotNull(content);\n+        final FileContentInfo contentInfo = content.getContentInfo();\n+        assertNotNull(contentInfo);\n+    }\n+    \n     private FileObject resolveFile1Txt() throws FileSystemException\n     {\n         return getReadFolder().resolveFile(\"file1.txt\");\n@@ -272,24 +290,6 @@ public void testConcurrentReadFolder() throws Exception\n         }\n     }\n \n-    public void testContent() throws Exception\n-    {\n-        final FileObject file = resolveFile1Txt();\n-        assertTrue(file.exists());\n-        final FileContent content = file.getContent();\n-        assertNotNull(content);\n-    }\n-\n-    public void testContentInfo() throws Exception\n-    {\n-        final FileObject file = resolveFile1Txt();\n-        assertTrue(file.exists());\n-        final FileContent content = file.getContent();\n-        assertNotNull(content);\n-        final FileContentInfo contentInfo = content.getContentInfo();\n-        assertNotNull(contentInfo);\n-    }\n-    \n     /**\n      * Tests that findFiles() works.\n      */", "filename": "core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/9a33b3e37735dfa34b01b1a82a017c891f43ebb1", "parent": "https://github.com/apache/commons-vfs/commit/2d46c53f805f77f1e0ab30cec83fa17ecbd3f089", "message": "Test getContent() and getContent().getContentInfo() in isolation for VFS-427: NPE on HttpFileObject.getContent().getContentInfo(). No issue yet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1360399 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_19", "file": [{"additions": 27, "raw_url": "https://github.com/apache/commons-vfs/raw/9a33b3e37735dfa34b01b1a82a017c891f43ebb1/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java", "blob_url": "https://github.com/apache/commons-vfs/blob/9a33b3e37735dfa34b01b1a82a017c891f43ebb1/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java", "sha": "12676f70516548c711a55e922ff556be3ce02227", "changes": 29, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java?ref=9a33b3e37735dfa34b01b1a82a017c891f43ebb1", "patch": "@@ -25,6 +25,8 @@\n import junit.framework.Assert;\n \n import org.apache.commons.vfs2.Capability;\n+import org.apache.commons.vfs2.FileContent;\n+import org.apache.commons.vfs2.FileContentInfo;\n import org.apache.commons.vfs2.FileObject;\n import org.apache.commons.vfs2.FileSystem;\n import org.apache.commons.vfs2.FileSystemException;\n@@ -140,7 +142,7 @@ protected void assertSameStructure(final FileObject folder, final FileInfo expec\n     public void testType() throws Exception\n     {\n         // Test a file\n-        FileObject file = getReadFolder().resolveFile(\"file1.txt\");\n+        FileObject file = resolveFile1Txt();\n         assertSame(FileType.FILE, file.getType());\n         assertTrue(file.isFile());\n \n@@ -241,12 +243,17 @@ public void testFolderIsReadable() throws Exception\n         Assert.assertTrue(folder.isReadable());\n     }\n     \n+    private FileObject resolveFile1Txt() throws FileSystemException\n+    {\n+        return getReadFolder().resolveFile(\"file1.txt\");\n+    }\n+    \n     /**\n      * Tests can perform operations on a folder while reading from a different files.\n      */\n     public void testConcurrentReadFolder() throws Exception\n     {\n-        final FileObject file = getReadFolder().resolveFile(\"file1.txt\");\n+        final FileObject file = resolveFile1Txt();\n         assertTrue(file.exists());\n         final FileObject folder = getReadFolderDir1();\n         assertTrue(folder.exists());\n@@ -265,6 +272,24 @@ public void testConcurrentReadFolder() throws Exception\n         }\n     }\n \n+    public void testContent() throws Exception\n+    {\n+        final FileObject file = resolveFile1Txt();\n+        assertTrue(file.exists());\n+        final FileContent content = file.getContent();\n+        assertNotNull(content);\n+    }\n+\n+    public void testContentInfo() throws Exception\n+    {\n+        final FileObject file = resolveFile1Txt();\n+        assertTrue(file.exists());\n+        final FileContent content = file.getContent();\n+        assertNotNull(content);\n+        final FileContentInfo contentInfo = content.getContentInfo();\n+        assertNotNull(contentInfo);\n+    }\n+    \n     /**\n      * Tests that findFiles() works.\n      */", "filename": "core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/842c75bbbb8478bdfbcad0348b21dab5ec5a9f76", "parent": "https://github.com/apache/commons-vfs/commit/81a8403ebc73b499922d291b7190fa9ab87e0bf5", "message": "fix: npe on rename\nfix: check if file exists as folder on createFile()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@424336 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_20", "file": [{"additions": 35, "raw_url": "https://github.com/apache/commons-vfs/raw/842c75bbbb8478bdfbcad0348b21dab5ec5a9f76/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/842c75bbbb8478bdfbcad0348b21dab5ec5a9f76/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java", "sha": "d93116c88d1696060b0437bb2b815ef16730af18", "changes": 64, "status": "modified", "deletions": 29, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java?ref=842c75bbbb8478bdfbcad0348b21dab5ec5a9f76", "patch": "@@ -80,10 +80,10 @@\n     private FileName[] children;\n     private List objects;\n \n-\t/**\n-\t * FileServices instance.\n-\t */\n-\tprivate FileOperations operations;\n+    /**\n+     * FileServices instance.\n+     */\n+    private FileOperations operations;\n \n     protected AbstractFileObject(final FileName name,\n                                  final AbstractFileSystem fs)\n@@ -561,7 +561,7 @@ public FileObject getParent() throws FileSystemException\n \n             if (files == null)\n             {\n-            \treturn null;\n+                return null;\n             }\n             else if (files.length == 0)\n             {\n@@ -775,6 +775,11 @@ public void createFile() throws FileSystemException\n         {\n             try\n             {\n+                if (exists() && !FileType.FILE.equals(getType()))\n+                {\n+                    throw new FileSystemException(\"vfs.provider/create-file.error\", name);\n+                }\n+\n                 if (!exists())\n                 {\n                     getOutputStream().close();\n@@ -904,17 +909,17 @@ public void moveTo(FileObject destFile) throws FileSystemException\n     {\n         if (canRenameTo(destFile))\n         {\n-\t        if (!getParent().isWriteable())\n-\t        {\n-\t            throw new FileSystemException(\"vfs.provider/rename-parent-read-only.error\", new FileName[] {getName(), getParent().getName()});\n-\t        }\n+            if (!getParent().isWriteable())\n+            {\n+                throw new FileSystemException(\"vfs.provider/rename-parent-read-only.error\", new FileName[]{getName(), getParent().getName()});\n+            }\n         }\n         else\n         {\n-\t        if (!isWriteable())\n-\t        {\n-\t            throw new FileSystemException(\"vfs.provider/rename-read-only.error\", getName());\n-\t        }\n+            if (!isWriteable())\n+            {\n+                throw new FileSystemException(\"vfs.provider/rename-read-only.error\", getName());\n+            }\n         }\n         if (destFile.exists())\n         {\n@@ -927,6 +932,7 @@ public void moveTo(FileObject destFile) throws FileSystemException\n             // issue rename on same filesystem\n             try\n             {\n+                attach();\n                 doRename(destFile);\n \n                 ((AbstractFileObject) destFile).handleCreate(getType());\n@@ -1006,7 +1012,7 @@ public boolean canRenameTo(FileObject newfile)\n      */\n     public FileContent getContent() throws FileSystemException\n     {\n-        synchronized(fs)\n+        synchronized (fs)\n         {\n             attach();\n             if (content == null)\n@@ -1364,7 +1370,7 @@ protected void handleChanged() throws Exception\n     /**\n      * Notifies the file that its children have changed.\n      *\n-     * @deprecated use {@link #childrenChanged(FileName, FileType)}\n+     * @deprecated use {@link #childrenChanged(FileName,FileType)}\n      */\n     protected void childrenChanged() throws Exception\n     {\n@@ -1574,20 +1580,20 @@ protected void notifyAllStreamsClosed()\n     {\n     }\n \n-\t// --- OPERATIONS ---\n+    // --- OPERATIONS ---\n \n-\t/**\n-\t * @return FileOperations interface that provides access to the operations\n-\t *         API.\n-\t * @throws FileSystemException\n-\t */\n-\tpublic FileOperations getFileOperations() throws FileSystemException\n-\t{\n-\t\tif (operations == null)\n-\t\t{\n-\t\t\toperations = new DefaultFileOperations(this);\n-\t\t}\n+    /**\n+     * @return FileOperations interface that provides access to the operations\n+     *         API.\n+     * @throws FileSystemException\n+     */\n+    public FileOperations getFileOperations() throws FileSystemException\n+    {\n+        if (operations == null)\n+        {\n+            operations = new DefaultFileOperations(this);\n+        }\n \n-\t\treturn operations;\n-\t}\n+        return operations;\n+    }\n }", "filename": "src/java/org/apache/commons/vfs/provider/AbstractFileObject.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/2c61367d1590d635bf300ce0d450dcd2ebfb10af", "parent": "https://github.com/apache/commons-vfs/commit/b1f1bbf6f576ececada5add29d6eda9cbce68eda", "message": "sftp: stip off link file names, though still no link-support.\nShould be sufficient to parse such directory listings.\nfix: NPE in UriParser\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@320876 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_21", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/2c61367d1590d635bf300ce0d450dcd2ebfb10af/RELEASE_NOTES.txt", "blob_url": "https://github.com/apache/commons-vfs/blob/2c61367d1590d635bf300ce0d450dcd2ebfb10af/RELEASE_NOTES.txt", "sha": "5bfb792666059ad5caf09998c6abcdaf02baead0", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/RELEASE_NOTES.txt?ref=2c61367d1590d635bf300ce0d450dcd2ebfb10af", "patch": "@@ -3,6 +3,9 @@\n zip, jar, tar:\n close archive if there is no open stream. This avoids locking on the archive.\n \n+sftp:\n+stip off link file names, though still no link-support for sftp.\n+\n \n 2005-09-26  commons-vfs 1.0 RC4\n ", "filename": "RELEASE_NOTES.txt"}, {"additions": 4, "raw_url": "https://github.com/apache/commons-vfs/raw/2c61367d1590d635bf300ce0d450dcd2ebfb10af/src/java/org/apache/commons/vfs/provider/UriParser.java", "blob_url": "https://github.com/apache/commons-vfs/blob/2c61367d1590d635bf300ce0d450dcd2ebfb10af/src/java/org/apache/commons/vfs/provider/UriParser.java", "sha": "dcc96448f73675099759b7fbfa10a7c5cb1fd19c", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/UriParser.java?ref=2c61367d1590d635bf300ce0d450dcd2ebfb10af", "patch": "@@ -400,6 +400,10 @@ public static String encode(final String decodedStr, final char[] reserved)\n \n     public static String[] encode(String[] strings)\n     {\n+        if (strings == null)\n+        {\n+            return null;\n+        }\n         for (int i = 0; i < strings.length; i++)\n         {\n             strings[i] = encode(strings[i]);", "filename": "src/java/org/apache/commons/vfs/provider/UriParser.java"}, {"additions": 11, "raw_url": "https://github.com/apache/commons-vfs/raw/2c61367d1590d635bf300ce0d450dcd2ebfb10af/src/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/2c61367d1590d635bf300ce0d450dcd2ebfb10af/src/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java", "sha": "d5d926e3cdcf337f96f4f045cc17d132eb3f566f", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java?ref=2c61367d1590d635bf300ce0d450dcd2ebfb10af", "patch": "@@ -250,7 +250,7 @@ protected void doRename(FileObject newfile) throws Exception\n             boolean trigger = true;\n             int state = 0;\n             StringBuffer nameBuf = new StringBuffer(stat.length());\n-            for (int i = 0; i<stat.length(); i++)\n+            for (int i = 0; i < stat.length(); i++)\n             {\n                 char c = stat.charAt(i);\n                 if (state == 16)\n@@ -261,19 +261,26 @@ protected void doRename(FileObject newfile) throws Exception\n                 if ((c != ' ' && trigger) || (c == ' ' && !trigger))\n                 {\n                     state++;\n-                    trigger=!trigger;\n+                    trigger = !trigger;\n                 }\n             }\n             if (VFS.isUriStyle())\n             {\n-                if (stat.charAt(0) == 'd' && nameBuf.charAt(nameBuf.length()-1) != '/')\n+                if (stat.charAt(0) == 'd' && nameBuf.charAt(nameBuf.length() - 1) != '/')\n                 {\n                     nameBuf.append(\"/\");\n                 }\n             }\n             // <==\n \n-            final String name = nameBuf.toString();\n+            String name = nameBuf.toString();\n+            int linkPos = name.indexOf(\" -> \");\n+            if (linkPos > -1)\n+            {\n+                // link = name.substring(linkPos + 4);\n+                name = name.substring(0, linkPos);\n+            }\n+\n             if (name.equals(\".\") || name.equals(\"..\") || name.equals(\"./\") || name.equals(\"../\"))\n             {\n                 continue;", "filename": "src/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/993494f11df223915fa16fc5c719a2fd9dedea6c", "parent": "https://github.com/apache/commons-vfs/commit/e13e9c943ad93a9acf3783d98072d1395731a01b", "message": "fix: NPE with badly formed smb filenames\nfix: use java 1.4 to build test-data\nfix: rebulid ant build.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@232421 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_22", "file": [{"additions": 206, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/build.xml", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/build.xml", "sha": "0cf718391fee53d18b2d3546096df54fcb160749", "changes": 398, "status": "modified", "deletions": 192, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/build.xml?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "patch": "@@ -1,200 +1,214 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<!--build.xml generated by maven from project.xml version 1.0-RC2\n-  on date July 8 2005, time 1649-->\n+<!--build.xml generated by maven from project.xml version 1.0-RC3\n+  on date August 13 2005, time 0731-->\n \n <project default=\"jar\" name=\"commons-vfs\" basedir=\".\">\n-  <property name=\"defaulttargetdir\" value=\"target\">\n-  </property>\n-  <property name=\"libdir\" value=\"target/lib\">\n-  </property>\n-  <property name=\"classesdir\" value=\"target/classes\">\n-  </property>\n-  <property name=\"testclassesdir\" value=\"target/test-classes\">\n-  </property>\n-  <property name=\"testclassesdir\" value=\"target/test-classes\">\n-  </property>\n-  <property name=\"testreportdir\" value=\"target/test-reports\">\n-  </property>\n-  <property name=\"distdir\" value=\"dist\">\n-  </property>\n-  <property name=\"javadocdir\" value=\"dist/docs/api\">\n-  </property>\n-  <property name=\"final.name\" value=\"commons-vfs-1.0-RC2\">\n-  </property>\n-  <path id=\"build.classpath\">\n-    <fileset dir=\"${libdir}\">\n-      <include name=\"**/*.jar\">\n-      </include>\n-    </fileset>\n-  </path>\n-  <target name=\"init\" description=\"o Initializes some properties\">\n-    <mkdir dir=\"${libdir}\">\n-    </mkdir>\n-    <condition property=\"noget\">\n-      <equals arg2=\"only\" arg1=\"${build.sysclasspath}\">\n-      </equals>\n-    </condition>\n-    <!--Test if JUNIT is present in ANT classpath-->\n-\n-    <available property=\"Junit.present\" classname=\"junit.framework.Test\">\n-    </available>\n-  </target>\n-  <target name=\"compile\" description=\"o Compile the code\" depends=\"get-deps\">\n-    <mkdir dir=\"${classesdir}\">\n-    </mkdir>\n-    <javac destdir=\"${classesdir}\" deprecation=\"true\" debug=\"true\" optimize=\"false\" excludes=\"**/package.html\">\n-      <src>\n-        <pathelement location=\"src/java\">\n-        </pathelement>\n-      </src>\n-      <classpath refid=\"build.classpath\">\n-      </classpath>\n-    </javac>\n-    <copy todir=\"${classesdir}\">\n-      <fileset dir=\"src/java\">\n-        <include name=\"**/*.properties\">\n-        </include>\n-        <include name=\"**/*.xml\">\n-        </include>\n-      </fileset>\n-    </copy>\n-    <mkdir dir=\"${classesdir}/META-INF\">\n-    </mkdir>\n-    <copy todir=\"${classesdir}/META-INF\">\n-      <fileset dir=\".\">\n-        <include name=\"NOTICE.txt\">\n-        </include>\n-      </fileset>\n-    </copy>\n-  </target>\n-  <target name=\"jar\" description=\"o Create the jar\" depends=\"compile,test\">\n-    <jar jarfile=\"${defaulttargetdir}/${final.name}.jar\" excludes=\"**/package.html\" basedir=\"${classesdir}\">\n-    </jar>\n-  </target>\n-  <target name=\"clean\" description=\"o Clean up the generated directories\">\n-    <delete dir=\"${defaulttargetdir}\">\n-    </delete>\n-    <delete dir=\"${distdir}\">\n-    </delete>\n-  </target>\n-  <target name=\"dist\" description=\"o Create a distribution\" depends=\"jar, javadoc\">\n-    <mkdir dir=\"dist\">\n-    </mkdir>\n-    <copy todir=\"dist\">\n-      <fileset dir=\"${defaulttargetdir}\" includes=\"*.jar\">\n-      </fileset>\n-      <fileset dir=\"${basedir}\" includes=\"LICENSE*, README*\">\n-      </fileset>\n-    </copy>\n-  </target>\n-  <target name=\"test\" description=\"o Run the test cases\" if=\"test.failure\" depends=\"internal-test\">\n-    <fail message=\"There were test failures.\">\n-    </fail>\n-  </target>\n-  <target name=\"internal-test\" if=\"Junit.present\" depends=\"junit-present,compile-tests\">\n-    <mkdir dir=\"${testreportdir}\">\n-    </mkdir>\n-    <junit dir=\"./\" failureproperty=\"test.failure\" printSummary=\"yes\" fork=\"true\" haltonerror=\"true\">\n-      <sysproperty key=\"basedir\" value=\".\">\n-      </sysproperty>\n-      <formatter type=\"xml\">\n-      </formatter>\n-      <formatter usefile=\"false\" type=\"plain\">\n-      </formatter>\n-      <classpath>\n-        <path refid=\"build.classpath\">\n-        </path>\n-        <pathelement path=\"${testclassesdir}\">\n-        </pathelement>\n-        <pathelement path=\"${classesdir}\">\n-        </pathelement>\n-      </classpath>\n-      <batchtest todir=\"${testreportdir}\">\n-        <fileset dir=\"src/test\">\n-          <include name=\"**/test/*TestCase.java\">\n-          </include>\n-          <exclude name=\"**/test/Abstract*TestCase.java\">\n-          </exclude>\n-          <exclude name=\"**/*.java\">\n-          </exclude>\n-        </fileset>\n-      </batchtest>\n-    </junit>\n-  </target>\n-  <target name=\"junit-present\" unless=\"Junit.present\" depends=\"init\">\n-    <echo>================================= WARNING ================================</echo>\n-    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>\n-    <echo>==========================================================================</echo>\n-  </target>\n-  <target name=\"compile-tests\" if=\"Junit.present\" depends=\"junit-present,compile\">\n-    <mkdir dir=\"${testclassesdir}\">\n-    </mkdir>\n-    <javac destdir=\"${testclassesdir}\" deprecation=\"true\" debug=\"true\" optimize=\"false\" excludes=\"**/package.html\">\n-      <src>\n-        <pathelement location=\"src/test\">\n-        </pathelement>\n-      </src>\n-      <classpath>\n-        <path refid=\"build.classpath\">\n-        </path>\n-        <pathelement path=\"${classesdir}\">\n-        </pathelement>\n-      </classpath>\n-    </javac>\n-  </target>\n-  <target name=\"javadoc\" description=\"o Generate javadoc\" depends=\"get-deps\">\n-    <mkdir dir=\"${javadocdir}\">\n-    </mkdir>\n-    <tstamp>\n-      <format pattern=\"2002-yyyy\" property=\"year\">\n-      </format>\n-    </tstamp>\n-    <property name=\"copyright\" value=\"Copyright &amp;copy;  The Apache Software Foundation. All Rights Reserved.\">\n+    <property name=\"defaulttargetdir\" value=\"target\">\n+    </property>\n+    <property name=\"libdir\" value=\"target/lib\">\n+    </property>\n+    <property name=\"classesdir\" value=\"target/classes\">\n+    </property>\n+    <property name=\"testclassesdir\" value=\"target/test-classes\">\n+    </property>\n+    <property name=\"testclassesdir\" value=\"target/test-classes\">\n     </property>\n-    <property name=\"title\" value=\"Commons VFS 1.0-RC2 API\">\n+    <property name=\"testreportdir\" value=\"target/test-reports\">\n     </property>\n-    <javadoc use=\"true\" private=\"true\" destdir=\"${javadocdir}\" author=\"true\" version=\"true\" sourcepath=\"src/java\" packagenames=\"org.apache.commons.vfs.*\">\n-      <classpath>\n-        <path refid=\"build.classpath\">\n-        </path>\n-      </classpath>\n-    </javadoc>\n-  </target>\n-  <target name=\"get-deps\" unless=\"noget\" depends=\"init\">\n-    <!--Proxy settings works only with a JDK 1.2 and higher.-->\n+    <property name=\"distdir\" value=\"dist\">\n+    </property>\n+    <property name=\"javadocdir\" value=\"dist/docs/api\">\n+    </property>\n+    <property name=\"final.name\" value=\"commons-vfs-1.0-RC3\">\n+    </property>\n+    <path id=\"build.classpath\">\n+        <fileset dir=\"${libdir}\">\n+            <include name=\"**/*.jar\">\n+            </include>\n+        </fileset>\n+    </path>\n+    <target name=\"init\" description=\"o Initializes some properties\">\n+        <mkdir dir=\"${libdir}\">\n+        </mkdir>\n+        <condition property=\"noget\">\n+            <equals arg2=\"only\" arg1=\"${build.sysclasspath}\">\n+            </equals>\n+        </condition>\n+        <!--Test if JUNIT is present in ANT classpath-->\n+\n+        <available property=\"Junit.present\" classname=\"junit.framework.Test\">\n+        </available>\n+    </target>\n+    <target name=\"compile\" description=\"o Compile the code\" depends=\"get-deps\">\n+        <mkdir dir=\"${classesdir}\">\n+        </mkdir>\n+        <javac destdir=\"${classesdir}\" deprecation=\"true\" debug=\"true\" optimize=\"false\" excludes=\"**/package.html\">\n+            <src>\n+                <pathelement location=\"src/java\">\n+                </pathelement>\n+            </src>\n+            <classpath refid=\"build.classpath\">\n+            </classpath>\n+        </javac>\n+        <copy todir=\"${classesdir}\">\n+            <fileset dir=\"src/java\">\n+                <include name=\"**/*.properties\">\n+                </include>\n+                <include name=\"**/*.xml\">\n+                </include>\n+            </fileset>\n+        </copy>\n+        <mkdir dir=\"${classesdir}/META-INF\">\n+        </mkdir>\n+        <copy todir=\"${classesdir}/META-INF\">\n+            <fileset dir=\".\">\n+                <include name=\"NOTICE.txt\">\n+                </include>\n+            </fileset>\n+        </copy>\n+    </target>\n+    <target name=\"jar\" description=\"o Create the jar\" depends=\"compile,test\">\n+        <jar jarfile=\"${defaulttargetdir}/${final.name}.jar\" excludes=\"**/package.html\" basedir=\"${classesdir}\">\n+        </jar>\n+    </target>\n+    <target name=\"clean\" description=\"o Clean up the generated directories\">\n+        <delete dir=\"${defaulttargetdir}\">\n+        </delete>\n+        <delete dir=\"${distdir}\">\n+        </delete>\n+    </target>\n+    <target name=\"dist\" description=\"o Create a distribution\" depends=\"jar, javadoc\">\n+        <mkdir dir=\"dist\">\n+        </mkdir>\n+        <copy todir=\"dist\">\n+            <fileset dir=\"${defaulttargetdir}\" includes=\"*.jar\">\n+            </fileset>\n+            <fileset dir=\"${basedir}\" includes=\"LICENSE*, README*\">\n+            </fileset>\n+        </copy>\n+    </target>\n+    <target name=\"test\" description=\"o Run the test cases\" if=\"test.failure\" depends=\"internal-test\">\n+        <fail message=\"There were test failures.\">\n+        </fail>\n+    </target>\n+    <target name=\"internal-test\" if=\"Junit.present\" depends=\"junit-present,compile-tests\">\n+        <mkdir dir=\"${testreportdir}\">\n+        </mkdir>\n+        <junit dir=\"./\" failureproperty=\"test.failure\" printSummary=\"yes\" fork=\"true\" haltonerror=\"true\">\n+            <sysproperty key=\"basedir\" value=\".\">\n+            </sysproperty>\n+            <formatter type=\"xml\">\n+            </formatter>\n+            <formatter usefile=\"false\" type=\"plain\">\n+            </formatter>\n+            <classpath>\n+                <path refid=\"build.classpath\">\n+                </path>\n+                <pathelement path=\"${testclassesdir}\">\n+                </pathelement>\n+                <pathelement path=\"${classesdir}\">\n+                </pathelement>\n+            </classpath>\n+            <batchtest todir=\"${testreportdir}\">\n+                <fileset dir=\"src/test\">\n+                    <include name=\"**/test/*TestCase.java\">\n+                    </include>\n+                    <exclude name=\"**/test/Abstract*TestCase.java\">\n+                    </exclude>\n+                    <exclude name=\"**/*.java\">\n+                    </exclude>\n+                </fileset>\n+            </batchtest>\n+        </junit>\n+    </target>\n+    <target name=\"junit-present\" unless=\"Junit.present\" depends=\"init\">\n+        <echo>================================= WARNING ================================</echo>\n+        <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>\n+        <echo>==========================================================================</echo>\n+    </target>\n+    <target name=\"compile-tests\" if=\"Junit.present\" depends=\"junit-present,compile\">\n+        <mkdir dir=\"${testclassesdir}\">\n+        </mkdir>\n+        <javac destdir=\"${testclassesdir}\" deprecation=\"true\" debug=\"true\" optimize=\"false\" excludes=\"**/package.html\">\n+            <src>\n+                <pathelement location=\"src/test\">\n+                </pathelement>\n+            </src>\n+            <classpath>\n+                <path refid=\"build.classpath\">\n+                </path>\n+                <pathelement path=\"${classesdir}\">\n+                </pathelement>\n+            </classpath>\n+        </javac>\n+    </target>\n+    <target name=\"javadoc\" description=\"o Generate javadoc\" depends=\"get-deps\">\n+        <mkdir dir=\"${javadocdir}\">\n+        </mkdir>\n+        <tstamp>\n+            <format pattern=\"2002-yyyy\" property=\"year\">\n+            </format>\n+        </tstamp>\n+        <property name=\"copyright\" value=\"Copyright &amp;copy;  The Apache Software Foundation. All Rights Reserved.\">\n+        </property>\n+        <property name=\"title\" value=\"Commons VFS 1.0-RC3 API\">\n+        </property>\n+        <javadoc use=\"true\" private=\"true\" destdir=\"${javadocdir}\" author=\"true\" version=\"true\" sourcepath=\"src/java\"\n+                 packagenames=\"org.apache.commons.vfs.*\">\n+            <classpath>\n+                <path refid=\"build.classpath\">\n+                </path>\n+            </classpath>\n+        </javadoc>\n+    </target>\n+    <target name=\"get-deps\" unless=\"noget\" depends=\"init\">\n+        <!--Proxy settings works only with a JDK 1.2 and higher.-->\n \n-    <setproxy>\n-    </setproxy>\n-    <get dest=\"${libdir}/ant-1.5.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/ant/jars/ant-1.5.jar\">\n-    </get>\n-    <get dest=\"${libdir}/commons-net-1.4.0.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/commons-net/jars/commons-net-1.4.0.jar\">\n-    </get>\n-    <get dest=\"${libdir}/commons-logging-1.0.4.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar\">\n-    </get>\n-    <get dest=\"${libdir}/commons-compress-20040530.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/commons-compress/jars/commons-compress-20040530.jar\">\n-    </get>\n-    <get dest=\"${libdir}/commons-collections-3.1.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.1.jar\">\n-    </get>\n-    <get dest=\"${libdir}/jcifs-0.8.3.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/jcifs/jars/jcifs-0.8.3.jar\">\n-    </get>\n-    <get dest=\"${libdir}/jakarta-slide-webdavlib-20050629.161100.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/slide/jars/jakarta-slide-webdavlib-20050629.161100.jar\">\n-    </get>\n-    <get dest=\"${libdir}/jdom-1.0.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/jdom/jars/jdom-1.0.jar\">\n-    </get>\n-    <get dest=\"${libdir}/commons-httpclient-2.0.2.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/commons-httpclient/jars/commons-httpclient-2.0.2.jar\">\n-    </get>\n-    <get dest=\"${libdir}/jsch-0.1.17.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/jsch/jars/jsch-0.1.17.jar\">\n-    </get>\n-    <get dest=\"${libdir}/xml-apis-1.0.b2.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-1.0.b2.jar\">\n-    </get>\n-    <get dest=\"${libdir}/oro-2.0.8.jar\" usetimestamp=\"true\" ignoreerrors=\"true\" src=\"http://www.ibiblio.org/maven/oro/jars/oro-2.0.8.jar\">\n-    </get>\n-  </target>\n-  <target name=\"install-maven\">\n-    <get dest=\"${user.home}/maven-install-latest.jar\" usetimestamp=\"true\" src=\"${repo}/maven/maven-install-latest.jar\">\n-    </get>\n-    <unjar dest=\"${maven.home}\" src=\"${user.home}/maven-install-latest.jar\">\n-    </unjar>\n-  </target>\n+        <setproxy>\n+        </setproxy>\n+        <get dest=\"${libdir}/ant-1.6.2.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/ant/jars/ant-1.6.2.jar\">\n+        </get>\n+        <get dest=\"${libdir}/commons-net-1.4.0.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/commons-net/jars/commons-net-1.4.0.jar\">\n+        </get>\n+        <get dest=\"${libdir}/commons-logging-1.0.4.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar\">\n+        </get>\n+        <get dest=\"${libdir}/commons-compress-20040530.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/commons-compress/jars/commons-compress-20040530.jar\">\n+        </get>\n+        <get dest=\"${libdir}/commons-collections-3.1.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.1.jar\">\n+        </get>\n+        <get dest=\"${libdir}/jcifs-0.8.3.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/jcifs/jars/jcifs-0.8.3.jar\">\n+        </get>\n+        <get dest=\"${libdir}/jakarta-slide-webdavlib-20050629.161100.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/slide/jars/jakarta-slide-webdavlib-20050629.161100.jar\">\n+        </get>\n+        <get dest=\"${libdir}/jdom-1.0.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/jdom/jars/jdom-1.0.jar\">\n+        </get>\n+        <get dest=\"${libdir}/commons-httpclient-2.0.2.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/commons-httpclient/jars/commons-httpclient-2.0.2.jar\">\n+        </get>\n+        <get dest=\"${libdir}/jsch-0.1.17.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/jsch/jars/jsch-0.1.17.jar\">\n+        </get>\n+        <get dest=\"${libdir}/xml-apis-1.0.b2.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-1.0.b2.jar\">\n+        </get>\n+        <get dest=\"${libdir}/oro-2.0.8.jar\" usetimestamp=\"true\" ignoreerrors=\"true\"\n+             src=\"http://www.ibiblio.org/maven/oro/jars/oro-2.0.8.jar\">\n+        </get>\n+    </target>\n+    <target name=\"install-maven\">\n+        <get dest=\"${user.home}/maven-install-latest.jar\" usetimestamp=\"true\"\n+             src=\"${repo}/maven/maven-install-latest.jar\">\n+        </get>\n+        <unjar dest=\"${maven.home}\" src=\"${user.home}/maven-install-latest.jar\">\n+        </unjar>\n+    </target>\n </project>\n\\ No newline at end of file", "filename": "build.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/java/org/apache/commons/vfs/provider/smb/SmbFileNameParser.java", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/java/org/apache/commons/vfs/provider/smb/SmbFileNameParser.java", "sha": "0772546e6fc45298d18522cd152c85b4ca4d1eeb", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/smb/SmbFileNameParser.java?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "patch": "@@ -51,7 +51,7 @@ public FileName parseUri(final VfsComponentContext context, FileName base, final\n         String domain = extractDomain(username);\n         if (domain != null)\n         {\n-            username = username.substring(domain.length()+1);\n+            username = username.substring(domain.length() + 1);\n         }\n \n         // Decode and adjust separators\n@@ -83,6 +83,11 @@ public FileName parseUri(final VfsComponentContext context, FileName base, final\n \n     private String extractDomain(String username)\n     {\n+        if (username == null)\n+        {\n+            return null;\n+        }\n+\n         for (int i = 0; i < username.length(); i++)\n         {\n             if (username.charAt(i) == '\\\\')", "filename": "src/java/org/apache/commons/vfs/provider/smb/SmbFileNameParser.java"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.jar", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.jar", "sha": "62b6628c5169ea4d88e372c35e948542a7ea8477", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.jar?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/nested.jar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tar", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tar", "sha": "38a1ed440c85268efe66c9740942bfd132322140", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tar?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/nested.tar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tbz2", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tbz2", "sha": "53418644bf6d306573fd3baeb912f78e7dddf2c7", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tbz2?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/nested.tbz2"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tgz", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.tgz", "sha": "c0e0b898b51ef7dff88700145a6cbce0c5442824", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tgz?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/nested.tgz"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.zip", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/nested.zip", "sha": "008f8ca04afd23ecbe6c77744ae033f8401ce806", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.zip?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/nested.zip"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.jar", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.jar", "sha": "e12c4020a68361d082021ee2ce01d71dd70fe567", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.jar?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/test.jar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tar", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tar", "sha": "d607c9867a771195c4b3b60f1ab3dc8967e41eeb", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tar?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/test.tar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tbz2", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tbz2", "sha": "38f61301f04a7799b9c9b0acfa80cbfdeeb80dcd", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tbz2?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/test.tbz2"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tgz", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.tgz", "sha": "1eb0abd1e6ddea92a06ff59450c7560bfd8b5dd7", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tgz?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/test.tgz"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.zip", "blob_url": "https://github.com/apache/commons-vfs/blob/993494f11df223915fa16fc5c719a2fd9dedea6c/src/test-data/test.zip", "sha": "dce956f1b0db5952c07346dcd1f3e16b6fc9b843", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.zip?ref=993494f11df223915fa16fc5c719a2fd9dedea6c", "filename": "src/test-data/test.zip"}], "repo": "commons-vfs"}, {"commit": "https://github.com/apache/commons-vfs/commit/a1316c799e971d7c8db1a1f032a1b756ad81aa35", "parent": "https://github.com/apache/commons-vfs/commit/86f0b280d9069fa47d62d237af3d61af95873ea1", "message": "It turns out sun change something in its security and thus will fail when requesting an priviledged action with an NPE if the host in an url instance is \"null\".\nIt looks like this happend after jdk 1.3.1_07.\nI wont say its fixed now (sun didnt state the host cant be null and it worked with 1.4), but its a workaround which works with any jdk now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@344463 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-vfs_23", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/RELEASE_NOTES.txt", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/RELEASE_NOTES.txt", "sha": "0a867d3f3af698e401054e72c5f2629eaa2a29be", "changes": 116, "status": "modified", "deletions": 113, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/RELEASE_NOTES.txt?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "patch": "@@ -1,116 +1,6 @@\n-2005-11-08 comons-vfs 1.0 RC6\n-\n-uri praser:\n-We have had lots of duplicate calls to fixSeparator, so normalizePath now no longer calls it.\n-Now normalizePath assumes this has been called.\n-This only bothers you if you use normalizePath which should never be the case and is not\n-needed to work with VFS.\n-(Thanks to Filip - filipdef -at - cirquedigital.com)\n-\n-sftp:\n-new configuration parameter SftpFileSystemConfigBuilder.timeout\n-upgrade to jsch-0.1.23\n-using listChildrenResolved for performance\n-activated RandomRead\n-\n-ftp:\n-better error message if it isnt possible to aquire a input or output stream\n-removed setLastModifiedTime, its not supported by FTP\n-\n-core:\n-removed check for isWriteable in deleteSelf as its possible to delete a read-only file\n-if you have write-execute access to the directory\n-fixed a dead-lock problem in multithreaded environments. (Thanks to Faron Dutton PR: 37374)\n-\n-\n-2005-10-14 commons-vfs 1.0 RC5\n-\n-zip, jar, tar:\n-close archive if there is no open stream. This avoids locking on the archive.\n-\n-sftp:\n-stip off link file names, though still no link-support for sftp.\n-added filesystem option: setUserDirIsRoot\n-\n-\n-2005-09-26  commons-vfs 1.0 RC4\n-\n-bzip:\n-changed documentation to use latest commons-compress.\n-\n-\n-filesystems:\n-fix: avoid creation of filesystem if they use the same options\n-\n-\n-threading:\n-avoid gc when referencing only inputStream/outputStream of a fileObject\n-\n-\n-filenames:\n-add a type (file/folder) to filename.\n-This is needed to allow URI style filename resolving\n-e.g. base \"file:///path/to/file\" with relative name \"any/file\" results in \"file:///path/to/any/file\" instead\n-of \"file:///path/to/file/any/file\"\n-This is experimental code. Switch on with \"VFS.setUriStyle(true);\" before ANY other VFS operation.\n-\n-\n-ant tasks:\n-added antlib.xml - (Jacob Kjome)\n-\n-\n-zip, jar, ....:\n-allow filenames without trailing \"!\"\n-allow createFilesystem with .gz files\n-better handling of file/folder flag with compressed files\n-\n-\n-ftp:\n-check IOException instead of FTPConnectionClosedException.\n-This should make ftp retry more robust even if for some case the state of the\n-socket isnt correctly reported as closed.\n-\n-ignore nonparseable ftp directory entries. It will be logged using the debug log-level\n-with class org.apache.commons.vfs.provider.ftp.FtpFileObject.\n-(e.g. empty lines in ftp directory listing)\n-\n-avoid server-roundtrip (\"LIST\") if file was deleted. if you add a child this is still needed.\n-\n-allow configuration of dataTimeout\n-\n-\n-2005-08-13  commons-vfs 1.0 RC3\n-\n-ant tasks:\n-upgrade to ant 1.6.2 to support nested tasks\n-\n-documentation:\n-made httpclient non-optional to be able to access its URIUtils class\n-\n-ftp:\n-configuration to use user-home as root\n-\n-file:\n-build windows filename according to the documentation. e.g. file:///c:/dir, file:////unchost/uncshare\n-\n-smb:\n-now uses NtlmPasswordAuthentication for credentials passing\n-fix for special characters in username/password\n-allow domains with DOMAIN\\USERNAME syntax\n-\n-\n-2005-Jul-5  commons-vfs 1.0 RC2\n+2005-11-xx comons-vfs 1.0\n+this is the first release\n \n Notice: Some tests may fail unless you've followed the necessary setup\n   as described here: http://jakarta.apache.org/commons/vfs/testserver.html\n-  This is ok; the jar will still be fine.\n-\n-Fixed multi-threading problems with ftp and webdav scheme\n-\n-Some documentation issues\n-\n-other minor fixes\n-\n-\n-2005-Jun-29 commons-vfs 1.0 RC1\n-Started the release cylce\n\\ No newline at end of file\n+  This is ok; the jar will still be fine.\n\\ No newline at end of file", "filename": "RELEASE_NOTES.txt"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java", "sha": "89910b53ab0fb577f2221fac4a8f95d71905dc2c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "patch": "@@ -373,7 +373,7 @@ public URL getURL() throws FileSystemException\n             {\n                 public Object run() throws MalformedURLException\n                 {\n-                    return new URL(UriParser.extractScheme(name.getURI(), buf), null, -1,\n+                    return new URL(UriParser.extractScheme(name.getURI(), buf), \"\", -1,\n                         buf.toString(), new DefaultURLStreamHandler(fs.getContext(), fs.getFileSystemOptions()));\n                 }\n             });", "filename": "src/java/org/apache/commons/vfs/provider/AbstractFileObject.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/java/org/apache/commons/vfs/provider/DefaultURLStreamHandler.java", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/java/org/apache/commons/vfs/provider/DefaultURLStreamHandler.java", "sha": "5cb78fbe35718b9e9642bcebbf7d03e886d397b2", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/java/org/apache/commons/vfs/provider/DefaultURLStreamHandler.java?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "patch": "@@ -86,7 +86,7 @@ protected void parseURL(final URL u,\n             final StringBuffer filePart = new StringBuffer();\n             final String protocolPart = UriParser.extractScheme(url, filePart);\n \n-            setURL(u, protocolPart, null, -1, null, null, filePart.toString(), null, null);\n+            setURL(u, protocolPart, \"\", -1, null, null, filePart.toString(), null, null);\n         }\n         catch (FileSystemException fse)\n         {", "filename": "src/java/org/apache/commons/vfs/provider/DefaultURLStreamHandler.java"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.jar", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.jar", "sha": "d7beddef0d848ea741da82ce65a819ebcf32dab5", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.jar?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/nested.jar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tar", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tar", "sha": "937fc9615a0cf73bc64855db88c10e53383f86c6", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tar?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/nested.tar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tbz2", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tbz2", "sha": "6dcc77a95165d8a3a86af6cb49423d14ef03ef6f", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tbz2?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/nested.tbz2"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tgz", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.tgz", "sha": "99aeacdb91e717e612c241790301a61084bd8832", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.tgz?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/nested.tgz"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.zip", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/nested.zip", "sha": "a7a358cf3819ad4247ac94db7d8c90af5bf406e6", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/nested.zip?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/nested.zip"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.jar", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.jar", "sha": "1055a2b5daeb5d5d55c165dfa3c63cff4e081ce2", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.jar?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/test.jar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tar", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tar", "sha": "76655b961884fa08c01db5574a9df324e03a37dd", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tar?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/test.tar"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tbz2", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tbz2", "sha": "c7eb597474c13af2fefa33439a7090a347eaea79", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tbz2?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/test.tbz2"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tgz", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.tgz", "sha": "218a6b18f2965ea1b344c3705b3306f466ee66a5", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.tgz?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/test.tgz"}, {"additions": 0, "raw_url": "https://github.com/apache/commons-vfs/raw/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.zip", "blob_url": "https://github.com/apache/commons-vfs/blob/a1316c799e971d7c8db1a1f032a1b756ad81aa35/src/test-data/test.zip", "sha": "6f4da244f70b2a444443a108e93b8e6c2317fce3", "changes": 0, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/test-data/test.zip?ref=a1316c799e971d7c8db1a1f032a1b756ad81aa35", "filename": "src/test-data/test.zip"}], "repo": "commons-vfs"}]
