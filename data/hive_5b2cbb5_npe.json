[
    {
        "repo": "hive",
        "commit": "https://github.com/apache/hive/commit/5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e",
        "bug_id": "hive_5b2cbb5",
        "message": "HIVE-18786 : NPE in Hive windowing functions (Dongwook Kwon via Ashutosh Chauhan)\n\nSigned-off-by: Ashutosh Chauhan <hashutosh@apache.org>",
        "parent": "https://github.com/apache/hive/commit/1b3ac733f53598636870f4f7af09d2938fe0b09f",
        "patched_files": [
            "GenericUDAFEvaluator.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/hive/raw/5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFEvaluator.java",
                "contents_url": "https://api.github.com/repos/apache/hive/contents/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFEvaluator.java?ref=5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e",
                "filename": "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFEvaluator.java",
                "deletions": 0,
                "sha": "b02ca0708b8526912129872a821ab1722d9b32c9",
                "blob_url": "https://github.com/apache/hive/blob/5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFEvaluator.java",
                "patch": "@@ -149,6 +149,7 @@ public ObjectInspector init(Mode m, ObjectInspector[] parameters) throws HiveExc\n     // This function should be overriden in every sub class\n     // And the sub class should call super.init(m, parameters) to get mode set.\n     mode = m;\n+    partitionEvaluator = null;\n     return null;\n   }\n ",
                "changes": 1
            },
            {
                "status": "added",
                "additions": 79,
                "raw_url": "https://github.com/apache/hive/raw/5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/TestGenericUDAFEvaluator.java",
                "contents_url": "https://api.github.com/repos/apache/hive/contents/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/TestGenericUDAFEvaluator.java?ref=5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e",
                "filename": "ql/src/test/org/apache/hadoop/hive/ql/udf/generic/TestGenericUDAFEvaluator.java",
                "deletions": 0,
                "sha": "0747fa15d0b80215155ec6ffcb5d0746a97abef9",
                "blob_url": "https://github.com/apache/hive/blob/5b2cbb5489ffc672e1eb7ee40b8eaa50fd26115e/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/TestGenericUDAFEvaluator.java",
                "patch": "@@ -0,0 +1,79 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hive.ql.udf.generic;\n+\n+import org.apache.hadoop.hive.ql.exec.PTFPartition;\n+import org.apache.hadoop.hive.ql.metadata.HiveException;\n+import org.apache.hadoop.hive.ql.plan.ptf.PTFExpressionDef;\n+import org.apache.hadoop.hive.ql.plan.ptf.WindowFrameDef;\n+import org.apache.hadoop.hive.ql.udf.ptf.BasePartitionEvaluator;\n+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Answers;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TestGenericUDAFEvaluator {\n+\n+  @Mock(answer = Answers.CALLS_REAL_METHODS)\n+  private GenericUDAFEvaluator udafEvaluator;\n+\n+  @Mock\n+  private WindowFrameDef winFrame;\n+\n+  @Mock\n+  private PTFPartition partition1;\n+\n+  @Mock\n+  private ObjectInspector outputOI;\n+\n+  private List<PTFExpressionDef> parameters = Collections.emptyList();\n+\n+  @Test\n+  public void testGetPartitionWindowingEvaluatorWithoutInitCall() {\n+    BasePartitionEvaluator partition1Evaluator1 = udafEvaluator.getPartitionWindowingEvaluator(\n+        winFrame, partition1, parameters, outputOI);\n+\n+    BasePartitionEvaluator partition1Evaluator2 = udafEvaluator.getPartitionWindowingEvaluator(\n+        winFrame, partition1, parameters, outputOI);\n+\n+    Assert.assertEquals(partition1Evaluator1, partition1Evaluator2);\n+  }\n+\n+  @Test\n+  public void testGetPartitionWindowingEvaluatorWithInitCall() throws HiveException {\n+    BasePartitionEvaluator partition1Evaluator1 = udafEvaluator.getPartitionWindowingEvaluator(\n+        winFrame, partition1, parameters, outputOI);\n+\n+    udafEvaluator.init(GenericUDAFEvaluator.Mode.COMPLETE, null);\n+\n+    BasePartitionEvaluator newPartitionEvaluator = udafEvaluator.getPartitionWindowingEvaluator(\n+        winFrame, partition1, parameters, outputOI);\n+\n+    Assert.assertNotEquals(partition1Evaluator1, newPartitionEvaluator);\n+  }\n+\n+}",
                "changes": 79
            }
        ],
        "unit_tests": [
            "TestGenericUDAFEvaluator.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "ql/src/test/org/apache/hadoop/hive/ql/udf/generic/TestGenericUDAFEvaluator.java",
        "buggy_files": [
            "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFEvaluator.java"
        ],
        "fixed": true
    }
]