{
    "turbine-fulcrum_16ea718": {
        "bug_id": "turbine-fulcrum_16ea718",
        "commit": "https://github.com/apache/turbine-fulcrum/commit/16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/Intake.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/Intake.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 3,
                "filename": "src/services/java/org/apache/fulcrum/intake/Intake.java",
                "patch": "@@ -63,7 +63,7 @@\n import org.apache.fulcrum.Log;\n import org.apache.fulcrum.pool.Recyclable;\n import org.apache.torque.om.Retrievable;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.model.Group;\n import org.apache.fulcrum.intake.TurbineIntake;\n \n@@ -78,7 +78,7 @@\n {\n     public static final String DEFAULT_KEY = \"_0\";\n     private HashMap groups;\n-    private ParameterParser pp;\n+    private ValueParser pp;\n \n     HashMap declaredGroups = new HashMap();\n     StringBuffer allGroupsSB = new StringBuffer(256);\n@@ -103,7 +103,7 @@ public Intake()\n     /**\n      * Prepares intake for a single request\n      */\n-    public void init(ParameterParser pp)\n+    public void init(ValueParser pp)\n     {\n         this.pp = pp;\n         String[] groupKeys = pp.getStrings(\"intake-grp\");",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/Intake.java",
                "sha": "206d2cdb5e095e5b828169b05534021b6f36f47f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/IntakeService.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/IntakeService.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 5,
                "filename": "src/services/java/org/apache/fulcrum/intake/IntakeService.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.lang.reflect.Method;\n import org.apache.fulcrum.ServiceException;\n import org.apache.fulcrum.pool.Recyclable;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.model.Group;\n \n /**\n@@ -98,28 +98,28 @@ public Group getGroup(String groupName)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for\n+     * then initialize it using the ValueParser looking for\n      * a NEW id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public Group getGroup(String groupName, ParameterParser pp)\n+    public Group getGroup(String groupName, ValueParser pp)\n         throws Exception;\n \n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for id.\n+     * then initialize it using the ValueParser looking for id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public Group getGroup(String groupName, ParameterParser pp, String id)\n+    public Group getGroup(String groupName, ValueParser pp, String id)\n         throws Exception;\n     */\n ",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/IntakeService.java",
                "sha": "308008f170df61c23e822b7e37226f3ea5803aa7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/TurbineIntake.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/TurbineIntake.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 4,
                "filename": "src/services/java/org/apache/fulcrum/intake/TurbineIntake.java",
                "patch": "@@ -93,15 +93,15 @@ public static Group getGroup(String groupName)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for\n+     * then initialize it using the ValueParser looking for\n      * a NEW id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public static Group getGroup(String groupName, ParameterParser pp)\n+    public static Group getGroup(String groupName, ValueParser pp)\n         throws Exception\n     {\n         return getService().getGroup(groupName, pp);\n@@ -110,15 +110,15 @@ public static Group getGroup(String groupName, ParameterParser pp)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for id.\n+     * then initialize it using the ValueParser looking for id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n     public static Group getGroup(String groupName,\n-                                 ParameterParser pp, String id)\n+                                 ValueParser pp, String id)\n         throws Exception\n     {\n         return getService().getGroup(groupName, pp, id);",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/TurbineIntake.java",
                "sha": "fa2db45eac8acac0ddb063fbd4bc60fa0cc00ff0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/BigDecimalField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "patch": "@@ -58,7 +58,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class BigDecimalField extends Field\n@@ -82,7 +82,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "sha": "ba96e6552f0ec891295241d81319bd8209bd5847",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/BooleanField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/BooleanField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/BooleanField.java",
                "patch": "@@ -56,7 +56,7 @@\n \n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n import org.apache.fulcrum.Log;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**\n  * Base class for Intake generated input processing classes.\n@@ -85,7 +85,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         setTestValue( pp.getBool(getKey()) );\n     }",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/BooleanField.java",
                "sha": "1a299a2a04cea923f7afe4b0d982b84bf834584d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/ComboKeyField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "patch": "@@ -55,7 +55,7 @@\n  */\n \n import java.util.Vector;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.torque.om.ComboKey;\n import org.apache.torque.om.ObjectKey;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n@@ -75,7 +75,7 @@ public ComboKeyField(XmlField field, Group group)\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         try\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "sha": "68e3b2e3dc934a849b44e360c0f24b21c9b2df38",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/Field.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/Field.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 6,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/Field.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.util.Map;\n import java.lang.reflect.Method;\n import org.apache.regexp.RE;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.torque.om.Retrievable;\n import org.apache.fulcrum.intake.TurbineIntake;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n@@ -109,7 +109,7 @@\n     private Object[] valArray; // for reflection\n \n     /** The object containing the request data */\n-    protected ParameterParser pp;\n+    protected ValueParser pp;\n \n     /**\n      * Constructs a field based on data in the xml specification\n@@ -180,11 +180,11 @@ else if ( className != null && className.indexOf('.') == -1 )\n      * if a value has been supplied for this field.  if so, the value\n      * is validated.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return a <code>Field</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public Field init(ParameterParser pp)\n+    public Field init(ValueParser pp)\n         throws ServiceException\n     {\n         this.pp = pp;\n@@ -404,7 +404,7 @@ public void setMessage(String message)\n     /**\n      * Compares request data with constraints and sets the valid flag.\n      */\n-    protected boolean validate(ParameterParser pp)\n+    protected boolean validate(ValueParser pp)\n     //    throws ServiceException\n     {\n         if ( isMultiValued  )\n@@ -476,7 +476,7 @@ else if ( set_flag )\n      * Compares request data with constraints and sets the valid flag.\n      * To be implemented in subclasses\n      */\n-    protected abstract void doSetValue(ParameterParser pp);\n+    protected abstract void doSetValue(ValueParser pp);\n \n \n ",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/Field.java",
                "sha": "7125ecd1124969e48cc67a12a1ab8a74dd8c7f31",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/FileItemField.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/FileItemField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 4,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/FileItemField.java",
                "patch": "@@ -57,6 +57,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.util.parser.ParameterParser;\n import org.apache.fulcrum.intake.validator.Validator;\n import org.apache.fulcrum.intake.validator.FileValidator;\n@@ -96,10 +97,19 @@ protected String getDefaultValidator()\n      * @return a <code>Field</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public Field init(ParameterParser pp)\n+    public Field init(ValueParser vp)\n         throws ServiceException\n     {\n-        this.pp = pp;\n+        try\n+        {\n+            this.pp = (ParameterParser)vp;\n+        }\n+        catch (ClassCastException e)\n+        {\n+            throw new ServiceException(\n+                \"FileItemFields can only be used with ParameterParser\");\n+        }\n+\n         valid_flag = true;\n \n         if ( pp.containsKey(getKey()) )\n@@ -115,9 +125,10 @@ public Field init(ParameterParser pp)\n     /**\n      * Compares request data with constraints and sets the valid flag.\n      */\n-    protected boolean validate(ParameterParser pp)\n+    protected boolean validate(ValueParser vp)\n     //    throws ServiceException\n     {\n+        ParameterParser pp = (ParameterParser)vp;        \n         if ( isMultiValued  )\n         {\n             FileItem[] ss = pp.getFileItems(getKey());\n@@ -185,8 +196,9 @@ else if ( set_flag )\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser vp)\n     {\n+        ParameterParser pp = (ParameterParser)vp;\n         if ( isMultiValued  )\n         {\n             setTestValue(pp.getFileItems(getKey()));",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/FileItemField.java",
                "sha": "09c05ceae1a90e21911de118ec7971391ee8126b",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/Group.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/Group.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 17,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/Group.java",
                "patch": "@@ -64,7 +64,7 @@\n import org.apache.fulcrum.intake.TurbineIntake;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n import org.apache.fulcrum.intake.xmlmodel.XmlGroup;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.ServiceException;\n import org.apache.fulcrum.pool.Recyclable;\n \n@@ -119,7 +119,7 @@\n     /**\n      * The object containing the request data\n      */\n-    protected ParameterParser pp;\n+    protected ValueParser pp;\n \n     /**\n      * A flag to help prevent duplicate hidden fields declaring this group.\n@@ -177,10 +177,10 @@ public Group(XmlGroup group)\n     /**\n      * Initializes the default Group using parameters.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return this Group\n      */\n-    public Group init(ParameterParser pp) throws ServiceException\n+    public Group init(ValueParser pp) throws ServiceException\n     {\n         return init(NEW, pp);\n     }\n@@ -192,7 +192,7 @@ public Group init(ParameterParser pp) throws ServiceException\n      * @param data a <code>RunData</code> value\n      * @return this Group\n      */\n-    public Group init(String key, ParameterParser pp)\n+    public Group init(String key, ValueParser pp)\n         throws ServiceException\n     {\n         this.oid = key;\n@@ -306,11 +306,11 @@ public String getObjectKey()\n     /**\n      * Describe <code>getObjects</code> method here.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return an <code>ArrayList</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public ArrayList getObjects(ParameterParser pp)\n+    public ArrayList getObjects(ValueParser pp)\n         throws ServiceException\n     {\n         ArrayList objs = null;\n@@ -413,20 +413,23 @@ public void getProperties(Object obj)\n      */\n     public void removeFromRequest()\n     {\n-        String[] groups = pp.getStrings(gid);\n-        if ( groups != null )\n+        if (pp != null)\n         {\n-            pp.remove(gid);\n-            for (int i=0; i<groups.length; i++)\n+            String[] groups = pp.getStrings(gid);\n+            if ( groups != null )\n             {\n-                if ( groups[i] != null && !groups[i].equals(oid) )\n+                pp.remove(gid);\n+                for (int i=0; i<groups.length; i++)\n                 {\n-                    pp.add(gid,groups[i]);\n+                    if ( groups[i] != null && !groups[i].equals(oid) )\n+                    {\n+                        pp.add(gid,groups[i]);\n+                    }\n+                }\n+                for (int i=fieldsArray.length-1; i>=0; i--)\n+                {\n+                    fieldsArray[i].removeFromRequest();\n                 }\n-            }\n-            for (int i=fieldsArray.length-1; i>=0; i--)\n-            {\n-                fieldsArray[i].removeFromRequest();\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/Group.java",
                "sha": "03289904fac3dba2c83c0563fb1adebf54f19dd2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/IntegerField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/IntegerField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/IntegerField.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class IntegerField extends Field\n@@ -82,7 +82,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/IntegerField.java",
                "sha": "15571566081294a6de1e5cb71cba0f34eb31a492",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/NumberKeyField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "patch": "@@ -59,7 +59,7 @@\n import org.apache.torque.om.ObjectKey;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class NumberKeyField extends Field\n@@ -86,7 +86,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "sha": "df9da25b0e8aba6aacaac9f64c226586e586fa3f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/StringField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/java/org/apache/fulcrum/intake/model/StringField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/java/org/apache/fulcrum/intake/model/StringField.java",
                "patch": "@@ -54,7 +54,7 @@\n  * <http://www.apache.org/>.\n  */\n \n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n \n /**\n@@ -74,7 +74,7 @@ public StringField(XmlField field, Group group)\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/java/org/apache/fulcrum/intake/model/StringField.java",
                "sha": "48dd4448516a7946bbed34797ad7f18747012d7b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/Intake.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/Intake.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 3,
                "filename": "src/services/org/apache/fulcrum/intake/Intake.java",
                "patch": "@@ -63,7 +63,7 @@\n import org.apache.fulcrum.Log;\n import org.apache.fulcrum.pool.Recyclable;\n import org.apache.torque.om.Retrievable;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.model.Group;\n import org.apache.fulcrum.intake.TurbineIntake;\n \n@@ -78,7 +78,7 @@\n {\n     public static final String DEFAULT_KEY = \"_0\";\n     private HashMap groups;\n-    private ParameterParser pp;\n+    private ValueParser pp;\n \n     HashMap declaredGroups = new HashMap();\n     StringBuffer allGroupsSB = new StringBuffer(256);\n@@ -103,7 +103,7 @@ public Intake()\n     /**\n      * Prepares intake for a single request\n      */\n-    public void init(ParameterParser pp)\n+    public void init(ValueParser pp)\n     {\n         this.pp = pp;\n         String[] groupKeys = pp.getStrings(\"intake-grp\");",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/Intake.java",
                "sha": "206d2cdb5e095e5b828169b05534021b6f36f47f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/IntakeService.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/IntakeService.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 5,
                "filename": "src/services/org/apache/fulcrum/intake/IntakeService.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.lang.reflect.Method;\n import org.apache.fulcrum.ServiceException;\n import org.apache.fulcrum.pool.Recyclable;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.model.Group;\n \n /**\n@@ -98,28 +98,28 @@ public Group getGroup(String groupName)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for\n+     * then initialize it using the ValueParser looking for\n      * a NEW id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public Group getGroup(String groupName, ParameterParser pp)\n+    public Group getGroup(String groupName, ValueParser pp)\n         throws Exception;\n \n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for id.\n+     * then initialize it using the ValueParser looking for id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public Group getGroup(String groupName, ParameterParser pp, String id)\n+    public Group getGroup(String groupName, ValueParser pp, String id)\n         throws Exception;\n     */\n ",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/IntakeService.java",
                "sha": "308008f170df61c23e822b7e37226f3ea5803aa7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/TurbineIntake.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/TurbineIntake.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 4,
                "filename": "src/services/org/apache/fulcrum/intake/TurbineIntake.java",
                "patch": "@@ -93,15 +93,15 @@ public static Group getGroup(String groupName)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for\n+     * then initialize it using the ValueParser looking for\n      * a NEW id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n-    public static Group getGroup(String groupName, ParameterParser pp)\n+    public static Group getGroup(String groupName, ValueParser pp)\n         throws Exception\n     {\n         return getService().getGroup(groupName, pp);\n@@ -110,15 +110,15 @@ public static Group getGroup(String groupName, ParameterParser pp)\n     /**\n      * Gets an instance of a named group either from the pool\n      * or by calling the Factory Service if the pool is empty and\n-     * then initialize it using the ParameterParser looking for id.\n+     * then initialize it using the ValueParser looking for id.\n      *\n      * @param groupName the name of the group.\n      * @param pp the request parameters that may contain matching keys\n      * @return a Group instance.\n      * @throws ServiceException if recycling fails.\n      * /\n     public static Group getGroup(String groupName,\n-                                 ParameterParser pp, String id)\n+                                 ValueParser pp, String id)\n         throws Exception\n     {\n         return getService().getGroup(groupName, pp, id);",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/TurbineIntake.java",
                "sha": "fa2db45eac8acac0ddb063fbd4bc60fa0cc00ff0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/BigDecimalField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "patch": "@@ -58,7 +58,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class BigDecimalField extends Field\n@@ -82,7 +82,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/BigDecimalField.java",
                "sha": "ba96e6552f0ec891295241d81319bd8209bd5847",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/BooleanField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/BooleanField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/BooleanField.java",
                "patch": "@@ -56,7 +56,7 @@\n \n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n import org.apache.fulcrum.Log;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**\n  * Base class for Intake generated input processing classes.\n@@ -85,7 +85,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         setTestValue( pp.getBool(getKey()) );\n     }",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/BooleanField.java",
                "sha": "1a299a2a04cea923f7afe4b0d982b84bf834584d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/ComboKeyField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "patch": "@@ -55,7 +55,7 @@\n  */\n \n import java.util.Vector;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.torque.om.ComboKey;\n import org.apache.torque.om.ObjectKey;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n@@ -75,7 +75,7 @@ public ComboKeyField(XmlField field, Group group)\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         try\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/ComboKeyField.java",
                "sha": "68e3b2e3dc934a849b44e360c0f24b21c9b2df38",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/Field.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/Field.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 6,
                "filename": "src/services/org/apache/fulcrum/intake/model/Field.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.util.Map;\n import java.lang.reflect.Method;\n import org.apache.regexp.RE;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.torque.om.Retrievable;\n import org.apache.fulcrum.intake.TurbineIntake;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n@@ -109,7 +109,7 @@\n     private Object[] valArray; // for reflection\n \n     /** The object containing the request data */\n-    protected ParameterParser pp;\n+    protected ValueParser pp;\n \n     /**\n      * Constructs a field based on data in the xml specification\n@@ -180,11 +180,11 @@ else if ( className != null && className.indexOf('.') == -1 )\n      * if a value has been supplied for this field.  if so, the value\n      * is validated.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return a <code>Field</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public Field init(ParameterParser pp)\n+    public Field init(ValueParser pp)\n         throws ServiceException\n     {\n         this.pp = pp;\n@@ -404,7 +404,7 @@ public void setMessage(String message)\n     /**\n      * Compares request data with constraints and sets the valid flag.\n      */\n-    protected boolean validate(ParameterParser pp)\n+    protected boolean validate(ValueParser pp)\n     //    throws ServiceException\n     {\n         if ( isMultiValued  )\n@@ -476,7 +476,7 @@ else if ( set_flag )\n      * Compares request data with constraints and sets the valid flag.\n      * To be implemented in subclasses\n      */\n-    protected abstract void doSetValue(ParameterParser pp);\n+    protected abstract void doSetValue(ValueParser pp);\n \n \n ",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/Field.java",
                "sha": "7125ecd1124969e48cc67a12a1ab8a74dd8c7f31",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/FileItemField.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/FileItemField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 4,
                "filename": "src/services/org/apache/fulcrum/intake/model/FileItemField.java",
                "patch": "@@ -57,6 +57,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.util.parser.ParameterParser;\n import org.apache.fulcrum.intake.validator.Validator;\n import org.apache.fulcrum.intake.validator.FileValidator;\n@@ -96,10 +97,19 @@ protected String getDefaultValidator()\n      * @return a <code>Field</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public Field init(ParameterParser pp)\n+    public Field init(ValueParser vp)\n         throws ServiceException\n     {\n-        this.pp = pp;\n+        try\n+        {\n+            this.pp = (ParameterParser)vp;\n+        }\n+        catch (ClassCastException e)\n+        {\n+            throw new ServiceException(\n+                \"FileItemFields can only be used with ParameterParser\");\n+        }\n+\n         valid_flag = true;\n \n         if ( pp.containsKey(getKey()) )\n@@ -115,9 +125,10 @@ public Field init(ParameterParser pp)\n     /**\n      * Compares request data with constraints and sets the valid flag.\n      */\n-    protected boolean validate(ParameterParser pp)\n+    protected boolean validate(ValueParser vp)\n     //    throws ServiceException\n     {\n+        ParameterParser pp = (ParameterParser)vp;        \n         if ( isMultiValued  )\n         {\n             FileItem[] ss = pp.getFileItems(getKey());\n@@ -185,8 +196,9 @@ else if ( set_flag )\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser vp)\n     {\n+        ParameterParser pp = (ParameterParser)vp;\n         if ( isMultiValued  )\n         {\n             setTestValue(pp.getFileItems(getKey()));",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/FileItemField.java",
                "sha": "09c05ceae1a90e21911de118ec7971391ee8126b",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/Group.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/Group.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 17,
                "filename": "src/services/org/apache/fulcrum/intake/model/Group.java",
                "patch": "@@ -64,7 +64,7 @@\n import org.apache.fulcrum.intake.TurbineIntake;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n import org.apache.fulcrum.intake.xmlmodel.XmlGroup;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.ServiceException;\n import org.apache.fulcrum.pool.Recyclable;\n \n@@ -119,7 +119,7 @@\n     /**\n      * The object containing the request data\n      */\n-    protected ParameterParser pp;\n+    protected ValueParser pp;\n \n     /**\n      * A flag to help prevent duplicate hidden fields declaring this group.\n@@ -177,10 +177,10 @@ public Group(XmlGroup group)\n     /**\n      * Initializes the default Group using parameters.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return this Group\n      */\n-    public Group init(ParameterParser pp) throws ServiceException\n+    public Group init(ValueParser pp) throws ServiceException\n     {\n         return init(NEW, pp);\n     }\n@@ -192,7 +192,7 @@ public Group init(ParameterParser pp) throws ServiceException\n      * @param data a <code>RunData</code> value\n      * @return this Group\n      */\n-    public Group init(String key, ParameterParser pp)\n+    public Group init(String key, ValueParser pp)\n         throws ServiceException\n     {\n         this.oid = key;\n@@ -306,11 +306,11 @@ public String getObjectKey()\n     /**\n      * Describe <code>getObjects</code> method here.\n      *\n-     * @param pp a <code>ParameterParser</code> value\n+     * @param pp a <code>ValueParser</code> value\n      * @return an <code>ArrayList</code> value\n      * @exception ServiceException if an error occurs\n      */\n-    public ArrayList getObjects(ParameterParser pp)\n+    public ArrayList getObjects(ValueParser pp)\n         throws ServiceException\n     {\n         ArrayList objs = null;\n@@ -413,20 +413,23 @@ public void getProperties(Object obj)\n      */\n     public void removeFromRequest()\n     {\n-        String[] groups = pp.getStrings(gid);\n-        if ( groups != null )\n+        if (pp != null)\n         {\n-            pp.remove(gid);\n-            for (int i=0; i<groups.length; i++)\n+            String[] groups = pp.getStrings(gid);\n+            if ( groups != null )\n             {\n-                if ( groups[i] != null && !groups[i].equals(oid) )\n+                pp.remove(gid);\n+                for (int i=0; i<groups.length; i++)\n                 {\n-                    pp.add(gid,groups[i]);\n+                    if ( groups[i] != null && !groups[i].equals(oid) )\n+                    {\n+                        pp.add(gid,groups[i]);\n+                    }\n+                }\n+                for (int i=fieldsArray.length-1; i>=0; i--)\n+                {\n+                    fieldsArray[i].removeFromRequest();\n                 }\n-            }\n-            for (int i=fieldsArray.length-1; i>=0; i--)\n-            {\n-                fieldsArray[i].removeFromRequest();\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/Group.java",
                "sha": "03289904fac3dba2c83c0563fb1adebf54f19dd2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/IntegerField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/IntegerField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/IntegerField.java",
                "patch": "@@ -57,7 +57,7 @@\n import java.util.Vector;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class IntegerField extends Field\n@@ -82,7 +82,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/IntegerField.java",
                "sha": "15571566081294a6de1e5cb71cba0f34eb31a492",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/NumberKeyField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "patch": "@@ -59,7 +59,7 @@\n import org.apache.torque.om.ObjectKey;\n import org.apache.fulcrum.intake.xmlmodel.Rule;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n \n /**  */\n public class NumberKeyField extends Field\n@@ -86,7 +86,7 @@ protected String getDefaultValidator()\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued  )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/NumberKeyField.java",
                "sha": "df9da25b0e8aba6aacaac9f64c226586e586fa3f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/StringField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/services/org/apache/fulcrum/intake/model/StringField.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 2,
                "filename": "src/services/org/apache/fulcrum/intake/model/StringField.java",
                "patch": "@@ -54,7 +54,7 @@\n  * <http://www.apache.org/>.\n  */\n \n-import org.apache.fulcrum.util.parser.ParameterParser;\n+import org.apache.fulcrum.util.parser.ValueParser;\n import org.apache.fulcrum.intake.xmlmodel.XmlField;\n \n /**\n@@ -74,7 +74,7 @@ public StringField(XmlField field, Group group)\n     /**\n      * converts the parameter to the correct Object.\n      */\n-    protected void doSetValue(ParameterParser pp)\n+    protected void doSetValue(ValueParser pp)\n     {\n         if ( isMultiValued )\n         {",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/services/org/apache/fulcrum/intake/model/StringField.java",
                "sha": "48dd4448516a7946bbed34797ad7f18747012d7b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/util/java/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/util/java/org/apache/fulcrum/util/parser/DefaultParameterParser.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 0,
                "filename": "src/util/java/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "patch": "@@ -221,6 +221,9 @@ public void setRequest(HttpServletRequest req)\n         // if they are query string data.\n         try\n         {\n+            // the lines below can be substituted with the method\n+            // parse(req.getPathInfo(), '/', true);\n+            // if DefaultParameterParser extended StringParser\n             StringTokenizer st = new StringTokenizer(req.getPathInfo(), \"/\");\n             boolean isNameTok = true;\n             String pathPart = null;",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/util/java/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "sha": "db11776ffa3ce3b6b2289d4210e9f647dbcf22e4",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/util/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/src/util/org/apache/fulcrum/util/parser/DefaultParameterParser.java?ref=16ea71868dc4a141b7db0731d23d00f5d5e5b22e",
                "deletions": 0,
                "filename": "src/util/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "patch": "@@ -221,6 +221,9 @@ public void setRequest(HttpServletRequest req)\n         // if they are query string data.\n         try\n         {\n+            // the lines below can be substituted with the method\n+            // parse(req.getPathInfo(), '/', true);\n+            // if DefaultParameterParser extended StringParser\n             StringTokenizer st = new StringTokenizer(req.getPathInfo(), \"/\");\n             boolean isNameTok = true;\n             String pathPart = null;",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/16ea71868dc4a141b7db0731d23d00f5d5e5b22e/src/util/org/apache/fulcrum/util/parser/DefaultParameterParser.java",
                "sha": "db11776ffa3ce3b6b2289d4210e9f647dbcf22e4",
                "status": "modified"
            }
        ],
        "message": "base most of Intake on a ValueParser as ParameterParser is only needed for\nFileItemField, so the rest of intake is applicable to non http specific\nparameters.\n\nalso fixed an npe in Group.removeFromRequest\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/turbine/fulcrum/trunk@222171 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/turbine-fulcrum/commit/cefc67b4d764197422633ee9deecf7e4b2827534",
        "patched_files": [
            "IntakeService.java",
            "Intake.java"
        ],
        "repo": "turbine-fulcrum",
        "unit_tests": [
            "IntakeServiceTest.java",
            "IntakeTest.java"
        ]
    },
    "turbine-fulcrum_2c9cba8": {
        "bug_id": "turbine-fulcrum_2c9cba8",
        "commit": "https://github.com/apache/turbine-fulcrum/commit/2c9cba8bc7356493414cef0f07b3b04600b77442",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/turbine-fulcrum/blob/2c9cba8bc7356493414cef0f07b3b04600b77442/testcontainer/src/java/org/apache/fulcrum/testcontainer/BaseUnitTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/turbine-fulcrum/contents/testcontainer/src/java/org/apache/fulcrum/testcontainer/BaseUnitTest.java?ref=2c9cba8bc7356493414cef0f07b3b04600b77442",
                "deletions": 0,
                "filename": "testcontainer/src/java/org/apache/fulcrum/testcontainer/BaseUnitTest.java",
                "patch": "@@ -99,6 +99,10 @@ public BaseUnitTest(String testName)\n \t */\n     protected void tearDown()\n     {\n+        if (container != null)\n+        {\n+            container.dispose();\n+        }\n         container = null;\n     }\n     /**",
                "raw_url": "https://github.com/apache/turbine-fulcrum/raw/2c9cba8bc7356493414cef0f07b3b04600b77442/testcontainer/src/java/org/apache/fulcrum/testcontainer/BaseUnitTest.java",
                "sha": "3918de2fda3ff3e3cf0b766430b84d52186468f7",
                "status": "modified"
            }
        ],
        "message": "Patch from Ronald to prevent NPE when disposing of the container.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/turbine/fulcrum/trunk@222917 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/turbine-fulcrum/commit/8efc6d392f305d34f0315d1b752b63c1b81291b3",
        "patched_files": [],
        "repo": "turbine-fulcrum",
        "unit_tests": [
            "BaseUnitTest.java"
        ]
    }
}