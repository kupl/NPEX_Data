[
    {
        "repo": "isis",
        "commit": "https://github.com/apache/isis/commit/07d99321cdcb894d26e0f1b61d78195c7f83809c",
        "bug_id": "isis_07d9932",
        "message": "ISIS-210: choices with param types now also supported.\n\n* changes to ObjectActionParameterContributee subtypes and ActionParameterChoicesFacet to support choices taking parameter types\n* refactored to simplify impl of defaults also\n\nin addition:\n* updated ToDo example, factored out ToDoItemContributions to demonstrate usage with a new \"updateCategory\" action\n* combined ToDoItemsJdo with ToDoItems service\n* new installAndReturnFirst() prototype action\n\nalso:\n* fixed minor issue with wicket dropdown; the current value must be in the list of choices, else will NPE, so adds automatically\n* enhanced rendering of actions to show @DescribedAs as a title",
        "parent": "https://github.com/apache/isis/commit/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6",
        "patched_files": [
            "pom.xml",
            "isis.properties",
            "ObjectActionImpl.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 26,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "deletions": 5,
                "sha": "413abfbb8c733122df474ada8da0fef60163a810",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "patch": "@@ -45,6 +45,7 @@\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.core.metamodel.consent.Consent;\n+import org.apache.isis.core.metamodel.facets.describedas.DescribedAsFacet;\n import org.apache.isis.core.metamodel.facets.members.cssclass.CssClassFacet;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n@@ -94,6 +95,10 @@ public Builder parent(final CssMenuItem parent) {\n             return this;\n         }\n \n+        public Builder describedAs(String descriptionIfAny) {\n+            cssMenuItem.setDescription(descriptionIfAny);\n+            return this;\n+        }\n \n         public Builder returnsBlobOrClob(boolean blobOrClob) {\n             cssMenuItem.setReturnsBlobOrClob(blobOrClob);\n@@ -133,6 +138,7 @@ public CssMenuItem build() {\n             }\n             return cssMenuItem;\n         }\n+\n     }\n \n     private final String name;\n@@ -152,6 +158,8 @@ public CssMenuItem build() {\n     private String actionIdentifier;\n     private String cssClass;\n \n+    private String description;\n+\n \n \n     /**\n@@ -161,6 +169,7 @@ public static Builder newMenuItem(final String name) {\n         return new Builder(name);\n     }\n \n+\n     public void setActionIdentifier(String actionIdentifier) {\n         this.actionIdentifier = actionIdentifier;\n     }\n@@ -218,7 +227,6 @@ public void setReturnsBlobOrClob(boolean blobOrClob) {\n         this.blobOrClob = blobOrClob;\n     }\n \n-\n     /**\n      * Only populated if not {@link #isEnabled() enabled}.\n      */\n@@ -230,6 +238,13 @@ public void setDisabledReason(final String disabledReason) {\n         this.disabledReason = disabledReason;\n     }\n \n+    public String getDescription() {\n+        return description;\n+    }\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n     // //////////////////////////////////////////////////////////////\n     // To add submenu items\n     // //////////////////////////////////////////////////////////////\n@@ -267,18 +282,21 @@ public Builder newSubMenuItem(final ObjectAdapterMemento targetAdapterMemento, f\n         final AbstractLink link = linkAndLabel.getLink();\n         final String actionLabel = linkAndLabel.getLabel();\n \n-        // check whether enabled\n         final Consent usability = objectAction.isUsable(session, adapter, where);\n         final String reasonDisabledIfAny = usability.getReason();\n-        CssClassFacet cssClassFacet = objectAction.getFacet(CssClassFacet.class);\n+        \n+        final DescribedAsFacet describedAsFacet = objectAction.getFacet(DescribedAsFacet.class);\n+        final String descriptionIfAny = describedAsFacet != null? describedAsFacet.value(): null;\n+        \n+        final CssClassFacet cssClassFacet = objectAction.getFacet(CssClassFacet.class);\n \n-        // check if returns blob or clob (if so, then add CSS to suppress veil)\n         final boolean blobOrClob = returnsBlobOrClob(objectAction);\n         final boolean prototype = isExplorationOrPrototype(objectAction);\n         final String actionIdentifier = actionIdentifierFor(objectAction);\n \n         Builder builder = newSubMenuItem(actionLabel)\n                 .link(link)\n+                .describedAs(descriptionIfAny)\n                 .enabled(reasonDisabledIfAny)\n                 .returnsBlobOrClob(blobOrClob)\n                 .prototyping(prototype)\n@@ -357,7 +375,10 @@ private Component addMenuItemComponentTo(final MarkupContainer markupContainer)\n             // show link...\n             markupContainer.add(link);\n             link.add(label);\n-            \n+\n+            if(this.description != null) {\n+                label.add(new AttributeModifier(\"title\", Model.of(description)));\n+            }\n             if(this.blobOrClob) {\n                 link.add(new CssClassAppender(\"noVeil\"));\n             }",
                "changes": 31
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "deletions": 0,
                "sha": "e7117808115b8790f102d48348019d1a97f474e7",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "patch": "@@ -229,6 +229,12 @@ protected void onBeforeRenderWhenEnabled() { // Edit: read/write\n         // take a copy otherwise is only lazily evaluated\n         final List<ObjectAdapterMemento> choicesMementos = Lists.newArrayList(Lists.transform(choices, Mementos.fromAdapter()));\n         \n+        final ObjectAdapterMemento currentValue = getModel().getObjectAdapterMemento();\n+        if(currentValue != null && !choicesMementos.contains(currentValue)) {\n+            choicesMementos.add(currentValue);\n+        }\n+        \n+\n         return new ModelAbstract<List<ObjectAdapterMemento>>(choicesMementos){\n             private static final long serialVersionUID = 1L;\n ",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java",
                "deletions": 1,
                "sha": "4e4011452758bee39cfa66efbf867cd70b451e14",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java",
                "patch": "@@ -32,5 +32,5 @@\n  */\n public interface ActionParameterChoicesFacet extends Facet {\n \n-    public Object[] getChoices(ObjectAdapter inObject);\n+    public Object[] getChoices(ObjectAdapter target, ObjectAdapter[] arguments);\n }",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java",
                "deletions": 1,
                "sha": "deeaa23a37c8ca803b601a377a74e6b1837578df",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java",
                "patch": "@@ -443,7 +443,7 @@ private ObjectAdapter adapterFor(final Object pojo) {\n             for (int i = 0; i < parameterCount; i++) {\n                 final ActionParameterChoicesFacet paramFacet = parameters.get(i).getFacet(ActionParameterChoicesFacet.class);\n                 if (paramFacet != null && !paramFacet.isNoop()) {\n-                    parameterChoicesPojos[i] = paramFacet.getChoices(target);\n+                    parameterChoicesPojos[i] = paramFacet.getChoices(target, null);\n                 } else {\n                     parameterChoicesPojos[i] = new Object[0];\n                 }",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 97,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "deletions": 62,
                "sha": "1da4772fbbe3b874084cbcba8dd5c0c825b3e659",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "patch": "@@ -244,40 +244,10 @@ public void removeFacet(final Class<? extends Facet> facetType) {\n         }\n     }\n \n-    // //////////////////////////////////////////////////////////\n-    // Interaction\n-    // //////////////////////////////////////////////////////////\n-\n-    @Override\n-    public ActionArgumentContext createProposedArgumentInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObject, final ObjectAdapter[] proposedArguments, final int position) {\n-        return new ActionArgumentContext(getDeploymentCategory(), getAuthenticationSession(), invocationMethod, targetObject, getIdentifier(), proposedArguments, position);\n-    }\n \n-\n-    @Override\n-    public boolean hasChoices() {\n-        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n-\n-        return choicesFacet != null || BoundedFacetUtils.isBoundedSet(getSpecification());\n-    }\n-\n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        final List<ObjectAdapter> parameterChoices = Lists.newArrayList();\n-        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n-\n-        if (choicesFacet != null) {\n-            final Object[] choices = choicesFacet.getChoices(adapter);\n-            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n-            for (final Object choice : choices) {\n-                parameterChoices.add(getAdapterMap().adapterFor(choice));\n-            }\n-        }\n-        if (parameterChoices.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n-            addParameterChoicesForBounded(parameterChoices);\n-        }\n-        return parameterChoices.toArray(new ObjectAdapter[0]);\n-    }\n+    // /////////////////////////////////////////////////////////////\n+    // AutoComplete\n+    // /////////////////////////////////////////////////////////////\n \n     @Override\n     public boolean hasAutoComplete() {\n@@ -287,20 +257,20 @@ public boolean hasAutoComplete() {\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n-        final List<ObjectAdapter> autoCompleteChoiceAdapters = Lists.newArrayList();\n+        final List<ObjectAdapter> adapters = Lists.newArrayList();\n         final ActionParameterAutoCompleteFacet facet = getFacet(ActionParameterAutoCompleteFacet.class);\n \n         if (facet != null) {\n-            final Object[] autoCompleteChoices = facet.autoComplete(adapter, searchArg);\n-            checkChoicesOrAutoCompleteType(getSpecificationLookup(), autoCompleteChoices, getSpecification());\n-            for (final Object autoCompleteChoice : autoCompleteChoices) {\n-                autoCompleteChoiceAdapters.add(getAdapterMap().adapterFor(autoCompleteChoice));\n+            final Object[] choices = facet.autoComplete(adapter, searchArg);\n+            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n+            for (final Object choice : choices) {\n+                adapters.add(getAdapterMap().adapterFor(choice));\n             }\n         }\n-        if (autoCompleteChoiceAdapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n-            addParameterChoicesForBounded(autoCompleteChoiceAdapters);\n+        if (adapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n+            addAllInstancesForType(adapters);\n         }\n-        return autoCompleteChoiceAdapters.toArray(new ObjectAdapter[0]);\n+        return adapters.toArray(new ObjectAdapter[0]);\n     }\n \n     @Override\n@@ -309,54 +279,115 @@ public int getAutoCompleteMinLength() {\n         return facet != null? facet.getMinLength(): MinLengthUtil.MIN_LENGTH_DEFAULT;\n     }\n \n-    private <T> void addParameterChoicesForBounded(final List<ObjectAdapter> parameterChoices) {\n-        final Query<T> query = new QueryFindAllInstances<T>(getSpecification().getFullIdentifier());\n-        final List<ObjectAdapter> allInstancesAdapter = getQuerySubmitter().allMatchingQuery(query);\n-        for (final ObjectAdapter choiceAdapter : allInstancesAdapter) {\n-            parameterChoices.add(choiceAdapter);\n-        }\n+\n+    // /////////////////////////////////////////////////////////////\n+    // Choices\n+    // /////////////////////////////////////////////////////////////\n+\n+    @Override\n+    public boolean hasChoices() {\n+        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n+        return choicesFacet != null || BoundedFacetUtils.isBoundedSet(getSpecification());\n     }\n \n-    protected static void checkChoicesOrAutoCompleteType(final SpecificationLoader specificationLookup, final Object[] objects, final ObjectSpecification paramSpec) {\n-        for (final Object object : objects) {\n-            final ObjectSpecification componentSpec = specificationLookup.loadSpecification(object.getClass());\n-            if (!componentSpec.isOfType(paramSpec)) {\n-                throw new DomainModelException(\"Type incompatible with parameter type; expected \" + paramSpec.getFullIdentifier() + \", but was \" + componentSpec.getFullIdentifier());\n+    @Override\n+    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n+        final ObjectAdapter target = targetForDefaultOrChoices(adapter);\n+        final ObjectAdapter[] args = argsForDefaultOrChoices(adapter);\n+        \n+        return getChoices(target, args);\n+    }\n+\n+    private ObjectAdapter[] getChoices(final ObjectAdapter target, final ObjectAdapter[] args) {\n+        final List<ObjectAdapter> adapters = Lists.newArrayList();\n+        final ActionParameterChoicesFacet facet = getFacet(ActionParameterChoicesFacet.class);\n+\n+        if (facet != null) {\n+            final Object[] choices = facet.getChoices(target, args);\n+            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n+            for (final Object choice : choices) {\n+                adapters.add(getAdapterMap().adapterFor(choice));\n             }\n         }\n+        if (adapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n+            addAllInstancesForType(adapters);\n+        }\n+        return adapters.toArray(new ObjectAdapter[0]);\n     }\n+    \n+    // /////////////////////////////////////////////////////////////\n+    // Defaults\n+    // /////////////////////////////////////////////////////////////\n \n     @Override\n     public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        if (false /*parentAction.isContributed()*/ && adapter != null) {\n-            if (adapter.getSpecification().isOfType(getSpecification())) {\n-                return adapter;\n-            }\n-        }\n+        \n+        final ObjectAdapter target = targetForDefaultOrChoices(adapter);;\n+        final ObjectAdapter[] args = argsForDefaultOrChoices(adapter);\n+        \n+        return getDefault(target, args);\n+    }\n+\n+    private ObjectAdapter getDefault(\n+            final ObjectAdapter target, \n+            final ObjectAdapter[] args) {\n         final ActionParameterDefaultsFacet defaultsFacet = getFacet(ActionParameterDefaultsFacet.class);\n         if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(adapter, null);\n+            final Object dflt = defaultsFacet.getDefault(target, args);\n             if (dflt == null) {\n                 // it's possible that even though there is a default facet, when\n-                // invoked it\n-                // is unable to return a default.\n+                // invoked it is unable to return a default.\n                 return null;\n             }\n             return getAdapterMap().adapterFor(dflt);\n         }\n         return null;\n     }\n \n-    protected AuthenticationSession getAuthenticationSession() {\n-        return getAuthenticationSessionProvider().getAuthenticationSession();\n+    /**\n+     * Hook method; {@link ObjectActionParameterContributee contributed action parameter}s override.\n+     */\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return adapter;\n+    }\n+\n+    /**\n+     * Hook method; {@link ObjectActionParameterContributee contributed action parameter}s override.\n+     */\n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n+        return null;\n     }\n \n     \n+    // helpers\n+\n+    static void checkChoicesOrAutoCompleteType(final SpecificationLoader specificationLookup, final Object[] objects, final ObjectSpecification paramSpec) {\n+        for (final Object object : objects) {\n+            final ObjectSpecification componentSpec = specificationLookup.loadSpecification(object.getClass());\n+            if (!componentSpec.isOfType(paramSpec)) {\n+                throw new DomainModelException(\"Type incompatible with parameter type; expected \" + paramSpec.getFullIdentifier() + \", but was \" + componentSpec.getFullIdentifier());\n+            }\n+        }\n+    }\n+\n+    private <T> void addAllInstancesForType(final List<ObjectAdapter> adapters) {\n+        final Query<T> query = new QueryFindAllInstances<T>(getSpecification().getFullIdentifier());\n+        final List<ObjectAdapter> allInstancesAdapter = getQuerySubmitter().allMatchingQuery(query);\n+        for (final ObjectAdapter choiceAdapter : allInstancesAdapter) {\n+            adapters.add(choiceAdapter);\n+        }\n+    }\n+\n     \n     // /////////////////////////////////////////////////////////////\n     // Validation\n     // /////////////////////////////////////////////////////////////\n \n+    @Override\n+    public ActionArgumentContext createProposedArgumentInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObject, final ObjectAdapter[] proposedArguments, final int position) {\n+        return new ActionArgumentContext(getDeploymentCategory(), getAuthenticationSession(), invocationMethod, targetObject, getIdentifier(), proposedArguments, position);\n+    }\n+\n     @Override\n     public String isValid(final ObjectAdapter adapter, final Object proposedValue, final Localization localization) {\n         \n@@ -435,4 +466,8 @@ protected QuerySubmitter getQuerySubmitter() {\n         return parentAction.getQuerySubmitter();\n     }\n \n+    protected AuthenticationSession getAuthenticationSession() {\n+        return getAuthenticationSessionProvider().getAuthenticationSession();\n+    }\n+\n }",
                "changes": 159
            },
            {
                "status": "modified",
                "additions": 19,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java",
                "deletions": 24,
                "sha": "cad997b34b6d6cb03bfaa0e55ac4ecb902fdff89",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java",
                "patch": "@@ -16,7 +16,13 @@\n  */\n package org.apache.isis.core.metamodel.specloader.specimpl;\n \n+import java.util.List;\n+\n+import com.google.common.collect.Lists;\n+\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n+import org.apache.isis.core.metamodel.facets.object.bounded.BoundedFacetUtils;\n+import org.apache.isis.core.metamodel.facets.param.choices.ActionParameterChoicesFacet;\n import org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet;\n import org.apache.isis.core.metamodel.spec.feature.ObjectActionParameter;\n \n@@ -33,50 +39,39 @@\n     private final ObjectActionParameter serviceActionParameter;\n     @SuppressWarnings(\"unused\")\n     private final int serviceParamNumber;\n-    private final ObjectActionContributee objectAction;\n+    @SuppressWarnings(\"unused\")\n+    private final int contributeeParamNumber;\n+    private final ObjectActionContributee contributeeAction;\n \n     public ObjectActionParameterParseableContributee(\n             final ObjectAdapter serviceAdapter,\n             final ObjectActionImpl serviceAction,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int serviceParamNumber,\n-            final int number,\n-            final ObjectActionContributee objectAction) {\n-        super(number, objectAction, serviceActionParameter.getPeer());\n+            final int contributeeParamNumber,\n+            final ObjectActionContributee contributeeAction) {\n+        super(contributeeParamNumber, contributeeAction, serviceActionParameter.getPeer());\n         this.serviceAdapter = serviceAdapter;\n         this.serviceAction = serviceAction;\n         this.serviceActionParameter = serviceActionParameter;\n         this.serviceParamNumber = serviceParamNumber;\n-        this.objectAction = objectAction;\n+        this.contributeeParamNumber = contributeeParamNumber;\n+        this.contributeeAction = contributeeAction;\n     }\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n         return serviceActionParameter.getAutoComplete(serviceAdapter, searchArg);\n     }\n \n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        return serviceActionParameter.getChoices(serviceAdapter);\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return serviceAdapter;\n     }\n \n-    @Override\n-    public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        \n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n         ObjectAdapter[] args = new ObjectAdapter[serviceAction.getParameterCount()];\n-        args[objectAction.getContributeeParam()] = adapter;\n-        \n-        final ActionParameterDefaultsFacet defaultsFacet = serviceActionParameter.getFacet(ActionParameterDefaultsFacet.class);\n-        if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(serviceAdapter, args);\n-            if (dflt == null) {\n-                return null;\n-            }\n-            return getAdapterMap().adapterFor(dflt);\n-        }\n-        return null;\n+        args[contributeeAction.getContributeeParam()] = adapter;\n+        return args;\n     }\n-\n-    \n     \n }",
                "changes": 43
            },
            {
                "status": "modified",
                "additions": 13,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "deletions": 22,
                "sha": "b706a1c842dfdaa26727ed9ab35cad99f9d8da70",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "patch": "@@ -27,48 +27,39 @@\n     private final ObjectActionParameter serviceActionParameter;\n     @SuppressWarnings(\"unused\")\n     private final int serviceParamNumber;\n-    private final ObjectActionContributee objectAction;\n+    @SuppressWarnings(\"unused\")\n+    private final int contributeeParamNumber;\n+    private final ObjectActionContributee contributeeAction;\n \n     public OneToOneActionParameterContributee(\n             final ObjectAdapter serviceAdapter,\n             final ObjectActionImpl serviceAction,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int serviceParamNumber,\n-            final int number,\n-            final ObjectActionContributee objectAction) {\n-        super(number, objectAction, serviceActionParameter.getPeer());\n+            final int contributeeParamNumber,\n+            final ObjectActionContributee contributeeAction) {\n+        super(contributeeParamNumber, contributeeAction, serviceActionParameter.getPeer());\n         this.serviceAdapter = serviceAdapter;\n         this.serviceAction = serviceAction;\n         this.serviceActionParameter = serviceActionParameter;\n         this.serviceParamNumber = serviceParamNumber;\n-        this.objectAction = objectAction;\n+        this.contributeeParamNumber = contributeeParamNumber;\n+        this.contributeeAction = contributeeAction;\n     }\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n         return serviceActionParameter.getAutoComplete(serviceAdapter, searchArg);\n     }\n \n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        return serviceActionParameter.getChoices(serviceAdapter);\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return serviceAdapter;\n     }\n \n-    @Override\n-    public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        \n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n         ObjectAdapter[] args = new ObjectAdapter[serviceAction.getParameterCount()];\n-        args[objectAction.getContributeeParam()] = serviceAdapter;\n-        \n-        final ActionParameterDefaultsFacet defaultsFacet = serviceActionParameter.getFacet(ActionParameterDefaultsFacet.class);\n-        if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(serviceAdapter, args);\n-            if (dflt == null) {\n-                return null;\n-            }\n-            return getAdapterMap().adapterFor(dflt);\n-        }\n-        return null;\n+        args[contributeeAction.getContributeeParam()] = adapter;\n+        return args;\n     }\n \n }",
                "changes": 35
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java",
                "deletions": 1,
                "sha": "ae1112ea25f472ee06b5addef38307bb198a05fe",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java",
                "patch": "@@ -31,7 +31,7 @@ public ActionParameterChoicesFacetNone(final FacetHolder holder, final Specifica\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter inObject) {\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n         return new ObjectAdapter[0];\n     }\n ",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java",
                "deletions": 1,
                "sha": "872d2748863a0a4beecef9065e974f3c7474fa8b",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java",
                "patch": "@@ -35,7 +35,7 @@ public ActionParameterChoicesFacetDerivedFromChoicesFacet(final FacetHolder hold\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter adapter) {\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n         final FacetHolder facetHolder = getFacetHolder();\n         final TypedHolder paramPeer = (TypedHolder) facetHolder;\n         final ObjectSpecification noSpec = getSpecification(paramPeer.getType());",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java",
                "deletions": 2,
                "sha": "12a9279df0c3346a1f9250f78f874f81dd1e9153",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java",
                "patch": "@@ -65,8 +65,8 @@ public boolean impliesObjectChanged() {\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter owningAdapter) {\n-        final Object options = AdapterInvokeUtils.invoke(method, owningAdapter);\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n+        final Object options = AdapterInvokeUtils.invoke(method, adapter, arguments);\n         if (options == null) {\n             return new Object[0];\n         }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/pom.xml?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
                "deletions": 1,
                "sha": "7ff951b695f5a312de739c876bf52b339be25e0b",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
                "patch": "@@ -111,7 +111,7 @@\n \t\t<dependency>\n             <groupId>org.apache.isis.core</groupId>\n \t\t\t<artifactId>isis-core-unittestsupport</artifactId>\n-            <scope>true</scope>\n+            <scope>test</scope>\n \t\t</dependency>\n \n         <!--",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java",
                "deletions": 0,
                "sha": "fb4b89b378bb007c39548fd2f1e4fb4409fca61d",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java",
                "patch": "@@ -31,6 +31,10 @@ public ToDoItemPayload(ToDoItem changed) {\n             super(changed);\n         }\n         \n+        /**\n+         * Expose the item's {@link ToDoItem#getDescription() description} more explicitly\n+         * in the payload.\n+         */\n         public String getDescription() {\n             return getChanged().getDescription();\n         }",
                "changes": 4
            },
            {
                "status": "added",
                "additions": 181,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "deletions": 0,
                "sha": "4d91bd17a42b2b392a85dc303c5517e761872672",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "patch": "@@ -0,0 +1,181 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package dom.todo;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.google.common.base.Function;\n+import com.google.common.base.Objects;\n+import com.google.common.base.Predicate;\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Ordering;\n+\n+import dom.todo.ToDoItem.Category;\n+\n+import org.joda.time.LocalDate;\n+\n+import org.apache.isis.applib.AbstractFactoryAndRepository;\n+import org.apache.isis.applib.annotation.ActionSemantics;\n+import org.apache.isis.applib.annotation.ActionSemantics.Of;\n+import org.apache.isis.applib.annotation.DescribedAs;\n+import org.apache.isis.applib.annotation.Hidden;\n+import org.apache.isis.applib.annotation.MemberOrder;\n+import org.apache.isis.applib.annotation.Named;\n+import org.apache.isis.applib.annotation.NotContributed;\n+import org.apache.isis.applib.annotation.NotContributed.As;\n+import org.apache.isis.applib.annotation.NotInServiceMenu;\n+import org.apache.isis.applib.annotation.Where;\n+import org.apache.isis.applib.filter.Filter;\n+import org.apache.isis.applib.query.QueryDefault;\n+\n+public class ToDoItemContributions extends AbstractFactoryAndRepository {\n+\n+    \n+    // //////////////////////////////////////\n+    // priority (contributed property)\n+    // //////////////////////////////////////\n+    \n+    @DescribedAs(\"The relative priority of this item compared to others (using 'due by' date)\")\n+    @NotInServiceMenu\n+    @MemberOrder(sequence=\"1\")\n+    @ActionSemantics(Of.SAFE)\n+    @NotContributed(As.ACTION)\n+    @Hidden(where=Where.ALL_TABLES)\n+    public Integer priority(final ToDoItem toDoItem) {\n+        if(toDoItem.isComplete()) {\n+            return null;\n+        }\n+\n+        // sort items ...\n+        final List<ToDoItem> sortedNotYetComplete = \n+                ORDERING_DUE_BY\n+                .compound(ORDERING_DESCRIPTION)\n+                .sortedCopy(toDoItems.notYetComplete());\n+        \n+        // ... then locate this one\n+        int i=1;\n+        for (ToDoItem each : sortedNotYetComplete) {\n+            if(each == toDoItem) {\n+                return i;\n+            }\n+            i++;\n+        }\n+        return null;\n+    }\n+\n+    private static Ordering<ToDoItem> ORDERING_DUE_BY = \n+        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, LocalDate>(){\n+            @Override\n+            public LocalDate apply(ToDoItem input) {\n+                return input.getDueBy();\n+            }\n+        });\n+    \n+    private static Ordering<ToDoItem> ORDERING_DESCRIPTION = \n+        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, String>(){\n+            @Override\n+            public String apply(ToDoItem input) {\n+                return input.getDescription();\n+            }\n+        });\n+    \n+    \n+    // //////////////////////////////////////\n+    // SimilarTo (contributed collection)\n+    // //////////////////////////////////////\n+    \n+    @NotInServiceMenu\n+    @ActionSemantics(Of.SAFE)\n+    @MemberOrder(sequence=\"1\")\n+    @NotContributed(As.ACTION)\n+    public List<ToDoItem> similarTo(final ToDoItem toDoItem) {\n+        if(false) {\n+            // the naive implementation ...\n+            return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(ToDoItem t) {\n+                    return t != toDoItem && Objects.equal(toDoItem.getCategory(), t.getCategory()) && Objects.equal(toDoItem.getOwnedBy(), t.getOwnedBy());\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            final List<ToDoItem> similarToDoItems = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_similarTo\", \n+                            \"ownedBy\", currentUserName(), \n+                            \"category\", toDoItem.getCategory()));\n+            return Lists.newArrayList(Iterables.filter(similarToDoItems, excluding(toDoItem)));\n+        }\n+    }\n+\n+    private static Predicate<ToDoItem> excluding(final ToDoItem toDoItem) {\n+        return new Predicate<ToDoItem>() {\n+            @Override\n+            public boolean apply(ToDoItem input) {\n+                return input != toDoItem;\n+            }\n+        };\n+    }\n+\n+    \n+    // //////////////////////////////////////\n+    // UpdateCategory (contributed action)\n+    // //////////////////////////////////////\n+\n+    @DescribedAs(\"Demonstrates contributed actions; could also be implemented as a simple editable property\")\n+    @NotInServiceMenu\n+    @ActionSemantics(Of.IDEMPOTENT)\n+    @MemberOrder(sequence=\"1\")\n+    public ToDoItem updateCategory(ToDoItem item, @Named(\"Category\") Category category) {\n+        item.setCategory(category);\n+        return item;\n+    }\n+\n+    public List<Category> choices1UpdateCategory(ToDoItem item, Category category) {\n+        // in principle we could fine-tune the choices.\n+        // here, though, we just return all categories\n+        return Arrays.asList(Category.values());\n+    }\n+    \n+    public Category default1UpdateCategory(ToDoItem item, Category category) {\n+        return item.getCategory();\n+    }\n+    \n+    public String validateUpdateCategory(final ToDoItem item, Category category) {\n+        return category == item.getCategory() ? \"Already set to that value!\" : null;\n+    }\n+\n+    \n+    // //////////////////////////////////////\n+    // helpers\n+    // //////////////////////////////////////\n+    \n+    protected String currentUserName() {\n+        return getContainer().getUser().getName();\n+    }\n+\n+    // //////////////////////////////////////\n+\n+    private ToDoItems toDoItems;\n+    public void injectToDoItems(ToDoItems toDoItems) {\n+        this.toDoItems = toDoItems;\n+    }\n+}",
                "changes": 181
            },
            {
                "status": "modified",
                "additions": 57,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java",
                "deletions": 92,
                "sha": "47df583a675080161612600073b936344f02bd02",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java",
                "patch": "@@ -20,6 +20,8 @@\n \n import java.math.BigDecimal;\n import java.math.RoundingMode;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n@@ -28,6 +30,7 @@\n import com.google.common.base.Objects;\n import com.google.common.collect.Collections2;\n import com.google.common.collect.Iterables;\n+import com.google.common.collect.Lists;\n import com.google.common.collect.Ordering;\n \n import dom.todo.ToDoItem.Category;\n@@ -50,6 +53,7 @@\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.applib.clock.Clock;\n import org.apache.isis.applib.filter.Filter;\n+import org.apache.isis.applib.query.QueryDefault;\n \n @Named(\"ToDos\")\n public class ToDoItems extends AbstractFactoryAndRepository {\n@@ -68,53 +72,66 @@ public String iconName() {\n     }\n \n     // //////////////////////////////////////\n-    // NotYetComplete(action)\n+    // NotYetComplete (action)\n     // //////////////////////////////////////\n     \n     @ActionSemantics(Of.SAFE)\n     @MemberOrder(sequence = \"1\")\n     public List<ToDoItem> notYetComplete() {\n-        List<ToDoItem> items = doNotYetComplete();\n+        final List<ToDoItem> items;\n+        if(false) {\n+            // the naive implementation ...\n+            items = allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && !t.isComplete();\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            items = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_notYetComplete\", \n+                            \"ownedBy\", currentUserName()));\n+        }\n         if(items.isEmpty()) {\n             getContainer().informUser(\"All to-do items have been completed :-)\");\n         }\n         return items;\n     }\n-\n-    protected List<ToDoItem> doNotYetComplete() {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && !t.isComplete();\n-            }\n-        });\n-    }\n     \n     // //////////////////////////////////////\n-    // Complete(action)\n+    // Complete (action)\n     // //////////////////////////////////////\n     \n     @ActionSemantics(Of.SAFE)\n     @MemberOrder(sequence = \"2\")\n     public List<ToDoItem> complete() {\n-        List<ToDoItem> items = doComplete();\n+        final List<ToDoItem> items;\n+        if(false) {\n+            // the naive implementation ...\n+            items = allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && t.isComplete();\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            items = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_complete\", \n+                            \"ownedBy\", currentUserName()));\n+        }\n         if(items.isEmpty()) {\n             getContainer().informUser(\"No to-do items have yet been completed :-(\");\n         }\n         return items;\n     }\n \n-    protected List<ToDoItem> doComplete() {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && t.isComplete();\n-            }\n-        });\n-    }\n \n     // //////////////////////////////////////\n-    // NewToDo(action)\n+    // NewToDo (action)\n     // //////////////////////////////////////\n \n     @MemberOrder(sequence = \"3\")\n@@ -134,7 +151,7 @@ public LocalDate default2NewToDo() {\n     }\n \n     // //////////////////////////////////////\n-    // AllToDos(action)\n+    // AllToDos (action)\n     // //////////////////////////////////////\n \n     @ActionSemantics(Of.SAFE)\n@@ -156,81 +173,30 @@ public LocalDate default2NewToDo() {\n         return items;\n     }\n \n-    // //////////////////////////////////////\n-    // priority (contributed property)\n-    // //////////////////////////////////////\n-    \n-    @DescribedAs(\"The relative priority of this item compared to others (using 'due by' date)\")\n-    @NotInServiceMenu\n-    @MemberOrder(sequence=\"1\")\n-    @ActionSemantics(Of.SAFE)\n-    @NotContributed(As.ACTION)\n-    @Hidden(where=Where.ALL_TABLES)\n-    public Integer priority(final ToDoItem toDoItem) {\n-        if(toDoItem.isComplete()) {\n-            return null;\n-        }\n-\n-        final List<ToDoItem> sortedNotYetComplete = \n-                ORDERING_DUE_BY\n-                .compound(ORDERING_DESCRIPTION)\n-                .sortedCopy(notYetComplete());\n-        int i=1;\n-        for (ToDoItem each : sortedNotYetComplete) {\n-            if(each == toDoItem) {\n-                return i;\n-            }\n-            i++;\n-        }\n-        return null;\n-    }\n \n-    private static Ordering<ToDoItem> ORDERING_DUE_BY = \n-        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, LocalDate>(){\n-            @Override\n-            public LocalDate apply(ToDoItem input) {\n-                return input.getDueBy();\n-            }\n-        });\n-    \n-    private static Ordering<ToDoItem> ORDERING_DESCRIPTION = \n-            Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, String>(){\n-                @Override\n-                public String apply(ToDoItem input) {\n-                    return input.getDescription();\n-                }\n-            });\n-    \n-    // //////////////////////////////////////\n-    // SimilarTo (contributed collection)\n-    // //////////////////////////////////////\n-    \n-    @NotInServiceMenu\n-    @ActionSemantics(Of.SAFE)\n-    @MemberOrder(sequence=\"1\")\n-    @NotContributed(As.ACTION)\n-    public List<ToDoItem> similarTo(final ToDoItem toDoItem) {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(ToDoItem t) {\n-                return t != toDoItem && Objects.equal(toDoItem.getCategory(), t.getCategory()) && Objects.equal(toDoItem.getOwnedBy(), t.getOwnedBy());\n-            }\n-        });\n-    }\n-    \n     // //////////////////////////////////////\n     // AutoComplete\n     // //////////////////////////////////////\n \n     @Programmatic // not part of metamodel\n     public List<ToDoItem> autoComplete(final String description) {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && t.getDescription().contains(description);\n-            }\n-\n-        });\n+        if(false) {\n+            // the naive implementation ...\n+            return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && t.getDescription().contains(description);\n+                }\n+                \n+            });\n+        } else {\n+            // the JDO implementation ...\n+            return allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_autoComplete\", \n+                            \"ownedBy\", currentUserName(), \n+                            \"description\", description));\n+        }\n     }\n \n     // //////////////////////////////////////\n@@ -273,5 +239,4 @@ protected String currentUserName() {\n         return getContainer().getUser().getName();\n     }\n \n-\n }",
                "changes": 149
            },
            {
                "status": "removed",
                "additions": 0,
                "raw_url": "https://github.com/apache/isis/raw/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java?ref=fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6",
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java",
                "deletions": 87,
                "sha": "1927ec05d6f5a05d5ed7b482024341a297599c47",
                "blob_url": "https://github.com/apache/isis/blob/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java",
                "patch": "@@ -1,87 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package dom.todo;\n-\n-import java.util.List;\n-\n-import com.google.common.base.Predicate;\n-import com.google.common.collect.Iterables;\n-import com.google.common.collect.Lists;\n-\n-import dom.todo.ToDoItem;\n-import dom.todo.ToDoItems;\n-\n-import org.apache.isis.applib.query.QueryDefault;\n-\n-public class ToDoItemsJdo extends ToDoItems {\n-\n-    // {{ notYetComplete (action)\n-    @Override\n-    protected List<ToDoItem> doNotYetComplete() {\n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_notYetComplete\", \n-                        \"ownedBy\", currentUserName()));\n-    }\n-    // }}\n-\n-    // {{ done (action)\n-    @Override\n-    protected List<ToDoItem> doComplete() {\n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_complete\", \n-                        \"ownedBy\", currentUserName()));\n-    }\n-    // }}\n-\n-    // {{ similarTo (action)\n-    @Override\n-    public List<ToDoItem> similarTo(final ToDoItem thisToDoItem) {\n-        final List<ToDoItem> similarToDoItems = allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_similarTo\", \n-                        \"ownedBy\", currentUserName(), \n-                        \"category\", thisToDoItem.getCategory()));\n-        return Lists.newArrayList(Iterables.filter(similarToDoItems, excluding(thisToDoItem)));\n-    }\n-\n-    private static Predicate<ToDoItem> excluding(final ToDoItem toDoItem) {\n-        return new Predicate<ToDoItem>() {\n-            @Override\n-            public boolean apply(ToDoItem input) {\n-                return input != toDoItem;\n-            }\n-        };\n-    }\n-    // }}\n-\n-    // {{ autoComplete (action)\n-    @Override\n-    public List<ToDoItem> autoComplete(String description) {\n-        \n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_autoComplete\", \n-                        \"ownedBy\", currentUserName(), \n-                        \"description\", description));\n-    }\n-    // }}\n-\n-}",
                "changes": 87
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java",
                "deletions": 5,
                "sha": "b6d0399ff95ee5d6cab757e22ae4972bf19ef11b",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java",
                "patch": "@@ -16,10 +16,8 @@\n  */\n package integration;\n \n-import dom.todo.ToDoItemsJdo;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import dom.todo.ToDoItemContributions;\n+import dom.todo.ToDoItems;\n \n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n@@ -56,7 +54,8 @@ public ToDoSystemBuilder() {\n             with(new DataNucleusPersistenceMechanismInstaller());\n             \n             withServices(\n-                    new ToDoItemsJdo(),\n+                    new ToDoItems(),\n+                    new ToDoItemContributions(),\n                     new WrapperFactoryDefault(),\n                     new RegisterEntities(),\n                     new IsisJdoSupportImpl()",
                "changes": 9
            },
            {
                "status": "modified",
                "additions": 18,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java",
                "deletions": 0,
                "sha": "7c8b134c6e5be27f0d7c3d1df8302dd5dd465e61",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java",
                "patch": "@@ -22,6 +22,8 @@\n \n import com.google.common.collect.Lists;\n \n+import dom.todo.ToDoItem;\n+import dom.todo.ToDoItems;\n import fixture.todo.ToDoItemsFixture;\n \n import org.apache.isis.applib.AbstractService;\n@@ -57,10 +59,26 @@ public String default0InstallFor() {\n \n     // //////////////////////////////////////\n \n+    @Prototype\n+    public ToDoItem installAndReturnFirst() {\n+        install();\n+        List<ToDoItem> notYetComplete = toDoItems.notYetComplete();\n+        return !notYetComplete.isEmpty() ? notYetComplete.get(0) : null;\n+    }\n+\n+    // //////////////////////////////////////\n+\n     private static void installFixturesFor(String user) {\n         final FixturesInstallerDelegate installer = new FixturesInstallerDelegate().withOverride();\n         installer.addFixture(new ToDoItemsFixture(user));\n         installer.installFixtures();\n     }\n+    \n+    // //////////////////////////////////////\n+\n+    private ToDoItems toDoItems;\n+    public void injectToDoItems(ToDoItems toDoItems) {\n+        this.toDoItems = toDoItems;\n+    }\n \n }",
                "changes": 18
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "filename": "example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
                "deletions": 1,
                "sha": "84e7bb197ec66e4217991870b2f8a6080473ac47",
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
                "patch": "@@ -185,7 +185,8 @@ isis.reflector.facet-decorators=org.apache.isis.core.progmodel.facetdecorators.i\n \n # if using the DataNucleus object store\n #isis.services.prefix = \n-isis.services = dom.todo.ToDoItemsJdo,\\\n+isis.services = dom.todo.ToDoItems,\\\n+                dom.todo.ToDoItemContributions,\\\n                 app.services.ToDoItemsFixturesService,\\\n                 app.services.DeveloperUtilities,\\\n                 org.apache.isis.core.metamodel.services.bookmarks.BookmarkServiceDefault,\\",
                "changes": 3
            }
        ],
        "unit_tests": [
            "ObjectActionImplTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "core/runtime/src/test/java/org/apache/isis/core/runtime/system/ObjectActionImplTest.java",
        "buggy_files": [
            "pom.xml",
            "example/application/claims/pom.xml",
            "example/application/claims/viewer-scimpi/pom.xml",
            "example/application/claims/viewer-dnd/pom.xml",
            "example/application/claims/viewer-wicket/pom.xml",
            "example/application/claims/viewer-bdd/pom.xml",
            "example/application/claims/fixture/pom.xml",
            "example/application/claims/dom/pom.xml",
            "example/application/quickstart_scimpi_nosql/pom.xml",
            "example/application/quickstart_scimpi_nosql/viewer-scimpi/pom.xml",
            "example/application/quickstart_scimpi_nosql/fixture/pom.xml",
            "example/application/quickstart_scimpi_nosql/dom/pom.xml",
            "example/application/quickstart_wicket_restful_jdo/pom.xml",
            "example/application/quickstart_wicket_restful_jdo/integtests/pom.xml",
            "example/application/quickstart_wicket_restful_jdo/webapp/pom.xml",
            "example/application/quickstart_wicket_restful_jdo/fixture/pom.xml",
            "example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
            "example/misc/metamodel/jsr303/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/integtests/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/webapp/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/fixture/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/dom/pom.xml",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/objstore-jdo/pom.xml",
            "example/domain-service/email-service/pom.xml",
            "mothballed/example/application/quickstart_html_sql/pom.xml",
            "mothballed/example/application/quickstart_html_sql/viewer-html/pom.xml",
            "mothballed/example/application/quickstart_html_sql/fixture/pom.xml",
            "mothballed/example/application/quickstart_html_sql/dom/pom.xml",
            "mothballed/bdd/pom.xml",
            "mothballed/bdd/common/pom.xml",
            "mothballed/bdd/tck/pom.xml",
            "mothballed/bdd/concordion/pom.xml",
            "mothballed/misc/metamodel/namefile/pom.xml",
            "mothballed/component/viewer/html/pom.xml",
            "mothballed/component/viewer/html/monitoring/pom.xml",
            "mothballed/component/viewer/html/impl/pom.xml",
            "mothballed/component/viewer/html/tck/pom.xml",
            "mothballed/component/profilestore/sql/pom.xml",
            "mothballed/component/security/ldap/pom.xml",
            "mothballed/component/security/sql/pom.xml",
            "core/pom.xml",
            "core/bytecode-cglib/pom.xml",
            "core/log4j/pom.xml",
            "core/security-noop/pom.xml",
            "core/webserver/pom.xml",
            "core/tck/pom.xml",
            "core/tck/tck-dom/pom.xml",
            "core/tck/tck-fixture/pom.xml",
            "core/profilestore-inmemory/pom.xml",
            "core/applib/pom.xml",
            "core/metamodel/pom.xml",
            "core/wrapper/pom.xml",
            "core/specsupport/pom.xml",
            "core/bytecode-javassist/pom.xml",
            "core/runtime/pom.xml",
            "core/integtestsupport/pom.xml",
            "core/unittestsupport/pom.xml",
            "core/objectstore-inmemory/pom.xml",
            "tool/maven-plugin/pom.xml",
            "component/viewer/restfulobjects/pom.xml",
            "component/viewer/restfulobjects/jaxrs/pom.xml",
            "component/viewer/restfulobjects/tck/pom.xml",
            "component/viewer/restfulobjects/server/pom.xml",
            "component/viewer/restfulobjects/applib/pom.xml",
            "component/viewer/restfulobjects/rendering/pom.xml",
            "component/viewer/wicket/pom.xml",
            "component/viewer/wicket/model/pom.xml",
            "component/viewer/wicket/impl/pom.xml",
            "component/viewer/wicket/tck/pom.xml",
            "component/viewer/wicket/ui/pom.xml",
            "component/viewer/junit/pom.xml",
            "component/viewer/junit/impl/pom.xml",
            "component/viewer/junit/tck/pom.xml",
            "component/viewer/dnd/pom.xml",
            "component/viewer/dnd/impl/pom.xml",
            "component/viewer/dnd/tck/pom.xml",
            "component/viewer/scimpi/pom.xml",
            "component/viewer/scimpi/servlet/pom.xml",
            "component/viewer/scimpi/dispatcher/pom.xml",
            "component/viewer/scimpi/tck/pom.xml",
            "component/objectstore/nosql/pom.xml",
            "component/objectstore/sql/pom.xml",
            "component/objectstore/sql/sql-tests-common/pom.xml",
            "component/objectstore/sql/sql-impl/pom.xml",
            "component/objectstore/sql/sql-tests-served/pom.xml",
            "component/objectstore/xml/pom.xml",
            "component/objectstore/jdo/pom.xml",
            "component/objectstore/jdo/jdo-applib/pom.xml",
            "component/objectstore/jdo/jdo-metamodel/pom.xml",
            "component/objectstore/jdo/jdo-datanucleus/pom.xml",
            "component/profilestore/xml/pom.xml",
            "component/progmodel/groovy/pom.xml",
            "component/progmodel/groovy/applib/pom.xml",
            "component/progmodel/groovy/metamodel/pom.xml",
            "component/security/shiro/pom.xml",
            "component/security/file/pom.xml",
            "example/application/claims/viewer-scimpi/src/main/webapp/WEB-INF/isis.properties",
            "example/application/claims/viewer-dnd/src/main/resources/isis.properties",
            "example/application/claims/viewer-wicket/src/main/webapp/WEB-INF/isis.properties",
            "example/application/claims/viewer-bdd/src/main/resources/isis.properties",
            "example/application/quickstart_scimpi_nosql/viewer-scimpi/src/main/webapp/WEB-INF/isis.properties",
            "example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
            "example/archetype/quickstart_wicket_restful_jdo/src/main/resources/archetype-resources/webapp/src/main/webapp/WEB-INF/isis.properties",
            "mothballed/example/application/quickstart_html_sql/viewer-html/src/main/webapp/WEB-INF/isis.properties",
            "mothballed/component/viewer/html/tck/src/main/webapp/WEB-INF/isis.properties",
            "core/metamodel/src/test/config/isis.properties",
            "component/viewer/restfulobjects/tck/src/main/webapp/WEB-INF/isis.properties",
            "component/viewer/wicket/tck/src/main/webapp/WEB-INF/isis.properties",
            "component/viewer/junit/impl/src/test/resources/isis.properties",
            "component/viewer/dnd/tck/src/main/resources/isis.properties",
            "component/viewer/scimpi/tck/src/main/webapp/WEB-INF/isis.properties",
            "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java"
        ],
        "fixed": true
    }
]