{
    "ofbiz_3a0a201": {
        "bug_id": "ofbiz_3a0a201",
        "commit": "https://github.com/apache/ofbiz/commit/3a0a201c34dc3cad8c001d030c80e57f5b605da1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ofbiz/blob/3a0a201c34dc3cad8c001d030c80e57f5b605da1/framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/base/org/ofbiz/base/util/StringUtil.java?ref=3a0a201c34dc3cad8c001d030c80e57f5b605da1",
                "deletions": 0,
                "filename": "framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "patch": "@@ -41,6 +41,10 @@\n     \n     public static final String module = StringUtil.class.getName();\n \n+    public static String internString(String value) {\n+        return value != null ? value.intern() : null;\n+    }\n+\n     /** \n      * Replaces all occurances of oldString in mainString with newString\n      * @param mainString The original string",
                "raw_url": "https://github.com/apache/ofbiz/raw/3a0a201c34dc3cad8c001d030c80e57f5b605da1/framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "sha": "c00d4390074337fe079960f6cc4deebef8c2d984",
                "status": "modified"
            }
        ],
        "message": "Add internString(), which protects against NPE.  Closes\n https://issues.apache.org/jira/browse/OFBIZ-1307.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@585578 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/ddbcbed6d17d1e214646c9691c8c9ee667ed995f",
        "patched_files": [
            "StringUtil.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "StringUtilTests.java"
        ]
    },
    "ofbiz_55bf970": {
        "bug_id": "ofbiz_55bf970",
        "commit": "https://github.com/apache/ofbiz/commit/55bf970b48e0c2842c769e52c9a6f57681cae9b5",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/55bf970b48e0c2842c769e52c9a6f57681cae9b5/framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/UtilHttp.java?ref=55bf970b48e0c2842c769e52c9a6f57681cae9b5",
                "deletions": 1,
                "filename": "framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "patch": "@@ -113,7 +113,7 @@\n      */\n     public static Map<String, Object> getParameterMap(HttpServletRequest request, Set<? extends String> nameSet, Boolean onlyIncludeOrSkip) {\n         boolean onlyIncludeOrSkipPrim = onlyIncludeOrSkip == null ? true : onlyIncludeOrSkip.booleanValue();\n-        Map<String, Object> paramMap = FastMap.newInstance();\n+        Map<String, Object> paramMap = new HashMap<String, Object>();\n \n         // add all the actual HTTP request parameters\n         Enumeration<String> e = UtilGenerics.cast(request.getParameterNames());",
                "raw_url": "https://github.com/apache/ofbiz/raw/55bf970b48e0c2842c769e52c9a6f57681cae9b5/framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "sha": "5a50d497fb3f0bb16342c49f559f38b76c518f72",
                "status": "modified"
            }
        ],
        "message": "\"Login out on a cluster handled by DeltaManager causes a NPE\" https://issues.apache.org/jira/browse/OFBIZ-4289\n\nUses a HashMap instead of a FastMap here because else we get this kind of error when OFBiz is shut down:\n\n2012-06-12 10:35:29,921 (OFBiz_Shutdown_Hook) [ StandardSession.java:1567:WARN ] Cannot serialize session attribute LAST_VIEW_PARAMS for session 00C48D0D76821C98403482FAE8B77C24.jvm1\njava.io.NotSerializableException: net.sf.json.JSONObject\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330)\nat javolution.util.FastMap.writeObject(FastMap.java:1513)\n\nNote: to test the above you need to set apps-distributable to true and put some <distributable/> in the web.xml files of the applications to test\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1355660 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/1f7beafb3a8604ff20c204bf0cac769d68aa69d2",
        "patched_files": [
            "UtilHttp.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "UtilHttpTests.java"
        ]
    },
    "ofbiz_8074d39": {
        "bug_id": "ofbiz_8074d39",
        "commit": "https://github.com/apache/ofbiz/commit/8074d39e801a41deb46b2f7f851fceaebd4900f3",
        "file": [
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/ofbiz/blob/8074d39e801a41deb46b2f7f851fceaebd4900f3/framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/base/org/ofbiz/base/util/ObjectType.java?ref=8074d39e801a41deb46b2f7f851fceaebd4900f3",
                "deletions": 23,
                "filename": "framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "patch": "@@ -426,7 +426,7 @@ public static boolean instanceOf(Class<?> objectClass, Class<?> typeClass) {\n     }\n \n     public static Object simpleTypeConvert(Object obj, String type, String format, Locale locale, boolean noTypeFail) throws GeneralException {\n-        return simpleTypeConvert(obj, type, format, UtilDateTime.getDefaultTimeZone(), locale, noTypeFail);\n+        return simpleTypeConvert(obj, type, format, null, locale, noTypeFail);\n     }\n \n     /** \n@@ -457,6 +457,14 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             return obj;\n         }\n \n+        if (timeZone == null) {\n+            timeZone = TimeZone.getDefault();\n+        }\n+\n+        if (locale == null) {\n+            locale = Locale.getDefault();\n+        }\n+\n         String fromType = null;\n \n         if ((type.equals(\"List\") || type.equals(\"java.util.List\")) && obj.getClass().isArray()) {\n@@ -496,7 +504,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n                     return new BigDecimal(tempNum.toString());\n                 } catch (ParseException e) {\n@@ -505,7 +513,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Double\".equals(type) || \"java.lang.Double\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n \n                     return Double.valueOf(tempNum.doubleValue());\n@@ -515,7 +523,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Float\".equals(type) || \"java.lang.Float\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n \n                     return Float.valueOf(tempNum.floatValue());\n@@ -525,7 +533,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Long\".equals(type) || \"java.lang.Long\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     nf.setMaximumFractionDigits(0);\n                     Number tempNum = nf.parse(str);\n \n@@ -536,7 +544,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Integer\".equals(type) || \"java.lang.Integer\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     nf.setMaximumFractionDigits(0);\n                     Number tempNum = nf.parse(str);\n \n@@ -547,9 +555,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -560,9 +568,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Time\".equals(type) || \"java.sql.Time\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -573,7 +581,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Timestamp\".equals(type) || \"java.sql.Timestamp\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, locale);\n                     // if time is missing add zeros\n                     if (str.length() > 0 && !str.contains(\":\")) {\n                     \tstr = str + \" 00:00:00.00\";\n@@ -591,7 +599,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n                         }\n                     }\n                 } else {\n-                    df = UtilDateTime.toDateTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -626,7 +634,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Double dbl = (Double) obj;\n \n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(dbl.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return new BigDecimal(dbl.doubleValue());\n@@ -654,7 +662,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Float flt = (Float) obj;\n \n             if (\"String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(flt.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return new BigDecimal(flt.doubleValue());\n@@ -682,7 +690,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Long lng = (Long) obj;\n \n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(lng.longValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return BigDecimal.valueOf(lng.longValue());\n@@ -709,7 +717,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             fromType = \"Integer\";\n             Integer intgr = (Integer) obj;\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(intgr.longValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return BigDecimal.valueOf(intgr.longValue());\n@@ -736,7 +744,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             fromType = \"BigDecimal\";\n             BigDecimal bigDec = (BigDecimal) obj;\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(bigDec.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return obj;\n@@ -765,9 +773,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(dte.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n@@ -794,9 +802,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(tme.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n@@ -823,9 +831,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(tme.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {",
                "raw_url": "https://github.com/apache/ofbiz/raw/8074d39e801a41deb46b2f7f851fceaebd4900f3/framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "sha": "39a2814f4c3799aac01bf537c1674b75d8ec9bd2",
                "status": "modified"
            }
        ],
        "message": "Fix for NPE reported by Jacopo on the dev mailing list.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@662825 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/fc6e672d817d02c0ae432769b8ce485989dbe8b9",
        "patched_files": [
            "ObjectType.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "ObjectTypeTests.java"
        ]
    },
    "ofbiz_b08bfae": {
        "bug_id": "ofbiz_b08bfae",
        "commit": "https://github.com/apache/ofbiz/commit/b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/applications/accounting/widget/BillingAccountForms.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/accounting/widget/BillingAccountForms.xml?ref=b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
                "deletions": 2,
                "filename": "applications/accounting/widget/BillingAccountForms.xml",
                "patch": "@@ -46,7 +46,7 @@ under the License.\n         <field name=\"fromDate\"><display/></field>\n         <field name=\"thruDate\"><display/></field>\n         <field name=\"partyId\"><display/></field>\n-        <field name=\"roleTypeId\"><display-entity entity-name=\"RoleType\"/></field>\n+        <field name=\"roleTypeId\" title=\"${uiLabelMap.AccountingRoleType}\"><display-entity entity-name=\"RoleType\"/></field>\n     </form>\n \n     <form name=\"ListBillingAccountInvoices\" type=\"list\" list-name=\"billingAccountInvoices\" paginate-target=\"BillingAccountInvoices\" default-entity-name=\"Invoice\"\n@@ -100,7 +100,7 @@ under the License.\n     <form name=\"EditBillingAccount\" type=\"single\" target=\"updateBillingAccount\" title=\"\"\n         header-row-style=\"header-row\" default-table-style=\"basic-table\">\n         <actions>\n-            <set field=\"availableBalance\" value=\"${bsh:org.ofbiz.accounting.payment.BillingAccountWorker.getBillingAccountBalance(billingAccount)}\" type=\"BigDecimal\"/>\n+            <set field=\"availableBalance\" value=\"${bsh:billingAccount != null ? org.ofbiz.accounting.payment.BillingAccountWorker.getBillingAccountBalance(billingAccount) : 0}\" type=\"BigDecimal\"/>\n         </actions>\n         <alt-target use-when=\"billingAccount==null\" target=\"createBillingAccount\"/>\n         <auto-fields-service service-name=\"updateBillingAccount\" map-name=\"billingAccount\"/>",
                "raw_url": "https://github.com/apache/ofbiz/raw/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/applications/accounting/widget/BillingAccountForms.xml",
                "sha": "3c2e6519e8a8328a369ba30aba884371fffcb39e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ofbiz/blob/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
                "deletions": 5,
                "filename": "framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -290,10 +290,10 @@ public void appendElement(StringBuilder buffer, Map<String, ? extends Object> co\n                         buffer.append(scriptResult);\n                     }\n                 } else {\n-                    Debug.logWarning(\"BSH scriplet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n+                    Debug.logWarning(\"BSH scriptlet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n                 }\n             } catch (EvalError e) {\n-                Debug.logWarning(e, \"Error evaluating BSH scriplet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n+                Debug.logWarning(e, \"Error evaluating BSH scriptlet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n             }\n         }\n     }\n@@ -407,7 +407,7 @@ public void handleVariable(String original, int start, int end) {\n         }\n \n         public void handleBsh(String original, int start, int end) {\n-            //run the scriplet and append the result\n+            //run the scriptlet and append the result\n             String scriptlet = original.substring(start, end);\n             try {\n                 Object scriptResult = BshUtil.eval(scriptlet, UtilMisc.makeMapWritable(context));\n@@ -418,10 +418,10 @@ public void handleBsh(String original, int start, int end) {\n                         targetBuffer.append(scriptResult);\n                     }\n                 } else {\n-                    Debug.logWarning(\"BSH scriplet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n+                    Debug.logWarning(\"BSH scriptlet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n                 }\n             } catch (EvalError e) {\n-                Debug.logWarning(e, \"Error evaluating BSH scriplet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n+                Debug.logWarning(e, \"Error evaluating BSH scriptlet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/ofbiz/raw/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "547f4f67e52cb2b66438e5263c1f7f48417d25cf",
                "status": "modified"
            }
        ],
        "message": "Fix an NPE, some typos and a label\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@670108 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/9f5f3c9fe7c276838f3ee20b9003aa0eea84c69b",
        "patched_files": [
            "FlexibleStringExpander.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz_bc2615a": {
        "bug_id": "ofbiz_bc2615a",
        "commit": "https://github.com/apache/ofbiz/commit/bc2615a74d792137c49b25c817d247a853bd802d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/content/src/org/ofbiz/content/content/ContentServices.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/content/src/org/ofbiz/content/content/ContentServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/content/src/org/ofbiz/content/content/ContentServices.java",
                "patch": "@@ -91,7 +91,7 @@\n             return ServiceUtil.returnError(UtilProperties.getMessage(resource, \"ContentAssocRetrievingError\", UtilMisc.toMap(\"errorString\", e.toString()), locale));\n         }\n \n-        if (targetOperations == null || targetOperations.isEmpty()) {\n+        if (UtilValidate.isEmpty(targetOperations)) {\n             results.put(\"contentList\", contentList);\n             return results;\n         }",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/content/src/org/ofbiz/content/content/ContentServices.java",
                "sha": "e4af9da05089eb1179f4692c9872e08970bde194",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/manufacturing/src/org/ofbiz/manufacturing/jobshopmgt/ProductionRunServices.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/manufacturing/src/org/ofbiz/manufacturing/jobshopmgt/ProductionRunServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/manufacturing/src/org/ofbiz/manufacturing/jobshopmgt/ProductionRunServices.java",
                "patch": "@@ -3063,7 +3063,7 @@ private static void cloneWorkEffortCostCalcs(DispatchContext dctx, GenericValue\n                                  \"userLogin\", userLogin);\n             resultService = dispatcher.runSync(\"getManufacturingComponents\", serviceContext);\n             List<Map<String, Object>> components = UtilGenerics.checkList(resultService.get(\"componentsMap\"));\n-            if (components == null || components.isEmpty()) {\n+            if (UtilValidate.isEmpty(components)) {\n                 return ServiceUtil.returnError(UtilProperties.getMessage(resource, \"ManufacturingProductionRunCannotDecomposingInventoryItemNoComponentsFound\", UtilMisc.toMap(\"productId\", inventoryItem.getString(\"productId\")), locale));\n             }\n             Iterator<Map<String, Object>> componentsIt = components.iterator();",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/manufacturing/src/org/ofbiz/manufacturing/jobshopmgt/ProductionRunServices.java",
                "sha": "37fac263e10ef5a6561906e346050fcb83e28d6e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/marketing/src/org/ofbiz/sfa/vcard/VCard.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/marketing/src/org/ofbiz/sfa/vcard/VCard.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "applications/marketing/src/org/ofbiz/sfa/vcard/VCard.java",
                "patch": "@@ -122,7 +122,7 @@\n                                                         EntityCondition.makeCondition(\"geoTypeId\", EntityOperator.EQUALS, \"COUNTRY\"),\n                                                         EntityCondition.makeCondition(\"geoName\", EntityOperator.LIKE, workAddress.getCountry())), EntityOperator.AND);\n                     countryGeoList = delegator.findList(\"Geo\", cond, null, null, null, true);\n-                    if (!countryGeoList.isEmpty()) {\n+                    if (UtilValidate.isNotEmpty(countryGeoList)) {\n                         GenericValue countryGeo = EntityUtil.getFirst(countryGeoList);\n                         serviceCtx.put(\"countryGeoId\", countryGeo.get(\"geoId\"));\n                     }\n@@ -131,7 +131,7 @@\n                             EntityCondition.makeCondition(\"geoTypeId\", EntityOperator.EQUALS, \"STATE\"),\n                             EntityCondition.makeCondition(\"geoName\", EntityOperator.LIKE, workAddress.getRegion())), EntityOperator.AND);\n                     stateGeoList = delegator.findList(\"Geo\", condition, null, null, null, true);\n-                    if (!stateGeoList.isEmpty()) {\n+                    if (UtilValidate.isNotEmpty(stateGeoList)) {\n                         GenericValue stateGeo = EntityUtil.getFirst(stateGeoList);\n                         serviceCtx.put(\"stateProvinceGeoId\", stateGeo.get(\"geoId\"));\n                     }",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/marketing/src/org/ofbiz/sfa/vcard/VCard.java",
                "sha": "8f7b72f9ef24ff8ac4f0c9faad9f17b8bfc02bfb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/order/OrderReadHelper.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/order/src/org/ofbiz/order/order/OrderReadHelper.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/order/src/org/ofbiz/order/order/OrderReadHelper.java",
                "patch": "@@ -2537,7 +2537,7 @@ public static BigDecimal calcOrderPromoAdjustmentsBd(List<GenericValue> allOrder\n \n         List<GenericValue> promoAdjustments = EntityUtil.filterByAnd(allOrderAdjustments, UtilMisc.toMap(\"orderAdjustmentTypeId\", \"PROMOTION_ADJUSTMENT\"));\n \n-        if (!promoAdjustments.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(promoAdjustments)) {\n \n             Iterator<GenericValue> promoAdjIter = promoAdjustments.iterator();\n             while (promoAdjIter.hasNext()) {",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/order/OrderReadHelper.java",
                "sha": "d25a3e0cede6c5d3fd84f952f2662d93cbe0ad7e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCart.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCart.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCart.java",
                "patch": "@@ -2791,7 +2791,7 @@ public int addOrderTerm(String termTypeId, String orderItemSeqId,BigDecimal term\n         GenericValue orderTerm = this.getDelegator().makeValue(\"OrderTerm\");\n         orderTerm.put(\"termTypeId\", termTypeId);\n         if (UtilValidate.isEmpty(orderItemSeqId)) {\n-        \torderItemSeqId = \"_NA_\";\n+                orderItemSeqId = \"_NA_\";\n         }\n         orderTerm.put(\"orderItemSeqId\", orderItemSeqId);\n         orderTerm.put(\"termValue\", termValue);",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCart.java",
                "sha": "7a5b5cb329794080f54ec6f402c19349c44b8a2e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCartServices.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCartServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCartServices.java",
                "patch": "@@ -633,7 +633,7 @@\n \n         List<GenericValue> adjustments = orh.getOrderHeaderAdjustments();\n         // If applyQuoteAdjustments is set to false then standard cart adjustments are used.\n-        if (!adjustments.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(adjustments)) {\n             // The cart adjustments are added to the cart\n             cart.getAdjustments().addAll(adjustments);\n         }",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppingcart/ShoppingCartServices.java",
                "sha": "271ba75930cb127022a4656f9b99ebcc54159a3b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppinglist/ShoppingListEvents.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/order/src/org/ofbiz/order/shoppinglist/ShoppingListEvents.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "applications/order/src/org/ofbiz/order/shoppinglist/ShoppingListEvents.java",
                "patch": "@@ -377,7 +377,7 @@ public static String getAutoSaveListId(Delegator delegator, LocalDispatcher disp\n             List<GenericValue> existingLists = delegator.findByAnd(\"ShoppingList\", findMap);\n             Debug.logInfo(\"Finding existing auto-save shopping list with:  \\nfindMap: \" + findMap + \"\\nlists: \" + existingLists, module);\n     \n-            if (existingLists != null && !existingLists.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(existingLists)) {\n                 list = EntityUtil.getFirst(existingLists);\n                 autoSaveListId = list.getString(\"shoppingListId\");\n             }",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/order/src/org/ofbiz/order/shoppinglist/ShoppingListEvents.java",
                "sha": "e5001ef39465e09056d94976a0e0160f38ca7af2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/party/src/org/ofbiz/party/communication/CommunicationEventServices.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/party/src/org/ofbiz/party/communication/CommunicationEventServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "applications/party/src/org/ofbiz/party/communication/CommunicationEventServices.java",
                "patch": "@@ -744,7 +744,7 @@\n                 Debug.logError(e, module);\n                 return ServiceUtil.returnError(e.getMessage());\n             }\n-            if (!commEvents.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(commEvents)) {\n                 Debug.logInfo(\"Ignoring Duplicate Email: \" + aboutThisEmail, module);\n                 return ServiceUtil.returnSuccess(UtilProperties.getMessage(resource, \n                         \"PartyCommEventMessageIgnoredDuplicateMessageId\", locale));\n@@ -756,7 +756,7 @@\n             List<Map<String, Object>> bccParties = buildListOfPartyInfoFromEmailAddresses(addressesBCC, userLogin, dispatcher);\n \n             //Get the first address from the list - this is the partyIdTo field of the CommunicationEvent\n-            if (!toParties.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(toParties)) {\n                 Iterator<Map<String, Object>> itr = toParties.iterator();\n                 Map<String, Object> firstAddressTo = itr.next();\n                 partyIdTo = (String)firstAddressTo.get(\"partyId\");",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/party/src/org/ofbiz/party/communication/CommunicationEventServices.java",
                "sha": "b073970b3258d96d522ff6e3a896ff03b3ac601d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/product/src/org/ofbiz/product/category/CategoryServices.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/product/src/org/ofbiz/product/category/CategoryServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "applications/product/src/org/ofbiz/product/category/CategoryServices.java",
                "patch": "@@ -123,7 +123,7 @@\n             EntityCondition condition = EntityCondition.makeCondition(EntityCondition.makeCondition(\"releaseDate\", EntityOperator.EQUALS, null), EntityOperator.OR, EntityCondition.makeCondition(\"releaseDate\", EntityOperator.LESS_THAN_EQUAL_TO, releaseDateLimit));\n             filterConditions.add(condition);\n         }\n-        if (!filterConditions.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(filterConditions)) {\n             productCategoryMembers = EntityUtil.filterByCondition(productCategoryMembers, EntityCondition.makeCondition(filterConditions, EntityOperator.AND));\n         }\n \n@@ -290,7 +290,7 @@ private static String getCategoryFindEntityName(Delegator delegator, List<String\n                         EntityCondition condition = EntityCondition.makeCondition(EntityCondition.makeCondition(\"releaseDate\", EntityOperator.EQUALS, null), EntityOperator.OR, EntityCondition.makeCondition(\"releaseDate\", EntityOperator.LESS_THAN_EQUAL_TO, releaseDateLimit));\n                         filterConditions.add(condition);\n                     }\n-                    if (!filterConditions.isEmpty()) {\n+                    if (UtilValidate.isNotEmpty(filterConditions)) {\n                         productCategoryMembers = EntityUtil.filterByCondition(productCategoryMembers, EntityCondition.makeCondition(filterConditions, EntityOperator.AND));\n                     }\n ",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/product/src/org/ofbiz/product/category/CategoryServices.java",
                "sha": "a1ee51f52cd865a2433370870c332023fd2c4ae1",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/applications/product/src/org/ofbiz/product/category/CategoryWorker.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/applications/product/src/org/ofbiz/product/category/CategoryWorker.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 4,
                "filename": "applications/product/src/org/ofbiz/product/category/CategoryWorker.java",
                "patch": "@@ -87,8 +87,7 @@ public static void getCategoriesWithNoParent(ServletRequest request, String attr\n             for (GenericValue curCat: allCategories) {\n                 Collection<GenericValue> parentCats = curCat.getRelatedCache(\"CurrentProductCategoryRollup\");\n \n-                if (parentCats.isEmpty())\n-                    results.add(curCat);\n+                if (parentCats.isEmpty()) results.add(curCat);\n             }\n         } catch (GenericEntityException e) {\n             Debug.logWarning(e, module);\n@@ -116,8 +115,7 @@ public static void getRelatedCategories(ServletRequest request, String attribute\n     public static void getRelatedCategories(ServletRequest request, String attributeName, String parentId, boolean limitView, boolean excludeEmpty) {\n         List<GenericValue> categories = getRelatedCategoriesRet(request, attributeName, parentId, limitView, excludeEmpty);\n \n-        if (!categories.isEmpty())\n-            request.setAttribute(attributeName, categories);\n+        if (!categories.isEmpty())  request.setAttribute(attributeName, categories);\n     }\n \n     public static List<GenericValue> getRelatedCategoriesRet(ServletRequest request, String attributeName, String parentId, boolean limitView) {",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/applications/product/src/org/ofbiz/product/category/CategoryWorker.java",
                "sha": "01f14bd87a18fdd479a36cdc8c07e50de0a151ce",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/UtilValidate.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/UtilValidate.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 6,
                "filename": "framework/base/src/org/ofbiz/base/util/UtilValidate.java",
                "patch": "@@ -206,32 +206,32 @@ public static boolean isNotEmpty(IsEmpty o) {\n \n     /** Check whether string s is empty. */\n     public static boolean isEmpty(String s) {\n-        return ((s == null) || (s.length() == 0));\n+        return (s == null) || s.length() == 0;\n     }\n \n     /** Check whether collection c is empty. */\n     public static <E> boolean isEmpty(Collection<E> c) {\n-        return ((c == null) || (c.size() == 0));\n+        return (c == null) || c.isEmpty();\n     }\n \n     /** Check whether map m is empty. */\n     public static <K,E> boolean isEmpty(Map<K,E> m) {\n-        return ((m == null) || (m.size() == 0));\n+        return (m == null) || m.isEmpty();\n     }\n \n     /** Check whether charsequence c is empty. */\n     public static <E> boolean isEmpty(CharSequence c) {\n-        return ((c == null) || (c.length() == 0));\n+        return (c == null) || (c.length() == 0);\n     }\n \n     /** Check whether string s is NOT empty. */\n     public static boolean isNotEmpty(String s) {\n-        return ((s != null) && (s.length() > 0));\n+        return (s != null) && (s.length() > 0);\n     }\n \n     /** Check whether collection c is NOT empty. */\n     public static <E> boolean isNotEmpty(Collection<E> c) {\n-        return ((c != null) && (c.size() > 0));\n+        return (c != null) && !c.isEmpty();\n     }\n \n     /** Check whether charsequence c is NOT empty. */",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/UtilValidate.java",
                "sha": "53cd27973f727e8a1c4faefcd91d6790d04b7f2a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/collections/FlexibleMapAccessor.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/base/src/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "patch": "@@ -121,7 +121,7 @@ public T get(Map<String, ? extends Object> base) {\n      * @return the found value\n      */\n     public T get(Map<String, ? extends Object> base, Locale locale) {\n-        if (base == null || this.isEmpty()) {\n+        if (UtilValidate.isEmpty(base)) {\n             return null;\n         }\n         if (!base.containsKey(UelUtil.localizedMapLocaleKey) && locale != null) {",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "sha": "68fcc5ffdfaa085f094c9191e859c6fec9e477e9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/template/FreeMarkerWorker.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/template/FreeMarkerWorker.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/base/src/org/ofbiz/base/util/template/FreeMarkerWorker.java",
                "patch": "@@ -108,7 +108,7 @@ public static Configuration makeConfiguration(BeansWrapper wrapper) {\n             URL propertyURL = resources.nextElement();\n             Debug.logInfo(\"loading properties: \" + propertyURL, module);\n             Properties props = UtilProperties.getProperties(propertyURL);\n-            if (props == null || props.isEmpty()) {\n+            if (UtilValidate.isEmpty(props)) {\n                 Debug.logError(\"Unable to locate properties file \" + propertyURL, module);\n             } else {\n                 loadTransforms(loader, props, newConfig);",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/base/src/org/ofbiz/base/util/template/FreeMarkerWorker.java",
                "sha": "c8d4eff04dd351786b31510a210f174c07c848a1",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/birt/src/org/ofbiz/birt/report/service/OFBizBirtViewerReportService.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/birt/src/org/ofbiz/birt/report/service/OFBizBirtViewerReportService.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/birt/src/org/ofbiz/birt/report/service/OFBizBirtViewerReportService.java",
                "patch": "@@ -48,6 +48,7 @@\n import org.eclipse.birt.report.utility.ParameterAccessor;\n import org.ofbiz.base.util.Debug;\n import org.ofbiz.base.util.UtilGenerics;\n+import org.ofbiz.base.util.UtilValidate;\n import org.ofbiz.birt.container.BirtContainer;\n \n @SuppressWarnings(\"deprecation\")\n@@ -106,7 +107,7 @@ public String runReport(IViewerReportDesignHandle design, String outputDocName,\n                 Debug.logError(e, module);\n             }\n             List<Exception> errors = this.runReport(request, runnable, outputDocName, locale, timeZone, parsedParams, displayTextMap, maxRows);\n-            if (errors != null && !errors.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(errors)) {\n                 errorList.addAll(errors);\n             }\n         } catch ( RemoteException e ) {",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/birt/src/org/ofbiz/birt/report/service/OFBizBirtViewerReportService.java",
                "sha": "7e7d237471a838904bd9b0d57327831d3fc8ce8c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/entity/src/org/ofbiz/entity/datasource/GenericDAO.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/entity/src/org/ofbiz/entity/datasource/GenericDAO.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "framework/entity/src/org/ofbiz/entity/datasource/GenericDAO.java",
                "patch": "@@ -814,11 +814,11 @@ protected StringBuilder makeConditionWhereString(StringBuilder whereString, Stri\n         }\n \n         List<EntityCondition> conditions = FastList.newInstance();\n-        if (whereEntityCondition != null && !whereEntityCondition.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(whereEntityCondition)) {\n             conditions.add(whereEntityCondition);\n         }\n \n-        if (modelViewEntity != null && !viewWhereConditions.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(modelViewEntity)) {\n             EntityCondition viewWhereEntityCondition = EntityCondition.makeCondition(viewWhereConditions);\n             if (!viewWhereEntityCondition.isEmpty()) {\n                 conditions.add(viewWhereEntityCondition);",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/entity/src/org/ofbiz/entity/datasource/GenericDAO.java",
                "sha": "260fd956b8228fdf414e0baef27eb2f2be905b5b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/entity/src/org/ofbiz/entity/transaction/TransactionUtil.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/entity/src/org/ofbiz/entity/transaction/TransactionUtil.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/entity/src/org/ofbiz/entity/transaction/TransactionUtil.java",
                "patch": "@@ -154,7 +154,7 @@ public static boolean begin(int timeout) throws GenericTransactionException {\n \n                     RollbackOnlyCause roc = getSetRollbackOnlyCause();\n                     // do we have a cause? if so, throw special exception\n-                    if (roc != null && !roc.isEmpty()) {\n+                    if (UtilValidate.isNotEmpty(roc)) {\n                         throw new GenericTransactionException(\"The current transaction is marked for rollback, not beginning a new transaction and aborting current operation; the rollbackOnly was caused by: \" + roc.getCauseMessage(), roc.getCauseThrowable());\n                     } else {\n                         return false;",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/entity/src/org/ofbiz/entity/transaction/TransactionUtil.java",
                "sha": "6705b49b2dc6a325634fbdf93006171cd7d19aa0",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/jetty/src/org/ofbiz/jetty/container/JettyContainer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/jetty/src/org/ofbiz/jetty/container/JettyContainer.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "framework/jetty/src/org/ofbiz/jetty/container/JettyContainer.java",
                "patch": "@@ -42,6 +42,7 @@\n import org.ofbiz.base.container.ContainerException;\n import org.ofbiz.base.util.Debug;\n import org.ofbiz.base.util.SSLUtil;\n+import org.ofbiz.base.util.UtilValidate;\n \n \n /**\n@@ -116,12 +117,12 @@ private void initJetty() throws ContainerException {\n                         context.setSessionHandler(new SessionHandler(sm));\n \n                         // set the virtual hosts\n-                        if (virtualHosts != null && !virtualHosts.isEmpty()) {\n+                        if (UtilValidate.isNotEmpty(virtualHosts)) {\n                             context.setVirtualHosts((String[]) virtualHosts.toArray());\n                         }\n \n                         // set the init parameters\n-                        if (initParameters != null && !initParameters.isEmpty()) {\n+                        if (UtilValidate.isNotEmpty(initParameters)) {\n                             context.setInitParams(initParameters);\n                         }\n ",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/jetty/src/org/ofbiz/jetty/container/JettyContainer.java",
                "sha": "5354dd81170483bdf39d5e15c778f8c3b90a9257",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/sql/src/org/ofbiz/sql/SQLInsert.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/sql/src/org/ofbiz/sql/SQLInsert.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/sql/src/org/ofbiz/sql/SQLInsert.java",
                "patch": "@@ -22,6 +22,7 @@\n import java.util.List;\n \n import org.ofbiz.base.util.StringUtil;\n+import org.ofbiz.base.util.UtilValidate;\n \n public final class SQLInsert extends SQLStatement<SQLInsert> {\n     private final TableName tableName;\n@@ -64,7 +65,7 @@ public boolean equals(Object o) {\n     public StringBuilder appendTo(StringBuilder sb) {\n         sb.append(\"INSERT INTO \");\n         tableName.appendTo(sb);\n-        if (columns != null && !columns.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(columns)) {\n             sb.append(\" (\");\n             StringUtil.append(sb, columns, null, null, \", \");\n             sb.append(')');",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/sql/src/org/ofbiz/sql/SQLInsert.java",
                "sha": "afa18d19470f1ab898de7761314abf8519e29678",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/testtools/src/org/ofbiz/testtools/seleniumxml/RemoteRequest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/testtools/src/org/ofbiz/testtools/seleniumxml/RemoteRequest.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/testtools/src/org/ofbiz/testtools/seleniumxml/RemoteRequest.java",
                "patch": "@@ -58,6 +58,8 @@\n import org.apache.http.protocol.BasicHttpContext;\n import org.jdom.Element;\n \n+import org.ofbiz.base.util.UtilValidate;\n+\n \n public class RemoteRequest {\n \n@@ -114,7 +116,7 @@\n     public RemoteRequest(SeleniumXml parent, List<Element> children, List<Element> loginAs, String requestUrl, String hostString, String responseHandlerMode) {\n \n         this(parent, children, requestUrl, hostString, responseHandlerMode);\n-        if(loginAs != null && !loginAs.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(loginAs)) {\n             Element elem = loginAs.get(0);\n \n             this.loginAsUserParam = elem.getAttributeValue(\"username-param\");",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/testtools/src/org/ofbiz/testtools/seleniumxml/RemoteRequest.java",
                "sha": "37fb08fa66eb695d09f1fec7e10a4fc3115c853d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/form/ModelForm.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/widget/src/org/ofbiz/widget/form/ModelForm.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelForm.java",
                "patch": "@@ -2492,7 +2492,7 @@ public boolean getSeparateColumns() {\n     }\n \n     public boolean getPaginate(Map<String, Object> context) {\n-        if (this.paginate != null && !this.paginate.isEmpty() && UtilValidate.isNotEmpty(this.paginate.expandString(context))) {\n+        if (UtilValidate.isNotEmpty(this.paginate) && UtilValidate.isNotEmpty(this.paginate.expandString(context))) {\n             return Boolean.valueOf(this.paginate.expandString(context)).booleanValue();\n         } else {\n             return true;",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/form/ModelForm.java",
                "sha": "7d88f77ddfb862a5512470127c89d0a54e9d409e",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 23,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -266,25 +266,25 @@ public void mergeOverrideModelFormField(ModelFormField overrideFormField) {\n         // incorporate updates for values that are not empty in the overrideFormField\n         if (UtilValidate.isNotEmpty(overrideFormField.name))\n             this.name = overrideFormField.name;\n-        if (overrideFormField.mapAcsr != null && !overrideFormField.mapAcsr.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(overrideFormField.mapAcsr)) {\n             //Debug.logInfo(\"overriding mapAcsr, old=\" + (this.mapAcsr==null?\"null\":this.mapAcsr.getOriginalName()) + \", new=\" + overrideFormField.mapAcsr.getOriginalName(), module);\n             this.mapAcsr = overrideFormField.mapAcsr;\n         }\n         if (UtilValidate.isNotEmpty(overrideFormField.entityName))\n             this.entityName = overrideFormField.entityName;\n         if (UtilValidate.isNotEmpty(overrideFormField.serviceName))\n             this.serviceName = overrideFormField.serviceName;\n-        if (overrideFormField.entryAcsr != null && !overrideFormField.entryAcsr.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideFormField.entryAcsr))\n             this.entryAcsr = overrideFormField.entryAcsr;\n         if (UtilValidate.isNotEmpty(overrideFormField.parameterName))\n             this.parameterName = overrideFormField.parameterName;\n         if (UtilValidate.isNotEmpty(overrideFormField.fieldName))\n             this.fieldName = overrideFormField.fieldName;\n         if (UtilValidate.isNotEmpty(overrideFormField.attributeName))\n             this.attributeName = overrideFormField.attributeName;\n-        if (overrideFormField.title != null && !overrideFormField.title.isEmpty()) // title=\"\" can be used to override the original value\n+        if (UtilValidate.isNotEmpty(overrideFormField.title)) // title=\"\" can be used to override the original value\n             this.title = overrideFormField.title;\n-        if (overrideFormField.tooltip != null && !overrideFormField.tooltip.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideFormField.tooltip))\n             this.tooltip = overrideFormField.tooltip;\n         if (overrideFormField.requiredField != null)\n             this.requiredField = overrideFormField.requiredField;\n@@ -304,9 +304,9 @@ public void mergeOverrideModelFormField(ModelFormField overrideFormField) {\n             this.redWhen = overrideFormField.redWhen;\n         if (UtilValidate.isNotEmpty(overrideFormField.event))\n             this.event = overrideFormField.event;\n-        if (overrideFormField.action != null && !overrideFormField.action.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideFormField.action))\n             this.action = overrideFormField.action;\n-        if (overrideFormField.useWhen != null && !overrideFormField.useWhen.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideFormField.useWhen))\n             this.useWhen = overrideFormField.useWhen;\n         if (overrideFormField.fieldInfo != null) {\n             this.setFieldInfo(overrideFormField.fieldInfo);\n@@ -654,7 +654,7 @@ public String getEntityName() {\n     }\n \n     public String getEntryName() {\n-        if (this.entryAcsr != null && !this.entryAcsr.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(this.entryAcsr)) {\n             return this.entryAcsr.getOriginalName();\n         } else {\n             return this.name;\n@@ -713,7 +713,7 @@ public String getEntry(Map<String, ? extends Object> context , String defaultVal\n                 dataMapIsContext = true;\n             }\n             Object retVal = null;\n-            if (this.entryAcsr != null && !this.entryAcsr.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.entryAcsr)) {\n                 //Debug.logInfo(\"Getting entry, using entryAcsr for field \" + this.getName() + \" of form \" + this.modelForm.getName(), module);\n                 if (dataMap instanceof GenericEntity) {\n                     GenericEntity genEnt = (GenericEntity) dataMap;\n@@ -735,7 +735,7 @@ public String getEntry(Map<String, ? extends Object> context , String defaultVal\n             if (dataMapIsContext && retVal == null && !Boolean.FALSE.equals(useRequestParameters)) {\n                 Map<String, ? extends Object> parameters = UtilGenerics.checkMap(context.get(\"parameters\"));\n                 if (parameters != null) {\n-                    if (this.entryAcsr != null && !this.entryAcsr.isEmpty()) {\n+                    if (UtilValidate.isNotEmpty(this.entryAcsr)) {\n                         retVal = this.entryAcsr.get(parameters);\n                     } else {\n                         retVal = parameters.get(this.name);\n@@ -779,7 +779,7 @@ public String getEntry(Map<String, ? extends Object> context , String defaultVal\n     }\n \n     public Map<String, ? extends Object> getMap(Map<String, ? extends Object> context) {\n-        if (this.mapAcsr == null || this.mapAcsr.isEmpty()) {\n+        if (UtilValidate.isEmpty(this.mapAcsr)) {\n             //Debug.logInfo(\"Getting Map from default of the form because of no mapAcsr for field \" + this.getName(), module);\n             return this.modelForm.getDefaultMap(context);\n         } else {\n@@ -820,7 +820,7 @@ public String getFieldName() {\n      * @return returns the name of the Map in the form context that contains the entry\n      */\n     public String getMapName() {\n-        if (this.mapAcsr != null && !this.mapAcsr.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(this.mapAcsr)) {\n             return this.mapAcsr.getOriginalName();\n         } else {\n             return this.modelForm.getDefaultMapName();\n@@ -871,7 +871,7 @@ public String getEvent() {\n     }\n \n     public String getAction(Map<String, ? extends Object> context) {\n-        if (this.action != null && !this.action.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(this.action)) {\n             return action.expandString(context);\n         } else {\n             return null;\n@@ -1002,7 +1002,7 @@ public String getServiceName() {\n     }\n \n     public String getTitle(Map<String, Object> context) {\n-        if (this.title != null && !this.title.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(this.title)) {\n             return title.expandString(context);\n         } else {\n             // create a title from the name of this field; expecting a Java method/field style name, ie productName or productCategoryId\n@@ -1088,15 +1088,15 @@ public String getSortFieldStyleDesc() {\n     }\n \n     public String getTooltip(Map<String, Object> context) {\n-        if (tooltip != null && !tooltip.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(tooltip)) {\n             return tooltip.expandString(context);\n         } else {\n             return \"\";\n         }\n     }\n \n     public String getUseWhen(Map<String, Object> context) {\n-        if (this.useWhen != null && !this.useWhen.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(this.useWhen)) {\n             return this.useWhen.expandString(context);\n         } else {\n             return \"\";\n@@ -2127,7 +2127,7 @@ public String getImageLocation(Map<String, Object> context){\n \n         public String getDescription(Map<String, Object> context) {\n             String retVal = null;\n-            if (this.description != null && !this.description.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.description)) {\n                 retVal = this.description.expandString(context);\n             } else {\n                 retVal = this.modelFormField.getEntry(context);\n@@ -2139,7 +2139,7 @@ public String getDescription(Map<String, Object> context) {\n                 Locale locale = (Locale) context.get(\"locale\");\n                 if (locale == null) locale = Locale.getDefault();\n                 String isoCode = null;\n-                if (this.currency != null && !this.currency.isEmpty()) {\n+                if (UtilValidate.isNotEmpty(this.currency)) {\n                     isoCode = this.currency.expandString(context);\n                 }\n \n@@ -2308,7 +2308,7 @@ public DisplayEntityField(Element element, ModelFormField modelFormField) {\n             this.cache = !\"false\".equals(element.getAttribute(\"cache\"));\n             this.size = element.getAttribute(\"size\");\n \n-            if (this.description == null || this.description.isEmpty()) {\n+            if (UtilValidate.isEmpty(this.description)) {\n                 this.setDescription(\"${description}\");\n             }\n \n@@ -3201,7 +3201,7 @@ public void setClock(String str) {\n          * @return Default value string for date-time\n          */\n         public String getDefaultDateTimeString(Map<String, Object> context) {\n-            if (this.defaultValue != null && !this.defaultValue.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.defaultValue)) {\n                 return this.getDefaultValue(context);\n             }\n \n@@ -3566,7 +3566,7 @@ public void renderFieldString(Appendable writer, Map<String, Object> context, Fo\n         }\n \n         public String getValue(Map<String, Object> context) {\n-            if (this.value != null && !this.value.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.value)) {\n                 String valueEnc = this.value.expandString(context);\n                 StringUtil.SimpleEncoder simpleEncoder = (StringUtil.SimpleEncoder) context.get(\"simpleEncoder\");\n                 if (simpleEncoder != null) {\n@@ -3961,7 +3961,7 @@ public String getDefaultValue(Map<String, Object> context) {\n         }\n \n         public String getValue(Map<String, Object> context) {\n-            if (this.value != null && !this.value.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.value)) {\n                 return this.value.expandString(context);\n             } else {\n                 return modelFormField.getEntry(context);\n@@ -3973,7 +3973,7 @@ public void setValue(String string) {\n         }\n \n         public String getDescription(Map<String, Object> context) {\n-            if (this.description != null && !this.description.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.description)) {\n                 return this.description.expandString(context);\n             } else {\n                 return \"\";\n@@ -3985,7 +3985,7 @@ public void setDescription(String description) {\n         }\n \n         public String getAlternate(Map<String, Object> context) {\n-            if (this.alternate != null && !this.alternate.isEmpty()) {\n+            if (UtilValidate.isNotEmpty(this.alternate)) {\n                 return this.alternate.expandString(context);\n             } else {\n                 return \"\";",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "88fc476cfc22f8ddded4e8c917393c16ec39ffd2",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/menu/ModelMenuItem.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/widget/src/org/ofbiz/widget/menu/ModelMenuItem.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 3,
                "filename": "framework/widget/src/org/ofbiz/widget/menu/ModelMenuItem.java",
                "patch": "@@ -240,9 +240,9 @@ public void mergeOverrideModelMenuItem(ModelMenuItem overrideMenuItem) {\n             this.entityName = overrideMenuItem.entityName;\n         if (UtilValidate.isNotEmpty(overrideMenuItem.parentPortalPageId))\n             this.parentPortalPageId = overrideMenuItem.parentPortalPageId;\n-        if (overrideMenuItem.title != null && !overrideMenuItem.title.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideMenuItem.title))\n             this.title = overrideMenuItem.title;\n-        if (overrideMenuItem.tooltip != null && !overrideMenuItem.tooltip.isEmpty())\n+        if (UtilValidate.isNotEmpty(overrideMenuItem.tooltip))\n             this.tooltip = overrideMenuItem.tooltip;\n         if (UtilValidate.isNotEmpty(overrideMenuItem.titleStyle))\n             this.titleStyle = overrideMenuItem.titleStyle;\n@@ -388,7 +388,7 @@ public String getSelectedStyle() {\n     }\n \n     public String getTooltip(Map<String, Object> context) {\n-        if (tooltip != null && !tooltip.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(tooltip)) {\n             return tooltip.expandString(context);\n         } else {\n             return \"\";",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/framework/widget/src/org/ofbiz/widget/menu/ModelMenuItem.java",
                "sha": "a2b8e14793834fa55a3514b7a90ec86870d03971",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/pos/src/org/ofbiz/pos/PosTransaction.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/specialpurpose/pos/src/org/ofbiz/pos/PosTransaction.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 2,
                "filename": "specialpurpose/pos/src/org/ofbiz/pos/PosTransaction.java",
                "patch": "@@ -1188,7 +1188,7 @@ public static synchronized PosTransaction getCurrentTx(XuiSession session) {\n     public void loadSale(PosScreen pos) {\n         trace(\"Load a sale\");\n         List<GenericValue> shoppingLists = createShoppingLists();\n-        if (!shoppingLists.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(shoppingLists)) {\n             Map<String, String> salesMap = createSalesMap(shoppingLists);\n             if (!salesMap.isEmpty()) {\n                 LoadSale loadSale = new LoadSale(salesMap, this, pos);\n@@ -1204,7 +1204,7 @@ public void loadSale(PosScreen pos) {\n \n     public void loadOrder(PosScreen pos) {\n         List<GenericValue> orders = findOrders();\n-        if (!orders.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(orders)) {\n             LoadSale loadSale = new LoadSale(createOrderHash(orders), this, pos);\n             loadSale.openDlg();\n         } else {",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/pos/src/org/ofbiz/pos/PosTransaction.java",
                "sha": "7d0d22dbbe189aa4e5b79245fee894d98e34dc1a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/pos/src/org/ofbiz/pos/component/Journal.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/specialpurpose/pos/src/org/ofbiz/pos/component/Journal.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "specialpurpose/pos/src/org/ofbiz/pos/component/Journal.java",
                "patch": "@@ -32,6 +32,7 @@\n \n import org.ofbiz.base.util.Debug;\n import org.ofbiz.base.util.UtilProperties;\n+import org.ofbiz.base.util.UtilValidate;\n import org.ofbiz.pos.PosTransaction;\n import org.ofbiz.pos.screen.PosScreen;\n \n@@ -135,7 +136,7 @@ public synchronized void refresh(PosScreen pos) {\n \n         PosTransaction tx = PosTransaction.getCurrentTx(pos.getSession());\n         XModel jmodel = this.createModel();\n-        if (tx != null && !tx.isEmpty()) {\n+        if (UtilValidate.isNotEmpty(tx)) {\n             tx.appendItemDataModel(jmodel);\n             this.appendEmpty(jmodel);\n             tx.appendTotalDataModel(jmodel);",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/pos/src/org/ofbiz/pos/component/Journal.java",
                "sha": "dd031d06206355ec4eecc187218f698c9cbcf767",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz/blob/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/workflow/src/org/ofbiz/workflow/WfApplicationServices.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/specialpurpose/workflow/src/org/ofbiz/workflow/WfApplicationServices.java?ref=bc2615a74d792137c49b25c817d247a853bd802d",
                "deletions": 1,
                "filename": "specialpurpose/workflow/src/org/ofbiz/workflow/WfApplicationServices.java",
                "patch": "@@ -32,6 +32,7 @@\n import org.ofbiz.base.util.ObjectType;\n import org.ofbiz.base.util.UtilGenerics;\n import org.ofbiz.base.util.UtilMisc;\n+import org.ofbiz.base.util.UtilValidate;\n import org.ofbiz.entity.Delegator;\n import org.ofbiz.entity.GenericEntityException;\n import org.ofbiz.entity.GenericValue;\n@@ -310,7 +311,7 @@ private static GenericValue getWorkEffortPartyAssigment(Delegator delegator, Str\n \n         try {\n             final List<GenericValue> assigments = delegator.findByAnd(\"WorkEffortPartyAssignment\", expresions, orderBy);\n-            if (assigments.isEmpty()) {\n+            if (UtilValidate.isEmpty(assigments)) {\n                 Debug.logError(\"No accepted activities found for the workEffortId=\" + workEffortId, module);\n                 throw new GenericServiceException(\"Can not find WorkEffortPartyAssignment for the Workflow service. WorkEffortId=\" + workEffortId);\n             }",
                "raw_url": "https://github.com/apache/ofbiz/raw/bc2615a74d792137c49b25c817d247a853bd802d/specialpurpose/workflow/src/org/ofbiz/workflow/WfApplicationServices.java",
                "sha": "07d6adb54aa1deba216927c225373712df9b4eb5",
                "status": "modified"
            }
        ],
        "message": "No functional changes, simple code refactoring around UtilValidate.is(Not)Empty()\n\nChanges implementation of UtilValidate.isEmpty() for Collection and Map by using isEmpty() instead of c.size() == 0). It's more clear and as efficient. Removes also useless parentheses there.\n\nMakes use of UtilValidate.is(Not)Empty() everywhere it makes senses. This for 2 reasons:\n* Make the code more readable by replacing the (!)null/isEmpty pattern.\n* Avoid possible NPEs when only isEmpty() was used (after Entity.find... for instance). I found a lot of cases (242 today) where isEmpty() could perhaps be replaced in Framework. But I guess no NPE checks were missing there and anyway it was too much for me to check them all... So I only did the relevant changes in Applications...\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1169478 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/27dd8dd8488b8038d406bf34157184ea1a7f3f30",
        "patched_files": [
            "FlexibleMapAccessor.java",
            "FreeMarkerWorker.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleMapAccessorTests.java",
            "FreeMarkerWorkerTests.java"
        ]
    },
    "ofbiz_eb425ac": {
        "bug_id": "ofbiz_eb425ac",
        "commit": "https://github.com/apache/ofbiz/commit/eb425ac4478c2f804fdb3319cc2689005b1c423c",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ofbiz/blob/eb425ac4478c2f804fdb3319cc2689005b1c423c/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=eb425ac4478c2f804fdb3319cc2689005b1c423c",
                "deletions": 6,
                "filename": "framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -120,18 +120,22 @@ public String expandString(Map<String, ? extends Object> context, TimeZone timeZ\n             return this.orig == null ? \"\" : this.orig;\n         }\n         if (locale == null) {\n-            locale = (Locale) context.get(\"locale\");\n-            if (locale == null && context.containsKey(\"autoUserLogin\")) {\n-                locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n+            if (context != null) {\n+                locale = (Locale) context.get(\"locale\");\n+                if (locale == null && context.containsKey(\"autoUserLogin\")) {\n+                    locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n+                }\n             }\n             if (locale == null) {\n                 locale = Locale.getDefault();\n             }\n         }\n         if (timeZone == null) {\n-            timeZone = (TimeZone) context.get(\"timeZone\");\n-            if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n-                timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n+            if (context != null) {\n+                timeZone = (TimeZone) context.get(\"timeZone\");\n+                if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n+                    timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n+                }\n             }\n             if (timeZone == null) {\n                 timeZone = TimeZone.getDefault();",
                "raw_url": "https://github.com/apache/ofbiz/raw/eb425ac4478c2f804fdb3319cc2689005b1c423c/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "fa8f3ee3c1b1c47625f66516c26257fa1fc4b463",
                "status": "modified"
            }
        ],
        "message": "NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@688296 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/61db4e6370c080f8a1c662360801be4035915768",
        "patched_files": [
            "FlexibleStringExpander.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz_eb773c6": {
        "bug_id": "ofbiz_eb773c6",
        "commit": "https://github.com/apache/ofbiz/commit/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ofbiz/blob/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java?ref=eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db",
                "deletions": 7,
                "filename": "framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "patch": "@@ -214,14 +214,17 @@ public void put(Map base, Object value) {\n                 lst = FastList.newInstance();\n                 base.put(this.extName, lst);\n             }\n-            //if brackets are empty, append to list\n-            if (this.isAddAtEnd) {\n-                lst.add(value);\n-            } else {\n-                if (this.isAddAtIndex) {\n-                    lst.add(this.listIndex, value);\n+            //if brackets are empty, append to list, but only if it's not null (avoid NPEs with FastList)\n+            if (value != null) {\n+            \t// note that we are checking for null AFTER checking/creating the list itself, so that it will exist after referenced the first time\n+                if (this.isAddAtEnd) {\n+                    lst.add(value);\n                 } else {\n-                    lst.set(this.listIndex, value);\n+                    if (this.isAddAtIndex) {\n+                        lst.add(this.listIndex, value);\n+                    } else {\n+                        lst.set(this.listIndex, value);\n+                    }\n                 }\n             }\n         } else {",
                "raw_url": "https://github.com/apache/ofbiz/raw/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "sha": "a105053883c1d9799c2dc76d3e00d6ca00ff046b",
                "status": "modified"
            }
        ],
        "message": "Small change to not add null values to lists, will always throw an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@589967 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/425a271552adf3975f945cb7b5c61c93208375fa",
        "patched_files": [
            "FlexibleMapAccessor.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleMapAccessorTests.java"
        ]
    },
    "ofbiz_eff5f89": {
        "bug_id": "ofbiz_eff5f89",
        "commit": "https://github.com/apache/ofbiz/commit/eff5f89d3907edb6cd0294c6ae393319a6b07aa1",
        "file": [
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/ofbiz/blob/eff5f89d3907edb6cd0294c6ae393319a6b07aa1/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=eff5f89d3907edb6cd0294c6ae393319a6b07aa1",
                "deletions": 62,
                "filename": "framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -77,25 +77,17 @@ public String getOriginal() {\n         return this.orig;\n     }\n \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context) {\n         return this.expandString(context, null, null);\n     }\n     \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @param locale the current set locale\n      * @return The original String expanded by replacing varaible place holders.\n@@ -104,38 +96,30 @@ public String expandString(Map<String, ? extends Object> context, Locale locale)\n         return this.expandString(context, null, locale);\n     }\n     \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @param timeZone the current set time zone\n      * @param locale the current set locale\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context, TimeZone timeZone, Locale locale) {\n-        if (this.strElems == null) {\n+        if (this.strElems == null || context == null) {\n             return this.orig == null ? \"\" : this.orig;\n         }\n         if (locale == null) {\n-            if (context != null) {\n-                locale = (Locale) context.get(\"locale\");\n-                if (locale == null && context.containsKey(\"autoUserLogin\")) {\n-                    locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n-                }\n+            locale = (Locale) context.get(\"locale\");\n+            if (locale == null && context.containsKey(\"autoUserLogin\")) {\n+                locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n             }\n             if (locale == null) {\n                 locale = Locale.getDefault();\n             }\n         }\n         if (timeZone == null) {\n-            if (context != null) {\n-                timeZone = (TimeZone) context.get(\"timeZone\");\n-                if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n-                    timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n-                }\n+            timeZone = (TimeZone) context.get(\"timeZone\");\n+            if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n+                timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n             }\n             if (timeZone == null) {\n                 timeZone = TimeZone.getDefault();\n@@ -178,17 +162,9 @@ public static FlexibleStringExpander getInstance(String original) {\n         return fse;\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n@@ -197,17 +173,9 @@ public static String expandString(String original, Map<String, ? extends Object>\n         return expandString(original, context, null, null);\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n@@ -216,17 +184,9 @@ public static String expandString(String original, Map<String, ? extends Object>\n         return expandString(original, context, null, locale);\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.",
                "raw_url": "https://github.com/apache/ofbiz/raw/eff5f89d3907edb6cd0294c6ae393319a6b07aa1/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "55f85d20d9d997ff8048893263e9c863f621f978",
                "status": "modified"
            }
        ],
        "message": "Simplified Scott's FlexibleStringExpander NPE fix and updated the JavaDocs.\n\nMany thanks to Scott for catching that, and many thanks to David Jones for his suggestions on the refactor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@688348 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/a9fc92fcc4917e4ef3ab465462512496c5f26008",
        "patched_files": [
            "FlexibleStringExpander.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz_fd0c04b": {
        "bug_id": "ofbiz_fd0c04b",
        "commit": "https://github.com/apache/ofbiz/commit/fd0c04be7ac4344577cb55da8f127aa5677125b9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz/blob/fd0c04be7ac4344577cb55da8f127aa5677125b9/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz/contents/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=fd0c04be7ac4344577cb55da8f127aa5677125b9",
                "deletions": 1,
                "filename": "framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -84,7 +84,7 @@ public String getOriginal() {\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context) {\n-        return this.expandString(context, (Locale) context.get(\"locale\"));\n+        return this.expandString(context, context != null ? (Locale) context.get(\"locale\") : null);\n     }\n     \n     /** ",
                "raw_url": "https://github.com/apache/ofbiz/raw/fd0c04be7ac4344577cb55da8f127aa5677125b9/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "ce9b30ea15c6ed8c20378bfb52f6e5aafa9ef825",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE introduced in a recent commit, reported by BJ Freeman\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@658420 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz/commit/11acdcacc2cd76331398486f3f2dc6808e5f9e69",
        "patched_files": [
            "FlexibleStringExpander.java"
        ],
        "repo": "ofbiz",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    }
}