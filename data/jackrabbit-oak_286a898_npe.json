[
    {
        "repo": "jackrabbit-oak",
        "commit": "https://github.com/apache/jackrabbit-oak/commit/286a898a9680f1ea097d9fb2486e9193dde83dc5",
        "bug_id": "jackrabbit-oak_286a898",
        "message": "OAK-8589: NPE in IndexDefintionBuilder with existing property rule without \"name\" property\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1866456 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit-oak/commit/96d4dfe757fad11f18fd0d29b89f39308c906e4c",
        "patched_files": [
            "IndexDefinitionBuilder.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/286a898a9680f1ea097d9fb2486e9193dde83dc5/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java?ref=286a898a9680f1ea097d9fb2486e9193dde83dc5",
                "filename": "oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java",
                "deletions": 1,
                "sha": "72147939cc7d891669fc1f6b9be4e0255edfbfb1",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/286a898a9680f1ea097d9fb2486e9193dde83dc5/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java",
                "patch": "@@ -312,7 +312,13 @@ private void loadExisting() {\n \n         private Tree findExisting(String name) {\n             for (Tree tree : getPropsTree().getChildren()){\n-                if (name.equals(tree.getProperty(FulltextIndexConstants.PROP_NAME).getValue(Type.STRING))){\n+                String treeName = tree.getName();\n+                PropertyState ps = tree.getProperty(FulltextIndexConstants.PROP_NAME);\n+                if(ps != null) {\n+                    treeName = ps.getValue(Type.STRING);\n+                }\n+\n+                if (name.equals(treeName)) {\n                     return tree;\n                 }\n             }",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 16,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/286a898a9680f1ea097d9fb2486e9193dde83dc5/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilderTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilderTest.java?ref=286a898a9680f1ea097d9fb2486e9193dde83dc5",
                "filename": "oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilderTest.java",
                "deletions": 0,
                "sha": "1fecbe6c0a3a1b8db0fca7329d8ebd59e249dbae",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/286a898a9680f1ea097d9fb2486e9193dde83dc5/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilderTest.java",
                "patch": "@@ -973,4 +973,20 @@ public void tags() {\n         assertThat(state.getProperty(INDEX_TAGS).getValue(Type.STRINGS),\n                 Matchers.containsInAnyOrder(\"foo5\"));\n     }\n+\n+    @Test\n+    public void unnamedPropertyRuleInExistingIndex() {\n+        // create an initial index with property rule for \"foo\"\n+        builder\n+                .indexRule(\"nt:base\")\n+                .property(\"foo\")\n+                //  remove \"name\" property explicitly\n+                .getBuilderTree().removeProperty(\"name\");\n+        NodeState initialIndexState = builder.build();\n+\n+        // Use initial index def to add some other property rule - this should work\n+        new IndexDefinitionBuilder(initialIndexState.builder())\n+                .indexRule(\"nt:base\")\n+                .property(\"bar\");\n+    }\n }\n\\ No newline at end of file",
                "changes": 16
            }
        ],
        "unit_tests": [
            "IndexDefinitionBuilderTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilderTest.java",
        "buggy_files": [
            "oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java",
            "oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilder.java"
        ],
        "fixed": true
    }
]