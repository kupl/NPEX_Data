{
    "qpid-broker-j_1b60342": {
        "bug_id": "qpid-broker-j_1b60342",
        "commit": "https://github.com/apache/qpid-broker-j/commit/1b60342670f158e1d9e2c8350934f47184d9c99e",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/1b60342670f158e1d9e2c8350934f47184d9c99e/broker-plugins/amqp-1-0-protocol/src/main/java/org/apache/qpid/server/protocol/v1_0/ConsumerTarget_1_0.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-plugins/amqp-1-0-protocol/src/main/java/org/apache/qpid/server/protocol/v1_0/ConsumerTarget_1_0.java?ref=1b60342670f158e1d9e2c8350934f47184d9c99e",
                "deletions": 4,
                "filename": "broker-plugins/amqp-1-0-protocol/src/main/java/org/apache/qpid/server/protocol/v1_0/ConsumerTarget_1_0.java",
                "patch": "@@ -23,9 +23,7 @@\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.concurrent.atomic.AtomicLong;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -39,7 +37,6 @@\n import org.apache.qpid.server.message.MessageInstance;\n import org.apache.qpid.server.message.MessageInstanceConsumer;\n import org.apache.qpid.server.message.ServerMessage;\n-import org.apache.qpid.server.model.Exchange;\n import org.apache.qpid.server.model.Queue;\n import org.apache.qpid.server.plugin.MessageConverter;\n import org.apache.qpid.server.protocol.MessageConverterRegistry;\n@@ -66,6 +63,7 @@\n import org.apache.qpid.server.txn.AutoCommitTransaction;\n import org.apache.qpid.server.txn.ServerTransaction;\n import org.apache.qpid.server.util.Action;\n+import org.apache.qpid.server.util.ServerScopedRuntimeException;\n import org.apache.qpid.server.util.StateChangeListener;\n \n class ConsumerTarget_1_0 extends AbstractConsumerTarget<ConsumerTarget_1_0>\n@@ -145,6 +143,14 @@ public void doSend(final MessageInstanceConsumer consumer, final MessageInstance\n         {\n             converter =\n                     (MessageConverter<? super ServerMessage, Message_1_0>) MessageConverterRegistry.getConverter(serverMessage.getClass(), Message_1_0.class);\n+            if (converter == null)\n+            {\n+                throw new ServerScopedRuntimeException(String.format(\n+                        \"Could not find message converter from '%s' to '%s'.\"\n+                        + \" This is unexpected since we should not try to send if the converter is not present.\",\n+                        serverMessage.getClass(),\n+                        Message_1_0.class));\n+            }\n             message = converter.convert(serverMessage, _linkEndpoint.getAddressSpace());\n         }\n \n@@ -497,7 +503,6 @@ public void onRollback()\n                     }\n                 });\n             }\n-\n             else if(outcome instanceof Modified)\n             {\n                 txn.addPostTransactionAction(new ServerTransaction.Action()",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/1b60342670f158e1d9e2c8350934f47184d9c99e/broker-plugins/amqp-1-0-protocol/src/main/java/org/apache/qpid/server/protocol/v1_0/ConsumerTarget_1_0.java",
                "sha": "5c8cfd28f31e4952bd5bb8e4edb920b22ea090a1",
                "status": "modified"
            }
        ],
        "message": "QPID-7531: [Java Broker, AMQP 1.0] Defensive guard against NPE",
        "parent": "https://github.com/apache/qpid-broker-j/commit/a352423fa50aa59e34d9c5c551dbd8261b0e1135",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "ConsumerTarget_1_0Test.java"
        ]
    },
    "qpid-broker-j_26f1c38": {
        "bug_id": "qpid-broker-j_26f1c38",
        "commit": "https://github.com/apache/qpid-broker-j/commit/26f1c38420517cd885572b13f1f231c78f5e979e",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/26f1c38420517cd885572b13f1f231c78f5e979e/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java?ref=26f1c38420517cd885572b13f1f231c78f5e979e",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
                "patch": "@@ -1703,7 +1703,8 @@ public String getRedirectHost(final AmqpPort<?> port)\n         public MessageHeaderImpl(final ManageableMessage message)\n         {\n             _message = message;\n-            _userName = AuthenticatedPrincipal.getCurrentUser().getName();\n+            final AuthenticatedPrincipal currentUser = AuthenticatedPrincipal.getCurrentUser();\n+            _userName = (currentUser == null ? null : currentUser.getName());\n             _timestamp = System.currentTimeMillis();\n         }\n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/26f1c38420517cd885572b13f1f231c78f5e979e/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
                "sha": "0ec6815768361c0ce63d7bc4c1af0abe10b34950",
                "status": "modified"
            }
        ],
        "message": "QPID-7744: [Java Broker] Fix NPE in AbstractVirtualHost$MessageHeaderImpl when there is no user principal",
        "parent": "https://github.com/apache/qpid-broker-j/commit/0316f78ea009b175e96e80891d2184174a711dd7",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "AbstractVirtualHostTest.java"
        ]
    },
    "qpid-broker-j_31639fd": {
        "bug_id": "qpid-broker-j_31639fd",
        "commit": "https://github.com/apache/qpid-broker-j/commit/31639fd16c363beac8833600d209b1f445c2c8c1",
        "file": [
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/AMQChannel.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/AMQChannel.java?ref=31639fd16c363beac8833600d209b1f445c2c8c1",
                "deletions": 18,
                "filename": "broker/src/main/java/org/apache/qpid/server/AMQChannel.java",
                "patch": "@@ -20,8 +20,22 @@\n  */\n package org.apache.qpid.server;\n \n-import org.apache.log4j.Logger;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentSkipListSet;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n \n+import org.apache.log4j.Logger;\n import org.apache.qpid.AMQException;\n import org.apache.qpid.AMQSecurityException;\n import org.apache.qpid.framing.AMQMethodBody;\n@@ -79,21 +93,6 @@\n import org.apache.qpid.server.virtualhost.VirtualHost;\n import org.apache.qpid.transport.TransportException;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.LinkedHashMap;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.SortedSet;\n-import java.util.TreeSet;\n-import java.util.UUID;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n-import java.util.concurrent.atomic.AtomicBoolean;\n-import java.util.concurrent.atomic.AtomicLong;\n-\n public class AMQChannel implements SessionConfig, AMQSessionModel, AsyncAutoCommitTransaction.FutureRecorder\n {\n     public static final int DEFAULT_PREFETCH = 4096;\n@@ -155,7 +154,7 @@\n     private final AMQProtocolSession _session;\n     private AtomicBoolean _closing = new AtomicBoolean(false);\n \n-    private final ConcurrentMap<AMQQueue, Boolean> _blockingQueues = new ConcurrentHashMap<AMQQueue, Boolean>();\n+    private final Set<AMQQueue> _blockingQueues = new ConcurrentSkipListSet<AMQQueue>();\n \n     private final AtomicBoolean _blocking = new AtomicBoolean(false);\n \n@@ -1363,7 +1362,7 @@ public LogActor getLogActor()\n \n     public void block(AMQQueue queue)\n     {\n-        if(_blockingQueues.putIfAbsent(queue, Boolean.TRUE) == null)\n+        if(_blockingQueues.add(queue))\n         {\n \n             if(_blocking.compareAndSet(false,true))\n@@ -1616,4 +1615,9 @@ boolean isReadyForCompletion()\n         }\n     }\n \n+    @Override\n+    public int compareTo(AMQSessionModel session)\n+    {\n+        return getId().toString().compareTo(session.getID().toString());\n+    }\n }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/AMQChannel.java",
                "sha": "2266de0ae4df36b0786269111fc00ee8d1fd8bc3",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/protocol/AMQSessionModel.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/protocol/AMQSessionModel.java?ref=31639fd16c363beac8833600d209b1f445c2c8c1",
                "deletions": 1,
                "filename": "broker/src/main/java/org/apache/qpid/server/protocol/AMQSessionModel.java",
                "patch": "@@ -20,11 +20,19 @@\n  */\n package org.apache.qpid.server.protocol;\n \n+import java.util.concurrent.ConcurrentSkipListSet;\n+\n import org.apache.qpid.AMQException;\n import org.apache.qpid.server.logging.LogSubject;\n import org.apache.qpid.server.queue.AMQQueue;\n+import org.apache.qpid.server.queue.SimpleAMQQueue;\n \n-public interface AMQSessionModel\n+/**\n+ * Session model interface.\n+ * Extends {@link Comparable} to allow objects to be inserted into a {@link ConcurrentSkipListSet}\n+ * when monitoring the blocking and blocking of queues/sessions in {@link SimpleAMQQueue}.\n+ */\n+public interface AMQSessionModel extends Comparable<AMQSessionModel>\n {\n     public Object getID();\n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/protocol/AMQSessionModel.java",
                "sha": "a80eb46cfa6acb1331a0512b997d5f5219b34ada",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java",
                "changes": 44,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java?ref=31639fd16c363beac8833600d209b1f445c2c8c1",
                "deletions": 23,
                "filename": "broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java",
                "patch": "@@ -18,8 +18,23 @@\n  */\n package org.apache.qpid.server.queue;\n \n-import org.apache.log4j.Logger;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentSkipListSet;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.management.JMException;\n \n+import org.apache.log4j.Logger;\n import org.apache.qpid.AMQException;\n import org.apache.qpid.AMQSecurityException;\n import org.apache.qpid.framing.AMQShortString;\n@@ -52,22 +67,6 @@\n import org.apache.qpid.server.txn.ServerTransaction;\n import org.apache.qpid.server.virtualhost.VirtualHost;\n \n-import javax.management.JMException;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.EnumSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.UUID;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-import java.util.concurrent.Executor;\n-import java.util.concurrent.atomic.AtomicBoolean;\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.concurrent.atomic.AtomicLong;\n-\n public class SimpleAMQQueue implements AMQQueue, Subscription.StateListener, MessageGroupManager.SubscriptionResetHelper\n {\n     private static final Logger _logger = Logger.getLogger(SimpleAMQQueue.class);\n@@ -165,7 +164,7 @@\n     private AtomicInteger _deliveredMessages = new AtomicInteger();\n     private AtomicBoolean _stopped = new AtomicBoolean(false);\n \n-    private final ConcurrentMap<AMQSessionModel, Boolean> _blockedChannels = new ConcurrentHashMap<AMQSessionModel, Boolean>();\n+    private final Set<AMQSessionModel> _blockedChannels = new ConcurrentSkipListSet<AMQSessionModel>();\n \n     private final AtomicBoolean _deleted = new AtomicBoolean(false);\n     private final List<Task> _deleteTaskList = new CopyOnWriteArrayList<Task>();\n@@ -1629,7 +1628,7 @@ public void checkCapacity(AMQSessionModel channel)\n                 //Overfull log message\n                 _logActor.message(_logSubject, QueueMessages.OVERFULL(_atomicQueueSize.get(), _capacity));\n \n-                _blockedChannels.putIfAbsent(channel, Boolean.TRUE);\n+                _blockedChannels.add(channel);\n \n                 channel.block(this);\n \n@@ -1662,11 +1661,10 @@ private void checkCapacity()\n                     _logActor.message(_logSubject, QueueMessages.UNDERFULL(_atomicQueueSize.get(), _flowResumeCapacity));\n                 }\n \n-\n-                for(AMQSessionModel c : _blockedChannels.keySet())\n+                for(final AMQSessionModel blockedChannel : _blockedChannels)\n                 {\n-                    c.unblock(this);\n-                    _blockedChannels.remove(c);\n+                    blockedChannel.unblock(this);\n+                    _blockedChannels.remove(blockedChannel);\n                 }\n             }\n         }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java",
                "sha": "c6d634fb2892f4246a6d3984396dcb605667e0a5",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/transport/ServerSession.java",
                "changes": 58,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/transport/ServerSession.java?ref=31639fd16c363beac8833600d209b1f445c2c8c1",
                "deletions": 25,
                "filename": "broker/src/main/java/org/apache/qpid/server/transport/ServerSession.java",
                "patch": "@@ -20,8 +20,28 @@\n  */\n package org.apache.qpid.server.transport;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import static org.apache.qpid.server.logging.subjects.LogSubjectFormat.CHANNEL_FORMAT;\n+import static org.apache.qpid.util.Serial.gt;\n+\n+import java.security.Principal;\n+import java.text.MessageFormat;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedMap;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentSkipListMap;\n+import java.util.concurrent.ConcurrentSkipListSet;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.security.auth.Subject;\n \n import org.apache.qpid.AMQException;\n import org.apache.qpid.protocol.AMQConstant;\n@@ -65,27 +85,8 @@\n import org.apache.qpid.transport.RangeSetFactory;\n import org.apache.qpid.transport.Session;\n import org.apache.qpid.transport.SessionDelegate;\n-\n-import static org.apache.qpid.server.logging.subjects.LogSubjectFormat.CHANNEL_FORMAT;\n-import static org.apache.qpid.util.Serial.gt;\n-\n-import javax.security.auth.Subject;\n-import java.security.Principal;\n-import java.text.MessageFormat;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.SortedMap;\n-import java.util.UUID;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n-import java.util.concurrent.ConcurrentSkipListMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-import java.util.concurrent.atomic.AtomicBoolean;\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.concurrent.atomic.AtomicLong;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ServerSession extends Session \n         implements AuthorizationHolder, SessionConfig, \n@@ -102,7 +103,7 @@\n     private long _createTime = System.currentTimeMillis();\n     private LogActor _actor = GenericActor.getInstance(this);\n \n-    private final ConcurrentMap<AMQQueue, Boolean> _blockingQueues = new ConcurrentHashMap<AMQQueue, Boolean>();\n+    private final Set<AMQQueue> _blockingQueues = new ConcurrentSkipListSet<AMQQueue>();\n \n     private final AtomicBoolean _blocking = new AtomicBoolean(false);\n     private ChannelLogSubject _logSubject;\n@@ -684,7 +685,8 @@ else if (openClose > 0L && openTime > openClose)\n \n     public void block(AMQQueue queue)\n     {\n-        if(_blockingQueues.putIfAbsent(queue, Boolean.TRUE) == null)\n+\n+        if(_blockingQueues.add(queue))\n         {\n \n             if(_blocking.compareAndSet(false,true))\n@@ -897,4 +899,10 @@ boolean isReadyForCompletion()\n             return _future.isComplete();\n         }\n     }\n+\n+    @Override\n+    public int compareTo(AMQSessionModel session)\n+    {\n+        return getId().toString().compareTo(session.getID().toString());\n+    }\n }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/31639fd16c363beac8833600d209b1f445c2c8c1/broker/src/main/java/org/apache/qpid/server/transport/ServerSession.java",
                "sha": "e4268ed2dceabea2306fe7dad2900b01bf86f19a",
                "status": "modified"
            }
        ],
        "message": "QPID-3823: ServerSession unblock(AMQQueue) can cause NPE when trying to remove a queue from _blockingQueues Map that is not present\n\nApplied patch from Andrew MacBean <andymacbean@gmail.com> and Philip Harvey <phil@philharveyonline.com>",
        "parent": "https://github.com/apache/qpid-broker-j/commit/8bd363e96bf1886d01fe56fa28b88ac9e73c48b1",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "ServerSessionTest.java"
        ]
    },
    "qpid-broker-j_3d4dd69": {
        "bug_id": "qpid-broker-j_3d4dd69",
        "commit": "https://github.com/apache/qpid-broker-j/commit/3d4dd6921516432ed8ea4db24513be5e664976c5",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/3d4dd6921516432ed8ea4db24513be5e664976c5/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/common/src/main/java/org/apache/qpid/util/FileUtils.java?ref=3d4dd6921516432ed8ea4db24513be5e664976c5",
                "deletions": 7,
                "filename": "common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "patch": "@@ -246,18 +246,19 @@ public static boolean delete(File file, boolean recursive)\n      {\n          boolean success = true;\n \n+         // If we have nothing to delete then it must be ok to say it was deleted.\n+         if (file == null)\n+         {\n+             return true;\n+         }\n+\n          if (file.isDirectory())\n          {\n              if (recursive)\n              {\n-                 try{\n-                     for (File subFile : file.listFiles())\n-                     {\n-                         success = delete(subFile, true) & success ;\n-                     }\n-                 }catch (NullPointerException npe)\n+                 for (File subFile : file.listFiles())\n                  {\n-                     success = false;\n+                     success = delete(subFile, true) & success ;\n                  }\n \n                  return success && file.delete();",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/3d4dd6921516432ed8ea4db24513be5e664976c5/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "sha": "585657c8bb65e7c6c894bb084131413f6fa48bdd",
                "status": "modified"
            }
        ],
        "message": "FileUtils : Was not correctly handling the case where a File object became null, it would previously have thrown a NPE which was erroneously caught this and declared the delete to have failed. If there is nothing to delete (signified by the Null File object) then the delete should pass.",
        "parent": "https://github.com/apache/qpid-broker-j/commit/e86a4b25e8e7bce808420c4fc1e210d5ea9fcc38",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "FileUtilsTest.java",
            "TestFileUtils.java"
        ]
    },
    "qpid-broker-j_45addbc": {
        "bug_id": "qpid-broker-j_45addbc",
        "commit": "https://github.com/apache/qpid-broker-j/commit/45addbc062f75dfc3e4e310dbad18a62fd0e215e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/45addbc062f75dfc3e4e310dbad18a62fd0e215e/broker/src/main/java/org/apache/qpid/server/protocol/MultiVersionProtocolEngine.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/protocol/MultiVersionProtocolEngine.java?ref=45addbc062f75dfc3e4e310dbad18a62fd0e215e",
                "deletions": 1,
                "filename": "broker/src/main/java/org/apache/qpid/server/protocol/MultiVersionProtocolEngine.java",
                "patch": "@@ -341,7 +341,7 @@ public AmqpProtocolVersion getVersion()\n \n         public ServerProtocolEngine getProtocolEngine()\n         {\n-            return new ProtocolEngine_1_0_0(_appRegistry,_id);\n+            return new ProtocolEngine_1_0_0(_network, _appRegistry,_id);\n         }\n     };\n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/45addbc062f75dfc3e4e310dbad18a62fd0e215e/broker/src/main/java/org/apache/qpid/server/protocol/MultiVersionProtocolEngine.java",
                "sha": "c8126b36779177fcdd2b28405e7fbc28be69d6ad",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/45addbc062f75dfc3e4e310dbad18a62fd0e215e/broker/src/main/java/org/apache/qpid/server/protocol/ProtocolEngine_1_0_0.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/protocol/ProtocolEngine_1_0_0.java?ref=45addbc062f75dfc3e4e310dbad18a62fd0e215e",
                "deletions": 1,
                "filename": "broker/src/main/java/org/apache/qpid/server/protocol/ProtocolEngine_1_0_0.java",
                "patch": "@@ -99,10 +99,14 @@\n \n \n \n-    public ProtocolEngine_1_0_0(final IApplicationRegistry appRegistry, long id)\n+    public ProtocolEngine_1_0_0(final NetworkConnection networkDriver, final IApplicationRegistry appRegistry, long id)\n     {\n         _appRegistry = appRegistry;\n         _connectionId = id;\n+        if(networkDriver != null)\n+        {\n+            setNetworkConnection(networkDriver, networkDriver.getSender());\n+        }\n     }\n \n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/45addbc062f75dfc3e4e310dbad18a62fd0e215e/broker/src/main/java/org/apache/qpid/server/protocol/ProtocolEngine_1_0_0.java",
                "sha": "715a512b47f64e51db3f628692dd6ad7cec0af0c",
                "status": "modified"
            }
        ],
        "message": "QPID-4472 : [Java Broker] NPE with non-SASL AMQP 1.0 Connection",
        "parent": "https://github.com/apache/qpid-broker-j/commit/db85c0cff4866284d08523350e71376b05f0bdcd",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "ProtocolEngine_1_0_0Test.java"
        ]
    },
    "qpid-broker-j_65c7249": {
        "bug_id": "qpid-broker-j_65c7249",
        "commit": "https://github.com/apache/qpid-broker-j/commit/65c72499e9c3cb779c2af9194b7a7042c36e3e4f",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/65c72499e9c3cb779c2af9194b7a7042c36e3e4f/broker-core/src/main/java/org/apache/qpid/server/store/JsonFileConfigStore.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/store/JsonFileConfigStore.java?ref=65c72499e9c3cb779c2af9194b7a7042c36e3e4f",
                "deletions": 2,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/store/JsonFileConfigStore.java",
                "patch": "@@ -150,6 +150,7 @@ private void setup(final FileBasedSettings configurationStoreSettings)\n             throw new StoreException(\"Cannot determine path for configuration storage\");\n         }\n         File fileFromSettings = new File(configurationStoreSettings.getStorePath());\n+        File parentFromSettings = fileFromSettings.getAbsoluteFile().getParentFile();\n         boolean isFile = fileFromSettings.exists() && fileFromSettings.isFile();\n         if(!isFile)\n         {\n@@ -165,14 +166,14 @@ else if(fileFromSettings.getName().endsWith(\".json\"))\n             {\n                 isFile = true;\n             }\n-            else if((new File(fileFromSettings.getParent())).isDirectory() && fileFromSettings.getName().contains(\".\"))\n+            else if(parentFromSettings.isDirectory() && fileFromSettings.getName().contains(\".\"))\n             {\n                 isFile = true;\n             }\n         }\n         if(isFile)\n         {\n-            _directoryName = fileFromSettings.getParent();\n+            _directoryName = parentFromSettings.getAbsolutePath();\n             _configFileName = fileFromSettings.getName();\n             _backupFileName = fileFromSettings.getName() + \".bak\";\n             _tempFileName = fileFromSettings.getName() + \".tmp\";",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/65c72499e9c3cb779c2af9194b7a7042c36e3e4f/broker-core/src/main/java/org/apache/qpid/server/store/JsonFileConfigStore.java",
                "sha": "e341ec8934f23d12a8d3220e44d326824a452b33",
                "status": "modified"
            }
        ],
        "message": "QPID-6889: [Java Broker] Prevent NPE during path validation when given name does not have a parent portion",
        "parent": "https://github.com/apache/qpid-broker-j/commit/8a7e01b6418636d61f6cfd5b5c44294acab346f3",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "JsonFileConfigStoreTest.java"
        ]
    },
    "qpid-broker-j_7ec42f2": {
        "bug_id": "qpid-broker-j_7ec42f2",
        "commit": "https://github.com/apache/qpid-broker-j/commit/7ec42f2266b0360fedd264554f5e3327eaad0d52",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/7ec42f2266b0360fedd264554f5e3327eaad0d52/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java?ref=7ec42f2266b0360fedd264554f5e3327eaad0d52",
                "deletions": 1,
                "filename": "broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
                "patch": "@@ -201,7 +201,11 @@ public void messageSubscribe(Session session, MessageSubscribe method)\n         {\n             String destination = method.getDestination();\n \n-            if(((ServerSession)session).getSubscription(destination)!=null)\n+            if (destination == null)\n+            {\n+                exception(session, method, ExecutionErrorCode.INVALID_ARGUMENT, \"Subscriber must provide a destination. The protocol specification marking the destination argument as optional is considered a mistake.\");\n+            }\n+            else if(((ServerSession)session).getSubscription(destination) != null)\n             {\n                 exception(session, method, ExecutionErrorCode.NOT_ALLOWED, \"Subscription already exists with destination '\"+destination+\"'\");\n             }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/7ec42f2266b0360fedd264554f5e3327eaad0d52/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
                "sha": "0575d97463ad236953971aeab75a832fd54226a7",
                "status": "modified"
            }
        ],
        "message": "QPID-6234 : Fix NPE in ServerSessionDelegate when message.subscribe destination is null (applied patch from Lorenz Quack)",
        "parent": "https://github.com/apache/qpid-broker-j/commit/c8f78fd1993ee856f69d984249a54782d0040bb0",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "ServerSessionDelegateTest.java"
        ]
    },
    "qpid-broker-j_9191c2f": {
        "bug_id": "qpid-broker-j_9191c2f",
        "commit": "https://github.com/apache/qpid-broker-j/commit/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/common/src/main/java/org/apache/qpid/util/FileUtils.java?ref=9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e",
                "deletions": 2,
                "filename": "common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "patch": "@@ -250,9 +250,17 @@ public static boolean delete(File file, boolean recursive)\n          {\n              if (recursive)\n              {\n-                 for (File subFile : file.listFiles())\n+                 File[] files = file.listFiles();\n+\n+                 // This can occur if the file is deleted outside the JVM\n+                 if (files == null)\n+                 {\n+                     return false;\n+                 }\n+\n+                 for (int i = 0; i < files.length; i++)\n                  {\n-                     success = delete(subFile, true) && success;\n+                     success = delete(files[i], true) && success;\n                  }\n \n                  return success && file.delete();",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "sha": "63222b50dbb3388a97f67b1b163e85fbd6eb831d",
                "status": "modified"
            }
        ],
        "message": "QPID-1803 : Fixed potential NPE in FileUtils.delete",
        "parent": "https://github.com/apache/qpid-broker-j/commit/a2d1e294924f8dc029bf0cd7a77c5301add1c660",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "FileUtilsTest.java",
            "TestFileUtils.java"
        ]
    },
    "qpid-broker-j_a47889c": {
        "bug_id": "qpid-broker-j_a47889c",
        "commit": "https://github.com/apache/qpid-broker-j/commit/a47889c4137e5d89456a75f2db864767f631da61",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a47889c4137e5d89456a75f2db864767f631da61/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8.java?ref=a47889c4137e5d89456a75f2db864767f631da61",
                "deletions": 1,
                "filename": "bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8.java",
                "patch": "@@ -258,7 +258,10 @@ private int getConfigVersion(Database configVersionDb)\n         }\n         finally\n         {\n-            cursor.close();\n+            if (cursor != null)\n+            {\n+                cursor.close();\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a47889c4137e5d89456a75f2db864767f631da61/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8.java",
                "sha": "77e76ceeadb1c5de3b864179849a87d350001c0d",
                "status": "modified"
            }
        ],
        "message": "QPID-7523: [Java Broker] UpgradeFrom7To8#getConfigVersion should guard against NPE in case cursor is null",
        "parent": "https://github.com/apache/qpid-broker-j/commit/973c610b7d579b489be81a55e69789690323adb9",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "UpgradeFrom7To8Test.java"
        ]
    },
    "qpid-broker-j_a6c1bba": {
        "bug_id": "qpid-broker-j_a6c1bba",
        "commit": "https://github.com/apache/qpid-broker-j/commit/a6c1bbad3518bfad6a6b156d1646c49c6bfb9d9a",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6c1bbad3518bfad6a6b156d1646c49c6bfb9d9a/broker-core/src/main/java/org/apache/qpid/server/transport/TCPandSSLTransport.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/transport/TCPandSSLTransport.java?ref=a6c1bbad3518bfad6a6b156d1646c49c6bfb9d9a",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/transport/TCPandSSLTransport.java",
                "patch": "@@ -111,7 +111,10 @@ public int getAcceptingPort()\n     @Override\n     public void close()\n     {\n-        _networkTransport.close();\n+        if (_networkTransport != null)\n+        {\n+            _networkTransport.close();\n+        }\n     }\n \n     class ServerNetworkTransportConfiguration implements NetworkTransportConfiguration",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6c1bbad3518bfad6a6b156d1646c49c6bfb9d9a/broker-core/src/main/java/org/apache/qpid/server/transport/TCPandSSLTransport.java",
                "sha": "480ab14f7feb029a167fd7c7f829578193ba92b4",
                "status": "modified"
            }
        ],
        "message": "QPID-6429: [Java Broker] Prevent NPE on shutdown if an AMQP port failed to bind on startup",
        "parent": "https://github.com/apache/qpid-broker-j/commit/90cfe29eb88775a8c21d1e7676b5325e38f2c00c",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "TCPandSSLTransportTest.java"
        ]
    },
    "qpid-broker-j_b5d092b": {
        "bug_id": "qpid-broker-j_b5d092b",
        "commit": "https://github.com/apache/qpid-broker-j/commit/b5d092b7ab9195b2724a9d2527128c80142e6c2c",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/b5d092b7ab9195b2724a9d2527128c80142e6c2c/broker-core/src/main/java/org/apache/qpid/server/model/preferences/GenericPrincipal.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/model/preferences/GenericPrincipal.java?ref=b5d092b7ab9195b2724a9d2527128c80142e6c2c",
                "deletions": 2,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/model/preferences/GenericPrincipal.java",
                "patch": "@@ -28,6 +28,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import org.apache.qpid.server.model.ConfiguredObject;\n import org.apache.qpid.server.security.QpidPrincipal;\n \n public class GenericPrincipal implements Principal\n@@ -42,8 +43,17 @@\n     public GenericPrincipal(final QpidPrincipal principal)\n     {\n         _name = principal.getName();\n-        _originType = principal.getOrigin().getType();\n-        _originName = principal.getOrigin().getName();\n+        ConfiguredObject<?> origin = principal.getOrigin();\n+        if (origin != null)\n+        {\n+            _originType = origin.getType();\n+            _originName = origin.getName();\n+        }\n+        else\n+        {\n+            _originType = \"UNKNOWN\";\n+            _originName = \"\";\n+        }\n     }\n \n     public GenericPrincipal(final String name)",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/b5d092b7ab9195b2724a9d2527128c80142e6c2c/broker-core/src/main/java/org/apache/qpid/server/model/preferences/GenericPrincipal.java",
                "sha": "99660a3ad06cbd49ceb30aef5dc4eb1262d41687",
                "status": "modified"
            }
        ],
        "message": "QPID-7352: [Java Broker] Avoid NPE in GenericPrincipal",
        "parent": "https://github.com/apache/qpid-broker-j/commit/3b898cb90c1e94ef153d0ed0eaad03a0a27de550",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "GenericPrincipalTest.java"
        ]
    },
    "qpid-broker-j_d4065ad": {
        "bug_id": "qpid-broker-j_d4065ad",
        "commit": "https://github.com/apache/qpid-broker-j/commit/d4065ad26821564d0a6677f4026da0b05f59bcad",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/d4065ad26821564d0a6677f4026da0b05f59bcad/broker-core/src/main/java/org/apache/qpid/server/security/encryption/AESKeyFileEncrypterFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/security/encryption/AESKeyFileEncrypterFactory.java?ref=d4065ad26821564d0a6677f4026da0b05f59bcad",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/security/encryption/AESKeyFileEncrypterFactory.java",
                "patch": "@@ -297,7 +297,7 @@ else if(isAclFileSystem(file))\n \n     private void createEmptyKeyFile(File file) throws IOException\n     {\n-        final Path parentFilePath = file.getParentFile().toPath();\n+        final Path parentFilePath = file.getAbsoluteFile().getParentFile().toPath();\n \n         if(isPosixFileSystem(file)) {\n             Set<PosixFilePermission> ownerOnly = EnumSet.of(PosixFilePermission.OWNER_READ,",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/d4065ad26821564d0a6677f4026da0b05f59bcad/broker-core/src/main/java/org/apache/qpid/server/security/encryption/AESKeyFileEncrypterFactory.java",
                "sha": "ec14de40a22e042a25ce6f945897ee9d5aba21bb",
                "status": "modified"
            }
        ],
        "message": "QPID-6914: Prevent NPE within AESKeyFileEncrypter when a relative path is used without parent",
        "parent": "https://github.com/apache/qpid-broker-j/commit/066b7e67d512b13d1d9dde4eb36aa6602a371099",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "AESKeyFileEncrypterFactoryTest.java"
        ]
    },
    "qpid-broker-j_f22e46e": {
        "bug_id": "qpid-broker-j_f22e46e",
        "commit": "https://github.com/apache/qpid-broker-j/commit/f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
        "file": [
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/Broker.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/Broker.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 0,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/Broker.java",
                "patch": "@@ -58,6 +58,17 @@\n     private EventLogger _eventLogger;\n     private boolean _configuringOwnLogging = false;\n     private final TaskExecutor _taskExecutor = new TaskExecutorImpl();\n+    private final boolean _exitJVMOnShutdownWithNonZeroExitCode;\n+\n+    public Broker()\n+    {\n+        this(false);\n+    }\n+\n+    public Broker(boolean exitJVMOnShutdownWithNonZeroExitCode)\n+    {\n+        this._exitJVMOnShutdownWithNonZeroExitCode = exitJVMOnShutdownWithNonZeroExitCode;\n+    }\n \n     protected static class InitException extends RuntimeException\n     {\n@@ -70,6 +81,12 @@\n     }\n \n     public void shutdown()\n+    {\n+        shutdown(0);\n+    }\n+\n+    @Override\n+    public void shutdown(int exitStatusCode)\n     {\n         try\n         {\n@@ -92,6 +109,11 @@ public void shutdown()\n                 {\n                     LogManager.shutdown();\n                 }\n+\n+                if (_exitJVMOnShutdownWithNonZeroExitCode && exitStatusCode != 0)\n+                {\n+                    System.exit(exitStatusCode);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/Broker.java",
                "sha": "7780f060bbda0e011b64d24ca901a1bf488a7eab",
                "status": "modified"
            },
            {
                "additions": 34,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/logging/messages/BrokerMessages.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/logging/messages/BrokerMessages.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 0,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/logging/messages/BrokerMessages.java",
                "patch": "@@ -57,6 +57,7 @@\n     public static final String SHUTTING_DOWN_LOG_HIERARCHY = DEFAULT_LOG_HIERARCHY_PREFIX + \"broker.shutting_down\";\n     public static final String MANAGEMENT_MODE_LOG_HIERARCHY = DEFAULT_LOG_HIERARCHY_PREFIX + \"broker.management_mode\";\n     public static final String STARTUP_LOG_HIERARCHY = DEFAULT_LOG_HIERARCHY_PREFIX + \"broker.startup\";\n+    public static final String FATAL_ERROR_LOG_HIERARCHY = DEFAULT_LOG_HIERARCHY_PREFIX + \"broker.fatal_error\";\n     public static final String READY_LOG_HIERARCHY = DEFAULT_LOG_HIERARCHY_PREFIX + \"broker.ready\";\n \n     static\n@@ -75,6 +76,7 @@\n         Logger.getLogger(SHUTTING_DOWN_LOG_HIERARCHY);\n         Logger.getLogger(MANAGEMENT_MODE_LOG_HIERARCHY);\n         Logger.getLogger(STARTUP_LOG_HIERARCHY);\n+        Logger.getLogger(FATAL_ERROR_LOG_HIERARCHY);\n         Logger.getLogger(READY_LOG_HIERARCHY);\n \n         _messages = ResourceBundle.getBundle(\"org.apache.qpid.server.logging.messages.Broker_logmessages\", _currentLocale);\n@@ -491,6 +493,38 @@ public String getLogHierarchy()\n         };\n     }\n \n+    /**\n+     * Log a Broker message of the Format:\n+     * <pre>BRK-1016 : Fatal error : {0} : See log file for more information</pre>\n+     * Optional values are contained in [square brackets] and are numbered\n+     * sequentially in the method call.\n+     *\n+     */\n+    public static LogMessage FATAL_ERROR(String param1)\n+    {\n+        String rawMessage = _messages.getString(\"FATAL_ERROR\");\n+\n+        final Object[] messageArguments = {param1};\n+        // Create a new MessageFormat to ensure thread safety.\n+        // Sharing a MessageFormat and using applyPattern is not thread safe\n+        MessageFormat formatter = new MessageFormat(rawMessage, _currentLocale);\n+\n+        final String message = formatter.format(messageArguments);\n+\n+        return new LogMessage()\n+        {\n+            public String toString()\n+            {\n+                return message;\n+            }\n+\n+            public String getLogHierarchy()\n+            {\n+                return FATAL_ERROR_LOG_HIERARCHY;\n+            }\n+        };\n+    }\n+\n     /**\n      * Log a Broker message of the Format:\n      * <pre>BRK-1004 : Qpid Broker Ready</pre>",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/logging/messages/BrokerMessages.java",
                "sha": "cd21f533a49719c5c28ca6f279f7637584c1b9ef",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/logging/messages/Broker_logmessages.properties",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/logging/messages/Broker_logmessages.properties?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/logging/messages/Broker_logmessages.properties",
                "patch": "@@ -52,4 +52,6 @@ MANAGEMENT_MODE = BRK-1012 : Management Mode : User Details : {0} / {1}\n # 0 - Total message size\n # 1 - Target memory size\n FLOW_TO_DISK_ACTIVE = BRK-1014 : Message flow to disk active :  Message memory use {0,number,#}KB exceeds threshold {1,number,#.##}KB\n-FLOW_TO_DISK_INACTIVE = BRK-1015 : Message flow to disk inactive : Message memory use {0,number,#}KB within threshold {1,number,#.##}KB\n\\ No newline at end of file\n+FLOW_TO_DISK_INACTIVE = BRK-1015 : Message flow to disk inactive : Message memory use {0,number,#}KB within threshold {1,number,#.##}KB\n+\n+FATAL_ERROR = BRK-1016 : Fatal error : {0} : See log file for more information\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/logging/messages/Broker_logmessages.properties",
                "sha": "322335a956266525ebb2578657aa464a3cd7f938",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/model/BrokerShutdownProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/model/BrokerShutdownProvider.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/model/BrokerShutdownProvider.java",
                "patch": "@@ -22,5 +22,5 @@\n \n public interface BrokerShutdownProvider\n {\n-    void shutdown();\n+    void shutdown(int exitStatusCode);\n }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/model/BrokerShutdownProvider.java",
                "sha": "7eb0d3cc64dae9e132d91e6ebf3b442cbdbfac14",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/model/adapter/BrokerAdapter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/model/adapter/BrokerAdapter.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/model/adapter/BrokerAdapter.java",
                "patch": "@@ -969,7 +969,8 @@ protected void onExceptionInOpen(RuntimeException e)\n             BrokerShutdownProvider shutdownProvider = systemConfig.getBrokerShutdownProvider();\n             if (shutdownProvider != null)\n             {\n-                shutdownProvider.shutdown();\n+                _eventLogger.message(BrokerMessages.FATAL_ERROR(e.getMessage()));\n+                shutdownProvider.shutdown(1);\n             }\n             else\n             {",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/model/adapter/BrokerAdapter.java",
                "sha": "d413050cefc1bea73d7f834277937647df9d821f",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/registry/ApplicationRegistry.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/registry/ApplicationRegistry.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 9,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/registry/ApplicationRegistry.java",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.qpid.server.logging.SystemOutMessageLogger;\n import org.apache.qpid.server.logging.messages.BrokerMessages;\n import org.apache.qpid.server.model.Broker;\n+import org.apache.qpid.server.model.State;\n import org.apache.qpid.server.model.SystemConfig;\n import org.apache.qpid.server.store.BrokerStoreUpgraderAndRecoverer;\n import org.apache.qpid.server.store.DurableConfigurationStore;\n@@ -77,17 +78,17 @@ public void initialise(BrokerOptions brokerOptions) throws Exception\n         logStartupMessages(startupLogger);\n \n         BrokerStoreUpgraderAndRecoverer upgrader = new BrokerStoreUpgraderAndRecoverer(_systemConfig);\n-        _broker = upgrader.perform(_store);\n+        Broker broker = upgrader.perform(_store);\n+        _broker = broker;\n \n-        _broker.setEventLogger(startupLogger);\n-        _broker.open();\n-\n-        // starting the broker\n-        //_broker.setDesiredState(State.ACTIVE);\n-\n-        startupLogger.message(BrokerMessages.READY());\n-        _broker.setEventLogger(eventLogger);\n+        broker.setEventLogger(startupLogger);\n+        broker.open();\n \n+        if (broker.getState() == State.ACTIVE)\n+        {\n+            startupLogger.message(BrokerMessages.READY());\n+            broker.setEventLogger(eventLogger);\n+        }\n     }\n \n     public void close()",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/main/java/org/apache/qpid/server/registry/ApplicationRegistry.java",
                "sha": "d32f0299d53c16d83a970098469c76e902265f24",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/test/java/org/apache/qpid/server/store/BrokerRecovererTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/test/java/org/apache/qpid/server/store/BrokerRecovererTest.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 4,
                "filename": "broker-core/src/test/java/org/apache/qpid/server/store/BrokerRecovererTest.java",
                "patch": "@@ -34,7 +34,6 @@\n import junit.framework.TestCase;\n \n import org.apache.qpid.server.BrokerOptions;\n-import org.apache.qpid.server.configuration.IllegalConfigurationException;\n import org.apache.qpid.server.configuration.updater.CurrentThreadTaskExecutor;\n import org.apache.qpid.server.configuration.updater.TaskExecutor;\n import org.apache.qpid.server.logging.EventLogger;\n@@ -261,7 +260,7 @@ public void testModelVersionValidationForIncompatibleMajorVersion() throws Excep\n             resolveObjects(_brokerEntry);\n             Broker<?> broker = _systemConfig.getBroker();\n             broker.open();\n-            verify(_brokerShutdownProvider).shutdown();\n+            verify(_brokerShutdownProvider).shutdown(1);\n         }\n     }\n \n@@ -280,7 +279,7 @@ public void testModelVersionValidationForIncompatibleMinorVersion() throws Excep\n \n         Broker<?> broker = (Broker<?>) recover.resolve();\n         broker.open();\n-        verify(_brokerShutdownProvider).shutdown();\n+        verify(_brokerShutdownProvider).shutdown(1);\n     }\n \n     public void testIncorrectModelVersion() throws Exception\n@@ -298,7 +297,7 @@ public void testIncorrectModelVersion() throws Exception\n                     _systemConfig.getObjectFactory().recover(_brokerEntry, _systemConfig);\n             Broker<?> broker = (Broker<?>) recover.resolve();\n             broker.open();\n-            verify(_brokerShutdownProvider).shutdown();\n+            verify(_brokerShutdownProvider).shutdown(1);\n             reset(_brokerShutdownProvider);\n         }\n     }",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker-core/src/test/java/org/apache/qpid/server/store/BrokerRecovererTest.java",
                "sha": "f4802481cbabeaeca38ddc602b30b4d3db00bd28",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker/src/main/java/org/apache/qpid/server/Main.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker/src/main/java/org/apache/qpid/server/Main.java?ref=f22e46eaa237c0242a4adaaf6e2d39b72c00d692",
                "deletions": 1,
                "filename": "broker/src/main/java/org/apache/qpid/server/Main.java",
                "patch": "@@ -454,7 +454,7 @@ public void uncaughtException(final Thread t, final Throwable e)\n \n     protected void startBroker(final BrokerOptions options) throws Exception\n     {\n-        Broker broker = new Broker();\n+        Broker broker = new Broker(true);\n         broker.startup(options);\n     }\n ",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f22e46eaa237c0242a4adaaf6e2d39b72c00d692/broker/src/main/java/org/apache/qpid/server/Main.java",
                "sha": "76f848588464284e929e1cad6945e1c1f71328a9",
                "status": "modified"
            }
        ],
        "message": "QPID-6142: Fix NPE thrown on startup when broker fails to start due to CO validation exceptions",
        "parent": "https://github.com/apache/qpid-broker-j/commit/7cdc1d4b45ce6e846589a3c79792f52971fd8448",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "MainTest.java"
        ]
    },
    "qpid-broker-j_f537296": {
        "bug_id": "qpid-broker-j_f537296",
        "commit": "https://github.com/apache/qpid-broker-j/commit/f5372967854261a87e14a31aa01a04a04f938e49",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/f5372967854261a87e14a31aa01a04a04f938e49/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java?ref=f5372967854261a87e14a31aa01a04a04f938e49",
                "deletions": 1,
                "filename": "broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
                "patch": "@@ -2955,7 +2955,7 @@ private boolean isSystemSubject(final Subject subject)\n     private Subject getSystemSubject(Principal... principals)\n     {\n         Set<Principal> principalSet = new HashSet<>(Arrays.asList(principals));\n-        principalSet.add(_systemPrincipal);\n+        principalSet.add(getSystemPrincipal());\n         return new Subject(true,\n                            principalSet,\n                            Collections.emptySet(),",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/f5372967854261a87e14a31aa01a04a04f938e49/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
                "sha": "4d5388d62a9e9854cbddb2f8debe53a3edc755ea",
                "status": "modified"
            }
        ],
        "message": "QPID-7318 : Fix NPEs on shutdown",
        "parent": "https://github.com/apache/qpid-broker-j/commit/a6617c71cd29cc151b86c8b21037d3627c514ecd",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "AbstractConfiguredObjectTest.java"
        ]
    },
    "qpid-broker-j_fd4ff1a": {
        "bug_id": "qpid-broker-j_fd4ff1a",
        "commit": "https://github.com/apache/qpid-broker-j/commit/fd4ff1afacfe8f30079b3eaa536add75f01efddc",
        "file": [
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/fd4ff1afacfe8f30079b3eaa536add75f01efddc/common/src/main/java/org/apache/qpid/transport/Session.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/common/src/main/java/org/apache/qpid/transport/Session.java?ref=fd4ff1afacfe8f30079b3eaa536add75f01efddc",
                "deletions": 1,
                "filename": "common/src/main/java/org/apache/qpid/transport/Session.java",
                "patch": "@@ -42,7 +42,10 @@\n import static org.apache.qpid.util.Strings.toUTF8;\n \n import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Semaphore;\n import java.util.concurrent.TimeUnit;\n@@ -262,7 +265,32 @@ void resume()\n                 }\n                 else if (m instanceof MessageTransfer)\n                 {\n-                    ((MessageTransfer)m).getHeader().get(DeliveryProperties.class).setRedelivered(true);\n+                \tMessageTransfer xfr = (MessageTransfer)m;\n+                \t\n+                \tif (xfr.getHeader() != null)\n+                \t{\n+                \t\tif (xfr.getHeader().get(DeliveryProperties.class) != null)\n+                \t\t{\n+                \t\t   xfr.getHeader().get(DeliveryProperties.class).setRedelivered(true);\n+                \t\t}\n+                \t\telse\n+                \t\t{\n+                \t\t\tStruct[] structs = xfr.getHeader().getStructs();\n+                \t\t\tDeliveryProperties deliveryProps = new DeliveryProperties();\n+                    \t\tdeliveryProps.setRedelivered(true);\n+                    \t\t\n+                    \t\tList<Struct> list = Arrays.asList(structs);\n+                    \t\tlist.add(deliveryProps);\n+                    \t\txfr.setHeader(new Header(list));\n+                \t\t}\n+                \t\t\n+                \t}\n+                \telse\n+                \t{\n+                \t\tDeliveryProperties deliveryProps = new DeliveryProperties();\n+                \t\tdeliveryProps.setRedelivered(true);\n+                \t\txfr.setHeader(new Header(deliveryProps));\n+                \t}\n                 }\n                 sessionCommandPoint(m.getId(), 0);\n                 send(m);",
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/fd4ff1afacfe8f30079b3eaa536add75f01efddc/common/src/main/java/org/apache/qpid/transport/Session.java",
                "sha": "b3c335ae6885f59f5fd002f84439403f89e9dcaf",
                "status": "modified"
            }
        ],
        "message": "QPID-3205\nAdded the nessacery null checks to avoid a NPE due to missing delivery props or headers all together.",
        "parent": "https://github.com/apache/qpid-broker-j/commit/4497edcd6dd540ea7e22f469693e1f4440e47031",
        "repo": "qpid-broker-j",
        "unit_tests": [
            "SessionTest.java"
        ]
    }
}