[
    {
        "commit": "https://github.com/apache/unomi/commit/6add011c8b2df4053b961b542f6412fa508f6939",
        "file": [
            {
                "patch": "@@ -1010,14 +1010,18 @@ private boolean merge(Map<String, Object> target, Map<String, Object> object) {\n                     } else {\n                         changed |= merge(currentMap, (Map) newEntry.getValue());\n                     }\n-                } else if (StringUtils.equals(packageName, \"java.lang\")\n-                        || StringUtils.equals(packageName, \"org.apache.unomi.api\")) {\n+                } else if (StringUtils.equals(packageName, \"java.lang\")) {\n                     if (newEntry.getValue() != null && !newEntry.getValue().equals(target.get(newEntry.getKey()))) {\n                         target.put(newEntry.getKey(), newEntry.getValue());\n                         changed = true;\n                     }\n                 } else {\n-                    changed |= merge(target.get(newEntry.getKey()), newEntry.getValue());\n+                    if (target.get(newEntry.getKey()) != null) {\n+                        changed |= merge(target.get(newEntry.getKey()), newEntry.getValue());\n+                    } else {\n+                        target.put(newEntry.getKey(), newEntry.getValue());\n+                        changed = true;\n+                    }\n                 }\n             } else {\n                 if (target.containsKey(newEntry.getKey())) {",
                "additions": 7,
                "raw_url": "https://github.com/apache/unomi/raw/6add011c8b2df4053b961b542f6412fa508f6939/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 3,
                "sha": "689e4166105143a18cf96f09243bb81bedbccffe",
                "blob_url": "https://github.com/apache/unomi/blob/6add011c8b2df4053b961b542f6412fa508f6939/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java?ref=6add011c8b2df4053b961b542f6412fa508f6939"
            }
        ],
        "bug_id": "unomi_1",
        "parent": "https://github.com/apache/unomi/commit/c3be6e2d9f76eaa532b1e64c54876a9be8c82b29",
        "message": "UNOMI-242 improve merge function to avoid NPE and handle nested objects",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/fd0edbb352c42434e3c376678cc0d73bfab09038",
        "file": [
            {
                "patch": "@@ -997,10 +997,8 @@ public void bundleChanged(BundleEvent event) {\n     private boolean merge(Map<String, Object> target, Map<String, Object> object) {\n         boolean changed = false;\n         for (Map.Entry<String, Object> newEntry : object.entrySet()) {\n-\n-            String packageName = newEntry.getValue().getClass().getPackage().getName();\n-\n             if (newEntry.getValue() != null) {\n+                String packageName = newEntry.getValue().getClass().getPackage().getName();\n                 if (newEntry.getValue() instanceof Collection) {\n                     target.put(newEntry.getKey(), newEntry.getValue());\n                     changed = true;",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/fd0edbb352c42434e3c376678cc0d73bfab09038/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 3,
                "sha": "e612e151d58602dd23be48474330bb337c1a68ef",
                "blob_url": "https://github.com/apache/unomi/blob/fd0edbb352c42434e3c376678cc0d73bfab09038/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java?ref=fd0edbb352c42434e3c376678cc0d73bfab09038"
            }
        ],
        "bug_id": "unomi_2",
        "parent": "https://github.com/apache/unomi/commit/d45d757f60cd552e2bf3afe7173bbaa26c8df2ad",
        "message": "Fixed NPE handling for newEntry.getValue",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/2b08e0a27ee84306461a78f304fd24909c7adf21",
        "file": [
            {
                "patch": "@@ -1010,14 +1010,18 @@ private boolean merge(Map<String, Object> target, Map<String, Object> object) {\n                     } else {\n                         changed |= merge(currentMap, (Map) newEntry.getValue());\n                     }\n-                } else if (StringUtils.equals(packageName, \"java.lang\")\n-                        || StringUtils.equals(packageName, \"org.apache.unomi.api\")) {\n+                } else if (StringUtils.equals(packageName, \"java.lang\")) {\n                     if (newEntry.getValue() != null && !newEntry.getValue().equals(target.get(newEntry.getKey()))) {\n                         target.put(newEntry.getKey(), newEntry.getValue());\n                         changed = true;\n                     }\n                 } else {\n-                    changed |= merge(target.get(newEntry.getKey()), newEntry.getValue());\n+                    if (target.get(newEntry.getKey()) != null) {\n+                        changed |= merge(target.get(newEntry.getKey()), newEntry.getValue());\n+                    } else {\n+                        target.put(newEntry.getKey(), newEntry.getValue());\n+                        changed = true;\n+                    }\n                 }\n             } else {\n                 if (target.containsKey(newEntry.getKey())) {",
                "additions": 7,
                "raw_url": "https://github.com/apache/unomi/raw/2b08e0a27ee84306461a78f304fd24909c7adf21/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 3,
                "sha": "689e4166105143a18cf96f09243bb81bedbccffe",
                "blob_url": "https://github.com/apache/unomi/blob/2b08e0a27ee84306461a78f304fd24909c7adf21/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java?ref=2b08e0a27ee84306461a78f304fd24909c7adf21"
            }
        ],
        "bug_id": "unomi_3",
        "parent": "https://github.com/apache/unomi/commit/3042c35fb1519284824054a6258c4cff14f8e9c2",
        "message": "Merge pull request #96 from apache/UNOMI-242-improve-merge-function\n\nUNOMI-242 improve merge function to avoid NPE and handle nested objects",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/35330b452641f0ce15090486c838c04e7961f686",
        "file": [
            {
                "patch": "@@ -60,10 +60,12 @@ public void removePersonalizationStrategy(ServiceReference<PersonalizationStrate\n     @Override\n     public boolean filter(Profile profile, Session session, PersonalizedContent personalizedContent) {\n         boolean result = true;\n-        for (Filter filter : personalizedContent.getFilters()) {\n-            Condition condition = filter.getCondition();\n-            if (condition != null && condition.getConditionTypeId() != null) {\n-                result &= profileService.matchCondition(condition, profile, session);\n+        if (personalizedContent.getFilters() != null) {\n+            for (Filter filter : personalizedContent.getFilters()) {\n+                Condition condition = filter.getCondition();\n+                if (condition != null && condition.getConditionTypeId() != null) {\n+                    result &= profileService.matchCondition(condition, profile, session);\n+                }\n             }\n         }\n         return result;",
                "additions": 6,
                "raw_url": "https://github.com/apache/unomi/raw/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/services/PersonalizationServiceImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 4,
                "sha": "6ce76102ed0afd8a77f977dff26586ac39cea327",
                "blob_url": "https://github.com/apache/unomi/blob/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/services/PersonalizationServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/PersonalizationServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/PersonalizationServiceImpl.java?ref=35330b452641f0ce15090486c838c04e7961f686"
            },
            {
                "patch": "@@ -40,9 +40,11 @@ public void setProfileService(ProfileService profileService) {\n         List<String> sortedContent = new ArrayList<>();\n         for (PersonalizationService.PersonalizedContent personalizedContent : personalizationRequest.getContents()) {\n             boolean result = true;\n-            for (PersonalizationService.Filter filter : personalizedContent.getFilters()) {\n-                Condition condition = filter.getCondition();\n-                result &= profileService.matchCondition(condition, profile, session);\n+            if (personalizedContent.getFilters() != null) {\n+                for (PersonalizationService.Filter filter : personalizedContent.getFilters()) {\n+                    Condition condition = filter.getCondition();\n+                    result &= profileService.matchCondition(condition, profile, session);\n+                }\n             }\n             if (result) {\n                 sortedContent.add(personalizedContent.getId());",
                "additions": 5,
                "raw_url": "https://github.com/apache/unomi/raw/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/sorts/FilterPersonalizationStrategy.java",
                "status": "modified",
                "changes": 8,
                "deletions": 3,
                "sha": "41ac9b538965743da674778e0eede340f8fbd616",
                "blob_url": "https://github.com/apache/unomi/blob/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/sorts/FilterPersonalizationStrategy.java",
                "filename": "services/src/main/java/org/apache/unomi/services/sorts/FilterPersonalizationStrategy.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/sorts/FilterPersonalizationStrategy.java?ref=35330b452641f0ce15090486c838c04e7961f686"
            },
            {
                "patch": "@@ -67,14 +67,16 @@ public void setProfileService(ProfileService profileService) {\n                 }\n             }\n \n-            for (PersonalizationService.Filter filter : personalizedContent.getFilters()) {\n-                Condition condition = filter.getCondition();\n-                if (condition != null && condition.getConditionTypeId() != null) {\n-                    if (profileService.matchCondition(condition, profile, session)) {\n-                        if (filter.getProperties().get(\"score\") != null) {\n-                            score += (int) filter.getProperties().get(\"score\");\n-                        } else {\n-                            score += 1;\n+            if (personalizedContent.getFilters() != null) {\n+                for (PersonalizationService.Filter filter : personalizedContent.getFilters()) {\n+                    Condition condition = filter.getCondition();\n+                    if (condition != null && condition.getConditionTypeId() != null) {\n+                        if (profileService.matchCondition(condition, profile, session)) {\n+                            if (filter.getProperties().get(\"score\") != null) {\n+                                score += (int) filter.getProperties().get(\"score\");\n+                            } else {\n+                                score += 1;\n+                            }\n                         }\n                     }\n                 }",
                "additions": 10,
                "raw_url": "https://github.com/apache/unomi/raw/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/sorts/ScorePersonalizationStrategy.java",
                "status": "modified",
                "changes": 18,
                "deletions": 8,
                "sha": "f22d951cf94b7c5fbd6cf33417d32577d6a7f25c",
                "blob_url": "https://github.com/apache/unomi/blob/35330b452641f0ce15090486c838c04e7961f686/services/src/main/java/org/apache/unomi/services/sorts/ScorePersonalizationStrategy.java",
                "filename": "services/src/main/java/org/apache/unomi/services/sorts/ScorePersonalizationStrategy.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/sorts/ScorePersonalizationStrategy.java?ref=35330b452641f0ce15090486c838c04e7961f686"
            }
        ],
        "bug_id": "unomi_4",
        "parent": "https://github.com/apache/unomi/commit/150010a288341baea7fa3230a4171f6ae48c1c5b",
        "message": "UNOMI-134 : Avoid NPE when no filter is set on personalization",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/12641b9b3e72b130a5f05062680238cd4ca8a15f",
        "file": [
            {
                "patch": "@@ -572,8 +572,13 @@ protected Boolean execute(Object... args) {\n                         indexBuilder.execute().actionGet();\n                     } catch (IndexNotFoundException e) {\n                         if (itemsMonthlyIndexed.contains(itemType)) {\n-                            getMonthlyIndex(((TimestampedItem) item).getTimeStamp(), true);\n-                            indexBuilder.execute().actionGet();\n+                            Date timeStamp = ((TimestampedItem) item).getTimeStamp();\n+                            if (timeStamp != null) {\n+                                getMonthlyIndex(timeStamp, true);\n+                                indexBuilder.execute().actionGet();\n+                            } else {\n+                                logger.warn(\"Missing time stamp on item \" + item + \" id=\" + item.getItemId() + \" can't create related monthly index !\");\n+                            }\n                         }\n                     }\n                     return true;",
                "additions": 7,
                "raw_url": "https://github.com/apache/unomi/raw/12641b9b3e72b130a5f05062680238cd4ca8a15f/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "status": "modified",
                "changes": 9,
                "deletions": 2,
                "sha": "b5f1c7a4b545c3c5094005158a6b314aded3066f",
                "blob_url": "https://github.com/apache/unomi/blob/12641b9b3e72b130a5f05062680238cd4ca8a15f/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java?ref=12641b9b3e72b130a5f05062680238cd4ca8a15f"
            }
        ],
        "bug_id": "unomi_5",
        "parent": "https://github.com/apache/unomi/commit/91c9c20bf427be8012163f10962c968d4f78a417",
        "message": "Fix NPE in monthly index creation",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/69b0403d7763d650bcc1e5883eec7e2d6a4d65f0",
        "file": [
            {
                "patch": "@@ -1054,20 +1054,16 @@ public void createMapping(String type, String source) {\n     private Map<String, Object> getPropertyMapping(String property, Map<String, Map<String, Object>> mappings) {\n         Map<String, Object> propMapping = null;\n         String[] properties = StringUtils.split(property, '.');\n-        for (int i = 0; i < properties.length; i++) {\n+        for (int i = 0; i < properties.length && mappings != null; i++) {\n             String s = properties[i];\n-            if (mappings != null) {\n-                propMapping = mappings.get(s);\n-                if (i == properties.length - 1) {\n-                    return propMapping;\n-                } else {\n-                    mappings = (Map<String, Map<String, Object>>) propMapping.get(\"properties\");\n-                }\n+            propMapping = mappings.get(s);\n+            if (i == properties.length - 1) {\n+                return propMapping;\n             } else {\n-                return null;\n+                mappings = propMapping != null ? ((Map<String, Map<String, Object>>) propMapping.get(\"properties\")) : null;\n             }\n         }\n-        return propMapping;\n+        return null;\n     }\n \n     public boolean saveQuery(final String queryName, final String query) {",
                "additions": 6,
                "raw_url": "https://github.com/apache/unomi/raw/69b0403d7763d650bcc1e5883eec7e2d6a4d65f0/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "status": "modified",
                "changes": 16,
                "deletions": 10,
                "sha": "49e09d069e472f00e81ce93a8da50e4f1e523b24",
                "blob_url": "https://github.com/apache/unomi/blob/69b0403d7763d650bcc1e5883eec7e2d6a4d65f0/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java?ref=69b0403d7763d650bcc1e5883eec7e2d6a4d65f0"
            }
        ],
        "bug_id": "unomi_6",
        "parent": "https://github.com/apache/unomi/commit/8b5a44bb1d9bc0090a6e4d11587d02b542acc567",
        "message": "UNOMI-70 : Avoid npe when mapping is not found",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/cdaa8613c3f8341b91014f313fc2aa134c22d038",
        "file": [
            {
                "patch": "@@ -105,7 +105,11 @@ public void process(Exchange exchange) throws Exception {\n             for (String fieldMappingKey : fieldsMapping.keySet()) {\n                 PropertyType propertyType = RouterUtils.getPropertyTypeById(profileService.getAllPropertyTypes(\"profiles\"), fieldMappingKey);\n \n-                logger.debug(\"$$$$ : LineSplitProcessor : PropType value : {}\", profileData[fieldsMapping.get(fieldMappingKey)].trim());\n+                if (fieldMappingKey != null && fieldsMapping.get(fieldMappingKey) != null && profileData != null && profileData[fieldsMapping.get(fieldMappingKey)] != null) {\n+                    logger.debug(\"$$$$ : LineSplitProcessor : PropType value : {}\", profileData[fieldsMapping.get(fieldMappingKey)].trim());\n+                } else {\n+                    logger.debug(\"$$$$ : LineSplitProcessor : no profileData found for fieldMappingKey=\" + fieldMappingKey);\n+                }\n \n                 if (profileData.length > fieldsMapping.get(fieldMappingKey)) {\n                     try {\n@@ -136,7 +140,7 @@ public void process(Exchange exchange) throws Exception {\n                         }\n                     } catch (Exception e) {\n                         logger.error(\"Error converting profileData\", e);\n-                        if (fieldMappingKey != null && fieldsMapping.get(fieldMappingKey) != null && profileData[fieldsMapping.get(fieldMappingKey)] != null) {\n+                        if (fieldMappingKey != null && fieldsMapping.get(fieldMappingKey) != null && profileData != null && profileData[fieldsMapping.get(fieldMappingKey)] != null) {\n                             throw new BadProfileDataFormatException(\"Unable to convert '\" + profileData[fieldsMapping.get(fieldMappingKey)].trim() + \"' to \" + propertyType!=null?propertyType.getValueTypeId():\"Null propertyType \", new Throwable(\"DATA_TYPE\"));\n                         } else {\n                             throw new BadProfileDataFormatException(\"Unable to find profile data for key \" + fieldMappingKey, new Throwable(\"DATA_TYPE\"));",
                "additions": 6,
                "raw_url": "https://github.com/apache/unomi/raw/cdaa8613c3f8341b91014f313fc2aa134c22d038/extensions/router/router-core/src/main/java/org/apache/unomi/router/core/processor/LineSplitProcessor.java",
                "status": "modified",
                "changes": 8,
                "deletions": 2,
                "sha": "4d128a4bb26403d837ebcc340a6dd813fd7c6db7",
                "blob_url": "https://github.com/apache/unomi/blob/cdaa8613c3f8341b91014f313fc2aa134c22d038/extensions/router/router-core/src/main/java/org/apache/unomi/router/core/processor/LineSplitProcessor.java",
                "filename": "extensions/router/router-core/src/main/java/org/apache/unomi/router/core/processor/LineSplitProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/extensions/router/router-core/src/main/java/org/apache/unomi/router/core/processor/LineSplitProcessor.java?ref=cdaa8613c3f8341b91014f313fc2aa134c22d038"
            }
        ],
        "bug_id": "unomi_7",
        "parent": "https://github.com/apache/unomi/commit/cad95f81bbbf41ad92ad849c16ee8ce4f93a0557",
        "message": "UNOMI-118 Add integration tests for profile import\n- Fix NPE when running integration tests.\n\nSigned-off-by: Serge Huber <shuber@apache.org>",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/73645371a0286361085edf2206c76df71b0f80dd",
        "file": [
            {
                "patch": "@@ -40,7 +40,10 @@\n import org.oasis_open.contextserver.persistence.spi.CustomObjectMapper;\n import org.oasis_open.contextserver.persistence.spi.PersistenceService;\n import org.oasis_open.contextserver.persistence.spi.aggregate.*;\n-import org.osgi.framework.*;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleEvent;\n+import org.osgi.framework.SynchronousBundleListener;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -382,7 +385,10 @@ private void createRule(Campaign campaign, Condition event) {\n         PartialList<Campaign> campaigns = persistenceService.query(query.getCondition(), query.getSortby(), Campaign.class, query.getOffset(), query.getLimit());\n         List<CampaignDetail> details = new LinkedList<>();\n         for (Campaign definition : campaigns.getList()) {\n-            details.add(getCampaignDetail(definition));\n+            final CampaignDetail campaignDetail = getCampaignDetail(definition);\n+            if (campaignDetail != null) {\n+                details.add(campaignDetail);\n+            }\n         }\n         return new PartialList<>(details, campaigns.getOffset(), campaigns.getPageSize(), campaigns.getTotalSize());\n     }\n@@ -392,6 +398,10 @@ public CampaignDetail getCampaignDetail(String id) {\n     }\n \n     private CampaignDetail getCampaignDetail(Campaign campaign) {\n+        if (campaign == null) {\n+            return null;\n+        }\n+\n         CampaignDetail campaignDetail = new CampaignDetail(campaign);\n \n         // engaged profile",
                "additions": 12,
                "raw_url": "https://github.com/apache/unomi/raw/73645371a0286361085edf2206c76df71b0f80dd/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "status": "modified",
                "changes": 14,
                "deletions": 2,
                "sha": "496bf94cbe953906b497f13876a9b14fa9f85944",
                "blob_url": "https://github.com/apache/unomi/blob/73645371a0286361085edf2206c76df71b0f80dd/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java?ref=73645371a0286361085edf2206c76df71b0f80dd"
            }
        ],
        "bug_id": "unomi_8",
        "parent": "https://github.com/apache/unomi/commit/5dda063526b3e1c4c3afc40410261aba5c35c3d7",
        "message": "Avoid NPE.",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/14717da67fdd74efb1754c0ac236badf8c899a91",
        "file": [
            {
                "patch": "@@ -490,8 +490,10 @@ public GoalReport getGoalReport(String scope, String goalId, AggregateQuery quer\n         GoalReport report = new GoalReport();\n \n         GoalReport.Stat stat = new GoalReport.Stat();\n-        stat.setStartCount(all.remove(\"_filtered\"));\n-        stat.setTargetCount(match.remove(\"_filtered\"));\n+        Long allFiltered = all.remove(\"_filtered\");\n+        Long matchFiltered = all.remove(\"_filtered\");\n+        stat.setStartCount(allFiltered != null ? allFiltered : 0);\n+        stat.setTargetCount(matchFiltered != null ? matchFiltered : 0);\n         stat.setConversionRate(stat.getStartCount() > 0 ? (float) stat.getTargetCount() / (float) stat.getStartCount() : 0);\n         report.setGlobalStats(stat);\n         all.remove(\"_all\");",
                "additions": 4,
                "raw_url": "https://github.com/apache/unomi/raw/14717da67fdd74efb1754c0ac236badf8c899a91/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "570a0d4967987143606b5fe4a9164451f8d370d2",
                "blob_url": "https://github.com/apache/unomi/blob/14717da67fdd74efb1754c0ac236badf8c899a91/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java?ref=14717da67fdd74efb1754c0ac236badf8c899a91"
            }
        ],
        "bug_id": "unomi_9",
        "parent": "https://github.com/apache/unomi/commit/fd04164948e42d4e95bbfa3c8654fc1daaa6863a",
        "message": "fix NPE",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/d1dffee6f253c6aee4e5d13536d14f6f17ec18d6",
        "file": [
            {
                "patch": "@@ -22,29 +22,10 @@\n  * #L%\n  */\n \n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.Writer;\n-import java.util.*;\n-import javax.inject.Inject;\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.Cookie;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-\n import com.fasterxml.jackson.core.JsonFactory;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import org.apache.commons.io.IOUtils;\n-import org.oasis_open.contextserver.api.ContextRequest;\n-import org.oasis_open.contextserver.api.ContextResponse;\n-import org.oasis_open.contextserver.api.Event;\n-import org.oasis_open.contextserver.api.Persona;\n-import org.oasis_open.contextserver.api.PersonaWithSessions;\n-import org.oasis_open.contextserver.api.Profile;\n-import org.oasis_open.contextserver.api.Session;\n+import org.oasis_open.contextserver.api.*;\n import org.oasis_open.contextserver.api.conditions.Condition;\n import org.oasis_open.contextserver.api.services.EventService;\n import org.oasis_open.contextserver.api.services.ProfileService;\n@@ -55,6 +36,19 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import javax.inject.Inject;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.annotation.WebServlet;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Writer;\n+import java.util.*;\n+\n /**\n  * A servlet filter to serve a context-specific Javascript containing the current request context object.\n  */\n@@ -229,7 +223,8 @@ public void service(ServletRequest request, ServletResponse response) throws Ser\n             profileUpdated.getAttributes().put(Event.HTTP_REQUEST_ATTRIBUTE, request);\n             profileUpdated.getAttributes().put(Event.HTTP_RESPONSE_ATTRIBUTE, response);\n \n-            logger.debug(\"Received event \" + profileUpdated.getEventType() + \" for profile=\" + profile.getItemId() + \" session=\" + session.getItemId() + \" target=\" + profileUpdated.getTarget() + \" timestamp=\" + timestamp);\n+            logger.debug(\"Received event {} for profile={} {} target={} timestamp={}\", profileUpdated.getEventType(), profile.getItemId(),\n+                    session != null ? \" session=\" + session.getItemId() : \"\", profileUpdated.getTarget(), timestamp);\n             changes |= eventService.send(profileUpdated);\n         }\n ",
                "additions": 16,
                "raw_url": "https://github.com/apache/unomi/raw/d1dffee6f253c6aee4e5d13536d14f6f17ec18d6/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "status": "modified",
                "changes": 37,
                "deletions": 21,
                "sha": "0f1174f7fc92ce14d7d5b6f883decf0065b4be7b",
                "blob_url": "https://github.com/apache/unomi/blob/d1dffee6f253c6aee4e5d13536d14f6f17ec18d6/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "filename": "wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java?ref=d1dffee6f253c6aee4e5d13536d14f6f17ec18d6"
            }
        ],
        "bug_id": "unomi_10",
        "parent": "https://github.com/apache/unomi/commit/f2e70dad3a9d5cdb90d09661b94fd65007a1511e",
        "message": "Prevent NPE.",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/1868d46fc48613a84181de13024e26e5eb3aeadc",
        "file": [
            {
                "patch": "@@ -162,7 +162,9 @@ public boolean eval(Condition condition, Item item, Map<String, Object> context,\n             }\n         }\n \n-        if(actualValue == null){\n+        if(op == null) {\n+            return false;\n+        } else if(actualValue == null){\n             return op.equals(\"missing\");\n         } else if (op.equals(\"exists\")) {\n             return true;\n@@ -202,7 +204,7 @@ public boolean eval(Condition condition, Item item, Map<String, Object> context,\n         } else if (op.equals(\"endsWith\")) {\n             return actualValue.toString().endsWith(expectedValue);\n         } else if (op.equals(\"matchesRegex\")) {\n-            return Pattern.compile(expectedValue).matcher(actualValue.toString()).matches();\n+            return expectedValue != null && Pattern.compile(expectedValue).matcher(actualValue.toString()).matches();\n         } else if (op.equals(\"in\") || op.equals(\"notIn\") || op.equals(\"all\")) {\n             List<?> expectedValues = (List<?>) condition.getParameter(\"propertyValues\");\n             List<?> expectedValuesInteger = (List<?>) condition.getParameter(\"propertyValuesInteger\");",
                "additions": 4,
                "raw_url": "https://github.com/apache/unomi/raw/1868d46fc48613a84181de13024e26e5eb3aeadc/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PropertyConditionEvaluator.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "b06d1cc7273a4ef0b2d9ff63238dbbacbfeb816a",
                "blob_url": "https://github.com/apache/unomi/blob/1868d46fc48613a84181de13024e26e5eb3aeadc/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PropertyConditionEvaluator.java",
                "filename": "plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PropertyConditionEvaluator.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PropertyConditionEvaluator.java?ref=1868d46fc48613a84181de13024e26e5eb3aeadc"
            }
        ],
        "bug_id": "unomi_11",
        "parent": "https://github.com/apache/unomi/commit/f8360268a7990cf2fcc592c18123c9bf80b609f7",
        "message": "fix NPEs in cxs",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/7c5d0c3183565a8bd643950d6c876ad9a37f7178",
        "file": [
            {
                "patch": "@@ -432,7 +432,11 @@ public ValueType getValueType(String id) {\n     }\n \n     public Set<PropertyType> getPropertyTypeByMapping(String propertyName) {\n-        return propertyTypeByMapping.get(propertyName);\n+        if (propertyTypeByMapping.containsKey(propertyName)) {\n+            return propertyTypeByMapping.get(propertyName);\n+        } else {\n+            return Collections.EMPTY_SET;\n+        }\n     }\n \n     public PropertyType getPropertyType(String target, String id) {",
                "additions": 5,
                "raw_url": "https://github.com/apache/unomi/raw/7c5d0c3183565a8bd643950d6c876ad9a37f7178/services/src/main/java/org/oasis_open/contextserver/impl/services/DefinitionsServiceImpl.java",
                "status": "modified",
                "changes": 6,
                "deletions": 1,
                "sha": "f724f07395a0859807de473c40a2dbe4ed79fd15",
                "blob_url": "https://github.com/apache/unomi/blob/7c5d0c3183565a8bd643950d6c876ad9a37f7178/services/src/main/java/org/oasis_open/contextserver/impl/services/DefinitionsServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/DefinitionsServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/DefinitionsServiceImpl.java?ref=7c5d0c3183565a8bd643950d6c876ad9a37f7178"
            }
        ],
        "bug_id": "unomi_12",
        "parent": "https://github.com/apache/unomi/commit/683f249a774aa662241b9193b569981f9a16d10d",
        "message": "Fixed npe",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/8169704ec8d2eaa2918b911eee22d810e9f14c09",
        "file": [
            {
                "patch": "@@ -84,10 +84,6 @@ public int send(Event event) {\n         }\n \n         if (profile != null) {\n-            Map<String, Object> previousProperties = new LinkedHashMap<String, Object>(profile.getProperties());\n-            Map<String, Object> previousSystemProperties = new LinkedHashMap<String, Object>(profile.getSystemProperties());\n-            Set<String> previousSegments = new HashSet<String>(profile.getSegments());\n-\n             for (EventListenerService eventListenerService : eventListeners) {\n                 if (eventListenerService.canHandle(event)) {\n                     changes |= eventListenerService.onEvent(event);",
                "additions": 0,
                "raw_url": "https://github.com/apache/unomi/raw/8169704ec8d2eaa2918b911eee22d810e9f14c09/services/src/main/java/org/oasis_open/contextserver/impl/services/EventServiceImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 4,
                "sha": "defc087d5a29f4b27d0237c73c9ae538652b69c1",
                "blob_url": "https://github.com/apache/unomi/blob/8169704ec8d2eaa2918b911eee22d810e9f14c09/services/src/main/java/org/oasis_open/contextserver/impl/services/EventServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/EventServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/EventServiceImpl.java?ref=8169704ec8d2eaa2918b911eee22d810e9f14c09"
            }
        ],
        "bug_id": "unomi_13",
        "parent": "https://github.com/apache/unomi/commit/a65949d533f3d997ca6423c01813eee8081d149c",
        "message": "Fixed NPE with personas",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/5dda063526b3e1c4c3afc40410261aba5c35c3d7",
        "file": [
            {
                "patch": "@@ -299,18 +299,20 @@ public void setSegmentDefinition(Segment segment) {\n     }\n \n     private void checkIfSegmentIsImpacted(Segment segment, Condition condition, String segmentToDeleteId, Set<Segment> impactedSegments) {\n-        @SuppressWarnings(\"unchecked\")\n-        final List<Condition> subConditions = (List<Condition>) condition.getParameter(\"subConditions\");\n-        if (subConditions != null) {\n-            for (Condition subCondition : subConditions) {\n-                checkIfSegmentIsImpacted(segment, subCondition, segmentToDeleteId, impactedSegments);\n-            }\n-        } else if (\"profileSegmentCondition\".equals(condition.getConditionTypeId())) {\n+        if(condition != null) {\n             @SuppressWarnings(\"unchecked\")\n-            final List<String> referencedSegmentIds = (List<String>) condition.getParameter(\"segments\");\n+            final List<Condition> subConditions = (List<Condition>) condition.getParameter(\"subConditions\");\n+            if (subConditions != null) {\n+                for (Condition subCondition : subConditions) {\n+                    checkIfSegmentIsImpacted(segment, subCondition, segmentToDeleteId, impactedSegments);\n+                }\n+            } else if (\"profileSegmentCondition\".equals(condition.getConditionTypeId())) {\n+                @SuppressWarnings(\"unchecked\")\n+                final List<String> referencedSegmentIds = (List<String>) condition.getParameter(\"segments\");\n \n-            if (referencedSegmentIds.indexOf(segmentToDeleteId) >= 0) {\n-                impactedSegments.add(segment);\n+                if (referencedSegmentIds.indexOf(segmentToDeleteId) >= 0) {\n+                    impactedSegments.add(segment);\n+                }\n             }\n         }\n     }\n@@ -372,10 +374,16 @@ private Condition updateImpactedCondition(Condition condition, String segmentId)\n \n         if (!validate || impactedSegments.isEmpty()) {\n             // update profiles\n-            PartialList<Profile> profiles = getMatchingIndividuals(segmentId, 0, -1, null);\n-            for (Profile profile : profiles.getList()) {\n-                profile.getSegments().remove(segmentId);\n-                persistenceService.update(profile.getItemId(), null, Profile.class, \"segments\", profile.getSegments());\n+            Condition segmentCondition = new Condition();\n+            segmentCondition.setConditionType(definitionsService.getConditionType(\"profilePropertyCondition\"));\n+            segmentCondition.setParameter(\"propertyName\", \"segments\");\n+            segmentCondition.setParameter(\"comparisonOperator\", \"equals\");\n+            segmentCondition.setParameter(\"propertyValue\", segmentId);\n+\n+            List<Profile> previousProfiles = persistenceService.query(segmentCondition, null, Profile.class);\n+            for (Profile profileToRemove : previousProfiles) {\n+                profileToRemove.getSegments().remove(segmentId);\n+                persistenceService.update(profileToRemove.getItemId(), null, Profile.class, \"segments\", profileToRemove.getSegments());\n             }\n \n             // update impacted segments",
                "additions": 22,
                "raw_url": "https://github.com/apache/unomi/raw/5dda063526b3e1c4c3afc40410261aba5c35c3d7/services/src/main/java/org/oasis_open/contextserver/impl/services/SegmentServiceImpl.java",
                "status": "modified",
                "changes": 36,
                "deletions": 14,
                "sha": "4123bce574a6b0ab85827bb2eeeff83bf769aaf9",
                "blob_url": "https://github.com/apache/unomi/blob/5dda063526b3e1c4c3afc40410261aba5c35c3d7/services/src/main/java/org/oasis_open/contextserver/impl/services/SegmentServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/SegmentServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/SegmentServiceImpl.java?ref=5dda063526b3e1c4c3afc40410261aba5c35c3d7"
            }
        ],
        "bug_id": "unomi_14",
        "parent": "https://github.com/apache/unomi/commit/e2459ba400ccf87a36e949fbf3716d8540de2686",
        "message": "QAMF-9: fix NPE from previous commit",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/6832aae60fec56022a2de9ba7a5811c7fbf05934",
        "file": [
            {
                "patch": "@@ -20,6 +20,7 @@\n import org.apache.cxf.rs.security.cors.CrossOriginResourceSharing;\n import org.apache.unomi.api.PluginType;\n import org.apache.unomi.api.PropertyMergeStrategyType;\n+import org.apache.unomi.api.Tag;\n import org.apache.unomi.api.ValueType;\n import org.apache.unomi.api.actions.ActionType;\n import org.apache.unomi.api.conditions.ConditionType;\n@@ -86,14 +87,18 @@ public void setLocalizationHelper(LocalizationHelper localizationHelper) {\n      * Retrieves the tag with the specified identifier localized using the specified language.\n      *\n      * @param language     the language to use to localize.\n-     * @param tag          the identifier of the tag to retrieve\n+     * @param tagId          the identifier of the tag to retrieve\n      * @param filterHidden {@code true} if hidden sub-tags should be filtered out, {@code false} otherwise\n      * @return the tag with the specified identifier\n      */\n     @GET\n     @Path(\"/tags/{tagId}\")\n-    public RESTTag getTag(@PathParam(\"tagId\") String tag, @QueryParam(\"filterHidden\") @DefaultValue(\"false\") boolean filterHidden, @HeaderParam(\"Accept-Language\") String language) {\n-        return localizationHelper.generateTag(definitionsService.getTag(tag), language, filterHidden);\n+    public RESTTag getTag(@PathParam(\"tagId\") String tagId, @QueryParam(\"filterHidden\") @DefaultValue(\"false\") boolean filterHidden, @HeaderParam(\"Accept-Language\") String language) {\n+        Tag tag = definitionsService.getTag(tagId);\n+        if (tag == null) {\n+            throw new NotFoundException(new NoSuchElementException(tagId)); // return 404 when tag is not found\n+        }\n+        return localizationHelper.generateTag(tag, language, filterHidden);\n     }\n \n     /**\n@@ -123,7 +128,10 @@ public RESTTag getTag(@PathParam(\"tagId\") String tag, @QueryParam(\"filterHidden\"\n         String[] tagsArray = tags.split(\",\");\n         Set<ConditionType> results = new LinkedHashSet<>();\n         for (String s : tagsArray) {\n-            results.addAll(definitionsService.getConditionTypesByTag(definitionsService.getTag(s), recursive));\n+            Tag tag = definitionsService.getTag(s);\n+            if (tag != null) {\n+                results.addAll(definitionsService.getConditionTypesByTag(tag, recursive));\n+            }\n         }\n         return localizationHelper.generateConditions(results, language);\n     }\n@@ -191,7 +199,10 @@ public void removeConditionType(@PathParam(\"conditionTypeId\") String conditionTy\n         String[] tagsArray = tags.split(\",\");\n         Set<ActionType> results = new LinkedHashSet<>();\n         for (String s : tagsArray) {\n-            results.addAll(definitionsService.getActionTypeByTag(definitionsService.getTag(s), recursive));\n+            Tag tag = definitionsService.getTag(s);\n+            if (tag != null) {\n+                results.addAll(definitionsService.getActionTypeByTag(tag, recursive));\n+            }\n         }\n         return localizationHelper.generateActions(results, language);\n     }\n@@ -258,7 +269,10 @@ public void removeActionType(@PathParam(\"actionTypeId\") String actionTypeId) {\n         String[] tagsArray = tags.split(\",\");\n         Set<ValueType> results = new LinkedHashSet<>();\n         for (String s : tagsArray) {\n-            results.addAll(definitionsService.getValueTypeByTag(definitionsService.getTag(s), recursive));\n+            Tag tag = definitionsService.getTag(s);\n+            if (tag != null) {\n+                results.addAll(definitionsService.getValueTypeByTag(tag, recursive));\n+            }\n         }\n         return localizationHelper.generateValueTypes(results, language);\n     }",
                "additions": 20,
                "raw_url": "https://github.com/apache/unomi/raw/6832aae60fec56022a2de9ba7a5811c7fbf05934/rest/src/main/java/org/apache/unomi/rest/DefinitionsServiceEndPoint.java",
                "status": "modified",
                "changes": 26,
                "deletions": 6,
                "sha": "e9754a8b97f269e8622efb3e1ddb70cf530aab6e",
                "blob_url": "https://github.com/apache/unomi/blob/6832aae60fec56022a2de9ba7a5811c7fbf05934/rest/src/main/java/org/apache/unomi/rest/DefinitionsServiceEndPoint.java",
                "filename": "rest/src/main/java/org/apache/unomi/rest/DefinitionsServiceEndPoint.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/rest/src/main/java/org/apache/unomi/rest/DefinitionsServiceEndPoint.java?ref=6832aae60fec56022a2de9ba7a5811c7fbf05934"
            },
            {
                "patch": "@@ -219,7 +219,7 @@ public RESTTag generateTag(Tag tag, String language) {\n      * @return a {@link RESTTag} based on the specified {@link Tag} and localized using the specified language\n      */\n     public RESTTag generateTag(Tag tag, String language, boolean filterHidden) {\n-        if (filterHidden && tag.isHidden()) {\n+        if (tag == null || (filterHidden && tag.isHidden())) {\n             return null;\n         }\n         RESTTag result = new RESTTag();",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/6832aae60fec56022a2de9ba7a5811c7fbf05934/rest/src/main/java/org/apache/unomi/rest/LocalizationHelper.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "6cb5d895ac22883c29920b364c38a9201f5cc541",
                "blob_url": "https://github.com/apache/unomi/blob/6832aae60fec56022a2de9ba7a5811c7fbf05934/rest/src/main/java/org/apache/unomi/rest/LocalizationHelper.java",
                "filename": "rest/src/main/java/org/apache/unomi/rest/LocalizationHelper.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/rest/src/main/java/org/apache/unomi/rest/LocalizationHelper.java?ref=6832aae60fec56022a2de9ba7a5811c7fbf05934"
            },
            {
                "patch": "@@ -237,9 +237,6 @@ private void loadPredefinedValueTypes(BundleContext bundleContext) {\n \n     public Tag getTag(String tagId) {\n         Tag completeTag = tags.get(tagId);\n-        if (completeTag == null) {\n-            return null;\n-        }\n         return completeTag;\n     }\n ",
                "additions": 0,
                "raw_url": "https://github.com/apache/unomi/raw/6832aae60fec56022a2de9ba7a5811c7fbf05934/services/src/main/java/org/apache/unomi/services/services/DefinitionsServiceImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 3,
                "sha": "b1a38a2c8b534bd5447d45d5a27d97eecaa45115",
                "blob_url": "https://github.com/apache/unomi/blob/6832aae60fec56022a2de9ba7a5811c7fbf05934/services/src/main/java/org/apache/unomi/services/services/DefinitionsServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/DefinitionsServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/DefinitionsServiceImpl.java?ref=6832aae60fec56022a2de9ba7a5811c7fbf05934"
            },
            {
                "patch": "@@ -610,17 +610,20 @@ public Persona createPersona(String personaId) {\n         return propertyTypes;\n     }\n \n-    public Set<PropertyType> getPropertyTypeByTag(String tag, boolean includeFromSubtags) {\n+    public Set<PropertyType> getPropertyTypeByTag(String tagId, boolean includeFromSubtags) {\n         Set<PropertyType> propertyTypes = new LinkedHashSet<PropertyType>();\n-        Collection<PropertyType> directPropertyTypes = persistenceService.query(\"tags\", tag, \"rank\", PropertyType.class);\n+        Collection<PropertyType> directPropertyTypes = persistenceService.query(\"tags\", tagId, \"rank\", PropertyType.class);\n \n         if (directPropertyTypes != null) {\n             propertyTypes.addAll(directPropertyTypes);\n         }\n         if (includeFromSubtags) {\n-            for (Tag subTag : definitionsService.getTag(tag).getSubTags()) {\n-                Set<PropertyType> childPropertyTypes = getPropertyTypeByTag(subTag.getId(), true);\n-                propertyTypes.addAll(childPropertyTypes);\n+            Tag tag = definitionsService.getTag(tagId);\n+            if (tag != null) {\n+                for (Tag subTag : tag.getSubTags()) {\n+                    Set<PropertyType> childPropertyTypes = getPropertyTypeByTag(subTag.getId(), true);\n+                    propertyTypes.addAll(childPropertyTypes);\n+                }\n             }\n         }\n         return propertyTypes;",
                "additions": 8,
                "raw_url": "https://github.com/apache/unomi/raw/6832aae60fec56022a2de9ba7a5811c7fbf05934/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 13,
                "deletions": 5,
                "sha": "432e1f64b08c935443419dcf7237941fd5fe0da4",
                "blob_url": "https://github.com/apache/unomi/blob/6832aae60fec56022a2de9ba7a5811c7fbf05934/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/apache/unomi/services/services/ProfileServiceImpl.java?ref=6832aae60fec56022a2de9ba7a5811c7fbf05934"
            }
        ],
        "bug_id": "unomi_15",
        "parent": "https://github.com/apache/unomi/commit/c97f92274831b2284cb395294b5390fabd25caa0",
        "message": "UNOMI-46 : Avoid NPE when asking for the definition of a missing tag + Return 404",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/dd354cc5ce451ba5618fcf1aa901cb8cd02b0275",
        "file": [
            {
                "patch": "@@ -62,7 +62,9 @@ public Date getLastEventDate() {\n \n     public void setLastEventDate(Date lastEventDate) {\n         this.lastEventDate = lastEventDate;\n-        duration = lastEventDate.getTime() - sessionCreationDate.getTime();\n+        if (lastEventDate != null) {\n+            duration = lastEventDate.getTime() - sessionCreationDate.getTime();\n+        }\n     }\n \n     public long getDuration() {",
                "additions": 3,
                "raw_url": "https://github.com/apache/unomi/raw/dd354cc5ce451ba5618fcf1aa901cb8cd02b0275/wemi-context-server/api/src/main/java/org/oasis_open/wemi/context/server/api/Session.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "646ba84a7b22b4f5d550a5eb2d71cf313c46fb83",
                "blob_url": "https://github.com/apache/unomi/blob/dd354cc5ce451ba5618fcf1aa901cb8cd02b0275/wemi-context-server/api/src/main/java/org/oasis_open/wemi/context/server/api/Session.java",
                "filename": "wemi-context-server/api/src/main/java/org/oasis_open/wemi/context/server/api/Session.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/api/src/main/java/org/oasis_open/wemi/context/server/api/Session.java?ref=dd354cc5ce451ba5618fcf1aa901cb8cd02b0275"
            }
        ],
        "bug_id": "unomi_16",
        "parent": "https://github.com/apache/unomi/commit/d3361a6261a83d15aa105e0d5438d9d99f5e527c",
        "message": "Avoid npe for new sessions",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/9cb93113a3f720d7255c49b91aa16ef1ae9c7858",
        "file": [
            {
                "patch": "@@ -101,8 +101,8 @@ public boolean eval(Condition condition, Item item, Map<String, Object> context,\n             count = persistenceService.queryCount(andCondition, Event.ITEM_TYPE);\n         }\n \n-        Integer minimumEventCount = !parameters.containsKey(\"minimumEventCount\")  ? 0 : (Integer) parameters.get(\"minimumEventCount\");\n-        Integer maximumEventCount = !parameters.containsKey(\"maximumEventCount\")  ? Integer.MAX_VALUE : (Integer) parameters.get(\"maximumEventCount\");\n+        Integer minimumEventCount = parameters.get(\"minimumEventCount\") == null  ? 0 : (Integer) parameters.get(\"minimumEventCount\");\n+        Integer maximumEventCount = parameters.get(\"maximumEventCount\") == null  ? Integer.MAX_VALUE : (Integer) parameters.get(\"maximumEventCount\");\n \n         return (minimumEventCount == 0 && maximumEventCount == Integer.MAX_VALUE && count > 0) ||\n                 (count >= minimumEventCount && count <= maximumEventCount);",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/9cb93113a3f720d7255c49b91aa16ef1ae9c7858/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PastEventConditionEvaluator.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "64542bc46b58b54635160e2ac063588ec6be7e80",
                "blob_url": "https://github.com/apache/unomi/blob/9cb93113a3f720d7255c49b91aa16ef1ae9c7858/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PastEventConditionEvaluator.java",
                "filename": "plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PastEventConditionEvaluator.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/baseplugin/src/main/java/org/oasis_open/contextserver/plugins/baseplugin/conditions/PastEventConditionEvaluator.java?ref=9cb93113a3f720d7255c49b91aa16ef1ae9c7858"
            }
        ],
        "bug_id": "unomi_17",
        "parent": "https://github.com/apache/unomi/commit/30e29d84f06620d57ab1213d1753ab065b16f1c9",
        "message": "QAMF-278: NPE in past event condition eval",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/38861fdead8376713684334be5c889fdc3c0d079",
        "file": [
            {
                "patch": "@@ -682,7 +682,7 @@ public int compare(PropertyType o1, PropertyType o2) {\n         });\n \n         for (PropertyType propertyType : allPropertyTypes) {\n-            if (propertyType.getAutomaticMappingsFrom().contains(propertyName)) {\n+            if (propertyType.getAutomaticMappingsFrom() != null && propertyType.getAutomaticMappingsFrom().contains(propertyName)) {\n                 l.add(propertyType);\n             }\n         }",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/38861fdead8376713684334be5c889fdc3c0d079/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "594ba4aeb1ad723f5ea34cccc28c147b3ce869ec",
                "blob_url": "https://github.com/apache/unomi/blob/38861fdead8376713684334be5c889fdc3c0d079/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java?ref=38861fdead8376713684334be5c889fdc3c0d079"
            }
        ],
        "bug_id": "unomi_18",
        "parent": "https://github.com/apache/unomi/commit/3fa2d09f673430b79bf42038e5e79961ee7c8231",
        "message": "fix npe when a custom property type was created",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/6e07e562dbb4a22fbd92d6e8133670bd2bf84084",
        "file": [
            {
                "patch": "@@ -174,7 +174,7 @@ public void service(ServletRequest request, ServletResponse response) throws Ser\n             if (buffer.length() > 0) {\n                 handleRequest(buffer.toString(), user, session, data);\n             }\n-        } else if (\"get\".equals(httpMethod.toLowerCase())) {\n+        } else if (\"get\".equals(httpMethod.toLowerCase()) && request.getParameter(\"payload\") != null) {\n             handleRequest(request.getParameter(\"payload\"), user, session, data);\n         }\n         responseWriter.append(CustomObjectMapper.getObjectMapper().writeValueAsString(data));",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/6e07e562dbb4a22fbd92d6e8133670bd2bf84084/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "c35990c0c9c2d7e1a31274a0ccaf223c60c5bec4",
                "blob_url": "https://github.com/apache/unomi/blob/6e07e562dbb4a22fbd92d6e8133670bd2bf84084/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "filename": "wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java?ref=6e07e562dbb4a22fbd92d6e8133670bd2bf84084"
            }
        ],
        "bug_id": "unomi_19",
        "parent": "https://github.com/apache/unomi/commit/19d7fdc79273e27a7da12cc34c1c0bebc418b8c1",
        "message": "fixed npe when no payload given",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/b3c49dc851fffdada9e90e261277bd5569323875",
        "file": [
            {
                "patch": "@@ -45,7 +45,7 @@ public boolean execute(Action action, Event event) {\n \n         Object currentMergePropertyValue = user.getProperty(mergeProfilePropertyName);\n \n-        User masterUser = userService.mergeUsersOnProperty(user, event.getSession(), mergeProfilePropertyName, currentMergePropertyValue.toString());\n+        User masterUser = userService.mergeUsersOnProperty(user, event.getSession(), mergeProfilePropertyName, (currentMergePropertyValue == null ? null : currentMergePropertyValue.toString()));\n \n         if (masterUser == null) {\n             return false;",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/b3c49dc851fffdada9e90e261277bd5569323875/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/actions/MergeProfilesOnPropertyAction.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "33a2b171033b3cc286d2abbebb4369723284006a",
                "blob_url": "https://github.com/apache/unomi/blob/b3c49dc851fffdada9e90e261277bd5569323875/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/actions/MergeProfilesOnPropertyAction.java",
                "filename": "wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/actions/MergeProfilesOnPropertyAction.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/actions/MergeProfilesOnPropertyAction.java?ref=b3c49dc851fffdada9e90e261277bd5569323875"
            }
        ],
        "bug_id": "unomi_20",
        "parent": "https://github.com/apache/unomi/commit/75db322e6c2e823a731b091fdc439d90df9543ad",
        "message": "Fix NPE on profile merge if property has null value",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/3bc49fd7854be07a3f8f562651c7abeaa0d69fec",
        "file": [
            {
                "patch": "@@ -10,33 +10,48 @@\n import org.oasis_open.wemi.context.server.api.conditions.ConditionType;\n import org.oasis_open.wemi.context.server.api.services.DefinitionsService;\n import org.osgi.framework.Bundle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.net.URL;\n import java.util.Collection;\n import java.util.Enumeration;\n \n public class ParserHelper {\n \n-    public static void resolveConditionType(DefinitionsService definitionsService, Condition rootCondition) {\n+    private static final Logger logger = LoggerFactory.getLogger(ParserHelper.class);\n+\n+    public static boolean resolveConditionType(DefinitionsService definitionsService, Condition rootCondition) {\n+        boolean result = false;\n         if (rootCondition.getConditionType() == null) {\n             ConditionType conditionType = definitionsService.getConditionType(rootCondition.getConditionTypeId());\n             if (conditionType != null) {\n                 rootCondition.setConditionType(conditionType);\n+                return true;\n             }\n         }\n         // recursive call for sub-conditions as parameters\n         for (Object parameterValue : rootCondition.getParameterValues().values()) {\n             if (parameterValue instanceof Condition) {\n-                resolveConditionType(definitionsService, (Condition) parameterValue);\n+                Condition parameterValueCondition = (Condition) parameterValue;\n+                result &= resolveConditionType(definitionsService, parameterValueCondition);\n+                if (!result) {\n+                    logger.warn(\"Couldn't resolve condition type \" + parameterValueCondition.getConditionTypeId() + \" for parameter value \" + parameterValueCondition.getParameterValues() + \" from parent condition \" + rootCondition.getConditionTypeId());\n+                }\n             } else if (parameterValue instanceof Collection) {\n                 Collection<Object> valueList = (Collection<Object>) parameterValue;\n                 for (Object value : valueList) {\n                     if (value instanceof Condition) {\n-                        resolveConditionType(definitionsService, (Condition) value);\n+                        Condition valueCondition = (Condition) value;\n+                        result &= resolveConditionType(definitionsService, valueCondition);\n+                        if (!result) {\n+                            logger.warn(\"Couldn't resolve condition type \" + valueCondition.getConditionTypeId() + \" for parameter value \" + valueCondition.getParameterValues() + \" from parent condition \" + rootCondition.getConditionTypeId());\n+                        }\n                     }\n                 }\n             }\n         }\n+        return result;\n     }\n \n     public static void resolveActionType(DefinitionsService definitionsService, Action action) {",
                "additions": 18,
                "raw_url": "https://github.com/apache/unomi/raw/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/ParserHelper.java",
                "status": "modified",
                "changes": 21,
                "deletions": 3,
                "sha": "0fe950222178ba0bfd7a3c8400e8edadf5a5d0e8",
                "blob_url": "https://github.com/apache/unomi/blob/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/ParserHelper.java",
                "filename": "wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/ParserHelper.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/ParserHelper.java?ref=3bc49fd7854be07a3f8f562651c7abeaa0d69fec"
            },
            {
                "patch": "@@ -244,7 +244,7 @@ private Condition extractConditionByTag(Condition rootCondition, String tagId) {\n                 }\n             }\n             throw new IllegalArgumentException();\n-        } else if (rootCondition.getConditionType().getTagIDs().contains(tagId)) {\n+        } else if (rootCondition.getConditionType() != null && rootCondition.getConditionType().getTagIDs().contains(tagId)) {\n             return rootCondition;\n         } else {\n             return null;",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/RulesServiceImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "e8db00f57a2dce3a5886724328db3b82696ab384",
                "blob_url": "https://github.com/apache/unomi/blob/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/RulesServiceImpl.java",
                "filename": "wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/RulesServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/RulesServiceImpl.java?ref=3bc49fd7854be07a3f8f562651c7abeaa0d69fec"
            },
            {
                "patch": "@@ -157,9 +157,9 @@ public boolean matchCondition(String conditionString, User user, Session session\n                 Integer maximumEventCount = !parameters.containsKey(\"maximumEventCount\") || \"\".equals(parameters.get(\"maximumEventCount\")) ? Integer.MAX_VALUE : Integer.parseInt((String) parameters.get(\"maximumEventCount\"));\n \n                 return matchingEvents.size() >= minimumEventCount && matchingEvents.size() <= maximumEventCount;\n-            } else if (condition.getConditionType().getTagIDs().contains(\"userCondition\")) {\n+            } else if (condition.getConditionType() != null && condition.getConditionType().getTagIDs().contains(\"userCondition\")) {\n                 return persistenceService.testMatch(condition, user);\n-            } else if (condition.getConditionType().getTagIDs().contains(\"sessionCondition\")) {\n+            } else if (condition.getConditionType() != null && condition.getConditionType().getTagIDs().contains(\"sessionCondition\")) {\n                 return persistenceService.testMatch(condition, session);\n             }\n         } catch (IOException e) {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/UserServiceImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "d0affaf816d6997f00080a81eb03f141cf242755",
                "blob_url": "https://github.com/apache/unomi/blob/3bc49fd7854be07a3f8f562651c7abeaa0d69fec/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/UserServiceImpl.java",
                "filename": "wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/UserServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/services/src/main/java/org/oasis_open/wemi/context/server/impl/services/UserServiceImpl.java?ref=3bc49fd7854be07a3f8f562651c7abeaa0d69fec"
            }
        ],
        "bug_id": "unomi_21",
        "parent": "https://github.com/apache/unomi/commit/49582fbbdb4998092caa1012e24b2d9bb03b9f3a",
        "message": "Fix NPE if a condition type doesn't exist.",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/c50f68d3523dd848c9d93da64422a7be9e39ce83",
        "file": [
            {
                "patch": "@@ -79,6 +79,10 @@ public FilterBuilder buildFilter(Condition condition) {\n     }\n \n     public FilterBuilder buildFilter(Condition condition, Map<String, Object> context) {\n+        if(condition == null || condition.getConditionType() == null) {\n+            throw new IllegalArgumentException(\"Condition is null or doesn't have type, impossible to build filter\");\n+        }\n+\n         String queryBuilderKey = condition.getConditionType().getQueryBuilder();\n         if (queryBuilderKey == null && condition.getConditionType().getParentCondition() != null) {\n             context.putAll(condition.getParameterValues());",
                "additions": 4,
                "raw_url": "https://github.com/apache/unomi/raw/c50f68d3523dd848c9d93da64422a7be9e39ce83/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "55693a1e9ccdff114b29c0f315894af00e835fe7",
                "blob_url": "https://github.com/apache/unomi/blob/c50f68d3523dd848c9d93da64422a7be9e39ce83/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java?ref=c50f68d3523dd848c9d93da64422a7be9e39ce83"
            }
        ],
        "bug_id": "unomi_22",
        "parent": "https://github.com/apache/unomi/commit/ae7d6c1eda56eb342f8212b921477166dde7915e",
        "message": "QAMF-516: handle NPE when ConditionESQueryBuilderDispatcher try to build a filter and condition is empty",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/cf6efc0b80caa659fb899783dc8fc9cd0e609978",
        "file": [
            {
                "patch": "@@ -44,7 +44,7 @@\n     private String descriptionKey;\n     private long pluginId;\n     private String conditionEvaluator;\n-    private String queryBuilderFilter;\n+    private String queryBuilder;\n     private Condition parentCondition;\n     private Set<Tag> tags = new TreeSet<Tag>();\n     private Set<String> tagIDs = new LinkedHashSet<String>();\n@@ -102,12 +102,12 @@ public void setConditionEvaluator(String conditionEvaluator) {\n         this.conditionEvaluator = conditionEvaluator;\n     }\n \n-    public String getQueryBuilderFilter() {\n-        return queryBuilderFilter;\n+    public String getQueryBuilder() {\n+        return queryBuilder;\n     }\n \n-    public void setQueryBuilderFilter(String queryBuilderFilter) {\n-        this.queryBuilderFilter = queryBuilderFilter;\n+    public void setQueryBuilder(String queryBuilder) {\n+        this.queryBuilder = queryBuilder;\n     }\n \n     public Condition getParentCondition() {",
                "additions": 5,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/api/src/main/java/org/oasis_open/contextserver/api/conditions/ConditionType.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "8f752e46c4557c2460cb2ec3dbe7fd31f1bea410",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/api/src/main/java/org/oasis_open/contextserver/api/conditions/ConditionType.java",
                "filename": "api/src/main/java/org/oasis_open/contextserver/api/conditions/ConditionType.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/api/src/main/java/org/oasis_open/contextserver/api/conditions/ConditionType.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -172,20 +172,19 @@\n             </plugins>\n         </pluginManagement>\n         <plugins>\n-            <!--<plugin>-->\n-            <!--<groupId>org.apache.servicemix.tooling</groupId>-->\n-            <!--<artifactId>depends-maven-plugin</artifactId>-->\n-            <!--<version>1.2</version>-->\n-            <!--<executions>-->\n-            <!--<execution>-->\n-            <!--<id>generate-depends-file</id>-->\n-            <!--<goals>-->\n-            <!--<goal>generate-depends-file</goal>-->\n-            <!--</goals>-->\n-            <!--</execution>-->\n-            <!--</executions>-->\n-            <!--</plugin>-->\n-\n+            <plugin>\n+                <groupId>org.apache.servicemix.tooling</groupId>\n+                <artifactId>depends-maven-plugin</artifactId>\n+                <version>1.2</version>\n+                <executions>\n+                    <execution>\n+                        <id>generate-depends-file</id>\n+                        <goals>\n+                            <goal>generate-depends-file</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n \n             <plugin>\n                 <groupId>net.alchim31.maven</groupId>",
                "additions": 13,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/performance-tests/pom.xml",
                "status": "modified",
                "changes": 27,
                "deletions": 14,
                "sha": "15dd96ddcf1f74a2a30b1d65d97dbe26fc935349",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/performance-tests/pom.xml",
                "filename": "performance-tests/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/performance-tests/pom.xml?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -26,10 +26,9 @@\n         \"itemId\": \"testForm\"\n       },\n       \"properties\": {\n-        \"email\": \"fsdfds@fsf.com\",\n-        \"gender\": \"male\",\n-        \"age\": \"10\",\n-        \"income\": \"546545\"\n+        \"gender\": \"${gender}\",\n+        \"age\": \"${age}\",\n+        \"income\": \"${income}\"\n       }\n     }\n   ]",
                "additions": 3,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/performance-tests/src/test/resources/bodies/Form_request.json",
                "status": "modified",
                "changes": 7,
                "deletions": 4,
                "sha": "1c325e3fab2186916140f2d57c2d6b636111412a",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/performance-tests/src/test/resources/bodies/Form_request.json",
                "filename": "performance-tests/src/test/resources/bodies/Form_request.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/performance-tests/src/test/resources/bodies/Form_request.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -65,12 +65,14 @@\n import org.oasis_open.contextserver.api.query.GenericRange;\n import org.oasis_open.contextserver.api.query.NumericRange;\n import org.oasis_open.contextserver.api.services.ClusterService;\n+import org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder;\n import org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilderDispatcher;\n+import org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator;\n import org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluatorDispatcher;\n import org.oasis_open.contextserver.persistence.spi.aggregate.*;\n import org.oasis_open.contextserver.persistence.spi.CustomObjectMapper;\n import org.oasis_open.contextserver.persistence.spi.PersistenceService;\n-import org.osgi.framework.BundleContext;\n+import org.osgi.framework.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -86,7 +88,7 @@\n import static org.elasticsearch.node.NodeBuilder.nodeBuilder;\n \n @SuppressWarnings(\"rawtypes\")\n-public class ElasticSearchPersistenceServiceImpl implements PersistenceService, ClusterService {\n+public class ElasticSearchPersistenceServiceImpl implements PersistenceService, ClusterService, SynchronousBundleListener {\n \n     public static final long MILLIS_PER_DAY = 24L * 60L * 60L * 1000L;\n     private static final Logger logger = LoggerFactory.getLogger(ElasticSearchPersistenceServiceImpl.class.getName());\n@@ -230,6 +232,19 @@ public Object execute(Object... args) {\n \n         initializeTimer();\n \n+        try {\n+            for (ServiceReference<ConditionEvaluator> reference : bundleContext.getServiceReferences(ConditionEvaluator.class, null)) {\n+                ConditionEvaluator service = bundleContext.getService(reference);\n+                conditionEvaluatorDispatcher.addEvaluator(reference.getProperty(\"conditionEvaluatorId\").toString(), reference.getBundle().getBundleId(), service);\n+            }\n+            for (ServiceReference<ConditionESQueryBuilder> reference : bundleContext.getServiceReferences(ConditionESQueryBuilder.class, null)) {\n+                ConditionESQueryBuilder service = bundleContext.getService(reference);\n+                conditionESQueryBuilderDispatcher.addQueryBuilder(reference.getProperty(\"queryBuilderId\").toString(), reference.getBundle().getBundleId(), service);\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        bundleContext.addBundleListener(this);\n     }\n \n     public void stop() {\n@@ -247,6 +262,30 @@ protected Object execute(Object... args) {\n             timer = null;\n         }\n \n+        bundleContext.removeBundleListener(this);\n+    }\n+\n+    @Override\n+    public void bundleChanged(BundleEvent event) {\n+        switch (event.getType()) {\n+            case BundleEvent.STARTED:\n+                if (event.getBundle() != null && event.getBundle().getRegisteredServices() != null) {\n+                    for (ServiceReference<?> reference : event.getBundle().getRegisteredServices()) {\n+                        Object service = bundleContext.getService(reference);\n+                        if (service instanceof ConditionEvaluator) {\n+                            conditionEvaluatorDispatcher.addEvaluator(reference.getProperty(\"conditionEvaluatorId\").toString(), event.getBundle().getBundleId(), (ConditionEvaluator) service);\n+                        }\n+                        if (service instanceof ConditionESQueryBuilder) {\n+                            conditionESQueryBuilderDispatcher.addQueryBuilder(reference.getProperty(\"queryBuilderId\").toString(), event.getBundle().getBundleId(), (ConditionESQueryBuilder) service);\n+                        }\n+                    }\n+                }\n+                break;\n+            case BundleEvent.STOPPING:\n+                conditionEvaluatorDispatcher.removeEvaluators(event.getBundle().getBundleId());\n+                conditionESQueryBuilderDispatcher.removeQueryBuilders(event.getBundle().getBundleId());\n+                break;\n+        }\n     }\n \n     private String getDailyIndex(Date date) {",
                "additions": 41,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "status": "modified",
                "changes": 43,
                "deletions": 2,
                "sha": "a347a4498d58fd4569ffb8d4ef41cb26fe9528a0",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -28,14 +28,11 @@\n import org.elasticsearch.index.query.QueryBuilders;\n import org.oasis_open.contextserver.api.conditions.Condition;\n import org.osgi.framework.BundleContext;\n-import org.osgi.framework.InvalidSyntaxException;\n-import org.osgi.framework.ServiceReference;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.*;\n+import java.util.concurrent.ConcurrentHashMap;\n \n public class ConditionESQueryBuilderDispatcher {\n     private static final Logger logger = LoggerFactory.getLogger(ConditionESQueryBuilderDispatcher.class.getName());\n@@ -49,6 +46,26 @@ public void setBundleContext(BundleContext bundleContext) {\n         this.bundleContext = bundleContext;\n     }\n \n+    private Map<String, ConditionESQueryBuilder> queryBuilders = new ConcurrentHashMap<>();\n+    private Map<Long, List<String>> queryBuildersByBundle = new ConcurrentHashMap<>();\n+\n+    public void addQueryBuilder(String name, long bundleId, ConditionESQueryBuilder evaluator) {\n+        queryBuilders.put(name, evaluator);\n+        if (!queryBuildersByBundle.containsKey(bundleId)) {\n+            queryBuildersByBundle.put(bundleId, new ArrayList<String>());\n+        }\n+        queryBuildersByBundle.get(bundleId).add(name);\n+    }\n+\n+    public void removeQueryBuilders(long bundleId) {\n+        if (queryBuildersByBundle.containsKey(bundleId)) {\n+            for (String s : queryBuildersByBundle.get(bundleId)) {\n+                queryBuilders.remove(s);\n+            }\n+            queryBuildersByBundle.remove(bundleId);\n+        }\n+    }\n+\n     public String getQuery(Condition condition) {\n         return \"{\\\"query\\\": \" + getQueryBuilder(condition).toString() + \"}\";\n     }\n@@ -62,29 +79,24 @@ public FilterBuilder buildFilter(Condition condition) {\n     }\n \n     public FilterBuilder buildFilter(Condition condition, Map<String, Object> context) {\n-        String queryBuilderFilter = condition.getConditionType().getQueryBuilderFilter();\n-        if (queryBuilderFilter == null && condition.getConditionType().getParentCondition() != null) {\n+        String queryBuilderKey = condition.getConditionType().getQueryBuilder();\n+        if (queryBuilderKey == null && condition.getConditionType().getParentCondition() != null) {\n             context.putAll(condition.getParameterValues());\n             return buildFilter(condition.getConditionType().getParentCondition(), context);\n         }\n \n-        if (queryBuilderFilter == null) {\n+        if (queryBuilderKey == null) {\n             throw new UnsupportedOperationException(\"No query builder defined for : \" + condition.getConditionTypeId());\n         }\n-        Collection<ServiceReference<ConditionESQueryBuilder>> matchingQueryBuilderReferences = null;\n-        try {\n-            matchingQueryBuilderReferences = bundleContext.getServiceReferences(ConditionESQueryBuilder.class, queryBuilderFilter);\n-        } catch (InvalidSyntaxException e) {\n-            logger.error(\"Invalid filter\",e);\n-        }\n-        // despite multiple references possible, we will only execute the first one\n-        for (ServiceReference<ConditionESQueryBuilder> queryBuilderServiceReference : matchingQueryBuilderReferences) {\n-            ConditionESQueryBuilder queryBuilder = bundleContext.getService(queryBuilderServiceReference);\n+\n+        if (queryBuilders.containsKey(queryBuilderKey)) {\n+            ConditionESQueryBuilder queryBuilder = queryBuilders.get(queryBuilderKey);\n             Condition contextualCondition = ConditionContextHelper.getContextualCondition(condition, context);\n             if (contextualCondition != null) {\n                 return queryBuilder.buildFilter(contextualCondition, context, this);\n             }\n         }\n+\n         // if no matching\n         return FilterBuilders.matchAllFilter();\n     }",
                "additions": 29,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "status": "modified",
                "changes": 46,
                "deletions": 17,
                "sha": "119e790adae57d7bb1586d90b87d4e0520363b17",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionESQueryBuilderDispatcher.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -24,15 +24,13 @@\n \n import org.oasis_open.contextserver.api.Item;\n import org.oasis_open.contextserver.api.conditions.Condition;\n-import org.osgi.framework.BundleContext;\n-import org.osgi.framework.InvalidSyntaxException;\n-import org.osgi.framework.ServiceReference;\n+import org.oasis_open.contextserver.api.conditions.ConditionType;\n+import org.osgi.framework.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.*;\n+import java.util.concurrent.ConcurrentHashMap;\n \n /**\n  * Entry point for condition evaluation. Will dispatch to all evaluators.\n@@ -46,32 +44,49 @@ public void setBundleContext(BundleContext bundleContext) {\n         this.bundleContext = bundleContext;\n     }\n \n+    private Map<String, ConditionEvaluator> evaluators = new ConcurrentHashMap<>();\n+    private Map<Long, List<String>> evaluatorsByBundle = new ConcurrentHashMap<>();\n+\n+    public void addEvaluator(String name, long bundleId, ConditionEvaluator evaluator) {\n+        evaluators.put(name, evaluator);\n+        if (!evaluatorsByBundle.containsKey(bundleId)) {\n+            evaluatorsByBundle.put(bundleId, new ArrayList<String>());\n+        }\n+        evaluatorsByBundle.get(bundleId).add(name);\n+    }\n+\n+    public void removeEvaluators(long bundleId) {\n+        if (evaluatorsByBundle.containsKey(bundleId)) {\n+            for (String s : evaluatorsByBundle.get(bundleId)) {\n+                evaluators.remove(s);\n+            }\n+            evaluatorsByBundle.remove(bundleId);\n+        }\n+    }\n+\n     public boolean eval(Condition condition, Item item) {\n         return eval(condition, item, new HashMap<String, Object>());\n     }\n \n     public boolean eval(Condition condition, Item item, Map<String, Object> context) {\n+        String conditionEvaluatorKey = condition.getConditionType().getConditionEvaluator();\n         if (condition.getConditionType().getParentCondition() != null) {\n             context.putAll(condition.getParameterValues());\n             return eval(condition.getConditionType().getParentCondition(), item, context);\n         }\n-        Collection<ServiceReference<ConditionEvaluator>> matchConditionEvaluators = null;\n-        if (condition.getConditionType().getConditionEvaluator() == null) {\n+\n+        if (conditionEvaluatorKey == null) {\n             throw new UnsupportedOperationException(\"No evaluator defined for : \" + condition.getConditionTypeId());\n         }\n-        try {\n-            matchConditionEvaluators = bundleContext.getServiceReferences(ConditionEvaluator.class, condition.getConditionType().getConditionEvaluator());\n-        } catch (InvalidSyntaxException e) {\n-            logger.error(\"Invalid filter\",e);\n-        }\n-        // despite multiple references possible, we will only execute the first one\n-        for (ServiceReference<ConditionEvaluator> evaluatorServiceReference : matchConditionEvaluators) {\n-            ConditionEvaluator evaluator = bundleContext.getService(evaluatorServiceReference);\n+\n+        if (evaluators.containsKey(conditionEvaluatorKey)) {\n+            ConditionEvaluator evaluator = evaluators.get(conditionEvaluatorKey);\n             Condition contextualCondition = ConditionContextHelper.getContextualCondition(condition, context);\n             if (contextualCondition != null) {\n                 return evaluator.eval(contextualCondition, item, context, this);\n             }\n         }\n+\n         // if no matching\n         return true;\n ",
                "additions": 31,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionEvaluatorDispatcher.java",
                "status": "modified",
                "changes": 47,
                "deletions": 16,
                "sha": "f2eaaa22b8a03d74114f1043859d343934e83205",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionEvaluatorDispatcher.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionEvaluatorDispatcher.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/oasis_open/contextserver/persistence/elasticsearch/conditions/ConditionEvaluatorDispatcher.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,6 +1,6 @@\n {\n     \"id\": \"hoverEventCondition\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=hoverEventConditionESQueryBuilder)\",\n+    \"queryBuilder\": \"hoverEventConditionESQueryBuilder\",\n     \"tags\": [ \"event\", \"eventCondition\", \"usableInPastEventCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/hover-event/src/main/resources/META-INF/cxs/conditions/hoverEventCondition.json",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "50ade9aa6bf6cd5c7a00ff1a213bc2c5a1530442",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/hover-event/src/main/resources/META-INF/cxs/conditions/hoverEventCondition.json",
                "filename": "plugins/hover-event/src/main/resources/META-INF/cxs/conditions/hoverEventCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/hover-event/src/main/resources/META-INF/cxs/conditions/hoverEventCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"pastEventCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=pastEventConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=pastEventConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"pastEventConditionEvaluator\",\n+    \"queryBuilder\": \"pastEventConditionESQueryBuilder\",\n     \"tags\": [ \"event\", \"profileCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/past-event/src/main/resources/META-INF/cxs/conditions/pastEventCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "38e1035a5598cb4ee694301d582be1dfd2f77031",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/past-event/src/main/resources/META-INF/cxs/conditions/pastEventCondition.json",
                "filename": "plugins/past-event/src/main/resources/META-INF/cxs/conditions/pastEventCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/past-event/src/main/resources/META-INF/cxs/conditions/pastEventCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"sourceEventPropertyCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=sourceEventPropertyConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=sourceEventPropertyConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"sourceEventPropertyConditionEvaluator\",\n+    \"queryBuilder\": \"sourceEventPropertyConditionESQueryBuilder\",\n     \"tags\": [ ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/tracked-event/src/main/resources/META-INF/cxs/conditions/sourceEventPropertyCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "7851feda0c0ec1a68db31d69e2f2f61c145189ce",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/plugins/tracked-event/src/main/resources/META-INF/cxs/conditions/sourceEventPropertyCondition.json",
                "filename": "plugins/tracked-event/src/main/resources/META-INF/cxs/conditions/sourceEventPropertyCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/tracked-event/src/main/resources/META-INF/cxs/conditions/sourceEventPropertyCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -117,8 +117,10 @@ private void processBundleStop(BundleContext bundleContext) {\n         }\n         if (!removedConditions.isEmpty()) {\n             for (Goal goal : persistenceService.getAllItems(Goal.class)) {\n-                List<String> conditions = ParserHelper.getConditionTypeIds(goal.getStartEvent());\n-                conditions.addAll(ParserHelper.getConditionTypeIds(goal.getTargetEvent()));\n+                List<String> conditions = ParserHelper.getConditionTypeIds(goal.getTargetEvent());\n+                if (goal.getStartEvent() != null) {\n+                    conditions.addAll(ParserHelper.getConditionTypeIds(goal.getStartEvent()));\n+                }\n \n                 if (!Collections.disjoint(conditions, removedConditions)) {\n                     logger.info(\"Disable goal \" + goal.getItemId());",
                "additions": 4,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "6ab568867c927334568ba2cd4099bd711a44dd54",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/GoalsServiceImpl.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -229,7 +229,6 @@ public boolean mergeProfilesOnProperty(Profile currentProfile, Session currentSe\n         if (!currentProfile.getItemId().equals(masterProfile.getItemId())) {\n             currentSession.setProfile(masterProfile);\n             saveSession(currentSession);\n-            delete(currentProfile.getItemId(), false);\n         }\n \n         return updated;\n@@ -249,12 +248,9 @@ public String getPropertyTypeMapping(String fromPropertyTypeId) {\n \n     public Session loadSession(String sessionId, Date dateHint) {\n         Session s = persistenceService.load(sessionId, dateHint, Session.class);\n-        if (s == null) {\n+        if (s == null && dateHint != null) {\n             Date yesterday = new Date(dateHint.getTime() - (24L * 60L * 60L * 1000L));\n             s = persistenceService.load(sessionId, yesterday, Session.class);\n-            if (s == null) {\n-                s = persistenceService.load(sessionId, null, Session.class);\n-            }\n         }\n         return s;\n     }",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 6,
                "deletions": 5,
                "sha": "ac32e1a8ffae4c7974a4a78e9c6543656f572fbe",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"booleanCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=booleanConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=booleanConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"booleanConditionEvaluator\",\n+    \"queryBuilder\": \"booleanConditionESQueryBuilder\",\n     \"tags\": [ \"logical\", \"profileCondition\", \"eventCondition\", \"sessionCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/booleanCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "f2e21e00ab43f6056909377a2d251d8f0790fb5a",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/booleanCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/booleanCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/booleanCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"eventPropertyCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=propertyConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=propertyConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"propertyConditionEvaluator\",\n+    \"queryBuilder\": \"propertyConditionESQueryBuilder\",\n     \"tags\": [ \"demographic\", \"eventCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/eventPropertyCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "128f23131ddebb4ab237c8c5621c4c3dfb3f5b7d",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/eventPropertyCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/eventPropertyCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/eventPropertyCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"geoLocationByPointSessionCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=geoLocationByPointSessionConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=geoLocationByPointSessionConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"geoLocationByPointSessionConditionEvaluator\",\n+    \"queryBuilder\": \"geoLocationByPointSessionConditionESQueryBuilder\",\n     \"tags\": [ \"geographic\", \"sessionCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/geoLocationByPointSessionCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "e28d0df8345b5c8bf1299cc67d638e4634601f2d",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/geoLocationByPointSessionCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/geoLocationByPointSessionCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/geoLocationByPointSessionCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"matchAllCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=matchAllConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=matchAllConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"matchAllConditionEvaluator\",\n+    \"queryBuilder\": \"matchAllConditionESQueryBuilder\",\n     \"tags\": [ \"logical\", \"profileCondition\", \"eventCondition\", \"sessionCondition\" ],\n     \"parameters\": [\n     ]",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/matchAllCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "a968593babf03b30abfd86e291d0bebbb0fdd2ce",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/matchAllCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/matchAllCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/matchAllCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n   \"id\": \"notCondition\",\n-  \"conditionEvaluator\": \"(conditionEvaluatorId=notConditionEvaluator)\",\n-  \"queryBuilderFilter\": \"(queryBuilderId=notConditionESQueryBuilder)\",\n+  \"conditionEvaluator\": \"notConditionEvaluator\",\n+  \"queryBuilder\": \"notConditionESQueryBuilder\",\n   \"tags\": [ \"logical\", \"profileCondition\", \"eventCondition\", \"sessionCondition\" ],\n   \"parameters\": [\n     {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/notCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "8355335c8645d6ea55e516c588d536492d3c9df5",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/notCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/notCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/notCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"profilePropertyCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=propertyConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=propertyConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"propertyConditionEvaluator\",\n+    \"queryBuilder\": \"propertyConditionESQueryBuilder\",\n     \"tags\": [ \"demographic\", \"profileCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/profilePropertyCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "7b3e00c47414278d5c0265932ff5116e0b960746",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/profilePropertyCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/profilePropertyCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/profilePropertyCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -1,7 +1,7 @@\n {\n     \"id\": \"sessionPropertyCondition\",\n-    \"conditionEvaluator\": \"(conditionEvaluatorId=propertyConditionEvaluator)\",\n-    \"queryBuilderFilter\": \"(queryBuilderId=propertyConditionESQueryBuilder)\",\n+    \"conditionEvaluator\": \"propertyConditionEvaluator\",\n+    \"queryBuilder\": \"propertyConditionESQueryBuilder\",\n     \"tags\": [ \"demographic\", \"sessionCondition\" ],\n     \"parameters\": [\n         {",
                "additions": 2,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/sessionPropertyCondition.json",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "b1d6e19d11d7e7095723d8eacc7ff51d26e2dab3",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/services/src/main/resources/META-INF/cxs/conditions/sessionPropertyCondition.json",
                "filename": "services/src/main/resources/META-INF/cxs/conditions/sessionPropertyCondition.json",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/resources/META-INF/cxs/conditions/sessionPropertyCondition.json?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            },
            {
                "patch": "@@ -270,7 +270,6 @@ private Profile checkMergedProfile(ServletResponse response, Profile profile, Se\n                 if (session != null) {\n                     session.setProfile(profile);\n                     profileService.saveSession(session);\n-                    profileService.delete(profileToDelete.getItemId(), false);\n                 }\n                 HttpUtils.sendProfileCookie(profile, response, profileIdCookieName, personaIdCookieName);\n             } else {",
                "additions": 0,
                "raw_url": "https://github.com/apache/unomi/raw/cf6efc0b80caa659fb899783dc8fc9cd0e609978/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "status": "modified",
                "changes": 1,
                "deletions": 1,
                "sha": "b83fadbd04150c389d06feb061b17de165ff88a7",
                "blob_url": "https://github.com/apache/unomi/blob/cf6efc0b80caa659fb899783dc8fc9cd0e609978/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "filename": "wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wab/src/main/java/org/oasis_open/contextserver/web/ContextServlet.java?ref=cf6efc0b80caa659fb899783dc8fc9cd0e609978"
            }
        ],
        "bug_id": "unomi_23",
        "parent": "https://github.com/apache/unomi/commit/ad42032132c5161da314fe519b85e8346133176f",
        "message": "DMF-287 : optimize condition/query evaluation. removed  profile  deletion, fixed npe",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/64bd988acc38fa3cad76b3b313ec54693fc128b5",
        "file": [
            {
                "patch": "@@ -7,7 +7,7 @@ fi\n echo Compiling...\n mvn clean install\n echo Deploying KAR package to $CONTEXT_SERVER_KARAF_HOME/deploy...\n-cp context-server/kar/target/context-server-kar-1.0-SNAPSHOT.kar $CONTEXT_SERVER_KARAF_HOME/deploy/\n+cp kar/target/context-server-kar-1.0-SNAPSHOT.kar $CONTEXT_SERVER_KARAF_HOME/deploy/\n echo Purging Karaf local Maven repository, exploded KAR directory and temporary directory... \n rm -rf $CONTEXT_SERVER_KARAF_HOME/data/maven/repository/*\n rm -rf $CONTEXT_SERVER_KARAF_HOME/data/tmp/*",
                "additions": 1,
                "raw_url": "https://github.com/apache/unomi/raw/64bd988acc38fa3cad76b3b313ec54693fc128b5/compileDeploy.sh",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "b855ca62f7030f76cda993a2d32958dada8b31fb",
                "blob_url": "https://github.com/apache/unomi/blob/64bd988acc38fa3cad76b3b313ec54693fc128b5/compileDeploy.sh",
                "filename": "compileDeploy.sh",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/compileDeploy.sh?ref=64bd988acc38fa3cad76b3b313ec54693fc128b5"
            },
            {
                "patch": "@@ -19,24 +19,6 @@\n # limitations under the License.\n # #L%\n ###\n-################################################################################\n-#\n-#    Licensed to the Apache Software Foundation (ASF) under one or more\n-#    contributor license agreements.  See the NOTICE file distributed with\n-#    this work for additional information regarding copyright ownership.\n-#    The ASF licenses this file to You under the Apache License, Version 2.0\n-#    (the \"License\"); you may not use this file except in compliance with\n-#    the License.  You may obtain a copy of the License at\n-#\n-#       http://www.apache.org/licenses/LICENSE-2.0\n-#\n-#    Unless required by applicable law or agreed to in writing, software\n-#    distributed under the License is distributed on an \"AS IS\" BASIS,\n-#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-#    See the License for the specific language governing permissions and\n-#    limitations under the License.\n-#\n-################################################################################\n \n #\n # All the values specified here will override the default values given",
                "additions": 0,
                "raw_url": "https://github.com/apache/unomi/raw/64bd988acc38fa3cad76b3b313ec54693fc128b5/package/src/main/resources/etc/custom.properties",
                "status": "modified",
                "changes": 18,
                "deletions": 18,
                "sha": "a6b3db67471edb006b4a7aa4d72ae43f66c6edc4",
                "blob_url": "https://github.com/apache/unomi/blob/64bd988acc38fa3cad76b3b313ec54693fc128b5/package/src/main/resources/etc/custom.properties",
                "filename": "package/src/main/resources/etc/custom.properties",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/package/src/main/resources/etc/custom.properties?ref=64bd988acc38fa3cad76b3b313ec54693fc128b5"
            },
            {
                "patch": "@@ -288,6 +288,9 @@ public Persona loadPersona(String personaId) {\n \n     public PersonaWithSessions loadPersonaWithSessions(String personaId) {\n         Persona persona = persistenceService.load(personaId, Persona.class);\n+        if (persona == null) {\n+            return null;\n+        }\n         List<PersonaSession> sessions = persistenceService.query(\"profileId\", persona.getItemId(), \"timeStamp:desc\", PersonaSession.class);\n         return new PersonaWithSessions(persona, sessions);\n     }",
                "additions": 3,
                "raw_url": "https://github.com/apache/unomi/raw/64bd988acc38fa3cad76b3b313ec54693fc128b5/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "dde3c448108730e39d9ebe01e8cd97555046dee3",
                "blob_url": "https://github.com/apache/unomi/blob/64bd988acc38fa3cad76b3b313ec54693fc128b5/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "filename": "services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/services/src/main/java/org/oasis_open/contextserver/impl/services/ProfileServiceImpl.java?ref=64bd988acc38fa3cad76b3b313ec54693fc128b5"
            }
        ],
        "bug_id": "unomi_24",
        "parent": "https://github.com/apache/unomi/commit/34ae61917e0f10a2d8d303f09048ce1f0e646c89",
        "message": "- Adjust deployment script\n- Remove double copyright notice\n- Fix a NPE on Personas",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/16ca99a2b3d03e57fffcd5ed76280c7c3312b66a",
        "file": [
            {
                "patch": "@@ -196,15 +196,20 @@ private User checkMergedUser(ServletResponse response, User user, Session sessio\n         String visitorId;\n         if (user.getProperty(\"mergedWith\") != null) {\n             visitorId = (String) user.getProperty(\"mergedWith\");\n-            log(\"Session user was merged with user \" + visitorId + \", replacing user in session\");\n             User userToDelete = user;\n             user = userService.load(visitorId);\n-            if (session != null) {\n-                session.setUser(user);\n-                userService.saveSession(session);\n-                userService.delete(userToDelete);\n+            if (user != null) {\n+                log(\"Session user was merged with user \" + visitorId + \", replacing user in session\");\n+                if (session != null) {\n+                    session.setUser(user);\n+                    userService.saveSession(session);\n+                    userService.delete(userToDelete);\n+                }\n+                HttpUtils.sendProfileCookie(user, response, profileIdCookieName, personaIdCookieName);\n+            } else {\n+                log(\"Couldn't find merged user\" + visitorId + \", falling back to user \" + userToDelete.getId());\n+                user = userToDelete;\n             }\n-            HttpUtils.sendProfileCookie(user, response, profileIdCookieName, personaIdCookieName);\n         }\n         return user;\n     }",
                "additions": 11,
                "raw_url": "https://github.com/apache/unomi/raw/16ca99a2b3d03e57fffcd5ed76280c7c3312b66a/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "status": "modified",
                "changes": 17,
                "deletions": 6,
                "sha": "18ba49333269621f30b6569af648a4da128960af",
                "blob_url": "https://github.com/apache/unomi/blob/16ca99a2b3d03e57fffcd5ed76280c7c3312b66a/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "filename": "wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/wab/src/main/java/org/oasis_open/wemi/context/server/ContextServlet.java?ref=16ca99a2b3d03e57fffcd5ed76280c7c3312b66a"
            }
        ],
        "bug_id": "unomi_25",
        "parent": "https://github.com/apache/unomi/commit/3ab23ac4fe1f7b6dbc9a7748741d0475082c86e7",
        "message": "BACKLOG-5331\n- Fix NPE if the merged user doesn't exist",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/e9557b7c29d73574a86fbd9af506ca911ccc4206",
        "file": [
            {
                "patch": "@@ -129,12 +129,18 @@ public PropertyType getPropertyType(@PathParam(\"propertyId\") String id) {\n     }\n \n     private void generateConditionChoiceListValues(Collection<ConditionType> conditionTypes, Object context) {\n+        if (conditionTypes == null) {\n+            return;\n+        }\n         for (ConditionType conditionType : conditionTypes) {\n             generateChoiceListValues(conditionType, null);\n         }\n     }\n \n     private void generateActionChoiceListValues(Collection<ActionType> actionTypes, Object context) {\n+        if (actionTypes == null) {\n+            return;\n+        }\n         for (ActionType actionType : actionTypes) {\n             generateChoiceListValues(actionType, null);\n         }",
                "additions": 6,
                "raw_url": "https://github.com/apache/unomi/raw/e9557b7c29d73574a86fbd9af506ca911ccc4206/wemi-context-server/rest/src/main/java/org/oasis_open/wemi/context/server/rest/DefinitionsServiceEndPoint.java",
                "status": "modified",
                "changes": 6,
                "deletions": 0,
                "sha": "b53295c211a65b81bb6424b437d6ee69d2ded217",
                "blob_url": "https://github.com/apache/unomi/blob/e9557b7c29d73574a86fbd9af506ca911ccc4206/wemi-context-server/rest/src/main/java/org/oasis_open/wemi/context/server/rest/DefinitionsServiceEndPoint.java",
                "filename": "wemi-context-server/rest/src/main/java/org/oasis_open/wemi/context/server/rest/DefinitionsServiceEndPoint.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/wemi-context-server/rest/src/main/java/org/oasis_open/wemi/context/server/rest/DefinitionsServiceEndPoint.java?ref=e9557b7c29d73574a86fbd9af506ca911ccc4206"
            }
        ],
        "bug_id": "unomi_26",
        "parent": "https://github.com/apache/unomi/commit/16fe9a8030ad33aa88b2231c08408b9cf1b54a93",
        "message": "Fix NPE when trying to load conditions or actions by tag",
        "repo": "unomi"
    },
    {
        "commit": "https://github.com/apache/unomi/commit/46900c554b4f51aa64261dcf2bf2dbb58928eede",
        "file": [
            {
                "patch": "@@ -674,8 +674,7 @@ public boolean save(final Item item) {\n \n     @Override\n     public boolean save(final Item item, final boolean useBatching) {\n-\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result =  new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 try {\n                     String source = CustomObjectMapper.getObjectMapper().writeValueAsString(item);\n@@ -720,7 +719,11 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n-\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override\n@@ -730,7 +733,7 @@ public boolean update(final String itemId, final Date dateHint, final Class claz\n \n     @Override\n     public boolean update(final String itemId, final Date dateHint, final Class clazz, final Map source) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 try {\n                     String itemType = (String) clazz.getField(\"ITEM_TYPE\").get(null);\n@@ -756,11 +759,16 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override\n     public boolean updateWithQueryAndScript(final Date dateHint, final Class<?> clazz, final String[] scripts, final Map<String, Object>[] scriptParams, final Condition[] conditions) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 try {\n                     String itemType = (String) clazz.getField(\"ITEM_TYPE\").get(null);\n@@ -810,11 +818,16 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override\n     public boolean updateWithScript(final String itemId, final Date dateHint, final Class<?> clazz, final String script, final Map<String, Object> scriptParams) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 try {\n                     String itemType = (String) clazz.getField(\"ITEM_TYPE\").get(null);\n@@ -843,11 +856,16 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override\n     public <T extends Item> boolean remove(final String itemId, final Class<T> clazz) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 //Index the query = register it in the percolator\n                 try {\n@@ -861,10 +879,15 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     public <T extends Item> boolean removeByQuery(final Condition query, final Class<T> clazz) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 try {\n                     String itemType = (String) clazz.getField(\"ITEM_TYPE\").get(null);\n@@ -910,10 +933,15 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     public boolean createIndex(final String indexName) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) {\n                 IndicesExistsResponse indicesExistsResponse = client.admin().indices().prepareExists(indexName).execute().actionGet();\n                 boolean indexExists = indicesExistsResponse.isExists();\n@@ -930,10 +958,15 @@ protected Boolean execute(Object... args) {\n                 return !indexExists;\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     public boolean removeIndex(final String indexName) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) {\n                 IndicesExistsResponse indicesExistsResponse = client.admin().indices().prepareExists(indexName).execute().actionGet();\n                 boolean indexExists = indicesExistsResponse.isExists();\n@@ -944,6 +977,11 @@ protected Boolean execute(Object... args) {\n                 return indexExists;\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     private void internalCreateIndex(String indexName, Map<String, String> mappings) {\n@@ -1075,7 +1113,7 @@ private String getPropertyNameWithData(String name, String itemType) {\n     }\n \n     public boolean saveQuery(final String queryName, final String query) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 //Index the query = register it in the percolator\n                 try {\n@@ -1090,6 +1128,11 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override\n@@ -1103,7 +1146,7 @@ public boolean saveQuery(String queryName, Condition query) {\n \n     @Override\n     public boolean removeQuery(final String queryName) {\n-        return new InClassLoaderExecute<Boolean>() {\n+        Boolean result = new InClassLoaderExecute<Boolean>() {\n             protected Boolean execute(Object... args) throws Exception {\n                 //Index the query = register it in the percolator\n                 try {\n@@ -1116,6 +1159,11 @@ protected Boolean execute(Object... args) throws Exception {\n                 }\n             }\n         }.catchingExecuteInClassLoader(true);\n+        if (result == null) {\n+            return false;\n+        } else {\n+            return result;\n+        }\n     }\n \n     @Override",
                "additions": 60,
                "raw_url": "https://github.com/apache/unomi/raw/46900c554b4f51aa64261dcf2bf2dbb58928eede/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "status": "modified",
                "changes": 72,
                "deletions": 12,
                "sha": "8bf6024472f8e9c191ce3da46427c84b5e1c8430",
                "blob_url": "https://github.com/apache/unomi/blob/46900c554b4f51aa64261dcf2bf2dbb58928eede/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "filename": "persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/unomi/contents/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java?ref=46900c554b4f51aa64261dcf2bf2dbb58928eede"
            }
        ],
        "bug_id": "unomi_27",
        "parent": "https://github.com/apache/unomi/commit/db066aa8e3b6adf1ac4aa156a2f6bd07c553b021",
        "message": "UNOMI-109 NPE when an exception is caught in the ElasticSearch persistence implementation\nThis is fixed by catching the result into a Boolean class and then checking if it is null before returning the result.\n\nSigned-off-by: Serge Huber <shuber@apache.org>",
        "repo": "unomi"
    }
]