[
    {
        "repo": "servicecomb-pack",
        "commit": "https://github.com/apache/servicecomb-pack/commit/8ad3b7b683006a52545c5184c35c1edff76fa0e0",
        "bug_id": "servicecomb-pack_8ad3b7b",
        "message": "Merge pull request #585 from apache/SCB-1011\n\nSCB-1011 Added a NPE check in TransactionAspect",
        "parent": "https://github.com/apache/servicecomb-pack/commit/4dfdd1837a067570342591ba9854f3549abc66ab",
        "patched_files": [
            "TransactionAspect.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/servicecomb-pack/raw/8ad3b7b683006a52545c5184c35c1edff76fa0e0/omega/omega-transaction/src/main/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspect.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-pack/contents/omega/omega-transaction/src/main/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspect.java?ref=8ad3b7b683006a52545c5184c35c1edff76fa0e0",
                "filename": "omega/omega-transaction/src/main/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspect.java",
                "deletions": 1,
                "sha": "d133cacb6f41dc27b2c2a236dda73d4f91f7686b",
                "blob_url": "https://github.com/apache/servicecomb-pack/blob/8ad3b7b683006a52545c5184c35c1edff76fa0e0/omega/omega-transaction/src/main/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspect.java",
                "patch": "@@ -55,7 +55,10 @@ Object advise(ProceedingJoinPoint joinPoint, Compensable compensable) throws Thr\n     if (transactionContext != null) {\n       populateOmegaContext(context, transactionContext);\n     }\n-\n+    // SCB-1011 Need to check if the globalTxId transaction is null to avoid the message sending failure\n+    if (context.globalTxId() == null) {\n+      throw new OmegaException(\"Cannot find the globalTxId from OmegaContext. Please using @SagaStart to start a global transaction.\");\n+    }\n     String localTxId = context.localTxId();\n     context.newLocalTxId();\n     LOG.debug(\"Updated context {} for compensable method {} \", context, method.toString());",
                "changes": 5
            },
            {
                "status": "modified",
                "additions": 12,
                "raw_url": "https://github.com/apache/servicecomb-pack/raw/8ad3b7b683006a52545c5184c35c1edff76fa0e0/omega/omega-transaction/src/test/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspectTest.java",
                "contents_url": "https://api.github.com/repos/apache/servicecomb-pack/contents/omega/omega-transaction/src/test/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspectTest.java?ref=8ad3b7b683006a52545c5184c35c1edff76fa0e0",
                "filename": "omega/omega-transaction/src/test/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspectTest.java",
                "deletions": 0,
                "sha": "5705089f1b826ed870bad526bc01c1c2b61fd5cb",
                "blob_url": "https://github.com/apache/servicecomb-pack/blob/8ad3b7b683006a52545c5184c35c1edff76fa0e0/omega/omega-transaction/src/test/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspectTest.java",
                "patch": "@@ -22,6 +22,7 @@\n import static org.hamcrest.core.IsInstanceOf.instanceOf;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n@@ -142,6 +143,17 @@ public void setNewLocalTxIdCompensableWithTransactionContext() throws Throwable\n     assertThat(omegaContext.localTxId(), is(transactionLocalTxId));\n   }\n \n+  @Test\n+  public void globalTxIsNotSet() throws Throwable {\n+    omegaContext.setGlobalTxId(null);\n+    try {\n+      aspect.advise(joinPoint, compensable);\n+      fail(\"Expect exception here\");\n+    } catch (OmegaException ex) {\n+      assertThat(ex.getMessage(), is(\"Cannot find the globalTxId from OmegaContext. Please using @SagaStart to start a global transaction.\"));\n+    }\n+  }\n+\n   @Test\n   public void newLocalTxIdInCompensable() throws Throwable {\n     aspect.advise(joinPoint, compensable);",
                "changes": 12
            }
        ],
        "unit_tests": [
            "TransactionAspectTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "omega/omega-transaction/src/test/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspectTest.java",
        "buggy_files": [
            "omega/omega-transaction/src/main/java/org/apache/servicecomb/pack/omega/transaction/TransactionAspect.java"
        ],
        "fixed": true
    }
]