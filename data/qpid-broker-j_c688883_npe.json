[
    {
        "repo": "qpid-broker-j",
        "commit": "https://github.com/apache/qpid-broker-j/commit/c6888830df344eb707696468c14532c12f763e75",
        "bug_id": "qpid-broker-j_c688883",
        "message": "QPID-7077: [Java Client] Make access to _failoverLatch thread safe\n\n* Also added logging to better understand the sporadic NPE.",
        "parent": "https://github.com/apache/qpid-broker-j/commit/5ad6ffa51768c806665dd48102f4ceee2804e801",
        "patched_files": [
            "AMQProtocolHandler.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/client/src/main/java/org/apache/qpid/client/AMQConnection.java?ref=c6888830df344eb707696468c14532c12f763e75",
                "filename": "client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "deletions": 1,
                "sha": "7b0de011cd7e7aa5477f81be59ee2644119f4113",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "patch": "@@ -124,7 +124,7 @@\n      * the handler deals with this. It also deals with the initial dispatch of any protocol frames to their appropriate\n      * handler.\n      */\n-    private AMQProtocolHandler _protocolHandler;\n+    private final AMQProtocolHandler _protocolHandler;\n \n     /** Maps from session id (Integer) to AMQSession instance */\n     private final ChannelToSessionMap _sessions = new ChannelToSessionMap();",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java?ref=c6888830df344eb707696468c14532c12f763e75",
                "filename": "client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "deletions": 4,
                "sha": "8f33374c34965bc43073dcffe9d9a566ea5a46b1",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "patch": "@@ -109,16 +109,16 @@\n     /** Used to provide a condition to wait upon for operations that are required to wait for failover to complete. */\n     private CountDownLatch _failoverLatch;\n \n+    /** Object to lock on when changing the _failoverLatch  */\n+    private final Object _failoverLatchChange = new Object();\n+\n     /** The last failover exception that occurred */\n     private FailoverException _lastFailoverException;\n \n     /** Defines the default timeout to use for synchronous protocol commands. */\n     private final long DEFAULT_SYNC_TIMEOUT = Long.getLong(ClientProperties.QPID_SYNC_OP_TIMEOUT,\n                                                            Long.getLong(AMQJ_DEFAULT_SYNCWRITE_TIMEOUT,\n                                                                         ClientProperties.DEFAULT_SYNC_OPERATION_TIMEOUT));\n-\n-    /** Object to lock on when changing the latch */\n-    private Object _failoverLatchChange = new Object();\n     private ClientDecoder _decoder;\n \n     private ProtocolVersion _suggestedProtocolVersion;\n@@ -744,13 +744,18 @@ public String generateQueueName()\n \n     public CountDownLatch getFailoverLatch()\n     {\n-        return _failoverLatch;\n+        synchronized (_failoverLatchChange)\n+        {\n+            _logger.debug(\"Failover latch retrieved : {}\", _failoverLatch);\n+            return _failoverLatch;\n+        }\n     }\n \n     public void setFailoverLatch(CountDownLatch failoverLatch)\n     {\n         synchronized (_failoverLatchChange)\n         {\n+            _logger.debug(\"Failover latch set : {}\", failoverLatch);\n             _failoverLatch = failoverLatch;\n         }\n     }",
                "changes": 13
            }
        ],
        "unit_tests": [
            "AMQProtocolHandlerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "client/src/test/java/org/apache/qpid/client/protocol/AMQProtocolHandlerTest.java",
        "buggy_files": [
            "client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java"
        ],
        "fixed": true
    }
]