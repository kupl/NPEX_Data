[
    {
        "repo": "hbase",
        "commit": "https://github.com/apache/hbase/commit/db3ba652f88083b0b1c57b4857f11fce7ae5b131",
        "bug_id": "hbase_db3ba65",
        "message": "HBASE-15524 Fix NPE in client-side metrics",
        "parent": "https://github.com/apache/hbase/commit/fd5c0934b60664ecdde21a994910953339c7060d",
        "patched_files": [
            "MetricsConnection.java",
            "AsyncProcess.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 22,
                "raw_url": "https://github.com/apache/hbase/raw/db3ba652f88083b0b1c57b4857f11fce7ae5b131/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java",
                "contents_url": "https://api.github.com/repos/apache/hbase/contents/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java?ref=db3ba652f88083b0b1c57b4857f11fce7ae5b131",
                "filename": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java",
                "deletions": 4,
                "sha": "142e2a0647fb231f3b6f2a5ef67970b1e01db045",
                "blob_url": "https://github.com/apache/hbase/blob/db3ba652f88083b0b1c57b4857f11fce7ae5b131/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java",
                "patch": "@@ -1190,9 +1190,15 @@ private void receiveGlobalFailure(\n         byte[] row = e.getValue().iterator().next().getAction().getRow();\n         // Do not use the exception for updating cache because it might be coming from\n         // any of the regions in the MultiAction.\n-        if (tableName != null) {\n-          connection.updateCachedLocations(tableName, regionName, row,\n+        try {\n+          if (tableName != null) {\n+            connection.updateCachedLocations(tableName, regionName, row,\n               ClientExceptionsUtil.isMetaClearingException(t) ? null : t, server);\n+          }\n+        } catch (Throwable ex) {\n+          // That should never happen, but if it did, we want to make sure\n+          // we still process errors\n+          LOG.error(\"Couldn't update cached region locations: \" + ex);\n         }\n         for (Action<Row> action : e.getValue()) {\n           Retry retry = manageError(\n@@ -1317,8 +1323,14 @@ private void receiveMultiAction(MultiAction<Row> multiAction,\n             // Register corresponding failures once per server/once per region.\n             if (!regionFailureRegistered) {\n               regionFailureRegistered = true;\n-              connection.updateCachedLocations(\n+              try {\n+                connection.updateCachedLocations(\n                   tableName, regionName, row.getRow(), result, server);\n+              } catch (Throwable ex) {\n+                // That should never happen, but if it did, we want to make sure\n+                // we still process errors\n+                LOG.error(\"Couldn't update cached region locations: \" + ex);\n+              }\n             }\n             if (failureCount == 0) {\n               errorsByServer.reportServerError(server);\n@@ -1372,8 +1384,14 @@ private void receiveMultiAction(MultiAction<Row> multiAction,\n           // for every possible exception that comes through, however.\n           connection.clearCaches(server);\n         } else {\n-          connection.updateCachedLocations(\n+          try {\n+            connection.updateCachedLocations(\n               tableName, region, actions.get(0).getAction().getRow(), throwable, server);\n+          } catch (Throwable ex) {\n+            // That should never happen, but if it did, we want to make sure\n+            // we still process errors\n+            LOG.error(\"Couldn't update cached region locations: \" + ex);\n+          }\n         }\n         failureCount += actions.size();\n ",
                "changes": 26
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/hbase/raw/db3ba652f88083b0b1c57b4857f11fce7ae5b131/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetricsConnection.java",
                "contents_url": "https://api.github.com/repos/apache/hbase/contents/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetricsConnection.java?ref=db3ba652f88083b0b1c57b4857f11fce7ae5b131",
                "filename": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetricsConnection.java",
                "deletions": 1,
                "sha": "53a33264cb41df0cf8337abc1402f7c52f2f63b5",
                "blob_url": "https://github.com/apache/hbase/blob/db3ba652f88083b0b1c57b4857f11fce7ae5b131/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetricsConnection.java",
                "patch": "@@ -63,6 +63,7 @@\n   private static final String MEMLOAD_BASE = \"memstoreLoad_\";\n   private static final String HEAP_BASE = \"heapOccupancy_\";\n   private static final String CACHE_BASE = \"cacheDroppingExceptions_\";\n+  private static final String UNKNOWN_EXCEPTION = \"UnknownException\";\n   private static final String CLIENT_SVC = ClientService.getDescriptor().getName();\n \n   /** A container class for collecting details about the RPC call as it percolates. */\n@@ -464,7 +465,8 @@ public void updateRpc(MethodDescriptor method, Message param, CallStats stats) {\n   }\n \n   public void incrCacheDroppingExceptions(Object exception) {\n-    getMetric(CACHE_BASE + exception.getClass().getSimpleName(),\n+    getMetric(CACHE_BASE +\n+      (exception == null? UNKNOWN_EXCEPTION : exception.getClass().getSimpleName()),\n       cacheDroppingExceptions, counterFactory).inc();\n   }\n }",
                "changes": 4
            }
        ],
        "unit_tests": [
            "TestAsyncProcess.java",
            "TestMetricsConnection.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java",
        "buggy_files": [
            "hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetricsConnection.java",
            "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java"
        ],
        "fixed": true
    }
]