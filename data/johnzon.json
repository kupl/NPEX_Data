{
    "johnzon_61ff1f4": {
        "bug_id": "johnzon_61ff1f4",
        "commit": "https://github.com/apache/johnzon/commit/61ff1f4a156c321b82b9b739eb32a8901517f7ae",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/johnzon/blob/61ff1f4a156c321b82b9b739eb32a8901517f7ae/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectBuilderImpl.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/johnzon/contents/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectBuilderImpl.java?ref=61ff1f4a156c321b82b9b739eb32a8901517f7ae",
                "deletions": 1,
                "filename": "johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectBuilderImpl.java",
                "patch": "@@ -18,6 +18,8 @@\n  */\n package org.apache.johnzon.core;\n \n+import static java.util.Objects.requireNonNull;\n+\n import javax.json.JsonArrayBuilder;\n import javax.json.JsonException;\n import javax.json.JsonObject;\n@@ -166,7 +168,7 @@ public JsonObjectBuilder addAll(JsonObjectBuilder builder) {\n \n     @Override\n     public JsonObjectBuilder remove(String name) {\n-        attributeMap.remove(name);\n+        attributeMap.remove(requireNonNull(name));\n         return this;\n     }\n ",
                "raw_url": "https://github.com/apache/johnzon/raw/61ff1f4a156c321b82b9b739eb32a8901517f7ae/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectBuilderImpl.java",
                "sha": "de13a0acdf7c1ee43b5766a7a5b538df2f9d0fe5",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/johnzon/blob/61ff1f4a156c321b82b9b739eb32a8901517f7ae/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectImpl.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/johnzon/contents/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectImpl.java?ref=61ff1f4a156c321b82b9b739eb32a8901517f7ae",
                "deletions": 0,
                "filename": "johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectImpl.java",
                "patch": "@@ -173,6 +173,16 @@ public int hashCode() {\n         return unmodifieableBackingMap.entrySet();\n     }\n \n+    @Override\n+    public void clear() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public JsonValue remove(final Object key) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n     private Object writeReplace() throws ObjectStreamException {\n         return new SerializableValue(toString());\n     }",
                "raw_url": "https://github.com/apache/johnzon/raw/61ff1f4a156c321b82b9b739eb32a8901517f7ae/johnzon-core/src/main/java/org/apache/johnzon/core/JsonObjectImpl.java",
                "sha": "a84053f9a0b97ec2633ef3bc3503e2f9ae2f505d",
                "status": "modified"
            }
        ],
        "message": "basic validations: JsonObject should be immutable, JsonObjectBuilder#remove does not validate NPE for its input",
        "parent": "https://github.com/apache/johnzon/commit/51b120fa031524623715704560780e3468529de7",
        "repo": "johnzon",
        "unit_tests": [
            "JsonObjectImplTest.java"
        ]
    },
    "johnzon_8b5c87d": {
        "bug_id": "johnzon_8b5c87d",
        "commit": "https://github.com/apache/johnzon/commit/8b5c87d5caa942c0facfa1b62b8376fca869cf45",
        "file": [
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/johnzon/blob/8b5c87d5caa942c0facfa1b62b8376fca869cf45/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/johnzon/contents/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java?ref=8b5c87d5caa942c0facfa1b62b8376fca869cf45",
                "deletions": 0,
                "filename": "johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java",
                "patch": "@@ -89,6 +89,25 @@ public void nullValuesInList() {\n         assertEquals(\"{\\\"elems\\\":[2,null]}\", jsonb.toJson(wrapper));\n     }\n \n+    @Test\n+    public void nullValuesInEnumList() {\n+        Jsonb jsonb = JsonbBuilder.create();\n+\n+        EnumList wrapper = new EnumList();\n+        wrapper.elems.add(null);\n+        assertEquals(\"{\\\"elems\\\":[null]}\", jsonb.toJson(wrapper));\n+\n+        wrapper.elems.add(MyStatus.OK);\n+        assertEquals(\"{\\\"elems\\\":[null,\\\"OK\\\"]}\", jsonb.toJson(wrapper));\n+\n+        wrapper.elems.add(0, MyStatus.WRONG);\n+        assertEquals(\"{\\\"elems\\\":[\\\"WRONG\\\",null,\\\"OK\\\"]}\", jsonb.toJson(wrapper));\n+\n+        wrapper.elems.remove(2);\n+        assertEquals(\"{\\\"elems\\\":[\\\"WRONG\\\",null]}\", jsonb.toJson(wrapper));\n+    }\n+\n+\n     public static class Foo {\n         public String name;\n         public int value;\n@@ -109,6 +128,14 @@ public void nullValuesInList() {\n         public List<Integer> elems = new ArrayList<>();\n     }\n \n+    public enum MyStatus {\n+        OK, WRONG;\n+    }\n+\n+    public static class EnumList {\n+        public List<MyStatus> elems = new ArrayList<>();\n+    }\n+\n     public static class FooDeser implements JsonbDeserializer<Foo> {\n         @Override\n         public Foo deserialize(final JsonParser parser, final DeserializationContext ctx, final Type rtType) {",
                "raw_url": "https://github.com/apache/johnzon/raw/8b5c87d5caa942c0facfa1b62b8376fca869cf45/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java",
                "sha": "963a41e4473fcc0502a3f8750dc8d059db080cae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/johnzon/blob/8b5c87d5caa942c0facfa1b62b8376fca869cf45/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/johnzon/contents/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java?ref=8b5c87d5caa942c0facfa1b62b8376fca869cf45",
                "deletions": 1,
                "filename": "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java",
                "patch": "@@ -40,7 +40,7 @@ public EnumConverter(final Class<T> aClass) {\n \n     @Override // no need of cache here, it is already fast\n     public String toString(final T instance) {\n-        return instance.name();\n+        return instance != null ? instance.name() : null;\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/johnzon/raw/8b5c87d5caa942c0facfa1b62b8376fca869cf45/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java",
                "sha": "4588f54855049e2f978029e42797b375218b1701",
                "status": "modified"
            }
        ],
        "message": "JOHNZON-186 fix NPE in EnumConverter",
        "parent": "https://github.com/apache/johnzon/commit/847a4268fb95cb239e54fd955175ece800126945",
        "repo": "johnzon",
        "unit_tests": [
            "EnumConverterTest.java"
        ]
    }
}