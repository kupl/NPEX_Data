{
    "jackrabbit_260862c": {
        "bug_id": "jackrabbit_260862c",
        "commit": "https://github.com/apache/jackrabbit/commit/260862ca17080f2d5f6eb924f54b2a4b93c49638",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jackrabbit/blob/260862ca17080f2d5f6eb924f54b2a4b93c49638/jackrabbit/src/main/java/org/apache/jackrabbit/core/NodeImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit/src/main/java/org/apache/jackrabbit/core/NodeImpl.java?ref=260862ca17080f2d5f6eb924f54b2a4b93c49638",
                "deletions": 1,
                "filename": "jackrabbit/src/main/java/org/apache/jackrabbit/core/NodeImpl.java",
                "patch": "@@ -1508,7 +1508,7 @@ public synchronized NodeImpl addNode(QName nodeName, QName nodeTypeName,\n         if (nodeTypeName != null) {\n             nt = session.getNodeTypeManager().getNodeType(nodeTypeName);\n         }\n-        return internalAddChildNode(nodeName, nt, new NodeId(uuid));\n+        return internalAddChildNode(nodeName, nt, uuid == null ? null : new NodeId(uuid));\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jackrabbit/raw/260862ca17080f2d5f6eb924f54b2a4b93c49638/jackrabbit/src/main/java/org/apache/jackrabbit/core/NodeImpl.java",
                "sha": "26f6d11222ac503bae732514d8c536408db92e54",
                "status": "modified"
            }
        ],
        "message": "- fixing eventual NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378253 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/93ff88412eca3b31693cbaa37acdb7d1b093e237",
        "repo": "jackrabbit",
        "unit_tests": [
            "NodeImplTest.java"
        ]
    },
    "jackrabbit_6251ae0": {
        "bug_id": "jackrabbit_6251ae0",
        "commit": "https://github.com/apache/jackrabbit/commit/6251ae013f83502b63a5ca7b88e50af8104c4a79",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jackrabbit/blob/6251ae013f83502b63a5ca7b88e50af8104c4a79/src/java/org/apache/jackrabbit/core/NodeImpl.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/src/java/org/apache/jackrabbit/core/NodeImpl.java?ref=6251ae013f83502b63a5ca7b88e50af8104c4a79",
                "deletions": 1,
                "filename": "src/java/org/apache/jackrabbit/core/NodeImpl.java",
                "patch": "@@ -1617,12 +1617,14 @@ public boolean isNode() {\n      * {@inheritDoc}\n      */\n     public String getName() throws RepositoryException {\n+        // check state of this instance\n+        sanityCheck();\n+\n         if (state.getParentUUID() == null) {\n             // this is the root node\n             return \"\";\n         }\n \n-        //QName name = getPrimaryPath().getNameElement().getName();\n         QName name = session.getHierarchyManager().getName(id);\n         try {\n             return name.toJCRName(session.getNamespaceResolver());",
                "raw_url": "https://github.com/apache/jackrabbit/raw/6251ae013f83502b63a5ca7b88e50af8104c4a79/src/java/org/apache/jackrabbit/core/NodeImpl.java",
                "sha": "5f4fb7aa9d03f5bb38a208be0b6a554849c8a1e3",
                "status": "modified"
            }
        ],
        "message": "calling Node.getName() on disposed instance could throw NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@160858 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/105b3b1d3496786cd85305e462d208edf66d1ca9",
        "repo": "jackrabbit",
        "unit_tests": [
            "NodeImplTest.java"
        ]
    },
    "jackrabbit_6f86c84": {
        "bug_id": "jackrabbit_6f86c84",
        "commit": "https://github.com/apache/jackrabbit/commit/6f86c84fc59da1cb9c54ff659a6bbbfc25c64498",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jackrabbit/blob/6f86c84fc59da1cb9c54ff659a6bbbfc25c64498/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionIteratorImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionIteratorImpl.java?ref=6f86c84fc59da1cb9c54ff659a6bbbfc25c64498",
                "deletions": 1,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionIteratorImpl.java",
                "patch": "@@ -43,7 +43,7 @@\n     /**\n      * the id's of the versions to return\n      */\n-    private LinkedList<NodeId> versions = new LinkedList<NodeId>();\n+    private final LinkedList<NodeId> versions = new LinkedList<NodeId>();\n \n     /**\n      * the current position",
                "raw_url": "https://github.com/apache/jackrabbit/raw/6f86c84fc59da1cb9c54ff659a6bbbfc25c64498/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionIteratorImpl.java",
                "sha": "7d2df985c5d0f05dfb89633dfc04a0125fc91b2f",
                "status": "modified"
            }
        ],
        "message": "JCR-2655: initVersions crashes with NPE\n\nMake an unmodified variable final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1032621 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/828e730f556c83e9dbc46384383d6f3081b316f1",
        "repo": "jackrabbit",
        "unit_tests": [
            "VersionIteratorImplTest.java"
        ]
    },
    "jackrabbit_7280250": {
        "bug_id": "jackrabbit_7280250",
        "commit": "https://github.com/apache/jackrabbit/commit/7280250cac441584c513a16937724b2adbbbfd87",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jackrabbit/blob/7280250cac441584c513a16937724b2adbbbfd87/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/authentication/token/TokenProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/authentication/token/TokenProvider.java?ref=7280250cac441584c513a16937724b2adbbbfd87",
                "deletions": 1,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/authentication/token/TokenProvider.java",
                "patch": "@@ -328,7 +328,7 @@ private NodeImpl getTokenParent(User user) throws RepositoryException {\n                     }\n                 }\n             } else {\n-                log.debug(\"Cannot create login token: No corresponding node for User {}.\", user.getID());\n+                log.debug(\"Cannot create login token: No user specified. (null)\");\n             }\n         } catch (RepositoryException e) {\n             // conflict while creating token store for this user -> refresh and",
                "raw_url": "https://github.com/apache/jackrabbit/raw/7280250cac441584c513a16937724b2adbbbfd87/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/authentication/token/TokenProvider.java",
                "sha": "50666a2c1043303017427b5a102a819f9ef0cfe9",
                "status": "modified"
            }
        ],
        "message": "fix NPE on error path when user is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1577995 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/3d86c4ec5bb5a274ffc24362d28f0bcb23adacc9",
        "repo": "jackrabbit",
        "unit_tests": [
            "TokenProviderTest.java"
        ]
    },
    "jackrabbit_9b9beb7": {
        "bug_id": "jackrabbit_9b9beb7",
        "commit": "https://github.com/apache/jackrabbit/commit/9b9beb7f3a6970f234a637d127f820055b828053",
        "file": [
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/jackrabbit/blob/9b9beb7f3a6970f234a637d127f820055b828053/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java?ref=9b9beb7f3a6970f234a637d127f820055b828053",
                "deletions": 0,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "patch": "@@ -290,6 +290,32 @@ public boolean hasVersion(Name versionName) {\n      * {@inheritDoc}\n      */\n     public InternalVersion getVersion(NodeId id) {\n+        InternalVersion v = getCachedVersion(id);\n+\n+        // If the version was not found, our cache may not have been\n+        // synchronized with updates from another cluster node.  Reload the history\n+        // to be sure we have the latest updates and try again.\n+        if (v == null) {\n+            try {\n+                reload();\n+            } catch (RepositoryException e) {\n+\n+                // We should add the checked exception to this method definition\n+                // so we don't need to wrap it.\n+                // Avoiding it for now to limit impact of this fix.\n+                throw new RuntimeException(e);\n+            }\n+            v = getCachedVersion(id);\n+        }\n+\n+        return v;\n+    }\n+\n+    /**\n+     * Returns the version from cache, or <code>null</code> if it is not\n+     * present.\n+     */\n+    private InternalVersion getCachedVersion(NodeId id) {\n         InternalVersion v = versionCache.get(id);\n         if (v == null) {\n             for (Name versionName : nameCache.keySet()) {",
                "raw_url": "https://github.com/apache/jackrabbit/raw/9b9beb7f3a6970f234a637d127f820055b828053/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "sha": "3e9f5a266cbd589af12e30ff3054a1403752a13d",
                "status": "modified"
            }
        ],
        "message": "JCR-1440: NPE Thrown when two Cluster Nodes are hitting the same underlying database\n\nPatch by Ryan Brush\n\nThis needs more work (the solution reminds me of the double checked-locking antipattern), but at least it solves the most pressing issue and does not seem to cause any notable risk to other use cases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@911856 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/c41e81997a91f21839c63ba4a8faf8d068054dfb",
        "repo": "jackrabbit",
        "unit_tests": [
            "InternalVersionHistoryImplTest.java"
        ]
    },
    "jackrabbit_a0b4637": {
        "bug_id": "jackrabbit_a0b4637",
        "commit": "https://github.com/apache/jackrabbit/commit/a0b46378111db40c38862ae45eea1e5387b91fbd",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jackrabbit/blob/a0b46378111db40c38862ae45eea1e5387b91fbd/jackrabbit/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java?ref=a0b46378111db40c38862ae45eea1e5387b91fbd",
                "deletions": 2,
                "filename": "jackrabbit/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "patch": "@@ -152,8 +152,12 @@ private void init() throws RepositoryException {\n                     QName name = pState.getName();\n                     UUID ref = (UUID) pState.getValues()[0].internalValue();\n                     InternalVersionImpl v = (InternalVersionImpl) getVersion(new NodeId(ref));\n-                    labelCache.put(name, v);\n-                    v.internalAddLabel(name);\n+                    if (v != null) {\n+                        labelCache.put(name, v);\n+                        v.internalAddLabel(name);\n+                    } else {\n+                        log.warn(\"Error while resolving label reference. Version missing: \" + ref);\n+                    }\n                 }\n             }\n         } catch (ItemStateException e) {",
                "raw_url": "https://github.com/apache/jackrabbit/raw/a0b46378111db40c38862ae45eea1e5387b91fbd/jackrabbit/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java",
                "sha": "b09ccddc9eed9e6ffa507674aff034661defd861",
                "status": "modified"
            }
        ],
        "message": "adding simple protection of eventual NPE. need to investigate further.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@405567 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/0ce449c65fc93dd402fd1d88ba3baa8e89be69df",
        "repo": "jackrabbit",
        "unit_tests": [
            "InternalVersionHistoryImplTest.java"
        ]
    },
    "jackrabbit_a0ec94d": {
        "bug_id": "jackrabbit_a0ec94d",
        "commit": "https://github.com/apache/jackrabbit/commit/a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jackrabbit/blob/a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java?ref=a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b",
                "deletions": 0,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java",
                "patch": "@@ -164,6 +164,12 @@ protected Document createDoc() throws RepositoryException {\n                 doc.add(new Field(FieldNames.PARENT, node.getParentId().toString(), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.NO));\n                 NodeState parent = (NodeState) stateProvider.getItemState(node.getParentId());\n                 NodeState.ChildNodeEntry child = parent.getChildNodeEntry(node.getNodeId());\n+                if (child == null) {\n+                    // this can only happen when jackrabbit\n+                    // is running in a cluster.\n+                    throw new RepositoryException(\"Missing child node entry \" +\n+                            \"for node with id: \" + node.getNodeId());\n+                }\n                 String name = NameFormat.format(child.getName(), mappings);\n                 doc.add(new Field(FieldNames.LABEL, name, Field.Store.NO, Field.Index.UN_TOKENIZED, Field.TermVector.NO));\n             }",
                "raw_url": "https://github.com/apache/jackrabbit/raw/a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java",
                "sha": "cb8bb08f50679e2e330f352d09213e763b5b0985",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jackrabbit/blob/a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java?ref=a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b",
                "deletions": 3,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java",
                "patch": "@@ -422,11 +422,11 @@ public Object next() {\n                 Document doc = null;\n                 try {\n                     doc = createDocument(state, getNamespaceMappings());\n+                    retrieveAggregateRoot(state, aggregateRoots);\n                 } catch (RepositoryException e) {\n-                    log.error(\"Exception while creating document for node: \"\n+                    log.warn(\"Exception while creating document for node: \"\n                             + state.getNodeId() + \": \" + e.toString());\n                 }\n-                retrieveAggregateRoot(state, aggregateRoots);\n                 return doc;\n             }\n         });\n@@ -451,7 +451,7 @@ public Object next() {\n                     try {\n                         return createDocument(state, getNamespaceMappings());\n                     } catch (RepositoryException e) {\n-                        log.error(\"Exception while creating document for node: \"\n+                        log.warn(\"Exception while creating document for node: \"\n                                 + state.getNodeId() + \": \" + e.toString());\n                     }\n                     return null;",
                "raw_url": "https://github.com/apache/jackrabbit/raw/a0ec94d1a547749bfb692cf5ada2dd30e11e5a3b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java",
                "sha": "af975ed5c9ad7e04a74563266cc45897a2fea944",
                "status": "modified"
            }
        ],
        "message": "JCR-931: cluster synchronization NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@540492 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/c0bca944465ca480ffd9d5f7112a6aa8f2093cb7",
        "repo": "jackrabbit",
        "unit_tests": [
            "SearchIndexTest.java"
        ]
    },
    "jackrabbit_a94e7a2": {
        "bug_id": "jackrabbit_a94e7a2",
        "commit": "https://github.com/apache/jackrabbit/commit/a94e7a22c29e32ec348eace5e2f05b1bc8bc8d15",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jackrabbit/blob/a94e7a22c29e32ec348eace5e2f05b1bc8bc8d15/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/persistence/bundle/ConsistencyCheckerImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/persistence/bundle/ConsistencyCheckerImpl.java?ref=a94e7a22c29e32ec348eace5e2f05b1bc8bc8d15",
                "deletions": 0,
                "filename": "jackrabbit-core/src/main/java/org/apache/jackrabbit/core/persistence/bundle/ConsistencyCheckerImpl.java",
                "patch": "@@ -309,6 +309,8 @@ private void checkBundleConsistency(NodeId id, NodePropBundle bundle,\n                             log.error(message);\n                             missingChildren.add(entry);\n                         }\n+                    } else {\n+                        return;\n                     }\n                 } else {\n                     NodeId cp = childBundle.getParentId();\n@@ -333,6 +335,8 @@ private void checkBundleConsistency(NodeId id, NodePropBundle bundle,\n                                     log.error(message);\n                                 }\n                             }\n+                        } else {\n+                            return;\n                         }\n                     }\n                 }\n@@ -376,6 +380,8 @@ private void checkBundleConsistency(NodeId id, NodePropBundle bundle,\n                                 modifications.add(bundle);\n                             }\n                         }\n+                    } else {\n+                        return;\n                     }\n                 } else {\n                     boolean found = false;\n@@ -410,6 +416,8 @@ private void checkBundleConsistency(NodeId id, NodePropBundle bundle,\n                                         + \"'\");\n                                 modifications.add(parentBundle);\n                             }\n+                        } else {\n+                            return;\n                         }\n                     }\n ",
                "raw_url": "https://github.com/apache/jackrabbit/raw/a94e7a22c29e32ec348eace5e2f05b1bc8bc8d15/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/persistence/bundle/ConsistencyCheckerImpl.java",
                "sha": "2afaffbb56e62ab5c3829df006b941569b903330",
                "status": "modified"
            }
        ],
        "message": "JCR-3265 guard against possible npe's due to double checking: if the bundle is no longer there we don't need to continue to check it\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1350207 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/e3651d9a88b13b48cfb84f5830d985d3cac4dae0",
        "repo": "jackrabbit",
        "unit_tests": [
            "ConsistencyCheckerImplTest.java"
        ]
    },
    "jackrabbit_f64c554": {
        "bug_id": "jackrabbit_f64c554",
        "commit": "https://github.com/apache/jackrabbit/commit/f64c5543baead3bad17977b6ef29e4f5bf2c955c",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jackrabbit/blob/f64c5543baead3bad17977b6ef29e4f5bf2c955c/contrib/spi/jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Restore.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/contrib/spi/jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Restore.java?ref=f64c5543baead3bad17977b6ef29e4f5bf2c955c",
                "deletions": 5,
                "filename": "contrib/spi/jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Restore.java",
                "patch": "@@ -68,16 +68,19 @@ public void accept(OperationVisitor visitor) throws PathNotFoundException, ItemE\n      */\n     public void persisted(CacheBehaviour cacheBehaviour) {\n         if (cacheBehaviour == CacheBehaviour.INVALIDATE) {\n+            NodeEntry entry;\n             if (nodeState == null || removeExisting) {\n                 // invalidate the complete tree\n-                NodeEntry root = nodeState.getNodeEntry();\n-                while (root.getParent() != null) {\n-                    root = root.getParent();\n+                // -> start searching root-entry from any version-entry or\n+                //    from the given nodestate\n+                entry = (nodeState == null) ? versionStates[0].getNodeEntry() : nodeState.getNodeEntry();\n+                while (entry.getParent() != null) {\n+                    entry = entry.getParent();\n                 }\n-                root.invalidate(true);\n             } else {\n-                nodeState.getHierarchyEntry().invalidate(true);\n+                entry = nodeState.getNodeEntry();\n             }\n+            entry.invalidate(true);\n         }\n     }\n     //----------------------------------------< Access Operation Parameters >---",
                "raw_url": "https://github.com/apache/jackrabbit/raw/f64c5543baead3bad17977b6ef29e4f5bf2c955c/contrib/spi/jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/operation/Restore.java",
                "sha": "5e2c62d02d9cc7be0e52a6c0e6045885f94bbbc9",
                "status": "modified"
            }
        ],
        "message": "#0000 - avoid NPE upon Restore.persisted in case of a \n        Workspace.restore.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@508431 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/7a058b665b0568b0f903cfeaac47024b3f967a68",
        "repo": "jackrabbit",
        "unit_tests": [
            "RestoreTest.java"
        ]
    },
    "jackrabbit_f8957a7": {
        "bug_id": "jackrabbit_f8957a7",
        "commit": "https://github.com/apache/jackrabbit/commit/f8957a704cd301c5707292108df2b1920568efde",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jackrabbit/blob/f8957a704cd301c5707292108df2b1920568efde/src/java/org/apache/jackrabbit/core/config/WorkspaceConfig.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jackrabbit/contents/src/java/org/apache/jackrabbit/core/config/WorkspaceConfig.java?ref=f8957a704cd301c5707292108df2b1920568efde",
                "deletions": 2,
                "filename": "src/java/org/apache/jackrabbit/core/config/WorkspaceConfig.java",
                "patch": "@@ -50,7 +50,7 @@\n     private PersistenceManagerConfig pmc;\n \n     /**\n-     * Workspace search index configuration.\n+     * Workspace search index configuration. Can be <code>null</code>.\n      */\n     private SearchConfig sc;\n \n@@ -79,7 +79,9 @@\n      */\n     public void init() throws ConfigurationException {\n         fsc.init();\n-        sc.init();\n+        if (sc != null) {\n+            sc.init();\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jackrabbit/raw/f8957a704cd301c5707292108df2b1920568efde/src/java/org/apache/jackrabbit/core/config/WorkspaceConfig.java",
                "sha": "e216a1d1fd2143f72a65810ea80f09961a116cbb",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE in WorkspaceConfig.init() when SearchConfig is not available. (JCR-71)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@157916 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit/commit/0647faf8d8dc2d52ba182c5436575337f8c28eb8",
        "repo": "jackrabbit",
        "unit_tests": [
            "WorkspaceConfigTest.java"
        ]
    }
}