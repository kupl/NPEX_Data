{
    "xmlbeans_2aed591": {
        "bug_id": "xmlbeans_2aed591",
        "commit": "https://github.com/apache/xmlbeans/commit/2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/CHANGES.txt",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/CHANGES.txt?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -1,3 +1,9 @@\n+Changes in V3.0.2 since V3.0.1\n+\n+* XMLBEANS-520: wrong name for source(s) artifact\n+* XMLBEANS-519: issue when using old XML parser versions\n+* XMLBEANS-506: NPE trying to load resource file if XmlBeans was loaded by the bootstrap ClassLoader\n+\n Changes in V3.0.1 since V3.0.0\n \n * XMLBEANS-518: add support to XmlOptions to allow control over the XML parser settings that affect DTD loading",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/CHANGES.txt",
                "sha": "5e6abb60d81cd350a06fc94fd285c8d4cf506629",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/saaj_api/org/apache/xmlbeans/impl/soap/FactoryFinder.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/saaj_api/org/apache/xmlbeans/impl/soap/FactoryFinder.java?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 1,
                "filename": "src/saaj_api/org/apache/xmlbeans/impl/soap/FactoryFinder.java",
                "patch": "@@ -147,7 +147,7 @@ private static InputStream getResource(String factoryResource) {\n         }\n \n         if (inputstream == null) {\n-            inputstream = FactoryFinder.class.getClassLoader().getResourceAsStream(factoryResource);\n+            inputstream = FactoryFinder.class.getResourceAsStream(factoryResource);\n         }\n         return inputstream;\n     }",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/saaj_api/org/apache/xmlbeans/impl/soap/FactoryFinder.java",
                "sha": "c826933c590d0b8b4a77640fcbe31df6ac5b8b6e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/store/org/apache/xmlbeans/impl/store/Path.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/store/org/apache/xmlbeans/impl/store/Path.java?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 2,
                "filename": "src/store/org/apache/xmlbeans/impl/store/Path.java",
                "patch": "@@ -67,9 +67,8 @@\n \n     static\n     {\n-        ClassLoader cl = Path.class.getClassLoader();\n         String id = \"META-INF/services/org.apache.xmlbeans.impl.store.PathDelegate.SelectPathInterface\";\n-        InputStream in = cl.getResourceAsStream(id);\n+        InputStream in = Path.class.getResourceAsStream(id);\n         try\n         {\n             BufferedReader br = new BufferedReader(new InputStreamReader(in));",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/store/org/apache/xmlbeans/impl/store/Path.java",
                "sha": "015eea6f5d40e156503a04e3d17fa3677bc50df4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/store/org/apache/xmlbeans/impl/store/Query.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/store/org/apache/xmlbeans/impl/store/Query.java?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 2,
                "filename": "src/store/org/apache/xmlbeans/impl/store/Query.java",
                "patch": "@@ -52,9 +52,8 @@\n \n     static\n     {\n-        ClassLoader cl = Query.class.getClassLoader();\n         String id = \"META-INF/services/org.apache.xmlbeans.impl.store.QueryDelegate.QueryInterface\";\n-        InputStream in = cl.getResourceAsStream(id);\n+        InputStream in = Query.class.getResourceAsStream(id);\n         try\n         {\n             BufferedReader br = new BufferedReader(new InputStreamReader(in));",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/store/org/apache/xmlbeans/impl/store/Query.java",
                "sha": "0b8acccaca71a4624092e8cfe95d98f5a16fade5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/xmlcomp/org/apache/xmlbeans/impl/tool/CommandLine.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/xmlcomp/org/apache/xmlbeans/impl/tool/CommandLine.java?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 1,
                "filename": "src/xmlcomp/org/apache/xmlbeans/impl/tool/CommandLine.java",
                "patch": "@@ -76,7 +76,7 @@ public static void printLicense()\n     {\n         try\n         {\n-            IOUtil.copyCompletely(CommandLine.class.getClassLoader().getResourceAsStream(\"LICENSE.txt\"), System.out);\n+            IOUtil.copyCompletely(CommandLine.class.getResourceAsStream(\"LICENSE.txt\"), System.out);\n         }\n         catch (Exception e)\n         {",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/xmlcomp/org/apache/xmlbeans/impl/tool/CommandLine.java",
                "sha": "55c1ecd07b3ca782ec677f95851fa6e99dbf0692",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/xmlpublic/org/apache/xmlbeans/XmlBeans.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/xmlpublic/org/apache/xmlbeans/XmlBeans.java?ref=2aed5911e8f1264d01dee85241d1e9e690e8ad5b",
                "deletions": 1,
                "filename": "src/xmlpublic/org/apache/xmlbeans/XmlBeans.java",
                "patch": "@@ -35,7 +35,7 @@\n public final class XmlBeans\n {\n     private static String XMLBEANS_TITLE = \"org.apache.xmlbeans\";\n-    private static String XMLBEANS_VERSION = \"2.6.0\";\n+    private static String XMLBEANS_VERSION = \"3.0.2\";\n     private static String XMLBEANS_VENDOR = \"Apache Software Foundation\";\n \n     static",
                "raw_url": "https://github.com/apache/xmlbeans/raw/2aed5911e8f1264d01dee85241d1e9e690e8ad5b/src/xmlpublic/org/apache/xmlbeans/XmlBeans.java",
                "sha": "14bbe6416f95d89bd3f602f8c4e4a0c2ebd13860",
                "status": "modified"
            }
        ],
        "message": "XMLBEANS-506: NPE trying to load resource file if XmlBeans was loaded by the bootstrap ClassLoader\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlbeans/trunk@1844288 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlbeans/commit/ebdc8a71e809fdf3f3918d1cfc1a36cc77a6b051",
        "patched_files": [
            "XmlBeans.java",
            "CHANGES.txt"
        ],
        "repo": "xmlbeans",
        "unit_tests": [
            "XmlBeansTests.java"
        ]
    },
    "xmlbeans_aede4e7": {
        "bug_id": "xmlbeans_aede4e7",
        "commit": "https://github.com/apache/xmlbeans/commit/aede4e7190e524842c14013cd49a4e2a6fcb226f",
        "file": [
            {
                "additions": 151,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/build.xml",
                "changes": 188,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/build.xml?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 37,
                "filename": "v1/build.xml",
                "patch": "@@ -90,50 +90,164 @@\n   </target>\n \n     <!-- extensions test -->\n+    <fileset id=\"extension.jars\" dir=\"build/private/lib\">\n+      <include name=\"extensions.jar\"/>\n+      <include name=\"fixedAttrBean.jar\"/>\n+      <include name=\"averageCase.jar\"/>\n+      <include name=\"multInterfaces.jar\"/>\n+      <include name=\"readOnlyBean.jar\"/>\n+      <include name=\"ValueRestriction.jar\"/>\n+    </fileset>\n+\n     <target name=\"extensionsTest\" depends=\"extensions.compile\">\n-        <echo message=\"JUnit output being sent to build/test/output/drt-product.txt\"/>\n-        <junit fork=\"yes\" printsummary=\"yes\" haltonfailure=\"yes\" showoutput=\"yes\">\n-            <jvmarg value=\"-ea\"/>\n-            <classpath>\n-                <pathelement location=\"external/lib/junit.jar\"/>\n-                <pathelement location=\"build/ar/xbean.jar\"/>\n-                <pathelement location=\"build/private/lib/extensions.jar\"/>\n-                <pathelement location=\"build/test/extensionsuse\"/>\n-            </classpath>\n-            <formatter type=\"plain\"/>\n-            <test name=\"drtcases.ExtensionsTest\" outfile=\"build/test/output/drt-extensions\"/>\n-        </junit>\n+      <echo message=\"JUnit output being sent to build/test/output/drt-extensions.txt\"/>\n+      <junit fork=\"yes\" printsummary=\"yes\" haltonfailure=\"yes\" showoutput=\"yes\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"external/lib/junit.jar\"/>\n+          <fileset refid=\"extension.jars\"/>\n+          <pathelement location=\"build/test/extensionsuse\"/>\n+        </classpath>\n+        <formatter type=\"plain\"/>\n+        <test name=\"drtcases.ExtensionsTest\" outfile=\"build/test/output/drt-extensions\"/>\n+      </junit>\n     </target>\n \n-    <target name=\"extensions.compile\" >\n-        <mkdir dir=\"build/test/extensions\"/>\n-        <javac srcdir=\"test/src/extensions\" destdir=\"build/test/extensions\" debug=\"on\">\n-            <classpath>\n-                <pathelement location=\"build/ar/xbean.jar\"/>\n-            </classpath>\n-        </javac>\n+    <!--The extensions use the bean types, compile first-->\n+    <target name=\"simpleBeans.check\">\n+      <uptodate property=\"simpleBeans.notRequired\" targetfile=\"build/private/lib/fixedAttrBean.jar\">\n+        <srcfiles dir=\"test/src/extensions\" includes=\"**/*\"/>\n+        <srcfiles dir=\"test/src/extensionsuse\" includes=\"**/*\"/>\n+        <srcfiles dir=\"build/ar\" includes=\"xbean.jar\"/>\n+      </uptodate>\n+    </target>\n \n-        <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n-            <jvmarg value=\"-ea\"/>\n-            <classpath>\n-                <pathelement location=\"build/ar/xbean.jar\" />\n-                <pathelement location=\"build/test/extensions\" />\n-            </classpath>\n-            <arg line=\"-out build/private/lib/extensions.jar test/src/extensions\"/>\n-        </java>\n+    <target name=\"build.simpleBeans\" unless=\"simpleBeans.notRequired\" depends=\"simpleBeans.check\">\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/fixedAttrBean.jar test/src/extensions/fixedAttrBean/po.xsd\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/averageCase.jar test/src/extensions/averageCase/po.xsd\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/multInterfaces.jar test/src/extensions/multInterfaces/po.xsd\"/>\n+      </java>\n+\n+      <!-- **Pre/Post Handlers -->\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/readOnlyBean.jar test/src/extensions/prePostFeature/readOnlyBean/po.xsd\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/ValueRestriction.jar test/src/extensions/prePostFeature/ValueRestriction/company.xsd\"/>\n+      </java>\n+    </target>\n \n-        <mkdir dir=\"build/test/extensionsuse\"/>\n-        <javac srcdir=\"test/src/extensionsuse\" destdir=\"build/test/extensionsuse\" debug=\"on\">\n-            <classpath>\n-                <pathelement location=\"build/ar/xbean.jar\"/>\n-                <pathelement location=\"external/lib/junit.jar\"/>\n-                <pathelement location=\"build/private/lib/extensions.jar\"/>\n-                <pathelement location=\"build/test/extensionsuse\"/>\n-            </classpath>\n-        </javac>\n+    <target name=\"extensions.compile\" depends=\"build.simpleBeans, simpleBeans.check\" unless=\"simpleBeans.notRequired\">\n+      <mkdir dir=\"build/test/extensions\"/>\n+      <javac srcdir=\"test/src/extensions\" destdir=\"build/test/extensions\" debug=\"on\">\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <fileset refid=\"extension.jars\"/>\n+        </classpath>\n+      </javac>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/extensions.jar test/src/extensions/myPackage\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/fixedAttrBean.jar test/src/extensions/fixedAttrBean\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/averageCase.jar test/src/extensions/averageCase\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/multInterfaces.jar test/src/extensions/multInterfaces\"/>\n+      </java>\n+      <!--Pre Post Feature -->\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/readOnlyBean.jar test/src/extensions/prePostFeature/readOnlyBean\"/>\n+      </java>\n+\n+      <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+        <jvmarg value=\"-ea\"/>\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"build/test/extensions\"/>\n+        </classpath>\n+        <arg line=\"-out build/private/lib/ValueRestriction.jar test/src/extensions/prePostFeature/ValueRestriction\"/>\n+      </java>\n+\n+\n+      <mkdir dir=\"build/test/extensionsuse\"/>\n+      <javac srcdir=\"test/src/extensionsuse\" destdir=\"build/test/extensionsuse\" debug=\"on\">\n+        <classpath>\n+          <pathelement location=\"build/ar/xbean.jar\" />\n+          <pathelement location=\"external/lib/junit.jar\"/>\n+          <fileset refid=\"extension.jars\"/>\n+          <pathelement location=\"build/test/extensionsuse\"/>\n+        </classpath>\n+      </javac>\n     </target>\n-    <!-- extensions test -->\n \n+  <!-- builddrt target -->\n   <target name=\"builddrt\" depends=\"drt.jar, random.jar, eric\"/>\n \n   <target name=\"eric\" depends=\"erictest.jar\"/>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/build.xml",
                "sha": "35cdd4d05529502d45831243f760e252cbac4894",
                "status": "modified"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/existing/FooHandler.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/averageCase/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/averageCase/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,35 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package averageCase.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument ;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.Items.Item;\n+\n+public class FooHandler\n+{\n+    public static int getTotal(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc= (PurchaseOrderDocument)xo;\n+\t    int sum=0;\n+\t    Item[] items=poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        for (int i=0; i<items.length; i++)\n+\t\t    sum+=items[i].getUSPrice().intValue();\n+\t    return sum;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/existing/FooHandler.java",
                "sha": "016f8e645a6a9b03160dfba0afb615c25fc3b0e5",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/existing/IFoo.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/averageCase/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/averageCase/existing/IFoo.java",
                "patch": "@@ -0,0 +1,20 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package averageCase.existing;\n+\n+public interface IFoo\n+{\n+    int getTotal();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/existing/IFoo.java",
                "sha": "d106a5a995caab54643c1b3603af369fe05d898f",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/averageCase/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/averageCase/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/averageCase/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/averageCase/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\"/>\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/po.xsd",
                "sha": "eba58d6624ed0c718dbd015361c0ce41427cf83c",
                "status": "added"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/po.xsdconfig",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/averageCase/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/averageCase/po.xsdconfig",
                "patch": "@@ -0,0 +1,22 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+\t<xb:extension for=\"interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"averageCase.existing.IFoo\">\n+            <xb:staticHandler>averageCase.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/averageCase/po.xsdconfig",
                "sha": "d3d8c4ae74ffd12f779931f3fb9e02564bd612e9",
                "status": "added"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/fixedAttrBean/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,45 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package fixedAttrBean.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.Items.Item;\n+import java.math.BigDecimal;\n+\n+public class FooHandler\n+{\n+    public static void setPrice(XmlObject xo, int price)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        BigDecimal o=new BigDecimal(price+\"\");\n+        try\n+        {\n+            for (int i=0; i<items.length; i++)\n+\t\t        items[i].setUSPrice(o);\n+        }\n+        catch (Exception e)\n+        {\n+            e.printStackTrace(System.err);\n+        }\n+    }\n+\n+\tpublic static void getPrice(XmlObject xo)\n+    {\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "sha": "db627c4a398da32dd6b116f2195621f85200be3a",
                "status": "added"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/fixedAttrBean/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "patch": "@@ -0,0 +1,21 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package fixedAttrBean.existing;\n+\n+public interface IFoo\n+{\n+    void setPrice(int price);\n+    void getPrice();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "sha": "5be39d53c4849c15cc58ac7a69318bcc91c27389",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/fixedAttrBean/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/fixedAttrBean/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/po.xsd",
                "sha": "7070a9cca9dc607148f0fb73fb272f7fe78bb7fa",
                "status": "added"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/fixedAttrBean/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "patch": "@@ -0,0 +1,22 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"fixedAttrBean.existing.IFoo\">\n+            <xb:staticHandler>fixedAttrBean.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "sha": "9899c0bc04b22d1f17b865fb0119e5ce38940f6a",
                "status": "added"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/IReport.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/multInterfaces/existing/IReport.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/multInterfaces/existing/IReport.java",
                "patch": "@@ -0,0 +1,26 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+public interface IReport extends ISum\n+{\n+    int getMinPrice();\n+\n+    XmlObject getCheapestItem();\n+\n+    void setMinPrice(double price);\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/IReport.java",
                "sha": "a66a338b18d9a85f1c5203a7a4d53eb86c441f2f",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/ISum.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/multInterfaces/existing/ISum.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/multInterfaces/existing/ISum.java",
                "patch": "@@ -0,0 +1,20 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+public interface ISum\n+{\n+    int getTotal();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/ISum.java",
                "sha": "8e5b7df4975bcd271d1e7f2ea19200cb5ab7d27a",
                "status": "added"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/multInterfaces/existing/ReportHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items.Item;\n+\n+\n+import java.math.BigDecimal;\n+\n+public class ReportHandler\n+{\n+    public static int getTotal(XmlObject xo)\n+    {\n+\n+        int sum = 0;\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        for (int i = 0; i < items.length; i++)\n+            sum += items[i].getUSPrice().intValue();\n+        return sum;\n+    }\n+\n+    public static int getMinPrice(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        int min = Integer.MAX_VALUE;\n+        for (int i = 0; i < items.length; i++)\n+        {\n+            int tmp = items[i].getUSPrice().intValue();\n+\n+            min = min > tmp ? tmp : min;\n+        }\n+        return min;\n+    }\n+\n+    public static XmlObject getCheapestItem(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        int min = Integer.MAX_VALUE;\n+        XmlObject item = null;\n+\n+        for (int i = 0; i < items.length; i++)\n+        {\n+            int tmp = items[i].getUSPrice().intValue();\n+            if (min > tmp)\n+            {\n+                min = tmp;\n+                item = items[i];\n+            }\n+        }\n+        return item;\n+    }\n+\n+    public static void setMinPrice(XmlObject xo, double min_price)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        BigDecimal newPrice = new BigDecimal(min_price);\n+\n+        for (int i = 0; i < items.length; i++)\n+        {\n+\n+            int tmp = items[i].getUSPrice().intValue();\n+            if (min_price > tmp)\n+                items[i].setUSPrice(newPrice);\n+        }\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "sha": "d52850f135e3b4233dc7dc2bf0b3bbc54c45178c",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/multInterfaces/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/multInterfaces/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/po.xsd",
                "sha": "8a57dd103945227f4e5088b5dfa44412363cf85c",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/po.xsdconfig",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/multInterfaces/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/multInterfaces/po.xsdconfig",
                "patch": "@@ -0,0 +1,24 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <!-- for=\"interfaceFeature.xbean.multInterfaces.PurchaseOrder.PurchaseOrderDocument\"-->\n+    <xb:extension for=\"interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"multInterfaces.existing.IReport\">\n+            <xb:staticHandler>multInterfaces.existing.ReportHandler</xb:staticHandler>\n+        </xb:interface>\n+\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/multInterfaces/po.xsdconfig",
                "sha": "c56f91e85fd5f5b1f71884ac83e9da7b8dfa41d8",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/myPackage/company.xsd",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/myPackage/company.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/myPackage/company.xsd",
                "previous_filename": "v1/test/src/extensions/company.xsd",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/myPackage/company.xsd",
                "sha": "baaabc2c515aa740a85305c21484331ee4cada8d",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/myPackage/company.xsdconfig",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/myPackage/company.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/myPackage/company.xsdconfig",
                "previous_filename": "v1/test/src/extensions/company.xsdconfig",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/myPackage/company.xsdconfig",
                "sha": "90022894123c19341983f486bbafaa9dc9925980",
                "status": "renamed"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "patch": "@@ -0,0 +1,51 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<!--this is schema company.xsd stripped down and modified to have a value restriction on the employees age-->\n+\n+<xsd:schema \n+targetNamespace=\"prePostFeature/xbean/ValueRestriction/company\" \n+xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \n+xmlns:company=\"prePostFeature/xbean/ValueRestriction/company\">\n+\t<xsd:element name=\"company\" type=\"company:CompanyType\"/>\n+\t<xsd:complexType name=\"CompanyType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"departments\" type=\"company:DepartmentType\" maxOccurs=\"unbounded\"/>\n+\t\t</xsd:sequence>\n+\t\t\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t</xsd:complexType>\n+\t<xsd:element name=\"department\" type=\"company:DepartmentType\"/>\n+\t<xsd:complexType name=\"DepartmentType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"consultant\" type=\"company:ConsultantType\" maxOccurs=\"unbounded\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"ConsultantType\">\n+\t\t\n+\t\t<xsd:attribute name=\"name\" type=\"xsd:string\"/>\n+\t      <xsd:attribute name=\"age\" type=\"company:age\"/>\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t   \n+\t</xsd:complexType>\n+\n+\t\n+               <xsd:simpleType name=\"age\">\n+                  <xsd:restriction base=\"xsd:integer\">\n+                         <xsd:minInclusive value=\"0\"/>\n+                         <xsd:maxInclusive value=\"100\"/>\n+                  </xsd:restriction>\n+               </xsd:simpleType>\n+   \n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "sha": "25e5608733b1c2685eea6bb3eae495599a3306b3",
                "status": "added"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "patch": "@@ -0,0 +1,26 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"*\">\n+        <xb:interface name=\"prePostFeature.ValueRestriction.existing.ISetter\">\n+            <xb:staticHandler>prePostFeature.ValueRestriction.existing.SetterHandler</xb:staticHandler>\n+        </xb:interface>  \n+       <xb:prePostSet> \n+            <xb:staticHandler>prePostFeature.ValueRestriction.existing.SetterHandler</xb:staticHandler> \n+      </xb:prePostSet> \n+   </xb:extension> \n+\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "sha": "eb1c07df54ce7e3f5c8002b7a08c84ccadefcc8b",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "patch": "@@ -0,0 +1,24 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.ValueRestriction.existing;\n+\n+/**\n+ * User: ykadiysk\n+ * Date: May 5, 2004\n+ */\n+public interface ISetter\n+{\n+    public void setEmployeeAge(int age);\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "sha": "19d21fca5b8f7c9eeb5e8d8fa4890c54ed5151de",
                "status": "added"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "patch": "@@ -0,0 +1,52 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.ValueRestriction.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+import prePostFeature.xbean.valueRestriction.company.ConsultantType;\n+\n+import javax.xml.namespace.QName;\n+\n+\n+/**\n+ * @author ykadiysk\n+ */\n+public class SetterHandler\n+{\n+\n+    public static boolean bReady = false;\n+\n+    public static void setEmployeeAge(XmlObject xo, int age)\n+    {\n+        ((ConsultantType) xo).setAge(age);\n+    }\n+\n+    private static XmlObject origValue;\n+\n+    public static boolean preSet(int opType, XmlObject xo, QName prop, boolean isAttr, int index)\n+    {\n+        origValue = xo.copy();\n+        return true;\n+    }\n+\n+    public static void postSet(int opType, XmlObject xo, QName propertyName, boolean isAttr, int index)\n+    {\n+        if (!xo.validate() && (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET) && bReady)\n+            xo.set(origValue);\n+        xo.validate();\n+    }\n+\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "sha": "cfbd6a3c865fefbf1f50046e61151c2b9f60ae8a",
                "status": "added"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,53 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.readOnlyBean.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderDocument;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.Items.Item;\n+\n+import javax.xml.namespace.QName;\n+import java.math.BigDecimal;\n+\n+public class FooHandler\n+{\n+    public static boolean preSet(int opType, XmlObject xo, QName prop, boolean isAttr, int index)\n+    {\n+        if (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET)\n+            return false;\n+        return true;\n+    }\n+\n+    public static void postSet(int opType, XmlObject xo, QName propertyName, boolean isAttr, int index)\n+    {\n+        if (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET)\n+            System.err.println(\"No setters are allowed for this bean:\" + \" value unchanged\" + propertyName);\n+    }\n+\n+    public static void setPrice(XmlObject xo, int price)\n+    {\n+        Item it = (Item) xo;\n+        BigDecimal o = new BigDecimal(price + \"\");\n+        it.setUSPrice(o);\n+    }\n+\n+    public static double getPrice(XmlObject xo)\n+    {\n+        Item it = (Item) xo;\n+        return it.getUSPrice().doubleValue();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "sha": "81733b39a6a1289201749a1e3ea52443ba867d01",
                "status": "added"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "patch": "@@ -0,0 +1,27 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.readOnlyBean.existing;\n+\n+/**\n+ * User: ykadiysk\n+ * Date: May 4, 2004\n+ */\n+public interface IFoo\n+{\n+    void setPrice(int price);\n+\n+    double getPrice();\n+}\n+",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "sha": "0cc4e347542fb95e66cfd38930084056665fa237",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\"\n+targetNamespace=\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "sha": "189d6e56aacca7786ca0a54254c31606e23f04ef",
                "status": "added"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "patch": "@@ -0,0 +1,25 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"*\">\n+        <xb:interface name=\"prePostFeature.readOnlyBean.existing.IFoo\">\n+            <xb:staticHandler>prePostFeature.readOnlyBean.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>  \n+       <xb:prePostSet> \n+            <xb:staticHandler>prePostFeature.readOnlyBean.existing.FooHandler</xb:staticHandler> \n+      </xb:prePostSet> \n+   </xb:extension> \n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "sha": "c764fcbca433095d4a006ad4a4397f95d3ceeef9",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/AverageCaseTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "patch": "@@ -0,0 +1,47 @@\n+package drtcases;\n+\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.Items;\n+\n+import junit.framework.*;\n+\n+import java.math.BigDecimal;\n+\n+\n+public class AverageCaseTest extends TestCase\n+{\n+    public AverageCaseTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(AverageCaseTest.class);\n+    }\n+\n+    public void test()\n+    {\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 2));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+        // System.out.println(\"poDoc: \" + poDoc);\n+\n+        int i = poDoc.getTotal();\n+//20 items @ $2\n+        assertEquals(40, i);\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "sha": "bdb1e6e9e64aff8ac934eb4a9131a213a170c6b1",
                "status": "added"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "changes": 119,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/ExtensionsTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 106,
                "filename": "v1/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "patch": "@@ -17,124 +17,31 @@\n import junit.framework.TestCase;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n-import junit.framework.Assert;\n-import xsd.company.CompanyDocument;\n-import xsd.company.CompanyType;\n-import myPackage.Foo;\n-import myPackage.Bar;\n-import myPackage.FooHandler;\n-import myPackage.FooHandler.PreBookmark;\n-import myPackage.FooHandler.PostBookmark;\n-import org.apache.xmlbeans.XmlCursor;\n+import drtcases.prePostFeature.readOnlyBean.ReadOnlyTest;\n+import drtcases.prePostFeature.ValueRestriction.ValueRestrictionTest;\n \n /**\n  * Author: Cezar Andrei ( cezar.andrei at bea.com )\n  * Date: Mar 28, 2004\n  */\n public class ExtensionsTest extends TestCase\n {\n-    public ExtensionsTest(String name) { super(name); }\n-    public static Test suite() { return new TestSuite(ExtensionsTest.class); }\n-\n-    public void testInterfaces()\n+    public ExtensionsTest(String name)\n     {\n-\t\tString expected;\n-\t\tString actual;\n-\n-        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n-\n-        CompanyType co = cDoc.addNewCompany();\n-        co.setName2(\"xbean name\");\n-\n-        expected = \"xbean name\";\n-        actual = co.getName2();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        expected = \"{name in FooHandler}\";\n-        actual = co.getName();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        Foo foo = cDoc;\n-\n-        expected = \"{in FooHandler.handleFoo(s: param)}\";\n-        actual = foo.foo(\"param\");\n-        Assert.assertTrue(\"Expected: '\" + expected + \"'\\n  actual: '\" + actual +\"'\", expected.equals(actual));\n-\n-\n-        Bar bar = null;\n-\n-        try\n-        {\n-            bar = cDoc;\n-            byte[] ba = bar.bar(\"param for bar\");\n-\n-\t\t\texpected = \"{in BarHandler.handleBar(s: param for bar)}\";\n-\t\t\tactual = new String(bar.bar(\"param for bar\"));\n-\t\t\tAssert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-        }\n-        catch (Bar.MyException e)\n-        {\n-            Assert.assertTrue(false);\n-        }\n-\n-        try\n-        {\n-            bar.bar(null);\n-            Assert.assertTrue(false);\n-        }\n-        catch( Bar.MyException e)\n-        {\n-            Assert.assertTrue(true);\n-        }\n+        super(name);\n     }\n \n-    public void testPrePost()\n+    public static Test suite()\n     {\n-        String expected;\n-        String actual;\n-        XmlCursor xc;\n-\n-        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n-\n-        // add new\n-        CompanyType co = cDoc.addNewCompany();\n-\n-        xc = cDoc.newCursor();\n-        PreBookmark prebk = (PreBookmark)xc.getBookmark(PreBookmark.class);\n-\n-        expected = \"{preSet in FooHandler: 2, <xml-fragment></xml-fragment>, {company.xsd}company, false, -1}\";\n-        actual = prebk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-\n-\n-        PostBookmark postbk = (PostBookmark)xc.getBookmark(PostBookmark.class);\n-\n-        expected = \"{postSet in FooHandler: 2, \" + cDoc + \", {company.xsd}company, false, -1}\";\n-        actual = postbk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        xc.dispose();\n-\n-\n-        // set\n-        co.setName2(\"xbean name\");\n-\n-        xc = co.newCursor();\n-        prebk = (PreBookmark)xc.getBookmark(PreBookmark.class);\n-\n-        expected = \"{preSet in FooHandler: 1, <xml-fragment/>, name, true, -1}\";\n-        actual = prebk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-\n-\n-        postbk = (PostBookmark)xc.getBookmark(PostBookmark.class);\n+        TestSuite suite = new TestSuite();\n \n-        expected = \"{postSet in FooHandler: 1, \" + co + \", name, true, -1}\";\n-        actual = postbk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+        suite.addTest(SimpleTest.suite());\n+        suite.addTest(AverageCaseTest.suite());\n+        suite.addTest(FixedAttrTest.suite());\n+        suite.addTest(MultInterfacesTest.suite());\n+        suite.addTest(ReadOnlyTest.suite());\n+        suite.addTest(ValueRestrictionTest.suite());\n \n-        xc.dispose();\n+        return suite;\n     }\n }",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "sha": "faade195e30d8a0c33695eb284a61a491503f47c",
                "status": "modified"
            },
            {
                "additions": 74,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/FixedAttrTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "patch": "@@ -0,0 +1,74 @@\n+package drtcases;\n+\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.Items;\n+\n+\n+import java.math.BigDecimal;\n+\n+import junit.framework.*;\n+\n+public class FixedAttrTest extends TestCase\n+{\n+    public FixedAttrTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(FixedAttrTest.class);\n+    }\n+\n+    public void test()\n+    {\n+\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 4));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\\\">\");\n+\n+        sb.append(\"<pur:items>\");\n+\n+        StringBuffer sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            sbContent.append(\"<pur:item><pur:USPrice>4</pur:USPrice></pur:item>\");\n+\n+        int pos = sb.length();\n+        sb.append(\"</pur:items></pur:purchaseOrder>\");\n+\n+        String sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        try\n+        {\n+            poDoc.setPrice(10);\n+\n+        }\n+        catch (Exception t)\n+        {\n+            t.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+\n+\n+        assertTrue(!poDoc.validate());\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "sha": "6f1fe5ac5cefb1991ab6449d2c9992ea57a82149",
                "status": "added"
            },
            {
                "additions": 88,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "changes": 88,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/MultInterfacesTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "patch": "@@ -0,0 +1,88 @@\n+package drtcases;\n+\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items.Item;\n+\n+import java.math.BigDecimal;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import junit.framework.*;\n+\n+public class MultInterfacesTest extends TestCase\n+{\n+    public MultInterfacesTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(MultInterfacesTest.class);\n+    }\n+\n+    public void test()\n+    {\n+\n+\n+        PurchaseOrderDocument poDoc = null;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + i));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\\\">\");\n+\n+        sb.append(\"<pur:items>\");\n+\n+        StringBuffer sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            sbContent.append(\"<pur:item><pur:USPrice>\" + i + \"</pur:USPrice></pur:item>\");\n+\n+        int pos = sb.length();\n+        sb.append(\"</pur:items></pur:purchaseOrder>\");\n+\n+        String sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+\n+        assertEquals(0, poDoc.getMinPrice());\n+        int price = 10;\n+\n+        poDoc.setMinPrice((double) price);\n+\n+        sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            if (i < price)\n+                sbContent.append(\"<pur:item><pur:USPrice>\" + price + \"</pur:USPrice></pur:item>\");\n+            else\n+                sbContent.append(\"<pur:item><pur:USPrice>\" + i + \"</pur:USPrice></pur:item>\");\n+        sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        assertEquals(price, poDoc.getMinPrice());\n+\n+        int expTotal = (price - 1) * price + (price + 1 + LEN) * (LEN - price) / 2;\n+        assertEquals(expTotal, poDoc.getTotal());\n+\n+        XmlObject item = poDoc.getCheapestItem();\n+\n+        Item expected = it[0];\n+        expected.setUSPrice(new BigDecimal(30d));\n+        //       assertEquals(expected, item );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "sha": "674834d7a3d43dc5977de1db9bcc6f4ed5fb7cf8",
                "status": "added"
            },
            {
                "additions": 145,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/SimpleTest.java",
                "changes": 145,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/SimpleTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/SimpleTest.java",
                "patch": "@@ -0,0 +1,145 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases;\n+\n+import junit.framework.TestCase;\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+import junit.framework.Assert;\n+import xsd.company.CompanyDocument;\n+import xsd.company.CompanyType;\n+import myPackage.Foo;\n+import myPackage.Bar;\n+import myPackage.FooHandler;\n+import myPackage.FooHandler.PreBookmark;\n+import myPackage.FooHandler.PostBookmark;\n+import org.apache.xmlbeans.XmlCursor;\n+\n+/**\n+ * Author: Cezar Andrei ( cezar.andrei at bea.com )\n+ * Date: Mar 28, 2004\n+ */\n+public class SimpleTest extends TestCase\n+{\n+    public SimpleTest(String name)\n+    {\n+        super(name);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(SimpleTest.class);\n+    }\n+\n+    public void testInterfaces()\n+    {\n+        String expected;\n+        String actual;\n+\n+        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n+\n+        CompanyType co = cDoc.addNewCompany();\n+        co.setName2(\"xbean name\");\n+\n+        expected = \"xbean name\";\n+        actual = co.getName2();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        expected = \"{name in FooHandler}\";\n+        actual = co.getName();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        Foo foo = cDoc;\n+\n+        expected = \"{in FooHandler.handleFoo(s: param)}\";\n+        actual = foo.foo(\"param\");\n+        Assert.assertTrue(\"Expected: '\" + expected + \"'\\n  actual: '\" + actual + \"'\", expected.equals(actual));\n+\n+\n+        Bar bar = null;\n+\n+        try\n+        {\n+            bar = cDoc;\n+            byte[] ba = bar.bar(\"param for bar\");\n+\n+            expected = \"{in BarHandler.handleBar(s: param for bar)}\";\n+            actual = new String(bar.bar(\"param for bar\"));\n+            Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+        }\n+        catch (Bar.MyException e)\n+        {\n+            Assert.assertTrue(false);\n+        }\n+\n+        try\n+        {\n+            bar.bar(null);\n+            Assert.assertTrue(false);\n+        }\n+        catch (Bar.MyException e)\n+        {\n+            Assert.assertTrue(true);\n+        }\n+    }\n+\n+    public void testPrePost()\n+    {\n+        String expected;\n+        String actual;\n+        XmlCursor xc;\n+\n+        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n+\n+        // add new\n+        CompanyType co = cDoc.addNewCompany();\n+\n+        xc = cDoc.newCursor();\n+        PreBookmark prebk = (PreBookmark) xc.getBookmark(PreBookmark.class);\n+\n+        expected = \"{preSet in FooHandler: 2, <xml-fragment></xml-fragment>, {company.xsd}company, false, -1}\";\n+        actual = prebk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+\n+        PostBookmark postbk = (PostBookmark) xc.getBookmark(PostBookmark.class);\n+\n+        expected = \"{postSet in FooHandler: 2, \" + cDoc + \", {company.xsd}company, false, -1}\";\n+        actual = postbk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        xc.dispose();\n+\n+\n+        // set\n+        co.setName2(\"xbean name\");\n+\n+        xc = co.newCursor();\n+        prebk = (PreBookmark) xc.getBookmark(PreBookmark.class);\n+\n+        expected = \"{preSet in FooHandler: 1, <xml-fragment/>, name, true, -1}\";\n+        actual = prebk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+\n+        postbk = (PostBookmark) xc.getBookmark(PostBookmark.class);\n+\n+        expected = \"{postSet in FooHandler: 1, \" + co + \", name, true, -1}\";\n+        actual = postbk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        xc.dispose();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/SimpleTest.java",
                "sha": "13ff1fb01c83b8dad9ce713aeb13faf08c4302ea",
                "status": "added"
            },
            {
                "additions": 74,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "patch": "@@ -0,0 +1,74 @@\n+package drtcases.prePostFeature.ValueRestriction;\n+\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+import junit.framework.Test;\n+import prePostFeature.xbean.valueRestriction.company.*;\n+import org.apache.xmlbeans.XmlString;\n+\n+/**\n+ * Created by IntelliJ IDEA.\n+ * User: ykadiysk\n+ * Date: May 5, 2004\n+ * Time: 11:23:35 AM\n+ * To change this template use File | Settings | File Templates.\n+ */\n+public class ValueRestrictionTest extends TestCase\n+{\n+    public ValueRestrictionTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(ValueRestrictionTest.class);\n+    }\n+\n+    public void test() throws Exception\n+    {\n+        CompanyDocument poDoc;\n+\n+        poDoc = CompanyDocument.Factory.newInstance();\n+        CompanyType po = poDoc.addNewCompany();\n+\n+        int LEN = 20;\n+\n+        StringBuffer sExpected = new StringBuffer();\n+        sExpected.append(\"<com:company xmlns:com=\\\"prePostFeature/xbean/ValueRestriction/company\\\"><departments>\");\n+        DepartmentType dept = po.addNewDepartments();\n+        ConsultantType[] it = new ConsultantType[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = dept.addNewConsultant();\n+            XmlString s = XmlString.Factory.newInstance();\n+            it[i].setAge(50);\n+            sExpected.append(\"<consultant age=\\\"50\\\"/>\");\n+        }\n+\n+        sExpected.append(\"</departments></com:company>\");\n+\n+        assertEquals(sExpected.toString(), poDoc.xmlText());\n+        assertTrue(poDoc.validate());\n+\n+\n+        prePostFeature.ValueRestriction.existing.SetterHandler.bReady = true;\n+\n+\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i].setAge(150);\n+        }\n+\n+        assertEquals(sExpected.toString(), poDoc.xmlText());\n+        assertTrue(poDoc.validate());\n+\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i].setEmployeeAge(150);\n+        }\n+        assertTrue(sExpected.toString().equals(poDoc.xmlText()));\n+        assertTrue(poDoc.validate());\n+    }\n+}\n+",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "sha": "4dc18368a4b28d515143b7a2453a8c93449d9fb1",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v1/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v1/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package drtcases.prePostFeature.readOnlyBean;\n+\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderDocument;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderType;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.Items;\n+\n+\n+import java.math.BigDecimal;\n+\n+import junit.framework.*;\n+import drtcases.FixedAttrTest;\n+\n+public class ReadOnlyTest extends TestCase\n+{\n+    public ReadOnlyTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(FixedAttrTest.class);\n+    }\n+\n+    public void test()\n+    {\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+\n+\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 4));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+\n+        String sExpected = \"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\\\"/>\";\n+\n+\n+        it[0].setPrice(10);\n+\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        assertTrue(!poDoc.validate());\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v1/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "sha": "372c8ac34c4c3524fb99c8cf94c5755ffdcb19c0",
                "status": "added"
            },
            {
                "additions": 143,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/build.xml",
                "changes": 169,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/build.xml?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 26,
                "filename": "v2/build.xml",
                "patch": "@@ -118,17 +118,17 @@\n   <target name=\"drt\" depends=\"builddrt, rundrt, drtxpath\"/>\n \n   <target name=\"rundrt\" >\n-      <echo message=\"Running random tester\"/>\n-       <java classname=\"Random\" fork=\"true\" failonerror=\"true\">\n-          <classpath>\n+    <echo message=\"Running random tester\"/>\n+    <java classname=\"Random\" fork=\"true\" failonerror=\"true\">\n+       <classpath>\n             <pathelement location=\"build/ar/xbean.jar\"/>\n             <pathelement location=\"build/lib/jsr173_api.jar\"/>\n             <pathelement location=\"build/private/lib/easypo.jar\"/>\n             <pathelement location=\"build/private/lib/random.jar\"/>\n-          </classpath>\n-         <jvmarg value=\"-ea\"/>\n-         <arg line=\"-seed 0 -i 20 -noquery\"/>\n-       </java>\n+       </classpath>\n+       <jvmarg value=\"-ea\"/>\n+       <arg line=\"-seed 0 -i 20 -noquery\"/>\n+    </java>\n \n     <mkdir dir=\"build/test/output\"/>\n     <echo message=\"Running xbean product drt tests\"/>\n@@ -196,54 +196,171 @@\n   <target name=\"builddrt\" depends=\"drt.jar, random.jar, eric\"/>\n \n   <!-- extensions test -->\n+  <fileset id=\"extension.jars\" dir=\"build/private/lib\">\n+    <include name=\"extensions.jar\"/>\n+    <include name=\"fixedAttrBean.jar\"/>\n+    <include name=\"averageCase.jar\"/>\n+    <include name=\"multInterfaces.jar\"/>\n+    <include name=\"readOnlyBean.jar\"/>\n+    <include name=\"ValueRestriction.jar\"/>\n+  </fileset>\n+\n+  <fileset id=\"xbean.jars\" dir=\"build/lib\">\n+    <include name=\"xbean.jar\"/>\n+    <include name=\"jsr173_api.jar\"/>\n+    <include name=\"jsr173_ri.jar\"/>\n+  </fileset>\n+\n+  <path id=\"cpWithXbeanJars\">\n+      <fileset refid=\"xbean.jars\" />\n+      <!-- JAM needs tools.jar which should be on ${java.class.path} -->\n+      <pathelement path=\"${java.class.path}\" />\n+  </path>\n+\n   <target name=\"extensionsTest\" depends=\"extensions.compile\">\n     <echo message=\"JUnit output being sent to build/test/output/drt-extensions.txt\"/>\n     <junit fork=\"yes\" printsummary=\"yes\" haltonfailure=\"yes\" showoutput=\"yes\">\n       <jvmarg value=\"-ea\"/>\n       <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n         <pathelement location=\"external/lib/junit.jar\"/>\n-        <pathelement location=\"build/ar/xbean.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_api.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_ri.jar\"/>\n         <pathelement location=\"build/private/lib/extensions.jar\"/>\n         <pathelement location=\"build/test/extensionsuse\"/>\n-        <pathelement path='${java.class.path}'/>\n-\t  </classpath>\n+        <fileset refid=\"extension.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n       <formatter type=\"plain\"/>\n       <test name=\"drtcases.ExtensionsTest\" outfile=\"build/test/output/drt-extensions\"/>\n     </junit>\n   </target>\n \n-  <target name=\"extensions.compile\">\n+  <!--The extensions use the bean types, compile first-->\n+  <target name=\"simpleBeans.check\">\n+    <uptodate property=\"simpleBeans.notRequired\" targetfile=\"build/private/lib/fixedAttrBean.jar\">\n+      <srcfiles dir=\"test/src/extensions\" includes=\"**/*\"/>\n+      <srcfiles dir=\"test/src/extensionsuse\" includes=\"**/*\"/>\n+      <srcfiles dir=\"build/ar\" includes=\"xbean.jar\"/>\n+    </uptodate>\n+  </target>\n+\n+  <target name=\"build.simpleBeans\" unless=\"simpleBeans.notRequired\" depends=\"simpleBeans.check\">\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/fixedAttrBean.jar test/src/extensions/fixedAttrBean/po.xsd\"/>\n+    </java>\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/averageCase.jar test/src/extensions/averageCase/po.xsd\"/>\n+    </java>\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/multInterfaces.jar test/src/extensions/multInterfaces/po.xsd\"/>\n+    </java>\n+    <!-- **Pre/Post Handlers -->\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/readOnlyBean.jar test/src/extensions/prePostFeature/readOnlyBean/po.xsd\"/>\n+    </java>\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/ValueRestriction.jar test/src/extensions/prePostFeature/ValueRestriction/company.xsd\"/>\n+    </java>\n+\n+  </target>\n+\n+  <target name=\"extensions.compile\" depends=\"build.simpleBeans, simpleBeans.check\" unless=\"simpleBeans.notRequired\">\n     <mkdir dir=\"build/test/extensions\"/>\n     <javac srcdir=\"test/src/extensions\" destdir=\"build/test/extensions\" debug=\"on\">\n       <classpath>\n-        <pathelement location=\"build/ar/xbean.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_api.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_ri.jar\"/>\n-\t  </classpath>\n+        <fileset refid=\"xbean.jars\"/>\n+        <fileset refid=\"extension.jars\"/>\n+      </classpath>\n     </javac>\n \n     <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n       <jvmarg value=\"-ea\"/>\n       <classpath>\n-        <pathelement location=\"build/ar/xbean.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_api.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_ri.jar\"/>\n+        <path refid=\"cpWithXbeanJars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/extensions.jar test/src/extensions/myPackage\"/>\n+    </java>\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/fixedAttrBean.jar test/src/extensions/fixedAttrBean\"/>\n+    </java>\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n         <pathelement location=\"build/test/extensions\"/>\n-        <pathelement path='${java.class.path}'/>\n       </classpath>\n-      <arg line=\"-out build/private/lib/extensions.jar test/src/extensions\"/>\n+      <arg line=\"-out build/private/lib/averageCase.jar test/src/extensions/averageCase\"/>\n     </java>\n \n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/multInterfaces.jar -src  build/private/lib/temp test/src/extensions/multInterfaces\"/>\n+    </java>\n+    <!--Pre Post Feature -->\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/readOnlyBean.jar -src  build/private/lib/temp test/src/extensions/prePostFeature/readOnlyBean\"/>\n+    </java>\n+\n+    <java classname=\"${schema_compiler}\" fork=\"true\" failonerror=\"true\">\n+      <jvmarg value=\"-ea\"/>\n+      <classpath>\n+        <path refid=\"cpWithXbeanJars\"/>\n+        <pathelement location=\"build/test/extensions\"/>\n+      </classpath>\n+      <arg line=\"-out build/private/lib/ValueRestriction.jar -src  build/private/lib/temp test/src/extensions/prePostFeature/ValueRestriction\"/>\n+    </java>\n+\n+\n     <mkdir dir=\"build/test/extensionsuse\"/>\n     <javac srcdir=\"test/src/extensionsuse\" destdir=\"build/test/extensionsuse\" debug=\"on\">\n       <classpath>\n-        <pathelement location=\"build/ar/xbean.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_api.jar\"/>\n-        <pathelement location=\"build/lib/jsr173_ri.jar\"/>\n+        <fileset refid=\"xbean.jars\"/>\n         <pathelement location=\"external/lib/junit.jar\"/>\n-        <pathelement location=\"build/private/lib/extensions.jar\"/>\n+        <fileset refid=\"extension.jars\"/>\n         <pathelement location=\"build/test/extensionsuse\"/>\n       </classpath>\n     </javac>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/build.xml",
                "sha": "2c0c9c306aa6e3273c220aba3a87b39367cd964e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/src/typeimpl/org/apache/xmlbeans/impl/validator/ValidatingXMLStreamReader.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/src/typeimpl/org/apache/xmlbeans/impl/validator/ValidatingXMLStreamReader.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/src/typeimpl/org/apache/xmlbeans/impl/validator/ValidatingXMLStreamReader.java",
                "patch": "@@ -527,6 +527,7 @@ private void validate_event(int evType)\n                     _errorListener.add(XmlError.forMessage(\"No content type provided for validation of a content model.\",\n                         XmlError.SEVERITY_ERROR));\n                     _state = STATE_ERROR;\n+                    break;\n                 }\n                 initValidator(_contentType);\n                 _validator.nextEvent(Validator.BEGIN, _simpleEvent);",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/src/typeimpl/org/apache/xmlbeans/impl/validator/ValidatingXMLStreamReader.java",
                "sha": "a8ec6431fce01827f012cebb7521848dff75a89e",
                "status": "modified"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/existing/FooHandler.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/averageCase/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/averageCase/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,35 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package averageCase.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument ;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.Items.Item;\n+\n+public class FooHandler\n+{\n+    public static int getTotal(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc= (PurchaseOrderDocument)xo;\n+\t    int sum=0;\n+\t    Item[] items=poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        for (int i=0; i<items.length; i++)\n+\t\t    sum+=items[i].getUSPrice().intValue();\n+\t    return sum;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/existing/FooHandler.java",
                "sha": "016f8e645a6a9b03160dfba0afb615c25fc3b0e5",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/existing/IFoo.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/averageCase/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/averageCase/existing/IFoo.java",
                "patch": "@@ -0,0 +1,20 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package averageCase.existing;\n+\n+public interface IFoo\n+{\n+    int getTotal();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/existing/IFoo.java",
                "sha": "d106a5a995caab54643c1b3603af369fe05d898f",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/averageCase/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/averageCase/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/averageCase/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/averageCase/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\"/>\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/po.xsd",
                "sha": "eba58d6624ed0c718dbd015361c0ce41427cf83c",
                "status": "added"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/po.xsdconfig",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/averageCase/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/averageCase/po.xsdconfig",
                "patch": "@@ -0,0 +1,22 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+\t<xb:extension for=\"interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"averageCase.existing.IFoo\">\n+            <xb:staticHandler>averageCase.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/averageCase/po.xsdconfig",
                "sha": "d3d8c4ae74ffd12f779931f3fb9e02564bd612e9",
                "status": "added"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/fixedAttrBean/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,45 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package fixedAttrBean.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.Items.Item;\n+import java.math.BigDecimal;\n+\n+public class FooHandler\n+{\n+    public static void setPrice(XmlObject xo, int price)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        BigDecimal o=new BigDecimal(price+\"\");\n+        try\n+        {\n+            for (int i=0; i<items.length; i++)\n+\t\t        items[i].setUSPrice(o);\n+        }\n+        catch (Exception e)\n+        {\n+            e.printStackTrace(System.err);\n+        }\n+    }\n+\n+\tpublic static void getPrice(XmlObject xo)\n+    {\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/existing/FooHandler.java",
                "sha": "db627c4a398da32dd6b116f2195621f85200be3a",
                "status": "added"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/fixedAttrBean/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "patch": "@@ -0,0 +1,21 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package fixedAttrBean.existing;\n+\n+public interface IFoo\n+{\n+    void setPrice(int price);\n+    void getPrice();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/existing/IFoo.java",
                "sha": "5be39d53c4849c15cc58ac7a69318bcc91c27389",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/fixedAttrBean/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/fixedAttrBean/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/po.xsd",
                "sha": "7070a9cca9dc607148f0fb73fb272f7fe78bb7fa",
                "status": "added"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/fixedAttrBean/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "patch": "@@ -0,0 +1,22 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"fixedAttrBean.existing.IFoo\">\n+            <xb:staticHandler>fixedAttrBean.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/fixedAttrBean/po.xsdconfig",
                "sha": "9899c0bc04b22d1f17b865fb0119e5ce38940f6a",
                "status": "added"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/IReport.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/multInterfaces/existing/IReport.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/multInterfaces/existing/IReport.java",
                "patch": "@@ -0,0 +1,26 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+public interface IReport extends ISum\n+{\n+    int getMinPrice();\n+\n+    XmlObject getCheapestItem();\n+\n+    void setMinPrice(double price);\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/IReport.java",
                "sha": "a66a338b18d9a85f1c5203a7a4d53eb86c441f2f",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/ISum.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/multInterfaces/existing/ISum.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/multInterfaces/existing/ISum.java",
                "patch": "@@ -0,0 +1,20 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+public interface ISum\n+{\n+    int getTotal();\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/ISum.java",
                "sha": "8e5b7df4975bcd271d1e7f2ea19200cb5ab7d27a",
                "status": "added"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/multInterfaces/existing/ReportHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package multInterfaces.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items.Item;\n+\n+\n+import java.math.BigDecimal;\n+\n+public class ReportHandler\n+{\n+    public static int getTotal(XmlObject xo)\n+    {\n+\n+        int sum = 0;\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        for (int i = 0; i < items.length; i++)\n+            sum += items[i].getUSPrice().intValue();\n+        return sum;\n+    }\n+\n+    public static int getMinPrice(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        int min = Integer.MAX_VALUE;\n+        for (int i = 0; i < items.length; i++)\n+        {\n+            int tmp = items[i].getUSPrice().intValue();\n+\n+            min = min > tmp ? tmp : min;\n+        }\n+        return min;\n+    }\n+\n+    public static XmlObject getCheapestItem(XmlObject xo)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        int min = Integer.MAX_VALUE;\n+        XmlObject item = null;\n+\n+        for (int i = 0; i < items.length; i++)\n+        {\n+            int tmp = items[i].getUSPrice().intValue();\n+            if (min > tmp)\n+            {\n+                min = tmp;\n+                item = items[i];\n+            }\n+        }\n+        return item;\n+    }\n+\n+    public static void setMinPrice(XmlObject xo, double min_price)\n+    {\n+        PurchaseOrderDocument poDoc = (PurchaseOrderDocument) xo;\n+        Item[] items = poDoc.getPurchaseOrder().getItems().getItemArray();\n+\n+        BigDecimal newPrice = new BigDecimal(min_price);\n+\n+        for (int i = 0; i < items.length; i++)\n+        {\n+\n+            int tmp = items[i].getUSPrice().intValue();\n+            if (min_price > tmp)\n+                items[i].setUSPrice(newPrice);\n+        }\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/existing/ReportHandler.java",
                "sha": "d52850f135e3b4233dc7dc2bf0b3bbc54c45178c",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/multInterfaces/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/multInterfaces/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\"\n+targetNamespace=\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/po.xsd",
                "sha": "8a57dd103945227f4e5088b5dfa44412363cf85c",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/po.xsdconfig",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/multInterfaces/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/multInterfaces/po.xsdconfig",
                "patch": "@@ -0,0 +1,24 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <!-- for=\"interfaceFeature.xbean.multInterfaces.PurchaseOrder.PurchaseOrderDocument\"-->\n+    <xb:extension for=\"interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument\">\n+        <xb:interface name=\"multInterfaces.existing.IReport\">\n+            <xb:staticHandler>multInterfaces.existing.ReportHandler</xb:staticHandler>\n+        </xb:interface>\n+\n+    </xb:extension>\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/multInterfaces/po.xsdconfig",
                "sha": "c56f91e85fd5f5b1f71884ac83e9da7b8dfa41d8",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/myPackage/company.xsd",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/myPackage/company.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/myPackage/company.xsd",
                "previous_filename": "v2/test/src/extensions/company.xsd",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/myPackage/company.xsd",
                "sha": "baaabc2c515aa740a85305c21484331ee4cada8d",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/myPackage/company.xsdconfig",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/myPackage/company.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/myPackage/company.xsdconfig",
                "previous_filename": "v2/test/src/extensions/company.xsdconfig",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/myPackage/company.xsdconfig",
                "sha": "90022894123c19341983f486bbafaa9dc9925980",
                "status": "renamed"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "patch": "@@ -0,0 +1,51 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<!--this is schema company.xsd stripped down and modified to have a value restriction on the employees age-->\n+\n+<xsd:schema \n+targetNamespace=\"prePostFeature/xbean/ValueRestriction/company\" \n+xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \n+xmlns:company=\"prePostFeature/xbean/ValueRestriction/company\">\n+\t<xsd:element name=\"company\" type=\"company:CompanyType\"/>\n+\t<xsd:complexType name=\"CompanyType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"departments\" type=\"company:DepartmentType\" maxOccurs=\"unbounded\"/>\n+\t\t</xsd:sequence>\n+\t\t\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t</xsd:complexType>\n+\t<xsd:element name=\"department\" type=\"company:DepartmentType\"/>\n+\t<xsd:complexType name=\"DepartmentType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"consultant\" type=\"company:ConsultantType\" maxOccurs=\"unbounded\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"ConsultantType\">\n+\t\t\n+\t\t<xsd:attribute name=\"name\" type=\"xsd:string\"/>\n+\t      <xsd:attribute name=\"age\" type=\"company:age\"/>\n+\t\t<xsd:anyAttribute namespace=\"http://www.omg.org/XMI\" processContents=\"lax\"/>\n+\t   \n+\t</xsd:complexType>\n+\n+\t\n+               <xsd:simpleType name=\"age\">\n+                  <xsd:restriction base=\"xsd:integer\">\n+                         <xsd:minInclusive value=\"0\"/>\n+                         <xsd:maxInclusive value=\"100\"/>\n+                  </xsd:restriction>\n+               </xsd:simpleType>\n+   \n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsd",
                "sha": "25e5608733b1c2685eea6bb3eae495599a3306b3",
                "status": "added"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "patch": "@@ -0,0 +1,26 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"*\">\n+        <xb:interface name=\"prePostFeature.ValueRestriction.existing.ISetter\">\n+            <xb:staticHandler>prePostFeature.ValueRestriction.existing.SetterHandler</xb:staticHandler>\n+        </xb:interface>  \n+       <xb:prePostSet> \n+            <xb:staticHandler>prePostFeature.ValueRestriction.existing.SetterHandler</xb:staticHandler> \n+      </xb:prePostSet> \n+   </xb:extension> \n+\n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/company.xsdconfig",
                "sha": "eb1c07df54ce7e3f5c8002b7a08c84ccadefcc8b",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "patch": "@@ -0,0 +1,24 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.ValueRestriction.existing;\n+\n+/**\n+ * User: ykadiysk\n+ * Date: May 5, 2004\n+ */\n+public interface ISetter\n+{\n+    public void setEmployeeAge(int age);\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/ISetter.java",
                "sha": "19d21fca5b8f7c9eeb5e8d8fa4890c54ed5151de",
                "status": "added"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "patch": "@@ -0,0 +1,52 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.ValueRestriction.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+import prePostFeature.xbean.valueRestriction.company.ConsultantType;\n+\n+import javax.xml.namespace.QName;\n+\n+\n+/**\n+ * @author ykadiysk\n+ */\n+public class SetterHandler\n+{\n+\n+    public static boolean bReady = false;\n+\n+    public static void setEmployeeAge(XmlObject xo, int age)\n+    {\n+        ((ConsultantType) xo).setAge(age);\n+    }\n+\n+    private static XmlObject origValue;\n+\n+    public static boolean preSet(int opType, XmlObject xo, QName prop, boolean isAttr, int index)\n+    {\n+        origValue = xo.copy();\n+        return true;\n+    }\n+\n+    public static void postSet(int opType, XmlObject xo, QName propertyName, boolean isAttr, int index)\n+    {\n+        if (!xo.validate() && (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET) && bReady)\n+            xo.set(origValue);\n+        xo.validate();\n+    }\n+\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/ValueRestriction/existing/SetterHandler.java",
                "sha": "cfbd6a3c865fefbf1f50046e61151c2b9f60ae8a",
                "status": "added"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "patch": "@@ -0,0 +1,53 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.readOnlyBean.existing;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderDocument;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.Items.Item;\n+\n+import javax.xml.namespace.QName;\n+import java.math.BigDecimal;\n+\n+public class FooHandler\n+{\n+    public static boolean preSet(int opType, XmlObject xo, QName prop, boolean isAttr, int index)\n+    {\n+        if (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET)\n+            return false;\n+        return true;\n+    }\n+\n+    public static void postSet(int opType, XmlObject xo, QName propertyName, boolean isAttr, int index)\n+    {\n+        if (opType == org.apache.xmlbeans.impl.config.PrePostExtension.OPERATION_SET)\n+            System.err.println(\"No setters are allowed for this bean:\" + \" value unchanged\" + propertyName);\n+    }\n+\n+    public static void setPrice(XmlObject xo, int price)\n+    {\n+        Item it = (Item) xo;\n+        BigDecimal o = new BigDecimal(price + \"\");\n+        it.setUSPrice(o);\n+    }\n+\n+    public static double getPrice(XmlObject xo)\n+    {\n+        Item it = (Item) xo;\n+        return it.getUSPrice().doubleValue();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/FooHandler.java",
                "sha": "81733b39a6a1289201749a1e3ea52443ba867d01",
                "status": "added"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "patch": "@@ -0,0 +1,27 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package prePostFeature.readOnlyBean.existing;\n+\n+/**\n+ * User: ykadiysk\n+ * Date: May 4, 2004\n+ */\n+public interface IFoo\n+{\n+    void setPrice(int price);\n+\n+    double getPrice();\n+}\n+",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/existing/IFoo.java",
                "sha": "0cc4e347542fb95e66cfd38930084056665fa237",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsd?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "patch": "@@ -0,0 +1,60 @@\n+<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+xmlns:po=\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\"\n+targetNamespace=\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\"\n+elementFormDefault=\"qualified\">\n+\t<xsd:annotation>\n+\t\t<xsd:documentation xml:lang=\"en\">\n+           Purchase order schema for Example.com.\n+           Copyright 2000 Example.com. All rights reserved.\n+        </xsd:documentation>\n+\t</xsd:annotation>\n+\t<xsd:element name=\"purchaseOrder\" type=\"po:PurchaseOrderType\"/>\n+\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n+\t<xsd:complexType name=\"PurchaseOrderType\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"shipTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element name=\"billTo\" type=\"po:USAddress\"/>\n+\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t<xsd:element name=\"items\" type=\"po:Items\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"orderDate\" type=\"xsd:date\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"USAddress\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"name\" type=\"xsd:string\" nillable=\"true\"/>\n+\t\t\t<xsd:element name=\"street\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"city\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"state\" type=\"xsd:string\"/>\n+\t\t\t<xsd:element name=\"zip\" type=\"xsd:decimal\"/>\n+\t\t</xsd:sequence>\n+\t\t<xsd:attribute name=\"country\" type=\"xsd:NMTOKEN\" fixed=\"US\"/>\n+\t</xsd:complexType>\n+\t<xsd:complexType name=\"Items\">\n+\t\t<xsd:sequence>\n+\t\t\t<xsd:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n+\t\t\t\t<xsd:complexType>\n+\t\t\t\t\t<xsd:sequence>\n+\t\t\t\t\t\t<xsd:element name=\"productName\" type=\"xsd:string\"/>\n+\t\t\t\t\t\t<xsd:element name=\"quantity\">\n+\t\t\t\t\t\t\t<xsd:simpleType>\n+\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:positiveInteger\">\n+\t\t\t\t\t\t\t\t\t<xsd:maxExclusive value=\"100\"/>\n+\t\t\t\t\t\t\t\t</xsd:restriction>\n+\t\t\t\t\t\t\t</xsd:simpleType>\n+\t\t\t\t\t\t</xsd:element>\n+\t\t\t\t\t\t<xsd:element name=\"USPrice\" type=\"xsd:decimal\" fixed=\"30\" />\n+\t\t\t\t\t\t<xsd:element ref=\"po:comment\" minOccurs=\"0\"/>\n+\t\t\t\t\t\t<xsd:element name=\"shipDate\" type=\"xsd:date\" minOccurs=\"0\"/>\n+\t\t\t\t\t</xsd:sequence>\n+\t\t\t\t\t<xsd:attribute name=\"partNum\" type=\"po:SKU\" use=\"required\"/>\n+\t\t\t\t</xsd:complexType>\n+\t\t\t</xsd:element>\n+\t\t</xsd:sequence>\n+\t</xsd:complexType>\n+\t<!-- Stock Keeping Unit, a code for identifying products -->\n+\t<xsd:simpleType name=\"SKU\">\n+\t\t<xsd:restriction base=\"xsd:string\">\n+\t\t\t<xsd:pattern value=\"\\d{3}-[A-Z]{2}\"/>\n+\t\t</xsd:restriction>\n+\t</xsd:simpleType>\n+</xsd:schema>",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsd",
                "sha": "189d6e56aacca7786ca0a54254c31606e23f04ef",
                "status": "added"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "patch": "@@ -0,0 +1,25 @@\n+<!-- Copyright 2004 The Apache Software Foundation\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License. -->\n+<xb:config xmlns:xb=\"http://xml.apache.org/xmlbeans/2004/02/xbean/config\">\n+\n+    <xb:extension for=\"*\">\n+        <xb:interface name=\"prePostFeature.readOnlyBean.existing.IFoo\">\n+            <xb:staticHandler>prePostFeature.readOnlyBean.existing.FooHandler</xb:staticHandler>\n+        </xb:interface>  \n+       <xb:prePostSet> \n+            <xb:staticHandler>prePostFeature.readOnlyBean.existing.FooHandler</xb:staticHandler> \n+      </xb:prePostSet> \n+   </xb:extension> \n+\n+</xb:config>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensions/prePostFeature/readOnlyBean/po.xsdconfig",
                "sha": "c764fcbca433095d4a006ad4a4397f95d3ceeef9",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/AverageCaseTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases;\n+\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.averageCase.purchaseOrder.Items;\n+\n+import junit.framework.*;\n+\n+import java.math.BigDecimal;\n+\n+\n+public class AverageCaseTest extends TestCase\n+{\n+    public AverageCaseTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(AverageCaseTest.class);\n+    }\n+\n+    public void test()\n+    {\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 2));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+        // System.out.println(\"poDoc: \" + poDoc);\n+\n+        int i = poDoc.getTotal();\n+//20 items @ $2\n+        assertEquals(40, i);\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/AverageCaseTest.java",
                "sha": "74089a7ca3e833fb528114cf2766e2ea231603cb",
                "status": "added"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "changes": 119,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/ExtensionsTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 106,
                "filename": "v2/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "patch": "@@ -17,124 +17,31 @@\n import junit.framework.TestCase;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n-import junit.framework.Assert;\n-import xsd.company.CompanyDocument;\n-import xsd.company.CompanyType;\n-import myPackage.Foo;\n-import myPackage.Bar;\n-import myPackage.FooHandler;\n-import myPackage.FooHandler.PreBookmark;\n-import myPackage.FooHandler.PostBookmark;\n-import org.apache.xmlbeans.XmlCursor;\n+import drtcases.prePostFeature.readOnlyBean.ReadOnlyTest;\n+import drtcases.prePostFeature.ValueRestriction.ValueRestrictionTest;\n \n /**\n  * Author: Cezar Andrei ( cezar.andrei at bea.com )\n  * Date: Mar 28, 2004\n  */\n public class ExtensionsTest extends TestCase\n {\n-    public ExtensionsTest(String name) { super(name); }\n-    public static Test suite() { return new TestSuite(ExtensionsTest.class); }\n-\n-    public void testInterfaces()\n+    public ExtensionsTest(String name)\n     {\n-\t\tString expected;\n-\t\tString actual;\n-\n-        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n-\n-        CompanyType co = cDoc.addNewCompany();\n-        co.setName2(\"xbean name\");\n-\n-        expected = \"xbean name\";\n-        actual = co.getName2();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        expected = \"{name in FooHandler}\";\n-        actual = co.getName();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        Foo foo = cDoc;\n-\n-        expected = \"{in FooHandler.handleFoo(s: param)}\";\n-        actual = foo.foo(\"param\");\n-        Assert.assertTrue(\"Expected: '\" + expected + \"'\\n  actual: '\" + actual +\"'\", expected.equals(actual));\n-\n-\n-        Bar bar = null;\n-\n-        try\n-        {\n-            bar = cDoc;\n-            byte[] ba = bar.bar(\"param for bar\");\n-\n-\t\t\texpected = \"{in BarHandler.handleBar(s: param for bar)}\";\n-\t\t\tactual = new String(bar.bar(\"param for bar\"));\n-\t\t\tAssert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-        }\n-        catch (Bar.MyException e)\n-        {\n-            Assert.assertTrue(false);\n-        }\n-\n-        try\n-        {\n-            bar.bar(null);\n-            Assert.assertTrue(false);\n-        }\n-        catch( Bar.MyException e)\n-        {\n-            Assert.assertTrue(true);\n-        }\n+        super(name);\n     }\n \n-    public void testPrePost()\n+    public static Test suite()\n     {\n-        String expected;\n-        String actual;\n-        XmlCursor xc;\n-\n-        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n-\n-        // add new\n-        CompanyType co = cDoc.addNewCompany();\n-\n-        xc = cDoc.newCursor();\n-        PreBookmark prebk = (PreBookmark)xc.getBookmark(PreBookmark.class);\n-\n-        expected = \"{preSet in FooHandler: 2, <xml-fragment></xml-fragment>, {company.xsd}company, false, -1}\";\n-        actual = prebk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-\n-\n-        PostBookmark postbk = (PostBookmark)xc.getBookmark(PostBookmark.class);\n-\n-        expected = \"{postSet in FooHandler: 2, \" + cDoc + \", {company.xsd}company, false, -1}\";\n-        actual = postbk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-        xc.dispose();\n-\n-\n-        // set\n-        co.setName2(\"xbean name\");\n-\n-        xc = co.newCursor();\n-        prebk = (PreBookmark)xc.getBookmark(PreBookmark.class);\n-\n-        expected = \"{preSet in FooHandler: 1, <xml-fragment/>, name, true, -1}\";\n-        actual = prebk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n-\n-\n-\n-        postbk = (PostBookmark)xc.getBookmark(PostBookmark.class);\n+        TestSuite suite = new TestSuite();\n \n-        expected = \"{postSet in FooHandler: 1, \" + co + \", name, true, -1}\";\n-        actual = postbk.getMsg();\n-        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+        suite.addTest(SimpleTest.suite());\n+        suite.addTest(AverageCaseTest.suite());\n+        suite.addTest(FixedAttrTest.suite());\n+        suite.addTest(MultInterfacesTest.suite());\n+        suite.addTest(ReadOnlyTest.suite());\n+        suite.addTest(ValueRestrictionTest.suite());\n \n-        xc.dispose();\n+        return suite;\n     }\n }",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/ExtensionsTest.java",
                "sha": "faade195e30d8a0c33695eb284a61a491503f47c",
                "status": "modified"
            },
            {
                "additions": 88,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "changes": 88,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/FixedAttrTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "patch": "@@ -0,0 +1,88 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases;\n+\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.fixedAttrBean.purchaseOrder.Items;\n+\n+\n+import java.math.BigDecimal;\n+\n+import junit.framework.*;\n+\n+public class FixedAttrTest extends TestCase\n+{\n+    public FixedAttrTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(FixedAttrTest.class);\n+    }\n+\n+    public void test()\n+    {\n+\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 4));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.interface_feature/fixedAttrBean/PurchaseOrder\\\">\");\n+\n+        sb.append(\"<pur:items>\");\n+\n+        StringBuffer sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            sbContent.append(\"<pur:item><pur:USPrice>4</pur:USPrice></pur:item>\");\n+\n+        int pos = sb.length();\n+        sb.append(\"</pur:items></pur:purchaseOrder>\");\n+\n+        String sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        try\n+        {\n+            poDoc.setPrice(10);\n+\n+        }\n+        catch (Exception t)\n+        {\n+            t.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+\n+\n+        assertTrue(!poDoc.validate());\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/FixedAttrTest.java",
                "sha": "5817cb7547dbe14dfef0a942ad69393f6d8e711c",
                "status": "added"
            },
            {
                "additions": 102,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "changes": 102,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/MultInterfacesTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "patch": "@@ -0,0 +1,102 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases;\n+\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderDocument;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.PurchaseOrderType;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items;\n+import interfaceFeature.xbean.multInterfaces.purchaseOrder.Items.Item;\n+\n+import java.math.BigDecimal;\n+\n+import org.apache.xmlbeans.XmlObject;\n+\n+import junit.framework.*;\n+\n+public class MultInterfacesTest extends TestCase\n+{\n+    public MultInterfacesTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(MultInterfacesTest.class);\n+    }\n+\n+    public void test()\n+    {\n+\n+\n+        PurchaseOrderDocument poDoc = null;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + i));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.interface_feature/multInterfaces/PurchaseOrder\\\">\");\n+\n+        sb.append(\"<pur:items>\");\n+\n+        StringBuffer sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            sbContent.append(\"<pur:item><pur:USPrice>\" + i + \"</pur:USPrice></pur:item>\");\n+\n+        int pos = sb.length();\n+        sb.append(\"</pur:items></pur:purchaseOrder>\");\n+\n+        String sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+\n+        assertEquals(0, poDoc.getMinPrice());\n+        int price = 10;\n+\n+        poDoc.setMinPrice((double) price);\n+\n+        sbContent = new StringBuffer();\n+        for (int i = 0; i < LEN; i++)\n+            if (i < price)\n+                sbContent.append(\"<pur:item><pur:USPrice>\" + price + \"</pur:USPrice></pur:item>\");\n+            else\n+                sbContent.append(\"<pur:item><pur:USPrice>\" + i + \"</pur:USPrice></pur:item>\");\n+        sExpected = sb.subSequence(0, pos) + sbContent.toString() + sb.subSequence(pos, sb.length());\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        assertEquals(price, poDoc.getMinPrice());\n+\n+        int expTotal = (price - 1) * price + (price + 1 + LEN) * (LEN - price) / 2;\n+        assertEquals(expTotal, poDoc.getTotal());\n+\n+        XmlObject item = poDoc.getCheapestItem();\n+\n+        Item expected = it[0];\n+        expected.setUSPrice(new BigDecimal(30d));\n+        //       assertEquals(expected, item );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/MultInterfacesTest.java",
                "sha": "86cbc3cd16e7d6fd146199d0f71c3fcb78e6efb9",
                "status": "added"
            },
            {
                "additions": 144,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/SimpleTest.java",
                "changes": 144,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/SimpleTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/SimpleTest.java",
                "patch": "@@ -0,0 +1,144 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases;\n+\n+import junit.framework.TestCase;\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+import junit.framework.Assert;\n+import xsd.company.CompanyDocument;\n+import xsd.company.CompanyType;\n+import myPackage.Foo;\n+import myPackage.Bar;\n+import myPackage.FooHandler.PreBookmark;\n+import myPackage.FooHandler.PostBookmark;\n+import org.apache.xmlbeans.XmlCursor;\n+\n+/**\n+ * Author: Cezar Andrei ( cezar.andrei at bea.com )\n+ * Date: Mar 28, 2004\n+ */\n+public class SimpleTest extends TestCase\n+{\n+    public SimpleTest(String name)\n+    {\n+        super(name);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(SimpleTest.class);\n+    }\n+\n+    public void testInterfaces()\n+    {\n+        String expected;\n+        String actual;\n+\n+        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n+\n+        CompanyType co = cDoc.addNewCompany();\n+        co.setName2(\"xbean name\");\n+\n+        expected = \"xbean name\";\n+        actual = co.getName2();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        expected = \"{name in FooHandler}\";\n+        actual = co.getName();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        Foo foo = cDoc;\n+\n+        expected = \"{in FooHandler.handleFoo(s: param)}\";\n+        actual = foo.foo(\"param\");\n+        Assert.assertTrue(\"Expected: '\" + expected + \"'\\n  actual: '\" + actual + \"'\", expected.equals(actual));\n+\n+\n+        Bar bar = null;\n+\n+        try\n+        {\n+            bar = cDoc;\n+            byte[] ba = bar.bar(\"param for bar\");\n+\n+            expected = \"{in BarHandler.handleBar(s: param for bar)}\";\n+            actual = new String(bar.bar(\"param for bar\"));\n+            Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+        }\n+        catch (Bar.MyException e)\n+        {\n+            Assert.assertTrue(false);\n+        }\n+\n+        try\n+        {\n+            bar.bar(null);\n+            Assert.assertTrue(false);\n+        }\n+        catch (Bar.MyException e)\n+        {\n+            Assert.assertTrue(true);\n+        }\n+    }\n+\n+    public void testPrePost()\n+    {\n+        String expected;\n+        String actual;\n+        XmlCursor xc;\n+\n+        CompanyDocument cDoc = CompanyDocument.Factory.newInstance();\n+\n+        // add new\n+        CompanyType co = cDoc.addNewCompany();\n+\n+        xc = cDoc.newCursor();\n+        PreBookmark prebk = (PreBookmark) xc.getBookmark(PreBookmark.class);\n+\n+        expected = \"{preSet in FooHandler: 2, <xml-fragment></xml-fragment>, {company.xsd}company, false, -1}\";\n+        actual = prebk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+\n+        PostBookmark postbk = (PostBookmark) xc.getBookmark(PostBookmark.class);\n+\n+        expected = \"{postSet in FooHandler: 2, \" + cDoc + \", {company.xsd}company, false, -1}\";\n+        actual = postbk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        xc.dispose();\n+\n+\n+        // set\n+        co.setName2(\"xbean name\");\n+\n+        xc = co.newCursor();\n+        prebk = (PreBookmark) xc.getBookmark(PreBookmark.class);\n+\n+        expected = \"{preSet in FooHandler: 1, <xml-fragment/>, name, true, -1}\";\n+        actual = prebk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+\n+        postbk = (PostBookmark) xc.getBookmark(PostBookmark.class);\n+\n+        expected = \"{postSet in FooHandler: 1, \" + co + \", name, true, -1}\";\n+        actual = postbk.getMsg();\n+        Assert.assertTrue(\"Expected: \" + expected + \"\\n  actual: \" + actual, expected.equals(actual));\n+\n+        xc.dispose();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/SimpleTest.java",
                "sha": "377259960a5fedec423fa7621effd4dbcaef32a6",
                "status": "added"
            },
            {
                "additions": 88,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "changes": 88,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "patch": "@@ -0,0 +1,88 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases.prePostFeature.ValueRestriction;\n+\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+import junit.framework.Test;\n+import prePostFeature.xbean.valueRestriction.company.*;\n+import org.apache.xmlbeans.XmlString;\n+\n+/**\n+ * Created by IntelliJ IDEA.\n+ * User: ykadiysk\n+ * Date: May 5, 2004\n+ * Time: 11:23:35 AM\n+ * To change this template use File | Settings | File Templates.\n+ */\n+public class ValueRestrictionTest extends TestCase\n+{\n+    public ValueRestrictionTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(ValueRestrictionTest.class);\n+    }\n+\n+    public void test() throws Exception\n+    {\n+        CompanyDocument poDoc;\n+\n+        poDoc = CompanyDocument.Factory.newInstance();\n+        CompanyType po = poDoc.addNewCompany();\n+\n+        int LEN = 20;\n+\n+        StringBuffer sExpected = new StringBuffer();\n+        sExpected.append(\"<com:company xmlns:com=\\\"prePostFeature/xbean/ValueRestriction/company\\\"><departments>\");\n+        DepartmentType dept = po.addNewDepartments();\n+        ConsultantType[] it = new ConsultantType[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = dept.addNewConsultant();\n+            XmlString s = XmlString.Factory.newInstance();\n+            it[i].setAge(50);\n+            sExpected.append(\"<consultant age=\\\"50\\\"/>\");\n+        }\n+\n+        sExpected.append(\"</departments></com:company>\");\n+\n+        assertEquals(sExpected.toString(), poDoc.xmlText());\n+        assertTrue(poDoc.validate());\n+\n+\n+        prePostFeature.ValueRestriction.existing.SetterHandler.bReady = true;\n+\n+\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i].setAge(150);\n+        }\n+\n+        assertEquals(sExpected.toString(), poDoc.xmlText());\n+        assertTrue(poDoc.validate());\n+\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i].setEmployeeAge(150);\n+        }\n+        assertTrue(sExpected.toString().equals(poDoc.xmlText()));\n+        assertTrue(poDoc.validate());\n+    }\n+}\n+",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/prePostFeature/ValueRestriction/ValueRestrictionTest.java",
                "sha": "5df82c73429317cf3a628e28257dcb878252dcbb",
                "status": "added"
            },
            {
                "additions": 69,
                "blob_url": "https://github.com/apache/xmlbeans/blob/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "changes": 69,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/v2/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java?ref=aede4e7190e524842c14013cd49a4e2a6fcb226f",
                "deletions": 0,
                "filename": "v2/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "patch": "@@ -0,0 +1,69 @@\n+/*   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package drtcases.prePostFeature.readOnlyBean;\n+\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderDocument;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.PurchaseOrderType;\n+import prePostFeature.xbean.readOnlyBean.purchaseOrder.Items;\n+\n+\n+import java.math.BigDecimal;\n+\n+import junit.framework.*;\n+import drtcases.FixedAttrTest;\n+\n+public class ReadOnlyTest extends TestCase\n+{\n+    public ReadOnlyTest(String s)\n+    {\n+        super(s);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(FixedAttrTest.class);\n+    }\n+\n+    public void test()\n+    {\n+        PurchaseOrderDocument poDoc;\n+\n+        poDoc = PurchaseOrderDocument.Factory.newInstance();\n+        PurchaseOrderType po = poDoc.addNewPurchaseOrder();\n+\n+\n+        int LEN = 20;\n+\n+        Items.Item[] it = new Items.Item[LEN];\n+        for (int i = 0; i < LEN; i++)\n+        {\n+            it[i] = Items.Item.Factory.newInstance();\n+            it[i].setUSPrice(new BigDecimal(\"\" + 4));\n+        }\n+        Items items = Items.Factory.newInstance();\n+        items.setItemArray(it);\n+        po.setItems(items);\n+\n+\n+        String sExpected = \"<pur:purchaseOrder xmlns:pur=\\\"http://xbean.prePost_feature/readOnlyBean/PurchaseOrder\\\"/>\";\n+\n+\n+        it[0].setPrice(10);\n+\n+        assertEquals(sExpected, poDoc.xmlText());\n+\n+        assertTrue(!poDoc.validate());\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlbeans/raw/aede4e7190e524842c14013cd49a4e2a6fcb226f/v2/test/src/extensionsuse/drtcases/prePostFeature/readOnlyBean/ReadOnlyTest.java",
                "sha": "d2a28dc4518ccecf17cb5df35799ea1307fff8bd",
                "status": "added"
            }
        ],
        "message": "- Added more tests for interface and pre/post extensions. Also, these tests are very good examples on how to use these features. Many thanks to Yana Kadiyska for contribuing these tests.\n\n- Fixed NPE in Validator.\n\nDRT: passes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlbeans/trunk@110745 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlbeans/commit/724ae80a9ca01ed3acffc1f69479e21ce1980f57",
        "patched_files": [
            "po.xsdconfig",
            "FooHandler.java",
            "company.xsdconfig",
            "IFoo.java",
            "build.xml",
            "ReportHandler.java",
            "ValidatingXMLStreamReader.java",
            "IReport.java",
            "ISum.java",
            "SetterHandler.java",
            "ISetter.java",
            "company.xsd",
            "po.xsd"
        ],
        "repo": "xmlbeans",
        "unit_tests": [
            "ValidatingXMLStreamReaderTests.java",
            "ExtensionsTest.java",
            "AverageCaseTest.java",
            "MultInterfacesTest.java",
            "ValueRestrictionTest.java",
            "FixedAttrTest.java",
            "SimpleTest.java",
            "ReadOnlyTest.java"
        ]
    },
    "xmlbeans_f30ec6f": {
        "bug_id": "xmlbeans_f30ec6f",
        "commit": "https://github.com/apache/xmlbeans/commit/f30ec6f0b36b1e42422a76a94e9d175c457e9f49",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlbeans/blob/f30ec6f0b36b1e42422a76a94e9d175c457e9f49/src/xmlcomp/org/apache/xmlbeans/impl/tool/SchemaCompiler.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlbeans/contents/src/xmlcomp/org/apache/xmlbeans/impl/tool/SchemaCompiler.java?ref=f30ec6f0b36b1e42422a76a94e9d175c457e9f49",
                "deletions": 0,
                "filename": "src/xmlcomp/org/apache/xmlbeans/impl/tool/SchemaCompiler.java",
                "patch": "@@ -748,6 +748,10 @@ private static SchemaTypeSystem loadTypeSystem(String name, File[] xsdFiles, Fil\n     {\n         XmlErrorWatcher errorListener = new XmlErrorWatcher(outerErrorListener);\n \n+        // construct the state (have to initialize early in case of errors)\n+        StscState state = StscState.start();\n+        state.setErrorListener(errorListener);\n+\n         // For parsing XSD and WSDL files, we should use the SchemaDocument\n         // classloader rather than the thread context classloader.  This is\n         // because in some situations (such as when being invoked by ant",
                "raw_url": "https://github.com/apache/xmlbeans/raw/f30ec6f0b36b1e42422a76a94e9d175c457e9f49/src/xmlcomp/org/apache/xmlbeans/impl/tool/SchemaCompiler.java",
                "sha": "3170563b7e1dbd08fbc1d9a5370511020065e2e8",
                "status": "modified"
            }
        ],
        "message": "Fix for XMLBEANS-133 and XMLBEANS-185. If an error was found with any xsdconfig files StscState.get() could be called before StscState.start() which resulted in an NPE.\n\nContributed by Lawrence Jones\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlbeans/trunk@227480 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlbeans/commit/6cd825d4ee2989bc5eb68ee92053c3649f35e2b6",
        "patched_files": [
            "SchemaCompiler.java"
        ],
        "repo": "xmlbeans",
        "unit_tests": [
            "SchemaCompilerTests.java"
        ]
    }
}