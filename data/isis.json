{
    "isis_0be6486": {
        "bug_id": "isis_0be6486",
        "commit": "https://github.com/apache/isis/commit/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/isis/blob/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java?ref=0be6486e8e853cf85f0f4acf3fbbdffbdd85b273",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "patch": "@@ -117,7 +117,8 @@ public final Recognition recognize2(final Throwable ex) {\n     private void injectServicesIfNecessary() {\n         if(!injected) {\n             for (final ExceptionRecognizer ers : exceptionRecognizers) {\n-                container.injectServicesInto(ers);\n+                if (container != null)\n+                    container.injectServicesInto(ers);\n             }\n             injected = true;\n         }",
                "raw_url": "https://github.com/apache/isis/raw/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "sha": "9232744f1c8a4605da839fb79de7660192578774",
                "status": "modified"
            }
        ],
        "message": "ISIS-1108: adding NPE guard to allow for the usage of ExceptionRecognizerComposite whereby it is simply instantiated and used as a wrapper around other instances of ExceptionRecognizer that have already been injected into.\n\nThis is done in several places in the Wicket viewer: EntityPropertiesForm, ActionPanel, WebRequestCycleForIsis",
        "parent": "https://github.com/apache/isis/commit/e9d63719a3ed8c1b4ca0bc63993b29ea65be94f2",
        "repo": "isis",
        "unit_tests": [
            "ExceptionRecognizerCompositeTest.java"
        ]
    },
    "isis_51f9408": {
        "bug_id": "isis_51f9408",
        "commit": "https://github.com/apache/isis/commit/51f9408a54f79df5986631106ce89d0c203eed0c",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/isis/blob/51f9408a54f79df5986631106ce89d0c203eed0c/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java?ref=51f9408a54f79df5986631106ce89d0c203eed0c",
                "deletions": 0,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java",
                "patch": "@@ -25,6 +25,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n+import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import java.util.stream.Stream;\n@@ -471,7 +473,9 @@ private ObjectAdapter executeAction() {\n                 final Object routeTo = routingService.route(result);\n                 return routeTo != null? getPersistenceSession().adapterFor(routeTo): null;\n             })\n+            .map(Optional::ofNullable)\n             .findFirst()\n+            .flatMap(Function.identity())\n             .orElse(resultAdapter);\n         \n     }",
                "raw_url": "https://github.com/apache/isis/raw/51f9408a54f79df5986631106ce89d0c203eed0c/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java",
                "sha": "5109b8cb66c8763eb62cc91a2f37788b83afdd07",
                "status": "modified"
            }
        ],
        "message": "ISIS-2066: fixes NPE occurring when invoke an action that returns null\n\nfix as per the idiom described here: https://stackoverflow.com/a/32476601/56880",
        "parent": "https://github.com/apache/isis/commit/4cd48b5b943f94aa3ce8a1fb19f0d693db4f9737",
        "repo": "isis",
        "unit_tests": [
            "ActionModelTest.java"
        ]
    },
    "isis_d3b8dec": {
        "bug_id": "isis_d3b8dec",
        "commit": "https://github.com/apache/isis/commit/d3b8deccb8cab77c6a358c56386dfa00544ee938",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/isis/blob/d3b8deccb8cab77c6a358c56386dfa00544ee938/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java?ref=d3b8deccb8cab77c6a358c56386dfa00544ee938",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "patch": "@@ -117,7 +117,8 @@ public final Recognition recognize2(final Throwable ex) {\n     private void injectServicesIfNecessary() {\n         if(!injected) {\n             for (final ExceptionRecognizer ers : exceptionRecognizers) {\n-                container.injectServicesInto(ers);\n+                if (container != null)\n+                    container.injectServicesInto(ers);\n             }\n             injected = true;\n         }",
                "raw_url": "https://github.com/apache/isis/raw/d3b8deccb8cab77c6a358c56386dfa00544ee938/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "sha": "9232744f1c8a4605da839fb79de7660192578774",
                "status": "modified"
            }
        ],
        "message": "ExceptionRecognizerComposite: NPE if container is null\n\nI have implemented ApplicationTenancy.\r\nWhen directly introducing the URL of an entity whose access is forbidden for me (i.e., http://localhost:8080/entity/KIT_:L_2) throws a NullPointerException.\r\nPerhaps the root cause is different.\r\nBut simply by evaluating if is null, it properly shows the error message (\"Not authorized or no such object\") instead of a HTTP 500 with a NullPointerException in the log.",
        "parent": "https://github.com/apache/isis/commit/dd1754e4facc65d9c0bf6a105d008662e0e79d7e",
        "repo": "isis",
        "unit_tests": [
            "ExceptionRecognizerCompositeTest.java"
        ]
    }
}