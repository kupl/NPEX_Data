{
    "commons-net_4637434": {
        "bug_id": "commons-net_4637434",
        "commit": "https://github.com/apache/commons-net/commit/4637434691d853d013daac0af1374cfcda3de031",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-net/blob/4637434691d853d013daac0af1374cfcda3de031/src/changes/changes.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/changes/changes.xml?ref=4637434691d853d013daac0af1374cfcda3de031",
                "deletions": 0,
                "filename": "src/changes/changes.xml",
                "patch": "@@ -57,6 +57,9 @@ The <action> type attribute can be add,update,fix,remove.\n \n     <body>\n         <release version=\"3.0\" date=\"TBA\" description=\"TBA\">\n+            <action issue=\"NET-185\" dev=\"sebb\" type=\"fix\">\n+            Possible NPE in Threader.java\n+            </action>\n             <action issue=\"NET-364\" dev=\"sebb\" type=\"fix\">\n             nntp.Article is very inefficient and incorrect.\n             </action>",
                "raw_url": "https://github.com/apache/commons-net/raw/4637434691d853d013daac0af1374cfcda3de031/src/changes/changes.xml",
                "sha": "6e120890df61bfcc378d7f211b89482c775a7009",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/commons-net/blob/4637434691d853d013daac0af1374cfcda3de031/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/main/java/org/apache/commons/net/nntp/Threader.java?ref=4637434691d853d013daac0af1374cfcda3de031",
                "deletions": 3,
                "filename": "src/main/java/org/apache/commons/net/nntp/Threader.java",
                "patch": "@@ -27,7 +27,6 @@\n  *\n  */\n \n-import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -355,9 +354,11 @@ private void gatherSubjects() {\n                 ThreadContainer tail;\n                 for (tail = old.child;\n                     tail != null && tail.next != null;\n-                    tail = tail.next);\n+                    tail = tail.next){}\n \n-                tail.next = c.child;\n+                if (tail != null) { // protect against possible NPE\n+                    tail.next = c.child;\n+                }\n \n                 for (tail = c.child; tail != null; tail = tail.next)\n                     tail.parent = old;",
                "raw_url": "https://github.com/apache/commons-net/raw/4637434691d853d013daac0af1374cfcda3de031/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "sha": "c991aa28cc211122ed3badd073c77b73dce53578",
                "status": "modified"
            }
        ],
        "message": "NET-185 Possible NPE in Threader.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1079601 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-net/commit/c71eb0cb6c0bca9f6bec144505f78c8f1e639013",
        "repo": "commons-net",
        "unit_tests": [
            "TestThreader.java"
        ]
    },
    "commons-net_98d829e": {
        "bug_id": "commons-net_98d829e",
        "commit": "https://github.com/apache/commons-net/commit/98d829eb6af5449ac27b66382952de37602ebe4e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-net/blob/98d829eb6af5449ac27b66382952de37602ebe4e/src/changes/changes.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/changes/changes.xml?ref=98d829eb6af5449ac27b66382952de37602ebe4e",
                "deletions": 0,
                "filename": "src/changes/changes.xml",
                "patch": "@@ -74,6 +74,9 @@ This is mainly a bug-fix release. See further details below.\n  The examples are not part of the public API, so this does not affect compatibility.\n \n \">\n+            <action issue=\"NET-643\" type=\"fix\" dev=\"sebb\" due-to=\"Vasily\">\n+            NPE when closing telnet stream\n+            </action>\n             <action issue=\"NET-648\" type=\"add\" dev=\"pschumacher\">\n             Add Automatic-Module-Name MANIFEST entry for Java 9 compatibility\n             </action>",
                "raw_url": "https://github.com/apache/commons-net/raw/98d829eb6af5449ac27b66382952de37602ebe4e/src/changes/changes.xml",
                "sha": "bbaf6c2ad7ad09832a66bd37f4b3a1d7536b73f8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/commons-net/blob/98d829eb6af5449ac27b66382952de37602ebe4e/src/main/java/org/apache/commons/net/telnet/TelnetClient.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/main/java/org/apache/commons/net/telnet/TelnetClient.java?ref=98d829eb6af5449ac27b66382952de37602ebe4e",
                "deletions": 0,
                "filename": "src/main/java/org/apache/commons/net/telnet/TelnetClient.java",
                "patch": "@@ -100,10 +100,16 @@ public TelnetClient(String termtype, int maxSubnegotiationLength)\n \n     void _flushOutputStream() throws IOException\n     {\n+        if (_output_ == null) {\n+            throw new IOException(\"Stream closed\");\n+        }\n         _output_.flush();\n     }\n     void _closeOutputStream() throws IOException\n     {\n+        if (_output_ == null) {\n+            return;\n+        }\n         try {\n             _output_.close();\n         } finally {",
                "raw_url": "https://github.com/apache/commons-net/raw/98d829eb6af5449ac27b66382952de37602ebe4e/src/main/java/org/apache/commons/net/telnet/TelnetClient.java",
                "sha": "d113276831c0af3f0b7b6e362a32a472ad993480",
                "status": "modified"
            }
        ],
        "message": "NET-643 NPE when closing telnet stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1823550 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-net/commit/f6c513acaf04dbf3acc69f96053897b0c90dc746",
        "repo": "commons-net",
        "unit_tests": [
            "TelnetClientTest.java"
        ]
    },
    "commons-net_b26a3b4": {
        "bug_id": "commons-net_b26a3b4",
        "commit": "https://github.com/apache/commons-net/commit/b26a3b41b047cdcc37aa65625075fa621d13f66e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/changes/changes.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/changes/changes.xml?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "deletions": 0,
                "filename": "src/changes/changes.xml",
                "patch": "@@ -68,6 +68,9 @@ This is mainly a bug-fix release. See further details below.\n   IMAPExportMbox (example app) allows IMAP folders to be exported into an mbox file.\n   This is the inverse of the IMAPImportMbox example added previously\n         \">\n+            <action issue=\"NET-539\" type=\"fix\" dev=\"sebb\">\n+            NPE if Threader.thread invoked with empty list or with null array\n+            </action>\n             <action issue=\"NET-536\" type=\"add\" dev=\"sebb\">\n             IMAP FETCH example\n             IMAPExportMbox can export selected nessages from an IMAP folder",
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/changes/changes.xml",
                "sha": "8f95baec9706c4bc4cc54274c447b180965f88e5",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/main/java/org/apache/commons/net/nntp/Threader.java?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "deletions": 7,
                "filename": "src/main/java/org/apache/commons/net/nntp/Threader.java",
                "patch": "@@ -27,6 +27,7 @@\n  *\n  */\n \n+import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -36,8 +37,8 @@\n     /**\n      * The client passes in a list of Threadable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages list of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages list of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages list is empty\n      * @since 2.2\n      */\n     public Threadable thread(List<? extends Threadable> messages) {\n@@ -47,8 +48,8 @@ public Threadable thread(List<? extends Threadable> messages) {\n     /**\n      * The client passes in a list of Iterable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages iterable of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages iterable of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages list is empty\n      * @since 3.0\n      */\n     public Threadable thread(Iterable<? extends Threadable> messages) {\n@@ -65,6 +66,10 @@ public Threadable thread(Iterable<? extends Threadable> messages) {\n             }\n         }\n \n+        if (idTable.isEmpty()) {\n+            return null;\n+        }\n+\n         ThreadContainer root = findRootSet(idTable);\n         idTable.clear();\n         idTable = null;\n@@ -446,13 +451,16 @@ private void gatherSubjects(ThreadContainer root) {\n     /**\n      * The client passes in an array of Threadable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages array of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages array of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages array is empty\n      * @deprecated (2.2) prefer {@link #thread(List)}\n      */\n     @Deprecated\n     public Threadable thread(Threadable[] messages) {\n-        return thread(java.util.Arrays.asList(messages));\n+        if (messages == null) {\n+            return null;\n+        }\n+        return thread(Arrays.asList(messages));\n     }\n \n }",
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "sha": "bf9345177aa147db8db6543ea912ec4ecac872bd",
                "status": "modified"
            },
            {
                "additions": 77,
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/test/java/org/apache/commons/net/nntp/TestThreader.java?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "deletions": 0,
                "filename": "src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.net.nntp;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test the Threader\n+ */\n+public class TestThreader {\n+    \n+    @Test\n+    @SuppressWarnings(\"deprecation\") // test of deprecated method\n+    public void testNullArray() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @Test\n+    public void testNullList() {\n+        Threader t = new Threader();\n+        List<Threadable> messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @Test\n+    public void testNullIterable() {\n+        Threader t = new Threader();\n+        Iterable<Threadable> messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @SuppressWarnings(\"deprecation\") // test of deprecated method\n+    @Test\n+    public void testEmptyArray() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        Assert.assertNull(t.thread(messages));\n+    }\n+\n+    @Test\n+    public void testEmptyList() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        final List<Threadable> asList = Arrays.asList(messages);\n+        Assert.assertNull(t.thread(asList));\n+    }\n+\n+    @Test\n+    public void testEmptyIterable() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        final Iterable<Threadable> asList = Arrays.asList(messages);\n+        Assert.assertNull(t.thread(asList));\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "sha": "f18030b70a93ee4f48f1a4f31f15b8d0fba25556",
                "status": "added"
            }
        ],
        "message": "NET-539 NPE if Threader.thread invoked with empty list or with null array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1587651 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-net/commit/061d70dd783a9150601fc884cc93831d39efd751",
        "repo": "commons-net",
        "unit_tests": [
            "TestThreader.java"
        ]
    },
    "commons-net_cc94b27": {
        "bug_id": "commons-net_cc94b27",
        "commit": "https://github.com/apache/commons-net/commit/cc94b271b7dbc9f4512e8d6e578914f4d36cf66e",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/commons-net/blob/cc94b271b7dbc9f4512e8d6e578914f4d36cf66e/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java?ref=cc94b271b7dbc9f4512e8d6e578914f4d36cf66e",
                "deletions": 7,
                "filename": "src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java",
                "patch": "@@ -86,7 +86,13 @@ public FTPFileEntryParser createFileEntryParser(String key)\n         try\n         {\n             parserClass = Class.forName(key);\n-            parser = (FTPFileEntryParser) parserClass.newInstance();\n+            try {\n+                parser = (FTPFileEntryParser) parserClass.newInstance();\n+            } catch (ClassCastException e) {\n+                throw new ParserInitializationException(parserClass.getName()\n+                    + \" does not implement the interface \"\n+                    + \"org.apache.commons.net.ftp.FTPFileEntryParser.\", e);\n+            }\n         }\n         catch (ClassNotFoundException e)\n         {\n@@ -142,12 +148,6 @@ else if (ukey.indexOf(FTPClientConfig.SYST_L8) >= 0)\n         {\n             throw new ParserInitializationException(\"Error initializing parser\", e);\n         }\n-        catch (ClassCastException e)\n-        {\n-            throw new ParserInitializationException(parserClass.getName()\n-                + \" does not implement the interface \"\n-                + \"org.apache.commons.net.ftp.FTPFileEntryParser.\", e);\n-        }\n         catch (Throwable e)\n         {\n             throw new ParserInitializationException(\"Error initializing parser\", e);",
                "raw_url": "https://github.com/apache/commons-net/raw/cc94b271b7dbc9f4512e8d6e578914f4d36cf66e/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java",
                "sha": "8e0ef7333617f5a0d10532fe2dbeb9b748d515ec",
                "status": "modified"
            }
        ],
        "message": "Avoid possible NPE warning by only catching CCE where it can occur\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1022904 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-net/commit/c4786e75f22050e5716072b2ce53463c87a076d0",
        "repo": "commons-net",
        "unit_tests": [
            "DefaultFTPFileEntryParserFactoryTest.java"
        ]
    }
}