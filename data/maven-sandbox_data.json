[
    {
        "repo": "maven-sandbox",
        "message": "basedir has to be set, throw early NPE if not.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@570090 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/43e51f2d150fbe52dfe2f7f592ad87e7a0b5567e",
        "parent": "https://github.com/apache/maven-sandbox/commit/6b7d1f1aceb1a58d97e295d4356d058b362414dc",
        "bug_id": "maven-sandbox_1",
        "file": [
            {
                "sha": "78b4fcb3ed4d54003576371a6b2e233d98d84cab",
                "filename": "doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/43e51f2d150fbe52dfe2f7f592ad87e7a0b5567e/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/43e51f2d150fbe52dfe2f7f592ad87e7a0b5567e/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java?ref=43e51f2d150fbe52dfe2f7f592ad87e7a0b5567e",
                "patch": "@@ -364,6 +364,13 @@ private void findAllFiles( List allFiles, File base )\n      */\n     public void doExecute()\n     {\n+        if ( this.basedir == null )\n+        {\n+            LOG.error( \"No base directory specified!\" );\n+\n+            throw new NullPointerException( \"basedir can't be null!\" );\n+        }\n+\n         if ( this.output == null )\n         {\n             LOG.warn( \"No output file specified! Results will not be written!\" );",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-sandbox",
        "message": "Fix NPE that could happen\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@547050 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/9c327c406c50f5442eb79425b885b6197b75de04",
        "parent": "https://github.com/apache/maven-sandbox/commit/b69010964d53e92b049fdb04624b301d2a580e67",
        "bug_id": "maven-sandbox_2",
        "file": [
            {
                "sha": "6b0402d7db704bf893c0be5125e319054d56ea74",
                "filename": "shared/maven-osgi/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/9c327c406c50f5442eb79425b885b6197b75de04/shared/maven-osgi/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/9c327c406c50f5442eb79425b885b6197b75de04/shared/maven-osgi/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/shared/maven-osgi/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java?ref=9c327c406c50f5442eb79425b885b6197b75de04",
                "patch": "@@ -150,7 +150,10 @@ private String getGroupIdFromPackage( File artifactFile )\n                 {\n                     File f = new File( entry.getName() );\n                     String packageName = f.getParent();\n-                    packageNames.add( packageName );\n+                    if ( packageName != null )\n+                    {\n+                        packageNames.add( packageName );\n+                    }\n                 }\n             }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-sandbox",
        "message": "o make the difference between single and multi lines comments\no prevent a NPE in Pass1#writeHTMLTag()\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@588801 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/b100b6b9ce97996a063d0541dd192f2641e4eba3",
        "parent": "https://github.com/apache/maven-sandbox/commit/edb6179a37dbc1fda0f328c84a5fc8283af187d8",
        "bug_id": "maven-sandbox_3",
        "file": [
            {
                "sha": "7bfa9096b8eb5adefe31b3535c343b13558a07d5",
                "filename": "jxr/maven-jxr/maven-jxr-java/src/main/antlr/javaG.g",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/antlr/javaG.g",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/antlr/javaG.g",
                "status": "modified",
                "changes": 23,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/jxr/maven-jxr/maven-jxr-java/src/main/antlr/javaG.g?ref=b100b6b9ce97996a063d0541dd192f2641e4eba3",
                "patch": "@@ -1604,11 +1604,24 @@ options {\n      * @param line\n      * @param column\n      * @param text\n-     * @see SymbolTable#defineComment(int, int, String)\n+     * @see SymbolTable#defineMultiLinesComment(int, int, String)\n      */\n-    public void defineComment( int line, int column, String text )\n+    public void defineMultiLinesComment( int line, int column, String text )\n     {\n-        symbolTable.defineComment(line, column, text);\n+        symbolTable.defineMultiLinesComment(line, column, text);\n+    }\n+\n+    /**\n+     * <code>SymbolTable</code> adapter method.\n+     *\n+     * @param line\n+     * @param column\n+     * @param text\n+     * @see SymbolTable#defineSingleLineComment(int, int, String)\n+     */\n+    public void defineSingleLineComment( int line, int column, String text )\n+    {\n+        symbolTable.defineSingleLineComment(line, column, text);\n     }\n \n     /**\n@@ -1710,7 +1723,7 @@ WS  :  (  ' '\n SL_COMMENT\n   :  { clStart=getLine(); ccStart=getColumn(); } \"//\"\n     (~('\\n'|'\\r'))*\n-    {defineComment(clStart,ccStart, getText());}\n+    {defineSingleLineComment(clStart,ccStart, getText());}\n     ('\\n'|'\\r'('\\n')?)\n     {$setType(Token.SKIP); newline();}\n   ;\n@@ -1736,7 +1749,7 @@ ML_COMMENT\n     |  ~('*'|'\\n'|'\\r')\n     )*\n     \"*/\"\n-    {defineComment(clStart,ccStart,getText());}\n+    {defineMultiLinesComment(clStart,ccStart,getText());}\n     {$setType(Token.SKIP);}\n   ;\n ",
                "deletions": 5
            },
            {
                "sha": "c4bf6aa431920383fa49acd29d86681feacc27df",
                "filename": "jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/html/Pass1.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/html/Pass1.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/html/Pass1.java",
                "status": "modified",
                "changes": 69,
                "additions": 60,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/html/Pass1.java?ref=b100b6b9ce97996a063d0541dd192f2641e4eba3",
                "patch": "@@ -166,7 +166,8 @@ public void run()\n                     // Generate the HTML tags for all references in this file\n                     // I.e. generate HTML mark-up of this .java file\n                     SymbolTable.createReferenceTags( f, tempFileTags );\n-                    SymbolTable.getCommentTags( f, tempFileTags );\n+                    SymbolTable.getMultiLinesCommentTags( f, tempFileTags );\n+                    SymbolTable.getSingleLineCommentTags( f, tempFileTags );\n                     SymbolTable.getLiteralTags( f, tempFileTags );\n                     SymbolTable.getKeywordTags( f, tempFileTags );\n                     createClassFiles( tempFileTags );\n@@ -257,8 +258,8 @@ private HTMLOutputWriter createClassFile( Object[] tagList, int element )\n \n         HTMLOutputWriter output = new LineOutputWriter( new BufferedOutputStream( new FileOutputStream( f ) ) );\n         String backup = getBackupPath( tagList, element );\n-        String encoding = ( StringUtils.isNotEmpty( getOptions().getDocencoding() ) ? getOptions()\n-            .getDocencoding() : DEFAULT_DOCENCODING );\n+        String encoding = ( StringUtils.isNotEmpty( getOptions().getDocencoding() ) ? getOptions().getDocencoding()\n+                                                                                   : DEFAULT_DOCENCODING );\n \n         String header = \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\n\"\n             + \"<HTML>\\n\"\n@@ -405,9 +406,13 @@ private void writeHTMLTag( HTMLTag t, LineNumberReader input, HTMLOutputWriter o\n         }\n \n         // Check for comment\n-        if ( t.isComment() )\n+        if ( t.isMultiLinesComment() )\n         {\n-            writeComment( t, input, output );\n+            writeMultiLinesComment( t, input, output );\n+        }\n+        if ( t.isSingleLineComment() )\n+        {\n+            writeSingleLineComment( t, input, output );\n         }\n         else if ( t.isLiteral() )\n         {\n@@ -420,7 +425,10 @@ else if ( t.isKeyword() )\n         else\n         {\n             // Write HTML tag\n-            output.write( t.getText() );\n+            if ( t.getText() != null )\n+            {\n+                output.write( t.getText() );\n+            }\n \n             if ( log.isDebugEnabled() )\n             {\n@@ -469,13 +477,56 @@ else if ( t.isKeyword() )\n      * @param output\n      * @throws IOException\n      */\n-    private void writeComment( HTMLTag t, LineNumberReader input, HTMLOutputWriter output )\n+    private void writeMultiLinesComment( HTMLTag t, LineNumberReader input, HTMLOutputWriter output )\n+        throws IOException\n+    {\n+        int length = t.getLength();\n+        int i = 0;\n+\n+        output.write( \"<SPAN CLASS=\\\"multiLinesComment\\\">\" );\n+\n+        while ( i < length )\n+        {\n+            if ( currentChar == '\\n' )\n+            {\n+                output.write( \"</SPAN>\" );\n+            }\n+            output.writeHTML( (char) currentChar );\n+\n+            if ( currentChar == '\\n' )\n+            {\n+                output.write( \"<SPAN CLASS=\\\"multiLinesComment\\\">\" );\n+                currentColumn = 0;\n+            }\n+\n+            currentChar = input.read();\n+            currentColumn++;\n+            i++;\n+        }\n+\n+        output.write( \"</SPAN>\" );\n+\n+        if ( currentChar == '\\n' )\n+        {\n+            currentColumn = 0;\n+        }\n+    }\n+\n+    /**\n+     * Method writeSingleComment\n+     *\n+     * @param t\n+     * @param input\n+     * @param output\n+     * @throws IOException\n+     */\n+    private void writeSingleLineComment( HTMLTag t, LineNumberReader input, HTMLOutputWriter output )\n         throws IOException\n     {\n         int length = t.getLength();\n         int i = 0;\n \n-        output.write( \"<SPAN CLASS=\\\"comment\\\">\" );\n+        output.write( \"<SPAN CLASS=\\\"singleLineComment\\\">\" );\n \n         while ( i < length )\n         {\n@@ -487,7 +538,7 @@ private void writeComment( HTMLTag t, LineNumberReader input, HTMLOutputWriter o\n \n             if ( currentChar == '\\n' )\n             {\n-                output.write( \"<SPAN CLASS=\\\"comment\\\">\" );\n+                output.write( \"<SPAN CLASS=\\\"singleLineComment\\\">\" );\n                 currentColumn = 0;\n             }\n ",
                "deletions": 9
            },
            {
                "sha": "b2a2e06cab86537ebabf19dcf3aedb4e7176c117",
                "filename": "jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/HTMLTag.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/HTMLTag.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/HTMLTag.java",
                "status": "modified",
                "changes": 45,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/HTMLTag.java?ref=b100b6b9ce97996a063d0541dd192f2641e4eba3",
                "patch": "@@ -32,7 +32,6 @@\n public class HTMLTag\n     implements JSComparable\n {\n-\n     // ==========================================================================\n     // ==  Class Variables\n     // ==========================================================================\n@@ -60,12 +59,14 @@\n \n     public static int TYPE_NONE = 0;\n \n-    public static int TYPE_COMMENT = 1;\n+    public static int TYPE_MULTI_LINES_COMMENT = 1;\n \n     public static int TYPE_LITERAL = 2;\n \n     public static int TYPE_KEYWORD = 3;\n \n+    public static int TYPE_SINGLE_LINE_COMMENT = 4;\n+\n     private int type = TYPE_NONE;\n \n     /** Field numBreaks */\n@@ -149,13 +150,23 @@ public int getLength()\n     }\n \n     /**\n-     * Method isComment\n+     * Method isMultiLinesComment\n+     *\n+     * @return\n+     */\n+    public boolean isMultiLinesComment()\n+    {\n+        return ( type == TYPE_MULTI_LINES_COMMENT );\n+    }\n+\n+    /**\n+     * Method isSingleLineComment()\n      *\n      * @return\n      */\n-    public boolean isComment()\n+    public boolean isSingleLineComment()\n     {\n-        return ( type == TYPE_COMMENT );\n+        return ( type == TYPE_SINGLE_LINE_COMMENT );\n     }\n \n     /**\n@@ -207,7 +218,6 @@ public int getOrigLength()\n      */\n     HTMLTag( Occurrence o, String origText, String replaceText )\n     {\n-\n         this.file = o.getFile();\n         this.line = o.getLine();\n         this.startColumn = o.getColumn();\n@@ -238,7 +248,6 @@ public int getOrigLength()\n      */\n     HTMLTag( File f, int l, int c, String packageName, String origText, String replaceText )\n     {\n-\n         this.file = f;\n         this.line = l;\n         this.startColumn = c;\n@@ -257,26 +266,6 @@ public int getOrigLength()\n         this.origLength = origText.length();\n     }\n \n-    /**\n-     * Constructor for comment.  Doesn't store text\n-     *\n-     * @param f\n-     * @param l\n-     * @param c\n-     * @param packageName\n-     * @param length\n-     */\n-    HTMLTag( File f, int l, int c, String packageName, int length )\n-    {\n-\n-        this.file = f;\n-        this.line = l;\n-        this.startColumn = c;\n-        this.length = length;\n-        this.packageName = packageName;\n-        this.type = TYPE_COMMENT;\n-    }\n-\n     /**\n      * Constructor for comment.  Doesn't store text\n      *\n@@ -288,7 +277,6 @@ public int getOrigLength()\n      */\n     HTMLTag( File f, int l, int c, String packageName, int length, int type )\n     {\n-\n         this.file = f;\n         this.line = l;\n         this.startColumn = c;\n@@ -310,7 +298,6 @@ public String toString()\n      */\n     public int compareTo( Object o )\n     {\n-\n         HTMLTag t = (HTMLTag) o;\n \n         if ( getLine() < t.getLine() )",
                "deletions": 29
            },
            {
                "sha": "310f1de9eb89f41941dbc15da61c43e5d9f5d50b",
                "filename": "jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/SymbolTable.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/SymbolTable.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/SymbolTable.java",
                "status": "modified",
                "changes": 125,
                "additions": 53,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/jxr/maven-jxr/maven-jxr-java/src/main/java/org/apache/maven/jxr/java/src/symtab/SymbolTable.java?ref=b100b6b9ce97996a063d0541dd192f2641e4eba3",
                "patch": "@@ -103,8 +103,11 @@\n     /** Hashtable holds Vectors mapping symbol references to files */\n     private static Hashtable _fileReferences = new Hashtable();\n \n-    /** Hashtable holds Vectors mapping comments to files */\n-    private static Hashtable _fileComments = new Hashtable();\n+    /** Hashtable holds Vectors mapping multi lines comments to files */\n+    private static Hashtable _fileMultiLinesComments = new Hashtable();\n+\n+    /** Hashtable holds Vectors mapping single line comments to files */\n+    private static Hashtable _fileSingleLineComments = new Hashtable();\n \n     /** Hashtable holds Vectors mapping literals to files */\n     private static Hashtable _fileLiterals = new Hashtable();\n@@ -134,7 +137,6 @@ public Hashtable getPackages()\n      */\n     public static void createReferenceTags( File f, Vector tagList )\n     {\n-\n         Vector v = (Vector) _fileReferences.get( f );\n \n         if ( v != null )\n@@ -161,7 +163,6 @@ public static void createReferenceTags( File f, Vector tagList )\n      */\n     public static void addFileReference( Occurrence occ )\n     {\n-\n         File f = occ.getFile();\n         Vector v = (Vector) _fileReferences.get( f );\n \n@@ -176,15 +177,30 @@ public static void addFileReference( Occurrence occ )\n     }\n \n     /**\n-     * Method getCommentTags\n+     * Method getMultiLinesCommentTags\n      *\n      * @param f\n      * @param tagList\n      */\n-    public static void getCommentTags( File f, Vector tagList )\n+    public static void getMultiLinesCommentTags( File f, Vector tagList )\n     {\n+        Vector commentList = (Vector) _fileMultiLinesComments.get( f );\n \n-        Vector commentList = (Vector) _fileComments.get( f );\n+        if ( commentList != null )\n+        {\n+            tagList.addAll( commentList );\n+        }\n+    }\n+\n+    /**\n+     * Method getSingleLineCommentTags\n+     *\n+     * @param f\n+     * @param tagList\n+     */\n+    public static void getSingleLineCommentTags( File f, Vector tagList )\n+    {\n+        Vector commentList = (Vector) _fileSingleLineComments.get( f );\n \n         if ( commentList != null )\n         {\n@@ -200,7 +216,6 @@ public static void getCommentTags( File f, Vector tagList )\n      */\n     public static void getLiteralTags( File f, Vector tagList )\n     {\n-\n         Vector literalList = (Vector) _fileLiterals.get( f );\n \n         if ( literalList != null )\n@@ -217,7 +232,6 @@ public static void getLiteralTags( File f, Vector tagList )\n      */\n     public static void getKeywordTags( File f, Vector tagList )\n     {\n-\n         Vector keywordList = (Vector) _fileKeywords.get( f );\n \n         if ( keywordList != null )\n@@ -273,7 +287,6 @@ public void setDemand( JavaVector dem )\n      */\n     public static SymbolTable getSymbolTable()\n     {\n-\n         if ( singleton == null )\n         {\n             singleton = new SymbolTable();\n@@ -287,7 +300,6 @@ public static SymbolTable getSymbolTable()\n      */\n     private SymbolTable()\n     {\n-\n         // allocate storage for the packages and scope lists\n         packages = new JavaHashtable();\n         activeScopes = new JavaStack();\n@@ -374,7 +386,6 @@ void addDemand( PackageDef pkg )\n      */\n     public static void createDirs( File f )\n     {\n-\n         String parentDir = f.getParent();\n         File directory = new File( parentDir );\n \n@@ -392,7 +403,6 @@ public static void createDirs( File f )\n      */\n     public static void addFileClassDef( File f, ClassDef classDef )\n     {\n-\n         if ( _fileClassDefs == null )\n         {\n             _fileClassDefs = new Hashtable( 2 );\n@@ -418,7 +428,6 @@ public static void addFileClassDef( File f, ClassDef classDef )\n      */\n     public static String getClassList( File f )\n     {\n-\n         if ( _fileClassDefs == null )\n         {\n             return null;\n@@ -432,7 +441,6 @@ public static String getClassList( File f )\n         }\n \n         String list = \"\";\n-\n         for ( int i = 0; i < v.size(); i++ )\n         {\n             Definition d = (Definition) v.elementAt( i );\n@@ -458,7 +466,6 @@ public static String getClassList( File f )\n      */\n     public void addImport( JavaToken tok, String className, String packageName )\n     {\n-\n         if ( log.isDebugEnabled() )\n         {\n             log.debug( \"addImport(JavaToken, String, String) - String className=\" + className );\n@@ -477,7 +484,6 @@ public void addImport( JavaToken tok, String className, String packageName )\n \n             return;\n         }\n-\n         // otherwise, chop the extra \".\" that the parser adds...\n         else\n         {\n@@ -507,7 +513,6 @@ public void addImport( JavaToken tok, String className, String packageName )\n         // otherwise, create a placeholder class for class/interface ref\n         else\n         {\n-\n             if ( log.isDebugEnabled() )\n             {\n                 log.debug( \"addImport(JavaToken, String, String) - Created placeholder for:\"\n@@ -531,7 +536,6 @@ public void addImport( JavaToken tok, String className, String packageName )\n      */\n     void addToCurrentScope( Definition def )\n     {\n-\n         // add the definition to the current scope\n         getCurrentScope().add( def );\n \n@@ -556,7 +560,6 @@ void closeImports()\n      */\n     public Definition defineBlock( JavaToken tok )\n     {\n-\n         // create a new block definition and push it\n         // as the current scope\n         BlockDef def = new BlockDef( null, getOccurrence( tok ), getCurrentScope() );\n@@ -584,7 +587,6 @@ public void defineClass( JavaToken theClass, // class being created\n         ClassDef def = new ClassDef( getUniqueName( theClass ), getOccurrence( theClass ),\n                                      ( superClass == null ) ? null : getDummyClass( superClass ), interfaces,\n                                      getCurrentScope() );\n-\n         def.setType( ClassDef.CLASS );\n \n         // add the imported classes/packages to the class\n@@ -606,13 +608,11 @@ public void defineClass( JavaToken theClass, // class being created\n      */\n     public void defineInterface( JavaToken theInterface, JavaVector superInterfaces )\n     {\n-\n         // note -- we leave superInterfaces as a vector of JavaTokens for now.\n         // we'll resolve in pass 2.\n         // create the new interface object\n         ClassDef def = new ClassDef( getUniqueName( theInterface ), getOccurrence( theInterface ), null, // no super class...\n                                      superInterfaces, getCurrentScope() );\n-\n         def.setType( ClassDef.INTERFACE );\n \n         // add it to the current scope\n@@ -630,22 +630,19 @@ public void defineInterface( JavaToken theInterface, JavaVector superInterfaces\n      */\n     public void defineLabel( JavaToken theLabel )\n     {\n-\n         addToCurrentScope( new LabelDef( getUniqueName( theLabel ), getOccurrence( theLabel ), getCurrentScope() ) );\n     }\n \n     /**\n-     * Define a new comment object\n+     * Define a new multi lines comment object\n      *\n      * @param line\n      * @param column\n      * @param text\n      */\n-    public void defineComment( int line, int column, String text )\n+    public void defineMultiLinesComment( int line, int column, String text )\n     {\n-\n         int length = text.length();\n-\n         /*\n          * Removing since we now skip carriage returns\n          *  if (text.indexOf(\"\\r\\n\")>0) {\n@@ -655,17 +652,39 @@ public void defineComment( int line, int column, String text )\n          *  }\n          */\n         String packageName = getCurrentPackageName();\n-        HTMLTag t = new HTMLTag( currentFile, line, column, packageName, length );\n-        Vector commentList = (Vector) _fileComments.get( currentFile );\n+        HTMLTag t = new HTMLTag( currentFile, line, column, packageName, length, HTMLTag.TYPE_MULTI_LINES_COMMENT );\n+        Vector multiLinesCommentList = (Vector) _fileMultiLinesComments.get( currentFile );\n+        if ( multiLinesCommentList == null )\n+        {\n+            multiLinesCommentList = new Vector();\n+\n+            _fileMultiLinesComments.put( currentFile, multiLinesCommentList );\n+        }\n+\n+        multiLinesCommentList.addElement( t );\n+    }\n \n-        if ( commentList == null )\n+    /**\n+     * Define a new single line comment object\n+     *\n+     * @param line\n+     * @param column\n+     * @param text\n+     */\n+    public void defineSingleLineComment( int line, int column, String text )\n+    {\n+        int length = text.length();\n+        String packageName = getCurrentPackageName();\n+        HTMLTag t = new HTMLTag( currentFile, line, column, packageName, length, HTMLTag.TYPE_SINGLE_LINE_COMMENT );\n+        Vector singleLineCommentList = (Vector) _fileSingleLineComments.get( currentFile );\n+        if ( singleLineCommentList == null )\n         {\n-            commentList = new Vector();\n+            singleLineCommentList = new Vector();\n \n-            _fileComments.put( currentFile, commentList );\n+            _fileSingleLineComments.put( currentFile, singleLineCommentList );\n         }\n \n-        commentList.addElement( t );\n+        singleLineCommentList.addElement( t );\n     }\n \n     /**\n@@ -677,12 +696,10 @@ public void defineComment( int line, int column, String text )\n      */\n     public void defineLiteral( int line, int column, String text )\n     {\n-\n         int length = text.length();\n         String packageName = getCurrentPackageName();\n         HTMLTag t = new HTMLTag( currentFile, line, column, packageName, length, HTMLTag.TYPE_LITERAL );\n         Vector literalList = (Vector) _fileLiterals.get( currentFile );\n-\n         if ( literalList == null )\n         {\n             literalList = new Vector();\n@@ -702,12 +719,10 @@ public void defineLiteral( int line, int column, String text )\n      */\n     public void defineKeyword( int line, int column, String text )\n     {\n-\n         int length = text.length();\n         String packageName = getCurrentPackageName();\n         HTMLTag t = new HTMLTag( currentFile, line, column, packageName, length, HTMLTag.TYPE_KEYWORD );\n         Vector keywordList = (Vector) _fileKeywords.get( currentFile );\n-\n         if ( keywordList == null )\n         {\n             keywordList = new Vector();\n@@ -726,7 +741,6 @@ public void defineKeyword( int line, int column, String text )\n      */\n     public void defineMethod( JavaToken theMethod, JavaToken type )\n     {\n-\n         if ( log.isDebugEnabled() )\n         {\n             log.debug( \"defineMethod(JavaToken, JavaToken) - JavaToken theMethod=\" + theMethod.getText() );\n@@ -804,7 +818,6 @@ PackageDef definePackage( String name )\n      */\n     public void defineVar( JavaToken theVariable, JavaToken type )\n     {\n-\n         // create the variable definition\n         VariableDef v = new VariableDef( getUniqueName( theVariable ), getOccurrence( theVariable ),\n                                          getDummyClass( type ), getCurrentScope() );\n@@ -829,7 +842,6 @@ public void defineVar( JavaToken theVariable, JavaToken type )\n      */\n     public void endMethodHead( JavaVector exceptions )\n     {\n-\n         // set its thrown exception list\n         currentMethod.setExceptions( exceptions );\n \n@@ -849,7 +861,6 @@ public void endMethodHead( JavaVector exceptions )\n      */\n     Definition findInImports( String name, Class type )\n     {\n-\n         if ( log.isDebugEnabled() )\n         {\n             log.debug( \"findInImports(String, Class) - String name=\" + name );\n@@ -934,7 +945,6 @@ Definition findPackage( String name )\n      */\n     PackageDef lookupPackage( String name )\n     {\n-\n         PackageDef result = (PackageDef) packages.get( name );\n \n         if ( result == null )\n@@ -954,7 +964,6 @@ PackageDef lookupPackage( String name )\n      */\n     ScopedDef getCurrentScope()\n     {\n-\n         if ( activeScopes.empty() )\n         {\n             return null;\n@@ -970,7 +979,6 @@ ScopedDef getCurrentScope()\n      */\n     PackageDef getDefaultPackage()\n     {\n-\n         // if the default package has not yet been defined, create it\n         // (lazy instantiation)\n         if ( defaultPackage == null )\n@@ -992,7 +1000,6 @@ PackageDef getDefaultPackage()\n      */\n     public DummyClass getDummyClass( JavaToken tok )\n     {\n-\n         if ( tok == null )\n         {\n             return null;\n@@ -1008,7 +1015,6 @@ public DummyClass getDummyClass( JavaToken tok )\n      */\n     ClassDef getObject()\n     {\n-\n         if ( object == null )\n         { // lazy instantiation\n             object = new DummyClass();\n@@ -1030,7 +1036,6 @@ ClassDef getObject()\n      */\n     Occurrence getOccurrence( JavaToken tok )\n     {\n-\n         if ( tok == null )\n         {\n             return new Occurrence( null, 0 );\n@@ -1096,7 +1101,6 @@ Definition lookup( String name, Class type )\n      */\n     Definition lookup( String name, int numParams, Class type )\n     {\n-\n         if ( log.isDebugEnabled() )\n         {\n             log.debug( \"lookup(String, int, Class) - String name=\" + name );\n@@ -1358,7 +1362,6 @@ else if ( numParams == -1 )\n      */\n     ClassDef lookupDummy( Definition d )\n     {\n-\n         // construct a qualified class name\n         String className;\n         String pkg = ( (DummyClass) d ).getPackage();\n@@ -1407,7 +1410,6 @@ ClassDef lookupDummy( Definition d )\n      */\n     void openImports( JavaHashtable imports )\n     {\n-\n         // start a new demand list\n         demand = new JavaVector();\n \n@@ -1419,20 +1421,17 @@ void openImports( JavaHashtable imports )\n         // if this class has something to import...\n         if ( imports != null )\n         {\n-\n             // walk through the list of imports\n             Enumeration e = imports.elements();\n \n             while ( e.hasMoreElements() )\n             {\n-\n                 // add the package or class to the demand or import list\n                 // based on the type of import it was\n                 Definition d = (Definition) e.nextElement();\n \n                 if ( d instanceof PackageDef )\n                 {\n-\n                     if ( log.isDebugEnabled() )\n                     {\n                         log.debug( \"openImports(JavaHashtable) - Adding package \" + d.getName() + \" to imports\" );\n@@ -1443,7 +1442,6 @@ void openImports( JavaHashtable imports )\n                 {\n                     if ( d instanceof DummyClass )\n                     {\n-\n                         if ( log.isDebugEnabled() )\n                         {\n                             log.debug( \"openImports(JavaHashtable) - found DummyClass \" + d.getName() + \" package \"\n@@ -1474,7 +1472,6 @@ void openImports( JavaHashtable imports )\n      */\n     public void popAllScopes()\n     {\n-\n         while ( activeScopes.peek() != baseScope )\n         {\n             activeScopes.pop();\n@@ -1499,7 +1496,6 @@ public void popScope()\n      */\n     Definition pushScope( Definition scope )\n     {\n-\n         if ( !( scope instanceof ScopedDef ) )\n         {\n             throw new RuntimeException( \"Not a ScopedDef\" );\n@@ -1517,7 +1513,6 @@ Definition pushScope( Definition scope )\n      */\n     String getCurrentPackageName()\n     {\n-\n         String packageName = \"\";\n \n         if ( activeScopes == null )\n@@ -1549,7 +1544,6 @@ String getCurrentPackageName()\n      */\n     String getCurrentClassName()\n     {\n-\n         String className = \"?\";\n \n         if ( activeScopes == null )\n@@ -1581,7 +1575,6 @@ String getCurrentClassName()\n      */\n     String getCurrentMethodName()\n     {\n-\n         String methodName = \"?\";\n \n         if ( activeScopes == null )\n@@ -1613,7 +1606,6 @@ String getCurrentMethodName()\n      */\n     public void reference( JavaToken t )\n     {\n-\n         t.setFile( currentFile );\n         t.setPackageName( getCurrentPackageName() );\n         t.setClassName( getCurrentClassName() );\n@@ -1628,7 +1620,6 @@ public void reference( JavaToken t )\n      */\n     public Hashtable generatePackageTags()\n     {\n-\n         Vector tagList;\n         Vector sortedList;\n         Hashtable tagTable = new Hashtable( 2 );\n@@ -1677,7 +1668,6 @@ void resetScope()\n      */\n     public void resolveTypes()\n     {\n-\n         // for each package, resolve its references\n         if ( defaultPackage != null )\n         {\n@@ -1692,7 +1682,6 @@ public void resolveTypes()\n      */\n     public void resolveRefs()\n     {\n-\n         // for each package, resolve its references\n         if ( defaultPackage != null )\n         {\n@@ -1709,7 +1698,6 @@ public void resolveRefs()\n      */\n     public void persistRefs( String outDirPath )\n     {\n-\n         ReferencePersistor rp = new ReferencePersistor( outDirPath );\n \n         if ( defaultPackage != null )\n@@ -1736,7 +1724,6 @@ public void setFile( File file )\n      */\n     public void setNearestClassScope()\n     {\n-\n         // find the nearest class scope\n         setScope( activeScopes.findTopmostClass() );\n     }\n@@ -1750,7 +1737,6 @@ public void setNearestClassScope()\n      */\n     void setScope( JavaToken t )\n     {\n-\n         Definition def = lookup( t.getText(), null );\n \n         if ( def != null )\n@@ -1768,7 +1754,6 @@ void setScope( JavaToken t )\n      */\n     void setScope( Definition d )\n     {\n-\n         while ( ( d != null ) && ( d instanceof TypedDef ) )\n         {\n             d = ( (TypedDef) d ).getType();\n@@ -1789,7 +1774,6 @@ void setScope( Definition d )\n      */\n     void setScope( String name )\n     {\n-\n         Definition def = lookup( name, null );\n \n         if ( def != null )\n@@ -1803,7 +1787,6 @@ void setScope( String name )\n      */\n     public String toString()\n     {\n-\n         String str = \"\";\n         Enumeration e = packages.elements();\n \n@@ -1837,7 +1820,6 @@ public void useDefaultPackage()\n      */\n     static public void startReadExternal( String name )\n     {\n-\n         // for (int i=0; i<readLevel; i++)\n         // System.out.print(' ');\n         // System.out.println(\"reading \"+name);\n@@ -1849,7 +1831,6 @@ static public void startReadExternal( String name )\n      */\n     static public void endReadExternal()\n     {\n-\n         // readLevel--;\n     }\n }",
                "deletions": 72
            },
            {
                "sha": "fceb8b5150c6c5a247956c8cb6dba60bb2f3d48d",
                "filename": "jxr/maven-jxr/maven-jxr-java/src/main/resources/org/apache/maven/jxr/java/src/css/styles.css",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/resources/org/apache/maven/jxr/java/src/css/styles.css",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b100b6b9ce97996a063d0541dd192f2641e4eba3/jxr/maven-jxr/maven-jxr-java/src/main/resources/org/apache/maven/jxr/java/src/css/styles.css",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/jxr/maven-jxr/maven-jxr-java/src/main/resources/org/apache/maven/jxr/java/src/css/styles.css?ref=b100b6b9ce97996a063d0541dd192f2641e4eba3",
                "patch": "@@ -44,7 +44,8 @@ h1 { font-size: 145% }\n .NavBarCell3    { font-family: Arial, Helvetica, sans-serif; background-color:#FFFFFF;}\n \n /* JavaSrc style sheet */\n-.comment   { color:#007d00; font-style:italic }\n+.multiLinesComment   { color:#3f5fbf; font-style:italic }\n+.singleLineComment   { color:#007d00; font-style:italic }\n .linenum   { color:#888 font-weight:normal; }\n .string { color: #009;}\n .keywords { color: #7f0055;}",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-sandbox",
        "message": "Don't throw NPE when no output specified, just skip storing the results.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@570084 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/6b7d1f1aceb1a58d97e295d4356d058b362414dc",
        "parent": "https://github.com/apache/maven-sandbox/commit/38df830e67a6a81ceef0e02c0e256c4a9ccc70ef",
        "bug_id": "maven-sandbox_4",
        "file": [
            {
                "sha": "ac7fa280f9a61cd4cad3604264b5b6c12fc19c4e",
                "filename": "doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/6b7d1f1aceb1a58d97e295d4356d058b362414dc/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/6b7d1f1aceb1a58d97e295d4356d058b362414dc/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java",
                "status": "modified",
                "changes": 21,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/LinkCheck.java?ref=6b7d1f1aceb1a58d97e295d4356d058b362414dc",
                "patch": "@@ -143,7 +143,7 @@ public String getCache()\n     /**\n      * Sets the name of the cacheFile.\n      *\n-     * @param cacheFile The cacheFile to set\n+     * @param cacheFile The cacheFile to set. Set this to null to ignore storing the cache.\n      */\n     public void setCache( String cacheFile )\n     {\n@@ -212,7 +212,6 @@ public void setLinkValidatorManager( LinkValidatorManager validator )\n         this.lvm = validator;\n     }\n \n-\n     /**\n      * Returns the LinkValidatorManager.\n      * If this hasn't been set before with {@link #setLinkValidatorManager(LinkValidatorManager)}\n@@ -258,6 +257,7 @@ private void initDefaultLinkValidatorManager()\n \n     /**\n      * Set the output file for the results.\n+     * If this is null, no output will be written.\n      *\n      * @param file the output file.\n      */\n@@ -266,6 +266,16 @@ public void setOutput( File file )\n         this.output = file;\n     }\n \n+    /**\n+     * Returns the output file.\n+     *\n+     * @return File\n+     */\n+    public File getOutput()\n+    {\n+        return this.output;\n+    }\n+\n     /**\n      * Returns the outputEncoding.\n      *\n@@ -356,7 +366,7 @@ public void doExecute()\n     {\n         if ( this.output == null )\n         {\n-            throw new NullPointerException( \"output must be set\" );\n+            LOG.warn( \"No output file specified! Results will not be written!\" );\n         }\n \n         displayMemoryConsumption();\n@@ -461,6 +471,11 @@ private void displayMemoryConsumption()\n      */\n     private void createDocument() throws FileNotFoundException\n     {\n+        if ( this.output == null )\n+        {\n+            return;\n+        }\n+\n         File dir = this.output.getParentFile();\n \n         if ( dir != null )",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-sandbox",
        "message": "Avoid NPE when no cache file is specified. Add some logs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@569774 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/b0476f0f425cd9b9a9146f107300d5c8c1190139",
        "parent": "https://github.com/apache/maven-sandbox/commit/457b12cdb3ae50739658992b341dace8f1fd7bfb",
        "bug_id": "maven-sandbox_5",
        "file": [
            {
                "sha": "38398ce65de8879ade069e954bfecdad32f44f69",
                "filename": "doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/validation/LinkValidatorManager.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/b0476f0f425cd9b9a9146f107300d5c8c1190139/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/validation/LinkValidatorManager.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/b0476f0f425cd9b9a9146f107300d5c8c1190139/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/validation/LinkValidatorManager.java",
                "status": "modified",
                "changes": 29,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/doxia/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/validation/LinkValidatorManager.java?ref=b0476f0f425cd9b9a9146f107300d5c8c1190139",
                "patch": "@@ -108,13 +108,11 @@ public void addLinkValidator( LinkValidator lv )\n      */\n     public LinkValidationResult validateLink( LinkValidationItem lvi ) throws Exception\n     {\n-        {\n-            LinkValidationResult cachedResult = getCachedResult( lvi );\n+        LinkValidationResult cachedResult = getCachedResult( lvi );\n \n-            if ( cachedResult != null )\n-            {\n-                return cachedResult;\n-            }\n+        if ( cachedResult != null )\n+        {\n+            return cachedResult;\n         }\n \n         for ( int i = 0; i < this.excludes.length; i++ )\n@@ -179,9 +177,16 @@ public LinkValidationResult validateLink( LinkValidationItem lvi ) throws Except\n      * Loads a cache file.\n      *\n      * @param cacheFilename The name of the cache file.\n+     * May be null, in which case the request is ignored.\n      */\n     public void loadCache( String cacheFilename )\n     {\n+        if ( cacheFilename == null )\n+        {\n+            LOG.debug( \"No cache file specified! Ignoring request to load.\" );\n+            return;\n+        }\n+\n         try\n         {\n             File f = new File( cacheFilename );\n@@ -193,6 +198,11 @@ public void loadCache( String cacheFilename )\n                 this.cache = (Map) is.readObject();\n \n                 is.close();\n+\n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"Cache file loaded: \" + cacheFilename );\n+                }\n             }\n         }\n         catch ( InvalidClassException e )\n@@ -209,9 +219,16 @@ public void loadCache( String cacheFilename )\n      * Saves a cache file.\n      *\n      * @param cacheFilename The name of the cache file.\n+     * May be null, in which case the request is ignored.\n      */\n     public void saveCache( String cacheFilename )\n     {\n+        if ( cacheFilename == null )\n+        {\n+            LOG.warn( \"No cache file specified! Ignoring request to store results.\" );\n+            return;\n+        }\n+\n         try\n         {\n             // Remove non-persistent items from cache",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "maven-sandbox",
        "message": "Adjust to changes in docrenderer. Use the PdfRenderer from there. Make it configurable whether to use fo or itext. There is a problem with the logger throwing a NPE when run from the cl, needs fixing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/sandbox/trunk@583290 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-sandbox/commit/406afe4880b4fb53e582cf080dbf16511d5e0e37",
        "parent": "https://github.com/apache/maven-sandbox/commit/53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49",
        "bug_id": "maven-sandbox_6",
        "file": [
            {
                "sha": "4dbd142e45c814446fc400ac86c07bc0366ef945",
                "filename": "plugins/maven-pdf-plugin/pom.xml",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/pom.xml",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/pom.xml",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/pom.xml?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -66,6 +66,11 @@ under the License.\n       <artifactId>plexus-utils</artifactId>\n       <version>1.4.5</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.codehaus.plexus</groupId>\n+      <artifactId>plexus-i18n</artifactId>\n+      <version>1.0-beta-7</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-doc-renderer</artifactId>",
                "deletions": 0
            },
            {
                "sha": "af7559f69909313846f15efe38d9efe8c0009daa",
                "filename": "plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/AbstractPdfMojo.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/AbstractPdfMojo.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/AbstractPdfMojo.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/AbstractPdfMojo.java?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -57,7 +57,7 @@\n      *\n      * @component\n      */\n-    protected I18N i18n;\n+    private I18N i18n;\n \n     /**\n      * Init the <code>localesList</code> variable.",
                "deletions": 1
            },
            {
                "sha": "9bac6d6a61abc06bc668cb72bc143343c48df76d",
                "filename": "plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "status": "modified",
                "changes": 82,
                "additions": 70,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -25,8 +25,9 @@\n import java.util.List;\n import java.util.Locale;\n \n-import org.apache.maven.doxia.docrenderer.DocRenderer;\n-import org.apache.maven.doxia.docrenderer.DocRendererException;\n+import org.apache.maven.doxia.docrenderer.DocumentRenderer;\n+import org.apache.maven.doxia.docrenderer.DocumentRendererException;\n+import org.apache.maven.doxia.docrenderer.document.DocumentModel;\n \n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.plugin.MojoFailureException;\n@@ -47,41 +48,77 @@\n      * @parameter expression=\"${basedir}/src/site\"\n      * @required\n      */\n-    protected File siteDirectory;\n+    private File siteDirectory;\n \n     /**\n      * Directory containing the generated project sites and report distributions.\n      *\n      * @parameter alias=\"workingDirectory\" expression=\"${project.build.directory}/pdf\"\n      * @required\n      */\n-    protected File outputDirectory;\n+    private File outputDirectory;\n \n     /**\n      * File that contains the DocumentModel of the PDF to generate.\n      *\n      * @parameter expression=\"src/site/pdf.xml\"\n      * @required\n+     * @todo shouldn't be required, construct info from pom\n      */\n-    protected File docDescriptor;\n+    private File docDescriptor;\n \n     /**\n-     * Document Renderer.\n+     * Identifies the framework to use for pdf generation: either \"fo\" (default) or \"itext\".\n      *\n-     * @component\n+     * @parameter expression=\"fo\"\n+     * @required\n      */\n-    private DocRenderer docRenderer;\n+    private String implementation = \"fo\";\n+\n+    /**\n+     * FO Document Renderer.\n+     *\n+     * @component role-hint=\"fo\"\n+     */\n+    private DocumentRenderer foRenderer;\n+\n+    /**\n+     * IText Document Renderer.\n+     *\n+     * @component role-hint=\"itext\"\n+     */\n+    private DocumentRenderer itextRenderer;\n+\n+\n+    /**\n+     * Document Renderer.\n+     */\n+    private DocumentRenderer docRenderer;\n \n     /** {@inheritDoc} */\n     public void execute()\n         throws MojoExecutionException, MojoFailureException\n     {\n+        if ( \"fo\".equals( implementation ) )\n+        {\n+            this.docRenderer = foRenderer;\n+        }\n+        else if ( \"itext\".equals( implementation ) )\n+        {\n+            this.docRenderer = itextRenderer;\n+        }\n+        else\n+        {\n+            throw new MojoFailureException( \"Not a valid implementation: \" + implementation );\n+        }\n+\n         try\n         {\n             List localesList = initLocalesList();\n \n             // Default is first in the list\n             Locale defaultLocale = (Locale) localesList.get( 0 );\n+\n             Locale.setDefault( defaultLocale );\n \n             for ( Iterator iterator = localesList.iterator(); iterator.hasNext(); )\n@@ -90,18 +127,17 @@ public void execute()\n \n                 File outputDir = getOutputDirectory( locale, defaultLocale );\n \n-                // Generate static site\n                 File siteDirectoryFile = siteDirectory;\n \n                 if ( !locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n                 {\n                     siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );\n                 }\n \n-                docRenderer.render( siteDirectoryFile, outputDir, docDescriptor );\n+                docRenderer.render( siteDirectoryFile, outputDir, getDocumentModel() );\n             }\n         }\n-        catch ( DocRendererException e )\n+        catch ( DocumentRendererException e )\n         {\n             throw new MojoExecutionException( \"Error during document generation\", e );\n         }\n@@ -111,7 +147,29 @@ public void execute()\n         }\n     }\n \n-    // TODO: can be re-used\n+    /**\n+     * Constructs a DocumentModel for the current project. The model is either read from\n+     * a descriptor file, if it exists, or constructed from information in the pom and site.xml.\n+     *\n+     * @return DocumentModel.\n+     * @throws DocumentRendererException if any.\n+     * @throws IOException if any.\n+     */\n+    private DocumentModel getDocumentModel()\n+        throws DocumentRendererException, IOException\n+    {\n+        // TODO: check if exists, construct from pom if not\n+        return docRenderer.readDocumentModel( docDescriptor );\n+    }\n+\n+    /**\n+     * Return the output directory for a given Locale and the current default Locale.\n+     *\n+     * @param locale a Locale.\n+     * @param defaultLocale the current default Locale.\n+     * @return File.\n+     * @todo can be re-used\n+     */\n     private File getOutputDirectory( Locale locale, Locale defaultLocale )\n     {\n         File file;",
                "deletions": 12
            },
            {
                "sha": "359e71cb5218e466dace9e898bdac90aed3afdb8",
                "filename": "plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/DefaultPdfRenderer.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/DefaultPdfRenderer.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/DefaultPdfRenderer.java",
                "status": "removed",
                "changes": 303,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/DefaultPdfRenderer.java?ref=53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49",
                "patch": "@@ -1,303 +0,0 @@\n-package org.apache.maven.plugins.pdf.renderer;\n-\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-import java.io.File;\n-import java.io.FileReader;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-\n-import java.util.Iterator;\n-import java.util.List;\n-\n-import javax.xml.transform.TransformerException;\n-\n-import org.apache.maven.doxia.Doxia;\n-import org.apache.maven.doxia.docrenderer.DocRendererException;\n-import org.apache.maven.doxia.docrenderer.document.DocumentModel;\n-import org.apache.maven.doxia.docrenderer.document.DocumentTOCItem;\n-import org.apache.maven.doxia.docrenderer.document.io.xpp3.DocumentXpp3Reader;\n-import org.apache.maven.doxia.module.site.SiteModule;\n-import org.apache.maven.doxia.module.site.manager.SiteModuleManager;\n-import org.apache.maven.doxia.module.fo.FoAggregateSink;\n-import org.apache.maven.doxia.module.fo.FoUtils;\n-import org.apache.maven.doxia.parser.ParseException;\n-import org.apache.maven.doxia.parser.manager.ParserNotFoundException;\n-\n-import org.codehaus.plexus.util.FileUtils;\n-import org.codehaus.plexus.util.StringUtils;\n-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n-\n-/**\n- * Default PDF renderer using Doxia's FOP module.\n- *\n- * @author ltheussl\n- * @version $Id$\n- */\n-public class DefaultPdfRenderer\n-    implements PdfRenderer\n-{\n-    /**\n-     * @plexus.requirement\n-     */\n-    protected SiteModuleManager siteModuleManager;\n-\n-    /**\n-     * @plexus.requirement\n-     */\n-    protected Doxia doxia;\n-\n-\n-    /** {@inheritDoc} */\n-    public String getOutputExtension()\n-    {\n-        return \"pdf\";\n-    }\n-\n-    /**\n-     * Converts an FO file to a PDF file using FOP.\n-     * @param foFile the FO file.\n-     * @param pdfFile the target PDF file.\n-     * @throws DocRendererException In case of a conversion problem.\n-     * @see org.apache.maven.doxia.module.fo.FoUtils#convertFO2PDF(File,File,String);\n-     */\n-\n-    public void generatePdf( File foFile, File pdfFile )\n-        throws DocRendererException\n-    {\n-        // TODO: getLogger().debug( \"Generating : \" + pdfFile );\n-\n-        try\n-        {\n-            FoUtils.convertFO2PDF( foFile, pdfFile, null );\n-        }\n-        catch ( TransformerException e )\n-        {\n-            throw new DocRendererException( \"Error creating PDF from \" + foFile + \": \" + e.getMessage() );\n-        }\n-    }\n-\n-    /** {@inheritDoc} */\n-    public void render( File baseDirectory, File outputDirectory )\n-        throws DocRendererException, IOException\n-    {\n-        render( baseDirectory, outputDirectory, \"target\" );\n-    }\n-\n-    private void render( File baseDirectory, File outputDirectory, String outputName )\n-        throws DocRendererException, IOException\n-    {\n-        File outputFOFile = new File( outputDirectory, outputName + \".fo\" );\n-\n-        if ( !outputFOFile.getParentFile().exists() )\n-        {\n-            outputFOFile.getParentFile().mkdirs();\n-        }\n-\n-        File pdfOutputFile = new File( outputDirectory, outputName + \".pdf\" );\n-\n-        if ( !pdfOutputFile.getParentFile().exists() )\n-        {\n-            pdfOutputFile.getParentFile().mkdirs();\n-        }\n-\n-        FoAggregateSink sink = new FoAggregateSink( new FileWriter( outputFOFile ) );\n-\n-        sink.beginDocument();\n-\n-        for ( Iterator i = siteModuleManager.getSiteModules().iterator(); i.hasNext(); )\n-        {\n-            SiteModule module = (SiteModule) i.next();\n-\n-            File moduleBasedir = new File( baseDirectory, module.getSourceDirectory() );\n-\n-            // exclude fml, see http://jira.codehaus.org/browse/DOXIA-148\n-            if ( moduleBasedir.exists() && !\"fml\".equals( module.getExtension() ) )\n-            {\n-                List docs = FileUtils.getFileNames( moduleBasedir, \"**/*.\" + module.getExtension(), null, false );\n-\n-                for ( Iterator j = docs.iterator(); j.hasNext(); )\n-                {\n-                    String doc = (String) j.next();\n-\n-                    String fullDocPath = new File( moduleBasedir, doc ).getPath();\n-\n-                    sink.setDocumentName( doc );\n-\n-                    parse( fullDocPath, module, sink );\n-                }\n-            }\n-        }\n-\n-        sink.endDocument();\n-\n-        generatePdf( outputFOFile, pdfOutputFile );\n-\n-    }\n-\n-    /** {@inheritDoc} */\n-    public void render( File baseDirectory, File outputDirectory, File documentDescriptor )\n-        throws DocRendererException, IOException\n-    {\n-        if ( documentDescriptor == null || !documentDescriptor.exists() )\n-        {\n-            // TODO: log\n-            render( baseDirectory, outputDirectory );\n-            return;\n-        }\n-\n-        DocumentModel documentModel;\n-        try\n-        {\n-            documentModel = new DocumentXpp3Reader().read( new FileReader( documentDescriptor ) );\n-        }\n-        catch ( XmlPullParserException e )\n-        {\n-            throw new DocRendererException( \"Error parsing document descriptor\", e );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new DocRendererException( \"Error reading document descriptor\", e );\n-        }\n-\n-        String name = documentModel.getOutputName();\n-        if ( name == null )\n-        {\n-            // TODO: getLogger().info( \"No outputName is defined in the document descriptor. Using 'target.pdf'\" );\n-            documentModel.setOutputName( \"target\" );\n-        }\n-        else if ( name.lastIndexOf( \".\" ) != -1 )\n-        {\n-            documentModel.setOutputName( name.substring( 0, name.lastIndexOf( \".\" ) ) );\n-        }\n-\n-        if ( ( documentModel.getToc() == null ) || ( documentModel.getToc().getItems() == null ) )\n-        {\n-            // TODO: getLogger().info( \"No TOC is defined in the document descriptor. Merging all documents.\" );\n-            render( baseDirectory, outputDirectory, documentModel.getOutputName() );\n-            return;\n-        }\n-\n-        File outputFOFile = new File( outputDirectory, documentModel.getOutputName() + \".fo\" );\n-\n-        if ( !outputFOFile.getParentFile().exists() )\n-        {\n-            outputFOFile.getParentFile().mkdirs();\n-        }\n-\n-        File pdfOutputFile = new File( outputDirectory, documentModel.getOutputName() + \".pdf\" );\n-\n-        if ( !pdfOutputFile.getParentFile().exists() )\n-        {\n-            pdfOutputFile.getParentFile().mkdirs();\n-        }\n-\n-\n-        FoAggregateSink sink = new FoAggregateSink( new FileWriter( outputFOFile ) );\n-\n-        sink.setDocumentModel( documentModel );\n-\n-        sink.beginDocument();\n-\n-        sink.coverPage();\n-\n-        sink.toc();\n-\n-        for ( Iterator k = documentModel.getToc().getItems().iterator(); k.hasNext(); )\n-        {\n-            DocumentTOCItem tocItem = (DocumentTOCItem) k.next();\n-\n-            if ( tocItem.getRef() == null )\n-            {\n-                // TODO: getLogger().info( \"No ref defined for an tocItem in the document descriptor.\" );\n-                continue;\n-            }\n-\n-            String href = StringUtils.replace( tocItem.getRef(), \"\\\\\", \"/\" );\n-\n-            if ( href.lastIndexOf( \".\" ) != -1 )\n-            {\n-                href = href.substring( 0, href.lastIndexOf( \".\" ) );\n-            }\n-\n-            for ( Iterator i = siteModuleManager.getSiteModules().iterator(); i.hasNext(); )\n-            {\n-                SiteModule module = (SiteModule) i.next();\n-\n-                File moduleBasedir = new File( baseDirectory, module.getSourceDirectory() );\n-\n-                if ( moduleBasedir.exists() && !\"fml\".equals( module.getExtension() ) )\n-                {\n-                    String doc = href + \".\" + module.getExtension();\n-\n-                    File source = new File( moduleBasedir, doc );\n-\n-                    if ( source.exists() )\n-                    {\n-                        sink.setDocumentName( doc );\n-\n-                        sink.setDocumentTitle( tocItem.getName() );\n-\n-                        parse( source.getPath(), module, sink );\n-                    }\n-                }\n-            }\n-        }\n-\n-        sink.endDocument();\n-\n-        generatePdf( outputFOFile, pdfOutputFile );\n-    }\n-\n-    /**\n-     * Parse a source document into a FO sink.\n-     *\n-     * @param fullDocPath full path to the source document.\n-     * @param module the SiteModule that the source document belongs to (determines the parser to use).\n-     * @param sink the sink to receive the events.\n-     * @throws DocRendererException in case of a parsing error.\n-     * @throws IOException if the source document cannot be opened.\n-     */\n-    private void parse( String fullDocPath, SiteModule module, FoAggregateSink sink )\n-        throws DocRendererException, IOException\n-    {\n-        try\n-        {\n-            FileReader reader = new FileReader( fullDocPath );\n-\n-            doxia.parse( reader, module.getParserId(), sink );\n-        }\n-        catch ( ParserNotFoundException e )\n-        {\n-            throw new DocRendererException( \"No parser '\" + module.getParserId()\n-                        + \"' found for \" + fullDocPath + \": \" + e.getMessage() );\n-        }\n-        catch ( ParseException e )\n-        {\n-            throw new DocRendererException( \"Error parsing \" + fullDocPath + \": \" + e.getMessage(), e );\n-        }\n-        finally\n-        {\n-            sink.flush();\n-        }\n-    }\n-\n-\n-}",
                "deletions": 303
            },
            {
                "sha": "768c26a5d7855eab661752e188891ab7ee68d366",
                "filename": "plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/PdfRenderer.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/PdfRenderer.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/PdfRenderer.java",
                "status": "removed",
                "changes": 34,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/renderer/PdfRenderer.java?ref=53cd13f18fbdf0333d12d9e13e88fbe2e3ab8c49",
                "patch": "@@ -1,34 +0,0 @@\n-package org.apache.maven.plugins.pdf.renderer;\n-\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-import org.apache.maven.doxia.docrenderer.DocRenderer;\n-\n-/**\n- * PDF renderer interface.\n- *\n- * @author ltheussl\n- * @version $Id$\n- */\n-public interface PdfRenderer extends DocRenderer\n-{\n-    /** Plexus lookup role. */\n-    String ROLE = PdfRenderer.class.getName();\n-}",
                "deletions": 34
            },
            {
                "sha": "637d55d6e13f1b792c8bb59bdc1021c3756b5741",
                "filename": "plugins/maven-pdf-plugin/src/main/resources/META-INF/plexus/components.xml",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/resources/META-INF/plexus/components.xml",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/main/resources/META-INF/plexus/components.xml",
                "status": "modified",
                "changes": 21,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/main/resources/META-INF/plexus/components.xml?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -3,8 +3,25 @@\n   <components>\n \n     <component>\n-      <role>org.apache.maven.doxia.docrenderer.DocRenderer</role>\n-      <implementation>org.apache.maven.plugins.pdf.renderer.DefaultPdfRenderer</implementation>\n+      <role>org.apache.maven.doxia.docrenderer.DocumentRenderer</role>\n+      <role-hint>fo</role-hint>\n+      <implementation>org.apache.maven.doxia.docrenderer.pdf.fo.FoPdfRenderer</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.doxia.module.site.manager.SiteModuleManager</role>\n+          <field-name>siteModuleManager</field-name>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.doxia.Doxia</role>\n+          <field-name>doxia</field-name>\n+        </requirement>\n+      </requirements>\n+    </component>\n+\n+    <component>\n+      <role>org.apache.maven.doxia.docrenderer.DocumentRenderer</role>\n+      <role-hint>itext</role-hint>\n+      <implementation>org.apache.maven.doxia.docrenderer.pdf.itext.ITextPdfRenderer</implementation>\n       <requirements>\n         <requirement>\n           <role>org.apache.maven.doxia.module.site.manager.SiteModuleManager</role>",
                "deletions": 2
            },
            {
                "sha": "c65220034421fda9466b1051384b7e3381ee7b4d",
                "filename": "plugins/maven-pdf-plugin/src/test/java/org/apache/maven/plugins/pdf/PdfMojoTest.java",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/test/java/org/apache/maven/plugins/pdf/PdfMojoTest.java",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/test/java/org/apache/maven/plugins/pdf/PdfMojoTest.java",
                "status": "modified",
                "changes": 38,
                "additions": 37,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/test/java/org/apache/maven/plugins/pdf/PdfMojoTest.java?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -38,7 +38,7 @@ protected void setUp() throws Exception\n     }\n \n     /**\n-     * Tests the basic functioning of the pdf generation.\n+     * Tests the basic functioning of the pdf generation using the FO implementation.\n      *\n      * @throws Exception if any.\n      */\n@@ -65,4 +65,40 @@ public void testPdfMojo() throws Exception\n \n         assertTrue( \"Pdf file has no content!\", pdfFile.length() > 0 );\n     }\n+\n+    /**\n+     * Tests the basic functioning of the pdf generation with iText.\n+     *\n+     * @throws Exception if any.\n+     */\n+    public void testITextImpl() throws Exception\n+    {\n+        File testPom = new File( getBasedir(), \"/target/test-classes/unit/pdf/iText_pom.xml\" );\n+\n+        assertTrue( \"testPom does not exist!\", testPom.exists() );\n+\n+        PdfMojo mojo = (PdfMojo) lookupMojo( \"pdf\", testPom );\n+\n+        assertNotNull( \"pdf mojo not found!\", mojo );\n+\n+        // TODO\n+/*\n+         File pdfFile = new File( getBasedir(), \"/target/test-output/pdf/maven-pdf-plugin-doc.pdf\" );\n+\n+        if ( pdfFile.exists() )\n+        {\n+            pdfFile.delete();\n+        }\n+ */\n+\n+        mojo.execute();\n+\n+/*\n+        assertTrue( \"Pdf file not created!\", pdfFile.exists() );\n+\n+        assertTrue( \"Pdf file has no content!\", pdfFile.length() > 0 );\n+ */\n+     }\n+\n+\n }\n\\ No newline at end of file",
                "deletions": 1
            },
            {
                "sha": "fa29d7328b37031d9944895220f8078a30055113",
                "filename": "plugins/maven-pdf-plugin/src/test/resources/unit/pdf/iText_pom.xml",
                "blob_url": "https://github.com/apache/maven-sandbox/blob/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/test/resources/unit/pdf/iText_pom.xml",
                "raw_url": "https://github.com/apache/maven-sandbox/raw/406afe4880b4fb53e582cf080dbf16511d5e0e37/plugins/maven-pdf-plugin/src/test/resources/unit/pdf/iText_pom.xml",
                "status": "added",
                "changes": 18,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-sandbox/contents/plugins/maven-pdf-plugin/src/test/resources/unit/pdf/iText_pom.xml?ref=406afe4880b4fb53e582cf080dbf16511d5e0e37",
                "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<project>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-pdf-plugin</artifactId>\n+        <configuration>\n+          <docDescriptor>${basedir}/target/test-classes/unit/pdf/src/site/pdf.xml</docDescriptor>\n+          <siteDirectory>${basedir}/target/test-classes/unit/pdf/src/site/</siteDirectory>\n+          <outputDirectory>${basedir}/target/test-output/pdf</outputDirectory>\n+          <implementation>itext</implementation>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>",
                "deletions": 0
            }
        ]
    }
]