[
    {
        "repo": "activemq-artemis",
        "commit": "https://github.com/apache/activemq-artemis/commit/7ef95ae977f7c9dcaf13da2959feafb897e8ea80",
        "bug_id": "activemq-artemis_7ef95ae",
        "message": "ACTIVEMQ6-55: add a test of the listener method throwing the NPE",
        "parent": "https://github.com/apache/activemq-artemis/commit/983effca9d9ab95f9babe488847cd75b68cc24a8",
        "patched_files": [
            "AbstractConnectionContext.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/activemq-artemis/raw/7ef95ae977f7c9dcaf13da2959feafb897e8ea80/activemq-protocols/activemq-proton-plug/src/main/java/org/proton/plug/context/AbstractConnectionContext.java",
                "contents_url": "https://api.github.com/repos/apache/activemq-artemis/contents/activemq-protocols/activemq-proton-plug/src/main/java/org/proton/plug/context/AbstractConnectionContext.java?ref=7ef95ae977f7c9dcaf13da2959feafb897e8ea80",
                "filename": "activemq-protocols/activemq-proton-plug/src/main/java/org/proton/plug/context/AbstractConnectionContext.java",
                "deletions": 1,
                "sha": "3d0d0bc03796d7c2654c264d203e5ca185934f07",
                "blob_url": "https://github.com/apache/activemq-artemis/blob/7ef95ae977f7c9dcaf13da2959feafb897e8ea80/activemq-protocols/activemq-proton-plug/src/main/java/org/proton/plug/context/AbstractConnectionContext.java",
                "patch": "@@ -47,12 +47,13 @@\n \n    private final Map<Session, AbstractProtonSessionContext> sessions = new ConcurrentHashMap<>();\n \n+   protected LocalListener listener = new LocalListener();\n \n    public AbstractConnectionContext(AMQPConnectionCallback connectionCallback)\n    {\n       this.connectionCallback = connectionCallback;\n       connectionCallback.setConnection(this);\n-      handler.addEventHandler(new LocalListener());\n+      handler.addEventHandler(listener);\n    }\n \n    public SASLResult getSASLResult()",
                "changes": 3
            },
            {
                "status": "added",
                "additions": 114,
                "raw_url": "https://github.com/apache/activemq-artemis/raw/7ef95ae977f7c9dcaf13da2959feafb897e8ea80/activemq-protocols/activemq-proton-plug/src/test/java/org/proton/plug/context/AbstractConnectionContextTest.java",
                "contents_url": "https://api.github.com/repos/apache/activemq-artemis/contents/activemq-protocols/activemq-proton-plug/src/test/java/org/proton/plug/context/AbstractConnectionContextTest.java?ref=7ef95ae977f7c9dcaf13da2959feafb897e8ea80",
                "filename": "activemq-protocols/activemq-proton-plug/src/test/java/org/proton/plug/context/AbstractConnectionContextTest.java",
                "deletions": 0,
                "sha": "2396b1ec884bdccfe2c8c8314a715f69eb3eb2e4",
                "blob_url": "https://github.com/apache/activemq-artemis/blob/7ef95ae977f7c9dcaf13da2959feafb897e8ea80/activemq-protocols/activemq-proton-plug/src/test/java/org/proton/plug/context/AbstractConnectionContextTest.java",
                "patch": "@@ -0,0 +1,114 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.proton.plug.context;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+import org.apache.qpid.proton.engine.Connection;\n+import org.apache.qpid.proton.engine.Link;\n+import org.apache.qpid.proton.engine.Session;\n+import org.junit.Test;\n+import org.proton.plug.AMQPConnectionCallback;\n+import org.proton.plug.AMQPConnectionContext;\n+import org.proton.plug.AMQPSessionCallback;\n+import org.proton.plug.ServerSASL;\n+import org.proton.plug.exceptions.ActiveMQAMQPException;\n+import org.proton.plug.handler.EventHandler;\n+\n+public class AbstractConnectionContextTest\n+{\n+\n+   @Test\n+   public void testListenerDoesntThrowNPEWhenClosingLinkWithNullContext() throws Exception\n+   {\n+      TestConnectionContext connectionContext = new TestConnectionContext(new TestConnectionCallback());\n+      EventHandler listener = connectionContext.getListener();\n+\n+      Connection protonConnection = Connection.Factory.create();\n+      Session protonSession = protonConnection.session();\n+      Link link = protonSession.receiver(\"link\");\n+\n+      link.setContext(null);\n+\n+      listener.onRemoteClose(link);\n+   }\n+\n+   private class TestConnectionContext extends AbstractConnectionContext\n+   {\n+\n+      public TestConnectionContext(AMQPConnectionCallback connectionCallback)\n+      {\n+         super(connectionCallback);\n+      }\n+\n+      @Override\n+      protected void remoteLinkOpened(Link link) throws Exception\n+      {\n+\n+      }\n+\n+      @Override\n+      protected AbstractProtonSessionContext newSessionExtension(Session realSession) throws ActiveMQAMQPException\n+      {\n+         return null;\n+      }\n+\n+      public EventHandler getListener()\n+      {\n+         return listener;\n+      }\n+   }\n+\n+   private class TestConnectionCallback implements AMQPConnectionCallback\n+   {\n+      @Override\n+      public void close()\n+      {\n+\n+      }\n+\n+      @Override\n+      public void onTransport(ByteBuf bytes, AMQPConnectionContext connection)\n+      {\n+\n+      }\n+\n+      @Override\n+      public AMQPSessionCallback createSessionCallback(AMQPConnectionContext connection)\n+      {\n+         return null;\n+      }\n+\n+      @Override\n+      public void setConnection(AMQPConnectionContext connection)\n+      {\n+\n+      }\n+\n+      @Override\n+      public AMQPConnectionContext getConnection()\n+      {\n+         return null;\n+      }\n+\n+      @Override\n+      public ServerSASL[] getSASLMechnisms()\n+      {\n+         return null;\n+      }\n+   }\n+}",
                "changes": 114
            }
        ],
        "unit_tests": [
            "AbstractConnectionContextTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "activemq-protocols/activemq-proton-plug/src/test/java/org/proton/plug/context/AbstractConnectionContextTest.java",
        "buggy_files": [
            "activemq-protocols/activemq-proton-plug/src/main/java/org/proton/plug/context/AbstractConnectionContext.java"
        ],
        "fixed": true
    }
]