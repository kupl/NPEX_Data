[{"commit": "https://github.com/apache/dubbo-hessian-lite/commit/48fdbb0ee955fc542f9abe1df772f600a79bc09d", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/0d2781ea506986f866539248452a97c490cede2b", "message": "fix(AbstractProxyInvoker):fix NPE problem(#788)\n\nNPE bug fixed.", "bug_id": "dubbo-hessian-lite_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/48fdbb0ee955fc542f9abe1df772f600a79bc09d/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/proxy/AbstractProxyInvoker.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/48fdbb0ee955fc542f9abe1df772f600a79bc09d/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/proxy/AbstractProxyInvoker.java", "sha": "9369fbeb2cf3a15b097ff3b8f71e3217995e9557", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/proxy/AbstractProxyInvoker.java?ref=48fdbb0ee955fc542f9abe1df772f600a79bc09d", "patch": "@@ -81,8 +81,8 @@ public Result invoke(Invocation invocation) throws RpcException {\n \n     @Override\n     public String toString() {\n-        return getInterface() + \" -> \" + getUrl() == null ? \" \" : getUrl().toString();\n+        return getInterface() + \" -> \" + (getUrl() == null ? \" \" : getUrl().toString());\n     }\n \n \n-}\n\\ No newline at end of file\n+}", "filename": "dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/proxy/AbstractProxyInvoker.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/d03ff27bd0c2e77689bfe11f16f5e9276dc62081", "message": "    #1597: CacheFilter,when value is null,it will throw NPE(if use ehcache for jcache),why not check null here (#1828)", "bug_id": "dubbo-hessian-lite_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java", "sha": "e034cbbc96d5479d77b7aafa8d4fe021a606ac55", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java?ref=a6d8f1c5b20d30b3fe3206332d56bc6de1baa282", "patch": "@@ -52,7 +52,7 @@ public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcExcept\n                     return new RpcResult(value);\r\n                 }\r\n                 Result result = invoker.invoke(invocation);\r\n-                if (!result.hasException()) {\r\n+                if (!result.hasException() && result.getValue() != null) {\r\n                     cache.put(key, result.getValue());\r\n                 }\r\n                 return result;\r", "filename": "dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java"}, {"additions": 33, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java", "sha": "760605c9ab60495e77125bcb2dab6d0ca040b700", "changes": 33, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java?ref=a6d8f1c5b20d30b3fe3206332d56bc6de1baa282", "patch": "@@ -44,6 +44,8 @@\n     private Invoker<?> invoker = mock(Invoker.class);\n     private Invoker<?> invoker1 = mock(Invoker.class);\n     private Invoker<?> invoker2 = mock(Invoker.class);\n+    private Invoker<?> invoker3 = mock(Invoker.class);\n+    private Invoker<?> invoker4 = mock(Invoker.class);\n     private String cacheType;\n     private CacheFactory cacheFactory;\n \n@@ -77,6 +79,11 @@ public void setUp() throws Exception {\n         given(invoker2.invoke(invocation)).willReturn(new RpcResult(\"value2\"));\n         given(invoker2.getUrl()).willReturn(url);\n \n+        given(invoker3.invoke(invocation)).willReturn(new RpcResult(new RuntimeException()));\n+        given(invoker3.getUrl()).willReturn(url);\n+\n+        given(invoker4.invoke(invocation)).willReturn(new RpcResult());\n+        given(invoker4.getUrl()).willReturn(url);\n     }\n \n     @Test\n@@ -89,6 +96,7 @@ public void testNonArgsMethod() {\n         RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n         RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n         Assert.assertEquals(rpcResult1.getValue(), rpcResult2.getValue());\n+        Assert.assertEquals(rpcResult1.getValue(), \"value\");\n     }\n \n     @Test\n@@ -101,5 +109,30 @@ public void testMethodWithArgs() {\n         RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n         RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n         Assert.assertEquals(rpcResult1.getValue(), rpcResult2.getValue());\n+        Assert.assertEquals(rpcResult1.getValue(), \"value\");\n+    }\n+\n+    @Test\n+    public void testException() {\n+        invocation.setMethodName(\"echo1\");\n+        invocation.setParameterTypes(new Class<?>[]{String.class});\n+        invocation.setArguments(new Object[]{\"arg2\"});\n+\n+        cacheFilter.invoke(invoker3, invocation);\n+        RpcResult rpcResult = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n+        Assert.assertEquals(rpcResult.getValue(), \"value2\");\n+    }\n+\n+    @Test\n+    public void testNull() {\n+        invocation.setMethodName(\"echo1\");\n+        invocation.setParameterTypes(new Class<?>[]{String.class});\n+        invocation.setArguments(new Object[]{\"arg3\"});\n+\n+        cacheFilter.invoke(invoker4, invocation);\n+        RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n+        RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n+        Assert.assertEquals(rpcResult1.getValue(), \"value1\");\n+        Assert.assertEquals(rpcResult2.getValue(), \"value1\");\n     }\n }", "filename": "dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/d192720920a6d7096b6dc4c3b80b38c8177ff077", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/96a6db7f5cc7873fe7a3e714b24984fe852f1b15", "message": "Merge pull request #1118, fix hessian deserialization NPE problem for java.sql.Time.\n\nAdd null check for java.sql.Time.", "bug_id": "dubbo-hessian-lite_3", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/d192720920a6d7096b6dc4c3b80b38c8177ff077/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/d192720920a6d7096b6dc4c3b80b38c8177ff077/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java", "sha": "e75b21155445d00a1f6d2d3140aebc428800e36d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java?ref=d192720920a6d7096b6dc4c3b80b38c8177ff077", "patch": "@@ -621,7 +621,7 @@ void deserialize(AbstractHessianInput in, Object obj)\n \n             try {\n                 java.util.Date date = (java.util.Date) in.readObject();\n-                value = new java.sql.Time(date.getTime());\n+                if (date != null) value = new java.sql.Time(date.getTime());\n \n                 _field.set(obj, value);\n             } catch (Exception e) {", "filename": "hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/6b9452afb330194279e1998bc03a1159895c89e9", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/66139d567eef8198101368b5d8ea37458767cae4", "message": "avoid NPE when date is null", "bug_id": "dubbo-hessian-lite_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/6b9452afb330194279e1998bc03a1159895c89e9/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/6b9452afb330194279e1998bc03a1159895c89e9/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java", "sha": "6f448c140de0dd64f691d830f636be93e8974bfc", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java?ref=6b9452afb330194279e1998bc03a1159895c89e9", "patch": "@@ -601,7 +601,7 @@ void deserialize(AbstractHessianInput in, Object obj)\n \n       try {\n         java.util.Date date = (java.util.Date) in.readObject();\n-        value = new java.sql.Date(date.getTime());\n+        if (date != null) value = new java.sql.Date(date.getTime());\n \n         _field.set(obj, value);\n       } catch (Exception e) {", "filename": "hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/JavaDeserializer.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/aabcbc3bb97c52889175e9e7659158932429e928", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/933cacaa2368e518226d455c1d96ec55964caa75", "message": "Merge pull request from #775 from hollyshi:patch-2\n\nThe operator '+' has a higher operation priority than '?:'. A NPE will be thrown if getUrl() returns null, which is not expected.", "bug_id": "dubbo-hessian-lite_5", "file": [{"additions": 2, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/aabcbc3bb97c52889175e9e7659158932429e928/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/listener/ListenerInvokerWrapper.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/aabcbc3bb97c52889175e9e7659158932429e928/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/listener/ListenerInvokerWrapper.java", "sha": "e27c2b1a798aa4ec14d807da18771b4510bd5697", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/listener/ListenerInvokerWrapper.java?ref=aabcbc3bb97c52889175e9e7659158932429e928", "patch": "@@ -76,7 +76,7 @@ public Result invoke(Invocation invocation) throws RpcException {\n \r\n     @Override\r\n     public String toString() {\r\n-        return getInterface() + \" -> \" + getUrl() == null ? \" \" : getUrl().toString();\r\n+        return getInterface() + \" -> \" + (getUrl() == null ? \" \" : getUrl().toString());\r\n     }\r\n \r\n     public void destroy() {\r\n@@ -97,4 +97,4 @@ public void destroy() {\n         }\r\n     }\r\n \r\n-}\n\\ No newline at end of file\n+}\r", "filename": "dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/listener/ListenerInvokerWrapper.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/a55c10d7c5a819c80f4252299ea49dd20feeeb47", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/85310c7d674e0f0f0951c9a605e6dda37d7c262e", "message": "DUBBO-573 Version.getVersion\u51faNPE", "bug_id": "dubbo-hessian-lite_6", "file": [{"additions": 22, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/a55c10d7c5a819c80f4252299ea49dd20feeeb47/dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/a55c10d7c5a819c80f4252299ea49dd20feeeb47/dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java", "sha": "716426932e2b0c2a5b4a5721ec0157900ffc4756", "changes": 37, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java?ref=a55c10d7c5a819c80f4252299ea49dd20feeeb47", "patch": "@@ -16,6 +16,7 @@\n package com.alibaba.dubbo.common;\n \n import java.net.URL;\n+import java.security.CodeSource;\n import java.util.Enumeration;\n import java.util.HashSet;\n import java.util.Set;\n@@ -75,26 +76,32 @@ public static String getVersion(Class<?> cls, String defaultVersion) {\n             }\n             if (version == null || version.length() == 0) {\n                 // \u5982\u679c\u89c4\u8303\u4e2d\u6ca1\u6709\u7248\u672c\u53f7\uff0c\u57fa\u4e8ejar\u5305\u540d\u83b7\u53d6\u7248\u672c\u53f7\n-                String file = cls.getProtectionDomain().getCodeSource().getLocation().getFile();\n-                if (file != null && file.length() > 0 && file.endsWith(\".jar\")) {\n-                    file = file.substring(0, file.length() - 4);\n-                    int i = file.lastIndexOf('/');\n-                    if (i >= 0) {\n-                        file = file.substring(i + 1);\n-                    }\n-                    i = file.indexOf(\"-\");\n-                    if (i >= 0) {\n-                        file = file.substring(i + 1);\n-                    }\n-                    while (file.length() > 0 && ! Character.isDigit(file.charAt(0))) {\n+                CodeSource codeSource = cls.getProtectionDomain().getCodeSource();\n+                if(codeSource == null) {\n+                    logger.info(\"No codeSource for class \" + cls.getName() + \" when getVersion, use default version \" + defaultVersion);\n+                }\n+                else {\n+                    String file = codeSource.getLocation().getFile();\n+                    if (file != null && file.length() > 0 && file.endsWith(\".jar\")) {\n+                        file = file.substring(0, file.length() - 4);\n+                        int i = file.lastIndexOf('/');\n+                        if (i >= 0) {\n+                            file = file.substring(i + 1);\n+                        }\n                         i = file.indexOf(\"-\");\n                         if (i >= 0) {\n                             file = file.substring(i + 1);\n-                        } else {\n-                            break;\n                         }\n+                        while (file.length() > 0 && ! Character.isDigit(file.charAt(0))) {\n+                            i = file.indexOf(\"-\");\n+                            if (i >= 0) {\n+                                file = file.substring(i + 1);\n+                            } else {\n+                                break;\n+                            }\n+                        }\n+                        version = file;\n                     }\n-                    version = file;\n                 }\n             }\n             // \u8fd4\u56de\u7248\u672c\u53f7\uff0c\u5982\u679c\u4e3a\u7a7a\u8fd4\u56de\u7f3a\u7701\u7248\u672c\u53f7", "filename": "dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/49fbd32cd858759febfc166c20a2883a7d1b2df8", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/70cad53ff7a956b59bdfc44f2a80aa7979ee9c6f", "message": "DUBBO-54 fix NPE\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@982 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_7", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/49fbd32cd858759febfc166c20a2883a7d1b2df8/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/49fbd32cd858759febfc166c20a2883a7d1b2df8/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java", "sha": "65f243e7e15725ab80f83e827eb8906a8f72f893", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java?ref=49fbd32cd858759febfc166c20a2883a7d1b2df8", "patch": "@@ -104,7 +104,7 @@ public RegistryDirectory(Class<T> serviceType, URL url) {\n         this.serviceKey = url.getServiceKey();\r\n         this.queryMap = StringUtils.parseQueryString(url.getParameterAndDecoded(RpcConstants.REFER_KEY));\r\n         this.directoryUrl = url.removeParameter(RpcConstants.REFER_KEY).addParameters(queryMap);\r\n-        String group = directoryUrl.getParameter( Constants.GROUP_KEY );\r\n+        String group = directoryUrl.getParameter( Constants.GROUP_KEY, \"\" );\r\n         this.multiGroup = \"*\".equals(group) || group.contains( \",\" );\r\n     }\r\n \r", "filename": "dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/068a7d99e79b4ef3ff5d75342e2f847bd81f2c76", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/bb3fe6d19bbc1703ab3b578da23da2d4d3790ac0", "message": "DUBBO-48 accesslogFilter NPE\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@234 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_8", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/068a7d99e79b4ef3ff5d75342e2f847bd81f2c76/dubbo-rpc/src/main/java/com/alibaba/dubbo/rpc/filter/AccessLogFilter.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/068a7d99e79b4ef3ff5d75342e2f847bd81f2c76/dubbo-rpc/src/main/java/com/alibaba/dubbo/rpc/filter/AccessLogFilter.java", "sha": "a6ea17401b6ad835df3f7d987f55d51fefc09011", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-rpc/src/main/java/com/alibaba/dubbo/rpc/filter/AccessLogFilter.java?ref=068a7d99e79b4ef3ff5d75342e2f847bd81f2c76", "patch": "@@ -89,7 +89,7 @@ public void run() {\n                             Set<String> logSet = entry.getValue();\n                             File file = new File(accesslog);\n                             File dir = file.getParentFile();\n-                            if (! dir.exists()) {\n+                            if (null!=dir&&! dir.exists()) {\n                                 dir.mkdirs();\n                             }\n                             if (logger.isDebugEnabled()) {", "filename": "dubbo-rpc/src/main/java/com/alibaba/dubbo/rpc/filter/AccessLogFilter.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/c9b576fbefb087636c7c786a255eec9415d45260", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/d367af90496db43658c46f06c525b3eeeaf39bac", "message": "\u6dfb\u52a0\u9057\u6f0f@Extension\uff0cfix UT NPE\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@1016 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_9", "file": [{"additions": 2, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/c9b576fbefb087636c7c786a255eec9415d45260/dubbo-rpc-rmi/src/main/java/com/alibaba/dubbo/rpc/protocol/rmi/RmiProxyFactory.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/c9b576fbefb087636c7c786a255eec9415d45260/dubbo-rpc-rmi/src/main/java/com/alibaba/dubbo/rpc/protocol/rmi/RmiProxyFactory.java", "sha": "dd1cb5ad7a4026146c0e1dd2a391c9b6095409dd", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-rpc-rmi/src/main/java/com/alibaba/dubbo/rpc/protocol/rmi/RmiProxyFactory.java?ref=c9b576fbefb087636c7c786a255eec9415d45260", "patch": "@@ -17,6 +17,7 @@\n \r\n import java.rmi.Remote;\r\n \r\n+import com.alibaba.dubbo.common.Extension;\r\n import com.alibaba.dubbo.common.URL;\r\n import com.alibaba.dubbo.rpc.Invoker;\r\n \r\n@@ -25,6 +26,7 @@\n  * \r\n  * @author william.liangf\r\n  */\r\n+@Extension\r\n public interface RmiProxyFactory {\r\n \r\n     <T> Remote getProxy(Invoker<T> invoker);\r", "filename": "dubbo-rpc-rmi/src/main/java/com/alibaba/dubbo/rpc/protocol/rmi/RmiProxyFactory.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/b013e7bdf87bca5244b6602854ff7acf4820f4c4", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/6dbfb5c37e640a549e25a7b6fd2df9698bad5474", "message": "\u6dfb\u52a0null\u5224\u65ad\uff0c\u907f\u514dNPE\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@260 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/b013e7bdf87bca5244b6602854ff7acf4820f4c4/dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/b013e7bdf87bca5244b6602854ff7acf4820f4c4/dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java", "sha": "f48005f0720bba68a7ccbb3c0bc219ee187e47aa", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java?ref=b013e7bdf87bca5244b6602854ff7acf4820f4c4", "patch": "@@ -880,7 +880,7 @@ public String toParameterString(String... parameters) {\n \t}\r\n \t\r\n \tprivate void buildParameters(StringBuilder buf, boolean concat, String[] parameters) {\r\n-\t    if (getParameters().size() > 0) {\r\n+\t    if (getParameters() !=null && getParameters().size() > 0) {\r\n             List<String> includes = (parameters == null || parameters.length == 0 ? null : Arrays.asList(parameters));\r\n             boolean first = true;\r\n             for (Map.Entry<String, String> entry : new TreeMap<String, String>(getParameters()).entrySet()) {\r", "filename": "dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/12673832b1bce1655e07e8dc97e10fa09f59f52c", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/1aa17bca4a4650fb2078bf8e090408ba182f5702", "message": "DUBBO-11 NPE\u95ee\u9898\u89e3\u51b3.\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@109 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_11", "file": [{"additions": 11, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/12673832b1bce1655e07e8dc97e10fa09f59f52c/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/filter/FutureFilter.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/12673832b1bce1655e07e8dc97e10fa09f59f52c/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/filter/FutureFilter.java", "sha": "2530f8935f62e3f5015b0e858195af263253a5e0", "changes": 13, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/filter/FutureFilter.java?ref=12673832b1bce1655e07e8dc97e10fa09f59f52c", "patch": "@@ -70,8 +70,17 @@ private void asyncCallback(final Invoker<?> invoker, final Invocation invocation\n         if (f instanceof FutureAdapter) {\r\n             ResponseFuture future = ((FutureAdapter<?>)f).getFuture();\r\n             future.setCallback(new ResponseCallback() {\r\n-                public void done(Object response) {\r\n-                    Result result = (Result) response;\r\n+                public void done(Object rpcResult) {\r\n+                    if (rpcResult == null){\r\n+                        logger.error(new IllegalStateException(\"invalid result value : null, expected \"+Result.class.getName()));\r\n+                        return;\r\n+                    }\r\n+                    ///must be rpcResult\r\n+                    if (! (rpcResult instanceof Result)){\r\n+                        logger.error(new IllegalStateException(\"invalid result type :\" + rpcResult.getClass() + \", expected \"+Result.class.getName()));\r\n+                        return;\r\n+                    }\r\n+                    Result result = (Result) rpcResult;\r\n                     if (result.hasException()) {\r\n                         fireThrowCallback(invoker, invocation, result.getException());\r\n                     } else {\r", "filename": "dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/filter/FutureFilter.java"}], "repo": "dubbo-hessian-lite"}, {"commit": "https://github.com/apache/dubbo-hessian-lite/commit/1aa17bca4a4650fb2078bf8e090408ba182f5702", "parent": "https://github.com/apache/dubbo-hessian-lite/commit/59b36ef7de9a4c7f5f3824fb6207a2bfde5d963b", "message": "DUBBO-11 NPE\u95ee\u9898\u89e3\u51b3.\n\ngit-svn-id: http://code.alibabatech.com/svn/dubbo/trunk@108 1a56cb94-b969-4eaa-88fa-be21384802f2", "bug_id": "dubbo-hessian-lite_12", "file": [{"additions": 60, "raw_url": "https://github.com/apache/dubbo-hessian-lite/raw/1aa17bca4a4650fb2078bf8e090408ba182f5702/dubbo-remoting/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java", "blob_url": "https://github.com/apache/dubbo-hessian-lite/blob/1aa17bca4a4650fb2078bf8e090408ba182f5702/dubbo-remoting/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java", "sha": "25e4e2d52e7d7bd437d3c337990cbb536bfec437", "changes": 98, "status": "modified", "deletions": 38, "contents_url": "https://api.github.com/repos/apache/dubbo-hessian-lite/contents/dubbo-remoting/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java?ref=1aa17bca4a4650fb2078bf8e090408ba182f5702", "patch": "@@ -15,25 +15,25 @@\n  */\r\n package com.alibaba.dubbo.remoting.exchange.support;\n \n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.Condition;\n-import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantLock;\n-\n-import com.alibaba.dubbo.common.Constants;\n-import com.alibaba.dubbo.common.logger.Logger;\n-import com.alibaba.dubbo.common.logger.LoggerFactory;\n-import com.alibaba.dubbo.remoting.Channel;\n-import com.alibaba.dubbo.remoting.RemotingException;\n-import com.alibaba.dubbo.remoting.TimeoutException;\n-import com.alibaba.dubbo.remoting.exchange.ResponseCallback;\n-import com.alibaba.dubbo.remoting.exchange.ResponseFuture;\n-import com.alibaba.dubbo.remoting.exchange.Request;\n-import com.alibaba.dubbo.remoting.exchange.Response;\n+import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n+import java.util.Map;\r\n+import java.util.concurrent.ConcurrentHashMap;\r\n+import java.util.concurrent.TimeUnit;\r\n+import java.util.concurrent.locks.Condition;\r\n+import java.util.concurrent.locks.Lock;\r\n+import java.util.concurrent.locks.ReentrantLock;\r\n+\r\n+import com.alibaba.dubbo.common.Constants;\r\n+import com.alibaba.dubbo.common.logger.Logger;\r\n+import com.alibaba.dubbo.common.logger.LoggerFactory;\r\n+import com.alibaba.dubbo.remoting.Channel;\r\n+import com.alibaba.dubbo.remoting.RemotingException;\r\n+import com.alibaba.dubbo.remoting.TimeoutException;\r\n+import com.alibaba.dubbo.remoting.exchange.Request;\r\n+import com.alibaba.dubbo.remoting.exchange.Response;\r\n+import com.alibaba.dubbo.remoting.exchange.ResponseCallback;\r\n+import com.alibaba.dubbo.remoting.exchange.ResponseFuture;\r\n \n /**\n  * DefaultFuture.\n@@ -143,20 +143,53 @@ public void setCallback(ResponseCallback callback) {\n         }\n     }\r\n     private void invokeCallback(ResponseCallback c){\r\n-        if (c == null){\r\n+        ResponseCallback callbackCopy = c;\r\n+        if (callbackCopy == null){\r\n             throw new NullPointerException(\"callback cannot be null.\");\r\n         }\r\n-        ResponseCallback callbackCopy = c;\r\n         c = null;\r\n-        Object result = null;\r\n-        try {\r\n-            result = returnFromResponse();\r\n-        } catch (Throwable e) {\r\n-            callbackCopy.caught(e);\r\n+        Response res = response;\r\n+        if (res == null) {\r\n+            throw new IllegalStateException(\"response cannot be null. url:\"+channel.getUrl());\r\n+        }\r\n+        \r\n+        if (res.getStatus() == Response.OK) {\r\n+            try {\r\n+                callbackCopy.done(res.getResult());\r\n+            } catch (Exception e) {\r\n+                logger.error(\"callback invoke error .reasult:\" + res.getResult() + \",url:\" + channel.getUrl(), e);\r\n+            }\r\n+        } else if (res.getStatus() == Response.CLIENT_TIMEOUT || res.getStatus() == Response.SERVER_TIMEOUT) {\r\n+            try {\r\n+                TimeoutException te = new TimeoutException(res.getStatus() == Response.SERVER_TIMEOUT, channel, res.getErrorMessage());\r\n+                callbackCopy.caught(te);\r\n+            } catch (Exception e) {\r\n+                logger.error(\"callback invoke error ,url:\" + channel.getUrl(), e);\r\n+            }\r\n+        } else {\r\n+            try {\r\n+                RuntimeException re = new RuntimeException(res.getErrorMessage());\r\n+                callbackCopy.caught(re);\r\n+            } catch (Exception e) {\r\n+                logger.error(\"callback invoke error ,url:\" + channel.getUrl(), e);\r\n+            }\r\n         }\r\n-        callbackCopy.done(result);\r\n     }\n \n+    private Object returnFromResponse() throws RemotingException {\r\n+        Response res = response;\r\n+        if (res == null) {\r\n+            throw new IllegalStateException(\"response cannot be null\");\r\n+        }\r\n+        if (res.getStatus() == Response.OK) {\r\n+            return res.getResult();\r\n+        }\r\n+        if (res.getStatus() == Response.CLIENT_TIMEOUT || res.getStatus() == Response.SERVER_TIMEOUT) {\r\n+            throw new TimeoutException(res.getStatus() == Response.SERVER_TIMEOUT, channel, res.getErrorMessage());\r\n+        }\r\n+        throw new RemotingException(channel, res.getErrorMessage());\r\n+    }\r\n+\r\n     private long getId() {\n         return id;\n     }\n@@ -228,17 +261,6 @@ private void doReceived(Response res) {\n         }\n     }\n \n-    private Object returnFromResponse() throws RemotingException {\n-        Response res = response;\n-        if (res.getStatus() == Response.OK) {\n-            return response.getResult();\n-        }\n-        if (res.getStatus() == Response.CLIENT_TIMEOUT || res.getStatus() == Response.SERVER_TIMEOUT) {\n-            throw new TimeoutException(res.getStatus() == Response.SERVER_TIMEOUT, channel, res.getErrorMessage());\n-        }\n-        throw new RemotingException(channel, res.getErrorMessage());\n-    }\n-    \n     private String getTimeoutMessage(boolean scan) {\n         long nowTimestamp = System.currentTimeMillis();\n         return (sent > 0 ? \"Waiting server-side response timeout\" : \"Sending request timeout in client-side\")", "filename": "dubbo-remoting/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java"}], "repo": "dubbo-hessian-lite"}]
