[{"commit": "https://github.com/apache/cayenne/commit/a206d11be983c1ec1557f39c0de292d1b0a02eb0", "parent": "https://github.com/apache/cayenne/commit/dca7e03afc152a9073e24aa58f441d0b4aab88bc", "message": "CAY-2617 NPE in processing hierarchical prefetch node\n - process null case", "bug_id": "cayenne_1", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/a206d11be983c1ec1557f39c0de292d1b0a02eb0/cayenne-server/src/main/java/org/apache/cayenne/access/ObjectResolver.java", "blob_url": "https://github.com/apache/cayenne/blob/a206d11be983c1ec1557f39c0de292d1b0a02eb0/cayenne-server/src/main/java/org/apache/cayenne/access/ObjectResolver.java", "sha": "c04d0822e2a547d157b585a5d6bce56866947f85", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/ObjectResolver.java?ref=a206d11be983c1ec1557f39c0de292d1b0a02eb0", "patch": "@@ -290,12 +290,11 @@ public final ClassDescriptor descriptorForRow(DataRow row) {\n \n \t\t\t// null either means a bug in Cayenne (e.g. CAY-2101) or the inheritance qualifiers are messed up\n \t\t\tif(entityName == null) {\n-\n \t\t\t\tif(LOGGER.isWarnEnabled()) {\n-\t\t\t\t\tLOGGER.warn(\"** Null entity name for DataRow, can't resolve sub descriptor for \"\n-\t\t\t\t\t\t\t+ descriptor.getEntity().getName());\n-\t\t\t\t\treturn descriptor;\n+\t\t\t\t\tLOGGER.warn(\"** Null entity name for DataRow, can't resolve sub descriptor for {}\",\n+\t\t\t\t\t\t\tdescriptor.getEntity().getName());\n \t\t\t\t}\n+\t\t\t\treturn descriptor;\n \t\t\t}\n \n \t\t\treturn context.getEntityResolver().getClassDescriptor(entityName);", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/ObjectResolver.java"}, {"additions": 2, "raw_url": "https://github.com/apache/cayenne/raw/a206d11be983c1ec1557f39c0de292d1b0a02eb0/cayenne-server/src/main/java/org/apache/cayenne/access/PrefetchProcessorJointNode.java", "blob_url": "https://github.com/apache/cayenne/blob/a206d11be983c1ec1557f39c0de292d1b0a02eb0/cayenne-server/src/main/java/org/apache/cayenne/access/PrefetchProcessorJointNode.java", "sha": "ccf8a461fce646281d54d7c1dd459ccb3d37ff85", "changes": 6, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/PrefetchProcessorJointNode.java?ref=a206d11be983c1ec1557f39c0de292d1b0a02eb0", "patch": "@@ -139,12 +139,10 @@ DataRow rowFromFlatRow(DataRow flatRow) {\n             row.put(column.getName(), flatRow.get(column.getDataRowKey()));\n         }\n \n-        // since JDBC row reader won't inject JOINED entity name, we have to\n-        // detect it here...\n-\n+        // since JDBC row reader won't inject JOINED entity name, we have to detect it here...\n         ClassDescriptor descriptor = resolver.getDescriptor();\n         ObjEntity entity = descriptor.getEntityInheritanceTree().entityMatchingRow(row);\n-        row.setEntityName(entity.getName());\n+        row.setEntityName(entity == null ? null : entity.getName());\n         return row;\n     }\n ", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/PrefetchProcessorJointNode.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/7e89e91a4ea3f2784a97813666dc15e0cfb9a20b", "parent": "https://github.com/apache/cayenne/commit/efc3834458874e42f60dd347c797f21200ccdd1e", "message": "CAY-2608 CayenneModeler: NPE when reverse engineering with an auto-adapter DataSource", "bug_id": "cayenne_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/7e89e91a4ea3f2784a97813666dc15e0cfb9a20b/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java", "blob_url": "https://github.com/apache/cayenne/blob/7e89e91a4ea3f2784a97813666dc15e0cfb9a20b/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java", "sha": "3b6d773a54ed483ccf3842e6b5d9f0679f85c049", "changes": 5, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java?ref=7e89e91a4ea3f2784a97813666dc15e0cfb9a20b", "patch": "@@ -123,10 +123,7 @@ private boolean datamapPrefNotExist() {\n         Preferences dataMapPreference = getProjectController().\n                 getDataMapPreferences(getProjectController().getCurrentDataMap())\n                 .getCurrentPreference();\n-        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null ||\n-                dataMapPreference.get(USER_NAME_PROPERTY, null) == null ||\n-                dataMapPreference.get(PASSWORD_PROPERTY, null) == null ||\n-                dataMapPreference.get(JDBC_DRIVER_PROPERTY, null) == null;\n+        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null;\n     }\n \n     private DBConnectionInfo getConnectionInfoFromPreferences() {", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/7e89e91a4ea3f2784a97813666dc15e0cfb9a20b/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java", "blob_url": "https://github.com/apache/cayenne/blob/7e89e91a4ea3f2784a97813666dc15e0cfb9a20b/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java", "sha": "3798f2ca104b08710f6a979fb1ace2b556ae60d9", "changes": 5, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java?ref=7e89e91a4ea3f2784a97813666dc15e0cfb9a20b", "patch": "@@ -178,10 +178,7 @@ private boolean datamapPrefNotExist() {\n         Preferences dataMapPreference = getProjectController().\n                 getDataMapPreferences(getProjectController().getCurrentDataMap())\n                 .getCurrentPreference();\n-        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null ||\n-                dataMapPreference.get(USER_NAME_PROPERTY, null) == null ||\n-                dataMapPreference.get(PASSWORD_PROPERTY, null) == null ||\n-                dataMapPreference.get(JDBC_DRIVER_PROPERTY, null) == null;\n+        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null;\n     }\n \n     private void runLoaderInThread(final DbLoaderContext context, final Runnable callback) {", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/efc3834458874e42f60dd347c797f21200ccdd1e", "parent": "https://github.com/apache/cayenne/commit/dc088800eab47bd6b8a34144ef051d6f8c155879", "message": "CAY-2608 CayenneModeler: NPE when reverse engineering with an auto-adapter DataSource", "bug_id": "cayenne_3", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/RELEASE-NOTES.txt", "sha": "f806fc9b163ccca8c72612912b9b7b3f488b2df4", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -79,6 +79,7 @@ CAY-2600 Modeler DbImport: Can't retrieve schema for databases with no catalog s\n CAY-2601 Modeler DbImport: result dialog issues\n CAY-2603 NPE reloading project in the model\n CAY-2605 Modeler: Unable to save - java.nio.file.InvalidPathException\n+CAY-2608 CayenneModeler: NPE when reverse engineering with an auto-adapter DataSource\n \n ----------------------------------\n Release: 4.1.B1", "filename": "RELEASE-NOTES.txt"}, {"additions": 2, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/cayenne-server/src/main/java/org/apache/cayenne/dba/AutoAdapter.java", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/cayenne-server/src/main/java/org/apache/cayenne/dba/AutoAdapter.java", "sha": "7c856f0779921bd94facd32b568fa6f4f314b2fc", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/dba/AutoAdapter.java?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -22,7 +22,6 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n import java.util.function.Function;\n \n@@ -256,11 +255,11 @@ public EJBQLTranslatorFactory getEjbqlTranslatorFactory() {\n \n \t@Override\n \tpublic List<String> getSystemCatalogs() {\n-\t\treturn Collections.emptyList();\n+\t\treturn getAdapter().getSystemCatalogs();\n \t}\n \n \t@Override\n \tpublic List<String> getSystemSchemas() {\n-\t\treturn Collections.emptyList();\n+\t\treturn getAdapter().getSystemSchemas();\n \t}\n }", "filename": "cayenne-server/src/main/java/org/apache/cayenne/dba/AutoAdapter.java"}, {"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/GetDbConnectionAction.java", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/GetDbConnectionAction.java", "sha": "2e83a27b5e8aadd2b44e7d0cd221982aefe80b94", "changes": 12, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/GetDbConnectionAction.java?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -19,19 +19,19 @@\n \n package org.apache.cayenne.modeler.action;\n \n+import java.awt.event.ActionEvent;\n+import java.util.Collection;\n+\n import org.apache.cayenne.modeler.Application;\n import org.apache.cayenne.modeler.dialog.db.DataSourceWizard;\n import org.apache.cayenne.modeler.dialog.db.DbActionOptionsDialog;\n import org.apache.cayenne.modeler.pref.DataMapDefaults;\n \n-import java.awt.event.ActionEvent;\n-import java.util.Collection;\n-\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.DB_ADAPTER_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.JDBC_DRIVER_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.PASSWORD_PROPERTY;\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.URL_PROPERTY;\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.USER_NAME_PROPERTY;\n-import static org.apache.cayenne.modeler.pref.DBConnectionInfo.PASSWORD_PROPERTY;\n-import static org.apache.cayenne.modeler.pref.DBConnectionInfo.JDBC_DRIVER_PROPERTY;\n \n /**\n  * @since 4.1\n@@ -69,6 +69,8 @@ public void performAction(final ActionEvent e) {\n \n         if (connectWizard.getConnectionInfo().getDbAdapter() != null) {\n             dataMapDefaults.getCurrentPreference().put(DB_ADAPTER_PROPERTY, connectWizard.getConnectionInfo().getDbAdapter());\n+        } else {\n+            dataMapDefaults.getCurrentPreference().remove(DB_ADAPTER_PROPERTY);\n         }\n         dataMapDefaults.getCurrentPreference().put(URL_PROPERTY, connectWizard.getConnectionInfo().getUrl());\n         dataMapDefaults.getCurrentPreference().put(USER_NAME_PROPERTY, connectWizard.getConnectionInfo().getUserName());", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/GetDbConnectionAction.java"}, {"additions": 16, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java", "sha": "df85e6ad1f55aaeeac806508d49831d874679e0e", "changes": 22, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -22,6 +22,7 @@\n import javax.swing.JOptionPane;\n import javax.swing.tree.TreePath;\n import java.awt.event.ActionEvent;\n+import java.util.prefs.Preferences;\n \n import org.apache.cayenne.dbsync.reverse.dbimport.ReverseEngineering;\n import org.apache.cayenne.modeler.Application;\n@@ -73,7 +74,7 @@ public void performAction(ActionEvent e, TreePath tablePath) {\n             draggableTreePanel.getMoveInvertButton().setEnabled(false);\n             try {\n                 DBConnectionInfo connectionInfo;\n-                if (!datamapPreferencesExist()) {\n+                if (datamapPrefNotExist()) {\n                     final DataSourceWizard connectWizard = new DataSourceWizard(getProjectController(), \"Load Db Schema\");\n                     if (!connectWizard.startupAction()) {\n                         return;\n@@ -118,10 +119,14 @@ public void performAction(ActionEvent e, TreePath tablePath) {\n         thread.start();\n     }\n \n-    private boolean datamapPreferencesExist() {\n-        DataMapDefaults dataMapDefaults = getProjectController().\n-                getDataMapPreferences(getProjectController().getCurrentDataMap());\n-        return dataMapDefaults.getCurrentPreference().get(DB_ADAPTER_PROPERTY, null) != null;\n+    private boolean datamapPrefNotExist() {\n+        Preferences dataMapPreference = getProjectController().\n+                getDataMapPreferences(getProjectController().getCurrentDataMap())\n+                .getCurrentPreference();\n+        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null ||\n+                dataMapPreference.get(USER_NAME_PROPERTY, null) == null ||\n+                dataMapPreference.get(PASSWORD_PROPERTY, null) == null ||\n+                dataMapPreference.get(JDBC_DRIVER_PROPERTY, null) == null;\n     }\n \n     private DBConnectionInfo getConnectionInfoFromPreferences() {\n@@ -139,7 +144,12 @@ private DBConnectionInfo getConnectionInfoFromPreferences() {\n     private void saveConnectionInfo(DataSourceWizard connectWizard) {\n         DataMapDefaults dataMapDefaults = getProjectController().\n                 getDataMapPreferences(getProjectController().getCurrentDataMap());\n-        dataMapDefaults.getCurrentPreference().put(DB_ADAPTER_PROPERTY, connectWizard.getConnectionInfo().getDbAdapter());\n+        String dbAdapter = connectWizard.getConnectionInfo().getDbAdapter();\n+        if(dbAdapter != null) {\n+            dataMapDefaults.getCurrentPreference().put(DB_ADAPTER_PROPERTY, connectWizard.getConnectionInfo().getDbAdapter());\n+        } else {\n+            dataMapDefaults.getCurrentPreference().remove(DB_ADAPTER_PROPERTY);\n+        }\n         dataMapDefaults.getCurrentPreference().put(URL_PROPERTY, connectWizard.getConnectionInfo().getUrl());\n         dataMapDefaults.getCurrentPreference().put(USER_NAME_PROPERTY, connectWizard.getConnectionInfo().getUserName());\n         dataMapDefaults.getCurrentPreference().put(PASSWORD_PROPERTY, connectWizard.getConnectionInfo().getPassword());", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/LoadDbSchemaAction.java"}, {"additions": 30, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java", "sha": "bf3f316d7b361f89051071bb079f08cd64d70f43", "changes": 46, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -19,6 +19,16 @@\n \n package org.apache.cayenne.modeler.action;\n \n+import javax.swing.JOptionPane;\n+import javax.swing.SwingUtilities;\n+import java.awt.event.ActionEvent;\n+import java.sql.SQLException;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.prefs.Preferences;\n+\n import org.apache.cayenne.map.DataMap;\n import org.apache.cayenne.modeler.Application;\n import org.apache.cayenne.modeler.ProjectController;\n@@ -32,16 +42,11 @@\n import org.apache.cayenne.modeler.pref.DBConnectionInfo;\n import org.apache.cayenne.modeler.pref.DataMapDefaults;\n \n-import javax.swing.JOptionPane;\n-import javax.swing.SwingUtilities;\n-import java.awt.event.ActionEvent;\n-import java.sql.SQLException;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.concurrent.atomic.AtomicInteger;\n-\n-import static org.apache.cayenne.modeler.pref.DBConnectionInfo.*;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.DB_ADAPTER_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.JDBC_DRIVER_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.PASSWORD_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.URL_PROPERTY;\n+import static org.apache.cayenne.modeler.pref.DBConnectionInfo.USER_NAME_PROPERTY;\n \n /**\n  * Action that imports database structure into a DataMap.\n@@ -82,7 +87,7 @@ public void performAction(Set<DataMap> dataMapSet) {\n     private void startImport(){\n         final DbLoaderContext context = new DbLoaderContext(application.getMetaData());\n         DBConnectionInfo connectionInfo;\n-        if (!datamapPreferencesExist()) {\n+        if (datamapPrefNotExist()) {\n             final DataSourceWizard connectWizard = dataSourceWizardDialog(DIALOG_TITLE);\n             if (connectWizard == null) {\n                 return;\n@@ -157,17 +162,26 @@ private DBConnectionInfo getConnectionInfoFromPreferences() {\n     private void saveConnectionInfo(DataSourceWizard connectWizard) {\n         DataMapDefaults dataMapDefaults = getProjectController().\n                 getDataMapPreferences(getProjectController().getCurrentDataMap());\n-        dataMapDefaults.getCurrentPreference().put(DB_ADAPTER_PROPERTY, connectWizard.getConnectionInfo().getDbAdapter());\n+        String dbAdapter = connectWizard.getConnectionInfo().getDbAdapter();\n+        if(dbAdapter != null) {\n+            dataMapDefaults.getCurrentPreference().put(DB_ADAPTER_PROPERTY, dbAdapter);\n+        } else {\n+            dataMapDefaults.getCurrentPreference().remove(DB_ADAPTER_PROPERTY);\n+        }\n         dataMapDefaults.getCurrentPreference().put(URL_PROPERTY, connectWizard.getConnectionInfo().getUrl());\n         dataMapDefaults.getCurrentPreference().put(USER_NAME_PROPERTY, connectWizard.getConnectionInfo().getUserName());\n         dataMapDefaults.getCurrentPreference().put(PASSWORD_PROPERTY, connectWizard.getConnectionInfo().getPassword());\n         dataMapDefaults.getCurrentPreference().put(JDBC_DRIVER_PROPERTY, connectWizard.getConnectionInfo().getJdbcDriver());\n     }\n \n-    private boolean datamapPreferencesExist() {\n-        DataMapDefaults dataMapDefaults = getProjectController().\n-                getDataMapPreferences(getProjectController().getCurrentDataMap());\n-        return dataMapDefaults.getCurrentPreference().get(DB_ADAPTER_PROPERTY, null) != null;\n+    private boolean datamapPrefNotExist() {\n+        Preferences dataMapPreference = getProjectController().\n+                getDataMapPreferences(getProjectController().getCurrentDataMap())\n+                .getCurrentPreference();\n+        return dataMapPreference == null || dataMapPreference.get(URL_PROPERTY, null) == null ||\n+                dataMapPreference.get(USER_NAME_PROPERTY, null) == null ||\n+                dataMapPreference.get(PASSWORD_PROPERTY, null) == null ||\n+                dataMapPreference.get(JDBC_DRIVER_PROPERTY, null) == null;\n     }\n \n     private void runLoaderInThread(final DbLoaderContext context, final Runnable callback) {", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ReverseEngineeringAction.java"}, {"additions": 12, "raw_url": "https://github.com/apache/cayenne/raw/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/db/DataSourceWizard.java", "blob_url": "https://github.com/apache/cayenne/blob/efc3834458874e42f60dd347c797f21200ccdd1e/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/db/DataSourceWizard.java", "sha": "4070b5a2055119eb4a38e2195e8fd024de9d4a60", "changes": 24, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/db/DataSourceWizard.java?ref=efc3834458874e42f60dd347c797f21200ccdd1e", "patch": "@@ -19,6 +19,17 @@\n \n package org.apache.cayenne.modeler.dialog.db;\n \n+import javax.sql.DataSource;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.JOptionPane;\n+import javax.swing.WindowConstants;\n+import java.awt.Component;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.prefs.Preferences;\n+\n import org.apache.cayenne.dba.DbAdapter;\n import org.apache.cayenne.modeler.ClassLoadingService;\n import org.apache.cayenne.modeler.ProjectController;\n@@ -33,17 +44,6 @@\n import org.apache.cayenne.swing.BindingBuilder;\n import org.apache.cayenne.swing.ObjectBinding;\n \n-import javax.sql.DataSource;\n-import javax.swing.DefaultComboBoxModel;\n-import javax.swing.JOptionPane;\n-import javax.swing.WindowConstants;\n-import java.awt.Component;\n-import java.sql.Connection;\n-import java.sql.SQLException;\n-import java.util.Arrays;\n-import java.util.Map;\n-import java.util.prefs.Preferences;\n-\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.DB_ADAPTER_PROPERTY;\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.JDBC_DRIVER_PROPERTY;\n import static org.apache.cayenne.modeler.pref.DBConnectionInfo.PASSWORD_PROPERTY;\n@@ -53,7 +53,7 @@\n /**\n  * A subclass of ConnectionWizard that tests configured DataSource, but does not\n  * keep an open connection.\n- * \n+ *\n  */\n public class DataSourceWizard extends CayenneController {\n ", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/db/DataSourceWizard.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/c4d0ddc71b397873f7b32e10fe9c179a3c3da664", "parent": "https://github.com/apache/cayenne/commit/360057366ce5788b677d80d300730033148fc20c", "message": "CAY-2603 NPE reloading project in the model", "bug_id": "cayenne_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/c4d0ddc71b397873f7b32e10fe9c179a3c3da664/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/c4d0ddc71b397873f7b32e10fe9c179a3c3da664/RELEASE-NOTES.txt", "sha": "022aa801911a35371f7047b88aedefaf33557f11", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=c4d0ddc71b397873f7b32e10fe9c179a3c3da664", "patch": "@@ -76,6 +76,7 @@ CAY-2594 DbImport: AutoAdapter resolving inside an import operation hangs up the\n CAY-2595 ObjAttributes are not sorted in alphabetical ordering on save\n CAY-2596 DbImport xml config changes after dbImport plugin task execution\n CAY-2601 Modeler DbImport: result dialog issues\n+CAY-2603 NPE reloading project in the model\n \n ----------------------------------\n Release: 4.1.B1", "filename": "RELEASE-NOTES.txt"}, {"additions": 8, "raw_url": "https://github.com/apache/cayenne/raw/c4d0ddc71b397873f7b32e10fe9c179a3c3da664/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/cgen/CodeGeneratorControllerBase.java", "blob_url": "https://github.com/apache/cayenne/blob/c4d0ddc71b397873f7b32e10fe9c179a3c3da664/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/cgen/CodeGeneratorControllerBase.java", "sha": "1bc398720a1f52f57c05cf8931f2b6d487eb31f4", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/cgen/CodeGeneratorControllerBase.java?ref=c4d0ddc71b397873f7b32e10fe9c179a3c3da664", "patch": "@@ -19,8 +19,10 @@\n \n package org.apache.cayenne.modeler.editor.cgen;\n \n-import javax.swing.*;\n-import java.awt.*;\n+import javax.swing.Icon;\n+import javax.swing.JLabel;\n+import javax.swing.JOptionPane;\n+import java.awt.Component;\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -80,6 +82,9 @@ public CodeGeneratorControllerBase(CayenneController parent, ProjectController p\n         this.selectedEntitiesForDataMap = new HashMap<>();\n         this.selectedEmbeddablesForDataMap = new HashMap<>();\n         this.selectedDataMaps = new HashMap<>();\n+        this.selectedEntities = new HashSet<>();\n+        this.selectedEmbeddables = new HashSet<>();\n+        this.isDataMapSelected = new HashSet<>();\n     }\n \n     public void startup(DataMap dataMap){\n@@ -287,7 +292,7 @@ public String getProblem(Object obj) {\n         else if (obj instanceof Embeddable) {\n             name = ((Embeddable) obj).getClassName();\n         }\n-        \n+\n         if (validation == null) {\n             return null;\n         }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/cgen/CodeGeneratorControllerBase.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/56d11983ede65c1dc9ce27c4a062f9fbe2330573", "parent": "https://github.com/apache/cayenne/commit/0cff591a809e1e0722c93a906e6a1ab653a149c9", "message": "Optimistic locking - Fix NPE when locking on a null value for a to-one relationship", "bug_id": "cayenne_5", "file": [{"additions": 4, "raw_url": "https://github.com/apache/cayenne/raw/56d11983ede65c1dc9ce27c4a062f9fbe2330573/cayenne-server/src/main/java/org/apache/cayenne/access/flush/OptimisticLockQualifierBuilder.java", "blob_url": "https://github.com/apache/cayenne/blob/56d11983ede65c1dc9ce27c4a062f9fbe2330573/cayenne-server/src/main/java/org/apache/cayenne/access/flush/OptimisticLockQualifierBuilder.java", "sha": "fa3bdb37a4c8a60ba749308e3b6a04c85974c1f9", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/flush/OptimisticLockQualifierBuilder.java?ref=56d11983ede65c1dc9ce27c4a062f9fbe2330573", "patch": "@@ -70,8 +70,11 @@ public boolean visitToOne(ToOneProperty property) {\n             for(DbJoin join : dbRelationship.getJoins()) {\n                 DbAttribute source = join.getSource();\n                 if(!source.isPrimaryKey()) {\n+                    Object valueObjectId = value != null \n+                        ? ObjectIdValueSupplier.getFor(value, join.getTargetName()) \n+                        : null;\n                     dbRow.getQualifier()\n-                            .addAdditionalQualifier(source, ObjectIdValueSupplier.getFor(value, join.getTargetName()), true);\n+                            .addAdditionalQualifier(source, valueObjectId, true);\n                 }\n             }\n         }", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/flush/OptimisticLockQualifierBuilder.java"}, {"additions": 20, "raw_url": "https://github.com/apache/cayenne/raw/56d11983ede65c1dc9ce27c4a062f9fbe2330573/cayenne-server/src/test/java/org/apache/cayenne/access/OptimisticLockingIT.java", "blob_url": "https://github.com/apache/cayenne/blob/56d11983ede65c1dc9ce27c4a062f9fbe2330573/cayenne-server/src/test/java/org/apache/cayenne/access/OptimisticLockingIT.java", "sha": "14b623c8e0500a17834ff82944d392f3913f85ec", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/OptimisticLockingIT.java?ref=56d11983ede65c1dc9ce27c4a062f9fbe2330573", "patch": "@@ -440,6 +440,26 @@ public void testSuccessLockingOnMixed() throws Exception {\n         // this requires refactoring of ContextCommit.\n     }\n \n+    @Test\n+    public void testSuccessLockingOnToOneNull() throws Exception {\n+        createLockingOnToOneDataSet();\n+\n+        List<RelLockingTestEntity> allObjects = new SelectQuery<>(\n+                RelLockingTestEntity.class).select(context);\n+        assertEquals(1, allObjects.size());\n+\n+        RelLockingTestEntity object = allObjects.get(0);\n+\n+        // set to-one relationship to null and save\n+        SimpleLockingTestEntity object1 = object.getToSimpleLockingTest();\n+        object.setToSimpleLockingTest(null);\n+        context.commitChanges();\n+\n+        // change to-one relationship to non-null and save... should lock on null value\n+        object.setToSimpleLockingTest(object1);\n+        context.commitChanges();\n+    }\n+    \n     @Test\n     public void testFailLockingOnToOne() throws Exception {\n         createLockingOnToOneDataSet();", "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/OptimisticLockingIT.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/c93531476d70e4236ed6e67f87442543db2420d0", "parent": "https://github.com/apache/cayenne/commit/37b1ea9b1cab3d6f62525690f0ae79d49bdfd116", "message": "Fix NPE", "bug_id": "cayenne_6", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/c93531476d70e4236ed6e67f87442543db2420d0/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java", "blob_url": "https://github.com/apache/cayenne/blob/c93531476d70e4236ed6e67f87442543db2420d0/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java", "sha": "1ad568318dc418a4ee37dfee83acf7419f8e8255", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java?ref=c93531476d70e4236ed6e67f87442543db2420d0", "patch": "@@ -100,7 +100,7 @@ protected void enterPressed(JTable table) {\n \n                     //we need object target to save it in model\n                     DbEntity lastEntity = ((DbRelationship) currentNode).getTargetEntity();\n-                    if(lastEntity == null) {\n+                    if(lastEntity != null) {\n                         Collection<ObjEntity> objEntities = ((DbRelationship) currentNode).getTargetEntity().\n                                 getDataMap().getMappedEntities(lastEntity);\n                         ObjEntity objectTarget = objEntities.isEmpty() ? null : objEntities.iterator().next();", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/37b1ea9b1cab3d6f62525690f0ae79d49bdfd116", "parent": "https://github.com/apache/cayenne/commit/feafb1b542c87dca1723fd2a05178982c4b02ba5", "message": "Fix NPE", "bug_id": "cayenne_7", "file": [{"additions": 23, "raw_url": "https://github.com/apache/cayenne/raw/37b1ea9b1cab3d6f62525690f0ae79d49bdfd116/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java", "blob_url": "https://github.com/apache/cayenne/blob/37b1ea9b1cab3d6f62525690f0ae79d49bdfd116/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java", "sha": "b79e68d63c5781e1ffb4260e2b135bc5602de82d", "changes": 32, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java?ref=37b1ea9b1cab3d6f62525690f0ae79d49bdfd116", "patch": "@@ -22,9 +22,11 @@\n import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.map.DbRelationship;\n import org.apache.cayenne.map.ObjEntity;\n+import org.apache.cayenne.modeler.Application;\n import org.apache.cayenne.modeler.editor.ObjRelationshipTableModel;\n \n import javax.swing.JLabel;\n+import javax.swing.JOptionPane;\n import javax.swing.JTable;\n import javax.swing.text.JTextComponent;\n import java.awt.Component;\n@@ -98,12 +100,14 @@ protected void enterPressed(JTable table) {\n \n                     //we need object target to save it in model\n                     DbEntity lastEntity = ((DbRelationship) currentNode).getTargetEntity();\n-                    Collection<ObjEntity> objEntities = ((DbRelationship) currentNode).getTargetEntity().\n-                            getDataMap().getMappedEntities(lastEntity);\n-                    ObjEntity objectTarget = objEntities.isEmpty() ? null : objEntities.iterator().next();\n-                    model.getRelationship(row).setTargetEntityName(objectTarget);\n-                    model.setUpdatedValueAt(dbRelationshipPath, row, REL_TARGET_PATH_COLUMN);\n-                    model.getRelationship(row).setDbRelationshipPath(dbRelationshipPath);\n+                    if(lastEntity == null) {\n+                        Collection<ObjEntity> objEntities = ((DbRelationship) currentNode).getTargetEntity().\n+                                getDataMap().getMappedEntities(lastEntity);\n+                        ObjEntity objectTarget = objEntities.isEmpty() ? null : objEntities.iterator().next();\n+                        model.getRelationship(row).setTargetEntityName(objectTarget);\n+                        model.setUpdatedValueAt(dbRelationshipPath, row, REL_TARGET_PATH_COLUMN);\n+                        model.getRelationship(row).setDbRelationshipPath(dbRelationshipPath);\n+                    }\n                     model.getRelationship(row).setMapKey(null);\n                 }\n                 table.repaint();\n@@ -154,17 +158,21 @@ protected String getPathToInitializeCombo(CayenneTableModel model, int row) {\n         return pathString.replaceAll(lastStringInPath + '$', \"\");\n     }\n \n-    private void changeObjEntity(String path){\n+    private boolean changeObjEntity(String path){\n         Object currentNode = getCurrentNode(path);\n         if (currentNode instanceof DbEntity){\n-            return;\n+            return false;\n         }\n         DbEntity lastEntity = ((DbRelationship) currentNode).getTargetEntity();\n+        if(lastEntity == null) {\n+            return false;\n+        }\n         Collection<ObjEntity> objEntities = ((DbRelationship) currentNode).getTargetEntity().\n                 getDataMap().getMappedEntities(lastEntity);\n         ObjEntity objectTarget = objEntities.isEmpty() ? null : objEntities.iterator().next();\n         model.getRelationship(row).setTargetEntityName(objectTarget);\n         table.repaint();\n+        return true;\n     }\n \n     @Override\n@@ -174,6 +182,12 @@ public void focusGained(FocusEvent focusEvent) {\n     @Override\n     public void focusLost(FocusEvent focusEvent) {\n         String path = model.getRelationship(row).getDbRelationshipPath();\n-        changeObjEntity(path);\n+        if(!changeObjEntity(path)) {\n+            JOptionPane.showMessageDialog(\n+                    Application.getFrame(),\n+                    \"Can't set dbAttribute path. At first set target entity in dbEntity.\",\n+                    \"Error\",\n+                    JOptionPane.ERROR_MESSAGE);\n+        }\n     }\n }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/DbRelationshipPathComboBoxEditor.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/feafb1b542c87dca1723fd2a05178982c4b02ba5", "parent": "https://github.com/apache/cayenne/commit/adcbf1322b4ae1af24ed772d28f1645c18153ba4", "message": "Fix NPE", "bug_id": "cayenne_8", "file": [{"additions": 5, "raw_url": "https://github.com/apache/cayenne/raw/feafb1b542c87dca1723fd2a05178982c4b02ba5/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjAttributeInfoDialog.java", "blob_url": "https://github.com/apache/cayenne/blob/feafb1b542c87dca1723fd2a05178982c4b02ba5/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjAttributeInfoDialog.java", "sha": "46ff9b0460f2cf99f1733e026149f3b0cad7b2d0", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjAttributeInfoDialog.java?ref=feafb1b542c87dca1723fd2a05178982c4b02ba5", "patch": "@@ -61,6 +61,7 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n \n public class ObjAttributeInfoDialog extends CayenneController implements TreeSelectionListener {\n \n@@ -411,9 +412,10 @@ public boolean isChange() {\n \n \t\tboolean isOverrideTableChange = ((OverrideEmbeddableAttributeTableModel) view.getOverrideAttributeTable()\n \t\t\t\t.getModel()).isAttributeOverrideChange();\n-\t\treturn isOverrideTableChange || !attribute.getName().equals(view.getAttributeName().getText())\n-\t\t\t\t|| (attribute.getType() == null && view.getTypeComboBox().getSelectedItem().toString() != null)\n-\t\t\t\t|| !attribute.getType().equals(view.getTypeComboBox().getSelectedItem().toString());\n+\t\treturn isOverrideTableChange\n+\t\t\t\t|| !attribute.getName().equals(view.getAttributeName().getText())\n+\t\t\t\t|| (attribute.getType() == null && view.getTypeComboBox().getSelectedItem() != null)\n+\t\t\t\t|| !Objects.equals(attribute.getType(), view.getTypeComboBox().getSelectedItem());\n \t}\n \n \tpublic void saveMapping() {", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjAttributeInfoDialog.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/872f231a1984033771867628b1e4f660dfec2b28", "parent": "https://github.com/apache/cayenne/commit/57361b635f58afe0f06c332f8f57449dd2963836", "message": "CAY-2436 NPE in CayenneRuntimeException constructor", "bug_id": "cayenne_9", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/RELEASE-NOTES.txt", "sha": "3806615e348c704318fc4fc7b2500ee5c4ddfae6", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=872f231a1984033771867628b1e4f660dfec2b28", "patch": "@@ -59,6 +59,7 @@ CAY-2425 Modeler: Migrate DB Direction field is locked if no option was selected\n CAY-2427 Modeler: Undo throws exception\n CAY-2429 Generate classes: Invalid template type: EMBEDDABLE_SINGLE_CLASS\n CAY-2430 Modeler: Redo throws NPE\n+CAY-2436 NPE in CayenneRuntimeException constructor\n \n ----------------------------------\n Release: 4.1.M1", "filename": "RELEASE-NOTES.txt"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java", "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java", "sha": "135b50ce2b9e6495186b1408028dca2638be2a79", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java?ref=872f231a1984033771867628b1e4f660dfec2b28", "patch": "@@ -37,7 +37,7 @@ public CayenneRuntimeException() {\n      * conventions.\n      */\n     public CayenneRuntimeException(String messageFormat, Object... messageArgs) {\n-        super(String.format(messageFormat, messageArgs));\n+        super(messageFormat == null ? null : String.format(messageFormat, messageArgs));\n     }\n \n     /**", "filename": "cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java"}, {"additions": 23, "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java", "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java", "sha": "0e60ecfc17b09137bfeadee488a83510a60b564e", "changes": 33, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java?ref=872f231a1984033771867628b1e4f660dfec2b28", "patch": "@@ -29,26 +29,24 @@\n import static org.junit.Assert.assertSame;\n import static org.junit.Assert.assertTrue;\n \n-/**\n- */\n public class CayenneRuntimeExceptionTest {\n \n     @Test\n-    public void testConstructor1() throws Exception {\n+    public void testConstructor1() {\n         CayenneRuntimeException ex = new CayenneRuntimeException();\n         assertNull(ex.getCause());\n         assertTrue(ex.getMessage().startsWith(CayenneException.getExceptionLabel()));\n     }\n \n     @Test\n-    public void testConstructor2() throws Exception {\n+    public void testConstructor2() {\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"abc\");\n         assertNull(ex.getCause());\n         assertEquals(CayenneException.getExceptionLabel() + \"abc\", ex.getMessage());\n     }\n \n     @Test\n-    public void testConstructor3() throws Exception {\n+    public void testConstructor3() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(cause);\n         assertSame(cause, ex.getCause());\n@@ -58,15 +56,30 @@ public void testConstructor3() throws Exception {\n     }\n \n     @Test\n-    public void testConstructor4() throws Exception {\n+    public void testConstructor4() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"abc\", cause);\n         assertSame(cause, ex.getCause());\n         assertEquals(CayenneException.getExceptionLabel() + \"abc\", ex.getMessage());\n     }\n \n     @Test\n-    public void testThrow1() throws Exception {\n+    public void testConstructorNullMessage() {\n+        Throwable cause = new Throwable();\n+\n+        CayenneRuntimeException ex = new CayenneRuntimeException(null, cause);\n+        assertSame(cause, ex.getCause());\n+        assertEquals(CayenneException.getExceptionLabel() + \"(no message)\", ex.getMessage());\n+        assertNull(ex.getUnlabeledMessage());\n+\n+        CayenneRuntimeException ex2 = new CayenneRuntimeException((String)null);\n+        assertNull(ex2.getCause());\n+        assertEquals(CayenneException.getExceptionLabel() + \"(no message)\", ex2.getMessage());\n+        assertNull(ex2.getUnlabeledMessage());\n+    }\n+\n+    @Test\n+    public void testThrow1() {\n         try {\n             throw new CayenneRuntimeException();\n         }\n@@ -77,7 +90,7 @@ public void testThrow1() throws Exception {\n     }\n \n     @Test\n-    public void testThrow2() throws Exception {\n+    public void testThrow2() {\n         try {\n             try {\n                 throw new Throwable(\"Test Cause\");\n@@ -93,13 +106,13 @@ public void testThrow2() throws Exception {\n     }\n \n     @Test\n-    public void testMessageFormatting1() throws Exception {\n+    public void testMessageFormatting1() {\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"x%sx%sx\", \"a\", \"b\");\n         assertEquals(\"xaxbx\", ex.getUnlabeledMessage());\n     }\n \n     @Test\n-    public void testMessageFormatting2() throws Exception {\n+    public void testMessageFormatting2() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"x%sx%sx\", cause, \"a\", \"b\");\n         assertEquals(\"xaxbx\", ex.getUnlabeledMessage());", "filename": "cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/bd8f5c0013d8976507f946d4fa60018ba6fe6e3a", "parent": "https://github.com/apache/cayenne/commit/739d02ed5f143148b4437894febfc3ede9aff7d8", "message": "Fix NPE", "bug_id": "cayenne_10", "file": [{"additions": 4, "raw_url": "https://github.com/apache/cayenne/raw/bd8f5c0013d8976507f946d4fa60018ba6fe6e3a/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/DefaultSelectTranslator.java", "blob_url": "https://github.com/apache/cayenne/blob/bd8f5c0013d8976507f946d4fa60018ba6fe6e3a/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/DefaultSelectTranslator.java", "sha": "b48329e7b116d158e0870228260346f3a45494c8", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/DefaultSelectTranslator.java?ref=bd8f5c0013d8976507f946d4fa60018ba6fe6e3a", "patch": "@@ -261,6 +261,10 @@ protected void doTranslate() {\n \t * Warn user in case query uses both limit and joint prefetch, as we don't support this combination.\n \t */\n \tprivate void checkLimitAndJointPrefetch() {\n+\t\tif(queryMetadata.getPrefetchTree() == null) {\n+\t\t\treturn;\n+\t\t}\n+\n \t\tif(queryMetadata.getFetchLimit() == 0 && queryMetadata.getFetchOffset() == 0) {\n \t\t\treturn;\n \t\t}", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/DefaultSelectTranslator.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/fed6bcb95dba8f0bfed1a24dff4375ad9618eb9a", "parent": "https://github.com/apache/cayenne/commit/07611d930163d346bedb596cf9b6d8e0d1d65625", "message": "CAY-2430 Modeler: Redo throws NPE\n  release notes", "bug_id": "cayenne_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/fed6bcb95dba8f0bfed1a24dff4375ad9618eb9a/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/fed6bcb95dba8f0bfed1a24dff4375ad9618eb9a/RELEASE-NOTES.txt", "sha": "f8b777f0e03d969054c27ee4fe191c6b3e26152f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=fed6bcb95dba8f0bfed1a24dff4375ad9618eb9a", "patch": "@@ -35,7 +35,6 @@ CAY-2414 Modeler: new icon design\n CAY-2415 Transaction isolation and propagation support\n CAY-2416 Change TreeMap for HashMap to store data in Cayenne model classes\n CAY-2422 Modeler: Open driver setup window on driver load error\n-CAY-2430 Modeler: Redo throws NPE\n \n Bug Fixes:\n \n@@ -57,6 +56,7 @@ CAY-2420 Modeler: search is not performed for Stored Procedures\n CAY-2425 Modeler: Migrate DB Direction field is locked if no option was selected in dropdown list\n CAY-2427 Modeler: Undo throws exception\n CAY-2429 Generate classes: Invalid template type: EMBEDDABLE_SINGLE_CLASS\n+CAY-2430 Modeler: Redo throws NPE\n \n ----------------------------------\n Release: 4.1.M1", "filename": "RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed", "parent": "https://github.com/apache/cayenne/commit/d2fb2de463a19a0e00f076547d3a7f630505ba9b", "message": "CAY-2430\n\nFixed NPE on redo delete procedure action.", "bug_id": "cayenne_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed/RELEASE-NOTES.txt", "sha": "99cc9611118ce413297528e5a39348b8e945c424", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed", "patch": "@@ -35,6 +35,7 @@ CAY-2414 Modeler: new icon design\n CAY-2415 Transaction isolation and propagation support\n CAY-2416 Change TreeMap for HashMap to store data in Cayenne model classes\n CAY-2422 Modeler: Open driver setup window on driver load error\n+CAY-2430 Modeler: Redo throws NPE\n \n Bug Fixes:\n ", "filename": "RELEASE-NOTES.txt"}, {"additions": 2, "raw_url": "https://github.com/apache/cayenne/raw/cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/undo/RemoveUndoableEdit.java", "blob_url": "https://github.com/apache/cayenne/blob/cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/undo/RemoveUndoableEdit.java", "sha": "fe662b25f73ba3f8216cfd472942ee7fb4537298", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/undo/RemoveUndoableEdit.java?ref=cf2a1a060444a3717bf8c8f1d1dee1163e5dbbed", "patch": "@@ -211,6 +211,7 @@ public void redo() throws CannotRedoException {\n                 break;\n             case PROCEDURE:\n                 action.removeProcedure(map, procedure);\n+                break;\n             case MAP_FROM_NODE:\n                 action.removeDataMapFromDataNode(dataNode, map);\n                 break;\n@@ -222,6 +223,7 @@ public void redo() throws CannotRedoException {\n                 break;\n             case EMBEDDABLE:\n                 action.removeEmbeddable(map, embeddable);\n+                break;\n         }\n     }\n ", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/undo/RemoveUndoableEdit.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/240c815501851d1b7a287ab04114eb04a3b07ae6", "parent": "https://github.com/apache/cayenne/commit/319e589709f5378b41d7d3a4ec683bdf0f3c8276", "message": "Fix NPE in cgen task when looking up templates in classpath", "bug_id": "cayenne_13", "file": [{"additions": 5, "raw_url": "https://github.com/apache/cayenne/raw/240c815501851d1b7a287ab04114eb04a3b07ae6/cayenne-cgen/src/main/java/org/apache/cayenne/gen/ClassGeneratorResourceLoader.java", "blob_url": "https://github.com/apache/cayenne/blob/240c815501851d1b7a287ab04114eb04a3b07ae6/cayenne-cgen/src/main/java/org/apache/cayenne/gen/ClassGeneratorResourceLoader.java", "sha": "add72c463ef347122fe0e21c314a44234e2f9c41", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-cgen/src/main/java/org/apache/cayenne/gen/ClassGeneratorResourceLoader.java?ref=240c815501851d1b7a287ab04114eb04a3b07ae6", "patch": "@@ -23,6 +23,7 @@\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.FileReader;\n+import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.io.Reader;\n \n@@ -94,10 +95,12 @@ protected Reader loadFromAbsPath(String name) {\n     }\n \n     protected Reader loadFromThreadClassLoader(String name) {\n-        return new InputStreamReader(Thread.currentThread().getContextClassLoader().getResourceAsStream(name));\n+    \tInputStream stream = Thread.currentThread().getContextClassLoader().getResourceAsStream(name);\n+        return stream != null ? new InputStreamReader(stream) : null;\n     }\n \n     protected Reader loadFromThisClassLoader(String name) {\n-        return new InputStreamReader(getClass().getClassLoader().getResourceAsStream(name));\n+    \tInputStream stream = getClass().getClassLoader().getResourceAsStream(name);\n+        return stream != null ? new InputStreamReader(stream) : null;\n     }\n }", "filename": "cayenne-cgen/src/main/java/org/apache/cayenne/gen/ClassGeneratorResourceLoader.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/5cbb4f0891a55a9c48206582e8142d90d6f72b5b", "parent": "https://github.com/apache/cayenne/commit/29ef71cd6ad72a80c9e1ef5a0b11b4a85dbb2586", "message": "CAY-2401 Modeler: NPE in ObjEntity sync action", "bug_id": "cayenne_14", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/5cbb4f0891a55a9c48206582e8142d90d6f72b5b/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/5cbb4f0891a55a9c48206582e8142d90d6f72b5b/RELEASE-NOTES.txt", "sha": "a41b2210e33b47a92a8e6ac203dc9f2432844cec", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=5cbb4f0891a55a9c48206582e8142d90d6f72b5b", "patch": "@@ -32,6 +32,7 @@ CAY-2388 Modeler: Visualization issues with undo/redo actions for attributes and\n CAY-2389 DbEntity qualifier with DbPath expression translates into wrong SQL\n CAY-2392 Modeler: Unable to remove DataNode\n CAY-2397 Modeler: Unable to set enum:value as Entity qualifier\n+CAY-2401 Modeler: NPE in ObjEntity sync action\n \n ----------------------------------\n Release: 4.1.M1", "filename": "RELEASE-NOTES.txt"}, {"additions": 17, "raw_url": "https://github.com/apache/cayenne/raw/5cbb4f0891a55a9c48206582e8142d90d6f72b5b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/context/EntityMergeSupport.java", "blob_url": "https://github.com/apache/cayenne/blob/5cbb4f0891a55a9c48206582e8142d90d6f72b5b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/context/EntityMergeSupport.java", "sha": "0b405d1e9c5bb044a5ca5b735675f36740ce2808", "changes": 17, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/context/EntityMergeSupport.java?ref=5cbb4f0891a55a9c48206582e8142d90d6f72b5b", "patch": "@@ -429,6 +429,23 @@ private boolean isSameAttributes(Collection<DbAttribute> collection1, Collection\n         for(int i=0; i<collection1.size(); i++) {\n             DbAttribute attr1 = iterator1.next();\n             DbAttribute attr2 = iterator2.next();\n+            // attribute can be null, see DbJoin.getSource() and DbJoin.getTarget()\n+            if(attr1 == null) {\n+                if(attr2 != null) {\n+                    return false;\n+                }\n+                continue;\n+            }\n+            if(attr2 == null) {\n+                return false;\n+            }\n+            // name is unlikely to be null, but we don't want NPE anyway\n+            if(attr1.getName() == null) {\n+                if(attr2.getName() != null) {\n+                    return false;\n+                }\n+                continue;\n+            }\n             if(!attr1.getName().equals(attr2.getName())) {\n                 return false;\n             }", "filename": "cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/context/EntityMergeSupport.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/65ebda996b5dff7b9887a45fc1d5c5759192f8e3", "parent": "https://github.com/apache/cayenne/commit/8452d41def3796502d297456043d97822665e3b3", "message": "CAY-2358 NPE when callbacks invoked on null objects", "bug_id": "cayenne_15", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java", "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java", "sha": "fd044a63408e74adb8a08578ceeaf5ecd6f50cdc", "changes": 16, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3", "patch": "@@ -20,7 +20,6 @@\n \n import org.apache.cayenne.Persistent;\n import org.apache.cayenne.map.EntityResolver;\n-import org.apache.cayenne.map.ObjEntity;\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n@@ -111,21 +110,20 @@ void addListener(Class<?> entityClass, Object listener, Method method) {\n      * Registers a callback object to be invoked when a lifecycle event occurs.\n      */\n     private void addCallback(Class<?> entityClass, AbstractCallback callback) {\n-        Collection<AbstractCallback> entityListeners = listeners.get(entityClass\n-                .getName());\n-\n-        if (entityListeners == null) {\n-            entityListeners = new ArrayList<>(3);\n-            listeners.put(entityClass.getName(), entityListeners);\n-        }\n-\n+        Collection<AbstractCallback> entityListeners = listeners\n+                .computeIfAbsent(entityClass.getName(), k -> new ArrayList<>(3));\n         entityListeners.add(callback);\n     }\n \n     /**\n      * Invokes callbacks for a given entity object.\n      */\n     void performCallbacks(Persistent object) {\n+        if(object == null) {\n+            // this can happen if object resolved to null from some query with outer join\n+            // (e.g. in EJBQL or SQLTemplate)\n+            return;\n+        }\n \n         // default listeners are invoked first\n         if (!defaultListeners.isEmpty()) {", "filename": "cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java"}, {"additions": 29, "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java", "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java", "sha": "a760f3c91468540c20f9d78ea72556a3b54b1b45", "changes": 29, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3", "patch": "@@ -28,6 +28,8 @@\n import org.apache.cayenne.exp.Expression;\n import org.apache.cayenne.map.EJBQLQueryDescriptor;\n import org.apache.cayenne.map.EntityResolver;\n+import org.apache.cayenne.map.LifecycleEvent;\n+import org.apache.cayenne.reflect.LifecycleCallbackRegistry;\n import org.apache.cayenne.test.jdbc.DBHelper;\n import org.apache.cayenne.test.jdbc.TableHelper;\n import org.apache.cayenne.testdo.testmap.Artist;\n@@ -645,4 +647,31 @@ public void testNullObjects() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testNullObjectsCallback() throws Exception {\n+        tArtist.insert(1, \"a1\");\n+        tArtist.insert(2, \"a2\");\n+        tArtist.insert(3, \"a3\");\n+\n+        tPainting.insert(1, 2, \"title1\");\n+        tPainting.insert(2, 1, \"title2\");\n+        tPainting.insert(3, 1, \"title3\");\n+\n+        // set callback to be called\n+        LifecycleCallbackRegistry registry = runtime\n+                .getDataDomain()\n+                .getEntityResolver()\n+                .getCallbackRegistry();\n+        registry.addCallback(LifecycleEvent.POST_LOAD, Painting.class, \"postAddCallback\");\n+\n+        // select Paintings, where one of it will be null\n+        EJBQLQuery queryFullProduct = new EJBQLQuery(\"select a.paintingArray+ from Artist a order by a.artistName\");\n+        List<Painting> result1 = context.performQuery(queryFullProduct);\n+        assertEquals(4, result1.size());\n+        assertNull(result1.get(3));\n+        for(int i=0; i<3; i++) {\n+            assertNotNull(result1.get(i));\n+            assertTrue(result1.get(i).isPostAdded());\n+        }\n+    }\n }", "filename": "cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "d80050a6238b528a68414242fa345e9cd20142fb", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3", "patch": "@@ -38,6 +38,7 @@ CAY-2353 Broken paginated column select with only one entity in the result\n CAY-2354 DbGenerator.runGenerator must commit its connection\n CAY-2356 EJBQL: Incorrect COUNT() on outer joined table\n CAY-2357 Generic select queries silently convert result to nulls if no PK column found\n+CAY-2358 NPE when callbacks invoked on null objects\n \n ----------------------------------\n Release: 4.0.B1", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/03e7024fc2be8a31cf2052e2bdbae1f4bc50a07a", "parent": "https://github.com/apache/cayenne/commit/dd1745ca858acc9772c5a4190fbe75e01ef5f6f2", "message": "CAY-2229 NPE in Modeler find action", "bug_id": "cayenne_16", "file": [{"additions": 25, "raw_url": "https://github.com/apache/cayenne/raw/03e7024fc2be8a31cf2052e2bdbae1f4bc50a07a/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/FindAction.java", "blob_url": "https://github.com/apache/cayenne/blob/03e7024fc2be8a31cf2052e2bdbae1f4bc50a07a/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/FindAction.java", "sha": "5470f30b79e8ad32d1e5c4d2931524e401ba6da7", "changes": 38, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/FindAction.java?ref=03e7024fc2be8a31cf2052e2bdbae1f4bc50a07a", "patch": "@@ -19,11 +19,13 @@\n package org.apache.cayenne.modeler.action;\n \n import org.apache.cayenne.configuration.DataChannelDescriptor;\n+import org.apache.cayenne.dbsync.reverse.dbload.DbRelationshipDetected;\n import org.apache.cayenne.map.Attribute;\n import org.apache.cayenne.map.DataMap;\n import org.apache.cayenne.map.DbAttribute;\n import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.map.DbRelationship;\n+import org.apache.cayenne.map.DetectedDbEntity;\n import org.apache.cayenne.map.Embeddable;\n import org.apache.cayenne.map.EmbeddableAttribute;\n import org.apache.cayenne.map.Entity;\n@@ -56,6 +58,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.regex.Pattern;\n \n public class FindAction extends CayenneAction {\n@@ -65,15 +68,17 @@\n      */\n     private static final Map<Class<?>, Integer> PRIORITY_BY_TYPE = new HashMap<>();\n     static {\n-        PRIORITY_BY_TYPE.put(ObjEntity.class,          1);\n-        PRIORITY_BY_TYPE.put(DbEntity.class,           2);\n-        PRIORITY_BY_TYPE.put(ObjAttribute.class,       5);\n-        PRIORITY_BY_TYPE.put(DbAttribute.class,        6);\n-        PRIORITY_BY_TYPE.put(ObjRelationship.class,    7);\n-        PRIORITY_BY_TYPE.put(DbRelationship.class,     8);\n-        PRIORITY_BY_TYPE.put(QueryDescriptor.class,    9);\n-        PRIORITY_BY_TYPE.put(Embeddable.class,         10);\n-        PRIORITY_BY_TYPE.put(EmbeddableAttribute.class,11);\n+        PRIORITY_BY_TYPE.put(ObjEntity.class,              1);\n+        PRIORITY_BY_TYPE.put(DbEntity.class,               2);\n+        PRIORITY_BY_TYPE.put(DetectedDbEntity.class,       2); // this one comes from db reverse engineering\n+        PRIORITY_BY_TYPE.put(ObjAttribute.class,           5);\n+        PRIORITY_BY_TYPE.put(DbAttribute.class,            6);\n+        PRIORITY_BY_TYPE.put(ObjRelationship.class,        7);\n+        PRIORITY_BY_TYPE.put(DbRelationship.class,         8);\n+        PRIORITY_BY_TYPE.put(DbRelationshipDetected.class, 8); // this one comes from db reverse engineering\n+        PRIORITY_BY_TYPE.put(QueryDescriptor.class,        9);\n+        PRIORITY_BY_TYPE.put(Embeddable.class,            10);\n+        PRIORITY_BY_TYPE.put(EmbeddableAttribute.class,   11);\n     }\n \n     public static String getActionName() {\n@@ -322,8 +327,8 @@ private static TreePath buildAndSelectTreePath(DataMap map, Object object, Edito\n         private final String name;\n \n         public SearchResultEntry(Object object, String name) {\n-            this.object = object;\n-            this.name = name;\n+            this.object = Objects.requireNonNull(object);\n+            this.name = Objects.requireNonNull(name);\n         }\n \n         public String getName() {\n@@ -349,10 +354,17 @@ public int hashCode() {\n             return result;\n         }\n \n+        private int getPriority() {\n+            Integer priority = PRIORITY_BY_TYPE.get(object.getClass());\n+            if(priority == null) {\n+                throw new NullPointerException(\"Unknown type: \" + object.getClass().getCanonicalName());\n+            }\n+            return priority;\n+        }\n+\n         @Override\n         public int compareTo(SearchResultEntry o) {\n-            int res = PRIORITY_BY_TYPE.get(getObject().getClass())\n-                    - PRIORITY_BY_TYPE.get(o.getObject().getClass());\n+            int res = getPriority() - o.getPriority();\n             if(res != 0) {\n                 return res;\n             }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/FindAction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/47d5eaa022a42740127be5fef9cb7710a3948412", "parent": "https://github.com/apache/cayenne/commit/29428fcb57630241fa58dc6afdb9371016612ad9", "message": "CAY-2202 NPE closing the project", "bug_id": "cayenne_17", "file": [{"additions": 8, "raw_url": "https://github.com/apache/cayenne/raw/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/AttributeDisplayEventType.java", "blob_url": "https://github.com/apache/cayenne/blob/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/AttributeDisplayEventType.java", "sha": "54ce52b0ed1c1e4d1b36508aa8b9415eedbb711e", "changes": 17, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/AttributeDisplayEventType.java?ref=47d5eaa022a42740127be5fef9cb7710a3948412", "patch": "@@ -35,7 +35,7 @@\n \n class AttributeDisplayEventType extends EntityDisplayEventType {\n \n-    public AttributeDisplayEventType(ProjectController controller) {\n+    AttributeDisplayEventType(ProjectController controller) {\n         super(controller);\n     }\n \n@@ -90,18 +90,17 @@ public void saveLastDisplayEvent() {\n     }\n \n     protected Attribute[] getLastEntityAttributes(Entity entity) {\n-        List<Attribute> attributeList = new ArrayList<Attribute>();\n-        Attribute[] attributes = new Attribute[0];\n-\n-        String attrs = (entity instanceof ObjEntity)\n-                ? preferences.getObjAttrs()\n-                : preferences.getDbAttrs();\n+        List<Attribute> attributeList = new ArrayList<>();\n \n+        String attrs = (entity instanceof ObjEntity) ? preferences.getObjAttrs() : preferences.getDbAttrs();\n         for (String attrName : attrs.split(\",\")) {\n-            attributeList.add(entity.getAttribute(attrName));\n+            Attribute attr = entity.getAttribute(attrName);\n+            if(attr != null) {\n+                attributeList.add(attr);\n+            }\n         }\n \n-        return attributeList.toArray(attributes);\n+        return attributeList.toArray(new Attribute[0]);\n     }\n \n }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/AttributeDisplayEventType.java"}, {"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/DisplayEventType.java", "blob_url": "https://github.com/apache/cayenne/blob/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/DisplayEventType.java", "sha": "27e4789aa133d3dd287d7f0ebc31a7417b21ebdb", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/DisplayEventType.java?ref=47d5eaa022a42740127be5fef9cb7710a3948412", "patch": "@@ -67,6 +67,9 @@ protected String parseToString(CayenneMapEntry[] array) {\n \n         StringBuilder sb = new StringBuilder();\n         for (CayenneMapEntry entry : array) {\n+            if(entry == null) {\n+                continue;\n+            }\n             sb.append(entry.getName()).append(\",\");\n         }\n ", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/DisplayEventType.java"}, {"additions": 2, "raw_url": "https://github.com/apache/cayenne/raw/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/EntityDisplayEventType.java", "blob_url": "https://github.com/apache/cayenne/blob/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/EntityDisplayEventType.java", "sha": "c57a76fed13661d898f94f734a144b010fca057e", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/EntityDisplayEventType.java?ref=47d5eaa022a42740127be5fef9cb7710a3948412", "patch": "@@ -30,7 +30,7 @@\n \n class EntityDisplayEventType extends DisplayEventType {\n \n-    public EntityDisplayEventType(ProjectController controller) {\n+    EntityDisplayEventType(ProjectController controller) {\n         super(controller);\n     }\n \n@@ -76,7 +76,7 @@ public void saveLastDisplayEvent() {\n         }\n     }\n \n-    protected Entity getLastEntity(DataMap dataMap) {\n+    Entity getLastEntity(DataMap dataMap) {\n         return !preferences.getObjEntity().isEmpty()\n                 ? dataMap.getObjEntity(preferences.getObjEntity())\n                 : dataMap.getDbEntity(preferences.getDbEntity());", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/EntityDisplayEventType.java"}, {"additions": 9, "raw_url": "https://github.com/apache/cayenne/raw/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/RelationshipDisplayEventType.java", "blob_url": "https://github.com/apache/cayenne/blob/47d5eaa022a42740127be5fef9cb7710a3948412/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/RelationshipDisplayEventType.java", "sha": "e166231ba12a3af54c0566e91cad468058907809", "changes": 19, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/RelationshipDisplayEventType.java?ref=47d5eaa022a42740127be5fef9cb7710a3948412", "patch": "@@ -35,7 +35,7 @@\n \n class RelationshipDisplayEventType extends EntityDisplayEventType {\n \n-    public RelationshipDisplayEventType(ProjectController controller) {\n+    RelationshipDisplayEventType(ProjectController controller) {\n         super(controller);\n     }\n \n@@ -89,19 +89,18 @@ public void saveLastDisplayEvent() {\n         }\n     }\n \n-    protected Relationship[] getLastEntityRelationships(Entity entity) {\n-        List<Relationship> relationshipList = new ArrayList<Relationship>();\n-        Relationship[] relationships = new Relationship[0];\n-\n-        String rels = (entity instanceof ObjEntity)\n-                ? preferences.getObjRels()\n-                : preferences.getDbRels();\n+    private Relationship[] getLastEntityRelationships(Entity entity) {\n+        List<Relationship> relationshipList = new ArrayList<>();\n \n+        String rels = (entity instanceof ObjEntity) ? preferences.getObjRels() : preferences.getDbRels();\n         for (String objRelName : rels.split(\",\")) {\n-            relationshipList.add(entity.getRelationship(objRelName));\n+            Relationship rel = entity.getRelationship(objRelName);\n+            if(rel != null) {\n+                relationshipList.add(rel);\n+            }\n         }\n \n-        return relationshipList.toArray(relationships);\n+        return relationshipList.toArray(new Relationship[0]);\n     }\n \n }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/util/state/RelationshipDisplayEventType.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075", "parent": "https://github.com/apache/cayenne/commit/627a67334ca8da09ffc5ed22920b227ae2c97ff3", "message": "NPE in BaseSchemaUpdateStrategy", "bug_id": "cayenne_18", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java", "blob_url": "https://github.com/apache/cayenne/blob/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java", "sha": "d1f22cefc5cc357c39182bcc1c7a0395e8864f63", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java?ref=4bd2cad0c06c4d444b51f5417b9bfb22aefe2075", "patch": "@@ -80,7 +80,7 @@ protected void processSchemaUpdate(DataNode dataNode) throws SQLException {\n                 public void run() {\n                     try {\n                         strategy.updateSchema(dataNode);\n-                    } catch (SQLException e) {\n+                    } catch (Throwable e) {\n                         LOGGER.error(\"error in test\", e);\n                         errors.set(true);\n                     }", "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/416c3699b0cf4513ebf0047fc6f83335a48f91e5", "parent": "https://github.com/apache/cayenne/commit/5708e3530cbbea0b3c39739e71e9713f54d6dad5", "message": "NPE in BaseSchemaUpdateStrategy", "bug_id": "cayenne_19", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/416c3699b0cf4513ebf0047fc6f83335a48f91e5/cayenne-server/src/main/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy.java", "blob_url": "https://github.com/apache/cayenne/blob/416c3699b0cf4513ebf0047fc6f83335a48f91e5/cayenne-server/src/main/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy.java", "sha": "47460bb79841cbf293957c26331780c1df4106a4", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy.java?ref=416c3699b0cf4513ebf0047fc6f83335a48f91e5", "patch": "@@ -30,20 +30,20 @@\n public abstract class BaseSchemaUpdateStrategy implements SchemaUpdateStrategy {\n \n     protected volatile boolean run;\n-    protected volatile ThreadLocal<Boolean> threadRunInProgress;\n+    protected final ThreadLocal<Boolean> threadRunInProgress;\n \n     public BaseSchemaUpdateStrategy() {\n \n         // this barrier is needed to prevent stack overflow in the same thread\n         // (getConnection/updateSchema/getConnection/...)\n         this.threadRunInProgress = new ThreadLocal<>();\n-        this.threadRunInProgress.set(false);\n     }\n \n     @Override\n     public void updateSchema(DataNode dataNode) throws SQLException {\n \n-        if (!run && !threadRunInProgress.get()) {\n+        Boolean inProgress = threadRunInProgress.get();\n+        if (!run && (inProgress == null || !inProgress)) {\n             synchronized (this) {\n                 if (!run) {\n ", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/fb4db81d2808b2baced1d0a1417ce3e8cdc0435e", "parent": "https://github.com/apache/cayenne/commit/84f7f2dfafb81998f1dd29bf2121c7999fcd949a", "message": "trying to debug sorter NPE", "bug_id": "cayenne_20", "file": [{"additions": 9, "raw_url": "https://github.com/apache/cayenne/raw/fb4db81d2808b2baced1d0a1417ce3e8cdc0435e/cayenne-server/src/main/java/org/apache/cayenne/ashwood/AshwoodEntitySorter.java", "blob_url": "https://github.com/apache/cayenne/blob/fb4db81d2808b2baced1d0a1417ce3e8cdc0435e/cayenne-server/src/main/java/org/apache/cayenne/ashwood/AshwoodEntitySorter.java", "sha": "1f3a16cb89107bb0b9a9ce9b6c260e589e287f94", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/ashwood/AshwoodEntitySorter.java?ref=fb4db81d2808b2baced1d0a1417ce3e8cdc0435e", "patch": "@@ -363,6 +363,15 @@ else if (t2 == null)\n \t\t\telse {\n \t\t\t\tComponentRecord rec1 = components.get(t1);\n \t\t\t\tComponentRecord rec2 = components.get(t2);\n+\n+\t\t\t\tif(rec1 == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"No record for DbEntity: \" + t1);\n+\t\t\t\t}\n+\n+\t\t\t\tif(rec2 == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"No record for DbEntity: \" + t2);\n+\t\t\t\t}\n+\n \t\t\t\tint index1 = rec1.index;\n \t\t\t\tint index2 = rec2.index;\n ", "filename": "cayenne-server/src/main/java/org/apache/cayenne/ashwood/AshwoodEntitySorter.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/627a67334ca8da09ffc5ed22920b227ae2c97ff3", "parent": "https://github.com/apache/cayenne/commit/a551e01d72cb651a375745f5fe359c2b4d1e8835", "message": "CAY-2143 NPE in BaseSchemaUpdateStrategy\n\n* release notes", "bug_id": "cayenne_21", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/627a67334ca8da09ffc5ed22920b227ae2c97ff3/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/627a67334ca8da09ffc5ed22920b227ae2c97ff3/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "eaca48f3bd9be1c9b9af9a864f05ef96ac3db34f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=627a67334ca8da09ffc5ed22920b227ae2c97ff3", "patch": "@@ -67,6 +67,7 @@ CAY-2126 Modeler cannot upgrade project from v7 to v9\n CAY-2128 Modeler stored procedures are not imported\n CAY-2131 Modeler NullPointerException in reverse engineering when importing different catalogs in one datamap\n CAY-2138 NVARCHAR, LONGNVARCHAR and NCLOB types are missing from Firebird types.xml\n+CAY-2143 NPE in BaseSchemaUpdateStrategy\n \n ----------------------------------\n Release: 4.0.M3", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/e77e278b296525364c43554c14a681daaf5b4c0b", "parent": "https://github.com/apache/cayenne/commit/5708e3530cbbea0b3c39739e71e9713f54d6dad5", "message": "CAY-2143 NPE in BaseSchemaUpdateStrategy\n\n* tests", "bug_id": "cayenne_22", "file": [{"additions": 98, "raw_url": "https://github.com/apache/cayenne/raw/e77e278b296525364c43554c14a681daaf5b4c0b/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java", "blob_url": "https://github.com/apache/cayenne/blob/e77e278b296525364c43554c14a681daaf5b4c0b/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java", "sha": "695202d6ad7bbdb73b4d186c37174f74934b92f1", "changes": 98, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java?ref=e77e278b296525364c43554c14a681daaf5b4c0b", "patch": "@@ -0,0 +1,98 @@\n+/*\n+ *    Licensed to the Apache Software Foundation (ASF) under one\n+ *    or more contributor license agreements.  See the NOTICE file\n+ *    distributed with this work for additional information\n+ *    regarding copyright ownership.  The ASF licenses this file\n+ *    to you under the Apache License, Version 2.0 (the\n+ *    \"License\"); you may not use this file except in compliance\n+ *    with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing,\n+ *    software distributed under the License is distributed on an\n+ *    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *    KIND, either express or implied.  See the License for the\n+ *    specific language governing permissions and limitations\n+ *    under the License.\n+ */\n+package org.apache.cayenne.access.dbsync;\n+\n+import org.apache.cayenne.access.DataNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+\n+public class BaseSchemaUpdateStrategy_ConcurrencyTest {\n+\n+    private static final Log LOGGER = LogFactory.getLog(BaseSchemaUpdateStrategy_ConcurrencyTest.class);\n+\n+    private ExecutorService threadPool;\n+    private DataNode dataNode;\n+\n+    @Before\n+    public void before() {\n+        threadPool = Executors.newFixedThreadPool(2);\n+        dataNode = mock(DataNode.class);\n+    }\n+\n+    @After\n+    public void after() {\n+        threadPool.shutdownNow();\n+    }\n+\n+    @Test\n+    public void testUpdateSchema_Concurrency() throws InterruptedException, ExecutionException, TimeoutException {\n+\n+        final AtomicInteger counter = new AtomicInteger();\n+        final AtomicBoolean errors = new AtomicBoolean(false);\n+\n+        final BaseSchemaUpdateStrategy strategy = new BaseSchemaUpdateStrategy() {\n+            @Override\n+            protected void processSchemaUpdate(DataNode dataNode) throws SQLException {\n+                counter.incrementAndGet();\n+            }\n+        };\n+\n+        Collection<Future<?>> tasks = new ArrayList<>();\n+\n+        for (int i = 0; i < 20; i++) {\n+            tasks.add(threadPool.submit(new Runnable() {\n+                @Override\n+                public void run() {\n+                    try {\n+                        strategy.updateSchema(dataNode);\n+                    } catch (SQLException e) {\n+                        LOGGER.error(\"error in test\", e);\n+                        errors.set(true);\n+                    }\n+                }\n+            }));\n+        }\n+\n+        for(Future<?> f : tasks) {\n+            f.get(1, TimeUnit.SECONDS);\n+        }\n+\n+        assertFalse(errors.get());\n+        assertEquals(1, counter.get());\n+    }\n+}", "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/360d6426c2627c6c8944b0f85990a68de4b548f5", "parent": "https://github.com/apache/cayenne/commit/bfb4747d5cd0022ea1d59ba493cde38272094c9c", "message": "CAY-2050 fix NPE on bitwise operations", "bug_id": "cayenne_23", "file": [{"additions": 2, "raw_url": "https://github.com/apache/cayenne/raw/360d6426c2627c6c8944b0f85990a68de4b548f5/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/QueryAssembler.java", "blob_url": "https://github.com/apache/cayenne/blob/360d6426c2627c6c8944b0f85990a68de4b548f5/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/QueryAssembler.java", "sha": "40554bd8f12f7fa60b4bf38182d21c83d74275e2", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/QueryAssembler.java?ref=360d6426c2627c6c8944b0f85990a68de4b548f5", "patch": "@@ -150,7 +150,8 @@ public boolean supportsTableAliases() {\n \t *            DbAttribute being processed.\n \t */\n \tpublic void addToParamList(DbAttribute dbAttr, Object anObject) {\n-\t\tString typeName = TypesMapping.getJavaBySqlType(dbAttr.getType());\n+\t\tString typeName = TypesMapping.SQL_NULL;\n+\t\tif (dbAttr != null) typeName = TypesMapping.getJavaBySqlType(dbAttr.getType());\n \t\tExtendedType extendedType = adapter.getExtendedTypes().getRegisteredType(typeName);\n \t\t\n \t\tParameterBinding binding = new ParameterBinding(dbAttr, extendedType);", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/translator/select/QueryAssembler.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/583df135b3ee0c3a758a586678252979852ae3f3", "parent": "https://github.com/apache/cayenne/commit/4207ebea2e6510ffeb1cb123e87ecad35ea9239e", "message": "[CAY-1969] Malformed EJBQL Yields NPE", "bug_id": "cayenne_24", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/583df135b3ee0c3a758a586678252979852ae3f3/cayenne-server/src/main/java/org/apache/cayenne/ejbql/parser/Compiler.java", "blob_url": "https://github.com/apache/cayenne/blob/583df135b3ee0c3a758a586678252979852ae3f3/cayenne-server/src/main/java/org/apache/cayenne/ejbql/parser/Compiler.java", "sha": "b90acf609b2320eb1fcbe5fb5a3883fcb208810b", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/ejbql/parser/Compiler.java?ref=583df135b3ee0c3a758a586678252979852ae3f3", "patch": "@@ -308,6 +308,9 @@ private EntityResult compileEntityResult(EJBQLExpression expression, int positio\n         if (descriptor == null) {\n             descriptor = descriptorsById.get(expression.getText());\n         }\n+        if(descriptor == null) {\n+            throw new EJBQLException(\"the entity variable '\" + id +\"' does not refer to any entity in the FROM clause\");\n+        }\n         final EntityResult entityResult = new EntityResult(descriptor.getObjectClass());\n         final String prefix = \"ec\" + position + \"_\";\n         final int[] index = {", "filename": "cayenne-server/src/main/java/org/apache/cayenne/ejbql/parser/Compiler.java"}, {"additions": 25, "raw_url": "https://github.com/apache/cayenne/raw/583df135b3ee0c3a758a586678252979852ae3f3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java", "blob_url": "https://github.com/apache/cayenne/blob/583df135b3ee0c3a758a586678252979852ae3f3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java", "sha": "5ed52a636f34c2c2221d9abe220a0a30435e3657", "changes": 25, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java?ref=583df135b3ee0c3a758a586678252979852ae3f3", "patch": "@@ -23,6 +23,7 @@\n import org.apache.cayenne.configuration.server.ServerRuntime;\n import org.apache.cayenne.di.Inject;\n import org.apache.cayenne.ejbql.EJBQLCompiledExpression;\n+import org.apache.cayenne.ejbql.EJBQLException;\n import org.apache.cayenne.exp.Expression;\n import org.apache.cayenne.exp.ExpressionFactory;\n import org.apache.cayenne.map.EntityResolver;\n@@ -50,6 +51,7 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertSame;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n @UseServerRuntime(CayenneProjects.TESTMAP_PROJECT)\n public class EJBQLQueryIT extends ServerCase {\n@@ -190,6 +192,29 @@ public void testGetExpression() {\n         assertEquals(ejbql, parsed.getSource());\n     }\n \n+    /**\n+     * <p>If an expression has an 'entity variable' used in the SELECT clause then there should be a\n+     * corresponding definition for the 'entity variable' in the FROM clause.  This did, at some\n+     * point throw an NPE.</p>\n+     */\n+\n+    @Test\n+    public void testMissingEntityBeanVariable() {\n+       String ejbql = \"SELECT b FROM Artist a\";\n+        EJBQLQuery query = new EJBQLQuery(ejbql);\n+\n+        try {\n+            context.performQuery(query);\n+            fail(\"expected an instance of \" + EJBQLException.class.getSimpleName() + \" to have been thrown.\");\n+        }\n+        catch(EJBQLException e) {\n+            assertEquals(\"the entity variable 'b' does not refer to any entity in the FROM clause\", e.getUnlabeledMessage());\n+        }\n+        catch(Throwable th) {\n+            fail(\"expected an instance of \" + EJBQLException.class.getSimpleName() + \" to have been thrown.\");\n+        }\n+    }\n+\n     @Test\n     public void testGetName() {\n         String ejbql = \"select a FROM Artist a\";", "filename": "cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/8eec5d4ed3b5cf852441fe8bfb33af9b3b64c466", "parent": "https://github.com/apache/cayenne/commit/a31ae3b7dfc6d0a1716e0054a22bf8741756bd34", "message": "CAY-1946 CDbimport improvements\n\nfixing NPE when no entities are matched", "bug_id": "cayenne_25", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/8eec5d4ed3b5cf852441fe8bfb33af9b3b64c466/cayenne-server/src/main/java/org/apache/cayenne/access/DbLoader.java", "blob_url": "https://github.com/apache/cayenne/blob/8eec5d4ed3b5cf852441fe8bfb33af9b3b64c466/cayenne-server/src/main/java/org/apache/cayenne/access/DbLoader.java", "sha": "1b1a82852db4abc87e298da8a664b8beeddd7745", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/DbLoader.java?ref=8eec5d4ed3b5cf852441fe8bfb33af9b3b64c466", "patch": "@@ -53,6 +53,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.List;\n@@ -435,12 +436,11 @@ private DbAttribute loadDbAttribute(ResultSet rs) throws SQLException {\n     }\n \n     /**\n-     * Creates an ObjEntity for each DbEntity in the map. ObjEntities are\n-     * created empty without\n+     * Creates an ObjEntity for each DbEntity in the map.\n      */\n     protected Collection<ObjEntity> loadObjEntities(DataMap map, DbLoaderConfiguration config, Collection<DbEntity> entities) {\n         if (entities.isEmpty()) {\n-            return null;\n+            return Collections.emptyList();\n         }\n \n         Collection<ObjEntity> loadedEntities = new ArrayList<ObjEntity>(entities.size());", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/DbLoader.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/2a41d5d9ddaefe99983625c438dd9624b5d3687e", "parent": "https://github.com/apache/cayenne/commit/2b5c5739d3b34e27687f26e8a21b430b47ccfb3a", "message": "NPE protection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@584610 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_26", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java", "blob_url": "https://github.com/apache/cayenne/blob/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java", "sha": "0e3806b0f7b04c24b68083a4710c0a4c7689d8f4", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java?ref=2a41d5d9ddaefe99983625c438dd9624b5d3687e", "patch": "@@ -252,6 +252,7 @@ public void initWithProperties(Map properties) {\n         }\n \n         if (queryCacheFactory != null\n+                && dataContextFactory != null\n                 && !Util.isEmptyString(dataContextFactory.toString())) {\n             queryCacheFactory = (QueryCacheFactory) createInstance(queryCacheFactory\n                     .toString(), QueryCacheFactory.class);", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java"}, {"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java", "blob_url": "https://github.com/apache/cayenne/blob/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java", "sha": "a5340e153fbbb5616c620c2df2e631ab8c8efb0d", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java?ref=2a41d5d9ddaefe99983625c438dd9624b5d3687e", "patch": "@@ -251,13 +251,17 @@ private String passwordFromInputStream(InputStream inputStream) {\n             }\n             finally {\n                 try {\n-                    bufferedReader.close();\n+                    if (bufferedReader != null) {\n+                        bufferedReader.close();\n+                    }\n                 }\n                 catch (Exception exception) {\n                 }\n \n                 try {\n-                    inputStreamReader.close();\n+                    if (inputStreamReader != null) {\n+                        inputStreamReader.close();\n+                    }\n                 }\n                 catch (Exception exception) {\n                 }", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/4dcb1571068b9e0363dbd091686d6eb9901d16c5", "parent": "https://github.com/apache/cayenne/commit/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be", "message": "fixing npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@571952 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_27", "file": [{"additions": 9, "raw_url": "https://github.com/apache/cayenne/raw/4dcb1571068b9e0363dbd091686d6eb9901d16c5/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java", "blob_url": "https://github.com/apache/cayenne/blob/4dcb1571068b9e0363dbd091686d6eb9901d16c5/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java", "sha": "d018ee66152849769602e2d2ef0dc7ff401eba75", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java?ref=4dcb1571068b9e0363dbd091686d6eb9901d16c5", "patch": "@@ -126,7 +126,8 @@ public boolean onStartNode(ProjectPath path) {\n                     JpaTable table = new JpaTable(AnnotationPrototypes.getTable());\n \n                     // unclear whether we need to apply any other name transformations ...\n-                    // or even if we need to uppercase the name. Per default examples looks\n+                    // or even if we need to uppercase the name. Per default examples\n+                    // looks\n                     // like we need. table.setName(entity.getName().toUpperCase());\n                     table.setName(entity.getName());\n                     entity.setTable(table);\n@@ -207,7 +208,8 @@ public boolean onStartNode(ProjectPath path) {\n                 jpaBasic.setColumn(column);\n             }\n \n-            JpaEntity entity = (JpaEntity) path.firstInstanceOf(JpaEntity.class);\n+            JpaAbstractEntity entity = (JpaAbstractEntity) path\n+                    .firstInstanceOf(JpaAbstractEntity.class);\n \n             // process temporal type defaults\n             if (jpaBasic.getTemporal() == null && jpaBasic.getEnumerated() == null) {\n@@ -282,7 +284,11 @@ public boolean onStartNode(ProjectPath path) {\n \n             if (column.getTable() == null) {\n                 JpaEntity entity = (JpaEntity) path.firstInstanceOf(JpaEntity.class);\n-                column.setTable(entity.getTable().getName());\n+\n+                // parent can be a mapped superclass\n+                if (entity != null) {\n+                    column.setTable(entity.getTable().getName());\n+                }\n             }\n \n             if (parent.getPropertyDescriptor().isStringType()) {", "filename": "framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/d4bace43e6163e02f9f3a2a9f23aae2b8e3dbb57", "parent": "https://github.com/apache/cayenne/commit/fc5de25f422e7a8a9494a593638073215a752eae", "message": "CAY-1797 NPE importing DataMap\n\nrelease notes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1538458 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_28", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/d4bace43e6163e02f9f3a2a9f23aae2b8e3dbb57/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/d4bace43e6163e02f9f3a2a9f23aae2b8e3dbb57/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "5358b86d81a23333484ddf50671b07a0fb206309", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=d4bace43e6163e02f9f3a2a9f23aae2b8e3dbb57", "patch": "@@ -38,6 +38,7 @@ CAY-1866 Change in General Modeler Preferences reverts old settings to default v\n CAY-1869 ResultIterator from cayenne-client dependency is subclassed from org.apache.cayenne.access.ResultIterator which is present only in cayenne-server dependency \n CAY-1874 DB2 Procedure action ignores the first result set\n CAY-1798 ROP: Reverse relationships of prefetched entity objects are not filled during server to client objects conversion\n+CAY-1797 NPE importing DataMap\n \n ----------------------------------\n Release: 3.2M1", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/fc5de25f422e7a8a9494a593638073215a752eae", "parent": "https://github.com/apache/cayenne/commit/be2551db3d5f61920ae1b0e56ce437e1c1c7c36c", "message": "CAY-1797 NPE importing DataMap\n\nfix formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1538457 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_29", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/fc5de25f422e7a8a9494a593638073215a752eae/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java", "blob_url": "https://github.com/apache/cayenne/blob/fc5de25f422e7a8a9494a593638073215a752eae/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java", "sha": "c00db8a800473e4f0d3ccf4676d4aafe9b5f8dbd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java?ref=fc5de25f422e7a8a9494a593638073215a752eae", "patch": "@@ -106,7 +106,7 @@ protected void importDataMap() {\n             \n             Resource baseResource = domain.getConfigurationSource();\n \n-            if(baseResource != null) {\n+            if (baseResource != null) {\n                 Resource dataMapResource = baseResource.getRelativeResource(newMap.getName());\n                 newMap.setConfigurationSource(dataMapResource);\n             }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/be2551db3d5f61920ae1b0e56ce437e1c1c7c36c", "parent": "https://github.com/apache/cayenne/commit/937fe7ed720f704aed54e00385c0edfebdc8d8d0", "message": "CAY-1797 NPE importing DataMap\n\npatch by Oleg Artyukevich\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1538454 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_30", "file": [{"additions": 8, "raw_url": "https://github.com/apache/cayenne/raw/be2551db3d5f61920ae1b0e56ce437e1c1c7c36c/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java", "blob_url": "https://github.com/apache/cayenne/blob/be2551db3d5f61920ae1b0e56ce437e1c1c7c36c/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java", "sha": "bfd4417806fca6f11e36aa4d51e9cef0d47cfdae", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java?ref=be2551db3d5f61920ae1b0e56ce437e1c1c7c36c", "patch": "@@ -36,6 +36,7 @@\n import org.apache.cayenne.modeler.pref.FSPath;\n import org.apache.cayenne.modeler.util.CayenneAction;\n import org.apache.cayenne.modeler.util.FileFilters;\n+import org.apache.cayenne.resource.Resource;\n import org.apache.cayenne.util.NamedObjectFactory;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -102,6 +103,13 @@ protected void importDataMap() {\n             else {\n                 newMap.setName(NamedObjectFactory.createName(DataMap.class, domain));\n             }\n+            \n+            Resource baseResource = domain.getConfigurationSource();\n+\n+            if(baseResource != null) {\n+                Resource dataMapResource = baseResource.getRelativeResource(newMap.getName());\n+                newMap.setConfigurationSource(dataMapResource);\n+            }\n \n             getProjectController().addDataMap(this, newMap);\n         }", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/ImportDataMapAction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/be74aaa8df4ba70fcecfd0bbe48624b9e5301176", "parent": "https://github.com/apache/cayenne/commit/cbb20e52316c050c4376aa01fee74a5448d336b7", "message": "CAY-1817  NPE during Validate Project\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1483473 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_31", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/be74aaa8df4ba70fcecfd0bbe48624b9e5301176/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/be74aaa8df4ba70fcecfd0bbe48624b9e5301176/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "1c50b8fe87ceac0dd5b7b86c73f657392d3678f2", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=be74aaa8df4ba70fcecfd0bbe48624b9e5301176", "patch": "@@ -73,3 +73,4 @@ CAY-1783 JdbcPkGenerator.longPkFromDatabase would throw an exception if the PK v\n CAY-1794 Duplicate attributes in discriminator columns of PersistentDescriptor\n CAY-1804 Serialisation of long[] type was not working correctly. \n CAY-1806 Error importing eomodel \n+CAY-1817 NPE during Validate Project ", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/cbb20e52316c050c4376aa01fee74a5448d336b7", "parent": "https://github.com/apache/cayenne/commit/ab8a974cdf1d7d58324d5a18d32778c1bf276bb0", "message": "CAY-1817  NPE during Validate Project\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1483472 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_32", "file": [{"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/cbb20e52316c050c4376aa01fee74a5448d336b7/framework/cayenne-project/src/main/java/org/apache/cayenne/project/validation/ObjEntityValidator.java", "blob_url": "https://github.com/apache/cayenne/blob/cbb20e52316c050c4376aa01fee74a5448d336b7/framework/cayenne-project/src/main/java/org/apache/cayenne/project/validation/ObjEntityValidator.java", "sha": "1af09ef362c2b2f5ede323b9de6f42ac5d194d9f", "changes": 16, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-project/src/main/java/org/apache/cayenne/project/validation/ObjEntityValidator.java?ref=cbb20e52316c050c4376aa01fee74a5448d336b7", "patch": "@@ -132,17 +132,13 @@ private void validateAttributes(ObjEntity entity, ValidationResult validationRes\n         Set<String> dbAttributeNames = new HashSet<String>();\n \n         for (ObjAttribute attribute : entity.getAttributes()) {\n-            String dbAttributeName = attribute.getDbAttribute().getName();\n-\n-            if (Util.isEmptyString(dbAttributeName) == false) {\n-                if (dbAttributeNames.contains(dbAttributeName)) {\n-                    addFailure(validationResult,\n-                               entity,\n-                               \"ObjEntity contains duplicate DbAttribute mappings (%s)\",\n-                               dbAttributeName);\n-                }\n+            String dbAttributePath = attribute.getDbAttributePath();\n \n-                dbAttributeNames.add(dbAttributeName);\n+            if (!Util.isEmptyString(dbAttributePath)) {\n+                if (!dbAttributeNames.add(dbAttributePath)) {\n+                    addFailure(validationResult, entity, \"ObjEntity contains duplicate DbAttribute mappings (%s)\",\n+                            dbAttributePath);\n+                }\n             }\n         }\n     }", "filename": "framework/cayenne-project/src/main/java/org/apache/cayenne/project/validation/ObjEntityValidator.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/964af1425c9f75e719f7e2390650ceebb6a341ed", "parent": "https://github.com/apache/cayenne/commit/3a10640fe4e03a4b2d1142dd4ed9f29265e9b259", "message": "CAY-1749 NPE on simple nested context commit\n\nrelease notes\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1400618 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_33", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/964af1425c9f75e719f7e2390650ceebb6a341ed/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/964af1425c9f75e719f7e2390650ceebb6a341ed/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "f517dae982915e0ba2de2875c57beab71530fe57", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=964af1425c9f75e719f7e2390650ceebb6a341ed", "patch": "@@ -33,3 +33,4 @@ CAY-1738 Tutorial cayenne-rop-server should be packaged as a war\n CAY-1739 Cayenne ROP server resets session on every request if BASIC auth is used\n CAY-1742 ObjRelationship inspector says \"ObjAttribute Inspector\"\n CAY-1744 Unexpected read-only relationships in vertical inheritance mapping\n+CAY-1749 NPE on simple nested context commit", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/3a10640fe4e03a4b2d1142dd4ed9f29265e9b259", "parent": "https://github.com/apache/cayenne/commit/c9352cb62267b0630dd997f10733897a27b7a27c", "message": "CAY-1749 NPE on simple nested context commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1400617 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_34", "file": [{"additions": 14, "raw_url": "https://github.com/apache/cayenne/raw/3a10640fe4e03a4b2d1142dd4ed9f29265e9b259/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextMergeHandler.java", "blob_url": "https://github.com/apache/cayenne/blob/3a10640fe4e03a4b2d1142dd4ed9f29265e9b259/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextMergeHandler.java", "sha": "9d95863bb9f143da7278363e9cfc675e30036851", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextMergeHandler.java?ref=3a10640fe4e03a4b2d1142dd4ed9f29265e9b259", "patch": "@@ -110,9 +110,22 @@ public void graphChanged(GraphEvent event) {\n     }\n \n     public void graphFlushed(GraphEvent event) {\n+\n         // peer is committed\n         if (shouldProcessEvent(event)) {\n-            event.getDiff().apply(this);\n+\n+            // per CAY-1737 event dispatches from parent context to children are\n+            // non-blocking, this causes issues like CAY-1749. so we must\n+            // synchronize ObjectStore updates here.\n+\n+            // TODO: we can get here if a peer context is committed (ok) or\n+            // if our context was committed (not ok, since parent changes are\n+            // already applied in the commit thread) .. figure out an alt\n+            // filtering mechanism to avoid the duplicate object processing\n+\n+            synchronized (context.getObjectStore()) {\n+                event.getDiff().apply(this);\n+            }\n \n             // repost as change event for our own children\n             context.fireDataChannelChanged(event.getPostedBy(), event.getDiff());", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextMergeHandler.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/87302989fafb1c218105a4ee6d0512d12aec81d6", "parent": "https://github.com/apache/cayenne/commit/38f6bb3b7860248576601e28b116e0c650a4ba9c", "message": "fixing DN NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@687666 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_35", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/87302989fafb1c218105a4ee6d0512d12aec81d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java", "blob_url": "https://github.com/apache/cayenne/blob/87302989fafb1c218105a4ee6d0512d12aec81d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java", "sha": "bcd8b8a5d11a021c8d464e3c6ccebbfb8d8b21b7", "changes": 11, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java?ref=87302989fafb1c218105a4ee6d0512d12aec81d6", "patch": "@@ -313,6 +313,10 @@ public void init(String name, Attributes atts, DataSourceInfo driverInfo) {\n             String password = atts.getValue(\"password\");\n             String passwordLocation = atts.getValue(\"passwordLocation\");\n             String passwordSource = atts.getValue(\"passwordSource\");\n+            if(passwordSource == null) {\n+                passwordSource = DataSourceInfo.PASSWORD_LOCATION_MODEL;\n+            }\n+            \n             String username = atts.getValue(\"userName\");\n \n             driverInfo.setPasswordEncoderClass(encoderClass);\n@@ -329,11 +333,10 @@ public void init(String name, Attributes atts, DataSourceInfo driverInfo) {\n \n             PasswordEncoding passwordEncoder = driverInfo.getPasswordEncoder();\n \n-            if (passwordLocation != null) // New style model (v1.2), process extra\n-            // locations\n-            {\n+            if (passwordLocation != null) {\n                 if (passwordLocation.equals(DataSourceInfo.PASSWORD_LOCATION_CLASSPATH)) {\n-                    URL url = parentConfiguration.getResourceFinder().getResource(passwordLocation);\n+                    URL url = parentConfiguration.getResourceFinder().getResource(\n+                            passwordLocation);\n \n                     if (url != null)\n                         password = passwordFromURL(url);", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/8056f253eff78436aa2281df95ffe7ff60b0fd30", "parent": "https://github.com/apache/cayenne/commit/650a781d3dc5d2b5dc4dc8bc79f37be6c75a3396", "message": "CAY-1043 NPE in ConnectionWrapper on rollback\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@652156 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_36", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/8056f253eff78436aa2281df95ffe7ff60b0fd30/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/8056f253eff78436aa2281df95ffe7ff60b0fd30/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "9924ff87ea5bfabd20c57b1587c2478e1d49aafa", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=8056f253eff78436aa2281df95ffe7ff60b0fd30", "patch": "@@ -53,6 +53,7 @@ CAY-1014 Enums as meaningful PK\n CAY-1018 Enums fetched via SQLTemplate\n CAY-1020 Problem accessing toMany Set relationships on client.\n CAY-1028 NPE's in the Modeler for incomplete relationships\n+CAY-1043 NPE in ConnectionWrapper on rollback\n \n ----------------------------------\n Release: 3.0M3", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 20, "raw_url": "https://github.com/apache/cayenne/raw/8056f253eff78436aa2281df95ffe7ff60b0fd30/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ExternalTransaction.java", "blob_url": "https://github.com/apache/cayenne/blob/8056f253eff78436aa2281df95ffe7ff60b0fd30/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ExternalTransaction.java", "sha": "f2575f81021d8c42d93e33a9a1a02dd7e24cfd64", "changes": 41, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ExternalTransaction.java?ref=8056f253eff78436aa2281df95ffe7ff60b0fd30", "patch": "@@ -79,32 +79,31 @@ public boolean addConnection(String name, Connection connection) throws SQLExcep\n \n     @Override\n     public void commit() throws IllegalStateException, SQLException, CayenneException {\n-        try {\n-            if (status == Transaction.STATUS_NO_TRANSACTION) {\n-                return;\n-            }\n-\n-            if (delegate != null && !delegate.willCommit(this)) {\n-                return;\n-            }\n \n-            if (status != Transaction.STATUS_ACTIVE) {\n-                throw new IllegalStateException(\n-                        \"Transaction must have 'STATUS_ACTIVE' to be committed. \"\n-                                + \"Current status: \"\n-                                + Transaction.decodeStatus(status));\n-            }\n+        if (status == Transaction.STATUS_NO_TRANSACTION) {\n+            return;\n+        }\n \n-            processCommit();\n+        if (delegate != null && !delegate.willCommit(this)) {\n+            return;\n+        }\n \n-            status = Transaction.STATUS_COMMITTED;\n-            if (delegate != null) {\n-                delegate.didCommit(this);\n-            }\n+        if (status != Transaction.STATUS_ACTIVE) {\n+            throw new IllegalStateException(\n+                    \"Transaction must have 'STATUS_ACTIVE' to be committed. \"\n+                            + \"Current status: \"\n+                            + Transaction.decodeStatus(status));\n         }\n-        finally {\n-            close();\n+\n+        processCommit();\n+\n+        status = Transaction.STATUS_COMMITTED;\n+\n+        if (delegate != null) {\n+            delegate.didCommit(this);\n         }\n+\n+        close();\n     }\n \n     @Override", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ExternalTransaction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/4937c72e8b17b538520d1cf3647ee2e343bcac22", "parent": "https://github.com/apache/cayenne/commit/1be0ee0810cf8a52c4eda8cffb836133a4bc4bec", "message": "CAY-1028 NPE's in the Modeler for incomplete relationships\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@647163 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_37", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/4937c72e8b17b538520d1cf3647ee2e343bcac22/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/EntityRelationshipsModel.java", "blob_url": "https://github.com/apache/cayenne/blob/4937c72e8b17b538520d1cf3647ee2e343bcac22/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/EntityRelationshipsModel.java", "sha": "e76fef614ce1ea3ad18d93111064d72c66923446", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/EntityRelationshipsModel.java?ref=4937c72e8b17b538520d1cf3647ee2e343bcac22", "patch": "@@ -63,14 +63,14 @@ static String displayName(Relationship relationship) {\n         if (relationship == null) {\n             return null;\n         }\n-        return displayName(\n-                relationship.getName(),\n-                relationship.getSourceEntity(),\n-                relationship.getTargetEntity());\n-    }\n \n-    static String displayName(String name, Entity source, Entity target) {\n-        return name + \" [\" + source.getName() + \" -> \" + target.getName() + \"]\";\n+        String src = relationship.getSourceEntity() != null ? relationship\n+                .getSourceEntity()\n+                .getName() : \"?\";\n+        String target = relationship.getTargetEntityName() != null ? relationship\n+                .getTargetEntityName() : \"?\";\n+\n+        return relationship.getName() + \" [\" + src + \" -> \" + target + \"]\";\n     }\n \n     /**", "filename": "framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/EntityRelationshipsModel.java"}, {"additions": 15, "raw_url": "https://github.com/apache/cayenne/raw/4937c72e8b17b538520d1cf3647ee2e343bcac22/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjRelationshipInfoModel.java", "blob_url": "https://github.com/apache/cayenne/blob/4937c72e8b17b538520d1cf3647ee2e343bcac22/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjRelationshipInfoModel.java", "sha": "e0481891d6fc167daadb9204170797ee75a78773", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjRelationshipInfoModel.java?ref=4937c72e8b17b538520d1cf3647ee2e343bcac22", "patch": "@@ -376,19 +376,23 @@ private void connectEnds() {\n             // try to connect automatically, if we can't use dummy connector\n \n             Entity source = (last == null) ? getStartEntity() : last.getTargetEntity();\n-            Relationship anyConnector = source.getAnyRelationship(target);\n-            EntityRelationshipsModel connector = null;\n+            if (source != null) {\n \n-            connector = (anyConnector == null) ? new EntityRelationshipsModel(\n-                    source,\n-                    getEndEntity()) : new EntityRelationshipsModel(anyConnector);\n+                Relationship anyConnector = source != null ? source\n+                        .getAnyRelationship(target) : null;\n+                EntityRelationshipsModel connector = null;\n \n-            dbRelationshipPath.makeActive(false);\n-            try {\n-                dbRelationshipPath.add(connector);\n-            }\n-            finally {\n-                dbRelationshipPath.makeActive(true);\n+                connector = (anyConnector == null) ? new EntityRelationshipsModel(\n+                        source,\n+                        getEndEntity()) : new EntityRelationshipsModel(anyConnector);\n+\n+                dbRelationshipPath.makeActive(false);\n+                try {\n+                    dbRelationshipPath.add(connector);\n+                }\n+                finally {\n+                    dbRelationshipPath.makeActive(true);\n+                }\n             }\n         }\n     }", "filename": "framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/objentity/ObjRelationshipInfoModel.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/1ef75dd2cf61b5896267d89fb6528a02e546a7d4", "parent": "https://github.com/apache/cayenne/commit/4937c72e8b17b538520d1cf3647ee2e343bcac22", "message": "CAY-1028 NPE's in the Modeler for incomplete relationships\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@647164 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_38", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/1ef75dd2cf61b5896267d89fb6528a02e546a7d4/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/1ef75dd2cf61b5896267d89fb6528a02e546a7d4/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "9a757163d79f972e87b7b30c7d3bffa294435e7d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=1ef75dd2cf61b5896267d89fb6528a02e546a7d4", "patch": "@@ -40,6 +40,7 @@ CAY-998 ROP paginated lists must recover from server LRU query cache overflow\n CAY-1003 the paged queries in ROP can fail to fetch the subsequent pages if the client and server are in different timezones\n CAY-1018 Enums fetched via SQLTemplate\n CAY-1020 Problem accessing toMany Set relationships on client.\n+CAY-1028 NPE's in the Modeler for incomplete relationships\n \n ----------------------------------\n Release: 3.0M3", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/ff70edcb491d94589c91c1c2d384c482e624e214", "parent": "https://github.com/apache/cayenne/commit/b5bc20be375487eebab8f201e71dfa0e3f2b4753", "message": "Better error message on NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@619169 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_39", "file": [{"additions": 60, "raw_url": "https://github.com/apache/cayenne/raw/ff70edcb491d94589c91c1c2d384c482e624e214/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/BaseContext.java", "blob_url": "https://github.com/apache/cayenne/blob/ff70edcb491d94589c91c1c2d384c482e624e214/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/BaseContext.java", "sha": "975c4d35cc4b162b22c2a05b22cf0dda45f6b639", "changes": 62, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/BaseContext.java?ref=ff70edcb491d94589c91c1c2d384c482e624e214", "patch": "@@ -18,6 +18,7 @@\n  ****************************************************************/\n package org.apache.cayenne;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n \n@@ -26,6 +27,11 @@\n import org.apache.cayenne.query.ObjectIdQuery;\n import org.apache.cayenne.query.Query;\n import org.apache.cayenne.reflect.Property;\n+import org.apache.cayenne.reflect.ClassDescriptor;\n+import org.apache.cayenne.reflect.PropertyVisitor;\n+import org.apache.cayenne.reflect.AttributeProperty;\n+import org.apache.cayenne.reflect.ToOneProperty;\n+import org.apache.cayenne.reflect.ToManyProperty;\n \n /**\n  * A common base superclass for Cayenne ObjectContext implementors.\n@@ -115,8 +121,60 @@ else if (objects.size() > 1) {\n \n         // resolve relationship fault\n         if (lazyFaulting && property != null) {\n-            Property propertyDescriptor = getEntityResolver().getClassDescriptor(\n-                    object.getObjectId().getEntityName()).getProperty(property);\n+            ClassDescriptor classDescriptor = getEntityResolver().getClassDescriptor(\n+                    object.getObjectId().getEntityName());\n+            Property propertyDescriptor = classDescriptor.getProperty(property);\n+\n+            // If we don't have a property descriptor, there's not much we can do.\n+            // Let the caller know that the specified property could not be found and list\n+            // all of the properties that could be so the caller knows what can be used.\n+            if (propertyDescriptor == null) {\n+                final StringBuilder errorMessage = new StringBuilder();\n+\n+                errorMessage.append(String.format(\"Property '%s' is not declared for entity '%s'.\",\n+                        property, object.getObjectId().getEntityName()));\n+                \n+                errorMessage.append(\" Declared properties are: \");\n+\n+                // Grab each of the declared properties.\n+                final List<String> properties = new ArrayList<String>();\n+                classDescriptor.visitProperties(new PropertyVisitor() {\n+                    public boolean visitAttribute(final AttributeProperty property) {\n+                        properties.add(property.getName());\n+\n+                        return true;\n+                    }\n+\n+                    public boolean visitToOne(final ToOneProperty property) {\n+                        properties.add(property.getName());\n+\n+                        return true;\n+                    }\n+\n+                    public boolean visitToMany(final ToManyProperty property) {\n+                        properties.add(property.getName());\n+\n+                        return true;\n+                    }\n+                });\n+\n+                // Now add the declared property names to the error message.\n+                boolean first = true;\n+                for (String declaredProperty : properties) {\n+                    if (first) {\n+                        errorMessage.append(String.format(\"'%s'\", declaredProperty));\n+\n+                        first = false;\n+                    }\n+                    else {\n+                        errorMessage.append(String.format(\", '%s'\", declaredProperty));\n+                    }\n+                }\n+\n+                errorMessage.append(\".\");\n+\n+                throw new CayenneRuntimeException(errorMessage.toString());\n+            }\n \n             // this should trigger fault resolving\n             propertyDescriptor.readProperty(object);", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/BaseContext.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/04a528440a90fd9846f9e1bb3c679e59c30f4ff8", "parent": "https://github.com/apache/cayenne/commit/22f361488fdb23e9072fecf7d72a16d7146122fa", "message": "merge: fix NPE in objEntity.getDbEntity()\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@615405 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_40", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java", "blob_url": "https://github.com/apache/cayenne/blob/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java", "sha": "b2d826635cb6e6296523a25bdca83bcb4ce86045", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java?ref=04a528440a90fd9846f9e1bb3c679e59c30f4ff8", "patch": "@@ -53,6 +53,9 @@ protected void synchronizeWithObjEntity(DbEntity entity) {\n         Set<ObjEntity> objEntities = new HashSet<ObjEntity>();\n         MappingNamespace mns = entity.getDataMap().getNamespace();\n         for (ObjEntity objEntity : mns.getObjEntities()) {\n+            if (objEntity.getDbEntity() == null) {\n+                continue;\n+            }\n             if (objEntity.getDbEntity().equals(entity)) {\n                 objEntities.add(objEntity);\n             }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java"}, {"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java", "blob_url": "https://github.com/apache/cayenne/blob/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java", "sha": "547fc40f8da390dfd36e9c69a946aa81861a0dae", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java?ref=04a528440a90fd9846f9e1bb3c679e59c30f4ff8", "patch": "@@ -60,6 +60,9 @@ public void testAddTable() throws Exception {\n \n         ObjEntity objEntity = null;\n         for (ObjEntity candiate : map.getObjEntities()) {\n+            if (candiate.getDbEntity() == null) {\n+                continue;\n+            }\n             if (candiate.getDbEntity().getName().equalsIgnoreCase(dbEntity.getName())) {\n                 objEntity = candiate;\n                 break;", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be", "parent": "https://github.com/apache/cayenne/commit/dedf848eac3111fbf60d6f9ceb0c6c814154d66f", "message": "better NPE detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@571946 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_41", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java", "blob_url": "https://github.com/apache/cayenne/blob/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java", "sha": "2e53b245ab696cb223874a978c086ed140236e59", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java?ref=f9e7f1439fcc207e5eaf374c4cdc27ea41f668be", "patch": "@@ -414,6 +414,13 @@ public boolean onStartNode(ProjectPath path) {\n             JpaId jpaTargetId = targetEntity.getAttributes().getId(\n                     jpaJoin.getReferencedColumnName());\n \n+            if (jpaTargetId == null) {\n+                throw new IllegalArgumentException(\"Null id \"\n+                        + targetEntity.getName()\n+                        + \".\"\n+                        + jpaJoin.getReferencedColumnName());\n+            }\n+\n             ObjRelationship objRelationship = (ObjRelationship) targetPath.getObject();\n             DataMap dataMap = objRelationship.getSourceEntity().getDataMap();\n ", "filename": "framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/aa7575454f3c2851d7d3fe3fd9d393919277a71f", "parent": "https://github.com/apache/cayenne/commit/2bc3cad36e8459182a8f278f516441be653b3e24", "message": "CAY-852 NPE in Util.delete for read-protected directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@569042 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_42", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/aa7575454f3c2851d7d3fe3fd9d393919277a71f/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/aa7575454f3c2851d7d3fe3fd9d393919277a71f/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "7860b1c8223fcbaf3c0ff952c0afb2db841520f5", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=aa7575454f3c2851d7d3fe3fd9d393919277a71f", "patch": "@@ -36,6 +36,7 @@ CAY-832 enum-mapped columns improperly handled in in expressions\n CAY-835 setting meaningful pk to zero turn on autogenerated keys\n CAY-845 DataContext.localObject() object update race condition\n CAY-847 Expression NULL handling\n+CAY-852 NPE in Util.delete for read-protected directories\n \n \n ----------------------------------", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/aa7575454f3c2851d7d3fe3fd9d393919277a71f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java", "blob_url": "https://github.com/apache/cayenne/blob/aa7575454f3c2851d7d3fe3fd9d393919277a71f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java", "sha": "e42cd0e0ed570390fcb76c53777736336507863e", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java?ref=aa7575454f3c2851d7d3fe3fd9d393919277a71f", "patch": "@@ -201,9 +201,13 @@ public static boolean delete(String filePath, boolean recursive) {\n             return file.delete();\n \n         String[] list = file.list();\n-        for (int i = 0; i < list.length; i++) {\n-            if (!delete(filePath + File.separator + list[i], true))\n-                return false;\n+        \n+        // list can be null if directory doesn't have an 'x' permission bit set for the user\n+        if (list != null) {\n+            for (int i = 0; i < list.length; i++) {\n+                if (!delete(filePath + File.separator + list[i], true))\n+                    return false;\n+            }\n         }\n \n         return file.delete();", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/3c556849d832f44c5304d765fa86ac5b1db039b8", "parent": "https://github.com/apache/cayenne/commit/bf11dd32fa4ff49bb99d96759191e2746c723b3f", "message": "DataDomainQueryAction NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@565900 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_43", "file": [{"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java", "blob_url": "https://github.com/apache/cayenne/blob/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java", "sha": "c7165bcf8bbc9359f43f4064e4cc71a7cb734cf8", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java?ref=3c556849d832f44c5304d765fa86ac5b1db039b8", "patch": "@@ -168,10 +168,10 @@ private boolean interceptOIDQuery() {\n         if (query instanceof ObjectIdQuery) {\n \n             ObjectIdQuery oidQuery = (ObjectIdQuery) query;\n-\n             DataRow row = null;\n \n-            if (!oidQuery.isFetchMandatory()) {\n+            if (cache != null\n+                    && !oidQuery.isFetchMandatory()) {\n                 row = cache.getCachedSnapshot(oidQuery.getObjectId());\n             }\n \n@@ -214,8 +214,11 @@ private boolean interceptRelationshipQuery() {\n                 return !DONE;\n             }\n \n+            if(cache == null) {\n+                return !DONE;\n+            }\n+            \n             DataRow sourceRow = cache.getCachedSnapshot(relationshipQuery.getObjectId());\n-\n             if (sourceRow == null) {\n                 return !DONE;\n             }", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java"}, {"additions": 8, "raw_url": "https://github.com/apache/cayenne/raw/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java", "blob_url": "https://github.com/apache/cayenne/blob/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java", "sha": "cb2480248a51ecdadb62c46996e0fed9a1c3829b", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java?ref=3c556849d832f44c5304d765fa86ac5b1db039b8", "patch": "@@ -302,16 +302,22 @@ protected Object findReflexiveMaster(\n \n         // find committed snapshot - so we can't fetch from the context as it will return\n         // dirty snapshot; must go down the stack instead\n+\n+        // how do we handle this for NEW objects correctly? For now bail from the method\n+        if (object.getObjectId().isTemporary()) {\n+            return null;\n+        }\n+\n         ObjectIdQuery query = new ObjectIdQuery(\n                 object.getObjectId(),\n                 true,\n                 ObjectIdQuery.CACHE);\n         QueryResponse response = context.getChannel().onQuery(null, query);\n         List result = response.firstList();\n-        if(result == null || result.size() == 0) {\n+        if (result == null || result.size() == 0) {\n             return null;\n         }\n-        \n+\n         DataRow snapshot = (DataRow) result.get(0);\n \n         ObjectId id = snapshot.createTargetObjectId(targetEntityName, finalRel);", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/446034ae56f72fbd4c95f5561e4ca893c2b75b67", "parent": "https://github.com/apache/cayenne/commit/4c983420c786c19626763bc0e2e53cc2e893bbfc", "message": "CAY-830 DataChannelCallbackInterceptor.onQuery NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@556338 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_44", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java", "sha": "eba1a73d58502aeffd3f906ea79291db2af40dca", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -81,7 +81,7 @@ public QueryResponse onQuery(ObjectContext originatingContext, Query query) {\n             List list = response.firstList();\n             if (list != null\n                     && !list.isEmpty()\n-                    && !(query.getMetaData(originatingContext.getEntityResolver()))\n+                    && !(query.getMetaData(channel.getEntityResolver()))\n                             .isFetchingDataRows()) {\n                 callbackRegistry.performCallbacks(LifecycleListener.POST_LOAD, list);\n             }", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java"}, {"additions": 67, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java", "sha": "bb05c38958294d9a2ad8cb48a14015e9179a20cf", "changes": 70, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -25,12 +25,15 @@\n import org.apache.cayenne.access.ClientServerChannel;\n import org.apache.cayenne.query.ObjectIdQuery;\n import org.apache.cayenne.query.SelectQuery;\n+import org.apache.cayenne.reflect.LifecycleCallbackRegistry;\n import org.apache.cayenne.remote.ClientChannel;\n import org.apache.cayenne.remote.ClientConnection;\n import org.apache.cayenne.remote.RemoteIncrementalFaultList;\n import org.apache.cayenne.remote.service.LocalConnection;\n+import org.apache.cayenne.testdo.mt.ClientMtReflexive;\n import org.apache.cayenne.testdo.mt.ClientMtTable1;\n import org.apache.cayenne.testdo.mt.ClientMtTable2;\n+import org.apache.cayenne.testdo.mt.MtReflexive;\n import org.apache.cayenne.testdo.mt.MtTable1;\n import org.apache.cayenne.unit.AccessStack;\n import org.apache.cayenne.unit.CayenneCase;\n@@ -40,9 +43,70 @@\n public class CayenneContextWithDataContextTest extends CayenneCase {\n \n     protected AccessStack buildAccessStack() {\n-        return CayenneResources\n-                .getResources()\n-                .getAccessStack(MULTI_TIER_ACCESS_STACK);\n+        return CayenneResources.getResources().getAccessStack(MULTI_TIER_ACCESS_STACK);\n+    }\n+\n+    public void testCAY830() throws Exception {\n+\n+        deleteTestData();\n+\n+        // must enable callbacks\n+        ClientServerChannel csChannel = new ClientServerChannel(getDomain());\n+        csChannel.setLifecycleCallbacksEnabled(true);\n+\n+        // an exception was triggered within POST_LOAD callback\n+        LifecycleCallbackRegistry callbackRegistry = csChannel\n+                .getEntityResolver()\n+                .getCallbackRegistry();\n+\n+        try {\n+            callbackRegistry.addListener(MtReflexive.class, new LifecycleListener() {\n+\n+                public void postLoad(Object entity) {\n+                }\n+\n+                public void postPersist(Object entity) {\n+                }\n+\n+                public void postRemove(Object entity) {\n+                }\n+\n+                public void postUpdate(Object entity) {\n+                }\n+\n+                public void prePersist(Object entity) {\n+                }\n+\n+                public void preRemove(Object entity) {\n+                }\n+\n+                public void preUpdate(Object entity) {\n+                }\n+            });\n+\n+            ClientConnection connection = new LocalConnection(csChannel);\n+            ClientChannel channel = new ClientChannel(connection);\n+\n+            CayenneContext context = new CayenneContext(channel);\n+\n+            ClientMtReflexive o1 = (ClientMtReflexive) context\n+                    .newObject(ClientMtReflexive.class);\n+            o1.setName(\"parent\");\n+\n+            ClientMtReflexive o2 = (ClientMtReflexive) context\n+                    .newObject(ClientMtReflexive.class);\n+            o2.setName(\"child\");\n+            o2.setToParent(o1);\n+            context.commitChanges();\n+\n+            context.deleteObject(o1);\n+            context.deleteObject(o2);\n+            context.commitChanges();\n+            // per CAY-830 an exception is thrown here\n+        }\n+        finally {\n+            callbackRegistry.clear();\n+        }\n     }\n \n     public void testCreateFault() throws Exception {", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java"}, {"additions": 10, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java", "sha": "3eb25d7a83ed4b6831da5f0f4453fffad670b4c4", "changes": 10, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -0,0 +1,10 @@\n+package org.apache.cayenne.testdo.mt;\n+\n+import org.apache.cayenne.testdo.mt.auto._ClientMtReflexive;\n+\n+/**\n+ * A persistent class mapped as \"MtReflexive\" Cayenne entity.\n+ */\n+public class ClientMtReflexive extends _ClientMtReflexive {\n+\n+}", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java"}, {"additions": 10, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java", "sha": "73c5979c9ad3257fedae977c0151fb8e9a2458ba", "changes": 10, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -0,0 +1,10 @@\n+package org.apache.cayenne.testdo.mt;\n+\n+import org.apache.cayenne.testdo.mt.auto._MtReflexive;\n+\n+public class MtReflexive extends _MtReflexive {\n+\n+}\n+\n+\n+", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java"}, {"additions": 83, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java", "sha": "6fbdc697e2fd45cb906f42d090cc87ad400a5bc7", "changes": 83, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -0,0 +1,83 @@\n+package org.apache.cayenne.testdo.mt.auto;\n+\n+import java.util.List;\n+\n+import org.apache.cayenne.PersistentObject;\n+import org.apache.cayenne.ValueHolder;\n+import org.apache.cayenne.testdo.mt.ClientMtReflexive;\n+\n+/**\n+ * A generated persistent class mapped as \"MtReflexive\" Cayenne entity. It is a good idea to\n+ * avoid changing this class manually, since it will be overwritten next time code is\n+ * regenerated. If you need to make any customizations, put them in a subclass.\n+ */\n+public class _ClientMtReflexive extends PersistentObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+    public static final String CHILDREN_PROPERTY = \"children\";\n+    public static final String TO_PARENT_PROPERTY = \"toParent\";\n+\n+    protected String name;\n+    protected List children;\n+    protected ValueHolder toParent;\n+\n+    public String getName() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"name\", false);\n+        }\n+        \n+        return name;\n+    }\n+    public void setName(String name) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"name\", false);\n+        }\n+        \n+        Object oldValue = this.name;\n+        this.name = name;\n+        \n+        // notify objectContext about simple property change\n+        if(objectContext != null) {\n+            objectContext.propertyChanged(this, \"name\", oldValue, name);\n+        }\n+    }\n+    \n+    \n+    public List getChildren() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        return children;\n+    }\n+    public void addToChildren(ClientMtReflexive object) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        this.children.add(object);\n+    }\n+    public void removeFromChildren(ClientMtReflexive object) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        this.children.remove(object);\n+    }\n+    \n+    public ClientMtReflexive getToParent() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"toParent\", true);\n+        }\n+        \n+        return (ClientMtReflexive) toParent.getValue();\n+    }\n+    public void setToParent(ClientMtReflexive toParent) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"toParent\", true);\n+        }\n+        \n+        this.toParent.setValue(toParent);\n+    }\n+    \n+}", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java"}, {"additions": 46, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java", "sha": "25ef966764c6387667cc7f5e80b1706603e557a2", "changes": 46, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -0,0 +1,46 @@\n+package org.apache.cayenne.testdo.mt.auto;\n+\n+import java.util.List;\n+\n+/** Class _MtReflexive was generated by Cayenne.\n+  * It is probably a good idea to avoid changing this class manually, \n+  * since it may be overwritten next time code is regenerated. \n+  * If you need to make any customizations, please use subclass. \n+  */\n+public class _MtReflexive extends org.apache.cayenne.CayenneDataObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+    public static final String CHILDREN_PROPERTY = \"children\";\n+    public static final String TO_PARENT_PROPERTY = \"toParent\";\n+\n+    public static final String ID_PK_COLUMN = \"ID\";\n+\n+    public void setName(String name) {\n+        writeProperty(\"name\", name);\n+    }\n+    public String getName() {\n+        return (String)readProperty(\"name\");\n+    }\n+    \n+    \n+    public void addToChildren(org.apache.cayenne.testdo.mt.MtReflexive obj) {\n+        addToManyTarget(\"children\", obj, true);\n+    }\n+    public void removeFromChildren(org.apache.cayenne.testdo.mt.MtReflexive obj) {\n+        removeToManyTarget(\"children\", obj, true);\n+    }\n+    public List getChildren() {\n+        return (List)readProperty(\"children\");\n+    }\n+    \n+    \n+    public void setToParent(org.apache.cayenne.testdo.mt.MtReflexive toParent) {\n+        setToOneTarget(\"toParent\", toParent, true);\n+    }\n+\n+    public org.apache.cayenne.testdo.mt.MtReflexive getToParent() {\n+        return (org.apache.cayenne.testdo.mt.MtReflexive)readProperty(\"toParent\");\n+    } \n+    \n+    \n+}", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java"}, {"additions": 16, "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml", "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml", "sha": "c43015548e670ec28beac94c36545077266c5ecf", "changes": 16, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67", "patch": "@@ -26,6 +26,11 @@\n \t\t<db-attribute name=\"TABLE4_ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n \t\t<db-attribute name=\"TABLE5_ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n \t</db-entity>\n+\t<db-entity name=\"MT_REFLEXIVE\">\n+\t\t<db-attribute name=\"ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n+\t\t<db-attribute name=\"NAME\" type=\"VARCHAR\" isMandatory=\"true\" length=\"200\"/>\n+\t\t<db-attribute name=\"PARENT_ID\" type=\"INTEGER\"/>\n+\t</db-entity>\n \t<db-entity name=\"MT_TABLE1\">\n \t\t<db-attribute name=\"GLOBAL_ATTRIBUTE1\" type=\"VARCHAR\" length=\"100\"/>\n \t\t<db-attribute name=\"SERVER_ATTRIBUTE1\" type=\"VARCHAR\" length=\"100\"/>\n@@ -60,6 +65,9 @@\n \t<obj-entity name=\"MtDeleteRule\" className=\"org.apache.cayenne.testdo.mt.MtDeleteRule\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtDeleteRule\" dbEntityName=\"MT_DELETE_RULE\">\n \t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n \t</obj-entity>\n+\t<obj-entity name=\"MtReflexive\" className=\"org.apache.cayenne.testdo.mt.MtReflexive\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtReflexive\" dbEntityName=\"MT_REFLEXIVE\">\n+\t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n+\t</obj-entity>\n \t<obj-entity name=\"MtTable1\" className=\"org.apache.cayenne.testdo.mt.MtTable1\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtTable1\" dbEntityName=\"MT_TABLE1\">\n \t\t<obj-attribute name=\"globalAttribute1\" type=\"java.lang.String\" db-attribute-path=\"GLOBAL_ATTRIBUTE1\"/>\n \t\t<obj-attribute name=\"serverAttribute1\" type=\"java.lang.String\" db-attribute-path=\"SERVER_ATTRIBUTE1\"/>\n@@ -103,6 +111,12 @@\n \t<db-relationship name=\"toTable5\" source=\"MT_JOIN45\" target=\"MT_TABLE5\" toMany=\"false\">\n \t\t<db-attribute-pair source=\"TABLE5_ID\" target=\"ID\"/>\n \t</db-relationship>\n+\t<db-relationship name=\"children\" source=\"MT_REFLEXIVE\" target=\"MT_REFLEXIVE\" toMany=\"true\">\n+\t\t<db-attribute-pair source=\"ID\" target=\"PARENT_ID\"/>\n+\t</db-relationship>\n+\t<db-relationship name=\"toParent\" source=\"MT_REFLEXIVE\" target=\"MT_REFLEXIVE\" toMany=\"false\">\n+\t\t<db-attribute-pair source=\"PARENT_ID\" target=\"ID\"/>\n+\t</db-relationship>\n \t<db-relationship name=\"table2Array\" source=\"MT_TABLE1\" target=\"MT_TABLE2\" toMany=\"true\">\n \t\t<db-attribute-pair source=\"TABLE1_ID\" target=\"TABLE1_ID\"/>\n \t</db-relationship>\n@@ -121,6 +135,8 @@\n \t<obj-relationship name=\"fromCascade\" source=\"MtDeleteRule\" target=\"MtDeleteCascade\" db-relationship-path=\"fromCascade\"/>\n \t<obj-relationship name=\"fromDeny\" source=\"MtDeleteRule\" target=\"MtDeleteDeny\" db-relationship-path=\"fromDeny\"/>\n \t<obj-relationship name=\"fromNullify\" source=\"MtDeleteRule\" target=\"MtDeleteNullify\" db-relationship-path=\"fromNullify\"/>\n+\t<obj-relationship name=\"children\" source=\"MtReflexive\" target=\"MtReflexive\" db-relationship-path=\"children\"/>\n+\t<obj-relationship name=\"toParent\" source=\"MtReflexive\" target=\"MtReflexive\" db-relationship-path=\"toParent\"/>\n \t<obj-relationship name=\"table2Array\" source=\"MtTable1\" target=\"MtTable2\" db-relationship-path=\"table2Array\"/>\n \t<obj-relationship name=\"table1\" source=\"MtTable2\" target=\"MtTable1\" db-relationship-path=\"table1\"/>\n \t<obj-relationship name=\"table5s\" source=\"MtTable4\" target=\"MtTable5\" db-relationship-path=\"joins.toTable5\"/>", "filename": "framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/f93e70888dab894142766935e94f3a093c3cc121", "parent": "https://github.com/apache/cayenne/commit/4680533dd55e89bc332b5acb272de1cf2921ea64", "message": "CAY-1905 Multi-step prefetching NPE : 1..N..1 with absent N and root with no qualifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1576302 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_45", "file": [{"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java", "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java", "sha": "0e579bc1c05fa3a29733b6383d0ed315021b79cf", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java?ref=f93e70888dab894142766935e94f3a093c3cc121", "patch": "@@ -100,6 +100,12 @@ private void indexParents() {\n         partitionByChild = new HashMap<Object, List<Persistent>>();\n \n         List<Persistent> objects = parentNode.getObjects();\n+        \n+        // this can be null if parent node returned no rows\n+        if(objects == null) {\n+            return;\n+        }\n+        \n         List<DataRow> rows = parentNode.getDataRows();\n         int size = objects.size();\n         for (int i = 0; i < size; i++) {", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java"}, {"additions": 50, "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java", "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java", "sha": "59100e151b5f1bf07258a59e08139b5e86c3753d", "changes": 50, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java?ref=f93e70888dab894142766935e94f3a093c3cc121", "patch": "@@ -39,6 +39,7 @@\n import org.apache.cayenne.testdo.testmap.ArtistExhibit;\n import org.apache.cayenne.testdo.testmap.Exhibit;\n import org.apache.cayenne.testdo.testmap.Gallery;\n+import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.unit.di.server.ServerCase;\n import org.apache.cayenne.unit.di.server.UseServerRuntime;\n \n@@ -100,6 +101,15 @@ protected void createTwoArtistsWithExhibitsDataSet() throws Exception {\n         tArtistExhibit.insert(101, 2);\n         tArtistExhibit.insert(101, 4);\n     }\n+    \n+    protected void createGalleriesAndArtists() throws Exception {\n+        tArtist.insert(11, \"artist2\");\n+        tArtist.insert(101, \"artist3\");\n+\n+        tGallery.insert(25, \"gallery1\");\n+        tGallery.insert(31, \"gallery2\");\n+        tGallery.insert(45, \"gallery3\");\n+    }\n \n     public void testToManyToManyFirstStepUnresolved() throws Exception {\n \n@@ -258,4 +268,44 @@ public void testMixedPrefetch2() throws Exception {\n         ArtistExhibit ae1 = aexhibits.get(0);\n         assertEquals(PersistenceState.COMMITTED, ae1.getPersistenceState());\n     }\n+    \n+    public void testToManyToOne_EmptyToMany() throws Exception {\n+\n+        createGalleriesAndArtists();\n+\n+        SelectQuery<Gallery> q = SelectQuery.query(Gallery.class, Gallery.GALLERY_NAME.eq(\"gallery2\"));\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.disjoint());\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.dot(Painting.TO_ARTIST).disjoint());\n+\n+        List<Gallery> galleries = context.select(q);\n+        assertEquals(1, galleries.size());\n+\n+        Gallery g2 = galleries.get(0);\n+\n+        // this relationship should be resolved\n+        assertTrue(g2.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName()) instanceof ValueHolder);\n+        List<Painting> exhibits = (List<Painting>) g2.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName());\n+        assertFalse(((ValueHolder) exhibits).isFault());\n+        assertEquals(0, exhibits.size());\n+    }\n+    \n+    public void testToManyToOne_EmptyToMany_NoRootQualifier() throws Exception {\n+\n+        createGalleriesAndArtists();\n+\n+        SelectQuery<Gallery> q = SelectQuery.query(Gallery.class);\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.disjoint());\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.dot(Painting.TO_ARTIST).disjoint());\n+\n+        List<Gallery> galleries = context.select(q);\n+        assertEquals(3, galleries.size());\n+\n+        Gallery g = galleries.get(0);\n+\n+        // this relationship should be resolved\n+        assertTrue(g.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName()) instanceof ValueHolder);\n+        List<Painting> exhibits = (List<Painting>) g.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName());\n+        assertFalse(((ValueHolder) exhibits).isFault());\n+        assertEquals(0, exhibits.size());\n+    }\n }", "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "1e9dda78e81ab5dd629c8b4f8a9ed5d673ac5b69", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f93e70888dab894142766935e94f3a093c3cc121", "patch": "@@ -56,6 +56,7 @@ CAY-1877 In-memory evaluation of expression may fail with UnsupportedOpeartionEx\n CAY-1880 objectStore snapshots never cleared from RefreshQuery when \"use shared cache\" unchecked\n CAY-1881 CayenneModeler (Mac version) doesn't work with Java 7\n CAY-1885 Null value in subclass's field.\n+CAY-1905 Multi-step prefetching NPE : 1..N..1 with absent N and root with no qualifier\n \n ----------------------------------\n Release: 3.2M1", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6", "parent": "https://github.com/apache/cayenne/commit/73a225f4ab69767851aa041042130e41d6588a25", "message": "CAY-1758 cdbimport improvements\n\nfixing NPE on save of the existing datamap\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1407929 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_46", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java", "blob_url": "https://github.com/apache/cayenne/blob/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java", "sha": "3591d2e2e3293b2e9ae335b55dd2a7a352a96cfe", "changes": 8, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java?ref=11dc22c3a3f80524e24ef22976b1a9010bfc7dc6", "patch": "@@ -201,15 +201,13 @@ DataMap createDataMap(DbImportParameters parameters) throws IOException {\n                 dataMap.clearResultSets();\n             }\n         } else {\n-\n-            // the name and URL are important for the save to work\n             String dataMapName = name.substring(0, name.length() - DATA_MAP_LOCATION_SUFFIX.length());\n-            URL dataMapUrl = dataMapFile.toURI().toURL();\n-\n             dataMap = new DataMap(dataMapName);\n-            dataMap.setConfigurationSource(new URLResource(dataMapUrl));\n         }\n \n+        URL dataMapUrl = dataMapFile.toURI().toURL();\n+        dataMap.setConfigurationSource(new URLResource(dataMapUrl));\n+\n         // update map defaults\n \n         // do not override default package of existing DataMap unless it is", "filename": "framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java"}, {"additions": 41, "raw_url": "https://github.com/apache/cayenne/raw/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java", "blob_url": "https://github.com/apache/cayenne/blob/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java", "sha": "8da7af646d4cd2ffade454d49e17149006232664", "changes": 46, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java?ref=11dc22c3a3f80524e24ef22976b1a9010bfc7dc6", "patch": "@@ -21,6 +21,8 @@\n import static org.mockito.Mockito.mock;\n \n import java.io.File;\n+import java.io.PrintWriter;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.sql.Connection;\n \n@@ -32,9 +34,11 @@\n import org.apache.cayenne.di.DIBootstrap;\n import org.apache.cayenne.di.Injector;\n import org.apache.cayenne.map.DataMap;\n+import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.resource.URLResource;\n import org.apache.cayenne.tools.configuration.ToolsModule;\n import org.apache.cayenne.util.Util;\n+import org.apache.cayenne.util.XMLEncoder;\n import org.apache.commons.logging.Log;\n \n public class DbImportActionTest extends TestCase {\n@@ -113,16 +117,13 @@ public void testSaveLoaded() throws Exception {\n         assertTrue(\"Has no project version saved\", contents.contains(\"project-version=\\\"\"));\n     }\n \n-    public void testCreateDataMap() throws Exception {\n+    public void testCreateDataMap_New() throws Exception {\n         Log log = mock(Log.class);\n         Injector i = DIBootstrap.createInjector(new ToolsModule(log), new DbImportModule());\n \n         DbImportAction action = i.getInstance(DbImportAction.class);\n \n-        String packagePath = getClass().getPackage().getName().replace('.', '/');\n-        URL packageUrl = getClass().getClassLoader().getResource(packagePath);\n-        assertNotNull(packageUrl);\n-        URL outUrl = new URL(packageUrl, \"dbimport/testCreateDataMap1.map.xml\");\n+        URL outUrl = dataMapUrl(\"testCreateDataMap1.map.xml\");\n \n         File out = new File(outUrl.toURI());\n         out.delete();\n@@ -134,4 +135,39 @@ public void testCreateDataMap() throws Exception {\n         assertEquals(\"testCreateDataMap1\", dataMap.getName());\n         assertEquals(outUrl, dataMap.getConfigurationSource().getURL());\n     }\n+\n+    public void testCreateDataMap_Existing() throws Exception {\n+\n+        URL outUrl = dataMapUrl(\"testCreateDataMap2.map.xml\");\n+\n+        File out = new File(outUrl.toURI());\n+        out.delete();\n+        assertFalse(out.isFile());\n+\n+        DataMap tempMap = new DataMap();\n+        tempMap.addDbEntity(new DbEntity(\"X\"));\n+        \n+        PrintWriter writer = new PrintWriter(out);\n+        tempMap.encodeAsXML(new XMLEncoder(writer));\n+        writer.close();\n+        assertTrue(out.isFile());\n+        \n+        Log log = mock(Log.class);\n+        Injector i = DIBootstrap.createInjector(new ToolsModule(log), new DbImportModule());\n+\n+        DbImportAction action = i.getInstance(DbImportAction.class);\n+\n+        DbImportParameters parameters = new DbImportParameters();\n+        parameters.setDataMapFile(out);\n+        DataMap dataMap = action.createDataMap(parameters);\n+        assertEquals(\"testCreateDataMap2\", dataMap.getName());\n+        assertEquals(outUrl, dataMap.getConfigurationSource().getURL());\n+    }\n+\n+    private URL dataMapUrl(String name) throws MalformedURLException {\n+        String packagePath = getClass().getPackage().getName().replace('.', '/');\n+        URL packageUrl = getClass().getClassLoader().getResource(packagePath);\n+        assertNotNull(packageUrl);\n+        return new URL(packageUrl, \"dbimport/\" + name);\n+    }\n }", "filename": "framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/cd6a8f2fdb869fa15b21c7ae09c7f02733f93e70", "parent": "https://github.com/apache/cayenne/commit/613617310faff15cfd5a15c4145d512a70f709ba", "message": "CAY-12(Cayenne Internal). Fixed NPE on selecting null local datasource\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1332170 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_47", "file": [{"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/cd6a8f2fdb869fa15b21c7ae09c7f02733f93e70/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/pref/DataNodeDefaults.java", "blob_url": "https://github.com/apache/cayenne/blob/cd6a8f2fdb869fa15b21c7ae09c7f02733f93e70/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/pref/DataNodeDefaults.java", "sha": "eb70a5376665d3599efa2bb95e7b23865f5ee249", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/pref/DataNodeDefaults.java?ref=cd6a8f2fdb869fa15b21c7ae09c7f02733f93e70", "patch": "@@ -23,9 +23,9 @@\n import org.apache.cayenne.pref.RenamedPreferences;\n \n public class DataNodeDefaults extends RenamedPreferences {\n-    \n+\n     private String localDataSource;\n-    \n+\n     public static final String LOCAL_DATA_SOURCE_PROPERTY = \"localDataSource\";\n \n     public DataNodeDefaults(Preferences pref) {\n@@ -35,12 +35,14 @@ public DataNodeDefaults(Preferences pref) {\n     public void setLocalDataSource(String localDataSource) {\n         if (getCurrentPreference() != null) {\n             this.localDataSource = localDataSource;\n-            getCurrentPreference().put(LOCAL_DATA_SOURCE_PROPERTY, localDataSource);\n+            if (localDataSource != null) {\n+                getCurrentPreference().put(LOCAL_DATA_SOURCE_PROPERTY, localDataSource);\n+            }\n         }\n     }\n \n     public String getLocalDataSource() {\n-        if(localDataSource == null){\n+        if (localDataSource == null) {\n             localDataSource = getCurrentPreference().get(LOCAL_DATA_SOURCE_PROPERTY, \"\");\n         }\n         return localDataSource;", "filename": "modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/pref/DataNodeDefaults.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8", "parent": "https://github.com/apache/cayenne/commit/b5d0c2d6862ad6f6b442049a282677a3431fd438", "message": "CAY-1624 [PATCH] PersistentObjectHolder throws NPE is object is transient - not in an ObjectContext\n\npatch by John Huss\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1207109 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_48", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "2de815dc20ff6e27839fdfa490f7664a54ba3c23", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=876f16d40cfaa04fad57ac42b26d0ecee0dacaa8", "patch": "@@ -29,6 +29,7 @@ Bug Fixes Since 3.1M3:\n CAY-1477 Modeler: Better validation for erroneous horizontal inheritance mapping\n CAY-1513 Deadlock in PoolManager\n CAY-1623 [PATCH] PersistentObjectList.setValue does not work\n+CAY-1624 [PATCH] PersistentObjectHolder throws NPE is object is transient - not in an ObjectContext\n CAY-1627 CayenneModeler: collection types for to-many relationships are not saved\n CAY-1628 ClassCastException when using java.util.Set or java.util.Map as collection type for to-many relationship\n CAY-1631 Oracle - passing blobs as stored procedure parameters", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java", "blob_url": "https://github.com/apache/cayenne/blob/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java", "sha": "078fa1eb3d03eb3e4abc3713f8f648413716db26", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java?ref=876f16d40cfaa04fad57ac42b26d0ecee0dacaa8", "patch": "@@ -86,7 +86,7 @@ public synchronized Object setValue(Object value) throws CayenneRuntimeException\n         }\n \n         Object oldValue = setValueDirectly(value);\n-        if (oldValue != value) {\n+        if (oldValue != value && relationshipOwner.getObjectContext() != null) {\n             relationshipOwner.getObjectContext().propertyChanged(relationshipOwner, relationshipName, oldValue, value);\n     \n             if (oldValue instanceof Persistent) {", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/6d832a862370f2064b11cb212c2563c05527b239", "parent": "https://github.com/apache/cayenne/commit/48525f1759b7685b738d0c074acf99c38a72bed3", "message": "CAY-1444 NPE when persisting a newly instatiated object\n\npatch by Dzmitry Kazimirchyk\nsome small edits + extra unit test by aadamchik\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1090117 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_49", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "e97e67ee77b6f71a41a17905d937e13597928d5a", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -120,6 +120,7 @@ CAY-1500 MySQL JDBC Batching\n Bug Fixes Since 3.0.1:\n \n CAY-1403 Method \"readNestedProperty\" Should Resolve Through Iterative Invocations onto DataObject and Not Complete Within Cayenne.readNestedProperty\n+CAY-1444 NPE when persisting a newly instatiated object\n CAY-1456 Investigate auto-increment columns on DB2 and switch the adapter policy to support them\n CAY-1484 Flattened attribute queries are incorrectly generated\n CAY-1485 Memory information for about dialog", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java", "sha": "0d1e41c8959601bf5800b2209387f4eb60731424", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -20,6 +20,7 @@\n package org.apache.cayenne.access;\n \n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -79,6 +80,12 @@ void appendQueriesInternal(Collection<Query> queries) {\n                     Map<Object, Object> snapshot = diffBuilder.buildDBDiff(parent\n                             .objectDiff(o.getObjectId()));\n \n+                    // we need to insert even if there is no changes to default values\n+                    // so creating an empty changes map\n+                    if (snapshot == null) {\n+                        snapshot = new HashMap<Object, Object>();\n+                    }\n+\n                     batch.add(snapshot, o.getObjectId());\n                 }\n             }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java"}, {"additions": 14, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java", "sha": "208055002971e077a12ebe7ab17a7cd3ac77ec0a", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -22,6 +22,7 @@\n import org.apache.cayenne.graph.GraphDiff;\n import org.apache.cayenne.graph.MockGraphChangeHandler;\n import org.apache.cayenne.testdo.testmap.Artist;\n+import org.apache.cayenne.testdo.testmap.NullTestEntity;\n import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.unit.CayenneCase;\n \n@@ -82,5 +83,18 @@ public void nodeIdChanged(Object nodeId, Object newId) {\n         diff2.apply(diffChecker2);\n         assertEquals(1, diffChecker2.getCallbackCount());\n         assertSame(p.getObjectId(), newIds2[0]);\n+        \n+        //commit new object with uninitialized attributes\n+        \n+        context = createDataContext();\n+        \n+        context.newObject(NullTestEntity.class);\n+        \n+        assertTrue(context.hasChanges());\n+        \n+        GraphDiff diff3 = context.flushToParent(true);\n+        assertNotNull(diff3);\n+        assertFalse(context.hasChanges());\n+        \n     }\n }", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java"}, {"additions": 15, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java", "sha": "cbef3e3f7f25af1afeaa92a429beda8247b2dafa", "changes": 15, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -46,6 +46,7 @@\n import org.apache.cayenne.di.Inject;\n import org.apache.cayenne.exp.Expression;\n import org.apache.cayenne.exp.ExpressionFactory;\n+import org.apache.cayenne.graph.GraphDiff;\n import org.apache.cayenne.map.EntityResolver;\n import org.apache.cayenne.query.EJBQLQuery;\n import org.apache.cayenne.query.ObjectIdQuery;\n@@ -60,6 +61,7 @@\n import org.apache.cayenne.test.jdbc.TableHelper;\n import org.apache.cayenne.testdo.testmap.Artist;\n import org.apache.cayenne.testdo.testmap.Exhibit;\n+import org.apache.cayenne.testdo.testmap.NullTestEntity;\n import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.testdo.testmap.ROArtist;\n import org.apache.cayenne.unit.AccessStackAdapter;\n@@ -723,6 +725,19 @@ public void testBeforeHollowDeleteShouldChangeStateToCommited() throws Exception\n         assertEquals(PersistenceState.DELETED, hollow.getPersistenceState());\n     }\n \n+    public void testCommitUnchangedInsert() throws Exception {\n+        \n+        // see CAY-1444 - reproducible on DB's that support auto incremented PK\n+        \n+        NullTestEntity newObject = context.newObject(NullTestEntity.class);\n+\n+        assertTrue(context.hasChanges());\n+        context.commitChanges();\n+        assertFalse(context.hasChanges());\n+\n+        assertEquals(PersistenceState.COMMITTED, newObject.getPersistenceState());\n+    }\n+\n     private void changeMaxConnections(int delta) {\n         PoolManager manager = (PoolManager) dataSource;\n         manager.setMaxConnections(manager.getMaxConnections() + delta);", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java"}, {"additions": 27, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java", "sha": "1d3f78169b2986593b585339bb2c142aa9cbd136", "changes": 27, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -0,0 +1,27 @@\n+/*****************************************************************\n+ *   Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ ****************************************************************/\n+package org.apache.cayenne.testdo.testmap;\n+\n+import org.apache.cayenne.testdo.testmap.auto._NullTestEntity;\n+\n+public class NullTestEntity extends _NullTestEntity {\n+\n+}\n+\n+", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java"}, {"additions": 24, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java", "sha": "74fa0c76c7b3a7b78cc8981dce2c45b320a1327e", "changes": 24, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -0,0 +1,24 @@\n+package org.apache.cayenne.testdo.testmap.auto;\n+\n+import org.apache.cayenne.CayenneDataObject;\n+\n+/**\n+ * Class _NullTestEntity was generated by Cayenne.\n+ * It is probably a good idea to avoid changing this class manually,\n+ * since it may be overwritten next time code is regenerated.\n+ * If you need to make any customizations, please use subclass.\n+ */\n+public abstract class _NullTestEntity extends CayenneDataObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+\n+    public static final String ID_PK_COLUMN = \"ID\";\n+\n+    public void setName(String name) {\n+        writeProperty(\"name\", name);\n+    }\n+    public String getName() {\n+        return (String)readProperty(\"name\");\n+    }\n+\n+}", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java"}, {"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml", "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml", "sha": "f4ff5f9f1f4d2e9dd3f20e0b6b82afc7af538c79", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml?ref=6d832a862370f2064b11cb212c2563c05527b239", "patch": "@@ -208,6 +208,10 @@\n \t<db-entity name=\"NO_PK_TEST\">\n \t\t<db-attribute name=\"ATTRIBUTE1\" type=\"INTEGER\"/>\n \t</db-entity>\n+\t<db-entity name=\"NULL_TEST\">\n+\t\t<db-attribute name=\"ID\" type=\"BIGINT\" isPrimaryKey=\"true\" isGenerated=\"true\" isMandatory=\"true\"/>\n+\t\t<db-attribute name=\"NAME\" type=\"VARCHAR\" length=\"100\"/>\n+\t</db-entity>\n \t<db-entity name=\"PAINTING\">\n \t\t<db-attribute name=\"ARTIST_ID\" type=\"BIGINT\"/>\n \t\t<db-attribute name=\"ESTIMATED_PRICE\" type=\"DECIMAL\" length=\"10\" scale=\"2\"/>\n@@ -448,6 +452,9 @@\n \t<obj-entity name=\"NoPkTestEntity\" className=\"org.apache.cayenne.testdo.testmap.NoPkTestEntity\" dbEntityName=\"NO_PK_TEST\">\n \t\t<obj-attribute name=\"attribute1\" type=\"java.lang.Integer\" db-attribute-path=\"ATTRIBUTE1\"/>\n \t</obj-entity>\n+\t<obj-entity name=\"NullTestEntity\" className=\"org.apache.cayenne.testdo.testmap.NullTestEntity\" dbEntityName=\"NULL_TEST\">\n+\t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n+\t</obj-entity>\n \t<obj-entity name=\"Painting\" className=\"org.apache.cayenne.testdo.testmap.Painting\" dbEntityName=\"PAINTING\" superClassName=\"org.apache.cayenne.testdo.testmap.ArtDataObject\">\n \t\t<obj-attribute name=\"estimatedPrice\" type=\"java.math.BigDecimal\" db-attribute-path=\"ESTIMATED_PRICE\"/>\n \t\t<obj-attribute name=\"paintingDescription\" type=\"java.lang.String\" db-attribute-path=\"PAINTING_DESCRIPTION\"/>", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/84e4df343db86df6fd7214871b44310fe9c9134b", "parent": "https://github.com/apache/cayenne/commit/15875523fc872f9ae2efa28f68225821374b0408", "message": "CAY-1489 NPE using DataContext.objectFromDataRow for a nested context\n\nPatch by Andrei Veprev\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1026083 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_50", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "3ae70b20e4e8401a5ccc8ecc12af05aca3dd86f3", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -72,6 +72,7 @@ Bug Fixes Since 3.0.1:\n CAY-1484 Flattened attribute queries are incorrectly generated\n CAY-1485 Memory information for about dialog\n CAY-1488 OutOfMemory when selecting \"Remove Foreign Keys Mapped as Object Attributes\"\n+CAY-1489 NPE using DataContext.objectFromDataRow for a nested context\n CAY-1490 Maven cgen: all and datamap modes can not be activated\n CAY-1496 Problem in derby: comparison operators are not supported on Clob object values.\n ", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 15, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java", "sha": "631c10c33d713642c39bed9e11f8755067c191bc", "changes": 15, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -458,10 +458,25 @@ public boolean visitToOne(ToOneProperty property) {\n     public List objectsFromDataRows(\n             ClassDescriptor descriptor,\n             List<? extends DataRow> dataRows) {\n+        // TODO: If data row cache is not available it means that current data context is\n+        // child. We need to redirect this method call to parent data context as an\n+        // internal query. It is not obvious and has some overhead. Redesign for nested\n+        // contexts should be done.\n+        if (getObjectStore().getDataRowCache() == null) {\n+            return objectsFromDataRowsFromParentContext(descriptor, dataRows);\n+        }\n         return new ObjectResolver(this, descriptor, true)\n                 .synchronizedObjectsFromDataRows(dataRows);\n     }\n \n+    private List objectsFromDataRowsFromParentContext(\n+            ClassDescriptor descriptor,\n+            List<? extends DataRow> dataRows) {\n+        return getChannel().onQuery(\n+                this,\n+                new ObjectsFromDataRowsQuery(descriptor, dataRows)).firstList();\n+    }\n+\n     /**\n      * Creates a DataObject from DataRow.\n      * ", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java"}, {"additions": 19, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java", "sha": "8e5ba22ccc9291fd7600bafecbd65a439d4e6603", "changes": 19, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -42,9 +42,28 @@\n  */\n class DataContextQueryAction extends ObjectContextQueryAction {\n \n+    protected DataContext actingDataContext;\n+\n     public DataContextQueryAction(DataContext actingContext, ObjectContext targetContext,\n             Query query) {\n         super(actingContext, targetContext, query);\n+        actingDataContext = actingContext;\n+    }\n+\n+    @Override\n+    protected boolean interceptInternalQuery() {\n+        return interceptObjectFromDataRowsQuery();\n+    }\n+\n+    private boolean interceptObjectFromDataRowsQuery() {\n+        if (query instanceof ObjectsFromDataRowsQuery) {\n+            ObjectsFromDataRowsQuery objectsFromDataRowsQuery = (ObjectsFromDataRowsQuery) query;\n+            response = new ListResponse(actingDataContext.objectsFromDataRows(\n+                    objectsFromDataRowsQuery.getDescriptor(),\n+                    objectsFromDataRowsQuery.getDataRows()));\n+            return DONE;\n+        }\n+        return !DONE;\n     }\n \n     /**", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java"}, {"additions": 151, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java", "sha": "a6876c103031d094e8db29108b8448f62f20b921", "changes": 151, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -0,0 +1,151 @@\n+/*****************************************************************\n+ *   Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ ****************************************************************/\n+package org.apache.cayenne.access;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.cayenne.DataRow;\n+import org.apache.cayenne.configuration.ConfigurationNodeVisitor;\n+import org.apache.cayenne.map.DataMap;\n+import org.apache.cayenne.map.DbEntity;\n+import org.apache.cayenne.map.EntityResolver;\n+import org.apache.cayenne.map.ObjEntity;\n+import org.apache.cayenne.map.Procedure;\n+import org.apache.cayenne.query.PrefetchTreeNode;\n+import org.apache.cayenne.query.Query;\n+import org.apache.cayenne.query.QueryCacheStrategy;\n+import org.apache.cayenne.query.QueryMetadata;\n+import org.apache.cayenne.query.QueryRouter;\n+import org.apache.cayenne.query.SQLAction;\n+import org.apache.cayenne.query.SQLActionVisitor;\n+import org.apache.cayenne.reflect.ClassDescriptor;\n+\n+class ObjectsFromDataRowsQuery implements Query, QueryMetadata {\n+\n+    private ClassDescriptor descriptor;\n+\n+    private List<? extends DataRow> dataRows;\n+\n+    public ObjectsFromDataRowsQuery(ClassDescriptor descriptor,\n+            List<? extends DataRow> dataRows) {\n+        super();\n+        this.descriptor = descriptor;\n+        this.dataRows = dataRows;\n+    }\n+\n+    public ClassDescriptor getDescriptor() {\n+        return descriptor;\n+    }\n+\n+    public List<? extends DataRow> getDataRows() {\n+        return dataRows;\n+    }\n+\n+    public <T> T acceptVisitor(ConfigurationNodeVisitor<T> visitor) {\n+        return visitor.visitQuery(this);\n+    }\n+\n+    public QueryMetadata getMetaData(EntityResolver resolver) {\n+        return this;\n+    }\n+\n+    public void route(QueryRouter router, EntityResolver resolver, Query substitutedQuery) {\n+    }\n+\n+    public SQLAction createSQLAction(SQLActionVisitor visitor) {\n+        return null;\n+    }\n+\n+    public String getName() {\n+        return null;\n+    }\n+\n+    public DataMap getDataMap() {\n+        return null;\n+    }\n+\n+    public ClassDescriptor getClassDescriptor() {\n+        return null;\n+    }\n+\n+    public ObjEntity getObjEntity() {\n+        return null;\n+    }\n+\n+    public DbEntity getDbEntity() {\n+        return null;\n+    }\n+\n+    public Procedure getProcedure() {\n+        return null;\n+    }\n+\n+    public QueryCacheStrategy getCacheStrategy() {\n+        return null;\n+    }\n+\n+    public String getCacheKey() {\n+        return null;\n+    }\n+\n+    public String[] getCacheGroups() {\n+        return null;\n+    }\n+\n+    public boolean isFetchingDataRows() {\n+        return false;\n+    }\n+\n+    public boolean isRefreshingObjects() {\n+        return false;\n+    }\n+\n+    public int getPageSize() {\n+        return 0;\n+    }\n+\n+    public int getFetchOffset() {\n+        return 0;\n+    }\n+\n+    public int getFetchLimit() {\n+        return 0;\n+    }\n+\n+    public Query getOrginatingQuery() {\n+        return null;\n+    }\n+\n+    public PrefetchTreeNode getPrefetchTree() {\n+        return null;\n+    }\n+\n+    public Map<String, String> getPathSplitAliases() {\n+        return null;\n+    }\n+\n+    public List<Object> getResultSetMapping() {\n+        return null;\n+    }\n+\n+    public int getStatementFetchSize() {\n+        return 0;\n+    }\n+}", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java"}, {"additions": 14, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java", "sha": "10990ec821a3b45c43b6a1698d2fa43d2f9bcd4b", "changes": 27, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -88,13 +88,7 @@ public QueryResponse execute() {\n             if (interceptRelationshipQuery() != DONE) {\n                 if (interceptRefreshQuery() != DONE) {\n                     if (interceptLocalCache() != DONE) {\n-                        // when changing the flow below, make sure to update\n-                        // 'getCacheObjectFactory' method that mimics the interceptors\n-                        // below 'interceptLocalCache'. See comment in an inner class\n-                        // factory in this method...\n-                        if (interceptPaginatedQuery() != DONE) {\n-                            runQuery();\n-                        }\n+                        executePostCache();\n                     }\n                 }\n             }\n@@ -104,6 +98,14 @@ public QueryResponse execute() {\n         return response;\n     }\n \n+    private void executePostCache() {\n+        if (interceptInternalQuery() != DONE) {\n+            if (interceptPaginatedQuery() != DONE) {\n+                runQuery();\n+            }\n+        }\n+    }\n+\n     /**\n      * Transfers fetched objects into the target context if it is different from \"acting\"\n      * context. Note that when this method is invoked, result objects are already\n@@ -150,6 +152,10 @@ protected void interceptObjectConversion() {\n \n     }\n \n+    protected boolean interceptInternalQuery() {\n+        return !DONE;\n+    }\n+\n     protected boolean interceptOIDQuery() {\n         if (query instanceof ObjectIdQuery) {\n             ObjectIdQuery oidQuery = (ObjectIdQuery) query;\n@@ -317,12 +323,7 @@ protected QueryCacheEntryFactory getCacheObjectFactory() {\n         return new QueryCacheEntryFactory() {\n \n             public Object createObject() {\n-                // must follow the same logic as 'execute' below locla cache interceptor\n-                // method... reuse that code somehow???\n-                if (interceptPaginatedQuery() != DONE) {\n-                    runQuery();\n-                }\n-\n+                executePostCache();\n                 return response.firstList();\n             }\n         };", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java"}, {"additions": 22, "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java", "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java", "sha": "7545f34e61c51687eef239da4a0d08a66cc320cd", "changes": 22, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b", "patch": "@@ -19,11 +19,13 @@\n \n package org.apache.cayenne.access;\n \n+import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n \n import org.apache.cayenne.Cayenne;\n import org.apache.cayenne.DataObject;\n+import org.apache.cayenne.DataRow;\n import org.apache.cayenne.ObjectContext;\n import org.apache.cayenne.ObjectId;\n import org.apache.cayenne.PersistenceState;\n@@ -476,4 +478,24 @@ public void testPrefetchingToMany() throws Exception {\n             unblockQueries();\n         }\n     }\n+\n+    public void testObjectFromDataRow() throws Exception {\n+        deleteTestData();\n+\n+        DataContext context = createDataContext();\n+        DataContext childContext = (DataContext) context.createChildContext();\n+\n+        DataRow row = new DataRow(8);\n+        row.put(\"ARTIST_ID\", 5l);\n+        row.put(\"ARTIST_NAME\", \"A\");\n+        row.put(\"DATE_OF_BIRTH\", new Date());\n+\n+        Artist artist = childContext.objectFromDataRow(Artist.class, row, true);\n+        assertNotNull(artist);\n+        assertEquals(PersistenceState.COMMITTED, artist.getPersistenceState());\n+        assertSame(childContext, artist.getObjectContext());\n+        Object parentArtist = context.getObjectStore().getNode(artist.getObjectId());\n+        assertNotNull(parentArtist);\n+        assertNotSame(artist, parentArtist);\n+    }\n }", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/5d23acc60390441c0897bb5e370b61177d630f70", "parent": "https://github.com/apache/cayenne/commit/0e960bdefbbd481394ebd12e9fc3e915cc34c244", "message": "CAY-1405  Exception when attempting to \"Infer Relationships\"\n\nFixing NPE per Jira and also adding some trivial string comparision optimizations\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@928493 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_51", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/5d23acc60390441c0897bb5e370b61177d630f70/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/5d23acc60390441c0897bb5e370b61177d630f70/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "9f11164f0f35a6c2a6075aec90b65f7a971d613d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=5d23acc60390441c0897bb5e370b61177d630f70", "patch": "@@ -61,6 +61,7 @@ CAY-1397 ROP: Missing the COMMIT state when deleting HOLLOW object\n CAY-1400 lazyInitParentDomainName will become null when using Child Context\n CAY-1401 Cache group removed from modeler query\n CAY-1404 ClassCastException during ObjectDetachOperation\n+CAY-1405 Exception when attempting to \"Infer Relationships\"\n CAY-1409 Pkgenerator is accessed needlessly for join tables with own database generated PK\n \n ----------------------------------", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 48, "raw_url": "https://github.com/apache/cayenne/raw/5d23acc60390441c0897bb5e370b61177d630f70/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/autorelationship/InferRelationshipsControllerBase.java", "blob_url": "https://github.com/apache/cayenne/blob/5d23acc60390441c0897bb5e370b61177d630f70/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/autorelationship/InferRelationshipsControllerBase.java", "sha": "faa85d202c3a7b1ceb0fa7896483c862bf39ae4b", "changes": 66, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/autorelationship/InferRelationshipsControllerBase.java?ref=5d23acc60390441c0897bb5e370b61177d630f70", "patch": "@@ -20,8 +20,8 @@\n \n import java.awt.Component;\n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n \n@@ -71,27 +71,38 @@ public void setRelationships() {\n     }\n \n     protected void createRelationships(DbEntity entity) {\n-        Collection<DbAttribute> attr = entity.getAttributes();\n \n-        for (DbAttribute attribute : attr) {\n+        for (DbAttribute attribute : entity.getAttributes()) {\n \n-            for (DbEntity myEntity : entities) {\n-                if (attribute.getName().equalsIgnoreCase(myEntity.getName() + \"_ID\")\n+            String name = attribute.getName();\n+            if (name.length() < 4) {\n+                continue;\n+            }\n+\n+            if (!name.substring(name.length() - 3, name.length()).equalsIgnoreCase(\"_ID\")) {\n+                continue;\n+            }\n+\n+            String baseName = name.substring(0, name.length() - 3);\n+            for (DbEntity targetEntity : entities) {\n+                // TODO: should we handle relationships to self??\n+                if (targetEntity == entity) {\n+                    continue;\n+                }\n+\n+                if (baseName.equalsIgnoreCase(targetEntity.getName())\n                         && !attribute.isPrimaryKey()\n-                        && !myEntity.getAttributes().isEmpty()\n-                        && myEntity != entity) {\n+                        && !targetEntity.getAttributes().isEmpty()) {\n \n                     if (!attribute.isForeignKey()) {\n                         InferredRelationship myir = new InferredRelationship();\n                         myir.setSource(entity);\n-                        myir.setTarget(myEntity);\n+                        myir.setTarget(targetEntity);\n                         inferredRelationships.add(myir);\n                     }\n-\n-                    createReversRelationship(myEntity, entity);\n+                    createReversRelationship(targetEntity, entity);\n                 }\n             }\n-\n         }\n     }\n \n@@ -153,16 +164,35 @@ protected DbAttribute getJoinAttribute(DbEntity sEntity, DbEntity tEntity) {\n     }\n \n     protected void createJoins() {\n-        for (InferredRelationship inferred : inferredRelationships) {\n-            DbAttribute join = getJoinAttribute(inferred.getSource(), inferred\n-                    .getTarget());\n-            inferred.setJoinSource(join);\n-            if (join.isPrimaryKey()) {\n+        Iterator<InferredRelationship> it = inferredRelationships.iterator();\n+        while (it.hasNext()) {\n+            InferredRelationship inferred = it.next();\n+\n+            DbAttribute src = getJoinAttribute(inferred.getSource(), inferred.getTarget());\n+            if (src == null) {\n+                // TODO: andrus 03/28/2010 this is pretty inefficient I guess... We should\n+                // check for this condition earlier. See CAY-1405 for the map that caused\n+                // this issue\n+                it.remove();\n+                continue;\n+            }\n+\n+            DbAttribute target = getJoinAttribute(inferred.getTarget(), inferred\n+                    .getSource());\n+            if (target == null) {\n+                // TODO: andrus 03/28/2010 this is pretty inefficient I guess... We should\n+                // check for this condition earlier. See CAY-1405 for the map that caused\n+                // this issue\n+                it.remove();\n+                continue;\n+            }\n+\n+            inferred.setJoinSource(src);\n+            if (src.isPrimaryKey()) {\n                 inferred.setToMany(true);\n             }\n \n-            inferred.setJoinTarget(getJoinAttribute(inferred.getTarget(), inferred\n-                    .getSource()));\n+            inferred.setJoinTarget(target);\n         }\n     }\n ", "filename": "framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/autorelationship/InferRelationshipsControllerBase.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/b9d240431d096af11afe94fef943ae3b5471e8b3", "parent": "https://github.com/apache/cayenne/commit/62b3782359556e2a01b0f395ccc1ff330c86f102", "message": "CAY-1310 Remove everything deprecated in 3.0\n\nfixing Modeler NPE on 'New Project' action\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@882896 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_52", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/b9d240431d096af11afe94fef943ae3b5471e8b3/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/FileConfiguration.java", "blob_url": "https://github.com/apache/cayenne/blob/b9d240431d096af11afe94fef943ae3b5471e8b3/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/FileConfiguration.java", "sha": "dc2b2a6fa017a2bc257d12506d904023420326e0", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/FileConfiguration.java?ref=b9d240431d096af11afe94fef943ae3b5471e8b3", "patch": "@@ -103,6 +103,13 @@ public FileConfiguration(File domainConfigurationFile) {\n             locator.addFilesystemPath(projectDirectory);\n         }\n     }\n+    \n+    @Override\n+    public void initialize() throws Exception {\n+        if (getProjectFile() != null) {\n+            super.initialize();\n+        }\n+    }\n \n     /**\n      * Adds the given String as a custom path for filesystem lookups. The path can be", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/FileConfiguration.java"}, {"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/b9d240431d096af11afe94fef943ae3b5471e8b3/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/ProjectConfiguration.java", "blob_url": "https://github.com/apache/cayenne/blob/b9d240431d096af11afe94fef943ae3b5471e8b3/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/ProjectConfiguration.java", "sha": "8dc85c93ce4838bba67eaa4ca4d1bb543e49c9ed", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/ProjectConfiguration.java?ref=b9d240431d096af11afe94fef943ae3b5471e8b3", "patch": "@@ -51,7 +51,7 @@ public ProjectConfiguration(File projectFile) {\n \n     @Override\n     public void initialize() throws Exception {\n-        if(getProjectFile().isFile()) {\n+        if(projectFile != null && projectFile.isFile()) {\n             super.initialize();\n         }\n     }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/ProjectConfiguration.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/f60ff78dd6584ee195a11a091d5e41020b349408", "parent": "https://github.com/apache/cayenne/commit/5274ab1f1a2dad090e5fa68ab9805f98160e663f", "message": "CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n\npatch by Dima Loiko. Issue fixed\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@760797 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_53", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/f60ff78dd6584ee195a11a091d5e41020b349408/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/f60ff78dd6584ee195a11a091d5e41020b349408/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "8236725d345d3781938fda3cf5ccc4e66b6ea1f7", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f60ff78dd6584ee195a11a091d5e41020b349408", "patch": "@@ -42,6 +42,7 @@ CAY-1155 Modeler template for SQLServer driver has a typo in the driver name\n CAY-1157 Modeler: Concurrent mod exception on removing DbRelationship\n CAY-1160 Default delete rule is not used when migrating schema (to model)\n CAY-1166 Type checking in the modeler\n+CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n CAY-1176 missing classes in ROP cayenne-client render nested contexts unusable\n CAY-1180 Model marked as dirty when leaving DataMap name field\n CAY-1183 commitToParent() makes object persistence state committed, produces exception when using object in parent context (ROP)", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/f60ff78dd6584ee195a11a091d5e41020b349408/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java", "blob_url": "https://github.com/apache/cayenne/blob/f60ff78dd6584ee195a11a091d5e41020b349408/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java", "sha": "2e29f5af7d9558f62a316502d66dbc9fc416968a", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java?ref=f60ff78dd6584ee195a11a091d5e41020b349408", "patch": "@@ -73,7 +73,10 @@ public void execute() {\n \n         validateAttributes();\n         \n+        ClassLoader loader = null;\n         try {\n+            loader = Thread.currentThread().getContextClassLoader();\n+            Thread.currentThread().setContextClassLoader(DbGeneratorTask.class.getClassLoader());\n \n             // Load the data map and run the db generator.\n             DataMap dataMap = loadDataMap();\n@@ -102,6 +105,9 @@ public void execute() {\n             super.log(message);\n             throw new BuildException(message, th);\n         }\n+        finally{\n+            Thread.currentThread().setContextClassLoader(loader);\n+        }\n     }\n \n     /**", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/81fc14f318f35c936205e54859451763d1cba4c8", "parent": "https://github.com/apache/cayenne/commit/d6ee2dd391c988edcaf06c64f43238a3caa18f45", "message": "CAY-1070 Generating Query and Procedure Access Code\n\nFixing NPE on queries without qualifiers\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@705990 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_54", "file": [{"additions": 5, "raw_url": "https://github.com/apache/cayenne/raw/81fc14f318f35c936205e54859451763d1cba4c8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/gen/DataMapUtils.java", "blob_url": "https://github.com/apache/cayenne/blob/81fc14f318f35c936205e54859451763d1cba4c8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/gen/DataMapUtils.java", "sha": "ac90b092d21a83a713c1224a6b00fbabda5c1451", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/gen/DataMapUtils.java?ref=81fc14f318f35c936205e54859451763d1cba4c8", "patch": "@@ -71,6 +71,11 @@ public String getQueryMethodName(Query query) {\n      * @return Parameter names.\n      */\n     public Collection getParameterNames(QualifiedQuery query) {\n+        \n+        if(query.getQualifier() == null) {\n+            return Collections.EMPTY_SET;\n+        }\n+        \n         Map<String, String> queryParameters = queriesMap.get(query.getName());\n \n         if ( queryParameters == null) {", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/gen/DataMapUtils.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/d973891f10d8e839bca3c3ce7e42cbfef1b925cb", "parent": "https://github.com/apache/cayenne/commit/7efda9e09d03bf94ac15b42f85f73cb360fe6dfc", "message": "adding password NPE check that prevents project save errors on invalid modeler inputs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@688324 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_55", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/d973891f10d8e839bca3c3ce7e42cbfef1b925cb/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java", "blob_url": "https://github.com/apache/cayenne/blob/d973891f10d8e839bca3c3ce7e42cbfef1b925cb/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java", "sha": "ae0eb913a74e79e409f57aa7ba5f15da82cc9ddd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java?ref=d973891f10d8e839bca3c3ce7e42cbfef1b925cb", "patch": "@@ -195,7 +195,7 @@ public void storeDataNode(PrintWriter pw, Project project, DataSourceInfo info)\n \n         if (info.getPasswordLocation().equals(DataSourceInfo.PASSWORD_LOCATION_MODEL)) {\n             PasswordEncoding encoder = info.getPasswordEncoder();\n-            if (encoder != null) {\n+            if (encoder != null && info.getPassword() != null) {\n                 pw.print(attribute(\"password\", encoder.encodePassword(\n                         info.getPassword(),\n                         info.getPasswordEncoderKey())));", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/f8cbc746f4226c538226e2de8a010d366c710c2f", "parent": "https://github.com/apache/cayenne/commit/0748bd09b3f898e16ae96f7e091bd86569ae8de9", "message": "CAY-1045 postRemove lifecycle callback not NPE safe\n(validating the arguments)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@653074 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_56", "file": [{"additions": 9, "raw_url": "https://github.com/apache/cayenne/raw/f8cbc746f4226c538226e2de8a010d366c710c2f/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ToOneFault.java", "blob_url": "https://github.com/apache/cayenne/blob/f8cbc746f4226c538226e2de8a010d366c710c2f/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ToOneFault.java", "sha": "fecba05b89c9e0186e0834027044c06a5c0202bc", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ToOneFault.java?ref=f8cbc746f4226c538226e2de8a010d366c710c2f", "patch": "@@ -38,6 +38,15 @@\n      */\n     @Override\n     public Object resolveFault(Persistent sourceObject, String relationshipName) {\n+\n+        if (sourceObject.getObjectContext() == null) {\n+            throw new IllegalStateException(\n+                    \"Null ObjectContext. Can't read a to-one relationshup '\"\n+                            + relationshipName\n+                            + \"' for an object with ID: \"\n+                            + sourceObject.getObjectId());\n+        }\n+\n         int state = sourceObject.getPersistenceState();\n         if (state == PersistenceState.NEW) {\n             return null;", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ToOneFault.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/f3ed2e00cd0a78aac51847759a2f3d6750126a71", "parent": "https://github.com/apache/cayenne/commit/8056f253eff78436aa2281df95ffe7ff60b0fd30", "message": "CAY-1044 NPE on commit when the new object was deleted before commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@652383 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_57", "file": [{"additions": 1, "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/docs/doc/src/main/resources/RELEASE-NOTES.txt", "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/docs/doc/src/main/resources/RELEASE-NOTES.txt", "sha": "9d4fa07d72cc0ec173fa5d7f4ee9ffca2afa100e", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71", "patch": "@@ -54,6 +54,7 @@ CAY-1018 Enums fetched via SQLTemplate\n CAY-1020 Problem accessing toMany Set relationships on client.\n CAY-1028 NPE's in the Modeler for incomplete relationships\n CAY-1043 NPE in ConnectionWrapper on rollback\n+CAY-1044 NPE on commit when the new object was deleted before commit\n \n ----------------------------------\n Release: 3.0M3", "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt"}, {"additions": 6, "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java", "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java", "sha": "ff63da9f3d2336333132fcef58fff358f3d9d3c0", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71", "patch": "@@ -159,6 +159,12 @@ public void arcCreated(Object nodeId, Object targetNodeId, Object arcId) {\n         final Persistent source = findObject(nodeId);\n         final Persistent target = findObject(targetNodeId);\n \n+        // if a target was later deleted, the diff for arcCreated is still preserved and\n+        // can result in NULL target here.\n+        if (target == null) {\n+            return;\n+        }\n+\n         ClassDescriptor descriptor = context.getEntityResolver().getClassDescriptor(\n                 ((ObjectId) nodeId).getEntityName());\n         ArcProperty property = (ArcProperty) descriptor.getProperty(arcId.toString());", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java"}, {"additions": 27, "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java", "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java", "sha": "c0bf49a35db34425270f33752ac5cba4f9bb129e", "changes": 29, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71", "patch": "@@ -369,8 +369,7 @@ public void testCommitChangesToParentPropagatedKey() throws Exception {\n         Painting childMaster = childContext.newObject(Painting.class);\n         childMaster.setPaintingTitle(\"Master\");\n \n-        PaintingInfo childDetail1 = childContext\n-                .newObject(PaintingInfo.class);\n+        PaintingInfo childDetail1 = childContext.newObject(PaintingInfo.class);\n         childDetail1.setTextReview(\"Detail1\");\n         childDetail1.setPainting(childMaster);\n \n@@ -543,4 +542,30 @@ public void testCommitChangesToParentFlattenedMultipleFlush() throws Exception {\n             unblockQueries();\n         }\n     }\n+\n+    public void testAddRemove() {\n+\n+        DataContext context = createDataContext();\n+        DataContext child = context.createChildDataContext();\n+\n+        Artist a = child.newObject(Artist.class);\n+        a.setArtistName(\"X\");\n+        child.commitChanges();\n+\n+        Painting p1 = child.newObject(Painting.class);\n+        p1.setPaintingTitle(\"P1\");\n+        a.addToPaintingArray(p1);\n+\n+        Painting p2 = child.newObject(Painting.class);\n+        p2.setPaintingTitle(\"P2\");\n+        a.addToPaintingArray(p2);\n+\n+        a.removeFromPaintingArray(p2);\n+\n+        // this causes an error on commit\n+        child.deleteObject(p2);\n+\n+        child.commitChangesToParent();\n+\n+    }\n }", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/92da0de22329676dfd30abf4a1485d30be07051b", "parent": "https://github.com/apache/cayenne/commit/22e5c985b53bfa1b62d7c874fa0900f07674e346", "message": "CAY-948 Implement flattened attributes in Cayenne\n(generics, also fix for an NPE when inserting entities with flattened attributes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@606572 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_58", "file": [{"additions": 7, "raw_url": "https://github.com/apache/cayenne/raw/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainDBDiffBuilder.java", "blob_url": "https://github.com/apache/cayenne/blob/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainDBDiffBuilder.java", "sha": "b514350d7e8ca0c88fe3b724c8be6f8554275047", "changes": 13, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainDBDiffBuilder.java?ref=92da0de22329676dfd30abf4a1485d30be07051b", "patch": "@@ -27,7 +27,7 @@\n import org.apache.cayenne.access.DataDomainSyncBucket.PropagatedValueFactory;\n import org.apache.cayenne.graph.GraphChangeHandler;\n import org.apache.cayenne.graph.GraphDiff;\n-import org.apache.cayenne.map.Attribute;\n+import org.apache.cayenne.map.DbAttribute;\n import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.map.DbJoin;\n import org.apache.cayenne.map.DbRelationship;\n@@ -100,11 +100,12 @@ private void appendSimpleProperties(Map<Object, Object> dbDiff) {\n                         .getKey()\n                         .toString());\n \n-                // this takes care of the flattened attributes, as 'getDbAttributeName'\n-                // returns the last path component...\n-                Attribute dbAttribute = dbEntity.getAttribute(attribute\n-                        .getDbAttributeName());\n-                dbDiff.put(dbAttribute.getName(), entry.getValue());\n+                // in case of a flattened attribute, ensure that it belongs to this\n+                // bucket...\n+                DbAttribute dbAttribute = attribute.getDbAttribute();\n+                if (dbAttribute.getEntity() == dbEntity) {\n+                    dbDiff.put(dbAttribute.getName(), entry.getValue());\n+                }\n             }\n         }\n     }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainDBDiffBuilder.java"}, {"additions": 28, "raw_url": "https://github.com/apache/cayenne/raw/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java", "blob_url": "https://github.com/apache/cayenne/blob/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java", "sha": "6162920b04af9aaf5f5bb248982bb5cd20914252", "changes": 62, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java?ref=92da0de22329676dfd30abf4a1485d30be07051b", "patch": "@@ -36,6 +36,7 @@\n import org.apache.cayenne.map.ObjAttribute;\n import org.apache.cayenne.map.ObjEntity;\n import org.apache.cayenne.query.InsertBatchQuery;\n+import org.apache.cayenne.query.Query;\n import org.apache.cayenne.reflect.ClassDescriptor;\n \n /**\n@@ -48,32 +49,30 @@\n         super(parent);\n     }\n \n-    void appendQueriesInternal(Collection queries) {\n+    @Override\n+    void appendQueriesInternal(Collection<Query> queries) {\n \n         DataDomainDBDiffBuilder diffBuilder = new DataDomainDBDiffBuilder();\n \n         EntitySorter sorter = parent.getDomain().getEntitySorter();\n         sorter.sortDbEntities(dbEntities, false);\n \n-        Iterator i = dbEntities.iterator();\n-        while (i.hasNext()) {\n-            DbEntity dbEntity = (DbEntity) i.next();\n-            List objEntitiesForDbEntity = (List) descriptorsByDbEntity.get(dbEntity);\n+        for (DbEntity dbEntity : dbEntities) {\n \n-            InsertBatchQuery batch = new InsertBatchQuery(dbEntity, 27);\n+            Collection<ClassDescriptor> objEntitiesForDbEntity = descriptorsByDbEntity\n+                    .get(dbEntity);\n \n-            Iterator j = objEntitiesForDbEntity.iterator();\n-            while (j.hasNext()) {\n-                ClassDescriptor descriptor = (ClassDescriptor) j.next();\n+            InsertBatchQuery batch = new InsertBatchQuery(dbEntity, 27);\n+            for (ClassDescriptor descriptor : objEntitiesForDbEntity) {\n \n                 diffBuilder.reset(descriptor.getEntity(), dbEntity);\n \n                 boolean isMasterDbEntity = (descriptor.getEntity().getDbEntity() == dbEntity);\n \n                 // remove object set for dependent entity, so that it does not show up\n                 // on post processing\n-                List objects = (List) (isMasterDbEntity ? objectsByDescriptor\n-                        .get(descriptor) : objectsByDescriptor.remove(descriptor));\n+                List<Persistent> objects = isMasterDbEntity ? objectsByDescriptor\n+                        .get(descriptor) : objectsByDescriptor.remove(descriptor);\n \n                 if (objects.isEmpty()) {\n                     continue;\n@@ -86,11 +85,10 @@ void appendQueriesInternal(Collection queries) {\n                     sorter.sortObjectsForEntity(descriptor.getEntity(), objects, false);\n                 }\n \n-                for (Iterator k = objects.iterator(); k.hasNext();) {\n-                    Persistent o = (Persistent) k.next();\n+                for (Persistent o : objects) {\n \n-                    Map snapshot = diffBuilder.buildDBDiff(parent.objectDiff(o\n-                            .getObjectId()));\n+                    Map<Object, Object> snapshot = diffBuilder.buildDBDiff(parent\n+                            .objectDiff(o.getObjectId()));\n \n                     batch.add(snapshot, o.getObjectId());\n                 }\n@@ -100,51 +98,49 @@ void appendQueriesInternal(Collection queries) {\n         }\n     }\n \n-    void createPermIdsForObjEntity(ClassDescriptor descriptor, List dataObjects) {\n+    void createPermIdsForObjEntity(\n+            ClassDescriptor descriptor,\n+            Collection<Persistent> objects) {\n \n-        if (dataObjects.isEmpty()) {\n+        if (objects.isEmpty()) {\n             return;\n         }\n \n         ObjEntity objEntity = descriptor.getEntity();\n         DbEntity dbEntity = objEntity.getDbEntity();\n         DataNode node = parent.getDomain().lookupDataNode(dbEntity.getDataMap());\n         boolean supportsGeneratedKeys = node.getAdapter().supportsGeneratedKeys();\n-        \n-        PkGenerator pkGenerator = node.getAdapter().getPkGenerator();\n \n-        Iterator i = dataObjects.iterator();\n-        while (i.hasNext()) {\n+        PkGenerator pkGenerator = node.getAdapter().getPkGenerator();\n \n-            Persistent object = (Persistent) i.next();\n+        for (Persistent object : objects) {\n             ObjectId id = object.getObjectId();\n             if (id == null || !id.isTemporary()) {\n                 continue;\n             }\n \n             // modify replacement id directly...\n-            Map idMap = id.getReplacementIdMap();\n+            Map<String, Object> idMap = id.getReplacementIdMap();\n \n             boolean autoPkDone = false;\n-            Iterator it = dbEntity.getPrimaryKeys().iterator();\n-            while (it.hasNext()) {\n-                DbAttribute dbAttr = (DbAttribute) it.next();\n+\n+            for (DbAttribute dbAttr : dbEntity.getPrimaryKeys()) {\n                 String dbAttrName = dbAttr.getName();\n \n                 if (idMap.containsKey(dbAttrName)) {\n                     continue;\n                 }\n \n                 // handle meaningful PK\n-                ObjAttribute objAttr = (ObjAttribute) objEntity.getAttributeForDbAttribute(dbAttr);\n+                ObjAttribute objAttr = objEntity.getAttributeForDbAttribute(dbAttr);\n                 if (objAttr != null) {\n \n                     Object value = descriptor\n                             .getProperty(objAttr.getName())\n                             .readPropertyDirectly(object);\n \n                     if (value != null) {\n-                        Class javaClass = objAttr.getJavaClass();\n+                        Class<?> javaClass = objAttr.getJavaClass();\n                         if (javaClass.isPrimitive()\n                                 && value instanceof Number\n                                 && ((Number) value).intValue() == 0) {\n@@ -158,7 +154,7 @@ void createPermIdsForObjEntity(ClassDescriptor descriptor, List dataObjects) {\n                         }\n                     }\n                 }\n-                \n+\n                 // skip db-generated\n                 if (supportsGeneratedKeys && dbAttr.isGenerated()) {\n                     continue;\n@@ -168,7 +164,7 @@ void createPermIdsForObjEntity(ClassDescriptor descriptor, List dataObjects) {\n                 if (isPropagated(dbAttr)) {\n                     continue;\n                 }\n-                \n+\n                 // only a single key can be generated from DB... if this is done already\n                 // in this loop, we must bail out.\n                 if (autoPkDone) {\n@@ -192,17 +188,15 @@ void createPermIdsForObjEntity(ClassDescriptor descriptor, List dataObjects) {\n \n     // TODO, andrus 4/12/2006 - move to DbAttribute in 2.0+\n     boolean isPropagated(DbAttribute attribute) {\n-        Iterator it = attribute.getEntity().getRelationships().iterator();\n+        Iterator<?> it = attribute.getEntity().getRelationships().iterator();\n         while (it.hasNext()) {\n \n             DbRelationship dbRel = (DbRelationship) it.next();\n             if (!dbRel.isToMasterPK()) {\n                 continue;\n             }\n \n-            Iterator joins = dbRel.getJoins().iterator();\n-            while (joins.hasNext()) {\n-                DbJoin join = (DbJoin) joins.next();\n+            for (DbJoin join : dbRel.getJoins()) {\n                 if (attribute.getName().equals(join.getSourceName())) {\n                     return true;\n                 }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java"}, {"additions": 5, "raw_url": "https://github.com/apache/cayenne/raw/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainSyncBucket.java", "blob_url": "https://github.com/apache/cayenne/blob/92da0de22329676dfd30abf4a1485d30be07051b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainSyncBucket.java", "sha": "d41bc6269c14371d288beb275c33c6b46f62b8f4", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainSyncBucket.java?ref=92da0de22329676dfd30abf4a1485d30be07051b", "patch": "@@ -53,14 +53,14 @@\n  */\n abstract class DataDomainSyncBucket {\n \n-    final Map<ClassDescriptor, Collection<Object>> objectsByDescriptor;\n+    final Map<ClassDescriptor, List<Persistent>> objectsByDescriptor;\n     final DataDomainFlushAction parent;\n \n     List<DbEntity> dbEntities;\n     Map<DbEntity, Collection<ClassDescriptor>> descriptorsByDbEntity;\n \n     DataDomainSyncBucket(DataDomainFlushAction parent) {\n-        this.objectsByDescriptor = new HashMap<ClassDescriptor, Collection<Object>>();\n+        this.objectsByDescriptor = new HashMap<ClassDescriptor, List<Persistent>>();\n         this.parent = parent;\n     }\n \n@@ -152,12 +152,12 @@ private void groupObjEntitiesBySpannedDbEntities() {\n         }\n     }\n \n-    void addDirtyObject(Object object, ClassDescriptor descriptor) {\n+    void addDirtyObject(Persistent object, ClassDescriptor descriptor) {\n \n-        Collection<Object> objects = objectsByDescriptor.get(descriptor);\n+        List<Persistent> objects = objectsByDescriptor.get(descriptor);\n         if (objects == null) {\n \n-            objects = new ArrayList<Object>();\n+            objects = new ArrayList<Persistent>();\n             objectsByDescriptor.put(descriptor, objects);\n         }\n ", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainSyncBucket.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/c868998791783ea15a19a7843a5ac5c0980cc4db", "parent": "https://github.com/apache/cayenne/commit/02d25bb8a2cb1b7d35414abd5ab5aafa753a96a6", "message": "CAY-900 Create CayenneModeler Swing UI for managing callbacks and lifecycle listeners\n(fixing npe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@594181 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_59", "file": [{"additions": 9, "raw_url": "https://github.com/apache/cayenne/raw/c868998791783ea15a19a7843a5ac5c0980cc4db/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/AbstractCallbackListenersTab.java", "blob_url": "https://github.com/apache/cayenne/blob/c868998791783ea15a19a7843a5ac5c0980cc4db/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/AbstractCallbackListenersTab.java", "sha": "4f03d11b0a6a1823bca34409ae3034c86aa34f39", "changes": 18, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/AbstractCallbackListenersTab.java?ref=c868998791783ea15a19a7843a5ac5c0980cc4db", "patch": "@@ -90,15 +90,15 @@ protected void init() {\n     private void processEditedListenerClassValue(String newValue) {\n         String prevName = mediator.getCurrentListenerClass();\n         if (getEntityListener(newValue) == null) {\n-            getEntityListener(prevName).setClassName(newValue);\n-            mediator.fireEntityListenerEvent(\n-                    new EntityListenerEvent(\n-                            this,\n-                            prevName,\n-                            newValue,\n-                            MapEvent.CHANGE\n-                    )\n-            );\n+            EntityListener listener = getEntityListener(prevName);\n+            if (listener != null) {\n+                listener.setClassName(newValue);\n+                mediator.fireEntityListenerEvent(new EntityListenerEvent(\n+                        this,\n+                        prevName,\n+                        newValue,\n+                        MapEvent.CHANGE));\n+            }\n         }\n     }\n ", "filename": "framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/editor/AbstractCallbackListenersTab.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/b4fcc5db3a1355893279bd9bf77692a9e8a7b03f", "parent": "https://github.com/apache/cayenne/commit/2f005016f68e01b0b421a01bc210000e43a314aa", "message": "Prevent an NPE when doing a \"refresh all\" query with a disabled shared snapshot cache.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@567754 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_60", "file": [{"additions": 3, "raw_url": "https://github.com/apache/cayenne/raw/b4fcc5db3a1355893279bd9bf77692a9e8a7b03f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java", "blob_url": "https://github.com/apache/cayenne/blob/b4fcc5db3a1355893279bd9bf77692a9e8a7b03f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java", "sha": "381fe45f407f02e4d98cb1bc66d3955ad6ec35e1", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java?ref=b4fcc5db3a1355893279bd9bf77692a9e8a7b03f", "patch": "@@ -272,7 +272,9 @@ private boolean interceptRefreshQuery() {\n             if (refreshQuery.isRefreshAll()) {\n \n                 // not sending any events - peer contexts will not get refreshed\n-                domain.getSharedSnapshotCache().clear();\n+                if (domain.getSharedSnapshotCache() != null) {\n+                    domain.getSharedSnapshotCache().clear();\n+                }\n                 context.getQueryCache().clear();\n \n                 GenericResponse response = new GenericResponse();", "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/cf7b427d2eba64a95bb2f77d54008008145a3736", "parent": "https://github.com/apache/cayenne/commit/92d12fd5d0f949ec04390a1f951bdbf0b3855886", "message": "CAY-1905 Multi-step prefetching NPE : 1..N..1 with absent N and root with no qualifier\n\nfix suggested by Mika\u00ebl Cluseau (we don't have a test for it)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1578748 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_61", "file": [{"additions": 4, "raw_url": "https://github.com/apache/cayenne/raw/cf7b427d2eba64a95bb2f77d54008008145a3736/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java", "blob_url": "https://github.com/apache/cayenne/blob/cf7b427d2eba64a95bb2f77d54008008145a3736/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java", "sha": "da125c1bc4acedcd26ed4caa18f7976e528b90d4", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java?ref=cf7b427d2eba64a95bb2f77d54008008145a3736", "patch": "@@ -107,6 +107,10 @@ private void indexParents() {\n         }\n         \n         List<DataRow> rows = parentNode.getDataRows();\n+        if(rows == null) {\n+            return;\n+        }\n+        \n         int size = objects.size();\n         for (int i = 0; i < size; i++) {\n ", "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/ad94d7e6577bc5dbe00d91bd10a7afc9905fcf23", "parent": "https://github.com/apache/cayenne/commit/acef1efa6978e7ba583ee571767ccacfecf3408a", "message": "fixing NPE on class generation that I believe got introduced recently\n... client class generation can still result in garbage under certain circumstances (when entities are\nnot setup for client use)... going forward we may need to do more sanity checking here\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@775630 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_62", "file": [{"additions": 13, "raw_url": "https://github.com/apache/cayenne/raw/ad94d7e6577bc5dbe00d91bd10a7afc9905fcf23/framework/cayenne-tools/src/main/java/org/apache/cayenne/gen/ClientDataMapArtifact.java", "blob_url": "https://github.com/apache/cayenne/blob/ad94d7e6577bc5dbe00d91bd10a7afc9905fcf23/framework/cayenne-tools/src/main/java/org/apache/cayenne/gen/ClientDataMapArtifact.java", "sha": "602da17e93fba7adfb8271d480bc797a881a1859", "changes": 23, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-tools/src/main/java/org/apache/cayenne/gen/ClientDataMapArtifact.java?ref=ad94d7e6577bc5dbe00d91bd10a7afc9905fcf23", "patch": "@@ -22,29 +22,32 @@\n import java.util.Collection;\n \n import org.apache.cayenne.map.DataMap;\n-import org.apache.cayenne.query.ProcedureQuery;\n import org.apache.cayenne.query.Query;\n import org.apache.cayenne.util.NameConverter;\n+import org.apache.cayenne.util.Util;\n \n-public class ClientDataMapArtifact extends DataMapArtifact{\n+public class ClientDataMapArtifact extends DataMapArtifact {\n \n     public ClientDataMapArtifact(DataMap dataMap, Collection<Query> queries) {\n         super(dataMap, queries);\n-        \n+\n     }\n-    \n+\n     @Override\n-    public String getQualifiedBaseClassName(){\n+    public String getQualifiedBaseClassName() {\n \n         return dataMap.getDefaultClientSuperclass();\n-    } \n-    \n+    }\n+\n     @Override\n     public String getQualifiedClassName() {\n         String clientPrefix = \"\";\n-        if(dataMap.getDefaultClientPackage().equals(dataMap.getDefaultPackage())){\n+\n+        if (Util.nullSafeEquals(dataMap.getDefaultClientPackage(), dataMap\n+                .getDefaultPackage())) {\n             clientPrefix = \"Client_\";\n         }\n+\n         String pkg = dataMap.getDefaultClientPackage();\n         if (pkg == null) {\n             pkg = \"\";\n@@ -54,7 +57,7 @@ public String getQualifiedClassName() {\n         }\n \n         return pkg\n-            + NameConverter.underscoredToJava(clientPrefix + NameConverter\n-                        .specialCharsToJava(dataMap.getName()), true);\n+                + NameConverter.underscoredToJava(clientPrefix\n+                        + NameConverter.specialCharsToJava(dataMap.getName()), true);\n     }\n }\n\\ No newline at end of file", "filename": "framework/cayenne-tools/src/main/java/org/apache/cayenne/gen/ClientDataMapArtifact.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/5692a6a7ddbc27600f67d2442183d14e6ed637d6", "parent": "https://github.com/apache/cayenne/commit/ff59c130e2565f6a480d5461462fac4d4d30b543", "message": "CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n\na patch by Dima Loiko that addresses cdbgen classloader issues\ncan't yet reproduce the problem the way the user described it\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@743287 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_63", "file": [{"additions": 13, "raw_url": "https://github.com/apache/cayenne/raw/5692a6a7ddbc27600f67d2442183d14e6ed637d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java", "blob_url": "https://github.com/apache/cayenne/blob/5692a6a7ddbc27600f67d2442183d14e6ed637d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java", "sha": "81908f7689815615b0be7a97bbfafc09b8415310", "changes": 19, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java?ref=5692a6a7ddbc27600f67d2442183d14e6ed637d6", "patch": "@@ -30,6 +30,7 @@\n import org.apache.tools.ant.Project;\n import org.xml.sax.InputSource;\n \n+\n import java.io.File;\n import java.sql.Driver;\n \n@@ -41,7 +42,7 @@\n  */\n // TODO: support classpath attribute for loading the driver\n public class DbGeneratorTask extends CayenneTask {\n-\n+    \n     protected DbAdapter adapter;\n     protected File map;\n     protected String driver;\n@@ -64,14 +65,14 @@ public void execute() {\n         if (adapter == null) {\n             adapter = new JdbcAdapter();\n         }\n-\n+        \n         log(String.format(\"connection settings - [driver: %s, url: %s, username: %s]\", driver, url, userName), Project.MSG_VERBOSE);\n \n         log(String.format(\"generator options - [dropTables: %s, dropPK: %s, createTables: %s, createPK: %s, createFK: %s]\",\n                 dropTables, dropPK, createTables, createPK, createFK), Project.MSG_VERBOSE);\n \n         validateAttributes();\n-\n+        \n         try {\n \n             // Load the data map and run the db generator.\n@@ -168,15 +169,21 @@ public void setMap(File map) {\n      * @param adapter The db adapter to set.\n      */\n     public void setAdapter(String adapter) {\n-\n+        ClassLoader loader = null;\n         if (adapter != null) {\n             // Try to create an instance of the DB adapter.\n             try {\n-                Class<?> c = Class.forName(adapter);\n+                loader = Thread.currentThread().getContextClassLoader();\n+                Thread.currentThread().setContextClassLoader(DbGeneratorTask.class.getClassLoader());\n+\n+                Class<?> c = Util.getJavaClass(adapter);\n                 this.adapter = (DbAdapter) c.newInstance();\n             }\n             catch (Exception e) {\n-                throw new BuildException(\"Can't load DbAdapter: \" + adapter);\n+                throw new BuildException(\"Can't load DbAdapter: \" + adapter,e);\n+            }\n+            finally{\n+                Thread.currentThread().setContextClassLoader(loader);\n             }\n         }\n     }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java"}], "repo": "cayenne"}, {"commit": "https://github.com/apache/cayenne/commit/2029433135d8539e0d57f31530f5498042955049", "parent": "https://github.com/apache/cayenne/commit/deddd919fd46af896e90af32c044e03631be6af5", "message": "CAY-941 NPE in SimpleNode.connectChildren()\n(while 3.0 is not affected, I still added a unit test and a null check for extra robustness)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@604601 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "cayenne_64", "file": [{"additions": 5, "raw_url": "https://github.com/apache/cayenne/raw/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java", "blob_url": "https://github.com/apache/cayenne/blob/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java", "sha": "148d838f482ed4e9677a7645ee46257f1c9f4e79", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java?ref=2029433135d8539e0d57f31530f5498042955049", "patch": "@@ -280,7 +280,11 @@ public final int jjtGetNumChildren() {\n     protected void connectChildren() {\n         if (children != null) {\n             for (int i = 0; i < children.length; i++) {\n-                children[i].jjtSetParent(this);\n+                // although nulls are expected to be wrapped in scalar, still doing a\n+                // check here to make it more robust\n+                if (children[i] != null) {\n+                    children[i].jjtSetParent(this);\n+                }\n             }\n         }\n     }", "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java"}, {"additions": 12, "raw_url": "https://github.com/apache/cayenne/raw/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java", "blob_url": "https://github.com/apache/cayenne/blob/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java", "sha": "d22503540620736ba6f35dcb0a7afc9a20f362d8", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java?ref=2029433135d8539e0d57f31530f5498042955049", "patch": "@@ -151,15 +151,15 @@ public void testInExp1() throws Exception {\n     }\n \n     public void testInExp2() throws Exception {\n-        List v = new ArrayList();\n+        List<Object> v = new ArrayList<Object>();\n         v.add(\"a\");\n         v.add(\"b\");\n         Expression exp = ExpressionFactory.inExp(\"abc\", v);\n         assertEquals(Expression.IN, exp.getType());\n     }\n \n     public void testInExp3() throws Exception {\n-        List v = new ArrayList();\n+        List<Object> v = new ArrayList<Object>();\n         Expression exp = ExpressionFactory.inExp(\"abc\", v);\n         assertEquals(Expression.FALSE, exp.getType());\n     }\n@@ -205,4 +205,14 @@ public void testNotLikeIgnoreCaseExp() throws Exception {\n         Expression exp = ExpressionFactory.notLikeIgnoreCaseExp(\"abc\", v);\n         assertEquals(Expression.NOT_LIKE_IGNORE_CASE, exp.getType());\n     }\n+    \n+    // testing CAY-941 bug\n+    public void testLikeExpNull() throws Exception {\n+        Expression exp = ExpressionFactory.likeExp(\"abc\", null);\n+        assertEquals(Expression.LIKE, exp.getType());\n+\n+        Expression path = (Expression) exp.getOperand(0);\n+        assertEquals(Expression.OBJ_PATH, path.getType());\n+        assertNull(exp.getOperand(1));\n+    }\n }", "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java"}], "repo": "cayenne"}]
