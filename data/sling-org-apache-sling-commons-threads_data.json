[{"commit": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/830c606b753def2b78f2ac9f9f334e3182068455", "parent": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/0198f335bbeab2e88df3219760a430f6427c22a4", "message": "SLING-7526 - NPE in DefaultThreadPool$LoggingThreadLocalChangeListener.changed\n\nEnsure that we tolerate null values in the\nLoggingThreadLocalChangeListener", "bug_id": "sling-org-apache-sling-commons-threads_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java", "sha": "604092addd856c8da1cad2ea8490de9cb70d5d98", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java?ref=830c606b753def2b78f2ac9f9f334e3182068455", "patch": "@@ -169,7 +169,8 @@ public DefaultThreadPool(final String name,\n     private static class LoggingThreadLocalChangeListener implements ThreadLocalChangeListener {\n         @Override\n         public void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value) {\n-            LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, threadLocal.getClass(), value);\n+            LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, \n+                    threadLocal != null ? threadLocal.getClass() : \"<null>\", value);\n         }\n     }\n ", "filename": "src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java"}, {"additions": 10, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java", "sha": "27954f2087cbd44bb60aeadf002c16bcfdf61ad2", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java?ref=830c606b753def2b78f2ac9f9f334e3182068455", "patch": "@@ -28,6 +28,16 @@\n \n     Logger LOGGER = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n \n+    /**\n+     * Invoked when the cleaner detects that a thread-local value was added of removed \n+     * after an execution has completed\n+     * \n+     * @param the mode\n+     * @param the thread\n+     * @param the thread local, possibly null\n+     * @param the value, possibly null\n+     */\n+    \n     void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value);\n \n     enum Mode {", "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java"}], "repo": "sling-org-apache-sling-commons-threads"}, {"commit": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/bb1ec98753d7972a63d961e81725796ac2a918a8", "parent": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/afa59d668ac39004510fcd4366298f62179736c4", "message": "SLING-7320 guard against NPE happening when initReflectionFields fails", "bug_id": "sling-org-apache-sling-commons-threads_2", "file": [{"additions": 4, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/bb1ec98753d7972a63d961e81725796ac2a918a8/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/bb1ec98753d7972a63d961e81725796ac2a918a8/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java", "sha": "b755034d328ae812ef50e2352aa87af4af1e6d82", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java?ref=bb1ec98753d7972a63d961e81725796ac2a918a8", "patch": "@@ -31,7 +31,7 @@\n \n     /* Reflection fields */\n     /** this field is in class {@link ThreadLocal} and is of type {@code ThreadLocal.ThreadLocalMap} */\n-    private static Field threadLocalsField;\n+    private static volatile Field threadLocalsField;\n     /** this field is in class {@link ThreadLocal} and is of type {@code ThreadLocal.ThreadLocalMap} */\n     private static Field inheritableThreadLocalsField;\n     private static Class<?> threadLocalMapClass;\n@@ -45,11 +45,11 @@\n     private static Field threadLocalMapSizeField;\n     /** this field is in the class {@code ThreadLocal.ThreadLocalMap} and next resize threshold */\n     private static Field threadLocalMapThresholdField;\n-    private static IllegalStateException reflectionException;\n+    private static volatile IllegalStateException reflectionException;\n \n \n     public ThreadLocalCleaner(ThreadLocalChangeListener listener) {\n-        if (threadLocalsField == null) {\n+        if (threadLocalsField == null || reflectionException != null) {\n             initReflectionFields();\n         }\n         this.listener = listener;\n@@ -75,7 +75,7 @@ private static synchronized void initReflectionFields() throws IllegalStateExcep\n             } catch (NoSuchFieldException e) {\n                 reflectionException = new IllegalStateException(\n                         \"Could not locate threadLocals field in class Thread.  \" +\n-                                \"Will not be able to clear thread locals: \" + e);\n+                                \"Will not be able to clear thread locals: \" + e, e);\n                 throw reflectionException;\n             }\n         }", "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java"}], "repo": "sling-org-apache-sling-commons-threads"}, {"commit": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/90e02d020644ef1a2b5852171a59c6cbe84f5857", "parent": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/830c606b753def2b78f2ac9f9f334e3182068455", "message": "SLING-7526 - NPE in DefaultThreadPool$LoggingThreadLocalChangeListener.changed\n\nOnly generate the (relatively expensive) ThreadLocal diff events if the\nlistener is actually enabled.", "bug_id": "sling-org-apache-sling-commons-threads_3", "file": [{"additions": 5, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java", "sha": "e60cf9706506998888217cb6237c4c941812e856", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857", "patch": "@@ -172,6 +172,11 @@ public void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object\n             LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, \n                     threadLocal != null ? threadLocal.getClass() : \"<null>\", value);\n         }\n+        \n+        @Override\n+        public boolean isEnabled() {\n+            return LOGGER.isDebugEnabled();\n+        }\n     }\n \n     /**", "filename": "src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java"}, {"additions": 2, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java", "sha": "72237dadbf4c7fc3c4f8f97ccc1e2e0e06b06fc3", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857", "patch": "@@ -39,6 +39,8 @@\n      */\n     \n     void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value);\n+    \n+    boolean isEnabled();\n \n     enum Mode {\n         ADDED, REMOVED", "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java"}, {"additions": 4, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java", "sha": "5db69eca1f7f764d1b2859547273205b25df9422", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857", "patch": "@@ -145,8 +145,10 @@ public ThreadLocalCleaner(ThreadLocalChangeListener listener) {\n \n     public void cleanup() {\n         // the first two diff calls are only to notify the listener, the actual cleanup is done by restoreOldThreadLocals\n-        diff(threadLocalsField, threadLocalsCopy.references);\n-        diff(inheritableThreadLocalsField, inheritableThreadLocalsCopy.references);\n+        if ( listener.isEnabled() ) {\n+            diff(threadLocalsField, threadLocalsCopy.references);\n+            diff(inheritableThreadLocalsField, inheritableThreadLocalsCopy.references);\n+        }\n         restoreOldThreadLocals();\n     }\n ", "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java"}, {"additions": 1, "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java", "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java", "sha": "8ceff1f0a1525d569fe4964dba9c360e35c24233", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857", "patch": "@@ -54,6 +54,7 @@ public void setUp() {\n         pool = new ThreadPoolExecutorCleaningThreadLocals(\n                     1, 1, 100, TimeUnit.MILLISECONDS,\n                     queue, Executors.defaultThreadFactory(), rejectionHandler, listener);\n+        Mockito.when(listener.isEnabled()).thenReturn(true);\n     }\n     \n     @Test(timeout = 10000)", "filename": "src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java"}], "repo": "sling-org-apache-sling-commons-threads"}]
