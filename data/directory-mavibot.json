{
    "directory-mavibot_fffad21": {
        "bug_id": "directory-mavibot_fffad21",
        "commit": "https://github.com/apache/directory-mavibot/commit/fffad21ac942f822ea809e9d60a59d9d3babb60e",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/AbstractPage.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/AbstractPage.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 1,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/AbstractPage.java",
                "patch": "@@ -20,8 +20,11 @@\n package org.apache.mavibot.btree;\n \n \n+import java.io.IOException;\n import java.lang.reflect.Array;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n+\n \n /**\n  * A MVCC abstract Page. It stores the field and the methods shared by the Node and Leaf\n@@ -86,8 +89,10 @@ protected AbstractPage( BTree<K, V> btree, long revision, int nbElems )\n      * @param parent The parent of the current page\n      * @param The position of the current page reference in its parent\n      * @return The position of the sibling, or -1 if we have'nt found any sibling\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    protected int selectSibling( Node<K, V> parent, int parentPos )\n+    protected int selectSibling( Node<K, V> parent, int parentPos ) throws EndOfFileExceededException, IOException\n     {\n         if ( parentPos == 0 )\n         {",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/AbstractPage.java",
                "sha": "55b4a5583046e4988af50eeb0415e79f10bc4617",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Cursor.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/Cursor.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 6,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/Cursor.java",
                "patch": "@@ -20,8 +20,11 @@\n package org.apache.mavibot.btree;\n \n \n+import java.io.IOException;\n import java.util.LinkedList;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n+\n \n /**\n  * A Cursor is used to fetch elements in a BTree and is returned by the\n@@ -67,8 +70,10 @@\n      * Find the next key/value\n      * \n      * @return A Tuple containing the found key and value\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    /* No qualifier */Tuple<K, V> next()\n+    /* No qualifier */Tuple<K, V> next() throws EndOfFileExceededException, IOException\n     {\n         ParentPos<K, V> parentPos = stack.getFirst();\n \n@@ -104,8 +109,10 @@\n      * Find the leaf containing the following elements.\n      * \n      * @return the new ParentPos instance, or null if we have no following leaf\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    private ParentPos<K, V> findNextParentPos()\n+    private ParentPos<K, V> findNextParentPos() throws EndOfFileExceededException, IOException\n     {\n         while ( true )\n         {\n@@ -150,8 +157,10 @@\n      * Find the leaf containing the previous elements.\n      * \n      * @return the new ParentPos instance, or null if we have no previous leaf\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    private ParentPos<K, V> findPreviousParentPos()\n+    private ParentPos<K, V> findPreviousParentPos() throws EndOfFileExceededException, IOException\n     {\n         while ( true )\n         {\n@@ -197,8 +206,10 @@\n      * Find the previous key/value\n      * \n      * @return A Tuple containing the found key and value\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    /* No qualifier */Tuple<K, V> prev()\n+    /* No qualifier */Tuple<K, V> prev() throws EndOfFileExceededException, IOException\n     {\n         ParentPos<K, V> parentPos = stack.peek();\n \n@@ -234,8 +245,10 @@\n     /**\n      * Tells if the cursor can return a next element\n      * @return true if there are some more elements\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    /* No qualifier */boolean hasNext()\n+    /* No qualifier */boolean hasNext() throws EndOfFileExceededException, IOException\n     {\n         ParentPos<K, V> parentPos = stack.peek();\n \n@@ -265,8 +278,10 @@\n     /**\n      * Tells if the cursor can return a previous element\n      * @return true if there are some more elements\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    /* No qualifier */boolean hasPrev()\n+    /* No qualifier */boolean hasPrev() throws EndOfFileExceededException, IOException\n     {\n         ParentPos<K, V> parentPos = stack.peek();\n ",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Cursor.java",
                "sha": "45c85b6b45c7e475fc80dbdf2e1f858bd82c9586",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/ElementHolder.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/ElementHolder.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 1,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/ElementHolder.java",
                "patch": "@@ -20,6 +20,11 @@\n package org.apache.mavibot.btree;\n \n \n+import java.io.IOException;\n+\n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n+\n+\n /**\n  * A Value holder. As we may not store all the values in memory (except for an in-memory\n  * BTree), we will use a SoftReference to keep a reference to a Value, and if it's null,\n@@ -40,5 +45,5 @@\n      * \n      * @return The stored element\n      */\n-    E getValue( BTree<K, V> btree );\n+    E getValue( BTree<K, V> btree ) throws EndOfFileExceededException, IOException;\n }",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/ElementHolder.java",
                "sha": "fe7fbdb498a333ac1145bc5282fb6c13ca7f5ed9",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Leaf.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/Leaf.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 4,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/Leaf.java",
                "patch": "@@ -24,6 +24,7 @@\n import java.lang.reflect.Array;\n import java.util.LinkedList;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n import org.apache.mavibot.btree.exception.KeyNotFoundException;\n \n \n@@ -108,9 +109,12 @@\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     @SuppressWarnings(\"unchecked\")\n     public DeleteResult<K, V> delete( long revision, K key, Page<K, V> parent, int parentPos )\n+        throws EndOfFileExceededException, IOException\n     {\n         // Check that the leaf is not empty\n         if ( nbElems == 0 )\n@@ -200,8 +204,11 @@\n      * @param isLeft Tells if the sibling is on the left or on the right\n      * @param pos The position of the removed element\n      * @return The new created leaf containing the sibling and the old page.\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     private DeleteResult<K, V> mergeWithSibling( long revision, Leaf<K, V> sibling, boolean isLeft, int pos )\n+        throws EndOfFileExceededException, IOException\n     {\n         // Create the new page. It will contain N - 1 elements (the maximum number)\n         // as we merge two pages that contain N/2 elements minus the one we remove\n@@ -256,8 +263,11 @@\n      * @param sibling The left sibling\n      * @param pos The position of the element to remove\n      * @return The resulting pages\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     private DeleteResult<K, V> borrowFromLeft( long revision, Leaf<K, V> sibling, int pos )\n+        throws EndOfFileExceededException, IOException\n     {\n         // The sibling is on the left, borrow the rightmost element\n         K siblingKey = sibling.keys[sibling.getNbElems() - 1];\n@@ -300,8 +310,11 @@\n      * @param sibling The right sibling\n      * @param pos The position of the element to remove\n      * @return The resulting pages\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     private DeleteResult<K, V> borrowFromRight( long revision, Leaf<K, V> sibling, int pos )\n+        throws EndOfFileExceededException, IOException\n     {\n         // The sibling is on the left, borrow the rightmost element\n         K siblingKey = sibling.keys[0];\n@@ -345,8 +358,10 @@\n      * @param revision The revision of the modified page\n      * @param pos The position into the page of the element to remove\n      * @return The modified page with the <K,V> element added\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    private DeleteResult<K, V> removeElement( long revision, int pos )\n+    private DeleteResult<K, V> removeElement( long revision, int pos ) throws EndOfFileExceededException, IOException\n     {\n         // First copy the current page, but remove one element in the copied page\n         Leaf<K, V> newLeaf = new Leaf<K, V>( btree, revision, nbElems - 1 );\n@@ -394,8 +409,10 @@ public boolean exist( K key )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public V get( K key ) throws KeyNotFoundException\n+    public V get( K key ) throws KeyNotFoundException, EndOfFileExceededException, IOException\n     {\n         int pos = findPos( key );\n \n@@ -530,8 +547,11 @@ public void setValue( int pos, ElementHolder<V, K, V> value )\n      * @param value the new value\n      * @param pos The position of the key in the page\n      * @return The copied page\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     private InsertResult<K, V> replaceElement( long revision, K key, V value, int pos )\n+        throws EndOfFileExceededException, IOException\n     {\n         Leaf<K, V> newLeaf = this;\n \n@@ -693,17 +713,21 @@ public K getLeftMostKey()\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public Tuple<K, V> findLeftMost()\n+    public Tuple<K, V> findLeftMost() throws EndOfFileExceededException, IOException\n     {\n         return new Tuple<K, V>( keys[0], values[0].getValue( btree ) );\n     }\n \n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public Tuple<K, V> findRightMost()\n+    public Tuple<K, V> findRightMost() throws EndOfFileExceededException, IOException\n     {\n         return new Tuple<K, V>( keys[nbElems - 1], values[nbElems - 1].getValue( btree ) );\n     }",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Leaf.java",
                "sha": "a5f01044437ef83fd6b54c59195b57197dd4622a",
                "status": "modified"
            },
            {
                "additions": 62,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Node.java",
                "changes": 90,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/Node.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 28,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/Node.java",
                "patch": "@@ -24,6 +24,7 @@\n import java.lang.reflect.Array;\n import java.util.LinkedList;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n import org.apache.mavibot.btree.exception.KeyNotFoundException;\n \n \n@@ -821,8 +822,11 @@ public boolean exist( K key ) throws IOException\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws KeyNotFoundException \n+     * @throws EndOfFileExceededException \n      */\n-    public V get( K key ) throws KeyNotFoundException\n+    public V get( K key ) throws IOException, KeyNotFoundException\n     {\n         int pos = findPos( key );\n \n@@ -852,8 +856,10 @@ public void setValue( int pos, ElementHolder<Page<K, V>, K, V> value )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public Page<K, V> getReference( int pos )\n+    public Page<K, V> getReference( int pos ) throws EndOfFileExceededException, IOException\n     {\n         if ( pos < nbElems + 1 )\n         {\n@@ -868,8 +874,11 @@ public void setValue( int pos, ElementHolder<Page<K, V>, K, V> value )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     public Cursor<K, V> browse( K key, Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack )\n+        throws EndOfFileExceededException, IOException\n     {\n         int pos = findPos( key );\n \n@@ -887,8 +896,11 @@ public void setValue( int pos, ElementHolder<Page<K, V>, K, V> value )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     public Cursor<K, V> browse( Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack )\n+        throws EndOfFileExceededException, IOException\n     {\n         stack.push( new ParentPos<K, V>( this, 0 ) );\n \n@@ -1115,32 +1127,40 @@ else if ( pos == middle )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public K getLeftMostKey()\n+    public K getLeftMostKey() throws EndOfFileExceededException, IOException\n     {\n         return children[0].getValue( btree ).getLeftMostKey();\n     }\n \n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public Tuple<K, V> findLeftMost()\n+    public Tuple<K, V> findLeftMost() throws EndOfFileExceededException, IOException\n     {\n         return children[0].getValue( btree ).findLeftMost();\n     }\n \n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    public Tuple<K, V> findRightMost()\n+    public Tuple<K, V> findRightMost() throws EndOfFileExceededException, IOException\n     {\n         return children[nbElems].getValue( btree ).findRightMost();\n     }\n \n \n     /**\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      * @see Object#toString()\n      */\n     public String toString()\n@@ -1151,32 +1171,39 @@ public String toString()\n         sb.append( super.toString() );\n         sb.append( \"] -> {\" );\n \n-        if ( nbElems > 0 )\n+        try\n         {\n-            // Start with the first child\n-            if ( children[0] == null )\n-            {\n-                sb.append( \"null\" );\n-            }\n-            else\n+            if ( nbElems > 0 )\n             {\n-                sb.append( 'r' ).append( children[0].getValue( btree ).getRevision() );\n-            }\n-\n-            for ( int i = 0; i < nbElems; i++ )\n-            {\n-                sb.append( \"|<\" ).append( keys[i] ).append( \">|\" );\n-\n-                if ( children[i + 1] == null )\n+                // Start with the first child\n+                if ( children[0] == null )\n                 {\n                     sb.append( \"null\" );\n                 }\n                 else\n                 {\n-                    sb.append( 'r' ).append( children[i + 1].getValue( btree ).getRevision() );\n+                    sb.append( 'r' ).append( children[0].getValue( btree ).getRevision() );\n+                }\n+\n+                for ( int i = 0; i < nbElems; i++ )\n+                {\n+                    sb.append( \"|<\" ).append( keys[i] ).append( \">|\" );\n+\n+                    if ( children[i + 1] == null )\n+                    {\n+                        sb.append( \"null\" );\n+                    }\n+                    else\n+                    {\n+                        sb.append( 'r' ).append( children[i + 1].getValue( btree ).getRevision() );\n+                    }\n                 }\n             }\n         }\n+        catch ( IOException ioe )\n+        {\n+            // Do nothing\n+        }\n \n         sb.append( \"}\" );\n \n@@ -1193,15 +1220,22 @@ public String dumpPage( String tabs )\n \n         if ( nbElems > 0 )\n         {\n-            // Start with the first child\n-            sb.append( children[0].getValue( btree ).dumpPage( tabs + \"    \" ) );\n+            try\n+            {\n+                // Start with the first child\n+                sb.append( children[0].getValue( btree ).dumpPage( tabs + \"    \" ) );\n \n-            for ( int i = 0; i < nbElems; i++ )\n+                for ( int i = 0; i < nbElems; i++ )\n+                {\n+                    sb.append( tabs );\n+                    sb.append( \"<\" );\n+                    sb.append( keys[i] ).append( \">\\n\" );\n+                    sb.append( children[i + 1].getValue( btree ).dumpPage( tabs + \"    \" ) );\n+                }\n+            }\n+            catch ( IOException ioe )\n             {\n-                sb.append( tabs );\n-                sb.append( \"<\" );\n-                sb.append( keys[i] ).append( \">\\n\" );\n-                sb.append( children[i + 1].getValue( btree ).dumpPage( tabs + \"    \" ) );\n+                // Do nothing\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Node.java",
                "sha": "70b364cfac5318f474814c6114ff3ed4fbcd85b0",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Page.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/Page.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 6,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/Page.java",
                "patch": "@@ -23,6 +23,7 @@\n import java.io.IOException;\n import java.util.LinkedList;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n import org.apache.mavibot.btree.exception.KeyNotFoundException;\n \n \n@@ -96,7 +97,7 @@\n      * @throws KeyNotFoundException If no entry with the given key can be found\n      * @return The associated value, or null if there is none\n      */\n-    V get( K key ) throws KeyNotFoundException;\n+    V get( K key ) throws KeyNotFoundException, IOException;\n \n \n     /**\n@@ -108,7 +109,8 @@\n      * @param stack The stack of parents we go through to get to this page\n      * @return A Cursor to browse the next elements\n      */\n-    Cursor<K, V> browse( K key, Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack );\n+    Cursor<K, V> browse( K key, Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack )\n+        throws EndOfFileExceededException, IOException;\n \n \n     /**\n@@ -117,8 +119,11 @@\n      * @param transaction The started transaction for this operation\n      * @param stack The stack of parents we go through to get to this page\n      * @return A Cursor to browse the next elements\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    Cursor<K, V> browse( Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack );\n+    Cursor<K, V> browse( Transaction<K, V> transaction, LinkedList<ParentPos<K, V>> stack )\n+        throws EndOfFileExceededException, IOException;\n \n \n     /**\n@@ -140,26 +145,32 @@\n      * down in the leftmost children to recursively find the leftmost key.\n      * \n      * @return The leftmost key in the tree\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    K getLeftMostKey();\n+    K getLeftMostKey() throws EndOfFileExceededException, IOException;\n \n \n     /**\n      * Find the leftmost element in this page. If the page is a node, it will go\n      * down in the leftmost children to recursively find the leftmost element.\n      * \n      * @return The leftmost element in the tree\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    Tuple<K, V> findLeftMost();\n+    Tuple<K, V> findLeftMost() throws EndOfFileExceededException, IOException;\n \n \n     /**\n      * Find the rightmost element in this page. If the page is a node, it will go\n      * down in the rightmost children to recursively find the rightmost element.\n      * \n      * @return The rightmost element in the tree\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    Tuple<K, V> findRightMost();\n+    Tuple<K, V> findRightMost() throws EndOfFileExceededException, IOException;\n \n \n     /**",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/Page.java",
                "sha": "9ba9b9efc4e131771147791cb1cd09fb72633c07",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/ReferenceHolder.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/ReferenceHolder.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 8,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/ReferenceHolder.java",
                "patch": "@@ -20,8 +20,11 @@\n package org.apache.mavibot.btree;\n \n \n+import java.io.IOException;\n import java.lang.ref.SoftReference;\n \n+import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n+\n \n /**\n  * A Value holder. As we may not store all the values in memory (except for an in-memory\n@@ -62,29 +65,35 @@ public ReferenceHolder( BTree<K, V> btree, E element, long offset )\n \n     /**\n      * {@inheritDoc}\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n     @Override\n-    public E getValue( BTree<K, V> btree )\n+    public E getValue( BTree<K, V> btree ) throws EndOfFileExceededException, IOException\n     {\n         E element = reference.get();\n \n-        if ( element != null )\n+        if ( element == null )\n         {\n-            return element;\n+            // We have to fetch the element from disk, using the offset now\n+            element = fetchElement( btree );\n         }\n \n-        // We have to fetch the element from disk, using the offset now\n-        return fetchElement( btree );\n+        return element;\n     }\n \n \n     /**\n      * Retrieve the value from the disk, using the BTree and offset\n-     * @return\n+     * @return The deserialized element (\n+     * @throws IOException \n+     * @throws EndOfFileExceededException \n      */\n-    private E fetchElement( BTree<K, V> btree )\n+    private E fetchElement( BTree<K, V> btree ) throws EndOfFileExceededException, IOException\n     {\n-        return null;\n+        E element = ( E ) btree.getRecordManager().deserialize( btree, offset );\n+\n+        return element;\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/ReferenceHolder.java",
                "sha": "ac4ffc234bc9027a386a8d0cfddf366e17fae2a5",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/directory-mavibot/blob/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java?ref=fffad21ac942f822ea809e9d60a59d9d3babb60e",
                "deletions": 0,
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "patch": "@@ -492,6 +492,7 @@ private void loadBTree( PageIO[] pageIos, BTree<?, ?> btree ) throws EndOfFileEx\n         PageIO[] rootPageIos = readPages( rootPageOffset, Long.MAX_VALUE );\n \n         Page btreeRoot = readPage( btree, rootPageIos );\n+        BTreeFactory.setRecordManager( btree, this );\n \n         BTreeFactory.setRoot( btree, btreeRoot );\n     }\n@@ -508,6 +509,16 @@ private Page readNode( BTree btree, long offset, long revision, int nbElems ) th\n     }\n \n \n+    public Page deserialize( BTree btree, long offset ) throws EndOfFileExceededException, IOException\n+    {\n+        PageIO[] rootPageIos = readPages( offset, Long.MAX_VALUE );\n+\n+        Page page = readPage( btree, rootPageIos );\n+\n+        return page;\n+    }\n+\n+\n     private Page readPage( BTree btree, PageIO[] pageIos ) throws IOException\n     {\n         // Deserialize the rootPage now",
                "raw_url": "https://github.com/apache/directory-mavibot/raw/fffad21ac942f822ea809e9d60a59d9d3babb60e/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "sha": "c0af07cff615e1bf7da9ee5af15141fdc8b94e71",
                "status": "modified"
            }
        ],
        "message": "o Added the code that fetch an element from the disk, when it's not present in memory\no Propagated various exceptions up to the top\no The RecordManager was not stored into a BTree we read from disk, leading to NPEs",
        "parent": "https://github.com/apache/directory-mavibot/commit/25e67e20d4eff4decceb2e84c46a6dbdb1ace91e",
        "repo": "directory-mavibot",
        "unit_tests": [
            "RecordManagerTest.java"
        ]
    }
}