[
    {
        "repo": "commons-jxpath",
        "commit": "https://github.com/apache/commons-jxpath/commit/96c4ad9cf88d0237e22175b65c260db222acaefb",
        "bug_id": "commons-jxpath_96c4ad9",
        "message": "JXPATH-113: NullPointerException in ChildContext when document only contains an empty root node. Thanks to Michele Vivoda. This also fixes #1 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@1716226 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-jxpath/commit/3cbf86865bb4ef79aef30187c9a9d0b354638997",
        "patched_files": [
            "ChildContext.java",
            "changes.xml"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-jxpath/raw/96c4ad9cf88d0237e22175b65c260db222acaefb/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-jxpath/contents/src/changes/changes.xml?ref=96c4ad9cf88d0237e22175b65c260db222acaefb",
                "filename": "src/changes/changes.xml",
                "deletions": 0,
                "sha": "b208e0ebe37e0c0da8bd0d3db780a8ccf8895e7a",
                "blob_url": "https://github.com/apache/commons-jxpath/blob/96c4ad9cf88d0237e22175b65c260db222acaefb/src/changes/changes.xml",
                "patch": "@@ -47,6 +47,9 @@ The <action> type attribute can be add,update,fix,remove.\n   <body>\n     <!-- The release date is the date RC is cut -->\n     <release version=\"1.4\" date=\"2014-??-??\" description=\"New features and bug fixes.\">\n+      <action issue=\"JXPATH-113\" dev=\"britter\" type=\"fix\" due-to=\"Michele Vivoda\">\n+        NullPointerException in ChildContext when document only contains an empty root node\n+      </action>\n       <action issue=\"JXPATH-160\" dev=\"britter\" type=\"fix\" due-to=\"Stefan Albrecht, Michele Vivoda, Uwe Barthel\">\n         ValueUtils.getValue throws exception with set and index above size\n       </action>",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-jxpath/raw/96c4ad9cf88d0237e22175b65c260db222acaefb/src/main/java/org/apache/commons/jxpath/ri/axes/ChildContext.java",
                "contents_url": "https://api.github.com/repos/apache/commons-jxpath/contents/src/main/java/org/apache/commons/jxpath/ri/axes/ChildContext.java?ref=96c4ad9cf88d0237e22175b65c260db222acaefb",
                "filename": "src/main/java/org/apache/commons/jxpath/ri/axes/ChildContext.java",
                "deletions": 1,
                "sha": "f4853f22c370a98ee32e2152ab3a96cee35d9188",
                "blob_url": "https://github.com/apache/commons-jxpath/blob/96c4ad9cf88d0237e22175b65c260db222acaefb/src/main/java/org/apache/commons/jxpath/ri/axes/ChildContext.java",
                "patch": "@@ -110,7 +110,7 @@ private void prepare() {\n             return;\n         }\n         NodePointer useParent = startFromParentLocation ? parent.getParent() : parent;\n-        iterator = useParent.childIterator(nodeTest, reverse,\n+        iterator = useParent == null ? null : useParent.childIterator(nodeTest, reverse,\n                 startFromParentLocation ? parent : null);\n     }\n }",
                "changes": 2
            },
            {
                "status": "added",
                "additions": 73,
                "raw_url": "https://github.com/apache/commons-jxpath/raw/96c4ad9cf88d0237e22175b65c260db222acaefb/src/test/java/org/apache/commons/jxpath/issues/JXPath113Test.java",
                "contents_url": "https://api.github.com/repos/apache/commons-jxpath/contents/src/test/java/org/apache/commons/jxpath/issues/JXPath113Test.java?ref=96c4ad9cf88d0237e22175b65c260db222acaefb",
                "filename": "src/test/java/org/apache/commons/jxpath/issues/JXPath113Test.java",
                "deletions": 0,
                "sha": "24550546bf863d43835960c27728731197968792",
                "blob_url": "https://github.com/apache/commons-jxpath/blob/96c4ad9cf88d0237e22175b65c260db222acaefb/src/test/java/org/apache/commons/jxpath/issues/JXPath113Test.java",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.jxpath.issues;\n+\n+import java.io.StringReader;\n+\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.apache.commons.jxpath.JXPathContext;\n+import org.apache.commons.jxpath.JXPathTestCase;\n+import org.w3c.dom.Document;\n+import org.xml.sax.InputSource;\n+\n+public class JXPath113Test extends JXPathTestCase\n+{\n+\n+    public void testIssue113() throws Exception\n+    {\n+        Document doc = JAXP.getDocument(\"<xml/>\");\n+        JXPathContext context = JXPathContext.newContext(doc);\n+        context.selectNodes(\"//following-sibling::node()\");\n+    }\n+\n+    static class JAXP\n+    {\n+\n+        public static Document getDocument(String xml) throws Exception\n+        {\n+            return getDocument(new InputSource(new StringReader(xml)));\n+        }\n+\n+        public static Document getDocument(InputSource is) throws Exception\n+        {\n+\n+            final DocumentBuilder builder = getDocumentBuilder();\n+            return builder.parse(is);\n+        }\n+\n+        private static DocumentBuilder getDocumentBuilder()\n+        {\n+            try\n+            {\n+                DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+                factory.setValidating(false);\n+                factory.setNamespaceAware(true);\n+                factory.setExpandEntityReferences(false);\n+                return factory.newDocumentBuilder();\n+            }\n+            catch (ParserConfigurationException e)\n+            {\n+                throw new Error(\"JAXP config error:\" + e.getMessage(), e);\n+            }\n+\n+        }\n+    }\n+\n+}",
                "changes": 73
            }
        ],
        "unit_tests": [
            "JXPath113Test.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/jxpath/issues/JXPath113Test.java",
        "buggy_files": [
            "src/main/java/org/apache/commons/jxpath/ri/axes/ChildContext.java",
            "src/changes/changes.xml"
        ],
        "fixed": true
    }
]