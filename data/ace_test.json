{
    "ace_564e880": {
        "bug_id": "ace_564e880",
        "commit": "https://github.com/apache/ace/commit/564e8800b53ccde046f7149446af870a03590e70",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ace/blob/564e8800b53ccde046f7149446af870a03590e70/org.apache.ace.obr/src/org/apache/ace/obr/storage/file/BundleFileStore.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/org.apache.ace.obr/src/org/apache/ace/obr/storage/file/BundleFileStore.java?ref=564e8800b53ccde046f7149446af870a03590e70",
                "deletions": 2,
                "filename": "org.apache.ace.obr/src/org/apache/ace/obr/storage/file/BundleFileStore.java",
                "patch": "@@ -89,6 +89,8 @@ public InputStream get(String fileName) throws IOException {\n \n     public String put(InputStream data, String fileName) throws IOException {\n \n+        if(fileName == null)\n+            fileName = \"\";\n         File tempFile = downloadToTempFile(data);\n \n         ResourceMetaData metaData = ResourceMetaData.getBundleMetaData(tempFile);\n@@ -101,10 +103,10 @@ public String put(InputStream data, String fileName) throws IOException {\n \n         File storeLocation = getResourceFile(metaData);\n         if (storeLocation == null) {\n-            throw new IOException(\"Failed to store resource (filename = \" + fileName + \")\");\n+            throw new IOException(\"Failed to store resource (filename = \" +  fileName  + \")\");\n         }\n         if (storeLocation.exists()) {\n-            m_log.log(LogService.LOG_ERROR, \"Resource already existed in OBR (filename = \" + fileName + \")\");\n+            m_log.log(LogService.LOG_ERROR, \"Resource already existed in OBR (filename = \" +  fileName  + \")\");\n             return null;\n         }\n ",
                "raw_url": "https://github.com/apache/ace/raw/564e8800b53ccde046f7149446af870a03590e70/org.apache.ace.obr/src/org/apache/ace/obr/storage/file/BundleFileStore.java",
                "sha": "83fb97f2fcb985ab5c781e29c09d625ef134c74f",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ace/blob/564e8800b53ccde046f7149446af870a03590e70/org.apache.ace.obr/test/org/apache/ace/obr/storage/file/BundleFileStoreTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/org.apache.ace.obr/test/org/apache/ace/obr/storage/file/BundleFileStoreTest.java?ref=564e8800b53ccde046f7149446af870a03590e70",
                "deletions": 3,
                "filename": "org.apache.ace.obr/test/org/apache/ace/obr/storage/file/BundleFileStoreTest.java",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.ace.test.utils.TestUtils;\n import org.osgi.framework.Constants;\n import org.osgi.service.cm.ConfigurationException;\n+import org.osgi.service.log.LogService;\n import org.testng.annotations.AfterMethod;\n import org.testng.annotations.BeforeMethod;\n import org.testng.annotations.Test;\n@@ -67,6 +68,9 @@ protected void setUp() throws Exception {\n         props.put(OBRFileStoreConstants.FILE_LOCATION_KEY, m_directory.getAbsolutePath());\n         m_bundleStore.updated(props);\n \n+        // set a null object on for log\n+        TestUtils.configureObject(m_bundleStore, LogService.class);\n+\n         // create a mock MetadataGenerator\n         m_metadata = new MockMetadataGenerator();\n         TestUtils.configureObject(m_bundleStore, MetadataGenerator.class, m_metadata);\n@@ -258,7 +262,7 @@ public void putBundleDuplicate() throws Exception {\n         assert filePath2 == null;\n     }\n \n-    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found\")\n+    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found.*\")\n     public void putBundleFail() throws Exception {\n         File bundle = createTmpResource(null, \"1.0.0\");\n         String filePath = m_bundleStore.put(new FileInputStream(bundle), null);\n@@ -294,13 +298,13 @@ public void putArtifactMavenVersion() throws Exception {\n         assert file.exists();\n     }\n \n-    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found\")\n+    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found.*\")\n     public void putArtifactFail1() throws Exception {\n         File bundle = createTmpResource(null, null);\n         m_bundleStore.put(new FileInputStream(bundle), null);\n     }\n \n-    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found\")\n+    @Test(groups = { UNIT }, expectedExceptions = { IOException.class }, expectedExceptionsMessageRegExp = \"Not a valid bundle and no filename found.*\")\n     public void putArtifactFail2() throws Exception {\n         File bundle = createTmpResource(null, null);\n         m_bundleStore.put(new FileInputStream(bundle), \"\");",
                "raw_url": "https://github.com/apache/ace/raw/564e8800b53ccde046f7149446af870a03590e70/org.apache.ace.obr/test/org/apache/ace/obr/storage/file/BundleFileStoreTest.java",
                "sha": "b492b5a92988cb8edfc140e85b1e855afb642b88",
                "status": "modified"
            }
        ],
        "message": "Fixed itest npe failures introduced in r1498701\n\ngit-svn-id: https://svn.apache.org/repos/asf/ace/trunk@1500605 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ace/commit/2e54170dca4122255f509cff2c95baa954014791",
        "patched_files": [
            "BundleFileStore.java"
        ],
        "repo": "ace",
        "unit_tests": [
            "BundleFileStoreTest.java"
        ]
    },
    "ace_ae8e079": {
        "bug_id": "ace_ae8e079",
        "commit": "https://github.com/apache/ace/commit/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ace/blob/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/bnd.bnd",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/org.apache.ace.client.rest.itest/bnd.bnd?ref=ae8e07949ec8ad3a022c694e1c7fa8fb759a460a",
                "deletions": 0,
                "filename": "org.apache.ace.client.rest.itest/bnd.bnd",
                "patch": "@@ -78,6 +78,7 @@ Test-Cases: ${classes;CONCRETE;EXTENDS;org.apache.ace.it.IntegrationTestBase}\n \torg.apache.ace.client.repository.impl;version=latest,\\\n \torg.apache.ace.deployment.provider.repositorybased;version=latest,\\\n \torg.apache.ace.client.rest;version=latest,\\\n+\torg.apache.ace.client.workspace;version=latest,\\\n \torg.apache.ace.feedback.common;version=latest\n -runproperties: org.apache.felix.log.storeDebug=true,\\\n \torg.apache.felix.eventadmin.Timeout=0,\\",
                "raw_url": "https://github.com/apache/ace/raw/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/bnd.bnd",
                "sha": "1375023033e47259c3042090aac1dfb543fe0797",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ace/blob/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/ClientRestUtils.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/ClientRestUtils.java?ref=ae8e07949ec8ad3a022c694e1c7fa8fb759a460a",
                "deletions": 1,
                "filename": "org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/ClientRestUtils.java",
                "patch": "@@ -198,13 +198,14 @@ public static File createTmpConfigOnDisk(String config) throws Exception {\n \n     /** Creates a new workspace. */\n     public static WebResource createWorkspace(String host, Client c) {\n-        WebResource r = c.resource(host.concat(\"/client/work\"));\n+        WebResource r = c.resource(host.concat(\"/client/work/\"));\n         try {\n             r.post(String.class, \"\");\n             fail(\"We should have been redirected to a new workspace.\");\n             return null; // to keep the compiler happy, it does not understand what fail() does\n         }\n         catch (UniformInterfaceException e) {\n+            assertEquals(\"Expected a valid redirect after creating a workspace\", 302, e.getResponse().getStatus());\n             return c.resource(e.getResponse().getLocation());\n         }\n     }",
                "raw_url": "https://github.com/apache/ace/raw/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/ClientRestUtils.java",
                "sha": "e21b2d16e8c6c56a64163f7828e5814323a6ae69",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ace/blob/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/RESTClientTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/RESTClientTest.java?ref=ae8e07949ec8ad3a022c694e1c7fa8fb759a460a",
                "deletions": 0,
                "filename": "org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/RESTClientTest.java",
                "patch": "@@ -393,6 +393,15 @@ private void configureServer() throws IOException {\n         configure(\"org.apache.ace.identification.property\",\n             \"targetID\", \"target-test\");\n \n+        configure(\"org.apache.ace.client.workspace\",\n+            \"repository.url\", HOST.concat(\"/repository\"),\n+            \"authentication.enabled\", \"false\",\n+            \"user.name\", \"d\",\n+            \"customer.name\", \"apache\",\n+            \"store.repository.name\", \"shop\",\n+            \"distribution.repository.name\", \"target\",\n+            \"deployment.repository.name\", \"deployment\");\n+\n         configureFactory(\"org.apache.ace.log.server.servlet.factory\",\n             \"name\", \"auditlog\",\n             HttpConstants.ENDPOINT, \"/auditlog\",",
                "raw_url": "https://github.com/apache/ace/raw/ae8e07949ec8ad3a022c694e1c7fa8fb759a460a/org.apache.ace.client.rest.itest/src/org/apache/ace/client/rest/itest/RESTClientTest.java",
                "sha": "20ba0e084f97e9d1cc70752139ec0090884fa00e",
                "status": "modified"
            }
        ],
        "message": "ACE-456 - fixed failing itest:\n\n- added missing workspace bundle + configuration;\n- added additional assertion on createWorkspace to ensure that\n  we've got a valid redirect. Otherwise, obscure NPEs will be\n  thrown later in the test(s).\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ace/trunk@1571710 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ace/commit/ced85f6fac52167215bf02923e6a1e12433f4d5e",
        "patched_files": [
            "ClientRestUtils.java",
            "bnd.bnd"
        ],
        "repo": "ace",
        "unit_tests": [
            "RESTClientTest.java"
        ]
    },
    "ace_bc5e7e0": {
        "bug_id": "ace_bc5e7e0",
        "commit": "https://github.com/apache/ace/commit/bc5e7e07f3b151c343732cfa5354bcf575f2112c",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ace/blob/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java?ref=bc5e7e07f3b151c343732cfa5354bcf575f2112c",
                "deletions": 4,
                "filename": "ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "patch": "@@ -272,11 +272,11 @@ private void setHashForVersion(String url, String target, String version, String\n             byte[] buf = new byte[BUFFER_SIZE];\n             for (int count = in.read(buf); count != -1; count = in.read(buf)) {\n                 baos.write(buf, 0, count);\n-\n-                result = baos.toByteArray();\n-\n-                m_cachedArtifacts.put(url, new WeakReference<byte[]>(result));\n             }\n+            \n+            result = baos.toByteArray();\n+            \n+            m_cachedArtifacts.put(url, new WeakReference<byte[]>(result));\n         }\n         finally {\n             silentlyClose(in);",
                "raw_url": "https://github.com/apache/ace/raw/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "sha": "3e793179f089e11cc248a735b2c0fca1d94ef8ab",
                "status": "modified"
            },
            {
                "additions": 67,
                "blob_url": "https://github.com/apache/ace/blob/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "changes": 116,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java?ref=bc5e7e07f3b151c343732cfa5354bcf575f2112c",
                "deletions": 49,
                "filename": "ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "patch": "@@ -38,7 +38,7 @@\n public class VelocityArtifactPreprocessorTest {\n     \n     private static final String TARGET = \"target\";\n-    private static final String VERSION = \"1.0.0\";\n+    private static final String VERSION1 = \"1.0.0\";\n     \n     private URL m_obrUrl;\n     private PropertyResolver m_resolver;\n@@ -55,42 +55,54 @@ public String get(String key) {\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n-    @Test(expected = IOException.class)\n-    public void testPreprocessNonExistingTemplateOk() throws Exception {\n-        // Should be something that really doesn't exist somehow...\n-        String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n+    @Test\n+    public void testNeedsNewVersionChangedTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n+        \n+        String url = createArtifact(\"Message: [$context.msg]\");\n+\n+        // \"upload\" a new version...\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        \n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed...\n+        \n+        updateArtifact(url, \"Another message: [$context.msg2]\");\n         \n-        new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n+        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed; original artifact is cached indefinitely...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n     @Test\n-    public void testPreprocessExistingRealTemplateOk() throws Exception {\n-        String url = createArtifact(\"Message: [$context.msg]\");\n+    public void testNeedsNewVersionEmptyTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n         \n-        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        assertNotNull(newUrl);\n-        // Verify that it is actually uploaded...\n-        assertFalse(newUrl.equals(url));\n-        // Verify that it is actually uploaded to our (fake) OBR...\n-        assertTrue(newUrl.startsWith(m_obrUrl.toExternalForm()));\n+        String url = createArtifact(\"\");\n+\n+        // \"upload\" a new version...\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n     @Test\n-    public void testPreprocessExistingNoTemplateOk() throws Exception {\n-        String url = createArtifact(\"Message: [context.msg]\");\n+    public void testNeedsNewVersionNonExistingTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n         \n-        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        assertNotNull(newUrl);\n-        // Verify that it is *not* uploaded...\n-        assertEquals(url, newUrl);\n+        // Should be something that really doesn't exist somehow...\n+        String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n+\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertTrue(result); // always true for non-existing templates...\n     }\n \n     /**\n@@ -102,49 +114,53 @@ public void testNeedsNewVersionUnchangedTemplateOk() throws Exception {\n         \n         String url = createArtifact(\"Message: [$context.msg]\");\n         \n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n         assertTrue(result); // nothing uploaded yet; new version is needed...\n-        \n+\n         // \"upload\" a new version...\n-        vap.preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        \n-        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+\n+        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n         assertFalse(result); // no new version is needed...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n      */\n     @Test\n-    public void testNeedsNewVersionChangedTemplateOk() throws Exception {\n-        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n-        \n-        String url = createArtifact(\"Message: [$context.msg]\");\n-\n-        // \"upload\" a new version...\n-        vap.preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        \n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertFalse(result); // no new version is needed...\n-        \n-        updateArtifact(url, \"Another message: [$context.msg2]\");\n+    public void testPreprocessExistingNoTemplateOk() throws Exception {\n+        String url = createArtifact(\"Message: [context.msg]\");\n         \n-        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertFalse(result); // no new version is needed; original artifact is cached indefinitely...\n+        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        assertNotNull(newUrl);\n+        // Verify that it is *not* uploaded...\n+        assertEquals(url, newUrl);\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n      */\n     @Test\n-    public void testNeedsNewVersionNonExistingTemplateOk() throws Exception {\n-        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n+    public void testPreprocessExistingRealTemplateOk() throws Exception {\n+        String url = createArtifact(\"Message: [$context.msg]\");\n         \n+        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        assertNotNull(newUrl);\n+        // Verify that it is actually uploaded...\n+        assertFalse(newUrl.equals(url));\n+        // Verify that it is actually uploaded to our (fake) OBR...\n+        assertTrue(newUrl.startsWith(m_obrUrl.toExternalForm()));\n+    }\n+\n+    /**\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     */\n+    @Test(expected = IOException.class)\n+    public void testPreprocessNonExistingTemplateOk() throws Exception {\n         // Should be something that really doesn't exist somehow...\n         String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n-\n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertTrue(result); // always true for non-existing templates...\n+        \n+        new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n     }\n \n     private String createArtifact(String string) throws IOException {\n@@ -154,6 +170,7 @@ private String createArtifact(String string) throws IOException {\n         \n         FileWriter writer = new FileWriter(tmpFile);\n         writer.write(string);\n+        writer.flush();\n         writer.close();\n \n         return tmpFile.toURI().toURL().toExternalForm();\n@@ -164,6 +181,7 @@ private String updateArtifact(String url, String string) throws IOException {\n         \n         FileWriter writer = new FileWriter(uri.getFile());\n         writer.write(string);\n+        writer.flush();\n         writer.close();\n \n         return url;",
                "raw_url": "https://github.com/apache/ace/raw/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "sha": "f8e35abd47750717bbe2c6cc961bcb08777ba3e0",
                "status": "modified"
            }
        ],
        "message": "ACE-257: fixed possible NPE in VelocityArtifactPreprocessor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ace/trunk@1325172 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ace/commit/883cc6de1532d67d1cf40ddc580d2b26f6d6c385",
        "patched_files": [
            "VelocityArtifactPreprocessor.java"
        ],
        "repo": "ace",
        "unit_tests": [
            "VelocityArtifactPreprocessorTest.java"
        ]
    },
    "ace_e5d86d3": {
        "bug_id": "ace_e5d86d3",
        "commit": "https://github.com/apache/ace/commit/e5d86d3424ba829c79435b9d20da3e7303c97f84",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ace/blob/e5d86d3424ba829c79435b9d20da3e7303c97f84/server/src/org/apache/ace/deployment/provider/filebased/FileBasedProvider.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/server/src/org/apache/ace/deployment/provider/filebased/FileBasedProvider.java?ref=e5d86d3424ba829c79435b9d20da3e7303c97f84",
                "deletions": 7,
                "filename": "server/src/org/apache/ace/deployment/provider/filebased/FileBasedProvider.java",
                "patch": "@@ -349,14 +349,15 @@ public void updated(Dictionary settings) throws ConfigurationException {\n             m_baseDirectory = baseDirectory;\n \n             String defaultDirectoryName = (String) settings.get(DEFAULT_DIRECTORY_NAME);\n-            File defaultDirectory = new File(defaultDirectoryName);\n-            if (!defaultDirectory.exists() || !defaultDirectory.isDirectory()) {\n-                // fallback to using the base directory\n-                m_defaultDirectory = baseDirectory;\n-            }\n-            else {\n-                m_defaultDirectory = defaultDirectory;\n+            if (defaultDirectoryName != null) {\n+                File defaultDirectory = new File(defaultDirectoryName);\n+                if (defaultDirectory.exists() && defaultDirectory.isDirectory()) {\n+                    m_defaultDirectory = defaultDirectory;\n+                    return;\n+                }\n             }\n+            // fallback to using the base directory\n+            m_defaultDirectory = baseDirectory;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/ace/raw/e5d86d3424ba829c79435b9d20da3e7303c97f84/server/src/org/apache/ace/deployment/provider/filebased/FileBasedProvider.java",
                "sha": "f0f42b6646ff8a3a0fb203574bef4ab2a837e12b",
                "status": "modified"
            }
        ],
        "message": "Bugfix, NPE when the default directory was not specified, made a mistake in the checking code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ace/trunk@829739 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ace/commit/746ea2416be6e3af4a0743397e0821f7745dc58f",
        "patched_files": [
            "FileBasedProvider.java"
        ],
        "repo": "ace",
        "unit_tests": [
            "FileBasedProviderTest.java"
        ]
    }
}