{
    "ace_bc5e7e0": {
        "repo": "ace",
        "message": "ACE-257: fixed possible NPE in VelocityArtifactPreprocessor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ace/trunk@1325172 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/ace/commit/bc5e7e07f3b151c343732cfa5354bcf575f2112c",
        "parent": "https://github.com/apache/ace/commit/883cc6de1532d67d1cf40ddc580d2b26f6d6c385",
        "bug_id": "ace_bc5e7e0",
        "file": [
            {
                "sha": "3e793179f089e11cc248a735b2c0fca1d94ef8ab",
                "filename": "ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "blob_url": "https://github.com/apache/ace/blob/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "raw_url": "https://github.com/apache/ace/raw/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/ace-client-repository-helper-base/src/main/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessor.java?ref=bc5e7e07f3b151c343732cfa5354bcf575f2112c",
                "patch": "@@ -272,11 +272,11 @@ private void setHashForVersion(String url, String target, String version, String\n             byte[] buf = new byte[BUFFER_SIZE];\n             for (int count = in.read(buf); count != -1; count = in.read(buf)) {\n                 baos.write(buf, 0, count);\n-\n-                result = baos.toByteArray();\n-\n-                m_cachedArtifacts.put(url, new WeakReference<byte[]>(result));\n             }\n+            \n+            result = baos.toByteArray();\n+            \n+            m_cachedArtifacts.put(url, new WeakReference<byte[]>(result));\n         }\n         finally {\n             silentlyClose(in);",
                "deletions": 4
            },
            {
                "sha": "f8e35abd47750717bbe2c6cc961bcb08777ba3e0",
                "filename": "ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "blob_url": "https://github.com/apache/ace/blob/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "raw_url": "https://github.com/apache/ace/raw/bc5e7e07f3b151c343732cfa5354bcf575f2112c/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java",
                "status": "modified",
                "changes": 116,
                "additions": 67,
                "contents_url": "https://api.github.com/repos/apache/ace/contents/ace-client-repository-helper-base/src/test/java/org/apache/ace/client/repository/helper/base/VelocityArtifactPreprocessorTest.java?ref=bc5e7e07f3b151c343732cfa5354bcf575f2112c",
                "patch": "@@ -38,7 +38,7 @@\n public class VelocityArtifactPreprocessorTest {\n     \n     private static final String TARGET = \"target\";\n-    private static final String VERSION = \"1.0.0\";\n+    private static final String VERSION1 = \"1.0.0\";\n     \n     private URL m_obrUrl;\n     private PropertyResolver m_resolver;\n@@ -55,42 +55,54 @@ public String get(String key) {\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n-    @Test(expected = IOException.class)\n-    public void testPreprocessNonExistingTemplateOk() throws Exception {\n-        // Should be something that really doesn't exist somehow...\n-        String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n+    @Test\n+    public void testNeedsNewVersionChangedTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n+        \n+        String url = createArtifact(\"Message: [$context.msg]\");\n+\n+        // \"upload\" a new version...\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        \n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed...\n+        \n+        updateArtifact(url, \"Another message: [$context.msg2]\");\n         \n-        new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n+        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed; original artifact is cached indefinitely...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n     @Test\n-    public void testPreprocessExistingRealTemplateOk() throws Exception {\n-        String url = createArtifact(\"Message: [$context.msg]\");\n+    public void testNeedsNewVersionEmptyTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n         \n-        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        assertNotNull(newUrl);\n-        // Verify that it is actually uploaded...\n-        assertFalse(newUrl.equals(url));\n-        // Verify that it is actually uploaded to our (fake) OBR...\n-        assertTrue(newUrl.startsWith(m_obrUrl.toExternalForm()));\n+        String url = createArtifact(\"\");\n+\n+        // \"upload\" a new version...\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertFalse(result); // no new version is needed...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n      */\n     @Test\n-    public void testPreprocessExistingNoTemplateOk() throws Exception {\n-        String url = createArtifact(\"Message: [context.msg]\");\n+    public void testNeedsNewVersionNonExistingTemplateOk() throws Exception {\n+        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n         \n-        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        assertNotNull(newUrl);\n-        // Verify that it is *not* uploaded...\n-        assertEquals(url, newUrl);\n+        // Should be something that really doesn't exist somehow...\n+        String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n+\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n+        assertTrue(result); // always true for non-existing templates...\n     }\n \n     /**\n@@ -102,49 +114,53 @@ public void testNeedsNewVersionUnchangedTemplateOk() throws Exception {\n         \n         String url = createArtifact(\"Message: [$context.msg]\");\n         \n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n+        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n         assertTrue(result); // nothing uploaded yet; new version is needed...\n-        \n+\n         // \"upload\" a new version...\n-        vap.preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        \n-        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n+        vap.preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+\n+        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION1);\n         assertFalse(result); // no new version is needed...\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n      */\n     @Test\n-    public void testNeedsNewVersionChangedTemplateOk() throws Exception {\n-        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n-        \n-        String url = createArtifact(\"Message: [$context.msg]\");\n-\n-        // \"upload\" a new version...\n-        vap.preprocess(url, m_resolver, TARGET, VERSION, m_obrUrl);\n-        \n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertFalse(result); // no new version is needed...\n-        \n-        updateArtifact(url, \"Another message: [$context.msg2]\");\n+    public void testPreprocessExistingNoTemplateOk() throws Exception {\n+        String url = createArtifact(\"Message: [context.msg]\");\n         \n-        result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertFalse(result); // no new version is needed; original artifact is cached indefinitely...\n+        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        assertNotNull(newUrl);\n+        // Verify that it is *not* uploaded...\n+        assertEquals(url, newUrl);\n     }\n \n     /**\n-     * Test case for {@link VelocityArtifactPreprocessor#needsNewVersion(String, PropertyResolver, String, String)}\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n      */\n     @Test\n-    public void testNeedsNewVersionNonExistingTemplateOk() throws Exception {\n-        final VelocityArtifactPreprocessor vap = new VelocityArtifactPreprocessor();\n+    public void testPreprocessExistingRealTemplateOk() throws Exception {\n+        String url = createArtifact(\"Message: [$context.msg]\");\n         \n+        String newUrl = new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n+        assertNotNull(newUrl);\n+        // Verify that it is actually uploaded...\n+        assertFalse(newUrl.equals(url));\n+        // Verify that it is actually uploaded to our (fake) OBR...\n+        assertTrue(newUrl.startsWith(m_obrUrl.toExternalForm()));\n+    }\n+\n+    /**\n+     * Test case for {@link VelocityArtifactPreprocessor#preprocess(String, PropertyResolver, String, String, java.net.URL)}\n+     */\n+    @Test(expected = IOException.class)\n+    public void testPreprocessNonExistingTemplateOk() throws Exception {\n         // Should be something that really doesn't exist somehow...\n         String url = \"file:///path/to/nowhere-\" + System.currentTimeMillis();\n-\n-        boolean result = vap.needsNewVersion(url, m_resolver, TARGET, VERSION);\n-        assertTrue(result); // always true for non-existing templates...\n+        \n+        new VelocityArtifactPreprocessor().preprocess(url, m_resolver, TARGET, VERSION1, m_obrUrl);\n     }\n \n     private String createArtifact(String string) throws IOException {\n@@ -154,6 +170,7 @@ private String createArtifact(String string) throws IOException {\n         \n         FileWriter writer = new FileWriter(tmpFile);\n         writer.write(string);\n+        writer.flush();\n         writer.close();\n \n         return tmpFile.toURI().toURL().toExternalForm();\n@@ -164,6 +181,7 @@ private String updateArtifact(String url, String string) throws IOException {\n         \n         FileWriter writer = new FileWriter(uri.getFile());\n         writer.write(string);\n+        writer.flush();\n         writer.close();\n \n         return url;",
                "deletions": 49
            }
        ],
        "patched_files": [
            "VelocityArtifactPreprocessor.java"
        ],
        "unit_tests": [
            "VelocityArtifactPreprocessorTest.java"
        ]
    }
}