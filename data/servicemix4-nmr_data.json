[{"commit": "https://github.com/apache/servicemix4-nmr/commit/0bbb47620048a7173992ec603e31b7ff18b6de3f", "parent": "https://github.com/apache/servicemix4-nmr/commit/126955c4fc4bd5c44cb40f69e8be5ee756daee4b", "message": "[SMX4NMR-304]add NPE guard for AbstractComponentContext.getMBeanServer\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@1401953 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_1", "file": [{"additions": 5, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/0bbb47620048a7173992ec603e31b7ff18b6de3f/jbi/runtime/src/main/java/org/apache/servicemix/jbi/runtime/impl/AbstractComponentContext.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/0bbb47620048a7173992ec603e31b7ff18b6de3f/jbi/runtime/src/main/java/org/apache/servicemix/jbi/runtime/impl/AbstractComponentContext.java", "sha": "089bafe6a5c8f159a0fb3046ed0ed625bdfc821a", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/runtime/src/main/java/org/apache/servicemix/jbi/runtime/impl/AbstractComponentContext.java?ref=0bbb47620048a7173992ec603e31b7ff18b6de3f", "patch": "@@ -228,7 +228,11 @@ public MBeanNames getMBeanNames() {\n     }\n \n     public MBeanServer getMBeanServer() {\n-        return componentRegistry.getEnvironment().getMBeanServer();\n+        if (componentRegistry.getEnvironment() != null) {\n+            return componentRegistry.getEnvironment().getMBeanServer();\n+        } else {\n+            return null;\n+        }\n     }\n \n     public InitialContext getNamingContext() {", "filename": "jbi/runtime/src/main/java/org/apache/servicemix/jbi/runtime/impl/AbstractComponentContext.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/b40d38aae82deadaf27189e1a75bb48330c6f6d8", "parent": "https://github.com/apache/servicemix4-nmr/commit/449b4bc766b2eab5107a6428f2aeab819166b9a5", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@960921 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_2", "file": [{"additions": 2, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/b40d38aae82deadaf27189e1a75bb48330c6f6d8/jbi/commands/src/main/java/org/apache/servicemix/jbi/commands/JbiCommandCompleter.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/b40d38aae82deadaf27189e1a75bb48330c6f6d8/jbi/commands/src/main/java/org/apache/servicemix/jbi/commands/JbiCommandCompleter.java", "sha": "08453947961766c932dde1c0a6a05927738886df", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/commands/src/main/java/org/apache/servicemix/jbi/commands/JbiCommandCompleter.java?ref=b40d38aae82deadaf27189e1a75bb48330c6f6d8", "patch": "@@ -17,6 +17,7 @@\n package org.apache.servicemix.jbi.commands;\n \n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -69,7 +70,7 @@ public int complete(final String buffer, final int cursor, final List candidates\n             }\n             return artifacts;\n         } catch (Exception e) {\n-            return null;\n+            return Collections.emptySet();\n         }\n     }\n ", "filename": "jbi/commands/src/main/java/org/apache/servicemix/jbi/commands/JbiCommandCompleter.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/27f64db2c0bd3f4ee3a03cf7cef582d1f0b8346b", "parent": "https://github.com/apache/servicemix4-nmr/commit/a508ed14a2ccf2389120c2d287c907211a905cab", "message": "Avoid possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@749571 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_3", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/27f64db2c0bd3f4ee3a03cf7cef582d1f0b8346b/jbi/cluster/requestor/src/main/java/org/apache/servicemix/jbi/cluster/requestor/AbstractJmsRequestorPool.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/27f64db2c0bd3f4ee3a03cf7cef582d1f0b8346b/jbi/cluster/requestor/src/main/java/org/apache/servicemix/jbi/cluster/requestor/AbstractJmsRequestorPool.java", "sha": "94a6f8d4903055ec2892d18530c88a7ef4afe9d3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/cluster/requestor/src/main/java/org/apache/servicemix/jbi/cluster/requestor/AbstractJmsRequestorPool.java?ref=27f64db2c0bd3f4ee3a03cf7cef582d1f0b8346b", "patch": "@@ -201,7 +201,7 @@ protected void handleListenerSetupFailure(Throwable ex, boolean alreadyRecovered\n                 StringBuffer msg = new StringBuffer();\n                 msg.append(\"Setup of JMS message listener invoker failed for destination '\");\n                 msg.append(getDestinationDescription()).append(\"' - trying to recover. Cause: \");\n-                msg.append(ex instanceof JMSException ? JmsUtils.buildExceptionMessage((JMSException) ex) : ex.getMessage());\n+                msg.append(ex instanceof JMSException ? JmsUtils.buildExceptionMessage(fixForSpring5470((JMSException) ex)) : ex.getMessage());\n                 if (logger.isDebugEnabled()) {\n                     logger.info(msg, ex);\n                 }", "filename": "jbi/cluster/requestor/src/main/java/org/apache/servicemix/jbi/cluster/requestor/AbstractJmsRequestorPool.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/4be081a4f60efedb79f656452cda694c16d78fb8", "parent": "https://github.com/apache/servicemix4-nmr/commit/77df05a3f7feb743ae5680698f4088f0dc2dd710", "message": "SMX4NMR-70: fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@748127 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_4", "file": [{"additions": 18, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/4be081a4f60efedb79f656452cda694c16d78fb8/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/AssemblyReferencesListener.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/4be081a4f60efedb79f656452cda694c16d78fb8/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/AssemblyReferencesListener.java", "sha": "ba53166c1298de5ac08b483bfa6b7b8d25e935ac", "changes": 24, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/AssemblyReferencesListener.java?ref=4be081a4f60efedb79f656452cda694c16d78fb8", "patch": "@@ -85,7 +85,7 @@ public void exchangeSent(Exchange exchange) {\n             if (exchange instanceof InternalExchange) {\n                 // Increment reference to the source SA\n                 InternalExchange ie = (InternalExchange) exchange;\n-                reference(endpoints.get(ie.getSource()));\n+                reference(ie.getSource());\n             }\n         }\n     }\n@@ -96,16 +96,16 @@ public void exchangeDelivered(Exchange exchange) {\n             if (exchange instanceof InternalExchange) {\n                 InternalExchange ie = (InternalExchange) exchange;\n                 // Decrement references to source and destination SA\n-                unreference(endpoints.get(ie.getSource()));\n-                unreference(endpoints.get(ie.getDestination()));\n+                unreference(ie.getSource());\n+                unreference(ie.getDestination());\n             }\n             // Check if this is a new exchange\n         } else if (exchange.getStatus() == Status.Active && exchange.getRole() == Role.Provider &&\n                 exchange.getOut(false) == null && exchange.getFault(false) == null) {\n             if (exchange instanceof InternalExchange) {\n                 // Increment reference to the destination SA\n                 InternalExchange ie = (InternalExchange) exchange;\n-                reference(endpoints.get(ie.getDestination()));\n+                reference(ie.getDestination());\n             }\n         }\n     }\n@@ -114,8 +114,8 @@ public void exchangeFailed(Exchange exchange) {\n         if (exchange instanceof InternalExchange) {\n             InternalExchange ie = (InternalExchange) exchange;\n             // Decrement references to source and destination SA\n-            unreference(endpoints.get(ie.getSource()));\n-            unreference(endpoints.get(ie.getDestination()));\n+            unreference(ie.getSource());\n+            unreference(ie.getDestination());\n         }\n     }\n \n@@ -134,6 +134,18 @@ public void waitFor(ServiceAssembly assembly) throws InterruptedException {\n         }\n     }\n \n+    private void reference(InternalEndpoint endpoint) {\n+        if (endpoint != null) {\n+            reference(endpoints.get(endpoint));\n+        }\n+    }\n+\n+    private void unreference(InternalEndpoint endpoint) {\n+        if (endpoint != null) {\n+            unreference(endpoints.get(endpoint));\n+        }\n+    }\n+\n     private void reference(ServiceAssembly assembly) {\n         if (assembly != null) {\n             AtomicInteger count = references.get(assembly);", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/AssemblyReferencesListener.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/77df05a3f7feb743ae5680698f4088f0dc2dd710", "parent": "https://github.com/apache/servicemix4-nmr/commit/166b565bc25135fe7e18a5de5172b8e6b011e8c9", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@748122 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_5", "file": [{"additions": 9, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/77df05a3f7feb743ae5680698f4088f0dc2dd710/naming/src/main/java/org/apache/servicemix/naming/OSGiInitialContextFactoryBuilder.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/77df05a3f7feb743ae5680698f4088f0dc2dd710/naming/src/main/java/org/apache/servicemix/naming/OSGiInitialContextFactoryBuilder.java", "sha": "3a2db2035cda5b3942f04b7cf064c5625773db93", "changes": 16, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/naming/src/main/java/org/apache/servicemix/naming/OSGiInitialContextFactoryBuilder.java?ref=77df05a3f7feb743ae5680698f4088f0dc2dd710", "patch": "@@ -103,13 +103,15 @@ public InitialContextFactory createInitialContextFactory(Hashtable<?, ?> env) th\n             factory = factoryBuilder.createInitialContextFactory(env);\n         }\n         if (factory == null && env != null) {\n-            String className = env != null ? (String) env.get(Context.INITIAL_CONTEXT_FACTORY) : null;\n-            try {\n-                factory = (InitialContextFactory) Class.forName(className).newInstance();\n-            } catch (Exception e) {\n-                NoInitialContextException ne = new NoInitialContextException(\"Cannot instantiate class: \" + className);\n-                ne.setRootCause(e);\n-                throw ne;\n+            String className = (String) env.get(Context.INITIAL_CONTEXT_FACTORY);\n+            if (className != null) {\n+                try {\n+                    factory = (InitialContextFactory) Class.forName(className).newInstance();\n+                } catch (Exception e) {\n+                    NoInitialContextException ne = new NoInitialContextException(\"Cannot instantiate class: \" + className);\n+                    ne.setRootCause(e);\n+                    throw ne;\n+                }\n             }\n         }\n         if (factory == null) {", "filename": "naming/src/main/java/org/apache/servicemix/naming/OSGiInitialContextFactoryBuilder.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/2cc4f8cfa6eda8c05e7ee089fade4275111f9599", "parent": "https://github.com/apache/servicemix4-nmr/commit/27dfef6409cda20cace6e678ab593521afff6d18", "message": "Avoid possible NPE (though it needs investigation)\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@744135 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_6", "file": [{"additions": 9, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/2cc4f8cfa6eda8c05e7ee089fade4275111f9599/jbi/osgi/src/main/java/org/apache/servicemix/jbi/osgi/RegistryWrapper.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/2cc4f8cfa6eda8c05e7ee089fade4275111f9599/jbi/osgi/src/main/java/org/apache/servicemix/jbi/osgi/RegistryWrapper.java", "sha": "ada1e677d3429fe36c196eaf9e3e3d10cc815f21", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/osgi/src/main/java/org/apache/servicemix/jbi/osgi/RegistryWrapper.java?ref=2cc4f8cfa6eda8c05e7ee089fade4275111f9599", "patch": "@@ -28,6 +28,8 @@\n import org.apache.servicemix.nmr.api.Reference;\n import org.apache.servicemix.nmr.api.Wire;\n import org.apache.servicemix.nmr.core.util.MapToDictionary;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n \n@@ -42,6 +44,8 @@\n  */\n public class RegistryWrapper implements EndpointRegistry {\n \n+    private static final Log LOG = LogFactory.getLog(RegistryWrapper.class);\n+\n     private EndpointRegistry registry;\n     private BundleContext bundleContext;\n     private Map<Endpoint, ServiceRegistration> registrations = new ConcurrentHashMap();\n@@ -61,7 +65,11 @@ public void register(Endpoint endpoint, Map<String, ?> properties) {\n \n     public void unregister(Endpoint endpoint, Map<String, ?> properties) {\n         ServiceRegistration reg = registrations.remove(endpoint);\n-        reg.unregister();\n+        if (reg != null) {\n+            reg.unregister();\n+        } else {\n+            LOG.warn(\"Unregistration failed: the endpoint was not found in registry: \" + endpoint + \" (\" + properties + \")\");\n+        }\n     }\n \n     public List<Endpoint> query(Map<String, ?> properties) {", "filename": "jbi/osgi/src/main/java/org/apache/servicemix/jbi/osgi/RegistryWrapper.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/e8acc25aa22e5666be0f7abc9baa0a051241ea8a", "parent": "https://github.com/apache/servicemix4-nmr/commit/d74b3421a0d4a346ab3a8fe8e7dafa8c92059eed", "message": "Avoid NPE when the jbi artifact transformation fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@743888 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_7", "file": [{"additions": 17, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/e8acc25aa22e5666be0f7abc9baa0a051241ea8a/jbi/management/src/main/java/org/apache/servicemix/jbi/management/AbstractInstaller.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/e8acc25aa22e5666be0f7abc9baa0a051241ea8a/jbi/management/src/main/java/org/apache/servicemix/jbi/management/AbstractInstaller.java", "sha": "15d76b7adeacc20c10a2a3cbbdf5d132e3ae653c", "changes": 31, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/management/src/main/java/org/apache/servicemix/jbi/management/AbstractInstaller.java?ref=e8acc25aa22e5666be0f7abc9baa0a051241ea8a", "patch": "@@ -144,20 +144,23 @@ public File getGenerateDir() {\n     protected File transformArtifact(File file) throws Exception {\n         // Check registered deployers\n         ServiceReference[] srvRefs = bundleContext.getAllServiceReferences(DeploymentListener.class.getName(), null);\n-\t\tif(srvRefs != null) {\n-\t\t    for(ServiceReference sr : srvRefs) {\n-\t\t    \ttry {\n-\t\t    \t\tDeploymentListener deploymentListener = (DeploymentListener) bundleContext.getService(sr);\n-\t\t    \t\tif (deploymentListener.canHandle(file)) {\n-\t\t    \t\t\tFile transformedFile = deploymentListener.handle(file, getGenerateDir());\n-\t\t    \t\t\tartifactToBundle.put(file.getAbsolutePath(), transformedFile.getAbsolutePath());\n-\t\t    \t\t\treturn transformedFile;\n-\t\t    \t\t}\n-\t\t    \t} finally {\n-\t\t    \t\tbundleContext.ungetService(sr);\n-\t\t    \t}\n-\t\t    }\n-\t\t}\n+        if (srvRefs != null) {\n+            for (ServiceReference sr : srvRefs) {\n+                try {\n+                    DeploymentListener deploymentListener = (DeploymentListener) bundleContext.getService(sr);\n+                    if (deploymentListener.canHandle(file)) {\n+                        File transformedFile = deploymentListener.handle(file, getGenerateDir());\n+                        if (transformedFile == null) {\n+                            throw new IllegalStateException(\"Unable to transform JBI artifact to an OSGi bundle\");\n+                        }\n+                        artifactToBundle.put(file.getAbsolutePath(), transformedFile.getAbsolutePath());\n+                        return transformedFile;\n+                    }\n+                } finally {\n+                    bundleContext.ungetService(sr);\n+                }\n+            }\n+        }\n         JarFile jar = null;\n         try {\n             // Handle OSGi bundles with the default deployer", "filename": "jbi/management/src/main/java/org/apache/servicemix/jbi/management/AbstractInstaller.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/09942a3f749fec03052bb347dc0e0befe4f5b7cc", "parent": "https://github.com/apache/servicemix4-nmr/commit/e55024ecac2002ac251c4f36a1081429142860ed", "message": "SMX4NMR-44: NPE when unregistering endpoints\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@679025 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_8", "file": [{"additions": 11, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/09942a3f749fec03052bb347dc0e0befe4f5b7cc/nmr/core/src/main/java/org/apache/servicemix/nmr/core/EndpointRegistryImpl.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/09942a3f749fec03052bb347dc0e0befe4f5b7cc/nmr/core/src/main/java/org/apache/servicemix/nmr/core/EndpointRegistryImpl.java", "sha": "d72cb05a7a7ad61738e3ef4c05cc70860614d3ab", "changes": 16, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/nmr/core/src/main/java/org/apache/servicemix/nmr/core/EndpointRegistryImpl.java?ref=09942a3f749fec03052bb347dc0e0befe4f5b7cc", "patch": "@@ -123,17 +123,23 @@ public void unregister(Endpoint endpoint, Map<String, ?> properties) {\n         InternalEndpoint wrapper;\n         if (endpoint instanceof InternalEndpoint) {\n             wrapper = (InternalEndpoint) endpoint;\n-            endpoint = wrappers.remove(wrapper);\n-            endpoints.remove(endpoint);\n+            if (wrapper != null) {\n+                endpoint = wrappers.remove(wrapper);\n+                if (endpoint != null) {\n+                    endpoints.remove(endpoint);\n+                }\n+            }\n         } else {\n             wrapper = endpoints.remove(endpoint);\n             if (wrapper != null) {\n                 wrappers.remove(wrapper);\n             }\n         }\n-        registry.unregister(wrapper, properties);\n-        for (EndpointListener listener : nmr.getListenerRegistry().getListeners(EndpointListener.class)) {\n-            listener.endpointUnregistered(wrapper);\n+        if (wrapper != null) {\n+            registry.unregister(wrapper, properties);\n+            for (EndpointListener listener : nmr.getListenerRegistry().getListeners(EndpointListener.class)) {\n+                listener.endpointUnregistered(wrapper);\n+            }\n         }\n         for (DynamicReferenceImpl ref : references.keySet()) {\n             ref.setDirty();", "filename": "nmr/core/src/main/java/org/apache/servicemix/nmr/core/EndpointRegistryImpl.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/e83a9e62351a1a23095458820da2fb50a7620b75", "parent": "https://github.com/apache/servicemix4-nmr/commit/2e56afe8c0d7623e58e8833edf5e2884808dd980", "message": "SMX4NMR-38: Avoiding NPE when wrappedComponents.remove() returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@677271 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_9", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/e83a9e62351a1a23095458820da2fb50a7620b75/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/e83a9e62351a1a23095458820da2fb50a7620b75/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java", "sha": "45fb28ff2131948476485ff6161b059d0f76053e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java?ref=e83a9e62351a1a23095458820da2fb50a7620b75", "patch": "@@ -405,7 +405,7 @@ protected void maybeWrapComponent(ServiceReference reference, javax.jbi.componen\n \n     protected void maybeUnwrapComponent(ServiceReference reference, javax.jbi.component.Component component) {\n         String name = (String) reference.getProperty(NAME);\n-        if (name != null && wrappedComponents.remove(name)) {\n+        if (name != null && Boolean.TRUE.equals(wrappedComponents.remove(name))) {\n             components.remove(name);\n         }\n     }", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/4c1c20308d8b8b73aa06a43957e82ce798ba4bb8", "parent": "https://github.com/apache/servicemix4-nmr/commit/c4fc731552dbabad44de5ccc84c3708880c28be8", "message": "SMX4NMR-228: NPE in ExecutorConfigurator when no configuration settings available\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@1003498 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_10", "file": [{"additions": 40, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/4c1c20308d8b8b73aa06a43957e82ce798ba4bb8/nmr/osgi/src/main/java/org/apache/servicemix/nmr/osgi/ExecutorConfigurator.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/4c1c20308d8b8b73aa06a43957e82ce798ba4bb8/nmr/osgi/src/main/java/org/apache/servicemix/nmr/osgi/ExecutorConfigurator.java", "sha": "378bb60916842efe38498412ceb041fbbf22c71c", "changes": 78, "status": "modified", "deletions": 38, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/nmr/osgi/src/main/java/org/apache/servicemix/nmr/osgi/ExecutorConfigurator.java?ref=4c1c20308d8b8b73aa06a43957e82ce798ba4bb8", "patch": "@@ -44,44 +44,46 @@ public void setExecutorFactory(ExecutorFactoryImpl factory) {\n     public void updated(Dictionary properties) throws ConfigurationException {\n         ExecutorConfig defaultConfig = new ExecutorConfig();\n         Map<String, ExecutorConfig> configs = new HashMap<String, ExecutorConfig>();\n-        for (Enumeration e = properties.keys(); e.hasMoreElements();) {\n-            String key = (String) e.nextElement();\n-            if (key.endsWith(\".corePoolSize\")) {\n-                getConfig(configs, key).setCorePoolSize(getInt(properties, key));\n-            } else if (key.endsWith(\".maximumPoolSize\")) {\n-                getConfig(configs, key).setMaximumPoolSize(getInt(properties, key));\n-            } else if (key.endsWith(\".keepAliveTime\")) {\n-                getConfig(configs, key).setKeepAliveTime(getLong(properties, key));\n-            } else if (key.endsWith(\".threadDaemon\")) {\n-                getConfig(configs, key).setThreadDaemon(getBool(properties, key));\n-            } else if (key.endsWith(\".threadPriority\")) {\n-                getConfig(configs, key).setThreadPriority(getInt(properties, key));\n-            } else if (key.endsWith(\".queueSize\")) {\n-                getConfig(configs, key).setQueueSize(getInt(properties, key));\n-            } else if (key.endsWith(\".shutdownDelay\")) {\n-                getConfig(configs, key).setShutdownDelay(getLong(properties, key));\n-            } else if (key.endsWith(\".allowCoreThreadsTimeout\")) {\n-                getConfig(configs, key).setAllowCoreThreadsTimeout(getBool(properties, key));\n-            } else if (key.endsWith(\".bypassIfSynchronous\")) {\n-                getConfig(configs, key).setBypassIfSynchronous(getBool(properties, key));\n-            } else if (key.equals(\"corePoolSize\")) {\n-                defaultConfig.setCorePoolSize(getInt(properties, key));\n-            } else if (key.equals(\"maximumPoolSize\")) {\n-                defaultConfig.setMaximumPoolSize(getInt(properties, key));\n-            } else if (key.equals(\"keepAliveTime\")) {\n-                defaultConfig.setKeepAliveTime(getLong(properties, key));\n-            } else if (key.equals(\"threadDaemon\")) {\n-                defaultConfig.setThreadDaemon(getBool(properties, key));\n-            } else if (key.equals(\"threadPriority\")) {\n-                defaultConfig.setThreadPriority(getInt(properties, key));\n-            } else if (key.equals(\"queueSize\")) {\n-                defaultConfig.setQueueSize(getInt(properties, key));\n-            } else if (key.equals(\"shutdownDelay\")) {\n-                defaultConfig.setShutdownDelay(getLong(properties, key));\n-            } else if (key.equals(\"allowCoreThreadsTimeout\")) {\n-                defaultConfig.setAllowCoreThreadsTimeout(getBool(properties, key));\n-            } else if (key.equals(\"bypassIfSynchronous\")) {\n-                defaultConfig.setBypassIfSynchronous(getBool(properties, key));\n+        if (properties != null) {\n+            for (Enumeration e = properties.keys(); e.hasMoreElements();) {\n+                String key = (String) e.nextElement();\n+                if (key.endsWith(\".corePoolSize\")) {\n+                    getConfig(configs, key).setCorePoolSize(getInt(properties, key));\n+                } else if (key.endsWith(\".maximumPoolSize\")) {\n+                    getConfig(configs, key).setMaximumPoolSize(getInt(properties, key));\n+                } else if (key.endsWith(\".keepAliveTime\")) {\n+                    getConfig(configs, key).setKeepAliveTime(getLong(properties, key));\n+                } else if (key.endsWith(\".threadDaemon\")) {\n+                    getConfig(configs, key).setThreadDaemon(getBool(properties, key));\n+                } else if (key.endsWith(\".threadPriority\")) {\n+                    getConfig(configs, key).setThreadPriority(getInt(properties, key));\n+                } else if (key.endsWith(\".queueSize\")) {\n+                    getConfig(configs, key).setQueueSize(getInt(properties, key));\n+                } else if (key.endsWith(\".shutdownDelay\")) {\n+                    getConfig(configs, key).setShutdownDelay(getLong(properties, key));\n+                } else if (key.endsWith(\".allowCoreThreadsTimeout\")) {\n+                    getConfig(configs, key).setAllowCoreThreadsTimeout(getBool(properties, key));\n+                } else if (key.endsWith(\".bypassIfSynchronous\")) {\n+                    getConfig(configs, key).setBypassIfSynchronous(getBool(properties, key));\n+                } else if (key.equals(\"corePoolSize\")) {\n+                    defaultConfig.setCorePoolSize(getInt(properties, key));\n+                } else if (key.equals(\"maximumPoolSize\")) {\n+                    defaultConfig.setMaximumPoolSize(getInt(properties, key));\n+                } else if (key.equals(\"keepAliveTime\")) {\n+                    defaultConfig.setKeepAliveTime(getLong(properties, key));\n+                } else if (key.equals(\"threadDaemon\")) {\n+                    defaultConfig.setThreadDaemon(getBool(properties, key));\n+                } else if (key.equals(\"threadPriority\")) {\n+                    defaultConfig.setThreadPriority(getInt(properties, key));\n+                } else if (key.equals(\"queueSize\")) {\n+                    defaultConfig.setQueueSize(getInt(properties, key));\n+                } else if (key.equals(\"shutdownDelay\")) {\n+                    defaultConfig.setShutdownDelay(getLong(properties, key));\n+                } else if (key.equals(\"allowCoreThreadsTimeout\")) {\n+                    defaultConfig.setAllowCoreThreadsTimeout(getBool(properties, key));\n+                } else if (key.equals(\"bypassIfSynchronous\")) {\n+                    defaultConfig.setBypassIfSynchronous(getBool(properties, key));\n+                }\n             }\n         }\n         executorFactory.setDefaultConfig(defaultConfig);", "filename": "nmr/osgi/src/main/java/org/apache/servicemix/nmr/osgi/ExecutorConfigurator.java"}, {"additions": 40, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/4c1c20308d8b8b73aa06a43957e82ce798ba4bb8/nmr/osgi/src/test/java/org/apache/servicemix/nmr/osgi/ExecutorConfiguratorTest.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/4c1c20308d8b8b73aa06a43957e82ce798ba4bb8/nmr/osgi/src/test/java/org/apache/servicemix/nmr/osgi/ExecutorConfiguratorTest.java", "sha": "fd8655efef8a92513103e0248002c405a5892513", "changes": 40, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/nmr/osgi/src/test/java/org/apache/servicemix/nmr/osgi/ExecutorConfiguratorTest.java?ref=4c1c20308d8b8b73aa06a43957e82ce798ba4bb8", "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicemix.nmr.osgi;\n+\n+import junit.framework.TestCase;\n+import org.apache.servicemix.executors.impl.ExecutorFactoryImpl;\n+import org.osgi.service.cm.ConfigurationException;\n+\n+/**\n+ * Test cases for {@link org.apache.servicemix.nmr.osgi.ExecutorConfigurator#updated(java.util.Dictionary)}\n+ */\n+public class ExecutorConfiguratorTest extends TestCase {\n+\n+    public void testUpdatedWithNullDictionary() {\n+        ExecutorConfigurator configurator = new ExecutorConfigurator();\n+        configurator.setExecutorFactory(new ExecutorFactoryImpl());\n+        \n+        try {\n+            configurator.updated(null);\n+            // this is OK\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            fail(\"Should not throw exception: \" + e);\n+        }\n+    }    \n+}", "filename": "nmr/osgi/src/test/java/org/apache/servicemix/nmr/osgi/ExecutorConfiguratorTest.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/d4f088a31feb3696f84873d4950dd9fbccdd06e0", "parent": "https://github.com/apache/servicemix4-nmr/commit/6bf61c380acd05929ed855b70dcd8999ca4fe3e8", "message": "[SMX4NMR-157] add null check to avoid NPE when shutdown SA\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@818734 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_11", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/d4f088a31feb3696f84873d4950dd9fbccdd06e0/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/d4f088a31feb3696f84873d4950dd9fbccdd06e0/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java", "sha": "bbb52cba237181b94cbdc21bdda2014c8d0b8cf1", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java?ref=d4f088a31feb3696f84873d4950dd9fbccdd06e0", "patch": "@@ -119,10 +119,13 @@ public void stop(boolean force) throws Exception {\n                 assembly.shutDown(false, force);\n             }\n         }\n+        \n         if (deployedAssembly == null) {\n-            for (ServiceUnitImpl su : assembly.getServiceUnitsList()) {\n-                su.getComponentImpl().removeServiceUnit(su);\n-            }\n+        \tif (assembly != null) {\n+        \t\tfor (ServiceUnitImpl su : assembly.getServiceUnitsList()) {\n+        \t\t\tsu.getComponentImpl().removeServiceUnit(su);\n+        \t\t}\n+        \t}\n         } else {\n             deployedAssembly.undeploy(bundle.getState() == Bundle.ACTIVE);\n         }", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/2c82c8bf75d06e808d1677ffab97de982ba0c4d7", "parent": "https://github.com/apache/servicemix4-nmr/commit/c2e4f678a5495fa9734376cbc7ac27dd39e1758c", "message": "SMX4NMR-136: Avoid NPE in AssemblyReferencesListener when sending from Endpoint with unknown SA\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@781836 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_12", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/2c82c8bf75d06e808d1677ffab97de982ba0c4d7/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListener.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/2c82c8bf75d06e808d1677ffab97de982ba0c4d7/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListener.java", "sha": "ebf86a92caf6ffecb25957a4c7133c0706ca618a", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListener.java?ref=2c82c8bf75d06e808d1677ffab97de982ba0c4d7", "patch": "@@ -107,7 +107,9 @@ private boolean isSync(Exchange exchange) {\n \n     private void pending(InternalExchange exchange) {\n         ServiceAssembly assembly = endpoints.get(exchange.getSource());\n-        pending.put(exchange, assembly);\n+        if (assembly != null) {\n+          pending.put(exchange, assembly);\n+        }\n     }\n \n     public void exchangeDelivered(Exchange exchange) {", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListener.java"}, {"additions": 14, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/2c82c8bf75d06e808d1677ffab97de982ba0c4d7/jbi/deployer/src/test/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListenerTest.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/2c82c8bf75d06e808d1677ffab97de982ba0c4d7/jbi/deployer/src/test/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListenerTest.java", "sha": "9f4dcbdfc9f2fdcadf3955583f03b135de5b5233", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/test/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListenerTest.java?ref=2c82c8bf75d06e808d1677ffab97de982ba0c4d7", "patch": "@@ -115,6 +115,20 @@ public void testCancelPendingExchanges() throws Exception {\n         assertEquals(Status.Error, exchange.getStatus());\n     }\n \n+    public void testNoExceptionsOnUnknownExchange() throws Exception {\n+        AssemblyReferencesListener listener = new AssemblyReferencesListener();\n+        InternalEndpoint endpoint = new InternalEndpointWrapper(new EndpointImpl(ServiceHelper.createMap(Endpoint.ENDPOINT_NAME, \"endpoint\")),\n+                                                                ServiceHelper.createMap(Endpoint.ENDPOINT_NAME, \"internal-endpoint\"));\n+        \n+        InternalExchange exchange = new ExchangeImpl(Pattern.InOnly);\n+        exchange.setSource(endpoint);\n+        exchange.setProperty(DeliveryChannelImpl.SEND_SYNC, Boolean.TRUE);\n+        exchange.getConsumerLock(true);\n+        \n+        // this should not throw an exception\n+        listener.exchangeSent(exchange);\n+    }\n+\n     private ServiceAssemblyImpl createServiceAssembly() {\n         ServiceAssemblyDesc descriptor = DescriptorFactory.buildDescriptor(DescriptorFactory.class.getResource(\"serviceAssembly.xml\")).getServiceAssembly();\n         final Preferences prefs = createMock(Preferences.class);", "filename": "jbi/deployer/src/test/java/org/apache/servicemix/jbi/deployer/artifacts/AssemblyReferencesListenerTest.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/ac741931477271aa012a4b09bf534c1e718ddb9c", "parent": "https://github.com/apache/servicemix4-nmr/commit/f452266ad56e6971967ab02e1aa03de7e042ea4a", "message": "Fix possible NPE and catch all errors on SU deployment\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@752411 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_13", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/ac741931477271aa012a4b09bf534c1e718ddb9c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/ac741931477271aa012a4b09bf534c1e718ddb9c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java", "sha": "71454cefec95a4857346483db15874a66f1dd39e", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java?ref=ac741931477271aa012a4b09bf534c1e718ddb9c", "patch": "@@ -108,8 +108,10 @@ public void uninstall(boolean force) throws Exception {\n             throw ManagementSupport.failure(\"undeployServiceAssembly\", \"ServiceAssembly '\" + getName() + \"' is not deployed.\");\n         }\n         // Undeploy SUs\n-        for (ServiceUnitImpl su : assembly.getServiceUnitsList()) {\n-            su.undeploy();\n+        if (assembly.getServiceUnitsList() != null) {\n+            for (ServiceUnitImpl su : assembly.getServiceUnitsList()) {\n+                su.undeploy();\n+            }\n         }\n         // Unregister assembly\n         deployer.unregisterServiceAssembly(assembly);\n@@ -172,9 +174,9 @@ public void uninstall(boolean force) throws Exception {\n                 }\n                 // Add it to the list\n                 sus.add(su);\n-            } catch (Exception e) {\n+            } catch (Throwable e) {\n                 LOGGER.error(\"Error deploying SU \" + su.getName(), e);\n-                failure = e;\n+                failure = new Exception(\"Error deploying SU \" + su.getName(), e);\n                 break;\n             }\n         }", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ServiceAssemblyInstaller.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/5d1be95fa994aebe2ab93fba6c747aa11b061d08", "parent": "https://github.com/apache/servicemix4-nmr/commit/502c1c5fa10f2480995dbc04d0df23a5489d3c0b", "message": "Avoid NPE when component doesn't have Bootstrap class defined\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@749317 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_14", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/5d1be95fa994aebe2ab93fba6c747aa11b061d08/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ComponentInstaller.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/5d1be95fa994aebe2ab93fba6c747aa11b061d08/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ComponentInstaller.java", "sha": "6b6ed6b1caeef8067d73be5c4e946487f7d065cf", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ComponentInstaller.java?ref=5d1be95fa994aebe2ab93fba6c747aa11b061d08", "patch": "@@ -128,7 +128,9 @@ public ObjectName install() throws JBIException {\n                     throw new DeploymentException(\"Component is already installed\");\n                 }\n                 initBootstrap();\n-                bootstrap.onInstall();\n+                if (bootstrap != null) {\n+                    bootstrap.onInstall();\n+                }\n                 try {\n                     ObjectName name = initComponent();\n                     cleanUpBootstrap();", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/ComponentInstaller.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/15b439cee09a01685342f5ba0c992fcb43cb26cc", "parent": "https://github.com/apache/servicemix4-nmr/commit/98280a89032b6070c00e7df64e3e393af687391f", "message": "SMX4NMR-47: A full stack trace is displayed when NPE occurs in the ManagementEndpointRegistry when endpoints are not registered\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@694638 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_15", "file": [{"additions": 10, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/15b439cee09a01685342f5ba0c992fcb43cb26cc/nmr/management/src/main/java/org/apache/servicemix/nmr/management/ManagementEndpointRegistry.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/15b439cee09a01685342f5ba0c992fcb43cb26cc/nmr/management/src/main/java/org/apache/servicemix/nmr/management/ManagementEndpointRegistry.java", "sha": "c2c50293fa033fe98594959f69d47f39c171a06b", "changes": 12, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/nmr/management/src/main/java/org/apache/servicemix/nmr/management/ManagementEndpointRegistry.java?ref=15b439cee09a01685342f5ba0c992fcb43cb26cc", "patch": "@@ -94,7 +94,11 @@ public void exchangeSent(Exchange exchange) {\n                 String id = ((InternalExchange) exchange).getSource().getId();\n                 LOG.info(\"Source endpoint: \" + id + \" (known endpoints: \" + endpoints + \")\");\n                 ManagedEndpoint me = endpoints.get(id);\n-                me.incrementOutbound();\n+                if (me == null) {\n+                    LOG.warn(\"No managed endpoint registered with id: \" + id);\n+                } else {\n+                    me.incrementOutbound();\n+                }\n             }\n         } catch (Throwable t) {\n             LOG.warn(\"Caught exception while processing exchange: \" + t, t);\n@@ -112,7 +116,11 @@ public void exchangeDelivered(Exchange exchange) {\n                 String id = ((InternalExchange) exchange).getDestination().getId();\n                 LOG.info(\"Dest endpoint: \" + id + \" (known endpoints: \" + endpoints + \")\");\n                 ManagedEndpoint me = endpoints.get(id);\n-                me.incrementInbound();\n+                if (me == null) {\n+                    LOG.warn(\"No managed endpoint registered with id: \" + id);\n+                } else {\n+                    me.incrementInbound();\n+                }\n             }\n         } catch (Throwable t) {\n             LOG.warn(\"Caught exception while processing exchange: \" + t, t);", "filename": "nmr/management/src/main/java/org/apache/servicemix/nmr/management/ManagementEndpointRegistry.java"}], "repo": "servicemix4-nmr"}, {"commit": "https://github.com/apache/servicemix4-nmr/commit/660254f828a25e94bb7ba85106fb63fc88d2921c", "parent": "https://github.com/apache/servicemix4-nmr/commit/9150d1018dc2acf125d2992108f52c4d5e65244f", "message": "Fix possible NPE and fix classloader problems (default to self-first instead of parent-first)\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/nmr/trunk@631412 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix4-nmr_16", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/660254f828a25e94bb7ba85106fb63fc88d2921c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/descriptor/ComponentDesc.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/660254f828a25e94bb7ba85106fb63fc88d2921c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/descriptor/ComponentDesc.java", "sha": "52ee5033d43ef0775027544421ea7d9b95a23552", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/descriptor/ComponentDesc.java?ref=660254f828a25e94bb7ba85106fb63fc88d2921c", "patch": "@@ -152,7 +152,7 @@ public void setDescriptorExtension(InstallationDescriptorExtension descriptorExt\n     // Implementation methods\n     //-------------------------------------------------------------------------\n     protected boolean isParentFirst(String text) {\n-        return text != null && text.equalsIgnoreCase(\"parent-first\");\n+        return text == null || text.equalsIgnoreCase(\"parent-first\");\n     }\n \n     protected boolean isSelfFirst(String text) {", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/descriptor/ComponentDesc.java"}, {"additions": 2, "raw_url": "https://github.com/apache/servicemix4-nmr/raw/660254f828a25e94bb7ba85106fb63fc88d2921c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java", "blob_url": "https://github.com/apache/servicemix4-nmr/blob/660254f828a25e94bb7ba85106fb63fc88d2921c/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java", "sha": "2726077c5a89e3f4c638ad09440eba214b0d4eda", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix4-nmr/contents/jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java?ref=660254f828a25e94bb7ba85106fb63fc88d2921c", "patch": "@@ -211,7 +211,8 @@ protected void installComponent(ComponentDesc componentDesc, Bundle bundle) thro\n     }\n \n     private void extractBundle(File installRoot, Bundle bundle, String path) throws IOException {\n-        for (Enumeration e = bundle.getEntryPaths(path); e.hasMoreElements(); ) {\n+        Enumeration e = bundle.getEntryPaths(path);\n+        while (e != null && e.hasMoreElements()) {\n             String entry = (String) e.nextElement();\n             File fout = new File(installRoot, entry);\n             if (entry.endsWith(\"/\")) {", "filename": "jbi/deployer/src/main/java/org/apache/servicemix/jbi/deployer/impl/Deployer.java"}], "repo": "servicemix4-nmr"}]
