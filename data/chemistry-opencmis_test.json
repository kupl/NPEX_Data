{
    "chemistry-opencmis_3f83e97": {
        "bug_id": "chemistry-opencmis_3f83e97",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/3f83e97ac546475a1bbadfdbbbd647b03a537834",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/3f83e97ac546475a1bbadfdbbbd647b03a537834/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/shared/ThresholdOutputStream.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/shared/ThresholdOutputStream.java?ref=3f83e97ac546475a1bbadfdbbbd647b03a537834",
                "deletions": 1,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/shared/ThresholdOutputStream.java",
                "patch": "@@ -661,7 +661,8 @@ public int available() throws IOException {\n \n         @Override\n         public boolean markSupported() {\n-            return stream.markSupported();\n+            // always supported for a BufferedInputStream\n+            return true;\n         }\n \n         @Override",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/3f83e97ac546475a1bbadfdbbbd647b03a537834/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/shared/ThresholdOutputStream.java",
                "sha": "d63adceaff0e29f8b8a8a1b6b80ecafd566f9cd9",
                "status": "modified"
            }
        ],
        "message": "avoid unnecessary NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/chemistry/opencmis/trunk@1693550 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/7cd6117f8ca12b68ac76ba700321934f9725110b",
        "patched_files": [
            "ThresholdOutputStream.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "ThresholdOutputStreamTest.java"
        ]
    },
    "chemistry-opencmis_5540f52": {
        "bug_id": "chemistry-opencmis_5540f52",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/5540f52d1842608fd15b59e22ff00c796de3a395",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/5540f52d1842608fd15b59e22ff00c796de3a395/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/query/InMemoryQueryProcessor.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/query/InMemoryQueryProcessor.java?ref=5540f52d1842608fd15b59e22ff00c796de3a395",
                "deletions": 2,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/query/InMemoryQueryProcessor.java",
                "patch": "@@ -183,8 +183,11 @@ public int compare(StoredObject so1, StoredObject so2) {\n \n                 if (sel instanceof ColumnReference) {\n                     String propId = ((ColumnReference) sel).getPropertyId();\n-                    Object propVal1 = so1.getProperties().get(propId).getFirstValue();\n-                    Object propVal2 = so2.getProperties().get(propId).getFirstValue();\n+                    PropertyDefinition<?> pd = ((ColumnReference) sel).getPropertyDefinition();\n+                    \n+                    Object propVal1 = PropertyUtil.getProperty(so1, propId, pd);\n+                    Object propVal2 = PropertyUtil.getProperty(so2, propId, pd);\n+\n                     if (propVal1 == null && propVal2 == null) {\n                         result = 0;\n                     } else if (propVal1 == null) {",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/5540f52d1842608fd15b59e22ff00c796de3a395/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/query/InMemoryQueryProcessor.java",
                "sha": "d56aa3160c62c8c3fdbb2c1eea6c780db059f6ab",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/5540f52d1842608fd15b59e22ff00c796de3a395/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/query/EvalQueryTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/query/EvalQueryTest.java?ref=5540f52d1842608fd15b59e22ff00c796de3a395",
                "deletions": 1,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/query/EvalQueryTest.java",
                "patch": "@@ -473,7 +473,19 @@ public void testOrderByBool() {\n         assertTrue(resultContainsAtPos(\"alpha\", 2, res) || resultContainsAtPos(\"alpha\", 1, res) || resultContainsAtPos(\"alpha\", 0, res));\n         assertTrue(resultContainsAtPos(\"gamma\", 2, res) || resultContainsAtPos(\"gamma\", 1, res) || resultContainsAtPos(\"gamma\", 0, res));\n         assertTrue(resultContainsAtPos(\"delta\", 2, res) || resultContainsAtPos(\"delta\", 1, res) || resultContainsAtPos(\"delta\", 0, res));\n-}\n+    }\n+    \n+    // reported JIRA issue CMIS-510\n+    @Test\n+    public void testOrderBySystemProperties() {\n+        String statement = \"SELECT * from cmis:document ORDER BY \"+ PropertyIds.NAME;\n+        ObjectList res = doQuery(statement);\n+        assertEquals(5, res.getObjects().size());\n+        statement = \"SELECT * from cmis:document ORDER BY \" + PropertyIds.CREATION_DATE + \" ASC\";\n+        assertEquals(5, res.getObjects().size());\n+        statement = \"SELECT * from cmis:document ORDER BY \" + PropertyIds.LAST_MODIFICATION_DATE + \" DESC\";\n+        assertEquals(5, res.getObjects().size());\n+    }\n \n     @Test\n     public void testIsNull() {",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/5540f52d1842608fd15b59e22ff00c796de3a395/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/query/EvalQueryTest.java",
                "sha": "8c97ee3bbfe7724d32cfb850ef8c4addde6b96e4",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in order by on a system property for query [CMIS-510]\n\ngit-svn-id: https://svn.apache.org/repos/asf/chemistry/opencmis/trunk@1294498 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/5575fa710a08db06eda105a23d3da15d065cdd59",
        "patched_files": [
            "InMemoryQueryProcessor.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "EvalQueryTest.java"
        ]
    },
    "chemistry-opencmis_b9ca0f7": {
        "bug_id": "chemistry-opencmis_b9ca0f7",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/b9ca0f7af6bbdb5dc0a3998b93db4c90a320f72c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/b9ca0f7af6bbdb5dc0a3998b93db4c90a320f72c/chemistry-opencmis-commons/chemistry-opencmis-commons-impl/src/main/java/org/apache/chemistry/opencmis/commons/impl/Converter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-commons/chemistry-opencmis-commons-impl/src/main/java/org/apache/chemistry/opencmis/commons/impl/Converter.java?ref=b9ca0f7af6bbdb5dc0a3998b93db4c90a320f72c",
                "deletions": 0,
                "filename": "chemistry-opencmis-commons/chemistry-opencmis-commons-impl/src/main/java/org/apache/chemistry/opencmis/commons/impl/Converter.java",
                "patch": "@@ -2268,6 +2268,9 @@ public static CmisObjectInFolderContainerType convert(ObjectInFolderContainer co\n      * Converts an access control list object.\n      */\n     public static Acl convert(CmisACLType acl) {\n+        if (acl == null)\n+            return null;\n+        \n         Acl result = convert(acl.getACL(), acl.isExact());\n \n         // handle extensions",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/b9ca0f7af6bbdb5dc0a3998b93db4c90a320f72c/chemistry-opencmis-commons/chemistry-opencmis-commons-impl/src/main/java/org/apache/chemistry/opencmis/commons/impl/Converter.java",
                "sha": "aa293d77f3c5f2d452c6f2f520f2252cf41cc42f",
                "status": "modified"
            }
        ],
        "message": "small fix: prevent NPE in converter if ACL is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/chemistry/opencmis/trunk@1073115 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/3e3e88b0b06084019335fe490d65b64307de4f8b",
        "patched_files": [
            "Converter.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "ConverterTest.java"
        ]
    },
    "chemistry-opencmis_cd5d961": {
        "bug_id": "chemistry-opencmis_cd5d961",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/cd5d9619b63f27d50069c7f697b4962e8f729dff",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/cd5d9619b63f27d50069c7f697b4962e8f729dff/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/FilterParser.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/FilterParser.java?ref=cd5d9619b63f27d50069c7f697b4962e8f729dff",
                "deletions": 0,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/FilterParser.java",
                "patch": "@@ -22,10 +22,13 @@\n  * @author Jens\n  */\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n \n+import org.apache.chemistry.opencmis.commons.PropertyIds;\n+\n public class FilterParser {\n \n     public static boolean isContainedInFilter(String propertyId, List<String> requestedIds) {\n@@ -41,6 +44,13 @@ public static boolean isContainedInFilter(String propertyId, List<String> reques\n             List<String> requestedIds = Arrays.asList(filter.split(\",\\\\s*\")); // comma\n             // plus\n             // whitespace\n+            \n+            // add object id because this is always needed in AtomPub binding:\n+            if (!(requestedIds.contains(PropertyIds.OBJECT_ID))) {\n+                requestedIds = new ArrayList<String>(requestedIds); // copy immutable list\n+                requestedIds.add(PropertyIds.OBJECT_ID);\n+            }\n+            \n             if (requestedIds.contains(\"*\"))\n                 requestedIds = Collections.singletonList(\"*\");\n             return requestedIds;",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/cd5d9619b63f27d50069c7f697b4962e8f729dff/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/FilterParser.java",
                "sha": "b7cf6bbfa1e1d118648cac19700f34b278bff941",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/cd5d9619b63f27d50069c7f697b4962e8f729dff/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/ObjectServiceTest.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/ObjectServiceTest.java?ref=cd5d9619b63f27d50069c7f697b4962e8f729dff",
                "deletions": 6,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/ObjectServiceTest.java",
                "patch": "@@ -842,6 +842,23 @@ public void testDefaultPropertiesFolder() {\n         log.info(\"... testDefaultPropertiesFolder() finished.\");\n     }\n \n+    @Test\n+    public void testGetObjectNoObjectIdInFilter() {\n+        log.info(\"starting testGetObjectNoObjectIdInFilter() ...\");\n+        log.info(\"  creating object\");\n+        String id = createDocument(fRootFolderId, false);\n+        if (id != null)\n+            log.info(\"  createDocument succeeded with created id: \" + id);\n+\n+        log.info(\"  getting object\");\n+        String filter = PropertyIds.NAME + \",\" + PropertyIds.CREATION_DATE + \",\" + PropertyIds.LAST_MODIFICATION_DATE;\n+        ObjectData res = fObjSvc.getObject(fRepositoryId, id, filter, false, IncludeRelationships.NONE, null, false, false, null);\n+\n+        String returnedId = res.getId();\n+        assertEquals(id, returnedId);\n+        log.info(\"... testGetObjectNoObjectIdInFilter() finished.\");\n+    }\n+\n     private void verifyAllowableActionsDocument(Set<Action> actions, boolean isVersioned, boolean hasContent) {\n         assertTrue(actions.contains(Action.CAN_DELETE_OBJECT));\n         assertTrue(actions.contains(Action.CAN_UPDATE_PROPERTIES));\n@@ -979,11 +996,15 @@ private void testReturnedProperties(String objectId, String objectName, String t\n             Map<String, PropertyData<?>> props) {\n         super.testReturnedProperties(objectId, props);\n \n-        PropertyData<?> pd = props.get(PropertyIds.NAME);\n-        assertNotNull(pd);\n-        assertEquals(objectName, pd.getFirstValue());\n-        pd = props.get(PropertyIds.OBJECT_TYPE_ID);\n-        assertEquals(typeId, pd.getFirstValue());\n+        if (null != objectName) {\n+            PropertyData<?> pd = props.get(PropertyIds.NAME);\n+            assertNotNull(pd);\n+            assertEquals(objectName, pd.getFirstValue());\n+        }\n+        if (null != typeId) {\n+            PropertyData<?> pd = props.get(PropertyIds.OBJECT_TYPE_ID);\n+            assertEquals(typeId, pd.getFirstValue());\n+        }\n     }\n \n     private String createDocumentWithCustomType(String folderId, boolean withContent) {\n@@ -1198,5 +1219,5 @@ private static InMemoryFolderTypeDefinition createFolderTypeWithDefault() {\n             return cmisFolderType;\n         }\n     }\n-\n+    \n }",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/cd5d9619b63f27d50069c7f697b4962e8f729dff/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/ObjectServiceTest.java",
                "sha": "aee534d44bfc2fe57a1157d7acf527297aff58bb",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in InMemoryRepository if no objectId is in property filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/chemistry/opencmis/trunk@1035689 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/b94eac82b138de4c8336127c862d91d373e23d6b",
        "patched_files": [
            "ObjectService.java",
            "FilterParser.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "ObjectServiceTest.java"
        ]
    },
    "chemistry-opencmis_cebe459": {
        "bug_id": "chemistry-opencmis_cebe459",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/cebe459f5d25d5d48de6a56cadc319d294c122d1",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/cebe459f5d25d5d48de6a56cadc319d294c122d1/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/impl/browser/ObjectService.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/impl/browser/ObjectService.java?ref=cebe459f5d25d5d48de6a56cadc319d294c122d1",
                "deletions": 1,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/impl/browser/ObjectService.java",
                "patch": "@@ -492,7 +492,7 @@ public void serve(CallContext context, CmisService service, String repositoryId,\n             for (int i = 0; i < n; i++) {\n                 String id = objectIds.get(i);\n                 String changeToken = (changeTokens != null && changeTokens.size() > i ? changeTokens.get(i) : null);\n-                if (changeToken.length() == 0) {\n+                if (changeToken != null && changeToken.length() == 0) {\n                     changeToken = null;\n                 }\n                 objectIdAndChangeToken.add(new BulkUpdateObjectIdAndChangeTokenImpl(id, changeToken));",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/cebe459f5d25d5d48de6a56cadc319d294c122d1/chemistry-opencmis-server/chemistry-opencmis-server-bindings/src/main/java/org/apache/chemistry/opencmis/server/impl/browser/ObjectService.java",
                "sha": "2fba24daea7b36a78639eed24fe554e36f6326db",
                "status": "modified"
            }
        ],
        "message": "CMIS-958: Server: fix possible NPE in browser binding\n\ngit-svn-id: https://svn.apache.org/repos/asf/chemistry/opencmis/trunk@1715161 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/76da412c16a0294635d38a4ee8f17d432724dfed",
        "patched_files": [
            "ObjectService.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "ObjectServiceTest.java"
        ]
    },
    "chemistry-opencmis_f2fcdf0": {
        "bug_id": "chemistry-opencmis_f2fcdf0",
        "commit": "https://github.com/apache/chemistry-opencmis/commit/f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/storedobj/impl/InMemoryServiceValidatorImpl.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/storedobj/impl/InMemoryServiceValidatorImpl.java?ref=f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89",
                "deletions": 1,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/storedobj/impl/InMemoryServiceValidatorImpl.java",
                "patch": "@@ -211,7 +211,8 @@ public StoredObject createDocument(CallContext context, String repositoryId, Str\n             ExtensionsData extension) {\r\n \r\n         StoredObject folder = super.createDocument(context, repositoryId, folderId, extension);\r\n-        checkWriteAccess(repositoryId, context.getUsername(), folder);\r\n+        if (null != folder) // not if unfiled\r\n+            checkWriteAccess(repositoryId, context.getUsername(), folder);\r\n         return folder;\r\n     }\r\n \r",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/main/java/org/apache/chemistry/opencmis/inmemory/storedobj/impl/InMemoryServiceValidatorImpl.java",
                "sha": "7133fe51d1b900333079e2226871102b453ce2f5",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/chemistry-opencmis/blob/f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/MultiFilingTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/chemistry-opencmis/contents/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/MultiFilingTest.java?ref=f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89",
                "deletions": 0,
                "filename": "chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/MultiFilingTest.java",
                "patch": "@@ -38,6 +38,7 @@\n import org.apache.chemistry.opencmis.commons.enums.VersioningState;\n import org.apache.chemistry.opencmis.commons.exceptions.CmisNameConstraintViolationException;\n import org.apache.chemistry.opencmis.commons.exceptions.CmisNotSupportedException;\n+import org.apache.chemistry.opencmis.commons.server.CallContext;\n import org.apache.chemistry.opencmis.commons.spi.Holder;\n import org.apache.chemistry.opencmis.inmemory.types.InMemoryFolderTypeDefinition;\n import org.apache.commons.logging.Log;\n@@ -83,6 +84,12 @@ public void testCreateUnfiledDocument() {\n \n         assertNotNull(res);\n         assertEquals(res.size(), 0);\n+        \n+        // test with a different user than Admin:\n+        switchCallContext(\"Alice\");\n+        docId = createDocument(UNFILED_DOC_NAME + \"_2\", null, DOCUMENT_TYPE_ID, true);\n+        docId2 = getDocument(docId);\n+        assertEquals(docId, docId2);\n \n         LOG.debug(\"End testCreatUnfiledDocument()\");\n     }\n@@ -285,4 +292,9 @@ private String createVersionedDocument() {\n                 VersioningState.MAJOR, true);\n \n     }\n+\n+    private void switchCallContext(String user) {\n+        ((DummyCallContext) fTestCallContext).put(CallContext.USERNAME, user);\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/chemistry-opencmis/raw/f2fcdf03048114af7bfd9cd6ebdf74c3372ebb89/chemistry-opencmis-server/chemistry-opencmis-server-inmemory/src/test/java/org/apache/chemistry/opencmis/inmemory/MultiFilingTest.java",
                "sha": "1bbf99b97d82fd6022ac0d444bc4cbbae1add280",
                "status": "modified"
            }
        ],
        "message": "avoid NPE when creating unfiled documents as non-admin users, improve unit test [CMIS-490]\n\ngit-svn-id: https://svn.apache.org/repos/asf/chemistry/opencmis/trunk@1222640 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/chemistry-opencmis/commit/5b81d441d222d259a95648aa4bc8c7e1a6f81891",
        "patched_files": [
            "MultiFiling.java",
            "InMemoryServiceValidatorImpl.java"
        ],
        "repo": "chemistry-opencmis",
        "unit_tests": [
            "MultiFilingTest.java"
        ]
    }
}