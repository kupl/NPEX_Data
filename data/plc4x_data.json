[
    {
        "commit": "https://github.com/apache/plc4x/commit/06a7c5617f16c4c30983861aedfb6324aeb59501",
        "file": [
            {
                "patch": "@@ -619,8 +619,8 @@ else if ((readWriteVarParameter.getType() == ParameterType.READ_VAR) && isRespon\n                 payloadItems.add(payload);\n                 i += S7SizeHelper.getPayloadLength(payload);\n \n-                // It seems that one-byte payloads require a fill byte, but only if it's not the last item.\n-                if((length == 1) && (userData.readableBytes() > 0)) {\n+                // It seems that odd-byte payloads require a fill byte, but only if it's not the last item.\n+                if((length % 2== 1) && (userData.readableBytes() > 0)) {\n                     userData.readByte();\n                     i++;\n                 }",
                "additions": 2,
                "raw_url": "https://github.com/apache/plc4x/raw/06a7c5617f16c4c30983861aedfb6324aeb59501/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "b3b5a878f073d20827b90b79b74f2b8f4fa283ab",
                "blob_url": "https://github.com/apache/plc4x/blob/06a7c5617f16c4c30983861aedfb6324aeb59501/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "filename": "plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "contents_url": "https://api.github.com/repos/apache/plc4x/contents/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java?ref=06a7c5617f16c4c30983861aedfb6324aeb59501"
            }
        ],
        "bug_id": "plc4x_1",
        "parent": "https://github.com/apache/plc4x/commit/4cc87d5347aa67cb8569ea0f208daeb93326a546",
        "message": "- fixed NPE when reading odd-length array of one-byte base types",
        "repo": "plc4x"
    },
    {
        "commit": "https://github.com/apache/plc4x/commit/78f84b413db76959e4732d2eedb431389ce55bc5",
        "file": [
            {
                "patch": "@@ -28,6 +28,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.commons.lang3.reflect.FieldUtils;\n import org.apache.plc4x.java.api.exceptions.PlcProtocolException;\n import org.apache.plc4x.java.api.exceptions.PlcProtocolPayloadTooBigException;\n+import org.apache.plc4x.java.api.exceptions.PlcRuntimeException;\n import org.apache.plc4x.java.isotp.protocol.IsoTPProtocol;\n import org.apache.plc4x.java.isotp.protocol.events.IsoTPConnectedEvent;\n import org.apache.plc4x.java.isotp.protocol.model.IsoTPMessage;\n@@ -757,7 +758,11 @@ private CpuServicesParameter decodeCpuServicesParameter(ByteBuf in) {\n                 TransportSize dataType = TransportSize.valueOf(in.readByte());\n                 short length = in.readShort();\n                 short dbNumber = in.readShort();\n-                MemoryArea memoryArea = MemoryArea.valueOf(in.readByte());\n+                byte memoryAreaCode = in.readByte();\n+                MemoryArea memoryArea = MemoryArea.valueOf(memoryAreaCode);\n+                if(memoryArea == null) {\n+                    throw new PlcRuntimeException(\"Unknown memory area '\" + memoryAreaCode + \"'\");\n+                }\n                 short byteAddress = (short) (in.readShort() << 5);\n                 byte tmp = in.readByte();\n                 // Only the least 3 bits are the bit address, the",
                "additions": 6,
                "raw_url": "https://github.com/apache/plc4x/raw/78f84b413db76959e4732d2eedb431389ce55bc5/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "status": "modified",
                "changes": 7,
                "deletions": 1,
                "sha": "17214ca8afbdf907b0a1a6870aaec0747e10a06e",
                "blob_url": "https://github.com/apache/plc4x/blob/78f84b413db76959e4732d2eedb431389ce55bc5/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "filename": "plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java",
                "contents_url": "https://api.github.com/repos/apache/plc4x/contents/plc4j/protocols/s7/src/main/java/org/apache/plc4x/java/s7/netty/S7Protocol.java?ref=78f84b413db76959e4732d2eedb431389ce55bc5"
            }
        ],
        "bug_id": "plc4x_2",
        "parent": "https://github.com/apache/plc4x/commit/9410ae3246404efafbabd296c39ebd05b6323901",
        "message": "PLC4X-84 - NPE when reading Marker\n\n- Made the protocol throw an exception if an unknown memory area is referenced.",
        "repo": "plc4x"
    },
    {
        "commit": "https://github.com/apache/plc4x/commit/451c49d86cdbdbd6185f4508b7b465324fb8292a",
        "file": [
            {
                "patch": "@@ -70,13 +70,13 @@ public Builder(PlcSubscriber subscriber) {\n         public PlcUnsubscriptionRequest.Builder addHandle(PlcSubscriptionHandle plcSubscriptionHandle1, PlcSubscriptionHandle... plcSubscriptionHandles) {\n             this.plcSubscriptionHandles.add((InternalPlcSubscriptionHandle) plcSubscriptionHandle1);\n             this.plcSubscriptionHandles.addAll(Arrays.stream(plcSubscriptionHandles).map(InternalPlcSubscriptionHandle.class::cast).collect(Collectors.toList()));\n-            return null;\n+            return this;\n         }\n \n         @Override\n         public PlcUnsubscriptionRequest.Builder addHandles(Collection<PlcSubscriptionHandle> plcSubscriptionHandles) {\n             this.plcSubscriptionHandles.addAll(plcSubscriptionHandles.stream().map(InternalPlcSubscriptionHandle.class::cast).collect(Collectors.toList()));\n-            return null;\n+            return this;\n         }\n \n         @Override",
                "additions": 2,
                "raw_url": "https://github.com/apache/plc4x/raw/451c49d86cdbdbd6185f4508b7b465324fb8292a/plc4j/protocols/driver-bases/base/src/main/java/org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "6fe3cfb905fb905ada7458b94e345db26124b6c7",
                "blob_url": "https://github.com/apache/plc4x/blob/451c49d86cdbdbd6185f4508b7b465324fb8292a/plc4j/protocols/driver-bases/base/src/main/java/org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest.java",
                "filename": "plc4j/protocols/driver-bases/base/src/main/java/org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest.java",
                "contents_url": "https://api.github.com/repos/apache/plc4x/contents/plc4j/protocols/driver-bases/base/src/main/java/org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest.java?ref=451c49d86cdbdbd6185f4508b7b465324fb8292a"
            }
        ],
        "bug_id": "plc4x_3",
        "parent": "https://github.com/apache/plc4x/commit/514719c971214bd660440045cc900f0690f1a9e6",
        "message": "[GENERAL] fix npe on unsubscription",
        "repo": "plc4x"
    },
    {
        "commit": "https://github.com/apache/plc4x/commit/9fad0627e3901f36ba15f71d3561af40ab92b4eb",
        "file": [
            {
                "patch": "@@ -141,9 +141,10 @@ void tpduCode() {\n     void tpduCodeUnknown() {\n         TpduCode tpduCode = TpduCode.valueOf((byte)0x01);\n \n-        assertNull(tpduCode, \"expected tpdu code to be null\");\n+        assertTrue(TpduCode.valueOf((byte)0xFF) == TpduCode.TPDU_UNKNOWN, \"0xFF incorrectly mapped\");\n+        assertTrue(tpduCode.getCode() == (byte)0xFF, \"code is not 0xFF\");\n     }\n-\n+    \n     @Test\n     @Tag(\"fast\")\n     void typduSize() {",
                "additions": 3,
                "raw_url": "https://github.com/apache/plc4x/raw/9fad0627e3901f36ba15f71d3561af40ab92b4eb/plc4j/protocols/s7/src/test/java/org/apache/plc4x/java/isotp/netty/model/types/IsotpTypeTests.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "47acf5bbfe31692d051c5fb3070bfbd13c208d21",
                "blob_url": "https://github.com/apache/plc4x/blob/9fad0627e3901f36ba15f71d3561af40ab92b4eb/plc4j/protocols/s7/src/test/java/org/apache/plc4x/java/isotp/netty/model/types/IsotpTypeTests.java",
                "filename": "plc4j/protocols/s7/src/test/java/org/apache/plc4x/java/isotp/netty/model/types/IsotpTypeTests.java",
                "contents_url": "https://api.github.com/repos/apache/plc4x/contents/plc4j/protocols/s7/src/test/java/org/apache/plc4x/java/isotp/netty/model/types/IsotpTypeTests.java?ref=9fad0627e3901f36ba15f71d3561af40ab92b4eb"
            }
        ],
        "bug_id": "plc4x_4",
        "parent": "https://github.com/apache/plc4x/commit/eb07a1ba4a7ebc2e422cb52563000651cda42a8f",
        "message": "now UNKNOWN rather than null adn null can give rise to NPEs",
        "repo": "plc4x"
    },
    {
        "commit": "https://github.com/apache/plc4x/commit/f25941f8f3e9dacc7699f56f8e61f3681f7e78a5",
        "file": [
            {
                "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+\n+-->\n+<extensions xmlns=\"http://maven.apache.org/EXTENSIONS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+            xsi:schemaLocation=\"http://maven.apache.org/EXTENSIONS/1.0.0 http://maven.apache.org/xsd/core-extensions-1.0.0.xsd\">\n+  <!-- Currently causing a NPE when executing goals not bound to a specific maven lifecycle phase -->\n+  <!--extension>\n+    <groupId>com.soebes.maven.extensions</groupId>\n+    <artifactId>maven-buildtime-profiler</artifactId>\n+    <version>0.1.0</version>\n+  </extension-->\n+</extensions>\n\\ No newline at end of file",
                "additions": 28,
                "raw_url": "https://github.com/apache/plc4x/raw/f25941f8f3e9dacc7699f56f8e61f3681f7e78a5/.mvn/extensions.xml",
                "status": "added",
                "changes": 28,
                "deletions": 0,
                "sha": "acf6e3fd534afd09935dff9c84b75bc3e2ca986c",
                "blob_url": "https://github.com/apache/plc4x/blob/f25941f8f3e9dacc7699f56f8e61f3681f7e78a5/.mvn/extensions.xml",
                "filename": ".mvn/extensions.xml",
                "contents_url": "https://api.github.com/repos/apache/plc4x/contents/.mvn/extensions.xml?ref=f25941f8f3e9dacc7699f56f8e61f3681f7e78a5"
            }
        ],
        "bug_id": "plc4x_5",
        "parent": "https://github.com/apache/plc4x/commit/88e4e9211f8b4c129898ebf63c78bad074941a22",
        "message": "- Added a Maven extension for profiling the goal execution times (But disabled till a NPE issue is fixed: https://github.com/khmarbaise/maven-buildtime-profiler/issues/8)",
        "repo": "plc4x"
    }
]