[
    {
        "repo": "maven-artifact-transfer",
        "message": "[MSHARED-594] NullPointerException is thrown when trying to install a project without POM file\n\nAdding null-check for MavenProject.getFile(): it could be the case that there is no POM file for the project, when it only has attached artifacts and those should get installed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1763928 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-artifact-transfer/commit/ceb5c8d7c951bfac875a3d4acac3c4a6b126c133",
        "parent": "https://github.com/apache/maven-artifact-transfer/commit/d810ba887ac313dffe7534cd26217eab6b03f7f6",
        "bug_id": "maven-artifact-transfer_1",
        "file": [
            {
                "sha": "0a54803230de591df663a53781f231da6f1a5ca7",
                "filename": "src/main/java/org/apache/maven/shared/project/install/internal/DefaultProjectInstaller.java",
                "blob_url": "https://github.com/apache/maven-artifact-transfer/blob/ceb5c8d7c951bfac875a3d4acac3c4a6b126c133/src/main/java/org/apache/maven/shared/project/install/internal/DefaultProjectInstaller.java",
                "raw_url": "https://github.com/apache/maven-artifact-transfer/raw/ceb5c8d7c951bfac875a3d4acac3c4a6b126c133/src/main/java/org/apache/maven/shared/project/install/internal/DefaultProjectInstaller.java",
                "status": "modified",
                "changes": 17,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-artifact-transfer/contents/src/main/java/org/apache/maven/shared/project/install/internal/DefaultProjectInstaller.java?ref=ceb5c8d7c951bfac875a3d4acac3c4a6b126c133",
                "patch": "@@ -97,14 +97,21 @@ public void install( ProjectBuildingRequest buildingRequest, ProjectInstallerReq\n \n         if ( isPomArtifact )\n         {\n-            installer.install( buildingRequest, Collections.<Artifact>singletonList( new ProjectArtifact( project ) ) );\n-            installChecksums( buildingRequest, artifactRepository, artifact, createChecksum );\n-            addMetaDataFilesForArtifact( artifactRepository, artifact, metadataFiles, createChecksum );\n+            if ( pomFile != null )\n+            {\n+                installer.install( buildingRequest,\n+                                   Collections.<Artifact>singletonList( new ProjectArtifact( project ) ) );\n+                installChecksums( buildingRequest, artifactRepository, artifact, createChecksum );\n+                addMetaDataFilesForArtifact( artifactRepository, artifact, metadataFiles, createChecksum );\n+            }\n         }\n         else\n         {\n-            metadata = new ProjectArtifactMetadata( artifact, pomFile );\n-            artifact.addMetadata( metadata );\n+            if ( pomFile != null )\n+            {\n+                metadata = new ProjectArtifactMetadata( artifact, pomFile );\n+                artifact.addMetadata( metadata );\n+            }\n \n             File file = artifact.getFile();\n ",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "maven-artifact-transfer",
        "message": "Prevent NPE with dependencyManagement and dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/shared/trunk@1722498 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-artifact-transfer/commit/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f",
        "parent": "https://github.com/apache/maven-artifact-transfer/commit/bd608146f0ed6aa724efd65a9535595042784206",
        "bug_id": "maven-artifact-transfer_2",
        "file": [
            {
                "sha": "ba840ea8c078d84e5124cb7291d3191002d89a81",
                "filename": "src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java",
                "blob_url": "https://github.com/apache/maven-artifact-transfer/blob/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java",
                "raw_url": "https://github.com/apache/maven-artifact-transfer/raw/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-artifact-transfer/contents/src/main/java/org/apache/maven/shared/dependency/resolve/DependencyResolver.java?ref=b5cc4be6c616c6a1be37dd8cbb183fb6710e409f",
                "patch": "@@ -50,7 +50,7 @@\n \r\n     /**\r\n      * @param buildingRequest the project building request, never {@code null}\r\n-     * @param dependencies the dependencies to resolve, never {@code null}\r\n+     * @param dependencies the dependencies to resolve, can be {@code null}\r\n      * @param managedDependencies managed dependencies, can be {@code null}\r\n      * @param filter a filter, can be {@code null}\r\n      * @return the resolved dependencies.\r",
                "deletions": 1
            },
            {
                "sha": "8f3334a55b9c9cb151e5e71224903147f43dfdeb",
                "filename": "src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java",
                "blob_url": "https://github.com/apache/maven-artifact-transfer/blob/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java",
                "raw_url": "https://github.com/apache/maven-artifact-transfer/raw/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java",
                "status": "modified",
                "changes": 40,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/maven-artifact-transfer/contents/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven30DependencyResolver.java?ref=b5cc4be6c616c6a1be37dd8cbb183fb6710e409f",
                "patch": "@@ -103,31 +103,41 @@\n             (ArtifactTypeRegistry) Invoker.invoke( RepositoryUtils.class, \"newArtifactTypeRegistry\",\r\n                                                    ArtifactHandlerManager.class, artifactHandlerManager );\r\n \r\n-        List<Dependency> aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n-\r\n         final Class<?>[] argClasses =\r\n             new Class<?>[] { org.apache.maven.model.Dependency.class, ArtifactTypeRegistry.class };\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n-        {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+         List<Dependency> aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+         if ( mavenDependencies != null )\r\n+         {\r\n+             aetherDependencies = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            aetherDependencies.add( aetherDependency );\r\n-        }\r\n+             for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+             {\r\n+                 Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+\r\n+                 Dependency aetherDependency =\r\n+                     (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-        List<Dependency> aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+                 aetherDependencies.add( aetherDependency );\r\n+             }\r\n+         }\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+        List<Dependency> aetherManagedDependencies = null;\r\n+\r\n+        if ( managedMavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-            aetherManagedDependencies.add( aetherDependency );\r\n+                aetherManagedDependencies.add( aetherDependency );\r\n+            }\r\n         }\r\n \r\n         @SuppressWarnings( \"unchecked\" )\r",
                "deletions": 15
            },
            {
                "sha": "bee9d22b3db561ca541c4c3ad1d91d7a9f27ae78",
                "filename": "src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java",
                "blob_url": "https://github.com/apache/maven-artifact-transfer/blob/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java",
                "raw_url": "https://github.com/apache/maven-artifact-transfer/raw/b5cc4be6c616c6a1be37dd8cbb183fb6710e409f/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java",
                "status": "modified",
                "changes": 40,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/maven-artifact-transfer/contents/src/main/java/org/apache/maven/shared/dependency/resolve/internal/Maven31DependencyResolver.java?ref=b5cc4be6c616c6a1be37dd8cbb183fb6710e409f",
                "patch": "@@ -102,39 +102,49 @@\n             (ArtifactTypeRegistry) Invoker.invoke( RepositoryUtils.class, \"newArtifactTypeRegistry\",\r\n                                                    ArtifactHandlerManager.class, artifactHandlerManager );\r\n \r\n-        List<Dependency> aetherDeps = new ArrayList<Dependency>( mavenDependencies.size() );\r\n-\r\n         final Class<?>[] argClasses =\r\n             new Class<?>[] { org.apache.maven.model.Dependency.class, ArtifactTypeRegistry.class };\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+        List<Dependency> aetherDeps = null;\r\n+\r\n+        if ( mavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherDeps = new ArrayList<Dependency>( mavenDependencies.size() );\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : mavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            aetherDeps.add( aetherDependency );\r\n-        }\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-        List<Dependency> aetherManagedDeps = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+                aetherDeps.add( aetherDependency );\r\n+            }\r\n+        }\r\n \r\n-        for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+        List<Dependency> aetherManagedDependencies = null;\r\n+        \r\n+        if ( managedMavenDependencies != null )\r\n         {\r\n-            Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n+            aetherManagedDependencies = new ArrayList<Dependency>( managedMavenDependencies.size() );\r\n+\r\n+            for ( org.apache.maven.model.Dependency mavenDependency : managedMavenDependencies )\r\n+            {\r\n+                Object[] args = new Object[] { mavenDependency, typeRegistry };\r\n \r\n-            Dependency aetherDependency =\r\n-                (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n+                Dependency aetherDependency =\r\n+                    (Dependency) Invoker.invoke( RepositoryUtils.class, \"toDependency\", argClasses, args );\r\n \r\n-            aetherManagedDeps.add( aetherDependency );\r\n+                aetherManagedDependencies.add( aetherDependency );\r\n+            }\r\n         }\r\n \r\n         @SuppressWarnings( \"unchecked\" )\r\n         List<RemoteRepository> aetherRepos =\r\n             (List<RemoteRepository>) Invoker.invoke( RepositoryUtils.class, \"toRepos\", List.class,\r\n                                                      buildingRequest.getRemoteRepositories() );\r\n \r\n-        CollectRequest request = new CollectRequest( aetherDeps, aetherManagedDeps, aetherRepos );\r\n+        CollectRequest request = new CollectRequest( aetherDeps, aetherManagedDependencies, aetherRepos );\r\n \r\n         return resolveDependencies( buildingRequest, aetherRepos, filter, request );\r\n     }\r",
                "deletions": 15
            }
        ]
    }
]