[
    {
        "repo": "commons-io",
        "commit": "https://github.com/apache/commons-io/commit/3545c7701ef563309c4cb6dc3a66f68ec61ed980",
        "bug_id": "commons-io_3545c77",
        "message": "Fix potential NPE if proxied stream supports write((byte[]) null) without complaining\nAdd test for same\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003340 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-io/commit/f9ae38abc1b8c957b7dfdf49b27992204c7b5ae0",
        "patched_files": [
            "ProxyOutputStream.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-io/raw/3545c7701ef563309c4cb6dc3a66f68ec61ed980/src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "contents_url": "https://api.github.com/repos/apache/commons-io/contents/src/java/org/apache/commons/io/output/ProxyOutputStream.java?ref=3545c7701ef563309c4cb6dc3a66f68ec61ed980",
                "filename": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "deletions": 2,
                "sha": "66c2dbac9130037aca8e700e8e5c5555ab1d1b0b",
                "blob_url": "https://github.com/apache/commons-io/blob/3545c7701ef563309c4cb6dc3a66f68ec61ed980/src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "patch": "@@ -68,9 +68,10 @@ public void write(int idx) throws IOException {\n     @Override\n     public void write(byte[] bts) throws IOException {\n         try {\n-            beforeWrite(bts != null ? bts.length : 0);\n+            int len = bts != null ? bts.length : 0;\n+            beforeWrite(len);\n             out.write(bts);\n-            afterWrite(bts.length);\n+            afterWrite(len);\n         } catch (IOException e) {\n             handleIOException(e);\n         }",
                "changes": 5
            },
            {
                "status": "added",
                "additions": 57,
                "raw_url": "https://github.com/apache/commons-io/raw/3545c7701ef563309c4cb6dc3a66f68ec61ed980/src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-io/contents/src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java?ref=3545c7701ef563309c4cb6dc3a66f68ec61ed980",
                "filename": "src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "deletions": 0,
                "sha": "9833d9fd2ffb2f5adcf83fd4187ec2aba21ed7cd",
                "blob_url": "https://github.com/apache/commons-io/blob/3545c7701ef563309c4cb6dc3a66f68ec61ed980/src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.io.output;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * JUnit Test Case for {@link CloseShieldOutputStream}.\n+ */\n+public class ProxyOutputStreamTest extends TestCase {\n+\n+    private ByteArrayOutputStream original;\n+\n+    private OutputStream proxied;\n+\n+    @Override\n+    protected void setUp() {\n+        original = new ByteArrayOutputStream(){\n+            @Override\n+            public void write(byte[] ba) throws IOException {\n+                if (ba != null){\n+                    super.write(ba);\n+                }\n+            }\n+        };\n+        proxied = new ProxyOutputStream(original);\n+    }\n+\n+    public void testWrite() throws Exception {\n+        proxied.write('y');\n+        assertEquals(1, original.size());\n+        assertEquals('y', original.toByteArray()[0]);\n+    }\n+\n+    public void testWriteNullBaSucceeds() throws Exception {\n+        byte[] ba = null;\n+        original.write(ba);\n+        proxied.write(ba);\n+    }\n+}",
                "changes": 57
            }
        ],
        "unit_tests": [
            "ProxyOutputStreamTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
        "buggy_files": [
            "src/java/org/apache/commons/io/output/ProxyOutputStream.java"
        ],
        "fixed": true
    }
]