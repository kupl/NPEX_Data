[{"commit": "https://github.com/apache/opennlp/commit/f418eed3089d74caa11affaf947a40b774e9c8cb", "parent": "https://github.com/apache/opennlp/commit/e972869486f85c3424875a443eb04bda2eeb6bd3", "message": "OPENNLP-1078: Fix NPE in irishsentencebank reader\n\ncloses apache/opennlp#219", "bug_id": "opennlp_1", "file": [{"additions": 4, "raw_url": "https://github.com/apache/opennlp/raw/f418eed3089d74caa11affaf947a40b774e9c8cb/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java", "blob_url": "https://github.com/apache/opennlp/blob/f418eed3089d74caa11affaf947a40b774e9c8cb/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java", "sha": "2fe9231e772469ebff2fcc7be40008152b050de8", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java?ref=f418eed3089d74caa11affaf947a40b774e9c8cb", "patch": "@@ -242,6 +242,10 @@ public static IrishSentenceBankDocument parse(InputStream is) throws IOException\n           IrishSentenceBankFlex[] flexa = new IrishSentenceBankFlex[flexes];\n           for (Integer flexidx : toks.keySet()) {\n             String left = toks.get(flexidx);\n+            if (flx.get(flexidx) == null) {\n+              flexa = null;\n+              break;\n+            }\n             int rsize = flx.get(flexidx).size();\n             String[] right = new String[rsize];\n             right = flx.get(flexidx).toArray(right);", "filename": "opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java"}], "repo": "opennlp"}, {"commit": "https://github.com/apache/opennlp/commit/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca", "parent": "https://github.com/apache/opennlp/commit/931f6d55df58236c4a530d7ead3ecc1bebfa70c4", "message": "OPENNLP-488 - applied patch from Jeff Zemerick to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1734199 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "opennlp_2", "file": [{"additions": 13, "raw_url": "https://github.com/apache/opennlp/raw/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java", "blob_url": "https://github.com/apache/opennlp/blob/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java", "sha": "71c2f77e32f2fb24cdb803f91d7b184b819317d3", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java?ref=172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca", "patch": "@@ -139,20 +139,22 @@ public void persist() throws IOException {\n   }\n \n   protected List<List<ComparablePredicate>> compressOutcomes(ComparablePredicate[] sorted) {\n-    ComparablePredicate cp = sorted[0];\n     List<List<ComparablePredicate>> outcomePatterns = new ArrayList<List<ComparablePredicate>>();\n-    List<ComparablePredicate> newGroup = new ArrayList<ComparablePredicate>();\n-    for (int i = 0; i < sorted.length; i++) {\n-      if (cp.compareTo(sorted[i]) == 0) {\n-        newGroup.add(sorted[i]);\n-      } else {\n-        cp = sorted[i];\n+    if(sorted.length > 0) {\n+        ComparablePredicate cp = sorted[0];    \n+        List<ComparablePredicate> newGroup = new ArrayList<ComparablePredicate>();\n+        for (int i = 0; i < sorted.length; i++) {\n+          if (cp.compareTo(sorted[i]) == 0) {\n+            newGroup.add(sorted[i]);\n+          } else {\n+            cp = sorted[i];\n+            outcomePatterns.add(newGroup);\n+            newGroup = new ArrayList<ComparablePredicate>();\n+            newGroup.add(sorted[i]);\n+          }\n+        }\n         outcomePatterns.add(newGroup);\n-        newGroup = new ArrayList<ComparablePredicate>();\n-        newGroup.add(sorted[i]);\n-      }\n     }\n-    outcomePatterns.add(newGroup);\n     return outcomePatterns;\n   }\n }", "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/opennlp/raw/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java", "blob_url": "https://github.com/apache/opennlp/blob/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java", "sha": "c1726f6ff7867584e1d17356adca5f99cab54eb5", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java?ref=172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca", "patch": "@@ -83,7 +83,8 @@\n   protected int sortAndMerge(List<ComparableEvent> eventsToCompare, boolean sort) {\n     int numUniqueEvents = 1;\n     numEvents = eventsToCompare.size();\n-    if (sort) {\n+    if (sort && eventsToCompare.size() > 0) {\n+\n       Collections.sort(eventsToCompare);\n \n       ComparableEvent ce = eventsToCompare.get(0);", "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java"}], "repo": "opennlp"}, {"commit": "https://github.com/apache/opennlp/commit/7197b5c68d36f1bdd2d926dadf2f774656d64f58", "parent": "https://github.com/apache/opennlp/commit/cf3d1823589c6200bc43dae7b34ce45ffd9caef8", "message": "No jira, fixed a null check to avoid a NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1560972 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "opennlp_3", "file": [{"additions": 8, "raw_url": "https://github.com/apache/opennlp/raw/7197b5c68d36f1bdd2d926dadf2f774656d64f58/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java", "blob_url": "https://github.com/apache/opennlp/blob/7197b5c68d36f1bdd2d926dadf2f774656d64f58/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java", "sha": "4cf1df0f4636239daeb994e6a8972f0b92190081", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java?ref=7197b5c68d36f1bdd2d926dadf2f774656d64f58", "patch": "@@ -66,15 +66,17 @@ public static boolean isSupportEvent(Map<String, String> trainParams) {\n     String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);\n     \n     if (trainerType == null) {\n-      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      String alogrithmValue = trainParams.get(AbstractTrainer.ALGORITHM_PARAM);\n+      if (alogrithmValue != null) {\n+        trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      }\n     }\n     \n     if (trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM) != null) {\n       return EventTrainer.EVENT_VALUE.equals(trainParams\n           .get(AbstractTrainer.TRAINER_TYPE_PARAM));\n     } \n     \n-    // default\n     return true;\n   }\n \n@@ -83,7 +85,10 @@ public static boolean isSupportSequence(Map<String, String> trainParams) {\n     String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);\n     \n     if (trainerType == null) {\n-      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      String alogrithmValue = trainParams.get(AbstractTrainer.ALGORITHM_PARAM);\n+      if (alogrithmValue != null) {\n+        trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      }\n     }\n     \n     if (SequenceTrainer.SEQUENCE_VALUE.equals(trainerType)) {", "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java"}], "repo": "opennlp"}, {"commit": "https://github.com/apache/opennlp/commit/77611e5e80319a48e957f75f22050b40f27eab0a", "parent": "https://github.com/apache/opennlp/commit/cea19fed19f0968f2458bac329b2506d4a0e8452", "message": "OPENNLP-151 Fixed NPE through incorrectly declared local variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1089145 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "opennlp_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/opennlp/raw/77611e5e80319a48e957f75f22050b40f27eab0a/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java", "blob_url": "https://github.com/apache/opennlp/blob/77611e5e80319a48e957f75f22050b40f27eab0a/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java", "sha": "adc6c2ca176185251910872551457185c18c03b3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java?ref=77611e5e80319a48e957f75f22050b40f27eab0a", "patch": "@@ -108,7 +108,7 @@ public void initialize() throws ResourceInitializationException {\n     language = CasConsumerUtil.getRequiredStringParameter(mContext,\r\n         UimaUtil.LANGUAGE_PARAMETER);\r\n     \r\n-    Boolean isSkipAlphaNumerics = \r\n+    isSkipAlphaNumerics = \r\n         CasConsumerUtil.getOptionalBooleanParameter(\r\n         mContext, IS_ALPHA_NUMERIC_OPTIMIZATION);\r\n     \r", "filename": "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java"}], "repo": "opennlp"}, {"commit": "https://github.com/apache/opennlp/commit/f41befa9121be253ad6e169f406255f540ac2991", "parent": "https://github.com/apache/opennlp/commit/fa987ce6519e2947e619876f8a8e9bcf82d93eae", "message": "OPENNLP-670 seqCodec is not initialized in the default constructor which causes a NPE if trained with default seq codec. Thanks  to Vinh Khuc for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1584277 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "opennlp_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/opennlp/raw/f41befa9121be253ad6e169f406255f540ac2991/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java", "blob_url": "https://github.com/apache/opennlp/blob/f41befa9121be253ad6e169f406255f540ac2991/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java", "sha": "fbedca2f54de9ced163151b05f78723aeb013b86", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java?ref=f41befa9121be253ad6e169f406255f540ac2991", "patch": "@@ -54,8 +54,8 @@\n    * of the resources.\n    */\n   public TokenNameFinderFactory() {\n+    this.seqCodec = new BioCodec();\n   }\n-\n   \n   public TokenNameFinderFactory(byte[] featureGeneratorBytes, final Map<String, Object> resources,\n       SequenceCodec<String> seqCodec) {", "filename": "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java"}], "repo": "opennlp"}]
