{
    "incubator-tez_8a3dcf4": {
        "repo": "incubator-tez",
        "message": "TEZ-615. OrderedWordCount with -DUSE_TEZ_SESSION=false throws NPE. (hitesh)",
        "commit": "https://github.com/apache/incubator-tez/commit/8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
        "parent": "https://github.com/apache/incubator-tez/commit/d4bb730eaa4b8b793b2c7f8b08e1faa50ed566e8",
        "bug_id": "incubator-tez_8a3dcf4",
        "file": [
            {
                "sha": "042ff91885e232ddf6a15a2ee127a020b0c46823",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "changes": 13,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -364,9 +364,16 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n     if(dag != null) {\n \n       for (Vertex v : dag.getVertices()) {\n+        if (v.getTaskLocalResources() == null) {\n+          v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n+        }\n         v.getTaskLocalResources().putAll(tezJarResources);\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n+\n+        if (v.getTaskEnvironment() == null) {\n+          v.setTaskEnvironment(new TreeMap<String, String>());\n+        }\n         Map<String, String> taskEnv = v.getTaskEnvironment();\n         for (Map.Entry<String, String> entry : environment.entrySet()) {\n           String key = entry.getKey();\n@@ -399,9 +406,9 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n       }\n \n       localResources.put(TezConfiguration.TEZ_PB_PLAN_BINARY_NAME,\n-          TezClientUtils.createLocalResource(fs,\n-              binaryPath, LocalResourceType.FILE,\n-              LocalResourceVisibility.APPLICATION));\n+        TezClientUtils.createLocalResource(fs,\n+          binaryPath, LocalResourceType.FILE,\n+          LocalResourceVisibility.APPLICATION));\n \n       if (Level.DEBUG.isGreaterOrEqual(Level.toLevel(amLogLevel))) {\n         Path textPath = localizeDagPlanAsText(dagPB, fs,",
                "deletions": 3
            },
            {
                "sha": "6eedb15adab8267cc86ce5fd8cb42609a6ce8e0a",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -670,7 +670,7 @@ public void onContainersAllocated(List<Container> containers) {\n             boolean safeToRelease = true;\n             Priority topPendingPriority = amRmClient.getTopPriority();\n             Priority containerPriority = heldContainer.container.getPriority();\n-            if (topPendingPriority != null && \n+            if (isNew && topPendingPriority != null &&\n                 containerPriority.compareTo(topPendingPriority) < 0) {\n               // this container is of lower priority and given to us by the RM for\n               // a task that will be matched after the current top priority. Keep ",
                "deletions": 1
            }
        ],
        "patched_files": [
            "TaskScheduler.java"
        ],
        "unit_tests": [
            "TestTaskScheduler.java"
        ]
    },
    "incubator-tez_1795ea8": {
        "repo": "incubator-tez",
        "message": "TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "commit": "https://github.com/apache/incubator-tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "parent": "https://github.com/apache/incubator-tez/commit/38350663c4f367efb46f7cb488cd85607d1dfc24",
        "bug_id": "incubator-tez_1795ea8",
        "file": [
            {
                "sha": "597acb2aa2545374a181e0df604e9aad1bea06bd",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -250,9 +250,6 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -263,6 +260,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +299,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +310,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,",
                "deletions": 3
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "changes": 13,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();",
                "deletions": 6
            },
            {
                "sha": "f0aea339ed7f7fe629d2adc4a6c9e08d72d94969",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    return incrementalConf;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {",
                "deletions": 1
            }
        ],
        "patched_files": [
            "VertexImpl.java"
        ],
        "unit_tests": [
            "TestVertexImpl.java"
        ]
    },
    "incubator-tez_2debbca": {
        "repo": "incubator-tez",
        "message": "Addendum TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "commit": "https://github.com/apache/incubator-tez/commit/2debbca5921daa8fd4a9080e8390c0c086914d62",
        "parent": "https://github.com/apache/incubator-tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "bug_id": "incubator-tez_2debbca",
        "file": [
            {
                "sha": "99dbb872f633b1545ebc2af2d52931d1c19bcc15",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "changes": 11,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -250,19 +250,15 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n-              SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n           .addTransition(\n               VertexState.TERMINATING,\n               VertexState.ERROR, VertexEventType.V_INTERNAL_ERROR,\n               INTERNAL_ERROR_TRANSITION)\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +297,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +308,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,",
                "deletions": 6
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "changes": 13,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();",
                "deletions": 6
            },
            {
                "sha": "ed675a44ae397a5f552fd485391746410fc3b16d",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -209,7 +209,10 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    if (incrementalConf != null) {\n+      return new Configuration(incrementalConf);\n+    }\n+    return null;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {",
                "deletions": 1
            }
        ],
        "patched_files": [
            "VertexImpl.java"
        ],
        "unit_tests": [
            "TestVertexImpl.java"
        ]
    },
    "incubator-tez_968e31f": {
        "repo": "incubator-tez",
        "message": "Revert \"TEZ-510. Test MRRJobs failing with NPE (bikas)\"\n\nThis reverts commit 1795ea84fc899f5e522680119b1853f559030a14.",
        "commit": "https://github.com/apache/incubator-tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "parent": "https://github.com/apache/incubator-tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "bug_id": "incubator-tez_968e31f",
        "file": [
            {
                "sha": "67523284ecd9677245093934878a0ae22b114cae",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "changes": 7,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -250,6 +250,9 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n+          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n+              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n+              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -260,7 +263,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -299,7 +301,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -310,8 +311,6 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n-                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,",
                "deletions": 4
            },
            {
                "sha": "e8e315a536113b35b3ca2b2e337ee19ef206ba37",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "changes": 13,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -98,14 +98,13 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n+    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    if (updatedConf != null) {\n-      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-      if (fileName != null) {\n-        LOG.info(\"Processing file: \" + fileName);\n-        srcFile.set(fileName);\n-      }\n+    if (fileName == null) {\n+      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    } else {\n+      srcFile.set(fileName);\n     }\n \n     KVReader kvReader = mrInput.getReader();",
                "deletions": 7
            },
            {
                "sha": "b9f22421a40857c4f1117cefe25bcf8e7f57b725",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return incrementalConf;\n+    return new Configuration(incrementalConf);\n   }\n \n   public float getProgress() throws IOException, InterruptedException {",
                "deletions": 1
            }
        ],
        "patched_files": [
            "VertexImpl.java"
        ],
        "unit_tests": [
            "TestVertexImpl.java"
        ]
    },
    "incubator-tez_a9bace0": {
        "repo": "incubator-tez",
        "message": "TEZ-715. Auto Reduce Parallelism can rarely trigger NPE in AM at DAGAppMaster.handle(DAGAppMaster.java:1268) (bikas)",
        "commit": "https://github.com/apache/incubator-tez/commit/a9bace052a9dba4b1aa08c2e9310df73928dad84",
        "parent": "https://github.com/apache/incubator-tez/commit/f2f31e0eff3f654d51ca7001a3bf1784cf8d5e0b",
        "bug_id": "incubator-tez_a9bace0",
        "file": [
            {
                "sha": "8243b7047e2aa349ba73b6814c64065e7faf6aa3",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -78,8 +78,6 @@\n   public List<TezEvent> getTaskAttemptTezEvents(TezTaskAttemptID attemptID,\n       int fromEventId, int maxEvents);\n   \n-  public List<TezEvent> getAndClearTaskTezEvents();\n-\n   public List<String> getDiagnostics();\n \n }",
                "deletions": 2
            },
            {
                "sha": "793c12a44bc129f5a8fa62431003bde9cbcda14d",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "status": "modified",
                "changes": 12,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -491,18 +491,6 @@ public float getProgress() {\n     }\n   }\n \n-  @Override\n-  public List<TezEvent> getAndClearTaskTezEvents() {\n-    readLock.lock();\n-    try {\n-      List<TezEvent> events = tezEventsForTaskAttempts;\n-      tezEventsForTaskAttempts = new ArrayList<TezEvent>();\n-      return events;\n-    } finally {\n-      readLock.unlock();\n-    }\n-  }\n-\n   @Override\n   public List<String> getDiagnostics() {\n     List<String> diagnostics = new ArrayList<String>(attempts.size());",
                "deletions": 12
            },
            {
                "sha": "d3e07cb2d09783e606c5cb20de16c1530c0fe8b6",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "changes": 62,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -462,7 +462,10 @@\n   private Set<String> inputsWithInitializers;\n   private int numInitializedInputs;\n   private boolean startSignalPending = false;\n-  List<TezEvent> pendingRouteEvents = null;\n+  private boolean tasksNotYetScheduled = true;\n+  // We may always store task events in the vertex for scalability\n+  List<TezEvent> pendingTaskEvents = Lists.newLinkedList();\n+  List<TezEvent> pendingRouteEventsWhileIniting = null;\n   List<TezTaskAttemptID> pendingReportedSrcCompletions = Lists.newLinkedList();\n \n   private RootInputInitializerRunner rootInputInitializer;\n@@ -803,6 +806,12 @@ public AppContext getAppContext() {\n   public void scheduleTasks(List<Integer> taskIDs) {\n     readLock.lock();\n     try {\n+      tasksNotYetScheduled = false;\n+      if (!pendingTaskEvents.isEmpty()) {\n+        VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n+            new VertexEventRouteEvent(getVertexId(), pendingTaskEvents));\n+        pendingTaskEvents.clear();\n+      }\n       for (Integer taskID : taskIDs) {\n         if (tasks.size() <= taskID.intValue()) {\n           throw new TezUncheckedException(\n@@ -874,10 +883,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           edge.startEventBuffering();\n         }\n   \n-        // Use a set since the same event may have been sent to multiple tasks\n-        // and we want to avoid duplicates\n-        Set<TezEvent> pendingEvents = new HashSet<TezEvent>();\n-  \n         LOG.info(\"Vertex \" + getVertexId() + \n             \" parallelism set to \" + parallelism + \" from \" + numTasks);\n         // assign to local variable of LinkedHashMap to make sure that changing\n@@ -896,7 +901,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                     + \" for vertex: \" + getVertexId() + \" name: \" + getName());\n             return false;\n           }\n-          pendingEvents.addAll(task.getAndClearTaskTezEvents());\n           if (i <= parallelism) {\n             continue;\n           }\n@@ -913,7 +917,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                 + entry.getKey() + \" destination: \" + getVertexId());\n             Vertex sourceVertex = appContext.getCurrentDAG().getVertex(entry.getKey());\n             Edge edge = sourceVertices.get(sourceVertex);\n-            EdgeProperty edgeProperty = edge.getEdgeProperty();\n             try {\n               edge.setCustomEdgeManager(entry.getValue());\n             } catch (Exception e) {\n@@ -926,21 +929,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           }\n         }\n   \n-        // Re-route all existing TezEvents according to new routing table\n-        // At this point only events attributed to source task attempts can be\n-        // re-routed. e.g. DataMovement or InputFailed events.\n-        // This assumption is fine for now since these tasks haven't been started.\n-        // So they can only get events generated from source task attempts that\n-        // have already been started.\n-        DAG dag = getDAG();\n-        for(TezEvent event : pendingEvents) {\n-          TezVertexID sourceVertexId = event.getSourceInfo().getTaskAttemptID()\n-              .getTaskID().getVertexID();\n-          Vertex sourceVertex = dag.getVertex(sourceVertexId);\n-          Edge sourceEdge = sourceVertices.get(sourceVertex);\n-          sourceEdge.sendTezEventToDestinationTasks(event);\n-        }\n-  \n         // stop buffering events\n         for (Edge edge : sourceVertices.values()) {\n           edge.stopEventBuffering();\n@@ -1550,10 +1538,10 @@ private VertexState initializeVertexInInitializingState() {\n     }\n \n     // Vertex will be moving to INITED state, safe to process pending route events.\n-    if (pendingRouteEvents != null) {\n+    if (pendingRouteEventsWhileIniting != null) {\n       VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n-          new VertexEventRouteEvent(getVertexId(), pendingRouteEvents));\n-      pendingRouteEvents = null;\n+          new VertexEventRouteEvent(getVertexId(), pendingRouteEventsWhileIniting));\n+      pendingRouteEventsWhileIniting = null;\n     }\n     return vertexState;\n   }\n@@ -2032,12 +2020,12 @@ private static void checkEventSourceMetadata(Vertex vertex,\n     @Override\n     public void transition(VertexImpl vertex, VertexEvent event) {\n       VertexEventRouteEvent re = (VertexEventRouteEvent) event;\n-      if (vertex.pendingRouteEvents == null) {\n-        vertex.pendingRouteEvents = Lists.newLinkedList();\n+      if (vertex.pendingRouteEventsWhileIniting == null) {\n+        vertex.pendingRouteEventsWhileIniting = Lists.newLinkedList();\n       }\n       // Store the events for post-init routing, since INIT state is when\n       // initial task parallelism will be set\n-      vertex.pendingRouteEvents.addAll(re.getEvents());\n+      vertex.pendingRouteEventsWhileIniting.addAll(re.getEvents());\n     }\n   }\n \n@@ -2103,14 +2091,18 @@ public void transition(VertexImpl vertex, VertexEvent event) {\n             } else {\n               // event not from this vertex. must have come from source vertex.\n               // send to tasks\n-              Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n-                  sourceMeta.getTaskVertexName()));\n-              if (srcEdge == null) {\n-                throw new TezUncheckedException(\"Bad source vertex: \" +\n-                    sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n-                    vertex.getVertexId());\n+              if (vertex.tasksNotYetScheduled) {\n+                vertex.pendingTaskEvents.add(tezEvent);\n+              } else {\n+                Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n+                    sourceMeta.getTaskVertexName()));\n+                if (srcEdge == null) {\n+                  throw new TezUncheckedException(\"Bad source vertex: \" +\n+                      sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n+                      vertex.getVertexId());\n+                }\n+                srcEdge.sendTezEventToDestinationTasks(tezEvent);\n               }\n-              srcEdge.sendTezEventToDestinationTasks(tezEvent);\n             }\n           }\n           break;",
                "deletions": 35
            },
            {
                "sha": "1a14b15b613b02082e02aaea2d02bf6ce8cab09d",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "status": "modified",
                "changes": 42,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -98,6 +98,7 @@\n import org.apache.tez.dag.app.dag.event.VertexEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputFailed;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputInitialized;\n+import org.apache.tez.dag.app.dag.event.VertexEventRouteEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskAttemptCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskReschedule;\n@@ -114,12 +115,16 @@\n import org.apache.tez.runtime.api.Event;\n import org.apache.tez.runtime.api.OutputCommitter;\n import org.apache.tez.runtime.api.OutputCommitterContext;\n+import org.apache.tez.runtime.api.events.CompositeDataMovementEvent;\n import org.apache.tez.runtime.api.events.DataMovementEvent;\n import org.apache.tez.runtime.api.events.InputReadErrorEvent;\n import org.apache.tez.runtime.api.events.RootInputConfigureVertexTasksEvent;\n import org.apache.tez.runtime.api.events.RootInputDataInformationEvent;\n import org.apache.tez.test.EdgeManagerForTest;\n+import org.apache.tez.runtime.api.impl.EventMetaData;\n+import org.apache.tez.runtime.api.impl.EventMetaData.EventProducerConsumerType;\n import org.apache.tez.runtime.api.impl.GroupInputSpec;\n+import org.apache.tez.runtime.api.impl.TezEvent;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -1419,6 +1424,43 @@ public void testVertexSetParallelism() {\n     Assert.assertTrue(tasks.keySet().iterator().next().equals(firstTask));\n \n   }\n+  \n+  @SuppressWarnings(\"unchecked\")\n+  @Test(timeout = 5000)\n+  public void testVertexPendingTaskEvents() {\n+    initAllVertices(VertexState.INITED);\n+    VertexImpl v3 = vertices.get(\"vertex3\");\n+    VertexImpl v2 = vertices.get(\"vertex2\");\n+    \n+    startVertex(v2);\n+    startVertex(v3);\n+    \n+    TezTaskID t0_v2 = TezTaskID.getInstance(v2.getVertexId(), 0);\n+    TezTaskAttemptID ta0_t0_v2 = TezTaskAttemptID.getInstance(t0_v2, 0);\n+\n+    List<TezEvent> taskEvents = Lists.newLinkedList();\n+    TezEvent tezEvent1 = new TezEvent(\n+        new CompositeDataMovementEvent(0, 1, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    TezEvent tezEvent2 = new TezEvent(\n+        new DataMovementEvent(0, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    taskEvents.add(tezEvent1);\n+    taskEvents.add(tezEvent2);\n+    // send events and test that they are buffered until some task is scheduled\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(2, v3.pendingTaskEvents.size());\n+    v3.scheduleTasks(Collections.singletonList(new Integer(0)));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+    // send events and test that they are not buffered anymore\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+  }\n \n   @Test(timeout = 5000)\n   public void testSetCustomEdgeManager() throws UnsupportedEncodingException {",
                "deletions": 0
            }
        ],
        "patched_files": [
            "TaskImpl.java",
            "Task.java",
            "VertexImpl.java"
        ],
        "unit_tests": [
            "TestVertexImpl.java",
            "TestTaskImpl.java"
        ]
    }
}