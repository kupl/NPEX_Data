[
    {
        "repo": "httpcomponents-core",
        "commit": "https://github.com/apache/httpcomponents-core/commit/4df046258ebbb2da6a5a66c24e656f6229516710",
        "bug_id": "httpcomponents-core_4df0462",
        "message": "Throw NullPointerException for null arguments in Args\n\nThe common approach for the past years have been to throw NPE if a null\nargument has been passed. This mimics the behavior of\nObjects#requireNonNull().",
        "parent": "https://github.com/apache/httpcomponents-core/commit/dc6b3e5aa5520c7d70ba3a1db0f0f2262b87d4ec",
        "patched_files": [
            "ByteBufferEntity.java",
            "DefaultConnectionReuseStrategy.java",
            "LaxConnPool.java",
            "Args.java",
            "SerializableEntity.java",
            "UriPatternOrderedMatcher.java",
            "FileEntity.java",
            "PoolEntry.java",
            "ChunkDecoder.java",
            "BufferedHttpEntity.java",
            "UriRegexMatcher.java",
            "LengthDelimitedEncoder.java",
            "BasicHeaderIterator.java",
            "BasicLineFormatter.java",
            "HttpHost.java",
            "Host.java",
            "HeaderElement.java",
            "InputStreamEntity.java",
            "HttpEntityWrapper.java",
            "EntityUtils.java",
            "BasicTokenIterator.java",
            "HttpRequestExecutor.java",
            "LengthDelimitedDecoder.java",
            "NameValuePair.java",
            "IdentityEncoder.java",
            "BasicHeaderValueFormatter.java",
            "Header.java",
            "HttpService.java",
            "ChunkEncoder.java",
            "UriPatternMatcher.java",
            "ContentType.java",
            "BasicHeader.java",
            "StringEntity.java",
            "ByteArrayEntity.java",
            "StrictConnPool.java",
            "IdentityDecoder.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/main/java/org/apache/hc/core5/util/Args.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/main/java/org/apache/hc/core5/util/Args.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/main/java/org/apache/hc/core5/util/Args.java",
                "deletions": 7,
                "sha": "0ee17b6e650cb7da49a95dc3a58c7bef652f1341",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/main/java/org/apache/hc/core5/util/Args.java",
                "patch": "@@ -79,7 +79,7 @@ public static long checkRange(final long value, final long lowInclusive, final l\n \n     public static <T extends CharSequence> T containsNoBlanks(final T argument, final String name) {\n         if (argument == null) {\n-            throw illegalArgumentExceptionNotNull(name);\n+            throw NullPointerException(name);\n         }\n         if (argument.length() == 0) {\n             throw illegalArgumentExceptionNotEmpty(name);\n@@ -98,13 +98,13 @@ private static IllegalArgumentException illegalArgumentExceptionNotEmpty(final S\n         return new IllegalArgumentException(name + \" must not be empty\");\n     }\n \n-    private static IllegalArgumentException illegalArgumentExceptionNotNull(final String name) {\n-        return new IllegalArgumentException(name + \" must not be null\");\n+    private static NullPointerException NullPointerException(final String name) {\n+        return new NullPointerException(name + \" must not be null\");\n     }\n \n     public static <T extends CharSequence> T notBlank(final T argument, final String name) {\n         if (argument == null) {\n-            throw illegalArgumentExceptionNotNull(name);\n+            throw NullPointerException(name);\n         }\n         if (TextUtils.isBlank(argument)) {\n             throw new IllegalArgumentException(name + \" must not be blank\");\n@@ -114,7 +114,7 @@ private static IllegalArgumentException illegalArgumentExceptionNotNull(final St\n \n     public static <T extends CharSequence> T notEmpty(final T argument, final String name) {\n         if (argument == null) {\n-            throw illegalArgumentExceptionNotNull(name);\n+            throw NullPointerException(name);\n         }\n         if (TextUtils.isEmpty(argument)) {\n             throw illegalArgumentExceptionNotEmpty(name);\n@@ -124,7 +124,7 @@ private static IllegalArgumentException illegalArgumentExceptionNotNull(final St\n \n     public static <E, T extends Collection<E>> T notEmpty(final T argument, final String name) {\n         if (argument == null) {\n-            throw illegalArgumentExceptionNotNull(name);\n+            throw NullPointerException(name);\n         }\n         if (argument.isEmpty()) {\n             throw illegalArgumentExceptionNotEmpty(name);\n@@ -148,7 +148,7 @@ public static long notNegative(final long n, final String name) {\n \n     public static <T> T notNull(final T argument, final String name) {\n         if (argument == null) {\n-            throw illegalArgumentExceptionNotNull(name);\n+            throw NullPointerException(name);\n         }\n         return argument;\n     }",
                "changes": 14
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/TestContentType.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/TestContentType.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/TestContentType.java",
                "deletions": 2,
                "sha": "e1348d99580abba8cebadec88accaf54af9ddc69",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/TestContentType.java",
                "patch": "@@ -83,8 +83,8 @@ public void testLowCaseText() throws Exception {\n     public void testCreateInvalidInput() throws Exception {\n         try {\n             ContentType.create(null, (String) null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/TestHttpHost.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/TestHttpHost.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/TestHttpHost.java",
                "deletions": 4,
                "sha": "54019d1df94d5d63844564133bec8ef21be723b2",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/TestHttpHost.java",
                "patch": "@@ -68,8 +68,8 @@ public void testConstructor() {\n         Assert.assertEquals(\"https\", host5.getSchemeName());\n         try {\n             new HttpHost(null, (String) null, -1);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             new HttpHost(null, \"   \", -1);\n@@ -78,8 +78,8 @@ public void testConstructor() {\n         }\n         try {\n             new HttpHost(null, (InetAddress) null, -1);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n     }\n ",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/TestDefaultConnectionReuseStrategy.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/TestDefaultConnectionReuseStrategy.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/TestDefaultConnectionReuseStrategy.java",
                "deletions": 2,
                "sha": "9252f7bf74048f4b2536c47349e14daaabe26012",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/TestDefaultConnectionReuseStrategy.java",
                "patch": "@@ -55,8 +55,8 @@ public void setUp() {\n         context = new BasicHttpContext(null);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n-    public void testIllegalResponseArg() throws Exception {\n+    @Test(expected=NullPointerException.class)\n+    public void testInvalidResponseArg() throws Exception {\n         reuseStrategy.keepAlive(null, null, this.context);\n     }\n ",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 18,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpRequestExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpRequestExecutor.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpRequestExecutor.java",
                "deletions": 18,
                "sha": "4c15bef2ab4182e484e4cb2952eeaaf1404cc951",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpRequestExecutor.java",
                "patch": "@@ -61,58 +61,58 @@ public void testInvalidInput() throws Exception {\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.execute(null, conn, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.execute(request, null, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.execute(request, conn, null);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n \n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.preProcess(null, httprocessor, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.preProcess(request, null, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.preProcess(request, httprocessor, null);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n \n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.postProcess(null, httprocessor, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.postProcess(response, null, context);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             final HttpRequestExecutor executor = new HttpRequestExecutor();\n             executor.postProcess(response, httprocessor, null);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n     }\n ",
                "changes": 36
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpService.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpService.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpService.java",
                "deletions": 2,
                "sha": "889efe7ceb847cbfa0015797d8349bac44d7880d",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/io/TestHttpService.java",
                "patch": "@@ -101,8 +101,8 @@ public void testInvalidInitialization() throws Exception {\n                     handlerResolver,\n                     connReuseStrategy,\n                     responseFactory);\n-            Assert.fail(\"IllegalArgumentException expected\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException expected\");\n+        } catch (final NullPointerException expected) {\n         }\n     }\n ",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkDecoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkDecoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkDecoder.java",
                "deletions": 7,
                "sha": "43a935a3cde116e0ee647cae1ae10215c9036933",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkDecoder.java",
                "patch": "@@ -552,25 +552,25 @@ public void testInvalidConstructor() {\n         final SessionInputBuffer inbuf = new SessionInputBufferImpl(1024, 256, 0, StandardCharsets.US_ASCII);\n         try {\n             new ChunkDecoder(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new ChunkDecoder(channel, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new ChunkDecoder(channel, inbuf, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testInvalidInput() throws Exception {\n         final String s = \"10;key=\\\"value\\\"\\r\\n1234567890123456\\r\\n\" +\n                 \"5\\r\\n12345\\r\\n5\\r\\n12345\\r\\n0\\r\\nFooter1 abcde\\r\\n\\r\\n\";",
                "changes": 14
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkEncoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkEncoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkEncoder.java",
                "deletions": 6,
                "sha": "4427276e115a4084aa9f71d2927f63a32da0c1c4",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestChunkEncoder.java",
                "patch": "@@ -213,20 +213,20 @@ public void testInvalidConstructor() {\n \n         try {\n             new ChunkEncoder(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new ChunkEncoder(channel, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new ChunkEncoder(channel, outbuf, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n     }",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityDecoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityDecoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityDecoder.java",
                "deletions": 8,
                "sha": "0df1f1d8a21c680782faac1d487e8fe4dc4e93ff",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityDecoder.java",
                "patch": "@@ -353,20 +353,20 @@ public void testInvalidConstructor() {\n         final SessionInputBuffer inbuf = new SessionInputBufferImpl(1024, 256, 0, StandardCharsets.US_ASCII);\n         try {\n             new IdentityDecoder(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new IdentityDecoder(channel, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new IdentityDecoder(channel, inbuf, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n     }\n@@ -383,8 +383,8 @@ public void testInvalidInput() throws Exception {\n \n         try {\n             decoder.read(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 16
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityEncoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityEncoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityEncoder.java",
                "deletions": 6,
                "sha": "1c8c80b94f9dc703376179a72ded5b6449e916f6",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestIdentityEncoder.java",
                "patch": "@@ -130,20 +130,20 @@ public void testInvalidConstructor() {\n \n         try {\n             new IdentityEncoder(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new IdentityEncoder(channel, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new IdentityEncoder(channel, outbuf, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n     }",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedDecoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedDecoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedDecoder.java",
                "deletions": 8,
                "sha": "4ab31d4f65181fee80d85f731aed73efc2414e32",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedDecoder.java",
                "patch": "@@ -499,20 +499,20 @@ public void testInvalidConstructor() {\n         final BasicHttpTransportMetrics metrics = new BasicHttpTransportMetrics();\n         try {\n             new LengthDelimitedDecoder(null, null, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new LengthDelimitedDecoder(channel, null, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new LengthDelimitedDecoder(channel, inbuf, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n@@ -536,8 +536,8 @@ public void testInvalidInput() throws Exception {\n \n         try {\n             decoder.read(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 16
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedEncoder.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedEncoder.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedEncoder.java",
                "deletions": 6,
                "sha": "be9ff4bcd62bb3962cf24b920010e3f55d4ad594",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/impl/nio/TestLengthDelimitedEncoder.java",
                "patch": "@@ -147,20 +147,20 @@ public void testInvalidConstructor() {\n \n         try {\n             new LengthDelimitedEncoder(null, null, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new LengthDelimitedEncoder(channel, null, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {\n             new LengthDelimitedEncoder(channel, outbuf, null, 10);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // ignore\n         }\n         try {",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestBufferedHttpEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestBufferedHttpEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestBufferedHttpEntity.java",
                "deletions": 6,
                "sha": "88c1eaab82c2108dae6fcc4ca142b888e16fe4c9",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestBufferedHttpEntity.java",
                "patch": "@@ -74,8 +74,8 @@ public void testWrappingEntity() throws Exception {\n     public void testIllegalConstructor() throws Exception {\n         try {\n             new BufferedHttpEntity(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -106,8 +106,8 @@ public void testWriteToBuffered() throws Exception {\n \n         try {\n             bufentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -138,8 +138,8 @@ public void testWriteToWrapped() throws Exception {\n \n         try {\n             bufentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteArrayEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteArrayEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteArrayEntity.java",
                "deletions": 5,
                "sha": "55fc39cc8b4780f77100971aa0a2d96bafa7110e",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteArrayEntity.java",
                "patch": "@@ -61,7 +61,7 @@ public void testBasicOffLen() throws Exception {\n         Assert.assertFalse(entity.isStreaming());\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testIllegalConstructorNullByteArray() throws Exception {\n         new ByteArrayEntity(null, null);\n     }\n@@ -109,8 +109,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             entity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -142,8 +142,8 @@ public void testWriteToOffLen() throws Exception {\n \n         try {\n             entity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteBufferEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteBufferEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteBufferEntity.java",
                "deletions": 2,
                "sha": "2c64d60ae6d6ca80ab25c58f461e60efbac48cad",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestByteBufferEntity.java",
                "patch": "@@ -79,8 +79,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             httpentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestEntityUtils.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestEntityUtils.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestEntityUtils.java",
                "deletions": 3,
                "sha": "a9bd58df3e4b1becdfc57cb2aed3c2cc2c80d4b7",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestEntityUtils.java",
                "patch": "@@ -49,7 +49,7 @@\n  */\n public class TestEntityUtils {\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test(expected = NullPointerException.class)\n     public void testNullEntityToByteArray() throws Exception {\n         EntityUtils.toByteArray(null);\n     }\n@@ -90,8 +90,8 @@ public void testKnownLengthContentToByteArray() throws Exception {\n     public void testNullEntityToString() throws Exception {\n         try {\n             EntityUtils.toString(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestFileEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestFileEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestFileEntity.java",
                "deletions": 5,
                "sha": "1f20135def33fdf74d58521f11272b75e5048002",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestFileEntity.java",
                "patch": "@@ -60,11 +60,11 @@ public void testBasics() throws Exception {\n     }\n \n     @Test\n-    public void testIllegalConstructor() throws Exception {\n+    public void testNullConstructor() throws Exception {\n         try {\n             new FileEntity(null, ContentType.TEXT_PLAIN);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -97,8 +97,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             httpentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestHttpEntityWrapper.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestHttpEntityWrapper.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestHttpEntityWrapper.java",
                "deletions": 4,
                "sha": "ffafba3863a817064874d2d146f9c43ed597bebd",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestHttpEntityWrapper.java",
                "patch": "@@ -58,8 +58,8 @@ public void testBasics() throws Exception {\n     public void testIllegalConstructor() throws Exception {\n         try {\n             new HttpEntityWrapper(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -91,8 +91,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             wrapped.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestInputStreamEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestInputStreamEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestInputStreamEntity.java",
                "deletions": 3,
                "sha": "04f937b43628d5cf755b81b63965b763d31ee833",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestInputStreamEntity.java",
                "patch": "@@ -54,8 +54,8 @@ public void testBasics() throws Exception {\n         Assert.assertTrue(entity.isStreaming());\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n-    public void testIllegalConstructor() throws Exception {\n+    @Test(expected = NullPointerException.class)\n+    public void testNullConstructor() throws Exception {\n         new InputStreamEntity(null, 0, null);\n     }\n \n@@ -119,7 +119,7 @@ public void testWriteToUnknownLength() throws Exception {\n         Assert.assertEquals(message, s);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test(expected = NullPointerException.class)\n     public void testWriteToNull() throws Exception {\n         final InputStreamEntity entity = new InputStreamEntity(EmptyInputStream.INSTANCE, 0, null);\n         entity.writeTo(null);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestSerializableEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestSerializableEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestSerializableEntity.java",
                "deletions": 2,
                "sha": "ac72cb5820a92ec2e46d90ef50717beb1546fbaf",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestSerializableEntity.java",
                "patch": "@@ -82,8 +82,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             httpentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestStringEntity.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestStringEntity.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestStringEntity.java",
                "deletions": 5,
                "sha": "c7694effe657058224346fb8c2e53b2aa6483aae",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/io/entity/TestStringEntity.java",
                "patch": "@@ -53,11 +53,11 @@ public void testBasics() throws Exception {\n     }\n \n     @Test\n-    public void testIllegalConstructor() throws Exception {\n+    public void testNullConstructor() throws Exception {\n         try {\n             new StringEntity(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -126,8 +126,8 @@ public void testWriteTo() throws Exception {\n \n         try {\n             httpentity.writeTo(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeader.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeader.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeader.java",
                "deletions": 2,
                "sha": "87fba77f55b174816544b01f5234316c5525fa0e",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeader.java",
                "patch": "@@ -46,8 +46,8 @@ public void testConstructor() {\n     public void testInvalidName() {\n         try {\n             new BasicHeader(null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             //expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderIterator.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderIterator.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderIterator.java",
                "deletions": 1,
                "sha": "0c5700011076b8d6fc303023652caa425f53ab13",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderIterator.java",
                "patch": "@@ -221,7 +221,7 @@ public void testInvalid() {\n         try {\n             hit = new BasicHeaderIterator(null, \"whatever\");\n             Assert.fail(\"null headers not detected\");\n-        } catch (final IllegalArgumentException iax) {\n+        } catch (final NullPointerException iax) {\n             // expected\n         }\n ",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 16,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderValueFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderValueFormatter.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderValueFormatter.java",
                "deletions": 16,
                "sha": "a3f7ed47e99af0d381d69a06921f295508434101",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicHeaderValueFormatter.java",
                "patch": "@@ -171,51 +171,51 @@ public void testInvalidArguments() throws Exception {\n \n         try {\n             this.formatter.formatNameValuePair(null, param, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatNameValuePair(buf, null, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatParameters(null, params, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatParameters(buf, null, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n \n         try {\n             this.formatter.formatHeaderElement(null, element, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatHeaderElement(buf, null, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatElements(null, elements, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatElements(buf, null, false);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 32
            },
            {
                "status": "modified",
                "additions": 12,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicLineFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicLineFormatter.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicLineFormatter.java",
                "deletions": 12,
                "sha": "9ce8f9c08942b8494b19d006a44f3aad14375ff4",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicLineFormatter.java",
                "patch": "@@ -69,14 +69,14 @@ public void testRLFormattingInvalidInput() throws Exception {\n         final RequestLine requestline = new RequestLine(Method.GET.name(), \"/stuff\", HttpVersion.HTTP_1_1);\n         try {\n             this.formatter.formatRequestLine(null, requestline);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatRequestLine(buf, null);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -102,14 +102,14 @@ public void testSLFormattingInvalidInput() throws Exception {\n         final StatusLine statusline = new StatusLine(HttpVersion.HTTP_1_1, HttpStatus.SC_OK, \"OK\");\n         try {\n             this.formatter.formatStatusLine(null, statusline);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatStatusLine(buf, null);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -133,14 +133,14 @@ public void testHeaderFormattingInvalidInput() throws Exception {\n         final Header header = new BasicHeader(\"name\", \"value\");\n         try {\n             this.formatter.formatHeader(null, header);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             this.formatter.formatHeader(buf, null);\n-            Assert.fail(\"IllegalArgumentException should habe been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should habe been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 24
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicMessages.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicMessages.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicMessages.java",
                "deletions": 2,
                "sha": "760bf8c812a6e798940d1a665d098290b32a4a5e",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicMessages.java",
                "patch": "@@ -88,8 +88,8 @@ public void testDefaultRequestConstructors() {\n \n         try {\n             new BasicHttpRequest(Method.GET, (URI) null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicTokenIterator.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicTokenIterator.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicTokenIterator.java",
                "deletions": 1,
                "sha": "78ae150f4b59b5575d67b9ef87e84e216398394d",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestBasicTokenIterator.java",
                "patch": "@@ -184,7 +184,7 @@ public void testWrongPublic() {\n         try {\n             new BasicTokenIterator(null);\n             Assert.fail(\"null argument not detected\");\n-        } catch (final IllegalArgumentException iax) {\n+        } catch (final NullPointerException iax) {\n             // expected\n         }\n ",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeader.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeader.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeader.java",
                "deletions": 2,
                "sha": "db2ae7f307dd3a8830e447a47ad4da09ae09a84e",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeader.java",
                "patch": "@@ -59,8 +59,8 @@ public void testBasicConstructorNullValue() {\n     public void testInvalidName() {\n         try {\n             new BasicHeader(null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             //expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeaderElement.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeaderElement.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeaderElement.java",
                "deletions": 4,
                "sha": "2193870a97bb4cbc93de1cb47aa5dbb0844c3fae",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestHeaderElement.java",
                "patch": "@@ -65,8 +65,8 @@ public void testConstructor2() throws Exception {\n     public void testInvalidName() {\n         try {\n             new BasicHeaderElement(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             //expected\n         }\n     }\n@@ -83,8 +83,8 @@ public void testParamByName() throws Exception {\n         Assert.assertNull(element.getParameterByName(\"param3\"));\n         try {\n             element.getParameterByName(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             //expected\n         }\n     }",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestNameValuePair.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestNameValuePair.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/message/TestNameValuePair.java",
                "deletions": 2,
                "sha": "1dcccca70c601d4fdb12e4b2d81c1e828e512f33",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/message/TestNameValuePair.java",
                "patch": "@@ -48,8 +48,8 @@ public void testConstructor() {\n     public void testInvalidName() {\n         try {\n             new BasicNameValuePair(null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             //expected\n         }\n     }",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestHttpExecutionContext.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestHttpExecutionContext.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestHttpExecutionContext.java",
                "deletions": 6,
                "sha": "58be10d31d9bcabc1f07cb52e3f7df93ecaf298b",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestHttpExecutionContext.java",
                "patch": "@@ -77,20 +77,20 @@ public void testContextInvalidInput() throws Exception {\n         final HttpContext currentContext = new BasicHttpContext(null);\n         try {\n             currentContext.setAttribute(null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             currentContext.getAttribute(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             currentContext.removeAttribute(null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 24,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestStandardInterceptors.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestStandardInterceptors.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestStandardInterceptors.java",
                "deletions": 24,
                "sha": "8ed0f1e235eba6557aa95514248d544bfb5b948d",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestStandardInterceptors.java",
                "patch": "@@ -103,8 +103,8 @@ public void testRequestConnControlInvalidInput() throws Exception {\n         final RequestConnControl interceptor = new RequestConnControl();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -252,8 +252,8 @@ public void testRequestContentInvalidInput() throws Exception {\n         final RequestContent interceptor = new RequestContent();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -360,8 +360,8 @@ public void testRequestExpectContinueInvalidInput() throws Exception {\n         final RequestExpectContinue interceptor = new RequestExpectContinue();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -429,14 +429,14 @@ public void testRequestTargetHostInvalidInput() throws Exception {\n         final RequestTargetHost interceptor = new RequestTargetHost();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             interceptor.process(new BasicClassicHttpRequest(Method.GET, \"/\"), null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -503,8 +503,8 @@ public void testRequestUserAgentInvalidInput() throws Exception {\n         final RequestUserAgent interceptor = new RequestUserAgent();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -699,15 +699,15 @@ public void testResponseConnControlHostInvalidInput() throws Exception {\n         final ResponseConnControl interceptor = new ResponseConnControl();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n         try {\n             final ClassicHttpResponse response = new BasicClassicHttpResponse(HttpStatus.SC_OK, \"OK\");\n             interceptor.process(response, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -835,8 +835,8 @@ public void testResponseContentInvalidInput() throws Exception {\n         final ResponseContent interceptor = new ResponseContent();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -929,8 +929,8 @@ public void testResponseDateInvalidInput() throws Exception {\n         final ResponseDate interceptor = new ResponseDate();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -966,8 +966,8 @@ public void testRequestDateInvalidInput() throws Exception {\n         final RequestDate interceptor = new RequestDate();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }\n@@ -1010,8 +1010,8 @@ public void testResponseServerInvalidInput() throws Exception {\n         final ResponseServer interceptor = new ResponseServer();\n         try {\n             interceptor.process(null, null, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException ex) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException ex) {\n             // expected\n         }\n     }",
                "changes": 48
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternMatcher.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternMatcher.java",
                "deletions": 3,
                "sha": "ac77aeee91daf7284bdc362998dcdecf933f9adc",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternMatcher.java",
                "patch": "@@ -76,7 +76,7 @@ public void testRegisterUnregister() throws Exception {\n         Assert.assertNull(h);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testRegisterNull() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternMatcher<>();\n         matcher.register(null, null);\n@@ -154,13 +154,13 @@ public void testSuffixPatternOverPrefixPatternMatch() throws Exception {\n         Assert.assertTrue(h1 == h);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testRegisterInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternMatcher<>();\n         matcher.register(null, null);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testLookupInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternMatcher<>();\n         matcher.lookup(null);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternOrderedMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternOrderedMatcher.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternOrderedMatcher.java",
                "deletions": 3,
                "sha": "f9b575a9a402a8ea05df570fb1ef8f6117bd67e7",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriPatternOrderedMatcher.java",
                "patch": "@@ -76,7 +76,7 @@ public void testRegisterUnregister() throws Exception {\n         Assert.assertNull(h);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testRegisterNull() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternOrderedMatcher<>();\n         matcher.register(null, null);\n@@ -154,13 +154,13 @@ public void testSuffixPatternOverPrefixPatternMatch() throws Exception {\n         Assert.assertTrue(h1 == h);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testRegisterInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternOrderedMatcher<>();\n         matcher.register(null, null);\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testLookupInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriPatternOrderedMatcher<>();\n         matcher.lookup(null);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriRegexMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriRegexMatcher.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriRegexMatcher.java",
                "deletions": 3,
                "sha": "56ca167c7cb83c402b6e37b175425a22619af8de",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/http/protocol/TestUriRegexMatcher.java",
                "patch": "@@ -60,7 +60,7 @@ public void testRegisterUnregister() throws Exception {\n         Assert.assertNull(h);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test(expected = NullPointerException.class)\n     public void testRegisterNull() throws Exception {\n         final LookupRegistry<Object> matcher = new UriRegexMatcher<>();\n         matcher.register(null, null);\n@@ -196,13 +196,13 @@ public void testSuffixPatternOverPrefixPatternMatch() throws Exception {\n         Assert.assertTrue(h1 == h);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test(expected = NullPointerException.class)\n     public void testRegisterInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriRegexMatcher<>();\n         matcher.register(null, null);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test(expected = NullPointerException.class)\n     public void testLookupInvalidInput() throws Exception {\n         final LookupRegistry<Object> matcher = new UriRegexMatcher<>();\n         matcher.lookup(null);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/net/TestHost.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/net/TestHost.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/net/TestHost.java",
                "deletions": 2,
                "sha": "23c58802fef78597ee4dc326f992b22524109f0d",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/net/TestHost.java",
                "patch": "@@ -52,8 +52,8 @@ public void testConstructor() {\n         Assert.assertEquals(0, host2.getPort());\n         try {\n             new Host(null, 0);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             new Host(\"blah\", -1);",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestLaxConnPool.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/pool/TestLaxConnPool.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/pool/TestLaxConnPool.java",
                "deletions": 6,
                "sha": "8547ff2e5d7e97fed982c97827185b394af9e816",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestLaxConnPool.java",
                "patch": "@@ -102,12 +102,12 @@ public void testLeaseRelease() throws Exception {\n     }\n \n     @Test\n-    public void testLeaseIllegal() throws Exception {\n+    public void testLeaseInvalid() throws Exception {\n         final LaxConnPool<String, HttpConnection> pool = new LaxConnPool<>(2);\n         try {\n             pool.lease(null, null, Timeout.ZERO_MILLISECONDS, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n     }\n \n@@ -372,7 +372,7 @@ public void testLeaseRequestCanceled() throws Exception {\n         Assert.assertEquals(0, totals.getLeased());\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testGetStatsInvalid() throws Exception {\n         final LaxConnPool<String, HttpConnection> pool = new LaxConnPool<>(2);\n         pool.getStats(null);\n@@ -383,8 +383,8 @@ public void testSetMaxInvalid() throws Exception {\n         final LaxConnPool<String, HttpConnection> pool = new LaxConnPool<>(2);\n         try {\n             pool.setMaxPerRoute(null, 1);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             pool.setDefaultMaxPerRoute(-1);",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestPoolEntry.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/pool/TestPoolEntry.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/pool/TestPoolEntry.java",
                "deletions": 3,
                "sha": "97aafe688e10ad3b0d2970a56b7a9f8106312a8d",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestPoolEntry.java",
                "patch": "@@ -78,8 +78,8 @@ public void testBasics() throws Exception {\n         Assert.assertEquals(Deadline.MIN_VALUE, entry1.getExpiryDeadline());\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n-    public void testInvalidConstruction() throws Exception {\n+    @Test(expected = NullPointerException.class)\n+    public void testNullConstructor() throws Exception {\n         new PoolEntry<String, HttpConnection>(null);\n     }\n \n@@ -114,7 +114,7 @@ public void testExpiry() throws Exception {\n         Assert.assertEquals(validityDeadline, entry2.getExpiryDeadline());\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testInvalidExpiry() throws Exception {\n         final PoolEntry<String, HttpConnection> entry = new PoolEntry<>(\n                 \"route1\", TimeValue.of(0L, TimeUnit.MILLISECONDS), currentTimeSupplier);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestStrictConnPool.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/pool/TestStrictConnPool.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/pool/TestStrictConnPool.java",
                "deletions": 7,
                "sha": "a0484d2d18b65222101bed677e4668fa3faa5275",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/pool/TestStrictConnPool.java",
                "patch": "@@ -112,17 +112,17 @@ public void testLeaseRelease() throws Exception {\n     }\n \n     @Test\n-    public void testLeaseIllegal() throws Exception {\n+    public void testLeaseInvalid() throws Exception {\n         final StrictConnPool<String, HttpConnection> pool = new StrictConnPool<>(2, 10);\n         try {\n             pool.lease(null, null, Timeout.ZERO_MILLISECONDS, null);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             pool.lease(\"somehost\", null, null, null);\n             Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+        } catch (final NullPointerException expected) {\n         }\n     }\n \n@@ -604,7 +604,7 @@ public void testLeaseRequestCanceled() throws Exception {\n         Assert.assertEquals(0, totals.getLeased());\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testGetStatsInvalid() throws Exception {\n         final StrictConnPool<String, HttpConnection> pool = new StrictConnPool<>(2, 2);\n         pool.getStats(null);\n@@ -620,8 +620,8 @@ public void testSetMaxInvalid() throws Exception {\n         }\n         try {\n             pool.setMaxPerRoute(null, 1);\n-            Assert.fail(\"IllegalArgumentException should have been thrown\");\n-        } catch (final IllegalArgumentException expected) {\n+            Assert.fail(\"NullPointerException should have been thrown\");\n+        } catch (final NullPointerException expected) {\n         }\n         try {\n             pool.setDefaultMaxPerRoute(-1);",
                "changes": 14
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/util/TestArgs.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore5/src/test/java/org/apache/hc/core5/util/TestArgs.java?ref=4df046258ebbb2da6a5a66c24e656f6229516710",
                "filename": "httpcore5/src/test/java/org/apache/hc/core5/util/TestArgs.java",
                "deletions": 4,
                "sha": "f82a8c9b39a8ecd56940d6d98892b1b2c467ed41",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4df046258ebbb2da6a5a66c24e656f6229516710/httpcore5/src/test/java/org/apache/hc/core5/util/TestArgs.java",
                "patch": "@@ -55,7 +55,7 @@ public void testArgNotNullPass() {\n         Assert.assertSame(stuff, Args.notNull(stuff, \"Stuff\"));\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testArgNotNullFail() {\n         Args.notNull(null, \"Stuff\");\n     }\n@@ -66,7 +66,7 @@ public void testArgNotEmptyPass() {\n         Assert.assertSame(stuff, Args.notEmpty(stuff, \"Stuff\"));\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testArgNotEmptyFail1() {\n         Args.notEmpty((String) null, \"Stuff\");\n     }\n@@ -76,7 +76,7 @@ public void testArgNotEmptyFail2() {\n         Args.notEmpty(\"\", \"Stuff\");\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testArgNotBlankFail1() {\n         Args.notBlank((String) null, \"Stuff\");\n     }\n@@ -97,7 +97,7 @@ public void testArgCollectionNotEmptyPass() {\n         Assert.assertSame(list, Args.notEmpty(list, \"List\"));\n     }\n \n-    @Test(expected=IllegalArgumentException.class)\n+    @Test(expected=NullPointerException.class)\n     public void testArgCollectionNotEmptyFail1() {\n         Args.notEmpty((List<?>) null, \"List\");\n     }",
                "changes": 8
            }
        ],
        "unit_tests": [
            "TestDefaultConnectionReuseStrategy.java",
            "TestHttpService.java",
            "TestBasicLineFormatter.java",
            "TestHttpEntityWrapper.java",
            "TestBufferedHttpEntity.java",
            "TestEntityUtils.java",
            "TestLengthDelimitedDecoder.java",
            "TestLengthDelimitedEncoder.java",
            "TestUriRegexMatcher.java",
            "TestPoolEntry.java",
            "TestChunkDecoder.java",
            "TestHost.java",
            "TestIdentityDecoder.java",
            "TestInputStreamEntity.java",
            "TestStrictConnPool.java",
            "TestHeader.java",
            "TestStandardInterceptors.java",
            "TestBasicHeaderIterator.java",
            "TestIdentityEncoder.java",
            "TestSerializableEntity.java",
            "TestUriPatternMatcher.java",
            "TestUriPatternOrderedMatcher.java",
            "TestHttpRequestExecutor.java",
            "TestHttpHost.java",
            "TestByteArrayEntity.java",
            "TestBasicHeader.java",
            "TestFileEntity.java",
            "TestStringEntity.java",
            "TestLaxConnPool.java",
            "TestChunkEncoder.java",
            "TestByteBufferEntity.java",
            "TestArgs.java",
            "TestBasicHeaderValueFormatter.java",
            "TestHttpExecutionContext.java",
            "TestBasicMessages.java",
            "TestContentType.java",
            "TestNameValuePair.java",
            "TestHeaderElement.java",
            "TestBasicTokenIterator.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "httpcore5/src/test/java/org/apache/hc/core5/http/impl/TestDefaultConnectionReuseStrategy.java",
        "buggy_files": [
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/ByteBufferEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/DefaultConnectionReuseStrategy.java",
            "httpcore5/src/main/java/org/apache/hc/core5/pool/LaxConnPool.java",
            "httpcore5/src/main/java/org/apache/hc/core5/util/Args.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/SerializableEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/protocol/UriPatternOrderedMatcher.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/FileEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/pool/PoolEntry.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/ChunkDecoder.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/BufferedHttpEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/protocol/UriRegexMatcher.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/LengthDelimitedEncoder.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/message/BasicHeaderIterator.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/message/BasicLineFormatter.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/HttpHost.java",
            "httpcore5/src/main/java/org/apache/hc/core5/net/Host.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/HeaderElement.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/InputStreamEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/HttpEntityWrapper.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/EntityUtils.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/message/BasicTokenIterator.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/io/HttpRequestExecutor.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/LengthDelimitedDecoder.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/NameValuePair.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/IdentityEncoder.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/message/BasicHeaderValueFormatter.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/Header.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/io/HttpService.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/ChunkEncoder.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/protocol/UriPatternMatcher.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/ContentType.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/message/BasicHeader.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/StringEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/io/entity/ByteArrayEntity.java",
            "httpcore5/src/main/java/org/apache/hc/core5/pool/StrictConnPool.java",
            "httpcore5/src/main/java/org/apache/hc/core5/http/impl/nio/IdentityDecoder.java"
        ],
        "fixed": true
    }
]