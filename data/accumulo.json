{
    "accumulo_0e3fd3b": {
        "bug_id": "accumulo_0e3fd3b",
        "commit": "https://github.com/apache/accumulo/commit/0e3fd3b3cc26496f5a3e898c52f8fded16a5f203",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/accumulo/blob/0e3fd3b3cc26496f5a3e898c52f8fded16a5f203/server/base/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/base/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java?ref=0e3fd3b3cc26496f5a3e898c52f8fded16a5f203",
                "deletions": 1,
                "filename": "server/base/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "patch": "@@ -52,7 +52,10 @@ private TabletBalancer constructNewBalancerForTable(String clazzName, String tab\n   }\n \n   protected String getLoadBalancerClassNameForTable(String table) {\n-    if (TableManager.getInstance().getTableState(table).equals(TableState.ONLINE))\n+    TableState tableState = TableManager.getInstance().getTableState(table);\n+    if (tableState == null)\n+      return null;\n+    if (tableState.equals(TableState.ONLINE))\n       return configuration.getTableConfiguration(table).get(Property.TABLE_LOAD_BALANCER);\n     return null;\n   }",
                "raw_url": "https://github.com/apache/accumulo/raw/0e3fd3b3cc26496f5a3e898c52f8fded16a5f203/server/base/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "sha": "f2478b1979b6d9a528556989d346ca8b9ec1b72c",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-2028 avoid NPE during a table delete when balancing",
        "parent": "https://github.com/apache/accumulo/commit/37c9a76017eac42577fbbc4c217f2af76ea84779",
        "repo": "accumulo",
        "unit_tests": [
            "TableLoadBalancerTest.java"
        ]
    },
    "accumulo_17d26bd": {
        "bug_id": "accumulo_17d26bd",
        "commit": "https://github.com/apache/accumulo/commit/17d26bda481a5b62295d9c5f56b58680005d6b14",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/accumulo/blob/17d26bda481a5b62295d9c5f56b58680005d6b14/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java?ref=17d26bda481a5b62295d9c5f56b58680005d6b14",
                "deletions": 1,
                "filename": "server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.accumulo.core.master.thrift.TabletServerStatus;\n import org.apache.accumulo.core.tabletserver.thrift.TabletStats;\n import org.apache.accumulo.server.conf.ServerConfiguration;\n+import org.apache.accumulo.server.conf.ServerConfigurationFactory;\n import org.apache.accumulo.server.master.state.TServerInstance;\n import org.apache.accumulo.server.master.state.TabletMigration;\n import org.apache.commons.lang.builder.ToStringBuilder;\n@@ -254,7 +255,7 @@ public int getMaxConcurrentMigrations() {\n   }\n \n   @Override\n-  public void init(ServerConfiguration conf) {\n+  public void init(ServerConfigurationFactory conf) {\n     super.init(conf);\n     parseConfiguration(conf);\n   }",
                "raw_url": "https://github.com/apache/accumulo/raw/17d26bda481a5b62295d9c5f56b58680005d6b14/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "sha": "6b26dc4c7ffee019527788b388d91fb94099469b",
                "status": "modified"
            }
        ],
        "message": "[ACCUMULO-4535] Fix NPE in HostRegexTableLoadBalancer\n\nSigned-off-by: Josh Elser <elserj@apache.org>",
        "parent": "https://github.com/apache/accumulo/commit/3bd701b883492f06766631af30e7b08f14d3454c",
        "repo": "accumulo",
        "unit_tests": [
            "HostRegexTableLoadBalancerTest.java"
        ]
    },
    "accumulo_35a6746": {
        "bug_id": "accumulo_35a6746",
        "commit": "https://github.com/apache/accumulo/commit/35a67466b6685b6cb03e727585701b3029163cdf",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/accumulo/blob/35a67466b6685b6cb03e727585701b3029163cdf/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java?ref=35a67466b6685b6cb03e727585701b3029163cdf",
                "deletions": 0,
                "filename": "server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "patch": "@@ -70,6 +70,7 @@ protected TabletBalancer getBalancerForTable(String table) {\n           if (newBalancer != null) {\n             balancer = newBalancer;\n             perTableBalancers.put(table, balancer);\n+            balancer.init(configuration);\n           }\n         } catch (Exception e) {\n           log.warn(\"Failed to load table balancer class \", e);\n@@ -89,6 +90,7 @@ protected TabletBalancer getBalancerForTable(String table) {\n         balancer = new DefaultLoadBalancer(table);\n       }\n       perTableBalancers.put(table, balancer);\n+      balancer.init(configuration);\n     }\n     return balancer;\n   }",
                "raw_url": "https://github.com/apache/accumulo/raw/35a67466b6685b6cb03e727585701b3029163cdf/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "sha": "c57e1e182941a30f979f0b69dba544eec8558df8",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-590 fixed NPE in Table load balancer\n\ngit-svn-id: https://svn.apache.org/repos/asf/accumulo/trunk@1337149 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/8fad5e736750868dc563caeb9cf89c38005f034a",
        "repo": "accumulo",
        "unit_tests": [
            "TableLoadBalancerTest.java"
        ]
    },
    "accumulo_3c513c8": {
        "bug_id": "accumulo_3c513c8",
        "commit": "https://github.com/apache/accumulo/commit/3c513c894d711dd6d52e798a239b893ea94aa124",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/accumulo/blob/3c513c894d711dd6d52e798a239b893ea94aa124/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java?ref=3c513c894d711dd6d52e798a239b893ea94aa124",
                "deletions": 4,
                "filename": "server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "patch": "@@ -3118,9 +3118,15 @@ private SplitRowSpec findSplitRow(Collection<String> files) {\n       } else {\n         lastRow = extent.getEndRow();\n       }\n-      \n+\n+      // We expect to get a midPoint for this set of files. If we don't get one, we have a problem.\n+      final Key mid = keys.get(.5);\n+      if (null == mid) {\n+        throw new IllegalStateException(\"Could not determine midpoint for files\");\n+      }\n+\n       // check to see that the midPoint is not equal to the end key\n-      if (keys.get(.5).compareRow(lastRow) == 0) {\n+      if (mid.compareRow(lastRow) == 0) {\n         if (keys.firstKey() < .5) {\n           Key candidate = keys.get(keys.firstKey());\n           if (candidate.compareRow(lastRow) != 0) {\n@@ -3140,8 +3146,7 @@ private SplitRowSpec findSplitRow(Collection<String> files) {\n         \n         return null;\n       }\n-      Key mid = keys.get(.5);\n-      Text text = (mid == null) ? null : mid.getRow();\n+      Text text = mid.getRow();\n       SortedMap<Double,Key> firstHalf = keys.headMap(.5);\n       if (firstHalf.size() > 0) {\n         Text beforeMid = firstHalf.get(firstHalf.lastKey()).getRow();",
                "raw_url": "https://github.com/apache/accumulo/raw/3c513c894d711dd6d52e798a239b893ea94aa124/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "sha": "a1fc70747f46b6edb8ef3586e80aede239b1b34f",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-2870 Fail hard and fast if we don't calculate a midpoint.\n\nBy failing early, we catch the change in functionality from FileUtil.findMidPoint\nwhich always returns a mid-point. Also prevents an NPE from unexpectedly being thrown.",
        "parent": "https://github.com/apache/accumulo/commit/9f3cbb30de0fa1115d70cacdccda4e290ad657be",
        "repo": "accumulo",
        "unit_tests": [
            "TabletTest.java"
        ]
    },
    "accumulo_7918299": {
        "bug_id": "accumulo_7918299",
        "commit": "https://github.com/apache/accumulo/commit/79182991d0da0f7b7836a901cec78b3ea570808c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/accumulo/blob/79182991d0da0f7b7836a901cec78b3ea570808c/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java?ref=79182991d0da0f7b7836a901cec78b3ea570808c",
                "deletions": 0,
                "filename": "server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "patch": "@@ -320,6 +320,9 @@ public long balance(SortedMap<TServerInstance,TabletServerStatus> current, Set<K\n             }\n             try {\n               List<TabletStats> outOfBoundsTablets = getOnlineTabletsForTable(e.getKey(), tid);\n+              if (null == outOfBoundsTablets) {\n+                continue;\n+              }\n               Random random = new Random();\n               for (TabletStats ts : outOfBoundsTablets) {\n                 KeyExtent ke = new KeyExtent(ts.getExtent());",
                "raw_url": "https://github.com/apache/accumulo/raw/79182991d0da0f7b7836a901cec78b3ea570808c/server/base/src/main/java/org/apache/accumulo/server/master/balancer/HostRegexTableLoadBalancer.java",
                "sha": "d19ab82d078bbced21ea832f34ed8ec46640f020",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-4196: Protect against NPE",
        "parent": "https://github.com/apache/accumulo/commit/e77bdd7de25af87c53da6e5a3727c028956c1e00",
        "repo": "accumulo",
        "unit_tests": [
            "HostRegexTableLoadBalancerTest.java"
        ]
    },
    "accumulo_80f8afb": {
        "bug_id": "accumulo_80f8afb",
        "commit": "https://github.com/apache/accumulo/commit/80f8afb10c69bf337ffd7301e21f729c1c0ce27b",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/accumulo/blob/80f8afb10c69bf337ffd7301e21f729c1c0ce27b/src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java?ref=80f8afb10c69bf337ffd7301e21f729c1c0ce27b",
                "deletions": 0,
                "filename": "src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java",
                "patch": "@@ -78,6 +78,10 @@ static TabletTime getInstance(String metadataValue) {\n   }\n   \n   public static String maxMetadataTime(String mv1, String mv2) {\n+    if (mv1 == null && mv2 == null) {\n+      return null;\n+    }\n+    \n     if (mv1 == null) {\n       checkType(mv2);\n       return mv2;",
                "raw_url": "https://github.com/apache/accumulo/raw/80f8afb10c69bf337ffd7301e21f729c1c0ce27b/src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java",
                "sha": "3ba84459f4307a74790f48d84549a55811121080",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-2523 TabletTime.maxMetadataTime NPE if both arguments are null\n\nSigned-off-by: Bill Havanki <bhavanki@cloudera.com>",
        "parent": "https://github.com/apache/accumulo/commit/92c41719bfc9cce7cb222c96155650bc11a288fb",
        "repo": "accumulo",
        "unit_tests": [
            "TabletTimeTest.java"
        ]
    },
    "accumulo_8fad5e7": {
        "bug_id": "accumulo_8fad5e7",
        "commit": "https://github.com/apache/accumulo/commit/8fad5e736750868dc563caeb9cf89c38005f034a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/accumulo/blob/8fad5e736750868dc563caeb9cf89c38005f034a/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java?ref=8fad5e736750868dc563caeb9cf89c38005f034a",
                "deletions": 7,
                "filename": "server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "patch": "@@ -32,7 +32,6 @@\n import org.apache.accumulo.core.data.KeyExtent;\n import org.apache.accumulo.core.master.thrift.TabletServerStatus;\n import org.apache.accumulo.server.client.HdfsZooInstance;\n-import org.apache.accumulo.server.conf.ServerConfiguration;\n import org.apache.accumulo.server.master.state.TServerInstance;\n import org.apache.accumulo.server.master.state.TabletMigration;\n import org.apache.accumulo.server.security.SecurityConstants;\n@@ -44,11 +43,6 @@\n   private static final Logger log = Logger.getLogger(TableLoadBalancer.class);\n   \n   Map<String,TabletBalancer> perTableBalancers = new HashMap<String,TabletBalancer>();\n-  ServerConfiguration config;\n-  \n-  public void init(ServerConfiguration config) {\n-    this.config = config;\n-  }\n   \n   private TabletBalancer constructNewBalancerForTable(String clazzName, String table) throws Exception {\n     Class<? extends TabletBalancer> clazz = AccumuloClassLoader.loadClass(clazzName, TabletBalancer.class);\n@@ -57,7 +51,7 @@ private TabletBalancer constructNewBalancerForTable(String clazzName, String tab\n   }\n   \n   protected String getLoadBalancerClassNameForTable(String table) {\n-    return config.getTableConfiguration(table).get(Property.TABLE_LOAD_BALANCER);\n+    return configuration.getTableConfiguration(table).get(Property.TABLE_LOAD_BALANCER);\n   }\n   \n   protected TabletBalancer getBalancerForTable(String table) {",
                "raw_url": "https://github.com/apache/accumulo/raw/8fad5e736750868dc563caeb9cf89c38005f034a/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java",
                "sha": "3598504ac332bb057a06bb914905e15a2936db89",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-590 fixed NPE in Table load balancer\n\ngit-svn-id: https://svn.apache.org/repos/asf/accumulo/trunk@1337131 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/4a7d4b91461454ac047611dd51e0d20a51e92a2b",
        "repo": "accumulo",
        "unit_tests": [
            "TableLoadBalancerTest.java"
        ]
    },
    "accumulo_c3ca5e7": {
        "bug_id": "accumulo_c3ca5e7",
        "commit": "https://github.com/apache/accumulo/commit/c3ca5e770792368311f55717d8c4b0a0bdc5b7e7",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/accumulo/blob/c3ca5e770792368311f55717d8c4b0a0bdc5b7e7/src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java?ref=c3ca5e770792368311f55717d8c4b0a0bdc5b7e7",
                "deletions": 8,
                "filename": "src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "patch": "@@ -1388,10 +1388,6 @@ private Tablet(final TabletServer tabletServer,\n \t\ttabletTime = TabletTime.getInstance(time);\n \t\tpersistedTime = tabletTime.getTime();\n \t\t\n-\t\tconstraintChecker.set(ConstraintLoader.load(extent.getTableId().toString()));\n-\n-\t\t\n-\n \t\tacuTableConf.addObserver(configObserver = new ConfigurationObserver(){\n \n \t\t\tprivate void reloadConstraints(){\n@@ -3049,6 +3045,9 @@ private CompactionStats _majorCompact(MajorCompactionReason reason) throws IOExc\n \t\tMap<String, Long> filesToCompact;\n \t\t\n \t\tint maxFilesToCompact = acuTableConf.getCount(Property.TSERV_MAJC_THREAD_MAXOPEN);\n+\t\t\n+\t\tCompactionStats majCStats = new CompactionStats();\n+\n \t\tsynchronized(this) {\n \t\t\t//plan all that work that needs to be done in the sync block... then do the actual work\n \t\t\t//outside the sync block\n@@ -3078,7 +3077,7 @@ private CompactionStats _majorCompact(MajorCompactionReason reason) throws IOExc\n \t\t\tCompactionTuple ret = getFilesToCompact(reason, falks);\n \t\t\tif(ret == null){\n \t\t\t\t//nothing to compact\n-\t\t\t\treturn null;\n+        return majCStats;\n \t\t\t}\n \t\t\tfilesToCompact = ret.getFilesToCompact();\n \n@@ -3105,8 +3104,6 @@ private CompactionStats _majorCompact(MajorCompactionReason reason) throws IOExc\n \t\t\t\t//compacting everything, so update the compaction id in !METADATA\n \t\t\t\tcompactionId = getCompactionID();\n \t\t\t}\n-\t\t\t\n-\t\t\tCompactionStats majCStats = new CompactionStats();\n \n \t\t\t//need to handle case where only one file is being major compacted\n \t\t\twhile(filesToCompact.size() > 0) {\n@@ -3252,7 +3249,7 @@ private CompactionStats majorCompact(MajorCompactionReason reason) {\n \t\t\t\tmajorCompactionInProgress = false;\n \t\t\t\tthis.notifyAll();\n \t\t\t}\n-\t\t\t//TODO majCStats could be null\n+\n \t\t\tSpan curr = Trace.currentTrace();\n \t\t\tcurr.data(\"extent\",  \"\"+getExtent());\n \t\t\tcurr.data(\"read\",    \"\"+majCStats.getEntriesRead());",
                "raw_url": "https://github.com/apache/accumulo/raw/c3ca5e770792368311f55717d8c4b0a0bdc5b7e7/src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java",
                "sha": "3f5fbeef7c4af295bb9368a32b9934913fbdc3b2",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-20 committing patch that fixes NPE and removes redundant reload of contraints\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/accumulo/trunk@1182972 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/f13ce13b70ef0f5858738ab4f3ec08483fe227c3",
        "repo": "accumulo",
        "unit_tests": [
            "TabletTest.java"
        ]
    },
    "accumulo_c5aac49": {
        "bug_id": "accumulo_c5aac49",
        "commit": "https://github.com/apache/accumulo/commit/c5aac49ed299b7c6eee534333cf080b638bcdecd",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/accumulo/blob/c5aac49ed299b7c6eee534333cf080b638bcdecd/server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java?ref=c5aac49ed299b7c6eee534333cf080b638bcdecd",
                "deletions": 6,
                "filename": "server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java",
                "patch": "@@ -148,12 +148,7 @@ public boolean process(TProtocol in, TProtocol out) throws TException {\n         metrics.add(ThriftMetrics.idle, (now - idleStart));\n       }\n       try {\n-        try {\n-          return other.process(in, out);\n-        } catch (NullPointerException ex) {\n-          // THRIFT-1447 - remove with thrift 0.9\n-          return true;\n-        }\n+        return other.process(in, out);\n       } finally {\n         if (metrics.isEnabled()) {\n           idleStart = System.currentTimeMillis();",
                "raw_url": "https://github.com/apache/accumulo/raw/c5aac49ed299b7c6eee534333cf080b638bcdecd/server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java",
                "sha": "f185661dcfd8a70e69616ec228dbe65a544c3908",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-2410 TServerUtils no longer needs to catch NPE as a thrift bug workaround\n\nSigned-off-by: John Vines <vines@apache.org>",
        "parent": "https://github.com/apache/accumulo/commit/53ec68999a416d96a0bd3c8d92a6311c8b69987b",
        "repo": "accumulo",
        "unit_tests": [
            "TServerUtilsTest.java"
        ]
    },
    "accumulo_c79cb06": {
        "bug_id": "accumulo_c79cb06",
        "commit": "https://github.com/apache/accumulo/commit/c79cb06b345dbf43ebe34ab17bf60f517f27ca5f",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/accumulo/blob/c79cb06b345dbf43ebe34ab17bf60f517f27ca5f/src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java?ref=c79cb06b345dbf43ebe34ab17bf60f517f27ca5f",
                "deletions": 7,
                "filename": "src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java",
                "patch": "@@ -305,7 +305,7 @@ public static boolean isLockHeld(ZooKeeper zk, LockID lid) throws KeeperExceptio\n     \n     List<String> children = zk.getChildren(lid.path, false);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       return false;\n     }\n     \n@@ -323,7 +323,7 @@ public static boolean isLockHeld(ZooCache zc, LockID lid) {\n     \n     List<String> children = zc.getChildren(lid.path);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       return false;\n     }\n     \n@@ -341,7 +341,7 @@ public static boolean isLockHeld(ZooCache zc, LockID lid) {\n   public static byte[] getLockData(ZooKeeper zk, String path) throws KeeperException, InterruptedException {\n     List<String> children = zk.getChildren(path, false);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       return null;\n     }\n     \n@@ -356,7 +356,7 @@ public static boolean isLockHeld(ZooCache zc, LockID lid) {\n     \n     List<String> children = zc.getChildren(path);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       return null;\n     }\n     \n@@ -381,7 +381,7 @@ public static boolean isLockHeld(ZooCache zc, LockID lid) {\n   public static long getSessionId(ZooCache zc, String path) throws KeeperException, InterruptedException {\n     List<String> children = zc.getChildren(path);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       return 0;\n     }\n     \n@@ -406,7 +406,7 @@ public static void deleteLock(String path) throws InterruptedException, KeeperEx\n     IZooReaderWriter zk = ZooReaderWriter.getInstance();\n     children = zk.getChildren(path);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       throw new IllegalStateException(\"No lock is held at \" + path);\n     }\n     \n@@ -428,7 +428,7 @@ public static boolean deleteLock(String path, String lockData) throws Interrupte\n     IZooReaderWriter zk = ZooReaderWriter.getInstance();\n     children = zk.getChildren(path);\n     \n-    if (children.size() == 0) {\n+    if (children == null || children.size() == 0) {\n       throw new IllegalStateException(\"No lock is held at \" + path);\n     }\n     ",
                "raw_url": "https://github.com/apache/accumulo/raw/c79cb06b345dbf43ebe34ab17bf60f517f27ca5f/src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java",
                "sha": "06d136f69de16962d3eb382c15caab4676be8b8d",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-93: tighten up the lock check, ensure lock checking does not throw NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/accumulo/trunk@1190505 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/75202271ee82e1149c0140915f6389621be8271c",
        "repo": "accumulo",
        "unit_tests": [
            "ZooLockTest.java"
        ]
    },
    "accumulo_fb2c0c7": {
        "bug_id": "accumulo_fb2c0c7",
        "commit": "https://github.com/apache/accumulo/commit/fb2c0c75141177da429bc9094d6d5b15ba12f05e",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/accumulo/blob/fb2c0c75141177da429bc9094d6d5b15ba12f05e/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java?ref=fb2c0c75141177da429bc9094d6d5b15ba12f05e",
                "deletions": 5,
                "filename": "minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java",
                "patch": "@@ -244,11 +244,14 @@ public MiniAccumuloCluster(MiniAccumuloConfig config) throws IOException {\n \n     File nativeMap = new File(config.getLibDir().getAbsolutePath() + \"/native/map\");\n     nativeMap.mkdirs();\n-    String testRoot = new File(new File(System.getProperty(\"user.dir\")).getParent() + \"/server/src/main/c++/nativeMap\").getAbsolutePath();\n-    for (String file : new File(testRoot).list()) {\n-      File src = new File(testRoot, file);\n-      if (src.isFile() && file.startsWith(\"libNativeMap\"))\n-        FileUtils.copyFile(src, new File(nativeMap, file));\n+    File testRoot = new File(new File(new File(System.getProperty(\"user.dir\")).getParent() + \"/server/src/main/c++/nativeMap\").getAbsolutePath());\n+    \n+    if (testRoot.exists()) {\n+      for (String file : testRoot.list()) {\n+        File src = new File(testRoot, file);\n+        if (src.isFile() && file.startsWith(\"libNativeMap\"))\n+          FileUtils.copyFile(src, new File(nativeMap, file));\n+      }\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/accumulo/raw/fb2c0c75141177da429bc9094d6d5b15ba12f05e/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java",
                "sha": "c492e1b0ead9a0339987a788d187f1be7c1b1c30",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-1537 fixed NPE in MAC\n\ngit-svn-id: https://svn.apache.org/repos/asf/accumulo/trunk@1502381 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/720e27a59a3a12ca70ee20d85eaf7c6afab83429",
        "repo": "accumulo",
        "unit_tests": [
            "MiniAccumuloClusterTest.java"
        ]
    },
    "accumulo_fc34457": {
        "bug_id": "accumulo_fc34457",
        "commit": "https://github.com/apache/accumulo/commit/fc34457d480a03b5df064ee0b26db34b8337a37e",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/accumulo/blob/fc34457d480a03b5df064ee0b26db34b8337a37e/core/src/main/java/org/apache/accumulo/core/util/shell/ShellOptionsJC.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/core/src/main/java/org/apache/accumulo/core/util/shell/ShellOptionsJC.java?ref=fc34457d480a03b5df064ee0b26db34b8337a37e",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/accumulo/core/util/shell/ShellOptionsJC.java",
                "patch": "@@ -17,6 +17,7 @@\n package org.apache.accumulo.core.util.shell;\n \n import java.io.File;\n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n@@ -80,7 +81,7 @@ public AuthenticationToken convert(String value) {\n   private boolean hdfsZooInstance;\n   \n   @Parameter(names = {\"-z\", \"--zooKeeperInstance\"}, description = \"use a zookeeper instance with the given instance name and list of zoo hosts\", arity = 2)\n-  private List<String> zooKeeperInstance;\n+  private List<String> zooKeeperInstance = new ArrayList<String>();\n   \n   @Parameter(names = \"--auth-timeout\", description = \"minutes the shell can be idle without re-entering a password\")\n   private int authTimeout = 60; // TODO Add validator for positive number",
                "raw_url": "https://github.com/apache/accumulo/raw/fc34457d480a03b5df064ee0b26db34b8337a37e/core/src/main/java/org/apache/accumulo/core/util/shell/ShellOptionsJC.java",
                "sha": "33b3eacd06849ad2aa91098d1afa3756fce4fa39",
                "status": "modified"
            }
        ],
        "message": "ACCUMULO-1478 prevent NPE when starting the shell\n\ngit-svn-id: https://svn.apache.org/repos/asf/accumulo/trunk@1490335 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/accumulo/commit/98261a88635f6e481cd439843e4ffd310b57e486",
        "repo": "accumulo",
        "unit_tests": [
            "ShellOptionsJCTest.java"
        ]
    }
}