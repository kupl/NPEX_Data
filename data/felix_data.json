[{"commit": "https://github.com/apache/felix/commit/a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70", "parent": "https://github.com/apache/felix/commit/3e667e457a7192628222eb53588ad27c3e75bce6", "message": "FELIX-6206 : NPE in ComponentRegistry.getComponentHolders(). Applied patch by Robert Varga\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1870827 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70/scr/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70/scr/changelog.txt", "sha": "e3dec1f2eb081dbdba5f35e7862da1c48cbf747c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/changelog.txt?ref=a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70", "patch": "@@ -2,6 +2,7 @@ Changes in 2.1.18\n -----------------\n ** Bug\n     * [FELIX-6096] - SCR fails if the Java Runtime Environment does not support permissions\n+    * [FELIX-6206] - NPE in ComponentRegistry.getComponentHolders()\n ** Improvement\n     * [FELIX-6107] - Loggging Passwords when invoking activate Method\n ", "filename": "scr/changelog.txt"}, {"additions": 8, "raw_url": "https://github.com/apache/felix/raw/a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java", "blob_url": "https://github.com/apache/felix/blob/a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java", "sha": "a953a7c7f60d10613d94d8a73bd91ab00a32a140", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java?ref=a5b7eba8f368b7589c2d2b84f3707f6a93f0bb70", "patch": "@@ -346,7 +346,14 @@ final void registerComponentHolder( final ComponentRegistryKey key, ComponentHol\n     \tList<ComponentHolder<?>> all = new ArrayList<>();\n         synchronized ( m_componentHoldersByName )\n         {\n-        \tall.addAll(m_componentHoldersByName.values());\n+            for (ComponentHolder<?> holder: m_componentHoldersByName.values())\n+            {\n+                // Ignore name reservations\n+                if (holder != null)\n+                {\n+                    all.add(holder);\n+                }\n+            }\n         }\n         return all;\n     }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/e079e28ae090da522fbc7c0d5e65b5d1ea782573", "parent": "https://github.com/apache/felix/commit/3501b0d8f137afab5ec5456fa2af1ef9d3a2957b", "message": "FELIX-6170 : NPE in web console plugin if context path is missing for ServletContextHelper\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1865047 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_2", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/e079e28ae090da522fbc7c0d5e65b5d1ea782573/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java", "blob_url": "https://github.com/apache/felix/blob/e079e28ae090da522fbc7c0d5e65b5d1ea782573/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java", "sha": "d48e6f5a349b4f13ca2c94db727d3026c8d20357", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java?ref=e079e28ae090da522fbc7c0d5e65b5d1ea782573", "patch": "@@ -428,7 +428,7 @@ private void printContextDetails(final PrintWriter pw, final ServletContextDTO d\n         pw.println(\"<th class=\\\"header\\\">${Name}</th>\");\n         pw.println(\"<th class=\\\"header\\\">${Value)}</th>\");\n         pw.println(\"</tr></thead>\");\n-        odd = printRow(pw, odd, \"${Path}\", escapeXml(getContextPath(dto.contextPath)));\n+        odd = printRow(pw, odd, \"${Path}\", getContextPath(dto.contextPath));\n         odd = printRow(pw, odd, \"${service.id}\", String.valueOf(dto.serviceId));\n         odd = printServiceRankingRow(pw, dto.serviceId, odd);\n         pw.println(\"</table>\");\n@@ -456,7 +456,7 @@ private void printFailedContextDetails(final PrintWriter pw, final FailedServlet\n         pw.println(\"<th class=\\\"header\\\">${Value)}</th>\");\n         pw.println(\"</tr></thead>\");\n         odd = printRow(pw, odd, \"${Path}\",\n-                dto.contextPath == null ? dto.contextPath : escapeXml(getContextPath(dto.contextPath)));\n+                dto.contextPath == null ? dto.contextPath : getContextPath(dto.contextPath));\n         odd = printRow(pw, odd, \"${reason}\", escapeXml(getErrorText(dto.failureReason)));\n         odd = printRow(pw, odd, \"${service.id}\", String.valueOf(dto.serviceId));\n         pw.println(\"</table>\");", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3501b0d8f137afab5ec5456fa2af1ef9d3a2957b", "parent": "https://github.com/apache/felix/commit/4a3566976f76b25cfbbca6b1733c1285849d6b4c", "message": "FELIX-6170 : NPE in web console plugin if context path is missing for ServletContextHelper\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1865046 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_3", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/3501b0d8f137afab5ec5456fa2af1ef9d3a2957b/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java", "blob_url": "https://github.com/apache/felix/blob/3501b0d8f137afab5ec5456fa2af1ef9d3a2957b/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java", "sha": "d7ec7809d3aee9c3cea407dcdb341d0fd19573c7", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java?ref=3501b0d8f137afab5ec5456fa2af1ef9d3a2957b", "patch": "@@ -428,7 +428,7 @@ private void printContextDetails(final PrintWriter pw, final ServletContextDTO d\n         pw.println(\"<th class=\\\"header\\\">${Name}</th>\");\n         pw.println(\"<th class=\\\"header\\\">${Value)}</th>\");\n         pw.println(\"</tr></thead>\");\n-        odd = printRow(pw, odd, \"${Path}\", getContextPath(dto.contextPath));\n+        odd = printRow(pw, odd, \"${Path}\", escapeXml(getContextPath(dto.contextPath)));\n         odd = printRow(pw, odd, \"${service.id}\", String.valueOf(dto.serviceId));\n         odd = printServiceRankingRow(pw, dto.serviceId, odd);\n         pw.println(\"</table>\");\n@@ -455,8 +455,9 @@ private void printFailedContextDetails(final PrintWriter pw, final FailedServlet\n         pw.println(\"<th class=\\\"header\\\">${Name}</th>\");\n         pw.println(\"<th class=\\\"header\\\">${Value)}</th>\");\n         pw.println(\"</tr></thead>\");\n-        odd = printRow(pw, odd, \"${Path}\", getContextPath(dto.contextPath));\n-        odd = printRow(pw, odd, \"${reason}\", getErrorText(dto.failureReason));\n+        odd = printRow(pw, odd, \"${Path}\",\n+                dto.contextPath == null ? dto.contextPath : escapeXml(getContextPath(dto.contextPath)));\n+        odd = printRow(pw, odd, \"${reason}\", escapeXml(getErrorText(dto.failureReason)));\n         odd = printRow(pw, odd, \"${service.id}\", String.valueOf(dto.serviceId));\n         pw.println(\"</table>\");\n     }", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/console/HttpServicePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a41627481bdd4526a79f76be91a8c97c2b860497", "parent": "https://github.com/apache/felix/commit/b4267abd8f65f266acc58f648c5246c30b4f6990", "message": "[converter] Fix for FELIX-6141 - Avoid NPE when Maps have null keys or values\n\nSigned-off-by: Tim Ward <timothyjward@apache.org>\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1860547 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_4", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/a41627481bdd4526a79f76be91a8c97c2b860497/converter/converter/src/main/java/org/osgi/util/converter/ConvertingImpl.java", "blob_url": "https://github.com/apache/felix/blob/a41627481bdd4526a79f76be91a8c97c2b860497/converter/converter/src/main/java/org/osgi/util/converter/ConvertingImpl.java", "sha": "71b8aad2811595b7ba978293bdd2210c6721822f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/main/java/org/osgi/util/converter/ConvertingImpl.java?ref=a41627481bdd4526a79f76be91a8c97c2b860497", "patch": "@@ -265,9 +265,9 @@ private Object convertMapEntryToSingleValue(Class< ? > cls, InternalConverter c)\n \t\t\treturn c.convert(entry.getKey()).to(cls);\n \t\t} else if (cls.equals(valueCls)) {\n \t\t\treturn c.convert(entry.getValue()).to(cls);\n-\t\t} else if (cls.isAssignableFrom(keyCls)) {\n+\t\t} else if (keyCls != null && cls.isAssignableFrom(keyCls)) {\n \t\t\treturn c.convert(entry.getKey()).to(cls);\n-\t\t} else if (cls.isAssignableFrom(valueCls)) {\n+\t\t} else if (valueCls != null && cls.isAssignableFrom(valueCls)) {\n \t\t\treturn c.convert(entry.getValue()).to(cls);\n \t\t} else if (entry.getKey() instanceof String) {\n \t\t\treturn c.convert(entry.getKey()).to(cls);", "filename": "converter/converter/src/main/java/org/osgi/util/converter/ConvertingImpl.java"}, {"additions": 72, "raw_url": "https://github.com/apache/felix/raw/a41627481bdd4526a79f76be91a8c97c2b860497/converter/converter/src/test/java/org/osgi/util/converter/ConverterMapTest.java", "blob_url": "https://github.com/apache/felix/blob/a41627481bdd4526a79f76be91a8c97c2b860497/converter/converter/src/test/java/org/osgi/util/converter/ConverterMapTest.java", "sha": "069e54787a8bdb4e6d43c1fdf3afaf6a056bd0d7", "changes": 72, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/test/java/org/osgi/util/converter/ConverterMapTest.java?ref=a41627481bdd4526a79f76be91a8c97c2b860497", "patch": "@@ -505,6 +505,78 @@ public void testMapEntry4() {\n         assertEquals(\"111\", converter.convert(e1).to(Bar.class).value);\n     }\n \n+    @Test\n+    public void testMapEntry5() {\n+    \t// Key is null, value is the right type\n+    \tMap<Short, Integer> m1 = Collections.singletonMap(null, 5);\n+    \tMap.Entry<Short, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals((Integer) 5, converter.convert(e1).to(Integer.class));\n+    }\n+\n+    @Test\n+    public void testMapEntry6() {\n+    \t// Value is null, key is the right type\n+    \tMap<Short, Integer> m1 = Collections.singletonMap((short) 4, null);\n+    \tMap.Entry<Short, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals(4, converter.convert(e1).to(Short.class).intValue());\n+    }\n+\n+    @Test\n+    public void testMapEntry7() {\n+    \t// Key is null, value is assignable to the right type\n+    \tMap<Short, Integer> m1 = Collections.singletonMap(null, 5);\n+    \tMap.Entry<Short, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals((Integer) 5, converter.convert(e1).to(Number.class));\n+    }\n+    \n+    @Test\n+    public void testMapEntry8() {\n+    \t// Value is null, key is assignable to the right type\n+    \tMap<Short, Integer> m1 = Collections.singletonMap((short) 4, null);\n+    \tMap.Entry<Short, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals(4, converter.convert(e1).to(Number.class).intValue());\n+    }\n+\n+    @Test\n+    public void testMapEntry9() {\n+    \t// Key is null, value is a String \n+    \tMap<Short, String> m1 = Collections.singletonMap(null, \"5\");\n+    \tMap.Entry<Short, String> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals((Integer) 5, converter.convert(e1).to(Integer.class));\n+    }\n+    \n+    @Test\n+    public void testMapEntry10() {\n+    \t// Value is null, key is a String\n+    \tMap<String, Integer> m1 = Collections.singletonMap(\"4\", null);\n+    \tMap.Entry<String, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertEquals((Integer) 4, converter.convert(e1).to(Integer.class));\n+    }\n+\n+    @Test\n+    public void testMapEntry11() {\n+    \t// Key is null, value is \"wrong\" type \n+    \tMap<Short, Integer> m1 = Collections.singletonMap(null, 5);\n+    \tMap.Entry<Short, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertNull(converter.convert(e1).to(Long.class));\n+    }\n+    \n+    @Test\n+    public void testMapEntry12() {\n+    \t// Key is null, value is null\n+    \tMap<String, Integer> m1 = Collections.singletonMap(null, null);\n+    \tMap.Entry<String, Integer> e1 = getMapEntry(m1);\n+    \t\n+    \tassertNull(converter.convert(e1).to(Integer.class));\n+    }\n+\n     @Test\n     public void testDictionaryToAnnotation() {\n         Dictionary<String, Object> dict = new TestDictionary<>();", "filename": "converter/converter/src/test/java/org/osgi/util/converter/ConverterMapTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ef773a1d09def2c394613fb270074b53148d1ccc", "parent": "https://github.com/apache/felix/commit/646589e403a41a9961458aca5d4d43761db4a077", "message": "FELIX-6083 NPE running systemready\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1855983 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_5", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/ef773a1d09def2c394613fb270074b53148d1ccc/systemready/src/main/java/org/apache/felix/systemready/impl/SystemReadyMonitorImpl.java", "blob_url": "https://github.com/apache/felix/blob/ef773a1d09def2c394613fb270074b53148d1ccc/systemready/src/main/java/org/apache/felix/systemready/impl/SystemReadyMonitorImpl.java", "sha": "3471df980fbf2aaa6f51b5b04d3e1989c5b5bce1", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/felix/contents/systemready/src/main/java/org/apache/felix/systemready/impl/SystemReadyMonitorImpl.java?ref=ef773a1d09def2c394613fb270074b53148d1ccc", "patch": "@@ -111,17 +111,21 @@ public SystemStatus getStatus(StateType stateType) {\n     }\n \n     private void check() {\n-        CheckStatus.State prevState = getStatus(StateType.READY).getState();\n-        List<SystemReadyCheck> currentChecks = new ArrayList<>(checks);\n-        List<String> checkNames = currentChecks.stream().map(check -> check.getName()).collect(Collectors.toList());\n-        log.debug(\"Running system checks {}\", checkNames);\n-        List<CheckStatus> statuses = evaluateAllChecks(currentChecks);\n-\t\tthis.curStates.set(statuses);\n-\t\tState currState = getStatus(StateType.READY).getState();\n-        if (currState != prevState) {\n-            manageMarkerService(currState);\n+        try {\n+            CheckStatus.State prevState = getStatus(StateType.READY).getState();\n+            List<SystemReadyCheck> currentChecks = new ArrayList<>(checks);\n+            List<String> checkNames = currentChecks.stream().map(check -> check.getName()).collect(Collectors.toList());\n+            log.debug(\"Running system checks {}\", checkNames);\n+            List<CheckStatus> statuses = evaluateAllChecks(currentChecks);\n+            this.curStates.set(statuses);\n+            State currState = getStatus(StateType.READY).getState();\n+            if (currState != prevState) {\n+                manageMarkerService(currState);\n+            }\n+            log.debug(\"Checks finished\");\n+        } catch (Exception e) {\n+            log.warn(\"Exception when running checks\", e);\n         }\n-        log.debug(\"Checks finished\");\n     }\n \n     private List<CheckStatus> evaluateAllChecks(List<SystemReadyCheck> currentChecks) {\n@@ -136,7 +140,7 @@ private void manageMarkerService(CheckStatus.State currState) {\n             SystemReady readyService = new SystemReady() {\n             };\n             sreg = context.registerService(SystemReady.class, readyService, null);\n-        } else {\n+        } else if (sreg != null) {\n             sreg.unregister();\n         }\n     }", "filename": "systemready/src/main/java/org/apache/felix/systemready/impl/SystemReadyMonitorImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1632d7ea6bc6b882d9916af0b4376742636f4a06", "parent": "https://github.com/apache/felix/commit/81ec3d976e146d30da8800e72391c43fc141f96d", "message": "FELIX-6072 NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1854490 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_6", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/1632d7ea6bc6b882d9916af0b4376742636f4a06/healthcheck/generalchecks/src/main/java/org/apache/felix/hc/generalchecks/util/ScriptEnginesTracker.java", "blob_url": "https://github.com/apache/felix/blob/1632d7ea6bc6b882d9916af0b4376742636f4a06/healthcheck/generalchecks/src/main/java/org/apache/felix/hc/generalchecks/util/ScriptEnginesTracker.java", "sha": "3ebd9673017b2fd4b0d4e01154e0eb12f1d11482", "changes": 9, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/healthcheck/generalchecks/src/main/java/org/apache/felix/hc/generalchecks/util/ScriptEnginesTracker.java?ref=1632d7ea6bc6b882d9916af0b4376742636f4a06", "patch": "@@ -110,13 +110,14 @@ private void registerFactories(Bundle bundle) {\n \n     private void unregisterFactories(Bundle bundle) {\n         List<String> languagesForBundle = languagesByBundle.get(bundle);\n-        for (String lang : languagesForBundle) {\n-            ScriptEngineFactory removed = enginesByLanguage.remove(lang);\n-            LOG.info(\"Removing ScriptEngine {} for language {}\", removed, lang);\n+        if(languagesForBundle != null) {\n+            for (String lang : languagesForBundle) {\n+                ScriptEngineFactory removed = enginesByLanguage.remove(lang);\n+                LOG.info(\"Removing ScriptEngine {} for language {}\", removed, lang);\n+            }\n         }\n     }\n \n-    \n     @SuppressWarnings(\"unchecked\")\n     private List<ScriptEngineFactory> getScriptEngineFactoriesForBundle(final Bundle bundle) {\n         URL url = bundle.getEntry(ENGINE_FACTORY_SERVICE);", "filename": "healthcheck/generalchecks/src/main/java/org/apache/felix/hc/generalchecks/util/ScriptEnginesTracker.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/54eaa9ea58ea56b1d58b5f978d9d0defd4795573", "parent": "https://github.com/apache/felix/commit/26e1cb9037e1ba96e49f27b29b0e4aef74ea8771", "message": "WORKING - fix NPE on ServiceRef.getBundle\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1853160 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_7", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "blob_url": "https://github.com/apache/felix/blob/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "sha": "4a8c94a21cb5181dea09061f423f15557ac5ba70", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java?ref=54eaa9ea58ea56b1d58b5f978d9d0defd4795573", "patch": "@@ -757,9 +757,11 @@ public BundleLogger getLogger() {\n     public RegionConfigurationSupport setRegionConfigurationSupport(ServiceReference<ConfigurationAdmin> reference)\n     {\n         RegionConfigurationSupport rcs = m_componentRegistry.registerRegionConfigurationSupport( reference );\n-        for ( ComponentHolder<?> holder : m_holders )\n-        {\n-            rcs.configureComponentHolder( holder );\n+        if (rcs != null) {\n+            for ( ComponentHolder<?> holder : m_holders )\n+            {\n+                rcs.configureComponentHolder( holder );\n+            }\n         }\n         return rcs;\n     }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java", "blob_url": "https://github.com/apache/felix/blob/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java", "sha": "32f617dcd33e3a86f5cf2e1810c9c4607ec49cf5", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java?ref=54eaa9ea58ea56b1d58b5f978d9d0defd4795573", "patch": "@@ -640,7 +640,11 @@ public String toString()\n \n     public RegionConfigurationSupport registerRegionConfigurationSupport(\n             ServiceReference<ConfigurationAdmin> reference) {\n-        RegionConfigurationSupport trialRcs = new RegionConfigurationSupport(m_logger, reference) {\n+        Bundle bundle = reference.getBundle();\n+        if (bundle == null) {\n+            return null;\n+        }\n+        RegionConfigurationSupport trialRcs = new RegionConfigurationSupport(m_logger, reference, bundle) {\n             @Override\n             protected Collection<ComponentHolder<?>> getComponentHolders(TargetedPID pid)\n             {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/ComponentRegistry.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/manager/RegionConfigurationSupport.java", "blob_url": "https://github.com/apache/felix/blob/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/manager/RegionConfigurationSupport.java", "sha": "d90ac045adf4ba41783a43730975d08ace40fb41", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/RegionConfigurationSupport.java?ref=54eaa9ea58ea56b1d58b5f978d9d0defd4795573", "patch": "@@ -69,11 +69,10 @@\n      * @param bundleContext of the ConfigurationAdmin we are tracking\n      * @param registry\n      */\n-    public RegionConfigurationSupport(final ScrLogger logger, final ServiceReference<ConfigurationAdmin> reference)\n+    public RegionConfigurationSupport(final ScrLogger logger, final ServiceReference<ConfigurationAdmin> reference, Bundle bundle)\n     {\n         this.logger = logger;\n         this.caReference = reference;\n-        final Bundle bundle = reference.getBundle();\n         this.bundleId = bundle.getBundleId();\n         this.caBundleContext = bundle.getBundleContext();\n     }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/RegionConfigurationSupport.java"}, {"additions": 9, "raw_url": "https://github.com/apache/felix/raw/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "blob_url": "https://github.com/apache/felix/blob/54eaa9ea58ea56b1d58b5f978d9d0defd4795573/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "sha": "328fd0a95fabe97056220a0c1d27734a72560b2c", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java?ref=54eaa9ea58ea56b1d58b5f978d9d0defd4795573", "patch": "@@ -288,15 +288,19 @@ private ServiceReferenceDTO serviceReferenceToDTO( ServiceReference<?> serviceRe\n     {\n         if (serviceRef == null)\n             return null;\n-        final long bundleId = serviceRef.getBundle().getBundleId();\n+        final Bundle bundle = serviceRef.getBundle();\n+        if (bundle == null) {\n+            return null;\n+        }\n+        final long bundleId = bundle.getBundleId();\n         ConcurrentHashMap<Long, ServiceReferenceDTO[]> cache = dtoCache.get();\n         if (cache == null) {\n             cache = new ConcurrentHashMap<>();\n             dtoCache = new SoftReference<>(cache);\n         }\n         ServiceReferenceDTO[] dtos = cache.get(bundleId);\n         if (dtos == null) {\n-            dtos = serviceRef.getBundle().adapt(ServiceReferenceDTO[].class);\n+            dtos = bundle.adapt(ServiceReferenceDTO[].class);\n             if (dtos == null) {\n                 dtos = new ServiceReferenceDTO[0];\n             }\n@@ -488,7 +492,9 @@ public void serviceChanged(final ServiceEvent event) {\n             ConcurrentHashMap<Long, ServiceReferenceDTO[]> cache = dtoCache.get();\n             if (cache != null)\n             {\n-                cache.remove(event.getServiceReference().getBundle().getBundleId());\n+                // using bundle id property incase the service has gotten unregistered\n+                // before we could get the bundle object\n+                cache.remove(event.getServiceReference().getProperty(Constants.SERVICE_BUNDLEID));\n             }\n         }\n     }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/673a88dad1d5dc87728e8239f0048d2f415c92d5", "parent": "https://github.com/apache/felix/commit/16cb13939de9acd1d721ba17950c37dcec626a9a", "message": "FELIX-5966 : NPE at RuntimeDTOBuilder.java:74\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1844307 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_8", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/runtime/dto/RuntimeDTOBuilder.java", "blob_url": "https://github.com/apache/felix/blob/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/runtime/dto/RuntimeDTOBuilder.java", "sha": "5a14735e0f46bef021c3b88d63aeee1698c76f9a", "changes": 37, "status": "modified", "deletions": 33, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/runtime/dto/RuntimeDTOBuilder.java?ref=673a88dad1d5dc87728e8239f0048d2f415c92d5", "patch": "@@ -42,18 +42,18 @@\n {\n \n     private final RegistryRuntime registry;\n-    private final ServiceReference<HttpServiceRuntime> serviceReference;\n+    private final ServiceReferenceDTO serviceRefDTO;\n \n-    public RuntimeDTOBuilder(final RegistryRuntime registry, final ServiceReference<HttpServiceRuntime> ref)\n+    public RuntimeDTOBuilder(final RegistryRuntime registry, final ServiceReferenceDTO srDTO)\n     {\n         this.registry = registry;\n-        this.serviceReference = ref;\n+        this.serviceRefDTO = srDTO;\n     }\n \n     public RuntimeDTO build()\n     {\n         final RuntimeDTO runtimeDTO = new RuntimeDTO();\n-        runtimeDTO.serviceDTO = createServiceDTO();\n+        runtimeDTO.serviceDTO = this.serviceRefDTO;\n         runtimeDTO.servletContextDTOs = createContextDTOs();\n         runtimeDTO.preprocessorDTOs = createPreprocessorDTOs();\n \n@@ -68,35 +68,6 @@ public RuntimeDTO build()\n         return runtimeDTO;\n     }\n \n-    private ServiceReferenceDTO createServiceDTO()\n-    {\n-        final ServiceReferenceDTO dto = new ServiceReferenceDTO();\n-        dto.bundle = this.serviceReference.getBundle().getBundleId();\n-        dto.id = (Long) this.serviceReference.getProperty(Constants.SERVICE_ID);\n-        final Map<String, Object> props = new HashMap<String, Object>();\n-        for (String key : this.serviceReference.getPropertyKeys())\n-        {\n-            props.put(key, this.serviceReference.getProperty(key));\n-        }\n-        dto.properties = props;\n-\n-        final Bundle[] ubs = this.serviceReference.getUsingBundles();\n-        if (ubs == null)\n-        {\n-            dto.usingBundles = new long[0];\n-        }\n-        else\n-        {\n-            dto.usingBundles = new long[ubs.length];\n-            for (int j=0; j < ubs.length; j++)\n-            {\n-                dto.usingBundles[j] = ubs[j].getBundleId();\n-            }\n-        }\n-\n-        return dto;\n-    }\n-\n     private ServletContextDTO[] createContextDTOs()\n     {\n         final Collection<ServletContextDTO> contexts = registry.getServletContextDTOs();", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/runtime/dto/RuntimeDTOBuilder.java"}, {"additions": 67, "raw_url": "https://github.com/apache/felix/raw/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceRuntimeImpl.java", "blob_url": "https://github.com/apache/felix/blob/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceRuntimeImpl.java", "sha": "9b81137535f0af40c084d011d798feea2184b17f", "changes": 81, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceRuntimeImpl.java?ref=673a88dad1d5dc87728e8239f0048d2f415c92d5", "patch": "@@ -28,8 +28,10 @@\n import org.apache.felix.http.base.internal.runtime.dto.RuntimeDTOBuilder;\n import org.apache.felix.http.base.internal.whiteboard.WhiteboardManager;\n import org.osgi.framework.BundleContext;\n+import org.osgi.framework.Constants;\n import org.osgi.framework.ServiceReference;\n import org.osgi.framework.ServiceRegistration;\n+import org.osgi.framework.dto.ServiceReferenceDTO;\n import org.osgi.service.http.runtime.HttpServiceRuntime;\n import org.osgi.service.http.runtime.dto.RequestInfoDTO;\n import org.osgi.service.http.runtime.dto.RuntimeDTO;\n@@ -52,8 +54,10 @@\n \n     private volatile long changeCount;\n \n-    private volatile ServiceReference<HttpServiceRuntime> serviceReference;\n+    private volatile ServiceRegistration<HttpServiceRuntime> serviceReg;\n \n+    private volatile ServiceReferenceDTO serviceRefDTO;\n+    \n     private volatile Timer timer;\n \n     private final long updateChangeCountDelay;\n@@ -87,9 +91,34 @@ public HttpServiceRuntimeImpl(HandlerRegistry registry,\n     @Override\n     public RuntimeDTO getRuntimeDTO()\n     {\n-        final RuntimeDTOBuilder runtimeDTOBuilder = new RuntimeDTOBuilder(contextManager.getRuntimeInfo(),\n-                this.serviceReference);\n-        return runtimeDTOBuilder.build();\n+    \tif ( this.serviceRefDTO == null )\n+    \t{\n+    \t\t// it might happen that this code is executed in several threads\n+    \t\t// but that's very unlikely and even if, fetching the service \n+    \t\t// reference several times is not a big deal\n+    \t\tfinal ServiceRegistration<HttpServiceRuntime> reg = this.serviceReg;\n+    \t\tif ( reg != null )\n+    \t\t{\n+                final long id = (long) reg.getReference().getProperty(Constants.SERVICE_ID);\n+                final ServiceReferenceDTO[] dtos = reg.getReference().getBundle().adapt(ServiceReferenceDTO[].class);\n+                for(final ServiceReferenceDTO dto : dtos) \n+                {\n+                \tif ( dto.id == id) \n+                \t{\n+                \t\tthis.serviceRefDTO = dto;\n+                \t\tbreak;\n+                \t}\n+                }\n+    \t\t\t\n+    \t\t}\n+    \t}\n+        if ( this.serviceRefDTO != null )\n+        {\n+            final RuntimeDTOBuilder runtimeDTOBuilder = new RuntimeDTOBuilder(contextManager.getRuntimeInfo(),\n+                    this.serviceRefDTO);\n+            return runtimeDTOBuilder.build();\n+        }\n+        throw new IllegalStateException(\"Service is already unregistered\");\n     }\n \n     @Override\n@@ -116,19 +145,43 @@ public synchronized void setAllAttributes(Dictionary<String, Object> newAttribut\n         attributes = replacement;\n     }\n \n-    public Dictionary<String, Object> getAttributes()\n+    public void register(final BundleContext bundleContext)\n     {\n-        return attributes;\n+        this.serviceReg = bundleContext.registerService(HttpServiceRuntime.class,\n+                this,\n+                attributes);\n     }\n-\n-    public void setServiceReference(\n-            final ServiceReference<HttpServiceRuntime> reference)\n+    \n+    public void unregister()\n     {\n-        this.serviceReference = reference;\n+    \tif ( this.serviceReg != null ) \n+    \t{\n+        \ttry\n+        \t{\n+        \t    this.serviceReg.unregister();\n+        \t}\n+        \tcatch ( final IllegalStateException ise)\n+        \t{\n+        \t\t// we just ignore it\n+        \t}\n+        \tthis.serviceReg = null;    \t\t\n+    \t}\n+    \tthis.serviceRefDTO = null;\n     }\n-\n-    public void updateChangeCount(final ServiceRegistration<HttpServiceRuntime> reg)\n+    \n+    public ServiceReference<HttpServiceRuntime> getServiceReference()\n+    {\n+    \tfinal ServiceRegistration<HttpServiceRuntime> reg = this.serviceReg;\n+    \tif ( reg != null ) \n+    \t{\n+    \t\treturn reg.getReference();\n+    \t}\n+    \treturn null;\n+    }\n+    \n+    public void updateChangeCount()\n     {\n+    \tfinal ServiceRegistration<HttpServiceRuntime> reg = this.serviceReg;\n         if ( reg != null )\n         {\n             boolean setPropsDirectly = false;\n@@ -159,7 +212,7 @@ public void run()\n                                 {\n                                     try\n                                     {\n-                                        reg.setProperties(getAttributes());\n+                                        reg.setProperties(attributes);\n                                     }\n                                     catch ( final IllegalStateException ise)\n                                     {\n@@ -177,7 +230,7 @@ public void run()\n             {\n                 try\n                 {\n-                    reg.setProperties(getAttributes());\n+                    reg.setProperties(attributes);\n                 }\n                 catch ( final IllegalStateException ise)\n                 {", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceRuntimeImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/felix/raw/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java", "blob_url": "https://github.com/apache/felix/blob/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java", "sha": "bfcb293237131c7fe37b12d18e9736e3cb5554c1", "changes": 20, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java?ref=673a88dad1d5dc87728e8239f0048d2f415c92d5", "patch": "@@ -90,7 +90,6 @@\n import org.osgi.framework.ServiceReference;\n import org.osgi.framework.ServiceRegistration;\n import org.osgi.service.http.context.ServletContextHelper;\n-import org.osgi.service.http.runtime.HttpServiceRuntime;\n import org.osgi.service.http.runtime.HttpServiceRuntimeConstants;\n import org.osgi.service.http.runtime.dto.DTOConstants;\n import org.osgi.service.http.runtime.dto.PreprocessorDTO;\n@@ -129,8 +128,6 @@\n \n     private volatile ServiceRegistration<ServletContextHelper> defaultContextRegistration;\n \n-    private volatile ServiceRegistration<HttpServiceRuntime> runtimeServiceReg;\n-\n     /**\n      * Create a new whiteboard http manager\n      *\n@@ -160,10 +157,7 @@ public void start(final ServletContext containerContext, @NotNull final Dictiona\n \n         this.serviceRuntime.setAttribute(HttpServiceRuntimeConstants.HTTP_SERVICE_ID,\n                 Collections.singletonList(this.httpServiceFactory.getHttpServiceServiceId()));\n-        this.runtimeServiceReg = this.httpBundleContext.registerService(HttpServiceRuntime.class,\n-                serviceRuntime,\n-                this.serviceRuntime.getAttributes());\n-        this.serviceRuntime.setServiceReference(this.runtimeServiceReg.getReference());\n+        this.serviceRuntime.register(this.httpBundleContext);\n \n         this.webContext = containerContext;\n \n@@ -239,7 +233,7 @@ public void stop()\n         }\n         this.trackers.clear();\n \n-        this.serviceRuntime.setServiceReference(null);\n+        this.serviceRuntime.unregister();\n \n         this.preprocessorHandlers = Collections.emptyList();\n         this.contextMap.clear();\n@@ -252,12 +246,6 @@ public void stop()\n             this.defaultContextRegistration.unregister();\n             this.defaultContextRegistration = null;\n         }\n-\n-        if ( this.runtimeServiceReg != null )\n-        {\n-            this.runtimeServiceReg.unregister();\n-            this.runtimeServiceReg = null;\n-        }\n         this.webContext = null;\n     }\n \n@@ -910,7 +898,7 @@ private boolean isMatchingService(final AbstractInfo<?> info)\n             try\n             {\n                 final Filter f = this.httpBundleContext.createFilter(target);\n-                return f.match(this.runtimeServiceReg.getReference());\n+                return f.match(this.serviceRuntime.getServiceReference());\n             }\n             catch ( final InvalidSyntaxException ise)\n             {\n@@ -1027,6 +1015,6 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n \n     private void updateRuntimeChangeCount()\n     {\n-        this.serviceRuntime.updateChangeCount(this.runtimeServiceReg);\n+        this.serviceRuntime.updateChangeCount();\n     }\n }", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java"}, {"additions": 12, "raw_url": "https://github.com/apache/felix/raw/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/itest/pom.xml", "blob_url": "https://github.com/apache/felix/blob/673a88dad1d5dc87728e8239f0048d2f415c92d5/http/itest/pom.xml", "sha": "a4d136a5e8b7f47df4a08e6d6fcf250d4332b602", "changes": 12, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/itest/pom.xml?ref=673a88dad1d5dc87728e8239f0048d2f415c92d5", "patch": "@@ -92,6 +92,18 @@\n \t\t\t<artifactId>org.apache.felix.http.servlet-api</artifactId>\n \t\t\t<version>${http.servlet.api.version}</version>\n \t\t</dependency>\n+        <dependency>\n+            <groupId>org.osgi</groupId>\n+            <artifactId>org.osgi.service.http</artifactId>\n+            <version>1.2.1</version>\n+           <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.osgi</groupId>\n+            <artifactId>org.osgi.service.http.whiteboard</artifactId>\n+            <version>1.1.0</version>\n+            <scope>provided</scope>\n+        </dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.apache.felix</groupId>\n \t\t\t<artifactId>org.apache.felix.http.jetty</artifactId>", "filename": "http/itest/pom.xml"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/7066d3a253777b62da03852102f6c7117425aa7a", "parent": "https://github.com/apache/felix/commit/21a47aab9cbb03bdae318fc86a6e69ba362adea6", "message": "FELIX-5950 : NPE in MultiplePrototypeRefPair.unsetServiceObject\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1844202 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_9", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/7066d3a253777b62da03852102f6c7117425aa7a/scr/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/7066d3a253777b62da03852102f6c7117425aa7a/scr/changelog.txt", "sha": "4366d2158b096d577da3dfa8e6424ecc944405a4", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/changelog.txt?ref=7066d3a253777b62da03852102f6c7117425aa7a", "patch": "@@ -1,9 +1,20 @@\n+Changes in 2.1.14\n+-----------------\n+** Bug\n+    * [FELIX-5950] - NPE in MultiplePrototypeRefPair.unsetServiceObject\n+\n+\n+Changes in 2.1.12\n+-----------------\n+** Bug\n+    * [FELIX-5959] - Exception on changecount timer timeout\n+\n+\n Changes in 2.1.10\n -----------------\n ** Bug\n     * [FELIX-4260] - IllegalStateException: The service has been unregistered\n-\t* [FELIX-5947] - ClassLoader memory leak\n-\n+    * [FELIX-5947] - ClassLoader memory leak\n ** Improvement\n     * [FELIX-5948] - Collection of performance and memory optimizations\n ", "filename": "scr/changelog.txt"}, {"additions": 11, "raw_url": "https://github.com/apache/felix/raw/7066d3a253777b62da03852102f6c7117425aa7a/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java", "blob_url": "https://github.com/apache/felix/blob/7066d3a253777b62da03852102f6c7117425aa7a/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java", "sha": "fa683c153b90cfd4158b1b59cbfdb35c1414178b", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java?ref=7066d3a253777b62da03852102f6c7117425aa7a", "patch": "@@ -66,11 +66,18 @@ public T unsetServiceObject(ComponentContextImpl<S> key)\n     {\n     \tif ( key == null )\n     \t{\n-    \t\tfinal Iterator<T> iter = instances.values().iterator();\n-    \t\twhile ( iter.hasNext() ) \n-    \t\t{\n-    \t\t\tthis.serviceObjects.ungetService(iter.next());\n+\t\t\ttry \n+\t\t\t{\n+\t\t\t\tfinal Iterator<T> iter = instances.values().iterator();\n+\t\t\t\twhile ( iter.hasNext() ) \n+\t\t\t\t{\n+    \t\t\t    this.serviceObjects.ungetService(iter.next());\n+    \t\t\t} \n     \t\t}\n+    \t\tcatch (final IllegalStateException ise)\n+    \t\t{\n+    \t\t\t// ignore\n+   \t\t\t}\n     \t\tinstances.clear();\n     \t\treturn null ;\n     \t}", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8866af0f0c174e7de014dc723a4933413be5b560", "parent": "https://github.com/apache/felix/commit/e3f2bcdcafa3d97e76a88f03b7131d81d12cef23", "message": "FELIX-5950 : NPE in MultiplePrototypeRefPair.unsetServiceObject\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1843926 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_10", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/8866af0f0c174e7de014dc723a4933413be5b560/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java", "blob_url": "https://github.com/apache/felix/blob/8866af0f0c174e7de014dc723a4933413be5b560/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java", "sha": "638e55e9489206072b1b7716dfae5a5e3eb87acf", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java?ref=8866af0f0c174e7de014dc723a4933413be5b560", "patch": "@@ -20,6 +20,7 @@\n \n package org.apache.felix.scr.impl.manager;\n \n+import java.util.Iterator;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n@@ -63,7 +64,17 @@ public boolean setServiceObject(ComponentContextImpl<S> key, T serviceObject)\n     @Override\n     public T unsetServiceObject(ComponentContextImpl<S> key)\n     {\n-        return instances.get(key);\n+    \tif ( key == null )\n+    \t{\n+    \t\tfinal Iterator<T> iter = instances.values().iterator();\n+    \t\twhile ( iter.hasNext() ) \n+    \t\t{\n+    \t\t\tthis.serviceObjects.ungetService(iter.next());\n+    \t\t}\n+    \t\tinstances.clear();\n+    \t\treturn null ;\n+    \t}\n+        return instances.remove(key);\n     }\n \n     @Override", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/MultiplePrototypeRefPair.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/8866af0f0c174e7de014dc723a4933413be5b560/scr/src/test/java/org/apache/felix/scr/integration/ComponentTestBase.java", "blob_url": "https://github.com/apache/felix/blob/8866af0f0c174e7de014dc723a4933413be5b560/scr/src/test/java/org/apache/felix/scr/integration/ComponentTestBase.java", "sha": "f67a39ed0e3327d87c6632377f050186aaa6c247", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/test/java/org/apache/felix/scr/integration/ComponentTestBase.java?ref=8866af0f0c174e7de014dc723a4933413be5b560", "patch": "@@ -117,7 +117,7 @@\n     protected static String paxRunnerVmOption = null;\n \n     //To investigate any problems at all set to \"debug\"\n-    protected static String DS_LOGLEVEL = \"debug\";\n+    protected static String DS_LOGLEVEL = \"error\";\n \n     protected static String bsnVersionUniqueness = \"single\";\n ", "filename": "scr/src/test/java/org/apache/felix/scr/integration/ComponentTestBase.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/29a5610d3650ef8074f15e607e5edac7b38152e3", "parent": "https://github.com/apache/felix/commit/244f488d95438227631b5f16d673f4d5bb783624", "message": "FELIX-5940 : NPE when project artifact has not been built\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1841833 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_11", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/29a5610d3650ef8074f15e607e5edac7b38152e3/tools/osgicheck-maven-plugin/src/main/java/org/apache/felix/maven/osgicheck/impl/CheckMojo.java", "blob_url": "https://github.com/apache/felix/blob/29a5610d3650ef8074f15e607e5edac7b38152e3/tools/osgicheck-maven-plugin/src/main/java/org/apache/felix/maven/osgicheck/impl/CheckMojo.java", "sha": "844c7233145a6e9f19f47f796b9ed82bc61622c5", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/tools/osgicheck-maven-plugin/src/main/java/org/apache/felix/maven/osgicheck/impl/CheckMojo.java?ref=29a5610d3650ef8074f15e607e5edac7b38152e3", "patch": "@@ -133,6 +133,10 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n \n     private void doExecute() throws MojoExecutionException, MojoFailureException {\n         final File bundle = this.getBundle();\n+        if ( bundle == null ) {\n+            throw new MojoExecutionException(\"This mojo requires the project artifact to be built to perform the check.\" +\n+                \"Make sure to create your bundle before running this plugin.\");\n+        }\n         getLog().debug(\"Checking \" + bundle);\n \n         // configuration", "filename": "tools/osgicheck-maven-plugin/src/main/java/org/apache/felix/maven/osgicheck/impl/CheckMojo.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/d16e3fb4e59cc6aa4dc40b95251758dfabc9fafe", "parent": "https://github.com/apache/felix/commit/06a75aa7a244111fa6479b6000a90d9f0c7d1777", "message": "FELIX-5956: Avoid NPE when a lifecycle controller runnable is invoked from the init() method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1843196 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_12", "file": [{"additions": 10, "raw_url": "https://github.com/apache/felix/raw/d16e3fb4e59cc6aa4dc40b95251758dfabc9fafe/dependencymanager/org.apache.felix.dependencymanager.runtime/src/org/apache/felix/dm/runtime/ServiceLifecycleHandler.java", "blob_url": "https://github.com/apache/felix/blob/d16e3fb4e59cc6aa4dc40b95251758dfabc9fafe/dependencymanager/org.apache.felix.dependencymanager.runtime/src/org/apache/felix/dm/runtime/ServiceLifecycleHandler.java", "sha": "48ddca059f429fcfb4b9559fe65726e3546bc631", "changes": 23, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/org.apache.felix.dependencymanager.runtime/src/org/apache/felix/dm/runtime/ServiceLifecycleHandler.java?ref=d16e3fb4e59cc6aa4dc40b95251758dfabc9fafe", "patch": "@@ -146,8 +146,6 @@ public void init(Component c)\n         String starter = m_srvMeta.getString(Params.starter, null);\n         String stopper = m_srvMeta.getString(Params.stopper, null);\n \n-        List<Dependency> instanceBoundDeps = new ArrayList<>();\n-            \n         if (starter != null)\n         {\n             // We'll inject two runnables: one that will start or service, when invoked, and the other\n@@ -158,8 +156,9 @@ public void init(Component c)\n             // Create a toggle service, used to start/stop our service.\n             ToggleServiceDependency toggle = new ToggleServiceDependency();\n             AtomicBoolean startFlag = new AtomicBoolean(false);\n-            // Add the toggle to the service.\n-            instanceBoundDeps.add(toggle);\n+            // Add the toggle dependency to the component.\n+            c.add(toggle);\n+            \n             // Inject the runnable that will start our service, when invoked.\n             setField(serviceInstance, starter, Runnable.class, new ComponentStarter(componentName, toggle, startFlag));\n             if (stopper != null) {\n@@ -200,6 +199,7 @@ public void init(Component c)\n         \n         // Apply name dependency filters possibly returned by the init() method.\n         \n+        List<Dependency> nameDependencies = new ArrayList<>();\n         for (MetaData dependency: m_depsMeta)\n         {\n             // Check if this dependency has a name, and if we find the name from the \n@@ -236,19 +236,16 @@ public void init(Component c)\n                 }\n \n                 DependencyBuilder depBuilder = new DependencyBuilder(dependency);\n-                Log.instance().info(\"ServiceLifecycleHandler.init: adding dependency %s into service %s\",\n-                                   dependency, m_srvMeta);\n-                Dependency d = depBuilder.build(m_bundle, dm);\n-                instanceBoundDeps.add(d);\n+                Log.instance().info(\"ServiceLifecycleHandler.init: adding dependency %s into service %s\", dependency, m_srvMeta);\n+                nameDependencies.add(depBuilder.build(m_bundle, dm));\n             }            \n         }\n         \n-        // Add all extra dependencies in one shot, in order to calculate state changes for all dependencies at a time.\n-        if (instanceBoundDeps.size() > 0) \n+        // Add all extra dependencies\n+        if (nameDependencies.size() > 0) \n         {\n-            Log.instance().info(\"ServiceLifecycleHandler.init: adding extra/named dependencies %s\",\n-                instanceBoundDeps);\n-            c.add(instanceBoundDeps.toArray(new Dependency[instanceBoundDeps.size()]));\n+            Log.instance().info(\"ServiceLifecycleHandler.init: adding extra/named dependencies %s\", nameDependencies);\n+            c.add(nameDependencies.toArray(new Dependency[nameDependencies.size()]));\n         }    \n \n         // init method fully handled, and all possible named dependencies have been configured. Now, activate the ", "filename": "dependencymanager/org.apache.felix.dependencymanager.runtime/src/org/apache/felix/dm/runtime/ServiceLifecycleHandler.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f1370a9005c2af59c14f8131e772244fa03ec426", "parent": "https://github.com/apache/felix/commit/e7cc642a22ad498e336e654951cac2d67e28b493", "message": "Fix NPE for initial configurations and ignore internal properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1821609 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_13", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/f1370a9005c2af59c14f8131e772244fa03ec426/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java", "blob_url": "https://github.com/apache/felix/blob/f1370a9005c2af59c14f8131e772244fa03ec426/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java", "sha": "c7bdc5afb97f33791b4c1cfe2ee48109ef47e6d5", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java?ref=f1370a9005c2af59c14f8131e772244fa03ec426", "patch": "@@ -35,6 +35,7 @@\n \n import org.apache.felix.configurator.impl.json.BinUtil;\n import org.apache.felix.configurator.impl.json.JSONUtil;\n+import org.apache.felix.configurator.impl.json.TypeConverter;\n import org.apache.felix.configurator.impl.logger.SystemLogger;\n import org.apache.felix.configurator.impl.model.BundleState;\n import org.apache.felix.configurator.impl.model.Config;\n@@ -253,10 +254,11 @@ public void start() {\n                 if ( state.getInitialHashes() != null ) {\n                     processRemoveBundle(-1);\n                 }\n+                final TypeConverter converter = new TypeConverter(null);\n                 final JSONUtil.Report report = new JSONUtil.Report();\n                 final List<ConfigurationFile> allFiles = new ArrayList<>();\n                 for(final Map.Entry<String, String> entry : files.entrySet()) {\n-                    final ConfigurationFile file = org.apache.felix.configurator.impl.json.JSONUtil.readJSON(null, entry.getKey(), null, -1, entry.getValue(), report);\n+                    final ConfigurationFile file = org.apache.felix.configurator.impl.json.JSONUtil.readJSON(converter, entry.getKey(), null, -1, entry.getValue(), report);\n                     if ( file != null ) {\n                         allFiles.add(file);\n                     }", "filename": "osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java"}, {"additions": 3, "raw_url": "https://github.com/apache/felix/raw/f1370a9005c2af59c14f8131e772244fa03ec426/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/json/JSONUtil.java", "blob_url": "https://github.com/apache/felix/blob/f1370a9005c2af59c14f8131e772244fa03ec426/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/json/JSONUtil.java", "sha": "f765bea5e0aeb1fe1c3ea417a6761e89bf926994", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/json/JSONUtil.java?ref=f1370a9005c2af59c14f8131e772244fa03ec426", "patch": "@@ -190,7 +190,9 @@ public static ConfigurationFile readJSON(\n         final List<Config> configurations = new ArrayList<>();\n         for(final Map.Entry<String, ?> entry : configs.entrySet()) {\n             if ( ! (entry.getValue() instanceof Map) ) {\n-                report.errors.add(\"Ignoring configuration in '\" + identifier + \"' (not a configuration) : \" + entry.getKey());\n+            \t    if ( !entry.getKey().startsWith(INTERNAL_PREFIX) ) {\n+            \t    \t    report.errors.add(\"Ignoring configuration in '\" + identifier + \"' (not a configuration) : \" + entry.getKey());\n+            \t    }\n             } else {\n                 @SuppressWarnings(\"unchecked\")\n                 final Map<String, ?> mainMap = (Map<String, ?>)entry.getValue();", "filename": "osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/json/JSONUtil.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/dc80fafade1a0dfea8133d7fecc5c6e46b1ddd3a", "parent": "https://github.com/apache/felix/commit/e18d99b61520b47fccf3413c03089680cd89cf77", "message": "FELIX-5351 : Close tracker before setting configurationmanager to null (avoiding NPE on shutdown)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1824285 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_14", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/dc80fafade1a0dfea8133d7fecc5c6e46b1ddd3a/osgi-r7/configadmin/src/main/java/org/apache/felix/cm/impl/persistence/PersistenceManagerTracker.java", "blob_url": "https://github.com/apache/felix/blob/dc80fafade1a0dfea8133d7fecc5c6e46b1ddd3a/osgi-r7/configadmin/src/main/java/org/apache/felix/cm/impl/persistence/PersistenceManagerTracker.java", "sha": "4b63419c3f984be30e8a06ed670e87901da98e28", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/osgi-r7/configadmin/src/main/java/org/apache/felix/cm/impl/persistence/PersistenceManagerTracker.java?ref=dc80fafade1a0dfea8133d7fecc5c6e46b1ddd3a", "patch": "@@ -125,12 +125,12 @@ private void activate(final ExtPersistenceManager pm)\n \n     private void deactivate()\n     {\n+        this.stopCoordinatorTracker();\n         if ( this.configurationManager != null )\n         {\n             this.configurationManager.stop();\n             this.configurationManager = null;\n         }\n-        this.stopCoordinatorTracker();\n         // update log\n         Log.logger.set(null);\n     }", "filename": "osgi-r7/configadmin/src/main/java/org/apache/felix/cm/impl/persistence/PersistenceManagerTracker.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9a1257521a770eb34623595bd8c43066d3797fb8", "parent": "https://github.com/apache/felix/commit/c4eff57fa2c87b50b479afd6f0a23060700bf2af", "message": "[FELIX-5125] Possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1812985 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/9a1257521a770eb34623595bd8c43066d3797fb8/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "blob_url": "https://github.com/apache/felix/blob/9a1257521a770eb34623595bd8c43066d3797fb8/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "sha": "0573e1e850ab84cee756583c02f8613984d874d7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java?ref=9a1257521a770eb34623595bd8c43066d3797fb8", "patch": "@@ -127,7 +127,7 @@ public void doConfigurationEvent(ConfigurationEvent configurationEvent)\n                                             configurationEvent.getPid(),\n                                             \"?\");\n                 Dictionary dict = config.getProperties();\n-                String fileName = (String) dict.get( DirectoryWatcher.FILENAME );\n+                String fileName = dict != null ? (String) dict.get( DirectoryWatcher.FILENAME ) : null;\n                 File file = fileName != null ? fromConfigKey(fileName) : null;\n                 if( file != null && file.isFile() ) {\n                     TypedProperties props = new TypedProperties( bundleSubstitution() );", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f3a147ec0f2af3430db259073b74d2a6fd48330d", "parent": "https://github.com/apache/felix/commit/9cc019ff39290732201c3a09b5dd125f8b689552", "message": "[FELIX-5686] NPE in ConfigInstaller on ConfigDelete\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1812602 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_16", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/f3a147ec0f2af3430db259073b74d2a6fd48330d/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "blob_url": "https://github.com/apache/felix/blob/f3a147ec0f2af3430db259073b74d2a6fd48330d/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "sha": "1a4f12a4a24e72304f0a9d77550f2191d56d60a3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java?ref=f3a147ec0f2af3430db259073b74d2a6fd48330d", "patch": "@@ -183,7 +183,7 @@ public void doConfigurationEvent(ConfigurationEvent configurationEvent)\n                         configurationEvent.getPid(),\n                         \"?\");\n                 Dictionary dict = config.getProperties();\n-                String fileName = (String) dict.get(DirectoryWatcher.FILENAME);\n+                String fileName = dict != null ? (String) dict.get(DirectoryWatcher.FILENAME) : null;\n                 File file = fileName != null ? fromConfigKey(fileName) : null;\n                 if (file != null && file.isFile()) {\n                     if (!file.delete()) {", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3c6475c4147ea5d27fa2896f044d61c29d633f8c", "parent": "https://github.com/apache/felix/commit/126451ce5220dcfeff48021c744fe590258a13b3", "message": "Fix NPE when config admin is started later\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1807388 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_17", "file": [{"additions": 16, "raw_url": "https://github.com/apache/felix/raw/3c6475c4147ea5d27fa2896f044d61c29d633f8c/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java", "blob_url": "https://github.com/apache/felix/blob/3c6475c4147ea5d27fa2896f044d61c29d633f8c/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java", "sha": "a6de1bd781cc061e169eb1396622c9b50a6eb38c", "changes": 26, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/felix/contents/osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java?ref=3c6475c4147ea5d27fa2896f044d61c29d633f8c", "patch": "@@ -529,22 +529,28 @@ public boolean activate(final ConfigList configList, final Config cfg) {\n         Long configAdminServiceBundleId = this.state.getConfigAdminBundleId(cfg.getBundleId());\n         if ( configAdminServiceBundleId == null ) {\n             final Bundle configBundle = cfg.getBundleId() == -1 ? this.bundleContext.getBundle() : this.bundleContext.getBundle(Constants.SYSTEM_BUNDLE_LOCATION).getBundleContext().getBundle(cfg.getBundleId());\n-            if ( configBundle != null ) {\n+            if ( configBundle != null && configBundle.getState() == Bundle.ACTIVE ) {\n                 if ( System.getSecurityManager() == null\n                      || configBundle.hasPermission( new ServicePermission(ConfigurationAdmin.class.getName(), ServicePermission.GET)) ) {\n                     try {\n-                        final Collection<ServiceReference<ConfigurationAdmin>> refs = configBundle.getBundleContext().getServiceReferences(ConfigurationAdmin.class, null);\n-                        final List<ServiceReference<ConfigurationAdmin>> sortedRefs = new ArrayList<>(refs);\n-                        Collections.sort(sortedRefs);\n-                        for(int i=sortedRefs.size();i>0;i--) {\n-                            final ServiceReference<ConfigurationAdmin> r = sortedRefs.get(i-1);\n-                            synchronized ( this.configAdminReferences ) {\n-                                if ( this.configAdminReferences.contains(r) ) {\n-                                    configAdminServiceBundleId = r.getBundle().getBundleId();\n-                                    break;\n+                        final BundleContext ctx = configBundle.getBundleContext();\n+                        if ( ctx != null ) {\n+                            final Collection<ServiceReference<ConfigurationAdmin>> refs = ctx.getServiceReferences(ConfigurationAdmin.class, null);\n+                            final List<ServiceReference<ConfigurationAdmin>> sortedRefs = new ArrayList<>(refs);\n+                            Collections.sort(sortedRefs);\n+                            for(int i=sortedRefs.size();i>0;i--) {\n+                                final ServiceReference<ConfigurationAdmin> r = sortedRefs.get(i-1);\n+                                synchronized ( this.configAdminReferences ) {\n+                                    if ( this.configAdminReferences.contains(r) ) {\n+                                        configAdminServiceBundleId = r.getBundle().getBundleId();\n+                                        break;\n+                                    }\n                                 }\n                             }\n                         }\n+                    } catch ( final IllegalStateException e) {\n+                        // this might happen if the config admin bundle gets deactivated while we use it\n+                        // we can ignore this and retry later on\n                     } catch (final InvalidSyntaxException e) {\n                         // this can never happen as we pass {@code null} as the filter\n                     }", "filename": "osgi-r7/configurator/src/main/java/org/apache/felix/configurator/impl/Configurator.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/3c6475c4147ea5d27fa2896f044d61c29d633f8c/osgi-r7/configurator/src/test/java/org/apache/felix/configurator/impl/ConfiguratorTest.java", "blob_url": "https://github.com/apache/felix/blob/3c6475c4147ea5d27fa2896f044d61c29d633f8c/osgi-r7/configurator/src/test/java/org/apache/felix/configurator/impl/ConfiguratorTest.java", "sha": "c18c1b86c19a6cedb1a7ebb2ae80da2462563c3c", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/osgi-r7/configurator/src/test/java/org/apache/felix/configurator/impl/ConfiguratorTest.java?ref=3c6475c4147ea5d27fa2896f044d61c29d633f8c", "patch": "@@ -61,6 +61,7 @@\n     @Before public void setup() throws IOException {\n         bundle = mock(Bundle.class);\n         when(bundle.getBundleId()).thenReturn(42L);\n+        when(bundle.getState()).thenReturn(Bundle.ACTIVE);\n         bundleContext = mock(BundleContext.class);\n         when(bundle.getBundleContext()).thenReturn(bundleContext);\n         when(bundleContext.getBundle()).thenReturn(bundle);\n@@ -81,6 +82,7 @@ private Bundle setupBundle(final long id) throws Exception {\n         final Bundle b = mock(Bundle.class);\n         when(b.getBundleId()).thenReturn(id);\n         when(b.getLastModified()).thenReturn(5L);\n+        when(b.getState()).thenReturn(Bundle.ACTIVE);\n         final BundleWiring wiring = mock(BundleWiring.class);\n         when(b.adapt(BundleWiring.class)).thenReturn(wiring);\n         final BundleRequirement req = mock(BundleRequirement.class);", "filename": "osgi-r7/configurator/src/test/java/org/apache/felix/configurator/impl/ConfiguratorTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/c98132c09dc9826456cf04cd422ab2c23113930c", "parent": "https://github.com/apache/felix/commit/a448fc98366b4e6ff1a2e796a715623df9a4df1f", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1790561 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_18", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/c98132c09dc9826456cf04cd422ab2c23113930c/converter/converter/src/main/java/org/apache/felix/converter/impl/ConvertingImpl.java", "blob_url": "https://github.com/apache/felix/blob/c98132c09dc9826456cf04cd422ab2c23113930c/converter/converter/src/main/java/org/apache/felix/converter/impl/ConvertingImpl.java", "sha": "86a951b6a4d6867e27e3e29f530fbc307e955088", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/main/java/org/apache/felix/converter/impl/ConvertingImpl.java?ref=c98132c09dc9826456cf04cd422ab2c23113930c", "patch": "@@ -131,8 +131,7 @@ public Converting targetAsDTO() {\n     @Override\n     public Converting copy() {\n         forceCopy  = true;\n-\n-        return null;\n+        return this;\n     }\n \n     @Override", "filename": "converter/converter/src/main/java/org/apache/felix/converter/impl/ConvertingImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ce75baa7e53b004463d9f9be59c2d489325dfaa7", "parent": "https://github.com/apache/felix/commit/7af0cafdc65d0e69ab2973bb8fbf571a05d35055", "message": "FELIX-5627 : Class loading issues while finding fields causes an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1792985 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_19", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/ce75baa7e53b004463d9f9be59c2d489325dfaa7/scr/src/main/java/org/apache/felix/scr/impl/inject/FieldHandler.java", "blob_url": "https://github.com/apache/felix/blob/ce75baa7e53b004463d9f9be59c2d489325dfaa7/scr/src/main/java/org/apache/felix/scr/impl/inject/FieldHandler.java", "sha": "99505bfa8c7c5c1706f4ba8aeeda01cd94a04940", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/inject/FieldHandler.java?ref=ce75baa7e53b004463d9f9be59c2d489325dfaa7", "patch": "@@ -828,7 +828,9 @@ private synchronized void resolve( final FieldHandler handler, final SimpleLogge\n             try\n             {\n                 field = handler.findField( logger );\n-                field = handler.validateField( field, logger );\n+                if ( field != null ) {\n+                    field = handler.validateField( field, logger );\n+                }\n             }\n             catch ( final InvocationTargetException ex )\n             {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/inject/FieldHandler.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8ecab003f5ac6c06bc54075d04e76b1fb3d42293", "parent": "https://github.com/apache/felix/commit/129b49c8d51bf41631822ec4a4a38a648c8e9a17", "message": "FELIX-5668: Fix a possible NPE trying to get the symbolicname of the bundle of a service event.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1803519 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_20", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/8ecab003f5ac6c06bc54075d04e76b1fb3d42293/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/converter/ServiceEventConverter.java", "blob_url": "https://github.com/apache/felix/blob/8ecab003f5ac6c06bc54075d04e76b1fb3d42293/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/converter/ServiceEventConverter.java", "sha": "0092cd144db71257cc37fce7b74992dcf2d95f0f", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/converter/ServiceEventConverter.java?ref=8ecab003f5ac6c06bc54075d04e76b1fb3d42293", "patch": "@@ -62,7 +62,8 @@ public static EventInfo getInfo(final ServiceEvent event) {\n             }\n         }\n         buffer.append( \", bundle=\" );\n-        buffer.append( ref.getBundle().getSymbolicName() );\n+        Bundle bundle = ref.getBundle();\n+        buffer.append( bundle != null ? bundle.getSymbolicName() : \"<unkown>\" );\n         buffer.append( \") \" );\n         final StringBuffer topic = new StringBuffer(TOPIC);\n         topic.append('/');", "filename": "webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/converter/ServiceEventConverter.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/0192fe44ed1263035e02551267edd7d4d22f7427", "parent": "https://github.com/apache/felix/commit/51cdd67c759daf49bcbdd6617469c07d7fe3a26a", "message": "[FELIX-5655] Possible NPE in Expression.isNumber when passing an empty string\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1799927 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_21", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/0192fe44ed1263035e02551267edd7d4d22f7427/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expression.java", "blob_url": "https://github.com/apache/felix/blob/0192fe44ed1263035e02551267edd7d4d22f7427/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expression.java", "sha": "e85f2c29f46a58c9d2cd790e8ecfae645b33d87d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expression.java?ref=0192fe44ed1263035e02551267edd7d4d22f7427", "patch": "@@ -1048,7 +1048,7 @@ public BigDecimal eval(List<BigDecimal> parameters) {\n      * @return <code>true</code>, if the input string is a number.\n      */\n     private boolean isNumber(String st) {\n-        if (st.charAt(0) == minusSign && st.length() == 1)\n+        if (st == null || st.isEmpty() || st.charAt(0) == minusSign && st.length() == 1)\n             return false;\n         for (char ch : st.toCharArray()) {\n             if (!Character.isDigit(ch) && ch != minusSign", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expression.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/23b58cf4a7d3cc9333906c050e246f3934252c1c", "parent": "https://github.com/apache/felix/commit/7c5c20d8748a51fd91559c80de426a6a5812a07f", "message": "[FELIX-5463] [gogo][jline] Fix possible NPE in converter\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1779308 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_22", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/23b58cf4a7d3cc9333906c050e246f3934252c1c/gogo/jline/src/main/java/org/apache/felix/gogo/jline/BaseConverters.java", "blob_url": "https://github.com/apache/felix/blob/23b58cf4a7d3cc9333906c050e246f3934252c1c/gogo/jline/src/main/java/org/apache/felix/gogo/jline/BaseConverters.java", "sha": "a5a545af92952efa321e8fb537f451d8ffaf12a9", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/jline/src/main/java/org/apache/felix/gogo/jline/BaseConverters.java?ref=23b58cf4a7d3cc9333906c050e246f3934252c1c", "patch": "@@ -29,6 +29,7 @@\n import java.lang.reflect.Method;\n import java.lang.reflect.Proxy;\n import java.util.Arrays;\n+import java.util.Collections;\n \n public class BaseConverters implements Converter {\n \n@@ -63,7 +64,8 @@ public Object invoke(Object proxy, Method method, Object[] args)\n                                         .bindTo(proxy)\n                                         .invokeWithArguments(args);\n                             } else {\n-                                return command.execute(null, Arrays.asList(args));\n+                                return command.execute(null,\n+                                        args != null ? Arrays.asList(args) : Collections.emptyList());\n                             }\n                         }\n                     });", "filename": "gogo/jline/src/main/java/org/apache/felix/gogo/jline/BaseConverters.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/0b41eb0bac4d6a17daee8ae25694e9089b99a3b9", "parent": "https://github.com/apache/felix/commit/65407cd1634e6f659af7b7265910120ce289cee9", "message": "FELIX-4960 NPE in BundleRevisionImpl.getResourcesLocal()\n\nThe NPE is fixed. Also added a unit test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1691137 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_23", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/0b41eb0bac4d6a17daee8ae25694e9089b99a3b9/framework/src/main/java/org/apache/felix/framework/BundleRevisionImpl.java", "blob_url": "https://github.com/apache/felix/blob/0b41eb0bac4d6a17daee8ae25694e9089b99a3b9/framework/src/main/java/org/apache/felix/framework/BundleRevisionImpl.java", "sha": "abe731e26aa6e60d35ae22fc10bb53dfcd1d95cb", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/BundleRevisionImpl.java?ref=0b41eb0bac4d6a17daee8ae25694e9089b99a3b9", "patch": "@@ -202,7 +202,7 @@ public Version getVersion()\n \n     static List<Capability> asCapabilityList(List reqs)\n     {\n-        return (List<Capability>) reqs;\n+        return reqs;\n     }\n \n     public List<BundleCapability> getDeclaredCapabilities(String namespace)\n@@ -229,7 +229,7 @@ public Version getVersion()\n \n     static List<Requirement> asRequirementList(List reqs)\n     {\n-        return (List<Requirement>) reqs;\n+        return reqs;\n     }\n \n     public List<BundleRequirement> getDeclaredRequirements(String namespace)\n@@ -517,6 +517,9 @@ Enumeration getResourcesLocal(String name)\n         // each bundle class path entry...this isn't very\n         // clean or meaningful, but the Spring guys want it.\n         final List<Content> contentPath = getContentPath();\n+        if (contentPath == null)\n+            return Collections.emptyEnumeration();\n+\n         if (name.equals(\"/\"))\n         {\n             for (int i = 0; i < contentPath.size(); i++)", "filename": "framework/src/main/java/org/apache/felix/framework/BundleRevisionImpl.java"}, {"additions": 42, "raw_url": "https://github.com/apache/felix/raw/0b41eb0bac4d6a17daee8ae25694e9089b99a3b9/framework/src/test/java/org/apache/felix/framework/BundleRevisionImplTest.java", "blob_url": "https://github.com/apache/felix/blob/0b41eb0bac4d6a17daee8ae25694e9089b99a3b9/framework/src/test/java/org/apache/felix/framework/BundleRevisionImplTest.java", "sha": "685af10a72a6450aa0e8b709eafff721e7c8d2c5", "changes": 42, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/test/java/org/apache/felix/framework/BundleRevisionImplTest.java?ref=0b41eb0bac4d6a17daee8ae25694e9089b99a3b9", "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.framework;\n+\n+import java.util.Enumeration;\n+import java.util.List;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.felix.framework.cache.Content;\n+\n+public class BundleRevisionImplTest extends TestCase\n+{\n+    public void testGetResourcesLocalNullContentPath()\n+    {\n+        BundleRevisionImpl bri = new BundleRevisionImpl(null, null) {\n+            @Override\n+            synchronized List<Content> getContentPath()\n+            {\n+                return null;\n+            }\n+        };\n+        Enumeration<?> en = bri.getResourcesLocal(\"foo\");\n+        assertFalse(en.hasMoreElements());\n+    }\n+}", "filename": "framework/src/test/java/org/apache/felix/framework/BundleRevisionImplTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6d84b1961721b76637782f38c78e84f7d64c4c0f", "parent": "https://github.com/apache/felix/commit/9757556e2bed3de4b4cd1073c0d4ef3210b531c1", "message": "FELIX-5387 : NPE for requests missing 'felix-webconsole-locale' cookie\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1766584 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_24", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/6d84b1961721b76637782f38c78e84f7d64c4c0f/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java", "blob_url": "https://github.com/apache/felix/blob/6d84b1961721b76637782f38c78e84f7d64c4c0f/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java", "sha": "0eb211f1b84fa2a2fad42fefbcefd340531ef6f4", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java?ref=6d84b1961721b76637782f38c78e84f7d64c4c0f", "patch": "@@ -677,6 +677,10 @@ private final Locale getConfiguredLocale(HttpServletRequest request)\n             locale = configuredLocale;\n         if (locale == null)\n             locale = request.getLocale();\n+        // this should never happen as request.getLocale()\n+        // must return a locale (and not null). But just as a sanity check.\n+        if (locale == null)\n+            locale = Locale.ENGLISH;\n \n         return locale;\n     }", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3bf562cbf839c9390c3ac548164043a5b2a15fe7", "parent": "https://github.com/apache/felix/commit/6d4b6f27b1f25b68daa30539a5bcc934f1f67874", "message": "Felix Converter Service - fix NPE and add additional test\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1759361 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_25", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/main/java/org/apache/felix/converter/impl/AdapterImpl.java", "blob_url": "https://github.com/apache/felix/blob/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/main/java/org/apache/felix/converter/impl/AdapterImpl.java", "sha": "9c4cca9ebbfbca293f86e9c4c4a78209b9ecf06d", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/main/java/org/apache/felix/converter/impl/AdapterImpl.java?ref=3bf562cbf839c9390c3ac548164043a5b2a15fe7", "patch": "@@ -65,8 +65,11 @@ public Adapter getAdapter() {\n         if (fromCls.equals(toCls))\n             throw new IllegalArgumentException();\n \n-        classRules.put(new TypePair(fromCls, toCls), (ConvertFunction<Object, Object>) toFun);\n-        classRules.put(new TypePair(toCls, fromCls), (ConvertFunction<Object, Object>) fromFun);\n+        if (toFun != null)\n+            classRules.put(new TypePair(fromCls, toCls), (ConvertFunction<Object, Object>) toFun);\n+\n+        if (fromFun != null)\n+            classRules.put(new TypePair(toCls, fromCls), (ConvertFunction<Object, Object>) fromFun);\n         return this;\n     }\n ", "filename": "converter/converter/src/main/java/org/apache/felix/converter/impl/AdapterImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/main/java/org/osgi/service/converter/Adapter.java", "blob_url": "https://github.com/apache/felix/blob/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/main/java/org/osgi/service/converter/Adapter.java", "sha": "b882a86509585dfe12c8665d826acb7d5b7d9441", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/main/java/org/osgi/service/converter/Adapter.java?ref=3bf562cbf839c9390c3ac548164043a5b2a15fe7", "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) OSGi Alliance (2016). All Rights Reserved.\n+     * Copyright (c) OSGi Alliance (2016). All Rights Reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.", "filename": "converter/converter/src/main/java/org/osgi/service/converter/Adapter.java"}, {"additions": 35, "raw_url": "https://github.com/apache/felix/raw/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/test/java/org/apache/felix/converter/impl/AdapterTest.java", "blob_url": "https://github.com/apache/felix/blob/3bf562cbf839c9390c3ac548164043a5b2a15fe7/converter/converter/src/test/java/org/apache/felix/converter/impl/AdapterTest.java", "sha": "38240d98f7dc571a753289721c62ab19286df232", "changes": 35, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/converter/converter/src/test/java/org/apache/felix/converter/impl/AdapterTest.java?ref=3bf562cbf839c9390c3ac548164043a5b2a15fe7", "patch": "@@ -67,6 +67,41 @@ public void testStringArrayToStringAdapter() {\n                 ca.convert(\"A,B\").to(String[].class));\n     }\n \n+    static String convertToString(char[] a) {\n+        StringBuilder sb = new StringBuilder();\n+        for (char c : a) {\n+            sb.append(c);\n+        }\n+        return sb.toString();\n+    }\n+\n+    @Test\n+    public void testSecondLevelAdapter() {\n+        Adapter ca = converter.getAdapter();\n+\n+        ca.rule(char[].class, String.class, AdapterTest::convertToString, null);\n+        ca.rule(new Rule<String, Number>(String.class, Number.class, new ConvertFunction<String, Number>() {\n+            @Override\n+            public Number convert(String obj, Type targetType) throws Exception {\n+                if (Integer.class.equals(targetType))\n+                    return Integer.valueOf(-1);\n+                else if (Long.class.equals(targetType))\n+                    return Long.valueOf(-1);\n+                return null;\n+            }\n+        }));\n+\n+        assertEquals(\"hi\", ca.convert(new char[] {'h', 'i'}).to(String.class));\n+        assertEquals(Integer.valueOf(-1), ca.convert(\"Hello\").to(Integer.class));\n+        assertEquals(Long.valueOf(-1), ca.convert(\"Hello\").to(Long.class));\n+\n+        Adapter ca2 = ca.getAdapter();\n+        // Shadow the Integer variant but keep Long going to the Number variant.\n+        ca2.rule(String.class, Integer.class, v -> v.length(), null);\n+        assertEquals(5, ca2.convert(\"Hello\").to(Integer.class));\n+        assertEquals(Long.valueOf(-1), ca2.convert(\"Hello\").to(Long.class));\n+    }\n+\n     @Test @SuppressWarnings(\"rawtypes\")\n     public void testWildcardAdapter() {\n         ConvertFunction<List, Object> foo = new ConvertFunction<List, Object>() {", "filename": "converter/converter/src/test/java/org/apache/felix/converter/impl/AdapterTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2", "parent": "https://github.com/apache/felix/commit/8d52635d013f915a304c6abfe4b27e72f9f04eca", "message": "FELIX-5302 : NPE using Http Whiteboard\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1751862 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_26", "file": [{"additions": 9, "raw_url": "https://github.com/apache/felix/raw/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/registry/HandlerRegistry.java", "blob_url": "https://github.com/apache/felix/blob/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/registry/HandlerRegistry.java", "sha": "8e25b6e3fc1e6400bd097e226e16de121382773c", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/registry/HandlerRegistry.java?ref=4d80c9a243d446b7144efb1ae58458bdf1dfa5e2", "patch": "@@ -52,6 +52,15 @@ public void init()\n         this.add(new PerContextHandlerRegistry());\n     }\n \n+    /**\n+     * Reset to initial state\n+     */\n+    public void reset()\n+    {\n+        this.registrations.clear();\n+        this.init();\n+    }\n+\n     /**\n      * Shutdown\n      */", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/registry/HandlerRegistry.java"}, {"additions": 8, "raw_url": "https://github.com/apache/felix/raw/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/FailureStateHandler.java", "blob_url": "https://github.com/apache/felix/blob/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/FailureStateHandler.java", "sha": "d5e5b411ed411d1c5b082ab37a0e000b358bf00d", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/FailureStateHandler.java?ref=4d80c9a243d446b7144efb1ae58458bdf1dfa5e2", "patch": "@@ -34,6 +34,14 @@\n \n     private final Map<AbstractInfo<?>, FailureStatus> serviceFailures = new ConcurrentHashMap<AbstractInfo<?>, FailureStatus>();\n \n+    /**\n+     * Remove all failures.\n+     */\n+    public void clear()\n+    {\n+        this.serviceFailures.clear();\n+    }\n+\n     public void add(final AbstractInfo<?> info, final int reason)\n     {\n         this.add(info, 0, reason);", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/FailureStateHandler.java"}, {"additions": 24, "raw_url": "https://github.com/apache/felix/raw/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java", "blob_url": "https://github.com/apache/felix/blob/4d80c9a243d446b7144efb1ae58458bdf1dfa5e2/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java", "sha": "47662a8c73f6627766f460c9e10c6f6e8eafb061", "changes": 31, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java?ref=4d80c9a243d446b7144efb1ae58458bdf1dfa5e2", "patch": "@@ -88,12 +88,18 @@\n \n public final class WhiteboardManager\n {\n+    /** The bundle context of the http bundle. */\n     private final BundleContext httpBundleContext;\n \n+    /** The http service factory. */\n     private final HttpServiceFactory httpServiceFactory;\n \n     private final HttpServiceRuntimeImpl serviceRuntime;\n \n+    private final List<ServiceTracker<?, ?>> trackers = new ArrayList<ServiceTracker<?, ?>>();\n+\n+    private final HttpServicePlugin plugin;\n+\n     /** A map containing all servlet context registrations. Mapped by context name */\n     private final Map<String, List<WhiteboardContextHandler>> contextMap = new HashMap<String, List<WhiteboardContextHandler>>();\n \n@@ -108,17 +114,14 @@\n \n     private volatile ServiceRegistration<ServletContextHelper> defaultContextRegistration;\n \n-    private final List<ServiceTracker<?, ?>> trackers = new ArrayList<ServiceTracker<?, ?>>();\n-\n     private volatile ServiceRegistration<HttpServiceRuntime> runtimeServiceReg;\n \n-    private final HttpServicePlugin plugin;\n-\n     /**\n      * Create a new whiteboard http manager\n-     * @param bundleContext\n-     * @param httpServiceFactory\n-     * @param registry\n+     *\n+     * @param bundleContext The bundle context of the http bundle\n+     * @param httpServiceFactory The http service factory\n+     * @param registry The handler registry\n      */\n     public WhiteboardManager(final BundleContext bundleContext,\n             final HttpServiceFactory httpServiceFactory,\n@@ -131,6 +134,10 @@ public WhiteboardManager(final BundleContext bundleContext,\n         this.plugin = new HttpServicePlugin(bundleContext, this.serviceRuntime);\n     }\n \n+    /**\n+     * Start the whiteboard manager\n+     * @param containerContext The servlet context\n+     */\n     public void start(final ServletContext containerContext)\n     {\n         this.serviceRuntime.setAttribute(HttpServiceRuntimeConstants.HTTP_SERVICE_ID,\n@@ -190,6 +197,10 @@ public void ungetService(\n         this.plugin.register();\n     }\n \n+    /**\n+     * Add a tracker and start it\n+     * @param tracker The tracker instance\n+     */\n     private void addTracker(ServiceTracker<?, ?> tracker)\n     {\n         this.trackers.add(tracker);\n@@ -210,6 +221,11 @@ public void stop()\n \n         this.serviceRuntime.setServiceReference(null);\n \n+        this.contextMap.clear();\n+        this.servicesMap.clear();\n+        this.failureStateHandler.clear();\n+        this.registry.reset();\n+\n         if (this.defaultContextRegistration != null)\n         {\n             this.defaultContextRegistration.unregister();\n@@ -221,6 +237,7 @@ public void stop()\n             this.runtimeServiceReg.unregister();\n             this.runtimeServiceReg = null;\n         }\n+        this.webContext = null;\n     }\n \n     public void setProperties(final Hashtable<String, Object> props)", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/whiteboard/WhiteboardManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3fb1af7eb3d97b9c798a74daee5cb4af9270d3c8", "parent": "https://github.com/apache/felix/commit/1d9e7c28d7e72ff5119e57d9ac3d8dd4b7b0b70a", "message": "FELIX-5466 org.apache.felix.scr.bnd: Adding Target Source URL may lead to NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1776116 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_27", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/3fb1af7eb3d97b9c798a74daee5cb4af9270d3c8/tools/org.apache.felix.scr.bnd/src/main/java/org/apache/felix/scrplugin/bnd/SCRDescriptorBndPlugin.java", "blob_url": "https://github.com/apache/felix/blob/3fb1af7eb3d97b9c798a74daee5cb4af9270d3c8/tools/org.apache.felix.scr.bnd/src/main/java/org/apache/felix/scrplugin/bnd/SCRDescriptorBndPlugin.java", "sha": "f9691d2bac6a598491a93e4136b0340fdf29248e", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/tools/org.apache.felix.scr.bnd/src/main/java/org/apache/felix/scrplugin/bnd/SCRDescriptorBndPlugin.java?ref=3fb1af7eb3d97b9c798a74daee5cb4af9270d3c8", "patch": "@@ -304,7 +304,9 @@ public String getClassName() {\n \t\t\tpath.add(j.getSource().toURI().toURL());\n \t\t}\n \t\t// always add the target url (containing all compiled classes) because it it not necessarily part of the analyzer classpath\n-\t\tpath.add(a.getTarget().getSource().toURI().toURL());\n+\t\tif (a.getTarget() != null && a.getTarget().getSource() != null) {\n+\t\t    path.add(a.getTarget().getSource().toURI().toURL());\n+\t\t}\n \t\tlog.info(\"Using classpath: \" + path);\n \t\treturn path.toArray(new URL[path.size()]);\n \t}", "filename": "tools/org.apache.felix.scr.bnd/src/main/java/org/apache/felix/scrplugin/bnd/SCRDescriptorBndPlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9b9c14873a75be3cb6b4ce0185ab069d40d70e1f", "parent": "https://github.com/apache/felix/commit/99f2eb26da61bda0bdde1fbc0c0a18a090e2aa74", "message": "FELIX-5401: Added a missing null check in the updated callback, which sometimes produces a NPE after the test has run successfuly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1771507 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_28", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/9b9c14873a75be3cb6b4ce0185ab069d40d70e1f/dependencymanager/org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5401_OverrideDefaultListConfigTypeWithEmptyMap.java", "blob_url": "https://github.com/apache/felix/blob/9b9c14873a75be3cb6b4ce0185ab069d40d70e1f/dependencymanager/org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5401_OverrideDefaultListConfigTypeWithEmptyMap.java", "sha": "3a676dc588e7d9ecb8a44096d9c5559f80f70d3d", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5401_OverrideDefaultListConfigTypeWithEmptyMap.java?ref=9b9c14873a75be3cb6b4ce0185ab069d40d70e1f", "patch": "@@ -75,9 +75,11 @@ public void testDefaulValues() {\n     \n     public class MyComponent {\n         void updated(MyConfig cnf) {\n-        \tMap<String, String> map = cnf.getMap();\n-        \tAssert.assertEquals(0, map.size()); // the actual configuration contains \"map={}\" and default \"map={foo=bar}\" must not be returned\n-        \tm_ensure.step(2);\n+        \tif (cnf != null) {\n+        \t\tMap<String, String> map = cnf.getMap();\n+        \t\tAssert.assertEquals(0, map.size()); // the actual configuration contains \"map={}\" and default \"map={foo=bar}\" must not be returned\n+        \t\tm_ensure.step(2);\n+        \t}\n         }\n     }\n }", "filename": "dependencymanager/org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5401_OverrideDefaultListConfigTypeWithEmptyMap.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/da892ce1ad54867ca41df2ee11e1ec95740b4add", "parent": "https://github.com/apache/felix/commit/5ba10eb544b7430674156d38334b8aa588954a40", "message": "FELIX-5079 fix NPE introduced in 1717854\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1719115 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_29", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/da892ce1ad54867ca41df2ee11e1ec95740b4add/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "blob_url": "https://github.com/apache/felix/blob/da892ce1ad54867ca41df2ee11e1ec95740b4add/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "sha": "7ec8bad458659589dd60a40f4920b509f432b123", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java?ref=da892ce1ad54867ca41df2ee11e1ec95740b4add", "patch": "@@ -556,8 +556,11 @@ void dispose(int reason)\n                 }\n \n             }\n-            configAdminTracker.dispose();\n-\n+            if (configAdminTracker != null)\n+            {\n+            \tconfigAdminTracker.dispose();\n+            }\n+            \n             log(LogService.LOG_DEBUG, \"BundleComponentActivator : Bundle [{0}] STOPPED\",\n                 new Object[] { m_bundle.getBundleId() }, null, null, null);\n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/412b22a76e61fdfd4d1e7d733d316139a56f14aa", "parent": "https://github.com/apache/felix/commit/6dea75105231d39ca155e89dda12acbb87bf8e63", "message": "FELIX-5015 Unit tests (for NPE in ResolverImpl)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1705686 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_30", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/412b22a76e61fdfd4d1e7d733d316139a56f14aa/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/412b22a76e61fdfd4d1e7d733d316139a56f14aa/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "sha": "211e5e21d80c5251a9b3ec47a4269b1be12ad66e", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java?ref=412b22a76e61fdfd4d1e7d733d316139a56f14aa", "patch": "@@ -40,7 +40,6 @@\n \n import org.apache.felix.resolver.util.ArrayMap;\n import org.apache.felix.resolver.util.OpenHashMap;\n-\n import org.osgi.framework.namespace.BundleNamespace;\n import org.osgi.framework.namespace.ExecutionEnvironmentNamespace;\n import org.osgi.framework.namespace.HostNamespace;\n@@ -1730,12 +1729,12 @@ private static boolean isCompatible(\n         }\n \n         Set<Capability> packageSources = sources.get(cap);\n-        if(packageSources == null) \n+        if(packageSources == null)\n         {\n             return new HashSet<Capability>();\n         }\n \n-        return packageSources;  \n+        return packageSources;\n     }\n \n     private static void getPackageSourcesInternal(\n@@ -2074,7 +2073,7 @@ public WireCandidate(Requirement requirement, Capability capability)\n         }\n     }\n \n-    private static class Packages\n+    public static class Packages\n     {\n         public final OpenHashMap<String, Blame> m_exportedPkgs;\n         public final OpenHashMap<String, List<Blame>> m_importedPkgs;", "filename": "resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java"}, {"additions": 34, "raw_url": "https://github.com/apache/felix/raw/412b22a76e61fdfd4d1e7d733d316139a56f14aa/resolver/src/test/java/org/apache/felix/resolver/test/ResolverTest.java", "blob_url": "https://github.com/apache/felix/blob/412b22a76e61fdfd4d1e7d733d316139a56f14aa/resolver/src/test/java/org/apache/felix/resolver/test/ResolverTest.java", "sha": "11e518fa922aa07ebcf2a004374dca02ca88b804", "changes": 34, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/test/java/org/apache/felix/resolver/test/ResolverTest.java?ref=412b22a76e61fdfd4d1e7d733d316139a56f14aa", "patch": "@@ -23,13 +23,15 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n \n import org.apache.felix.resolver.Logger;\n import org.apache.felix.resolver.ResolverImpl;\n@@ -42,6 +44,7 @@\n import org.apache.felix.resolver.test.util.ResolveContextImpl;\n import org.apache.felix.resolver.test.util.ResourceImpl;\n import org.junit.Test;\n+import org.mockito.Mockito;\n import org.osgi.framework.Constants;\n import org.osgi.framework.namespace.BundleNamespace;\n import org.osgi.framework.namespace.HostNamespace;\n@@ -577,6 +580,37 @@ public void testScenario12() throws Exception\n         assertEquals(0, wireMap.size());\n     }\n \n+    @Test\n+    public void testPackageSources() throws Exception {\n+        Method m = ResolverImpl.class.getDeclaredMethod(\"getPackageSources\",\n+                Capability.class, Map.class);\n+        m.setAccessible(true);\n+\n+        Capability cap = Mockito.mock(Capability.class);\n+        assertEquals(Collections.emptySet(),\n+                m.invoke(null, cap, new HashMap<Resource, ResolverImpl.Packages>()));\n+\n+        Capability cap2 = Mockito.mock(Capability.class);\n+        Resource res2 = Mockito.mock(Resource.class);\n+        Mockito.when(cap2.getResource()).thenReturn(res2);\n+        Map<Resource, ResolverImpl.Packages> map2 = new HashMap<Resource, ResolverImpl.Packages>();\n+        map2.put(res2, new ResolverImpl.Packages(res2));\n+        assertEquals(Collections.emptySet(), m.invoke(null, cap2, map2));\n+\n+        Capability cap3 = Mockito.mock(Capability.class);\n+        Resource res3 = Mockito.mock(Resource.class);\n+        Mockito.when(cap3.getResource()).thenReturn(res3);\n+        Map<Resource, ResolverImpl.Packages> map3 = new HashMap<Resource, ResolverImpl.Packages>();\n+        ResolverImpl.Packages pkgs3 = new ResolverImpl.Packages(res3);\n+        Set<Capability> srcCaps3 = Collections.singleton(Mockito.mock(Capability.class));\n+        Map<Capability, Set<Capability>> srcMap3 = Collections.singletonMap(\n+                cap3, srcCaps3);\n+        pkgs3.m_sources.putAll(srcMap3);\n+        map3.put(res3, pkgs3);\n+        assertEquals(srcCaps3, m.invoke(null, cap3, map3));\n+\n+    }\n+\n     private static String getResourceName(Resource r)\n     {\n         return r.getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE).get(0).getAttributes()", "filename": "resolver/src/test/java/org/apache/felix/resolver/test/ResolverTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/d3d65ded8f2cc213023b7c1339d7e2089a1a0823", "parent": "https://github.com/apache/felix/commit/96c56ce9e2e40bf3b97fab1ef0ba89671f60eaf9", "message": "Fix potential NPE in baseline check\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1704224 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_31", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/d3d65ded8f2cc213023b7c1339d7e2089a1a0823/tools/maven-bundle-plugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java", "blob_url": "https://github.com/apache/felix/blob/d3d65ded8f2cc213023b7c1339d7e2089a1a0823/tools/maven-bundle-plugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java", "sha": "b4e5e0f253e7a9619da4dc66b79ed28cf15dd492", "changes": 24, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/felix/contents/tools/maven-bundle-plugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java?ref=d3d65ded8f2cc213023b7c1339d7e2089a1a0823", "patch": "@@ -28,17 +28,6 @@\n import java.util.Map;\n import java.util.Set;\n \n-import aQute.bnd.differ.Baseline;\n-import aQute.bnd.differ.Baseline.Info;\n-import aQute.bnd.differ.DiffPluginImpl;\n-import aQute.bnd.osgi.Instructions;\n-import aQute.bnd.osgi.Jar;\n-import aQute.bnd.osgi.Processor;\n-import aQute.bnd.service.diff.Delta;\n-import aQute.bnd.service.diff.Diff;\n-import aQute.bnd.version.Version;\n-import aQute.service.reporter.Reporter;\n-\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;\n@@ -59,6 +48,17 @@\n import org.apache.maven.project.MavenProject;\n import org.codehaus.plexus.util.StringUtils;\n \n+import aQute.bnd.differ.Baseline;\n+import aQute.bnd.differ.Baseline.Info;\n+import aQute.bnd.differ.DiffPluginImpl;\n+import aQute.bnd.osgi.Instructions;\n+import aQute.bnd.osgi.Jar;\n+import aQute.bnd.osgi.Processor;\n+import aQute.bnd.service.diff.Delta;\n+import aQute.bnd.service.diff.Diff;\n+import aQute.bnd.version.Version;\n+import aQute.service.reporter.Reporter;\n+\n /**\n  * Abstract BND Baseline check between two bundles.\n  */\n@@ -512,7 +512,7 @@ private void filterSnapshots( List<ArtifactVersion> versions )\n         for ( Iterator<ArtifactVersion> versionIterator = versions.iterator(); versionIterator.hasNext(); )\n         {\n             ArtifactVersion version = versionIterator.next();\n-            if ( version.getQualifier().endsWith( \"SNAPSHOT\" ) )\n+            if ( version.getQualifier() != null && version.getQualifier().endsWith( \"SNAPSHOT\" ) )\n             {\n                 versionIterator.remove();\n             }", "filename": "tools/maven-bundle-plugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/de16d74e29c43af71d4f67602dc103f3343d1bf3", "parent": "https://github.com/apache/felix/commit/db0043915a0232e043c4d3dbcae01c2538d7dc30", "message": "[SCR] Fix potential NPE in concurrent scenarios\n\nAlso included unit tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1690926 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_32", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/de16d74e29c43af71d4f67602dc103f3343d1bf3/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/de16d74e29c43af71d4f67602dc103f3343d1bf3/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java", "sha": "63038e841508ca319c9c414531b414c2dc3c8bca", "changes": 9, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java?ref=de16d74e29c43af71d4f67602dc103f3343d1bf3", "patch": "@@ -450,15 +450,15 @@ void unregisterComponentId()\n                 \t{\n                 \t\tservicePids.addAll((List)configPropServicePids);\n                 \t}\n-                \telse \n+                \telse\n                 \t{\n                 \t\tservicePids.add(configPropServicePids.toString());\n                 \t}\n                     if (m_factoryProperties.get(Constants.SERVICE_PID) instanceof String)\n                     {\n                         servicePids.add((String)m_factoryProperties.get(Constants.SERVICE_PID));\n                     }\n-                    \n+\n                 \tif ( servicePids.size() == 1 )\n                 \t{\n                 \t\tprops.put(Constants.SERVICE_PID, servicePids.get(0));\n@@ -761,10 +761,11 @@ private boolean servicePropertiesMatches( ServiceRegistration<S> reg, Dictionary\n     public S getService( Bundle bundle, ServiceRegistration<S> serviceRegistration )\n     {\n         boolean success = getServiceInternal();\n-        if ( success )\n+        ComponentContextImpl<S> componentContext = m_componentContext;\n+        if ( success && componentContext != null)\n         {\n             m_useCount.incrementAndGet();\n-            return m_componentContext.getImplementationObject( true );\n+            return componentContext.getImplementationObject( true );\n         }\n         else\n         {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java"}, {"additions": 94, "raw_url": "https://github.com/apache/felix/raw/de16d74e29c43af71d4f67602dc103f3343d1bf3/scr/src/test/java/org/apache/felix/scr/impl/manager/SingleComponentManagerTest.java", "blob_url": "https://github.com/apache/felix/blob/de16d74e29c43af71d4f67602dc103f3343d1bf3/scr/src/test/java/org/apache/felix/scr/impl/manager/SingleComponentManagerTest.java", "sha": "596f9bb8e943dfc8148c9cd7902ecbd69c808fba", "changes": 94, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/test/java/org/apache/felix/scr/impl/manager/SingleComponentManagerTest.java?ref=de16d74e29c43af71d4f67602dc103f3343d1bf3", "patch": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.scr.impl.manager;\n+\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertSame;\n+\n+import java.lang.reflect.Field;\n+\n+import org.apache.felix.scr.impl.config.ComponentContainer;\n+import org.apache.felix.scr.impl.helper.ComponentMethods;\n+import org.apache.felix.scr.impl.metadata.ComponentMetadata;\n+import org.apache.felix.scr.impl.metadata.DSVersion;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+\n+public class SingleComponentManagerTest\n+{\n+    @Test\n+    public void testGetService() throws Exception {\n+        ComponentMetadata cm = new ComponentMetadata(DSVersion.DS13);\n+        cm.setImplementationClassName(\"foo.bar.SomeClass\");\n+        cm.validate(null);\n+\n+        @SuppressWarnings(\"unchecked\")\n+        ComponentContainer<Object> cc = Mockito.mock(ComponentContainer.class);\n+        Mockito.when(cc.getComponentMetadata()).thenReturn(cm);\n+\n+        SingleComponentManager<Object> scm = new SingleComponentManager<Object>(cc, new ComponentMethods()) {\n+            @Override\n+            boolean getServiceInternal()\n+            {\n+                return true;\n+            }\n+        };\n+\n+        BundleContext bc = Mockito.mock(BundleContext.class);\n+        Bundle b = Mockito.mock(Bundle.class);\n+        Mockito.when(b.getBundleContext()).thenReturn(bc);\n+\n+        ComponentContextImpl<Object> cci = new ComponentContextImpl<Object>(scm, b);\n+        Object implObj = new Object();\n+        cci.setImplementationObject(implObj);\n+        cci.setImplementationAccessible(true);\n+\n+        Field f = SingleComponentManager.class.getDeclaredField(\"m_componentContext\");\n+        f.setAccessible(true);\n+        f.set(scm, cci);\n+\n+        scm.m_internalEnabled = true;\n+        assertSame(implObj, scm.getService(null, null));\n+    }\n+\n+    @Test\n+    public void testGetServiceWithNullComponentContext()\n+    {\n+        ComponentMetadata cm = new ComponentMetadata(DSVersion.DS13);\n+        cm.setImplementationClassName(\"foo.bar.SomeClass\");\n+        cm.validate(null);\n+\n+        @SuppressWarnings(\"unchecked\")\n+        ComponentContainer<Object> cc = Mockito.mock(ComponentContainer.class);\n+        Mockito.when(cc.getComponentMetadata()).thenReturn(cm);\n+\n+        SingleComponentManager<?> scm = new SingleComponentManager<Object>(cc, new ComponentMethods()) {\n+            @Override\n+            boolean getServiceInternal()\n+            {\n+                return true;\n+            }\n+        };\n+        scm.m_internalEnabled = true;\n+        assertNull(\"m_componentContext is null, this should not cause an NPE\",\n+                scm.getService(null, null));\n+    }\n+}", "filename": "scr/src/test/java/org/apache/felix/scr/impl/manager/SingleComponentManagerTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ff08e5caf75b5b78454d699c3bff45af1b809539", "parent": "https://github.com/apache/felix/commit/ce6a80c41ce2473de68074618a86faaf10b7fc0c", "message": "FELIX-4883 Fix NPE when creating ServiceReferenceDTO - callsite\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1681097 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_33", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/ff08e5caf75b5b78454d699c3bff45af1b809539/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "blob_url": "https://github.com/apache/felix/blob/ff08e5caf75b5b78454d699c3bff45af1b809539/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "sha": "4dd05c40680b8fccde1f71d9eda451f111fe3736", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java?ref=ff08e5caf75b5b78454d699c3bff45af1b809539", "patch": "@@ -157,7 +157,9 @@ private ComponentConfigurationDTO managerToConfiguration(ComponentManager<?> man\n                 int j = 0;\n                 for (ServiceReference<?> serviceRef : serviceRefs)\n                 {\n-                    srDTOs[j++] = serviceReferenceToDTO(serviceRef);\n+                    ServiceReferenceDTO srefDTO = serviceReferenceToDTO(serviceRef);\n+                    if (srefDTO != null)\n+                        srDTOs[j++] = srefDTO;\n                 }\n                 dto.boundServices = srDTOs;\n                 dtos.add(dto);\n@@ -181,7 +183,9 @@ private ComponentConfigurationDTO managerToConfiguration(ComponentManager<?> man\n                 int j = 0;\n                 for (ServiceReference<?> serviceRef : serviceRefs)\n                 {\n-                    srDTOs[j++] = serviceReferenceToDTO(serviceRef);\n+                    ServiceReferenceDTO srefDTO = serviceReferenceToDTO(serviceRef);\n+                    if (srefDTO != null)\n+                        srDTOs[j++] = srefDTO;\n                 }\n                 dto.targetServices = srDTOs;\n                 dtos.add(dto);", "filename": "scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ce6a80c41ce2473de68074618a86faaf10b7fc0c", "parent": "https://github.com/apache/felix/commit/4215fe371e0e2902cc3952b4d55619f9905c8e9b", "message": "FELIX-4883 Fix NPE when creating ServiceReferenceDTO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1681073 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_34", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/ce6a80c41ce2473de68074618a86faaf10b7fc0c/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "blob_url": "https://github.com/apache/felix/blob/ce6a80c41ce2473de68074618a86faaf10b7fc0c/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "sha": "eb43a329bec874308b46350dcb6bddbf5edf36a0", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java?ref=ce6a80c41ce2473de68074618a86faaf10b7fc0c", "patch": "@@ -192,6 +192,9 @@ private ComponentConfigurationDTO managerToConfiguration(ComponentManager<?> man\n \n \tprivate ServiceReferenceDTO serviceReferenceToDTO( ServiceReference<?> serviceRef)\n \t{\n+\t    if (serviceRef == null)\n+\t        return null;\n+\n \t\tServiceReferenceDTO dto = new ServiceReferenceDTO();\n \t\tdto.bundle = serviceRef.getBundle().getBundleId();\n \t\tdto.id = (Long) serviceRef.getProperty(Constants.SERVICE_ID);", "filename": "scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b369909ec8bd44036046bf9c16c941b365e232fa", "parent": "https://github.com/apache/felix/commit/f2d3d105efc1e36425733dab904bcd3dc616bc8c", "message": "FELIX-4892 NPE in maven-bundle-plugin\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1680303 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_35", "file": [{"additions": 22, "raw_url": "https://github.com/apache/felix/raw/b369909ec8bd44036046bf9c16c941b365e232fa/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java", "blob_url": "https://github.com/apache/felix/blob/b369909ec8bd44036046bf9c16c941b365e232fa/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java", "sha": "591ccbef598faf594140ddef4c48fba8301a4d23", "changes": 34, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java?ref=b369909ec8bd44036046bf9c16c941b365e232fa", "patch": "@@ -28,6 +28,17 @@\n import java.util.Map;\n import java.util.Set;\n \n+import aQute.bnd.differ.Baseline;\n+import aQute.bnd.differ.Baseline.Info;\n+import aQute.bnd.differ.DiffPluginImpl;\n+import aQute.bnd.osgi.Instructions;\n+import aQute.bnd.osgi.Jar;\n+import aQute.bnd.osgi.Processor;\n+import aQute.bnd.service.diff.Delta;\n+import aQute.bnd.service.diff.Diff;\n+import aQute.bnd.version.Version;\n+import aQute.service.reporter.Reporter;\n+\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;\n@@ -48,17 +59,6 @@\n import org.apache.maven.project.MavenProject;\n import org.codehaus.plexus.util.StringUtils;\n \n-import aQute.bnd.differ.Baseline;\n-import aQute.bnd.differ.Baseline.Info;\n-import aQute.bnd.differ.DiffPluginImpl;\n-import aQute.bnd.osgi.Instructions;\n-import aQute.bnd.osgi.Jar;\n-import aQute.bnd.osgi.Processor;\n-import aQute.bnd.service.diff.Delta;\n-import aQute.bnd.service.diff.Diff;\n-import aQute.bnd.version.Version;\n-import aQute.service.reporter.Reporter;\n-\n /**\n  * Abstract BND Baseline check between two bundles.\n  */\n@@ -161,7 +161,17 @@ protected void execute( Object context)\n         }\n \n         final Artifact previousArtifact = getPreviousArtifact();\n-        final Jar previousBundle = openJar(previousArtifact.getFile());\n+\n+        final Jar previousBundle;\n+        if (previousArtifact != null)\n+        {\n+            previousBundle = openJar(previousArtifact.getFile());\n+        }\n+        else\n+        {\n+            previousBundle = null;\n+        }\n+\n         if ( previousBundle == null )\n         {\n             getLog().info( \"Not generating Baseline report as there is no previous version of the library to compare against\" );", "filename": "bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/331c0a17c99136ea5829fd71e7e8fef8f013a8a2", "parent": "https://github.com/apache/felix/commit/23dc30372465897e9843b04a92a26d76fda0b95f", "message": "Fixed a bug in the test (the configuration pid was not set, this could potentially cause a NPE in ConfigurationEventImpl.compareTo() method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1740706 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_36", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/331c0a17c99136ea5829fd71e7e8fef8f013a8a2/dependencymanager/org.apache.felix.dependencymanager/test/test/ConfigurationTest.java", "blob_url": "https://github.com/apache/felix/blob/331c0a17c99136ea5829fd71e7e8fef8f013a8a2/dependencymanager/org.apache.felix.dependencymanager/test/test/ConfigurationTest.java", "sha": "98f4e8f057851309b76153980cd761ddc0b49bc8", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/org.apache.felix.dependencymanager/test/test/ConfigurationTest.java?ref=331c0a17c99136ea5829fd71e7e8fef8f013a8a2", "patch": "@@ -38,6 +38,7 @@ public void testConfigurationFailure() throws Throwable {\n \n         // Create our configuration dependency\n         final ConfigurationDependencyImpl conf = new ConfigurationDependencyImpl();\n+        conf.setPid(\"some.pid\");\n \n         // Create another required dependency\n         final SimpleServiceDependency requiredDependency = new SimpleServiceDependency();\n@@ -120,7 +121,8 @@ void start() {\n             conf.updated(props);\n         }\n         catch (ConfigurationException err) {\n-            warn(\"got expected configuration error\");\n+            warn(\"got unexpected configuration error\");\n+            e.throwable(err);\n         }\n         \n         // This time, our component should be started properly.", "filename": "dependencymanager/org.apache.felix.dependencymanager/test/test/ConfigurationTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b2969a2765c1770712efe6842c6eb1d55ee5f894", "parent": "https://github.com/apache/felix/commit/80c00cb295148c9d088563af9f6291e1fb3bd87f", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@810483 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_37", "file": [{"additions": 9, "raw_url": "https://github.com/apache/felix/raw/b2969a2765c1770712efe6842c6eb1d55ee5f894/fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java", "blob_url": "https://github.com/apache/felix/blob/b2969a2765c1770712efe6842c6eb1d55ee5f894/fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java", "sha": "168ad79103d98675219eeda066d99d7416abd705", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java?ref=b2969a2765c1770712efe6842c6eb1d55ee5f894", "patch": "@@ -142,6 +142,15 @@ public void run()\n             try\n             {\n                 Set/*<File>*/ files = scanner.scan();\n+                // Check that there is a result.  If not, this means that the directory can not be listed,\n+                // so it's presumably not a valid directory (it may have been deleted by someone).\n+                // In such case, just sleep\n+                if (files == null)\n+                {\n+                    Thread.sleep(poll);\n+                    continue;\n+                }\n+\n                 List/*<ArtifactListener>*/ listeners = FileInstall.getListeners();\n                 List/*<Artifact>*/ deleted = new ArrayList/*<Artifact>*/();\n                 List/*<Artifact>*/ modified = new ArrayList/*<Artifact>*/();", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/420266fb8f657308d4fee810a840ae62f7991714", "parent": "https://github.com/apache/felix/commit/f70325c94ed8cbc5deffad3dbb02c5a2e9a780ab", "message": "Avoid possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@803523 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_38", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/420266fb8f657308d4fee810a840ae62f7991714/karaf/gshell/gshell-config/src/main/java/org/apache/felix/karaf/gshell/config/completers/ConfigurationCompleter.java", "blob_url": "https://github.com/apache/felix/blob/420266fb8f657308d4fee810a840ae62f7991714/karaf/gshell/gshell-config/src/main/java/org/apache/felix/karaf/gshell/config/completers/ConfigurationCompleter.java", "sha": "8ee9ca8373c4e18cfe582ae0f247b5fe533deb14", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/gshell/gshell-config/src/main/java/org/apache/felix/karaf/gshell/config/completers/ConfigurationCompleter.java?ref=420266fb8f657308d4fee810a840ae62f7991714", "patch": "@@ -50,6 +50,9 @@ public void init() {\n         Configuration[] configs;\n         try {\n             configs = admin.listConfigurations(null);\n+            if (configs == null) {\n+                return;\n+            }\n         } catch (Exception e) {\n             return;\n         }", "filename": "karaf/gshell/gshell-config/src/main/java/org/apache/felix/karaf/gshell/config/completers/ConfigurationCompleter.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/17c31618089a049f7dc6a10675d275dbd6bb71b7", "parent": "https://github.com/apache/felix/commit/7c92cad682d1bedd19af9dcace1e5c932c9b4473", "message": "[FELIX-4642] NPE in the resolver when substituting\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1625895 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_39", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/17c31618089a049f7dc6a10675d275dbd6bb71b7/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/17c31618089a049f7dc6a10675d275dbd6bb71b7/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "sha": "230912a17235a6f0ddd0914ce3a996a20f6d5038", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java?ref=17c31618089a049f7dc6a10675d275dbd6bb71b7", "patch": "@@ -1520,7 +1520,7 @@ static void permutateIfNeeded(\n             for (Candidates existingPerm : permutations)\n             {\n                 List<Capability> existingPermCands = existingPerm.getCandidates(req);\n-                if (!existingPermCands.get(0).equals(candidates.get(0)))\n+                if (existingPermCands != null && !existingPermCands.get(0).equals(candidates.get(0)))\n                 {\n                     permutated = true;\n                 }", "filename": "resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f7811225907d199c0c955314a148615673bc387b", "parent": "https://github.com/apache/felix/commit/9a3fd76339d0ad42212999f99675e6a106c81c9a", "message": "FELIX-4401 avoid NPE fetching a nonexistant DTO\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1602638 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_40", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/f7811225907d199c0c955314a148615673bc387b/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "blob_url": "https://github.com/apache/felix/blob/f7811225907d199c0c955314a148615673bc387b/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java", "sha": "62c2b866aa60b110603e3fd3909f38e14b532ef1", "changes": 19, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java?ref=f7811225907d199c0c955314a148615673bc387b", "patch": "@@ -2,6 +2,7 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n \n@@ -56,14 +57,24 @@ public ServiceComponentRuntimeImpl(BundleContext context,\n \t\treturn result;\n \t}\n \n-\tpublic ComponentDescriptionDTO getComponentDescriptionDTO(Bundle bundle,\n-\t\t\tString name) {\n+\tpublic ComponentDescriptionDTO getComponentDescriptionDTO(Bundle bundle, String name) {\n \t\tComponentHolder<?> holder = componentRegistry.getComponentHolder(bundle, name);\n-\t\treturn holderToDescription(holder);\n+\t\tif ( holder != null )\n+\t\t{\n+\t\t\treturn holderToDescription(holder);\n+\t\t}\n+\t\telse \n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n \t}\n \n \tpublic Collection<ComponentConfigurationDTO> getComponentConfigurationDTOs(\n \t\t\tComponentDescriptionDTO description) {\n+\t\tif ( description == null)\n+\t\t{\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n \t\tComponentHolder<?> holder = getHolderFromDescription( description);\n \t\t//Get a fully filled out valid description DTO\n \t\tdescription = holderToDescription(holder);\n@@ -130,7 +141,7 @@ private ServiceReferenceDTO serviceReferenceToDTO(\n \t\treturn dto;\n \t}\n \n-\tprivate ComponentHolder getHolderFromDescription(\n+\tprivate ComponentHolder<?> getHolderFromDescription(\n \t\t\tComponentDescriptionDTO description) {\n \t\tif (description.bundle == null)\n \t\t{", "filename": "scr/src/main/java/org/apache/felix/scr/impl/runtime/ServiceComponentRuntimeImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/bbd21c103ab62e63d506229ca686247264e3801e", "parent": "https://github.com/apache/felix/commit/91e217b4ef28dadb610f6931e9790609dff328fc", "message": "[FELIX-4512] Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1596856 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_41", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/bbd21c103ab62e63d506229ca686247264e3801e/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/BaselinePlugin.java", "blob_url": "https://github.com/apache/felix/blob/bbd21c103ab62e63d506229ca686247264e3801e/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/BaselinePlugin.java", "sha": "0a46a268aa67c4baa096e4c87ce41c1a53232590", "changes": 21, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/BaselinePlugin.java?ref=bbd21c103ab62e63d506229ca686247264e3801e", "patch": "@@ -163,18 +163,21 @@ protected void startPackage( boolean mismatch,\n             }\n \n             xmlWriter.startElement( \"attributes\" );\n-            for ( Entry<String, String> attribute : attributes.entrySet() )\n+            if (attributes != null)\n             {\n-                String attributeName = attribute.getKey();\n-                if ( ':' == attributeName.charAt( attributeName.length() - 1 ) )\n+                for (Entry<String, String> attribute : attributes.entrySet())\n                 {\n-                    attributeName = attributeName.substring( 0, attributeName.length() - 1 );\n-                }\n-                String attributeValue = attribute.getValue();\n+                    String attributeName = attribute.getKey();\n+                    if (':' == attributeName.charAt(attributeName.length() - 1))\n+                    {\n+                        attributeName = attributeName.substring(0, attributeName.length() - 1);\n+                    }\n+                    String attributeValue = attribute.getValue();\n \n-                xmlWriter.startElement( attributeName );\n-                xmlWriter.writeText( attributeValue );\n-                xmlWriter.endElement();\n+                    xmlWriter.startElement(attributeName);\n+                    xmlWriter.writeText(attributeValue);\n+                    xmlWriter.endElement();\n+                }\n             }\n             xmlWriter.endElement();\n         }", "filename": "bundleplugin/src/main/java/org/apache/felix/bundleplugin/baseline/BaselinePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1deea29593498fd6d1dfea16a4c6e917b53b9fa3", "parent": "https://github.com/apache/felix/commit/15a0dcbcec01cf93f8bf7c4dc8cd5146d4e29343", "message": "FELIX-4469 scrcommand help should not give NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1590351 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_42", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/1deea29593498fd6d1dfea16a4c6e917b53b9fa3/scr/src/main/java/org/apache/felix/scr/impl/ScrShellCommand.java", "blob_url": "https://github.com/apache/felix/blob/1deea29593498fd6d1dfea16a4c6e917b53b9fa3/scr/src/main/java/org/apache/felix/scr/impl/ScrShellCommand.java", "sha": "a9693284ddb343fd0db57deb9b72374bbf87b5ae", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/ScrShellCommand.java?ref=1deea29593498fd6d1dfea16a4c6e917b53b9fa3", "patch": "@@ -113,7 +113,7 @@ else if (command.equals(CONFIG_CMD))\n \n     private void help(PrintStream out, String command)\n     {\n-        if (command.equals(LIST_CMD))\n+        if (LIST_CMD.equals( command ))\n         {\n             out.println(\"\");\n             out.println(\"scr \" + LIST_CMD + \" [ <bundleId> ]\");\n@@ -122,7 +122,7 @@ private void help(PrintStream out, String command)\n                 + \"added, only the components of the selected bundles are listed.\");\n             out.println(\"\");\n         }\n-        else if (command.equals(INFO_CMD))\n+        else if (INFO_CMD.equals( command ))\n         {\n             out.println(\"\");\n             out.println(\"scr \" + INFO_CMD + \" <componentId>\");\n@@ -131,23 +131,23 @@ else if (command.equals(INFO_CMD))\n                 + \"component ID is given as command argument.\");\n             out.println(\"\");\n         }\n-        else if (command.equals(ENABLE_CMD))\n+        else if (ENABLE_CMD.equals( command ))\n         {\n             out.println(\"\");\n             out.println(\"scr \" + ENABLE_CMD + \" <componentId>\");\n             out.println(\"\");\n             out.println(\"This command enables the component whose component ID\\n\" + \"is given as command argument.\");\n             out.println(\"\");\n         }\n-        else if (command.equals(DISABLE_CMD))\n+        else if (DISABLE_CMD.equals( command ))\n         {\n             out.println(\"\");\n             out.println(\"scr \" + DISABLE_CMD + \" <componentId>\");\n             out.println(\"\");\n             out.println(\"This command disables the component whose component ID\\n\" + \"is given as command argument.\");\n             out.println(\"\");\n         }\n-        else if (command.equals(CONFIG_CMD))\n+        else if (CONFIG_CMD.equals( command ))\n         {\n             out.println(\"\");\n             out.println(\"scr \" + CONFIG_CMD);", "filename": "scr/src/main/java/org/apache/felix/scr/impl/ScrShellCommand.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f0a4e4ba8d979275236d4e2a2a5760bb5369ad6a", "parent": "https://github.com/apache/felix/commit/547af0ff8e95a848439a3beadb398b519d58962e", "message": "[FELIX-4363] Fix NPE when setting a variable to null\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1574745 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_43", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/f0a4e4ba8d979275236d4e2a2a5760bb5369ad6a/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java", "blob_url": "https://github.com/apache/felix/blob/f0a4e4ba8d979275236d4e2a2a5760bb5369ad6a/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java", "sha": "63e4f980f245714066345771be38d8342ae23920", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java?ref=f0a4e4ba8d979275236d4e2a2a5760bb5369ad6a", "patch": "@@ -53,7 +53,7 @@\n     PrintStream err;\n     \n     private final CommandProcessorImpl processor;\n-    protected final Map<String, Object> variables = new ConcurrentHashMap<String, Object>();\n+    protected final Map<String, Object> variables = new HashMap<String, Object>();\n     private boolean closed;\n \n     protected CommandSessionImpl(CommandProcessorImpl shell, InputStream in, PrintStream out, PrintStream err)\n@@ -153,7 +153,10 @@ else if( val != null )\n \n     public void put(String name, Object value)\n     {\n-        variables.put(name, value);\n+        synchronized (variables)\n+        {\n+            variables.put(name, value);\n+        }\n     }\n \n     public PrintStream getConsole()", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ac2446433d66f1fb11138583d24c2312cc8afd7d", "parent": "https://github.com/apache/felix/commit/60e26e0960c66591f2fced4209c1ae0b1adf25df", "message": "FELIX-4186: Fixed NPE in dependency manager Logger.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1523504 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_44", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/ac2446433d66f1fb11138583d24c2312cc8afd7d/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/Logger.java", "blob_url": "https://github.com/apache/felix/blob/ac2446433d66f1fb11138583d24c2312cc8afd7d/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/Logger.java", "sha": "2084ed4932bce8454479c3e10532a6f0ad65a207", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/Logger.java?ref=ac2446433d66f1fb11138583d24c2312cc8afd7d", "patch": "@@ -195,7 +195,7 @@ else if ((event.getType() == ServiceEvent.REGISTERED) && (m_logRef != null)) {\n         }\n         // if the current logger is going away, release it and try to\n         // find another one\n-        else if ((event.getType() == ServiceEvent.UNREGISTERING) && m_logRef.equals(event.getServiceReference())) {\n+        else if ((event.getType() == ServiceEvent.UNREGISTERING) && m_logRef != null && m_logRef.equals(event.getServiceReference())) {\n             // Unget the service object.\n             m_context.ungetService(m_logRef);\n             // Try to get an existing log service.", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/Logger.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f", "parent": "https://github.com/apache/felix/commit/264afeb6187065bd05611ec1972fcd7bfe5e0b3d", "message": "Fix the NPE in the DependencyModel\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1497417 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_45", "file": [{"additions": 38, "raw_url": "https://github.com/apache/felix/raw/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/main/java/org/apache/felix/ipojo/runtime/core/test/components/error/NullPointerExceptionBinder.java", "blob_url": "https://github.com/apache/felix/blob/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/main/java/org/apache/felix/ipojo/runtime/core/test/components/error/NullPointerExceptionBinder.java", "sha": "3aca79dd8c0e73966e469869c49facc10f82f293", "changes": 38, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/main/java/org/apache/felix/ipojo/runtime/core/test/components/error/NullPointerExceptionBinder.java?ref=b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f", "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.ipojo.runtime.core.test.components.error;\n+\n+import org.apache.felix.ipojo.annotations.*;\n+import org.apache.felix.ipojo.architecture.Architecture;\n+\n+\n+\n+@Component(immediate=true)\n+@Instantiate\n+/**\n+ * Throws an NPE when binding a service.\n+ */\n+public class NullPointerExceptionBinder {\n+\n+  @Bind(id=\"instances\", aggregate=true, optional=true)\n+  public void bindInstance(Architecture instance) {\n+    throw new NullPointerException(\"something went terribly wrong\");\n+  }\n+\n+}", "filename": "ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/main/java/org/apache/felix/ipojo/runtime/core/test/components/error/NullPointerExceptionBinder.java"}, {"additions": 46, "raw_url": "https://github.com/apache/felix/raw/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/test/java/org/apache/felix/ipojo/runtime/core/test/dependencies/error/TestNPEInBindMethod.java", "blob_url": "https://github.com/apache/felix/blob/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/test/java/org/apache/felix/ipojo/runtime/core/test/dependencies/error/TestNPEInBindMethod.java", "sha": "e518d68e186e58eb4a66883b5f94bed47307d317", "changes": 46, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/test/java/org/apache/felix/ipojo/runtime/core/test/dependencies/error/TestNPEInBindMethod.java?ref=b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f", "patch": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.ipojo.runtime.core.test.dependencies.error;\n+\n+import org.apache.felix.ipojo.*;\n+import org.apache.felix.ipojo.runtime.core.test.dependencies.Common;\n+import org.junit.Test;\n+\n+import static junit.framework.Assert.assertEquals;\n+import static junit.framework.Assert.assertNotNull;\n+\n+/**\n+ * Checks what happens when we access a service throwing a NPE in its bind method.\n+ */\n+public class TestNPEInBindMethod extends Common {\n+\n+\n+    @Test\n+    public void testNPEInBindMethod() throws MissingHandlerException, UnacceptableConfiguration, ConfigurationException {\n+         Factory factory = ipojoHelper.getFactory(\"org.apache.felix.ipojo.runtime.core.test.components.error\" +\n+                 \".NullPointerExceptionBinder\");\n+\n+        assertNotNull(factory);\n+\n+        ComponentInstance instance = factory.createComponentInstance(null);\n+        assertEquals(instance.getState(), ComponentInstance.STOPPED);\n+\n+    }\n+\n+}", "filename": "ipojo/runtime/core-it/ipojo-core-service-dependency-test/src/test/java/org/apache/felix/ipojo/runtime/core/test/dependencies/error/TestNPEInBindMethod.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/util/DependencyModel.java", "blob_url": "https://github.com/apache/felix/blob/b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/util/DependencyModel.java", "sha": "0ff5614ee7e220d1ff214b46639628ee007d19a1", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/util/DependencyModel.java?ref=b7cc5a29018542ddad92a414c9fbe6f9f29bfc5f", "patch": "@@ -907,6 +907,11 @@ public Object getService(ServiceReference ref) {\n      * @return the service object attached to the given reference\r\n      */\r\n     public Object getService(ServiceReference ref, boolean store) {\r\n+        if (m_tracker == null) {\r\n+            // The tracker is already closed, we can't access the service anymore.\r\n+            return null;\r\n+        }\r\n+\r\n         Object svc = m_tracker.getService(ref);\r\n         IPOJOServiceFactory factory = null;\r\n \r", "filename": "ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/util/DependencyModel.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3581344c7b323b2ee7120933dd9c75f3d69e528b", "parent": "https://github.com/apache/felix/commit/8fd0a7b69c6f5c1d8f96792dbec826a8df3a1bf0", "message": "FELIX-4088 Fix NPE on concurrent configuration deletion/bundle stop\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1487635 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_46", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/3581344c7b323b2ee7120933dd9c75f3d69e528b/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java", "blob_url": "https://github.com/apache/felix/blob/3581344c7b323b2ee7120933dd9c75f3d69e528b/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java", "sha": "4492cb4262947e5fd265b9926980f86ede004cbb", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java?ref=3581344c7b323b2ee7120933dd9c75f3d69e528b", "patch": "@@ -108,6 +108,10 @@ public void configureComponentHolder(final ComponentHolder holder)\n         if (!holder.getComponentMetadata().isConfigurationIgnored())\n         {\n             final BundleContext bundleContext = holder.getActivator().getBundleContext();\n+            if ( bundleContext == null )\n+            {\n+                return;// bundle was stopped concurrently with configuration deletion\n+            }\n             final String confPid = holder.getComponentMetadata().getConfigurationPid();\n \n             final ServiceReference caRef = bundleContext.getServiceReference(ComponentRegistry.CONFIGURATION_ADMIN);", "filename": "scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/74ed6235bc6f4b874f68c176383176ddc8a955ac", "parent": "https://github.com/apache/felix/commit/de8d6db6e6caf901d0c1570653442bc1dd8fd56f", "message": "FELIX-4011 fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1463820 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_47", "file": [{"additions": 0, "raw_url": "https://github.com/apache/felix/raw/74ed6235bc6f4b874f68c176383176ddc8a955ac/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceFactoryComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/74ed6235bc6f4b874f68c176383176ddc8a955ac/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceFactoryComponentManager.java", "sha": "1d8c65e728baa8249cc03fbfee700a44ddc7856e", "changes": 6, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceFactoryComponentManager.java?ref=74ed6235bc6f4b874f68c176383176ddc8a955ac", "patch": "@@ -184,7 +184,6 @@ public void ungetService( Bundle bundle, ServiceRegistration<S> registration, S\n \n         disposeImplementationObject( serviceContext, ComponentConstants.DEACTIVATION_REASON_DISPOSED );\n         serviceContexts.remove( service );\n-        cleanupImplementationObject( service );\n         // if this was the last use of the component, go back to REGISTERED state\n         if ( serviceContexts.isEmpty() && getState() == STATE_ACTIVE )\n         {\n@@ -198,11 +197,6 @@ EdgeInfo getEdgeInfo( S implObject, DependencyManager<S, ?> dependencyManager)\n         return serviceContexts.get( implObject ).getEdgeInfo( dependencyManager );\n     }\n \n-    protected void cleanupImplementationObject( Object implementationObject )\n-    {\n-        serviceContexts.get( implementationObject ).clearEdgeInfos();\n-    }\n-\n     <T> void invokeBindMethod( DependencyManager<S, T> dependencyManager, RefPair<T> refPair, int trackingCount )\n     {\n         for ( S implementationObject : serviceContexts.keySet() )", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceFactoryComponentManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9d3105d37e4d1e88adcf00c5498d5b29251b2221", "parent": "https://github.com/apache/felix/commit/2b6839e8647ce4136dd0118e4134185e0ade35ce", "message": "FELIX-3967 fix NPE in DependencyManager... isSatisfied\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1455425 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_48", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/9d3105d37e4d1e88adcf00c5498d5b29251b2221/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/9d3105d37e4d1e88adcf00c5498d5b29251b2221/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "0b04d412a9caf12e86054b9b88af7c84e8d663de", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=9d3105d37e4d1e88adcf00c5498d5b29251b2221", "patch": "@@ -1792,6 +1792,7 @@ private void registerServiceListener( SortedMap<ServiceReference<T>, RefPair<T>>\n         ServiceTracker<T, RefPair<T>> tracker = new ServiceTracker<T, RefPair<T>>( m_componentManager.getActivator().getBundleContext(), m_targetFilter, customizer, initialActive );\n         customizer.setTracker( tracker );\n         trackerRef.set( tracker );\n+        customizerRef.set( customizer );\n         registered = true;\n         tracker.open( m_componentManager.getTrackingCount() );\n         customizer.setTrackerOpened();\n@@ -1839,7 +1840,6 @@ else if ( isMultiple() )\n                 customizer = new SingleDynamicCustomizer();\n             }\n         }\n-        customizerRef.set( customizer );\n         return customizer;\n     }\n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6dea75105231d39ca155e89dda12acbb87bf8e63", "parent": "https://github.com/apache/felix/commit/5745b8c3dae6950a3a77ebe285345a58a3ae23dc", "message": "FELIX-5015 NPE in ResolverImpl\n\nApplying patch on behalf of Alexandre Roman with many thanks!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1705679 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_49", "file": [{"additions": 19, "raw_url": "https://github.com/apache/felix/raw/6dea75105231d39ca155e89dda12acbb87bf8e63/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/6dea75105231d39ca155e89dda12acbb87bf8e63/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "sha": "cf7daa098b4ce107ef179d5e7c3e1f104d0e1fe0", "changes": 20, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java?ref=6dea75105231d39ca155e89dda12acbb87bf8e63", "patch": "@@ -1717,7 +1717,25 @@ private static boolean isCompatible(\n     private static Set<Capability> getPackageSources(\n             Capability cap, Map<Resource, Packages> resourcePkgMap)\n     {\n-        return resourcePkgMap.get(cap.getResource()).m_sources.get(cap);\n+        Resource resource = cap.getResource();\n+        if(resource == null)\n+        {\n+            return new HashSet<Capability>();\n+        }\n+\n+        OpenHashMap<Capability, Set<Capability>> sources = resourcePkgMap.get(resource).m_sources;\n+        if(sources == null)\n+        {\n+            return new HashSet<Capability>();\n+        }\n+\n+        Set<Capability> packageSources = sources.get(cap);\n+        if(packageSources == null) \n+        {\n+            return new HashSet<Capability>();\n+        }\n+\n+        return packageSources;  \n     }\n \n     private static void getPackageSourcesInternal(", "filename": "resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/adfe15da73644c6f262ec40bf87087454702d3b8", "parent": "https://github.com/apache/felix/commit/8c13cef5f7522f81cd54c5a0db641be12c49baf8", "message": "FELIX-3729 fix NPE in getServiceReferences, continue with tracking count\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1424310 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_50", "file": [{"additions": 25, "raw_url": "https://github.com/apache/felix/raw/adfe15da73644c6f262ec40bf87087454702d3b8/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/adfe15da73644c6f262ec40bf87087454702d3b8/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "c427d09345678cad0b9725206b8a8e5ca9e56005", "changes": 29, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=adfe15da73644c6f262ec40bf87087454702d3b8", "patch": "@@ -30,6 +30,7 @@\n import java.util.Set;\n import java.util.SortedMap;\n import java.util.TreeMap;\n+import java.util.TreeSet;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicReference;\n \n@@ -143,7 +144,7 @@ void initBindingMethods(BindMethods bindMethods)\n \n         private volatile int ceiling;\n \n-        private final Set<Integer> missing = new HashSet<Integer>( );\n+        private final Set<Integer> missing = new TreeSet<Integer>( );\n \n         public void setTracker( ServiceTracker<T, RefPair<T>> tracker )\n         {\n@@ -230,9 +231,24 @@ else if ( trackingCount < ceiling )\n                     }\n                     ceiling = trackingCount;\n                 }\n-                if ( missing.isEmpty() )\n+                missing.notifyAll();\n+            }\n+        }\n+\n+        protected void waitForTracked( int trackingCount )\n+        {\n+            synchronized ( missing )\n+            {\n+                while ( ceiling  < trackingCount || ( !missing.isEmpty() && missing.iterator().next() < trackingCount))\n                 {\n-                    missing.notifyAll();\n+                    try\n+                    {\n+                        missing.wait( );\n+                    }\n+                    catch ( InterruptedException e )\n+                    {\n+                        //??\n+                    }\n                 }\n             }\n         }\n@@ -997,7 +1013,12 @@ T getService()\n      */\n     public ServiceReference<T>[] getServiceReferences()\n     {\n-        Collection<RefPair<T>> bound = customizerRef.get().getRefs();\n+        Customizer<T> customizer = customizerRef.get();\n+        if (customizer == null)\n+        {\n+            return null;\n+        }\n+        Collection<RefPair<T>> bound = customizer.getRefs();\n         if ( bound.isEmpty() )\n         {\n             return null;", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/58ab5f3bfc843821a1d960ae996381a1ffcbe60c", "parent": "https://github.com/apache/felix/commit/9beff2ded3326cb4d7a4465c8aeb538ae9c00420", "message": "FELIX-3727 wait for actor to finish, and also avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1402234 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_51", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/58ab5f3bfc843821a1d960ae996381a1ffcbe60c/scr/src/main/java/org/apache/felix/scr/impl/Activator.java", "blob_url": "https://github.com/apache/felix/blob/58ab5f3bfc843821a1d960ae996381a1ffcbe60c/scr/src/main/java/org/apache/felix/scr/impl/Activator.java", "sha": "87b08e7e978de3b0505cf7c2cd06bdae7c8d98c3", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/Activator.java?ref=58ab5f3bfc843821a1d960ae996381a1ffcbe60c", "patch": "@@ -375,7 +375,8 @@ public static void log( int level, Bundle bundle, String message, Throwable ex )\n     {\n         if ( m_configuration.getLogLevel() >= level )\n         {\n-            Object logger = ( m_logService != null ) ? m_logService.getService() : null;\n+            ServiceTracker t = m_logService;\n+            Object logger = ( t != null ) ? t.getService() : null;\n             if ( logger == null )\n             {\n                 // output depending on level", "filename": "scr/src/main/java/org/apache/felix/scr/impl/Activator.java"}, {"additions": 29, "raw_url": "https://github.com/apache/felix/raw/58ab5f3bfc843821a1d960ae996381a1ffcbe60c/scr/src/main/java/org/apache/felix/scr/impl/ComponentActorThread.java", "blob_url": "https://github.com/apache/felix/blob/58ab5f3bfc843821a1d960ae996381a1ffcbe60c/scr/src/main/java/org/apache/felix/scr/impl/ComponentActorThread.java", "sha": "a6149bcb47238e1fda7204c24ee1a3bfe2a51263", "changes": 37, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/ComponentActorThread.java?ref=58ab5f3bfc843821a1d960ae996381a1ffcbe60c", "patch": "@@ -84,23 +84,30 @@ public void run()\n                 task = ( Runnable ) tasks.removeFirst();\n             }\n \n-            // return if the task is this thread itself\n-            if ( task == TERMINATION_TASK )\n-            {\n-                Activator.log( LogService.LOG_DEBUG, null, \"Shutting down ComponentActorThread\", null );\n-                return;\n-            }\n-\n-            // otherwise execute the task, log any issues\n             try\n             {\n+                // return if the task is this thread itself\n+                if ( task == TERMINATION_TASK )\n+                {\n+                    Activator.log( LogService.LOG_DEBUG, null, \"Shutting down ComponentActorThread\", null );\n+                    return;\n+                }\n+\n+                // otherwise execute the task, log any issues\n                 Activator.log( LogService.LOG_DEBUG, null, \"Running task: \" + task, null );\n                 task.run();\n             }\n             catch ( Throwable t )\n             {\n                 Activator.log( LogService.LOG_ERROR, null, \"Unexpected problem executing task \" + task, t );\n             }\n+            finally\n+            {\n+                synchronized ( tasks )\n+                {\n+                    tasks.notifyAll();\n+                }\n+            }\n         }\n     }\n \n@@ -110,6 +117,20 @@ public void run()\n     void terminate()\n     {\n         schedule( TERMINATION_TASK );\n+        synchronized ( tasks )\n+        {\n+            while ( !tasks.isEmpty() )\n+            {\n+                try\n+                {\n+                    tasks.wait();\n+                }\n+                catch ( InterruptedException e )\n+                {\n+                    Activator.log( LogService.LOG_ERROR, null, \"Interrupted exception waiting for queue to empty\", e );\n+                }\n+            }\n+        }\n     }\n \n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/ComponentActorThread.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/c4fc466be443c5d5829542eec7e48bf41e2224cf", "parent": "https://github.com/apache/felix/commit/6ca07b46784e9ad3cca27a696e825f65d0bb5b46", "message": "FELIX-3675 fix NPEs in updated and unbind method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1398912 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_52", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/c4fc466be443c5d5829542eec7e48bf41e2224cf/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/c4fc466be443c5d5829542eec7e48bf41e2224cf/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "d15fa7735c37770eed2bc71fc0a0bea34e356ccf", "changes": 13, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=c4fc466be443c5d5829542eec7e48bf41e2224cf", "patch": "@@ -1315,6 +1315,13 @@ private void invokeUpdatedMethod( Object componentInstance, final ServiceReferen\n         if ( componentInstance != null )\n         {\n             RefPair refPair = ( RefPair ) ((Map )m_componentManager.getDependencyMap().get( this )).get( ref );\n+            if (refPair == null)\n+            {\n+\n+                //TODO should this be possible? If so, reduce or eliminate logging\n+                m_componentManager.log( LogService.LOG_WARNING,\n+                        \"DependencyManager : invokeUpdatedMethod : Component set, but reference not present\", null );\n+            }\n             MethodResult methodResult = m_bindMethods.getUpdated().invoke( componentInstance, refPair, MethodResult.VOID );\n             if ( methodResult != null)\n             {\n@@ -1349,6 +1356,12 @@ void invokeUnbindMethod( Object componentInstance, final ServiceReference ref )\n         if ( componentInstance != null )\n         {\n             RefPair refPair = ( RefPair ) ((Map )m_componentManager.getDependencyMap().get( this )).get( ref );\n+            if (refPair == null)\n+            {\n+                //TODO should this be possible? If so, reduce or eliminate logging\n+                m_componentManager.log( LogService.LOG_WARNING,\n+                        \"DependencyManager : invokeUnbindMethod : Component set, but reference not present\", null );\n+            }\n             MethodResult methodResult = m_bindMethods.getUnbind().invoke( componentInstance, refPair, MethodResult.VOID );\n             if ( methodResult != null )\n             {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/45621a430d39a42f084f59370e979002ba0d6879", "parent": "https://github.com/apache/felix/commit/d5ee9214b0b6e899116d8843e7ffad8fcf7891c0", "message": "FELIX-3666 : NPE when uninstalling a bundle\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1388526 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_53", "file": [{"additions": 46, "raw_url": "https://github.com/apache/felix/raw/45621a430d39a42f084f59370e979002ba0d6879/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "blob_url": "https://github.com/apache/felix/blob/45621a430d39a42f084f59370e979002ba0d6879/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "sha": "a24700a820e098418dc7d7d7215cd71b81b1cbbf", "changes": 68, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java?ref=45621a430d39a42f084f59370e979002ba0d6879", "patch": "@@ -17,9 +17,26 @@\n package org.apache.felix.webconsole.internal.core;\n \n \n-import java.io.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.io.Writer;\n import java.text.MessageFormat;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.StringTokenizer;\n+import java.util.TreeMap;\n import java.util.jar.JarFile;\n import java.util.jar.Manifest;\n \n@@ -31,14 +48,29 @@\n import org.apache.felix.framework.util.VersionRange;\n import org.apache.felix.utils.manifest.Clause;\n import org.apache.felix.utils.manifest.Parser;\n-import org.apache.felix.webconsole.*;\n+import org.apache.felix.webconsole.AbstractWebConsolePlugin;\n+import org.apache.felix.webconsole.ConfigurationPrinter;\n+import org.apache.felix.webconsole.DefaultVariableResolver;\n+import org.apache.felix.webconsole.SimpleWebConsolePlugin;\n+import org.apache.felix.webconsole.WebConsoleConstants;\n+import org.apache.felix.webconsole.WebConsoleUtil;\n import org.apache.felix.webconsole.bundleinfo.BundleInfo;\n import org.apache.felix.webconsole.bundleinfo.BundleInfoProvider;\n-import org.apache.felix.webconsole.bundleinfo.BundleInfoType;\n import org.apache.felix.webconsole.internal.OsgiManagerPlugin;\n import org.apache.felix.webconsole.internal.Util;\n-import org.json.*;\n-import org.osgi.framework.*;\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.json.JSONWriter;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.Constants;\n+import org.osgi.framework.Filter;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.framework.ServiceRegistration;\n+import org.osgi.framework.Version;\n import org.osgi.service.cm.ConfigurationAdmin;\n import org.osgi.service.component.ComponentConstants;\n import org.osgi.service.log.LogService;\n@@ -105,7 +137,7 @@ public BundlesServlet()\n     public void activate( BundleContext bundleContext )\n     {\n         super.activate( bundleContext );\n-        \n+\n         bundleInfoTracker = new ServiceTracker( bundleContext, BundleInfoProvider.class.getName(), null);\n         bundleInfoTracker.open();\n \n@@ -143,7 +175,7 @@ public void deactivate()\n             configurationPrinter.unregister();\n             configurationPrinter = null;\n         }\n-        \n+\n         if ( bundleInfoTracker != null)\n         {\n             bundleInfoTracker.close();\n@@ -299,14 +331,9 @@ else if ( \"install\".equals( action ) )\n             final Bundle bundle = reqInfo.bundle;\n             if ( bundle != null )\n             {\n-                if ( action == null )\n-                {\n-                    success = true;\n-                }\n-                else if ( \"start\".equals( action ) )\n+                if ( \"start\".equals( action ) )\n                 {\n                     // start bundle\n-                    success = true;\n                     try\n                     {\n                         bundle.start();\n@@ -320,7 +347,6 @@ else if ( \"start\".equals( action ) )\n                 else if ( \"stop\".equals( action ) )\n                 {\n                     // stop bundle\n-                    success = true;\n                     try\n                     {\n                         bundle.stop();\n@@ -335,18 +361,15 @@ else if ( \"refresh\".equals( action ) )\n                 {\n                     // refresh bundle wiring\n                     refresh( bundle );\n-                    success = true;\n                 }\n                 else if ( \"update\".equals( action ) )\n                 {\n                     // update the bundle\n                     update( bundle );\n-                    success = true;\n                 }\n                 else if ( \"uninstall\".equals( action ) )\n                 {\n                     // uninstall bundle\n-                    success = true;\n                     try\n                     {\n                         bundle.uninstall();\n@@ -369,7 +392,8 @@ else if ( \"uninstall\".equals( action ) )\n                 // write the state only\n                 resp.setContentType( \"application/json\" ); //$NON-NLS-1$\n                 resp.setCharacterEncoding( \"UTF-8\" ); //$NON-NLS-1$\n-                resp.getWriter().print(\"{\\\"fragment\\\":\" + isFragmentBundle(bundle) // //$NON-NLS-1$\n+                final boolean isFragment = (bundle.getState() == Bundle.UNINSTALLED ? false : isFragmentBundle(bundle));\n+                resp.getWriter().print(\"{\\\"fragment\\\":\" + isFragment // //$NON-NLS-1$\n                     + \",\\\"stateRaw\\\":\" + bundle.getState() + \"}\"); //$NON-NLS-1$ //$NON-NLS-2$\n                 return;\n             }\n@@ -777,7 +801,7 @@ private final void bundleDetails( JSONWriter jw, Bundle bundle, final String plu\n         jw.endArray();\n     }\n \n-    \n+\n     private final void bundleInfoDetails( JSONWriter jw, Bundle bundle, String appRoot, final Locale locale)\n \t        throws JSONException\n     {\n@@ -795,7 +819,7 @@ private final void bundleInfoDetails( JSONWriter jw, Bundle bundle, String appRo\n             {\n         \tjw.key( infoProvider.getName(locale) );\n         \tjw.array();\n-        \tfor ( int j = 0; j < infos.length; j++ ) \n+        \tfor ( int j = 0; j < infos.length; j++ )\n         \t{\n         \t    bundleInfo( jw, infos[j] );\n         \t}\n@@ -805,7 +829,7 @@ private final void bundleInfoDetails( JSONWriter jw, Bundle bundle, String appRo\n         jw.endObject(); // value\n         jw.endObject();\n     }\n-    \n+\n     private static final void bundleInfo( JSONWriter jw, BundleInfo info ) throws JSONException\n     {\n \tjw.object();", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/822ded17cfea4978c0ca7058cc29e258d3f9eedf", "parent": "https://github.com/apache/felix/commit/6caa8489bf70e9e80a17a7ce6a74b84526733f6a", "message": "Fixed FELIX-5031 : NPE in Web Console configuration plugin when metatype service is missing\nhttps://issues.apache.org/jira/browse/FELIX-5031\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1702457 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_54", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/822ded17cfea4978c0ca7058cc29e258d3f9eedf/webconsole/src/main/java/org/apache/felix/webconsole/internal/configuration/ConfigAdminSupport.java", "blob_url": "https://github.com/apache/felix/blob/822ded17cfea4978c0ca7058cc29e258d3f9eedf/webconsole/src/main/java/org/apache/felix/webconsole/internal/configuration/ConfigAdminSupport.java", "sha": "85e94e9077609260a71e646db88d7cdeeedafc7d", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/configuration/ConfigAdminSupport.java?ref=822ded17cfea4978c0ca7058cc29e258d3f9eedf", "patch": "@@ -636,6 +636,10 @@ private static final String getConfigurationFactoryNameHint(Configuration config\n     {\n         Dictionary props = config.getProperties();\n         Map adMap = (mtss != null) ? mtss.getAttributeDefinitionMap(config, null) : null;\n+        if (null == adMap)\n+        {\n+          return null;\n+        }\n \n         // check for configured name hint template\n         String nameHint = getConfigurationPropertyValueOrDefault(PROPERTY_FACTORYCONFIG_NAMEHINT, props, adMap);", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/configuration/ConfigAdminSupport.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ed20c7c0d6d627778554251dcc6d181481b8ea8f", "parent": "https://github.com/apache/felix/commit/6e6f770f2d2677fa119dc3e8162ea4de2f4b7f27", "message": "Fixed FELIX-5025 : NPE in Events web console plugin - no events can be seen\nhttps://issues.apache.org/jira/browse/FELIX-5025\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1701008 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_55", "file": [{"additions": 10, "raw_url": "https://github.com/apache/felix/raw/ed20c7c0d6d627778554251dcc6d181481b8ea8f/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/PluginServlet.java", "blob_url": "https://github.com/apache/felix/blob/ed20c7c0d6d627778554251dcc6d181481b8ea8f/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/PluginServlet.java", "sha": "38656c11a3ccfe574dfb7035b770814c770147b7", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/PluginServlet.java?ref=ed20c7c0d6d627778554251dcc6d181481b8ea8f", "patch": "@@ -23,11 +23,17 @@\n import java.io.PrintWriter;\n import java.lang.reflect.Array;\n import java.net.URL;\n-import java.util.*;\n+import java.util.Date;\n+import java.util.Dictionary;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Map.Entry;\n \n import javax.servlet.ServletException;\n-import javax.servlet.http.*;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n import org.osgi.service.event.Event;\n import org.osgi.service.event.EventAdmin;\n@@ -358,7 +364,7 @@ private void eventJson( PrintWriter jw, EventInfo info, int index, final long st\n                 final Object value = current.getValue();\n                 if ( null == value )\n                 {\n-                  jw.write(\"null\"); //$NON-NLS-1$\n+                  jw.write( \"null\" ); //$NON-NLS-1$\n                 }\n                 else if ( value.getClass().isArray() )\n                 {\n@@ -370,7 +376,7 @@ else if ( value.getClass().isArray() )\n                         {\n                             b.append(\", \");\n                         }\n-                        b.append( Array.get(value, m).toString() );\n+                        b.append( String.valueOf( Array.get(value, m) ) );\n                     }\n                     b.append(']');\n                     jsonValue(jw, b.toString());", "filename": "webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/PluginServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/14d9e21ecac16c1207fd6457626ed233d136bc66", "parent": "https://github.com/apache/felix/commit/05ede3a5662502e63139484748c98a84fa887aab", "message": "FELIX-2708 Prevent NPE in LicenseServlet\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1220409 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_56", "file": [{"additions": 19, "raw_url": "https://github.com/apache/felix/raw/14d9e21ecac16c1207fd6457626ed233d136bc66/webconsole/src/main/java/org/apache/felix/webconsole/internal/misc/LicenseServlet.java", "blob_url": "https://github.com/apache/felix/blob/14d9e21ecac16c1207fd6457626ed233d136bc66/webconsole/src/main/java/org/apache/felix/webconsole/internal/misc/LicenseServlet.java", "sha": "b2cd890edc715a3e63cd03a6583ac455d31a0b71", "changes": 36, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/misc/LicenseServlet.java?ref=14d9e21ecac16c1207fd6457626ed233d136bc66", "patch": "@@ -295,30 +295,32 @@ private boolean sendResource( final PathInfo pathInfo, final HttpServletResponse\n                 }\n             }\n         }\n-\n-        // license is in a nested JAR\n-        final URL zipResource = bundle.getResource( pathInfo.innerJar );\n-        if ( zipResource != null )\n+        else\n         {\n-            final InputStream input = zipResource.openStream();\n-            ZipInputStream zin = null;\n-            try\n+            // license is in a nested JAR\n+            final URL zipResource = bundle.getResource( pathInfo.innerJar );\n+            if ( zipResource != null )\n             {\n-                zin = new ZipInputStream( input );\n-                for ( ZipEntry zentry = zin.getNextEntry(); zentry != null; zentry = zin.getNextEntry() )\n+                final InputStream input = zipResource.openStream();\n+                ZipInputStream zin = null;\n+                try\n                 {\n-                    if ( pathInfo.licenseFile.equals( zentry.getName() ) )\n+                    zin = new ZipInputStream( input );\n+                    for ( ZipEntry zentry = zin.getNextEntry(); zentry != null; zentry = zin.getNextEntry() )\n                     {\n-                        IOUtils.copy( zin, response.getWriter() );\n-                        return true;\n+                        if ( pathInfo.licenseFile.equals( zentry.getName() ) )\n+                        {\n+                            IOUtils.copy( zin, response.getWriter() );\n+                            return true;\n+                        }\n                     }\n                 }\n-            }\n-            finally\n-            {\n+                finally\n+                {\n \n-                IOUtils.closeQuietly( zin );\n-                IOUtils.closeQuietly( input );\n+                    IOUtils.closeQuietly( zin );\n+                    IOUtils.closeQuietly( input );\n+                }\n             }\n         }\n ", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/misc/LicenseServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a662d7e45a44aac0f6e493527032adffb3a04a7e", "parent": "https://github.com/apache/felix/commit/9cdc2b5b05a8bfd98ad493207c61695d332fc863", "message": "FELIX-3113 - NPE in multi-module Maven project\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1176892 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_57", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/generator/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/generator/changelog.txt", "sha": "f7044d9eb2fc76c8b4977ef6cc08eb37888be0b4", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/changelog.txt?ref=a662d7e45a44aac0f6e493527032adffb3a04a7e", "patch": "@@ -5,7 +5,8 @@ Changes from 1.1.2 to 1.1.4\n     * [FELIX-2963] - scr annotations @Activate @Deactivate @Modified are not detected with class inheritance\n     * [FELIX-3117] - NullPointerException when not implementing interface that is defined with @Service\n     * [FELIX-3136] - Endless loop: JavaClassDescriptorManager.getJavaClassDescription()\n-\n+    * [FELIX-3113] - NPE in multi-module Maven project\n+    \n \n Changes from 1.1.0 to 1.1.2\n ---------------------------", "filename": "scrplugin/generator/changelog.txt"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/JavaClassDescriptorManager.java", "blob_url": "https://github.com/apache/felix/blob/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/JavaClassDescriptorManager.java", "sha": "4fd2f487ff69c728673c63b5ff92373a07a310bb", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/JavaClassDescriptorManager.java?ref=a662d7e45a44aac0f6e493527032adffb3a04a7e", "patch": "@@ -243,12 +243,12 @@ public JavaClassDescriptorManager( final Log log, final ClassLoader classLoader,\n                     }\n                 }\n \n-                // now create map with component descriptions\n-                this.componentDescriptions = new HashMap<String, Component>();\n-                for ( final Component component : components )\n-                {\n-                    this.componentDescriptions.put( component.getImplementation().getClassame(), component );\n-                }\n+            }\n+            // now create map with component descriptions\n+            this.componentDescriptions = new HashMap<String, Component>();\n+            for ( final Component component : components )\n+            {\n+                this.componentDescriptions.put( component.getImplementation().getClassame(), component );\n             }\n         }\n ", "filename": "scrplugin/generator/src/main/java/org/apache/felix/scrplugin/JavaClassDescriptorManager.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/maven-scr-plugin/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/maven-scr-plugin/changelog.txt", "sha": "832810e6d4115fdc944f5be899efb17589dd48e0", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/maven-scr-plugin/changelog.txt?ref=a662d7e45a44aac0f6e493527032adffb3a04a7e", "patch": "@@ -6,6 +6,7 @@ Changes from 1.7.2 to 1.7.4\n     * [FELIX-3117] - NullPointerException when not implementing interface that is defined with @Service\n     * [FELIX-3070} - SCR Plugin and dependencies with classifier cause issue depending on the order of dependency in pom.xml\n     * [FELIX-3136] - Endless loop: JavaClassDescriptorManager.getJavaClassDescription()\n+    * [FELIX-3113] - NPE in multi-module Maven project\n \n \n ** Improvement", "filename": "scrplugin/maven-scr-plugin/changelog.txt"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/scrtask/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/a662d7e45a44aac0f6e493527032adffb3a04a7e/scrplugin/scrtask/changelog.txt", "sha": "278368abfe8ba3696c3ba5e67309f02a32bbcc63", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/scrtask/changelog.txt?ref=a662d7e45a44aac0f6e493527032adffb3a04a7e", "patch": "@@ -5,6 +5,7 @@ Changes from 1.1.2 to 1.1.4\n     * [FELIX-2963] - scr annotations @Activate @Deactivate @Modified are not detected with class inheritance\n     * [FELIX-3117] - NullPointerException when not implementing interface that is defined with @Service\n     * [FELIX-3136] - Endless loop: JavaClassDescriptorManager.getJavaClassDescription()\n+    * [FELIX-3113] - NPE in multi-module Maven project\n \n \n Changes from 1.1.0 to 1.1.2", "filename": "scrplugin/scrtask/changelog.txt"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/dcd74ef40e9a498fed7f52d519ac56fd5c637f5e", "parent": "https://github.com/apache/felix/commit/92d4b2e94aabcb9b980b047b63691e7d6c53a534", "message": "FELIX-5000 : Potential NPE when reading metatype info due to FELIX-4973\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1694990 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_58", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/dcd74ef40e9a498fed7f52d519ac56fd5c637f5e/metatype/src/main/java/org/apache/felix/metatype/internal/MetaTypeInformationImpl.java", "blob_url": "https://github.com/apache/felix/blob/dcd74ef40e9a498fed7f52d519ac56fd5c637f5e/metatype/src/main/java/org/apache/felix/metatype/internal/MetaTypeInformationImpl.java", "sha": "11eb5619d03a633cac729a0fdbb4d3e96b7c58bd", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/metatype/src/main/java/org/apache/felix/metatype/internal/MetaTypeInformationImpl.java?ref=dcd74ef40e9a498fed7f52d519ac56fd5c637f5e", "patch": "@@ -189,7 +189,8 @@ protected void addMetaData(MetaData md)\n                 }\n \n                 // get ocd for the reference, ignore designate if none\n-                OCD ocd = (OCD) md.getObjectClassDefinitions().get(ocdRef);\n+                final Map map = md.getObjectClassDefinitions();\n+                OCD ocd = (OCD) (map == null ? null : map.get(ocdRef));\n                 if (ocd == null)\n                 {\n                     continue;", "filename": "metatype/src/main/java/org/apache/felix/metatype/internal/MetaTypeInformationImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/fca44c7ef5adc6b3afe46f7282d999ce8602a761", "parent": "https://github.com/apache/felix/commit/f42ee6716db6b8d34eea35bb938c71fbb2919690", "message": "Fixed FELIX-4995 : NPE when updating Apache Felix OSGi Management Console configuration without a password\nhttps://issues.apache.org/jira/browse/FELIX-4995\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1694628 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_59", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/fca44c7ef5adc6b3afe46f7282d999ce8602a761/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/ConfigurationSupport.java", "blob_url": "https://github.com/apache/felix/blob/fca44c7ef5adc6b3afe46f7282d999ce8602a761/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/ConfigurationSupport.java", "sha": "444eeb6591c2f69711a916af5b7f79f578c97b48", "changes": 9, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/ConfigurationSupport.java?ref=fca44c7ef5adc6b3afe46f7282d999ce8602a761", "patch": "@@ -19,7 +19,6 @@\n package org.apache.felix.webconsole.internal.servlet;\n \n \n-import java.security.AccessControlContext;\n import java.security.AccessController;\n import java.security.PrivilegedActionException;\n import java.security.PrivilegedExceptionAction;\n@@ -104,9 +103,11 @@ void updated0( Dictionary config ) throws ConfigurationException\n                         Dictionary newConfig = cfg.getProperties();\n                         if ( newConfig != null )\n                         {\n-                            // assumption: config is not null and as a non-null password String property\n-                            final String pwd = ( String ) config.get( OsgiManager.PROP_PASSWORD );\n-                            final String hashedPassword = Password.hashPassword( pwd );\n+                            String pwd = ( String ) config.get( OsgiManager.PROP_PASSWORD );\n+                            // password can be null, see FELIX-4995\n+                            final String hashedPassword = null == pwd \n+                                ? OsgiManager.DEFAULT_PASSWORD\n+                                : Password.hashPassword( pwd );\n                             newConfig.put( OsgiManager.PROP_PASSWORD, hashedPassword );\n                             cfg.update( newConfig );\n                         }", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/ConfigurationSupport.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/4aaa34a20eb4b5c27a96ead3749996a35ac969b1", "parent": "https://github.com/apache/felix/commit/acee946653e22fd863b8ccd78473ad4ff0fb3823", "message": "FELIX-2722: avoid NPE when project.organization.name is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1139278 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_60", "file": [{"additions": 7, "raw_url": "https://github.com/apache/felix/raw/4aaa34a20eb4b5c27a96ead3749996a35ac969b1/bundleplugin/src/main/java/org/apache/felix/bundleplugin/BundlePlugin.java", "blob_url": "https://github.com/apache/felix/blob/4aaa34a20eb4b5c27a96ead3749996a35ac969b1/bundleplugin/src/main/java/org/apache/felix/bundleplugin/BundlePlugin.java", "sha": "7a43d2c660a8f97c171dbaa90d7f0c0d806d13b5", "changes": 11, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/bundleplugin/BundlePlugin.java?ref=4aaa34a20eb4b5c27a96ead3749996a35ac969b1", "patch": "@@ -937,10 +937,13 @@ protected Properties getDefaultProperties( MavenProject currentProject )\n \n         if ( currentProject.getOrganization() != null )\n         {\n-            String organizationName = currentProject.getOrganization().getName();\n-            header( properties, Analyzer.BUNDLE_VENDOR, organizationName );\n-            properties.put( \"project.organization.name\", organizationName );\n-            properties.put( \"pom.organization.name\", organizationName );\n+            if ( currentProject.getOrganization().getName() != null )\n+            {\n+                String organizationName = currentProject.getOrganization().getName();\n+                header( properties, Analyzer.BUNDLE_VENDOR, organizationName );\n+                properties.put( \"project.organization.name\", organizationName );\n+                properties.put( \"pom.organization.name\", organizationName );\n+            }\n             if ( currentProject.getOrganization().getUrl() != null )\n             {\n                 String organizationUrl = currentProject.getOrganization().getUrl();", "filename": "bundleplugin/src/main/java/org/apache/felix/bundleplugin/BundlePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3645d19956bd42c8aa416d1045e1983b565994e7", "parent": "https://github.com/apache/felix/commit/c894cacbb8cc90872cfaa0ce60ce6be167a69cf5", "message": "FELIX-2847 Prevent NPE if service already unregistered\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1071990 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_61", "file": [{"additions": 17, "raw_url": "https://github.com/apache/felix/raw/3645d19956bd42c8aa416d1045e1983b565994e7/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "blob_url": "https://github.com/apache/felix/blob/3645d19956bd42c8aa416d1045e1983b565994e7/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "sha": "b94e32283a7d2c2ee9e4554a6d998ea8d6e3eed0", "changes": 24, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java?ref=3645d19956bd42c8aa416d1045e1983b565994e7", "patch": "@@ -1006,18 +1006,28 @@ else if ( pidObj instanceof Collection )\n     static String toString( ServiceReference ref )\n     {\n         String[] ocs = ( String[] ) ref.getProperty( \"objectClass\" );\n-        String oc = \"[\";\n+        StringBuffer buf = new StringBuffer(\"[\");\n         for ( int i = 0; i < ocs.length; i++ )\n         {\n-            oc += ocs[i];\n+            buf.append(ocs[i]);\n             if ( i < ocs.length - 1 )\n-                oc += \", \";\n+                buf.append(\", \");\n         }\n \n-        oc += \", id=\" + ref.getProperty( Constants.SERVICE_ID );\n-        oc += \", bundle=\" + ref.getBundle().getBundleId();\n-        oc += \"]\";\n-        return oc;\n+        buf.append( \", id=\" ).append( ref.getProperty( Constants.SERVICE_ID ) );\n+\n+        Bundle provider = ref.getBundle();\n+        if ( provider != null )\n+        {\n+            buf.append( \", bundle=\" ).append( provider.getBundleId() );\n+        }\n+        else\n+        {\n+            buf.append( \", unregistered\" );\n+        }\n+\n+        buf.append( \"]\" );\n+        return buf.toString();\n     }\n \n ", "filename": "configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a99b3e84c3944f1dee2864a06b07a1699442cfb1", "parent": "https://github.com/apache/felix/commit/e5ebb4f48dd278df9dbe03f8914fee4dfb77394f", "message": "[FELIX-2756] NPE when loading configurations\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1054550 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_62", "file": [{"additions": 14, "raw_url": "https://github.com/apache/felix/raw/a99b3e84c3944f1dee2864a06b07a1699442cfb1/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "blob_url": "https://github.com/apache/felix/blob/a99b3e84c3944f1dee2864a06b07a1699442cfb1/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java", "sha": "4e2114cc07c814faa6a6cafc56b6edbe6798217a", "changes": 27, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java?ref=a99b3e84c3944f1dee2864a06b07a1699442cfb1", "patch": "@@ -18,6 +18,18 @@\n  */\n package org.apache.felix.fileinstall.internal;\n \n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Map;\n+import java.util.Properties;\n+\n import org.apache.felix.cm.file.ConfigurationHandler;\n import org.apache.felix.fileinstall.ArtifactInstaller;\n import org.apache.felix.fileinstall.internal.Util.Logger;\n@@ -31,18 +43,6 @@\n import org.osgi.service.cm.ConfigurationEvent;\n import org.osgi.service.cm.ConfigurationListener;\n \n-import java.io.BufferedInputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.util.Dictionary;\n-import java.util.Enumeration;\n-import java.util.Hashtable;\n-import java.util.Map;\n-import java.util.Properties;\n-\n /**\n  * ArtifactInstaller for configurations.\n  * TODO: This service lifecycle should be bound to the ConfigurationAdmin service lifecycle.\n@@ -212,7 +212,8 @@ else if ( f.getName().endsWith( \".config\" ) )\n         String pid[] = parsePid(f.getName());\n         Configuration config = getConfiguration(f.getAbsolutePath(), pid[0], pid[1]);\n \n-        Hashtable old = new Hashtable(new DictionaryAsMap(config.getProperties()));\n+        Dictionary props = config.getProperties();\n+        Hashtable old = props != null ? new Hashtable(new DictionaryAsMap(props)) : new Hashtable();\n         old.remove( DirectoryWatcher.FILENAME );\n         old.remove( Constants.SERVICE_PID );\n         old.remove( ConfigurationAdmin.SERVICE_FACTORYPID );", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/0735ac951e6dcd3fbe0a5f6284f02be3eee1db86", "parent": "https://github.com/apache/felix/commit/6929e1daeed6e5350152ab413d5599f117be506b", "message": "FELIX-2731 : NPE while scanning sources with QDox\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1049139 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_63", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/0735ac951e6dcd3fbe0a5f6284f02be3eee1db86/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/tags/qdox/QDoxJavaTag.java", "blob_url": "https://github.com/apache/felix/blob/0735ac951e6dcd3fbe0a5f6284f02be3eee1db86/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/tags/qdox/QDoxJavaTag.java", "sha": "91eaac2f83e63dd09b5f82abada515825b234f9e", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/tags/qdox/QDoxJavaTag.java?ref=0735ac951e6dcd3fbe0a5f6284f02be3eee1db86", "patch": "@@ -71,7 +71,10 @@ public String getNamedParameter(String arg0) {\n      * @see org.apache.felix.scrplugin.tags.JavaTag#getSourceLocation()\n      */\n     public String getSourceLocation() {\n-        return String.valueOf(this.docletTag.getContext().getParent().getParentSource().getURL());\n+        if ( this.docletTag.getContext().getParent() != null ) {\n+            return String.valueOf(this.docletTag.getContext().getParent().getParentSource().getURL());\n+        }\n+        return String.valueOf(this.docletTag.getContext().getParentClass().getSource().getURL());\n     }\n \n     /**", "filename": "scrplugin/generator/src/main/java/org/apache/felix/scrplugin/tags/qdox/QDoxJavaTag.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2", "parent": "https://github.com/apache/felix/commit/0465e29241a14580e6d10ae66d9e9a375a5bf315", "message": "[FELIX-2318] Possible NPE for jars with null Manifest\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1027387 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_64", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java", "blob_url": "https://github.com/apache/felix/blob/b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java", "sha": "f269dea787ab88b06091d3ffe7368412d994c3f0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java?ref=b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2", "patch": "@@ -49,7 +49,7 @@ public boolean canHandle(File artifact)\n             }\n             jar = new JarFile(artifact);\n             Manifest m = jar.getManifest();\n-            if (m.getMainAttributes().getValue(new Attributes.Name(\"Bundle-SymbolicName\")) != null)\n+            if (m != null && m.getMainAttributes().getValue(new Attributes.Name(\"Bundle-SymbolicName\")) != null)\n             {\n                 return true;\n             }", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java", "blob_url": "https://github.com/apache/felix/blob/b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java", "sha": "a7e3620e02510f00e3030cd61149225b857cf4c7", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java?ref=b0b2bf4f78721ea9e9dfbd0d4740b01c599243b2", "patch": "@@ -921,6 +921,11 @@ private Bundle installOrUpdateBundle(\n         is.mark(256 * 1024);\n         JarInputStream jar = new JarInputStream(is);\n         Manifest m = jar.getManifest();\n+        if( m == null ) {\n+            throw new BundleException(\n+                \"The bundle \" + bundleLocation + \" does not have a META-INF/MANIFEST.MF! \"+\n+                    \"Make sure, META-INF and MANIFEST.MF are the first 2 entries in your JAR!\");\n+        }\n         String sn = m.getMainAttributes().getValue(Constants.BUNDLE_SYMBOLICNAME);\n         String vStr = m.getMainAttributes().getValue(Constants.BUNDLE_VERSION);\n         Version v = vStr == null ? Version.emptyVersion : Version.parseVersion(vStr);", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/42d1acc387267cefd98a8097c610150012b9c09c", "parent": "https://github.com/apache/felix/commit/fc6c7d10f6fe554c23981ab8daa51dcd529e5d19", "message": "FELIX-2387 : registerServlet() throws NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@999263 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_65", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/42d1acc387267cefd98a8097c610150012b9c09c/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/42d1acc387267cefd98a8097c610150012b9c09c/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceImpl.java", "sha": "c0e684c7dfb05e83be4816a5622d7b43dbc40e22", "changes": 28, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/felix/contents/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceImpl.java?ref=42d1acc387267cefd98a8097c610150012b9c09c", "patch": "@@ -16,22 +16,19 @@\n  */\n package org.apache.felix.http.base.internal.service;\n \n+import java.util.Dictionary;\n+import java.util.HashSet;\n+\n+import javax.servlet.*;\n+\n import org.apache.felix.http.api.ExtHttpService;\n-import org.apache.felix.http.base.internal.context.ServletContextManager;\n import org.apache.felix.http.base.internal.context.ExtServletContext;\n-import org.apache.felix.http.base.internal.handler.HandlerRegistry;\n-import org.apache.felix.http.base.internal.handler.FilterHandler;\n-import org.apache.felix.http.base.internal.handler.ServletHandler;\n+import org.apache.felix.http.base.internal.context.ServletContextManager;\n+import org.apache.felix.http.base.internal.handler.*;\n import org.apache.felix.http.base.internal.logger.SystemLogger;\n+import org.osgi.framework.Bundle;\n import org.osgi.service.http.HttpContext;\n import org.osgi.service.http.NamespaceException;\n-import org.osgi.framework.Bundle;\n-import javax.servlet.Filter;\n-import javax.servlet.ServletException;\n-import javax.servlet.Servlet;\n-import javax.servlet.ServletContext;\n-import java.util.Dictionary;\n-import java.util.HashSet;\n \n public final class HttpServiceImpl\n     implements ExtHttpService\n@@ -63,6 +60,9 @@ private ExtServletContext getServletContext(HttpContext context)\n     public void registerFilter(Filter filter, String pattern, Dictionary initParams, int ranking, HttpContext context)\n         throws ServletException\n     {\n+        if (filter == null ) {\n+            throw new IllegalArgumentException(\"Filter must not be null\");\n+        }\n         FilterHandler handler = new FilterHandler(getServletContext(context), filter, pattern, ranking);\n         handler.setInitParams(initParams);\n         this.handlerRegistry.addFilter(handler);\n@@ -88,10 +88,12 @@ public void unregisterServlet(Servlet servlet)\n     public void registerServlet(String alias, Servlet servlet, Dictionary initParams, HttpContext context)\n         throws ServletException, NamespaceException\n     {\n+        if (servlet == null ) {\n+            throw new IllegalArgumentException(\"Servlet must not be null\");\n+        }\n         if (!isAliasValid(alias)) {\n             throw new IllegalArgumentException( \"Malformed servlet alias [\" + alias + \"]\");\n         }\n-        \n         ServletHandler handler = new ServletHandler(getServletContext(context), servlet, alias);\n         handler.setInitParams(initParams);\n         this.handlerRegistry.addServlet(handler);\n@@ -104,7 +106,7 @@ public void registerResources(String alias, String name, HttpContext context)\n         if (!isNameValid(name)) {\n             throw new IllegalArgumentException( \"Malformed resource name [\" + name + \"]\");\n         }\n-        \n+\n         try {\n             Servlet servlet = new ResourceServlet(name);\n             registerServlet(alias, servlet, null, context);", "filename": "http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a920fb5737bcc2a781c17722bda10e1d13965697", "parent": "https://github.com/apache/felix/commit/13ee30ea92ad665c1c98ae17c0fc498fe73a29bd", "message": "improve exception if bsn not set npe->ise\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@994997 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_66", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/a920fb5737bcc2a781c17722bda10e1d13965697/sigil/common/core/src/org/apache/felix/sigil/common/config/BldConverter.java", "blob_url": "https://github.com/apache/felix/blob/a920fb5737bcc2a781c17722bda10e1d13965697/sigil/common/core/src/org/apache/felix/sigil/common/config/BldConverter.java", "sha": "5e647e8cc6efe28ed275de42c217d3f715ff08b0", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/common/core/src/org/apache/felix/sigil/common/config/BldConverter.java?ref=a920fb5737bcc2a781c17722bda10e1d13965697", "patch": "@@ -278,7 +278,8 @@ private void setSimpleHeaders(String id, IBundleModelElement info)\n         String idBsn = id != null ? id : ids.get(0);\n         String oldBsn = config.getString(id, BldConfig.S_SYM_NAME);\n         String bsn = info.getSymbolicName();\n-\n+        if (bsn == null) throw new IllegalArgumentException(\"Missing bundle symbolic name\");\n+        \n         if (!bsn.equals(idBsn) || oldBsn != null)\n             config.setString(id, BldConfig.S_SYM_NAME, bsn);\n ", "filename": "sigil/common/core/src/org/apache/felix/sigil/common/config/BldConverter.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/2bdfaf9f91c100c34c9f2ae1f97af7b19afa8b29", "parent": "https://github.com/apache/felix/commit/2b4f7ec90633b8cf1b06b8e1ce9c77214175addd", "message": "Fixed a NPE in getName().\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@993264 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_67", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/2bdfaf9f91c100c34c9f2ae1f97af7b19afa8b29/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/2bdfaf9f91c100c34c9f2ae1f97af7b19afa8b29/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ServiceImpl.java", "sha": "a8da931b34738f654e08a97bca7c926b2ae3e5fb", "changes": 17, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ServiceImpl.java?ref=2bdfaf9f91c100c34c9f2ae1f97af7b19afa8b29", "patch": "@@ -1046,9 +1046,10 @@ public String getType() {\n     }\n \n     public String getName() {\n-        if (m_serviceName instanceof String[]) {\n+        Object serviceName = m_serviceName;\n+        if (serviceName instanceof String[]) {\n             StringBuffer sb = new StringBuffer();\n-            String[] names = (String[]) m_serviceName;\n+            String[] names = (String[]) serviceName;\n             for (int i = 0; i < names.length; i++) {\n                 if (i > 0) {\n                     sb.append(\", \");\n@@ -1057,11 +1058,17 @@ public String getName() {\n             }\n             return sb.toString();\n         }\n-        else if (m_serviceName instanceof String) {\n-            return m_serviceName.toString();\n+        else if (serviceName instanceof String) {\n+            return serviceName.toString();\n         }\n         else {\n-            return m_implementation.toString();\n+            Object implementation = m_implementation;\n+            if (implementation != null) {\n+                return implementation.toString();\n+            }\n+            else {\n+                return super.toString();\n+            }\n         }\n     }\n ", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ServiceImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/c7b3cc172aebd036100974cb655d04d588ed13fc", "parent": "https://github.com/apache/felix/commit/bdbfb9be3d3c5efd193516511e21882e740c530c", "message": "fix NPE/coercion error when passing null first argument FELIX-2432\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@956547 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_68", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/c7b3cc172aebd036100974cb655d04d588ed13fc/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java", "blob_url": "https://github.com/apache/felix/blob/c7b3cc172aebd036100974cb655d04d588ed13fc/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java", "sha": "7df0e17ed1636bacbf2b879615090856a3d144e5", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java?ref=c7b3cc172aebd036100974cb655d04d588ed13fc", "patch": "@@ -171,7 +171,7 @@ public static Object method(CommandSession session, Object target, String name,\n                 {\n                     params.append(\", \");\n                 }\n-                params.append(arg.getClass().getSimpleName());\n+                params.append(arg == null ? \"null\" : arg.getClass().getSimpleName());\n             }\n \n             throw new IllegalArgumentException(String.format(\n@@ -275,6 +275,13 @@ else if (param.presentValue() != null)\n                 else\n                 {\n                     out[i] = coerce(session, target, types[i], in.get(0));\n+                    \n+                    if (out[i] == null && types[i].isArray() && in.size() > 0)\n+                    {\n+                        // don't coerce null to array FELIX-2432\n+                        out[i] = NO_MATCH;\n+                    }\n+                    \n                     if (out[i] != NO_MATCH)\n                     {\n                         in.remove(0);", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java"}, {"additions": 16, "raw_url": "https://github.com/apache/felix/raw/c7b3cc172aebd036100974cb655d04d588ed13fc/gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser2.java", "blob_url": "https://github.com/apache/felix/blob/c7b3cc172aebd036100974cb655d04d588ed13fc/gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser2.java", "sha": "a21e0a1e764afdaf4b7b29ee7c5d1703a34e8475", "changes": 26, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser2.java?ref=c7b3cc172aebd036100974cb655d04d588ed13fc", "patch": "@@ -35,7 +35,7 @@ public void testComment() throws Exception\n \n         assertEquals(\"file://wibble#tag\", c.execute(\"echo file://wibble#tag\"));\n         assertEquals(\"file:\", c.execute(\"echo file: //wibble#tag\"));\n-        \n+\n         assertEquals(\"PWD/*.java\", c.execute(\"echo PWD/*.java\"));\n         try\n         {\n@@ -46,31 +46,37 @@ public void testComment() throws Exception\n         {\n             // expected\n         }\n-        \n+\n         assertEquals(\"ok\", c.execute(\"// can't quote\\necho ok\\n\"));\n-        \n+\n         // quote in comment in closure\n         assertEquals(\"ok\", c.execute(\"x = { // can't quote\\necho ok\\n}; x\"));\n         assertEquals(\"ok\", c.execute(\"x = {\\n// can't quote\\necho ok\\n}; x\"));\n         assertEquals(\"ok\", c.execute(\"x = {// can't quote\\necho ok\\n}; x\"));\n     }\n \n+    public void testCoercion() throws Exception\n+    {\n+        Context c = new Context();\n+        c.addCommand(\"echo\", this);\n+\n+        // FELIX-2432\n+        assertEquals(\"null x\", c.execute(\"echo $expandsToNull x\"));\n+    }\n+\n     public CharSequence echo(Object args[])\n     {\n         if (args == null)\n         {\n-            return \"\";\n+            return \"null args!\";\n         }\n \n         StringBuilder sb = new StringBuilder();\n         for (Object arg : args)\n         {\n-            if (arg != null)\n-            {\n-                if (sb.length() > 0)\n-                    sb.append(' ');\n-                sb.append(arg);\n-            }\n+            if (sb.length() > 0)\n+                sb.append(' ');\n+            sb.append(String.valueOf(arg));\n         }\n         return sb.toString();\n     }", "filename": "gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser2.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/c01d351584e2fb996663b0a46a0d803b2867201c", "parent": "https://github.com/apache/felix/commit/d1c8b3e58733cb34844a7fa8849b1106f30e9ef8", "message": "[FELIX-2354]NPE when using Felix features maven validate plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@947635 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_69", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/c01d351584e2fb996663b0a46a0d803b2867201c/karaf/tooling/features-maven-plugin/src/main/java/org/apache/felix/karaf/tooling/features/ValidateFeaturesMojo.java", "blob_url": "https://github.com/apache/felix/blob/c01d351584e2fb996663b0a46a0d803b2867201c/karaf/tooling/features-maven-plugin/src/main/java/org/apache/felix/karaf/tooling/features/ValidateFeaturesMojo.java", "sha": "dc1fde0cff999b9100fe9913bcc3db810a74d7ed", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/tooling/features-maven-plugin/src/main/java/org/apache/felix/karaf/tooling/features/ValidateFeaturesMojo.java?ref=c01d351584e2fb996663b0a46a0d803b2867201c", "patch": "@@ -160,12 +160,14 @@ private void analyze(Repository repository) throws Exception {\n         features.add(repository.getFeatures());\n         \n         // add the repositories from the plugin configuration\n-\tfor (String uri : repositories) {\n-\t    getLog().info(String.format(\" - adding repository from %s\", uri));\n-            Repository dependency = new RepositoryImpl(URI.create(translateFromMaven(uri)));\n-            features.add(dependency.getFeatures());\n-            validateBundlesAvailable(dependency);\n-            analyzeExports(dependency);\n+        if (repositories != null) {\n+        \tfor (String uri : repositories) {\n+        \t\tgetLog().info(String.format(\" - adding repository from %s\", uri));\n+        \t\tRepository dependency = new RepositoryImpl(URI.create(translateFromMaven(uri)));\n+        \t\tfeatures.add(dependency.getFeatures());\n+        \t\tvalidateBundlesAvailable(dependency);\n+        \t\tanalyzeExports(dependency);\n+        \t}\n         }\n \n         for (URI uri : repository.getRepositories()) {", "filename": "karaf/tooling/features-maven-plugin/src/main/java/org/apache/felix/karaf/tooling/features/ValidateFeaturesMojo.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1828242de3477d08c6bc79bfafa27089685c4f4a", "parent": "https://github.com/apache/felix/commit/a95396f66d83de7e1d57757c741de3889d4c253b", "message": "avoid NPE when invoking Bnd's error method\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@939080 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_70", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/1828242de3477d08c6bc79bfafa27089685c4f4a/dependencymanager/annotation/src/main/java/org/apache/felix/dm/annotation/plugin/bnd/DescriptorGenerator.java", "blob_url": "https://github.com/apache/felix/blob/1828242de3477d08c6bc79bfafa27089685c4f4a/dependencymanager/annotation/src/main/java/org/apache/felix/dm/annotation/plugin/bnd/DescriptorGenerator.java", "sha": "1b9f9260107c6acff3931cedbc083e36c19073ca", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/annotation/src/main/java/org/apache/felix/dm/annotation/plugin/bnd/DescriptorGenerator.java?ref=1828242de3477d08c6bc79bfafa27089685c4f4a", "patch": "@@ -120,7 +120,7 @@ public boolean execute()\n             }\n             sb.append(\": \");\n             sb.append(parse(err));\n-            error(sb.toString(), err.getCause());\n+            error(sb.toString());\n             return false;\n         }\n ", "filename": "dependencymanager/annotation/src/main/java/org/apache/felix/dm/annotation/plugin/bnd/DescriptorGenerator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/7aa7da753cd18c844d4012296309be2be85a870d", "parent": "https://github.com/apache/felix/commit/41fda6bc9840c0dc949efa9e8b74bab8898e8953", "message": "[bundlerepository] fix a NPE in the index goal\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@937978 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_71", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/7aa7da753cd18c844d4012296309be2be85a870d/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrIndex.java", "blob_url": "https://github.com/apache/felix/blob/7aa7da753cd18c844d4012296309be2be85a870d/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrIndex.java", "sha": "cfa77f5b94cf82fd56d4b21061344699867e7cc1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrIndex.java?ref=7aa7da753cd18c844d4012296309be2be85a870d", "patch": "@@ -97,7 +97,7 @@ public void execute() throws MojoExecutionException {\n             log.info(\"URL template: \" + urlTemplate);\n \n             List<File> files = new ArrayList<File>();\n-            findAllJars( new File(mavenRepository), files );\n+            findAllJars( new File(repo), files );\n \n             DataModelHelperImpl dmh = new DataModelHelperImpl();\n             RepositoryImpl repository;", "filename": "bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrIndex.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a81b71439679433c01c31cfeb82b64ce76a3f82a", "parent": "https://github.com/apache/felix/commit/8a1009a1c3b9974cd86d2bc463ec57c427030774", "message": "[bundleplugin] fix possible NPE when installing non osgi bundles artifacts\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@925367 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_72", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/a81b71439679433c01c31cfeb82b64ce76a3f82a/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrUpdate.java", "blob_url": "https://github.com/apache/felix/blob/a81b71439679433c01c31cfeb82b64ce76a3f82a/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrUpdate.java", "sha": "0d9f7193be81345f335204f2e432c1b13e40bafc", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrUpdate.java?ref=a81b71439679433c01c31cfeb82b64ce76a3f82a", "patch": "@@ -168,6 +168,10 @@ public void updateRepository( URI bundleJar, URI sourceJar, URI docJar ) throws\n             try\n             {\n                 m_resourceBundle = (ResourceImpl) new DataModelHelperImpl().createResource( bundleJar.toURL() );\n+                if (m_resourceBundle == null)\n+                {\n+                    return;\n+                }\n             }\n             catch (IOException e)\n             {", "filename": "bundleplugin/src/main/java/org/apache/felix/obrplugin/ObrUpdate.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/69029cb75ab1c8860d9eeab77ba6c7dce3e93538", "parent": "https://github.com/apache/felix/commit/4d82adce589b797485cc45037c564cbea16f8aa4", "message": "Fix for npe found in FELIX-2159 missing ()'s\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@918229 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_73", "file": [{"additions": 43, "raw_url": "https://github.com/apache/felix/raw/69029cb75ab1c8860d9eeab77ba6c7dce3e93538/sigil/common/core.tests/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExportTest.java", "blob_url": "https://github.com/apache/felix/blob/69029cb75ab1c8860d9eeab77ba6c7dce3e93538/sigil/common/core.tests/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExportTest.java", "sha": "574884175050ff2d20fd66005331bed76a7b6243", "changes": 43, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/common/core.tests/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExportTest.java?ref=69029cb75ab1c8860d9eeab77ba6c7dce3e93538", "patch": "@@ -0,0 +1,43 @@\n+package org.apache.felix.sigil.core.internal.model.osgi;\n+\n+import org.osgi.framework.Version;\n+\n+import junit.framework.TestCase;\n+\n+public class PackageExportTest extends TestCase\n+{\n+    public PackageExportTest( String name )\n+    {\n+        super( name );\n+    }\n+\n+    public void testEquals() {\n+        PackageExport p1 = new PackageExport();\n+        p1.setPackageName(\"foo\");\n+        p1.setVersion(Version.parseVersion(\"1.0.0\"));\n+        \n+        PackageExport p2 = new PackageExport();\n+        p2.setPackageName(\"foo\");\n+        p2.setVersion(Version.parseVersion(\"1.0.0\"));\n+        \n+        assertTrue( p1.equals( p2 ) );\n+        assertTrue( p2.equals( p1 ) );\n+        \n+        PackageExport p3 = new PackageExport();\n+        p3.setPackageName(\"foo\");\n+\n+        assertFalse( p1.equals( p3 ) );\n+        assertFalse( p3.equals( p1 ) );\n+        \n+        PackageExport p4 = new PackageExport();\n+        p4.setVersion(Version.parseVersion(\"1.0.0\"));\n+\n+        assertFalse( p1.equals( p4 ) );\n+        assertFalse( p4.equals( p1 ) );\n+        \n+        PackageExport p5 = new PackageExport();\n+        assertFalse( p1.equals( p5 ) );\n+        assertFalse( p5.equals( p1 ) );\n+        \n+    }\n+}", "filename": "sigil/common/core.tests/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExportTest.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/69029cb75ab1c8860d9eeab77ba6c7dce3e93538/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExport.java", "blob_url": "https://github.com/apache/felix/blob/69029cb75ab1c8860d9eeab77ba6c7dce3e93538/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExport.java", "sha": "1a1942e78bfbbf9fa1de8991ff045c01b37c7b59", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExport.java?ref=69029cb75ab1c8860d9eeab77ba6c7dce3e93538", "patch": "@@ -175,8 +175,8 @@ public boolean equals(Object obj)\n         if ( obj == this ) return true;\n         try {\n             PackageExport e = (PackageExport) obj;\n-            return name == null ? e.name == null : name.equals( e.name ) && \n-                version == null ? e.version == null : version.equals( e.version );\n+            return (name == null ? e.name == null : name.equals( e.name )) && \n+                (version == null ? e.version == null : version.equals( e.version ));\n         }\n         catch (ClassCastException e) {\n             return false;", "filename": "sigil/common/core/src/org/apache/felix/sigil/core/internal/model/osgi/PackageExport.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/15e4adfcdf2d545baf1f829f94ebf15448e1d40e", "parent": "https://github.com/apache/felix/commit/89ad68c0d786725d5cfae15975d5e0421b891646", "message": "tidy up npe for project bundles\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@916031 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_74", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/15e4adfcdf2d545baf1f829f94ebf15448e1d40e/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/eclipse/SigilBundle.java", "blob_url": "https://github.com/apache/felix/blob/15e4adfcdf2d545baf1f829f94ebf15448e1d40e/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/eclipse/SigilBundle.java", "sha": "1c081874b88a3766d2bd32cf9b51b8223af3e6eb", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/common/core/src/org/apache/felix/sigil/core/internal/model/eclipse/SigilBundle.java?ref=15e4adfcdf2d545baf1f829f94ebf15448e1d40e", "patch": "@@ -114,12 +114,14 @@ public void synchronize( IProgressMonitor monitor ) throws IOException\n \n     private void updateManifest(IPath location) throws IOException\n     {\n-        JarFile f = new JarFile(location.toFile());\n-        try {\n-            setBundleInfo(ManifestUtil.buildBundleModelElement(f.getManifest()));\n-        }\n-        finally {\n-            f.close();\n+        if ( location != null ) {\n+            JarFile f = new JarFile(location.toFile());\n+            try {\n+                setBundleInfo(ManifestUtil.buildBundleModelElement(f.getManifest()));\n+            }\n+            finally {\n+                f.close();\n+            }\n         }\n     }\n ", "filename": "sigil/common/core/src/org/apache/felix/sigil/core/internal/model/eclipse/SigilBundle.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b3ff4f913a1623e6b4450db2f0be2f07c4e06a34", "parent": "https://github.com/apache/felix/commit/a586c92aeef6d40f4f127dde7f5e1114e6be8fd3", "message": "[karaf] Fix NPE in the OBR refreshUrl command\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@911484 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_75", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/b3ff4f913a1623e6b4450db2f0be2f07c4e06a34/karaf/shell/obr/src/main/java/org/apache/felix/karaf/shell/obr/RefreshUrlCommand.java", "blob_url": "https://github.com/apache/felix/blob/b3ff4f913a1623e6b4450db2f0be2f07c4e06a34/karaf/shell/obr/src/main/java/org/apache/felix/karaf/shell/obr/RefreshUrlCommand.java", "sha": "888d6f8578fa8d718fbc2d90c79592fa9e2d91ea", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/obr/src/main/java/org/apache/felix/karaf/shell/obr/RefreshUrlCommand.java?ref=b3ff4f913a1623e6b4450db2f0be2f07c4e06a34", "patch": "@@ -31,7 +31,7 @@\n     List<String> urls;\n \n     protected void doExecute(RepositoryAdmin admin) throws Exception {\n-\t\tif (urls != null || urls.isEmpty()) {\n+\t\tif (urls != null && !urls.isEmpty()) {\n \t\t\tfor (String url : urls) {\n \t\t\t\tadmin.removeRepository(new URL(url));\n \t\t\t\tadmin.addRepository(new URL(url));", "filename": "karaf/shell/obr/src/main/java/org/apache/felix/karaf/shell/obr/RefreshUrlCommand.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1b2ff58166ddb6f2bc52f21cf6ff2900aba27163", "parent": "https://github.com/apache/felix/commit/cfe319f2461f4767b0ea3cd6db6208c6e27d7089", "message": "Catch npe if -bundles not set\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@911180 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_76", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/1b2ff58166ddb6f2bc52f21cf6ff2900aba27163/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/project/SigilProject.java", "blob_url": "https://github.com/apache/felix/blob/1b2ff58166ddb6f2bc52f21cf6ff2900aba27163/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/project/SigilProject.java", "sha": "5bcc8994638b7ae06f3ea2f4ca5fb9bdb324cf9b", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/project/SigilProject.java?ref=1b2ff58166ddb6f2bc52f21cf6ff2900aba27163", "patch": "@@ -522,6 +522,11 @@ private ISigilBundle parseBldContents( URI uri ) throws CoreException\n         {\n             bldProject = BldFactory.getProject( uri, true );\n             ISigilBundle bundle = bldProject.getDefaultBundle();\n+            \n+            if ( bundle == null ) {\n+                throw SigilCore.newCoreException(\"No default bundle\", null);\n+            }\n+            \n             bundle.setParent( this );\n             return bundle;\n         }", "filename": "sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/project/SigilProject.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/7db017bab175124543e9898ff4db415c5f250e1c", "parent": "https://github.com/apache/felix/commit/8cb2cf6203b9eb5bf3cf4e3b09ee223e4e6c1121", "message": "Applied patch to address some NPEs. (FELIX-1809)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@910440 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_77", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/FilterImpl.java", "blob_url": "https://github.com/apache/felix/blob/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/FilterImpl.java", "sha": "c99ef76c18c0219055d87cfb955aaf3aedc30a38", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/main/java/org/apache/felix/bundlerepository/FilterImpl.java?ref=7db017bab175124543e9898ff4db415c5f250e1c", "patch": "@@ -350,7 +350,7 @@ else if (obj instanceof Collection)\n                         }\n                     }\n                 }\n-                else if (numClass.isArray())\n+                else if (numClass != null && numClass.isArray())\n                 {\n                     int len = Array.getLength(obj);\n                     for (int i = 0; i < len; i++)\n@@ -425,6 +425,7 @@ else if (numClass.isArray())\n             }\n             catch (Exception e)\n             {\n+                e.printStackTrace();\n             }\n             return false;\n         }\n@@ -660,4 +661,4 @@ public boolean matchCase(Dictionary dictionary)\n             return false;\n         }\n     }\n-}\n\\ No newline at end of file\n+}", "filename": "bundlerepository/src/main/java/org/apache/felix/bundlerepository/FilterImpl.java"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/StringSet.java", "blob_url": "https://github.com/apache/felix/blob/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/StringSet.java", "sha": "b23fd07f5e634bfef63bda9bbd09002dc8027dcd", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/main/java/org/apache/felix/bundlerepository/StringSet.java?ref=7db017bab175124543e9898ff4db415c5f250e1c", "patch": "@@ -26,10 +26,13 @@\n \n     public StringSet(String set)\n     {\n-        StringTokenizer st = new StringTokenizer(set, \",\");\n-        while (st.hasMoreTokens())\n+        if (set != null)\n         {\n-            add(st.nextToken().trim());\n+            StringTokenizer st = new StringTokenizer(set, \",\");\n+            while (st.hasMoreTokens())\n+            {\n+                add(st.nextToken().trim());\n+            }\n         }\n     }\n }\n\\ No newline at end of file", "filename": "bundlerepository/src/main/java/org/apache/felix/bundlerepository/StringSet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/test/java/org/apache/felix/bundlerepository/FilterImplTest.java", "blob_url": "https://github.com/apache/felix/blob/7db017bab175124543e9898ff4db415c5f250e1c/bundlerepository/src/test/java/org/apache/felix/bundlerepository/FilterImplTest.java", "sha": "53d96796b8bd058b276d9343f9ddf0d976c1d538", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/test/java/org/apache/felix/bundlerepository/FilterImplTest.java?ref=7db017bab175124543e9898ff4db415c5f250e1c", "patch": "@@ -70,7 +70,7 @@ public void testNoneStandardLDAPOperators() throws Exception {\n         dict.put(\"package\", \"org.eclipse.core.runtime\");\n         dict.put(\"version\", \"0.0.0\");\n         dict.put(\"common\", \"split\");\n-        assertFalse(filterImpl.match(dict));\n+        assertTrue(filterImpl.match(dict));\n \n         filterImpl = new FilterImpl(\"(&(package=org.eclipse.core.runtime)(version>=0.0.0)(common=split)(mandatory:*>common))\");\n         dict = new Hashtable();\n@@ -116,5 +116,4 @@ public void testCaseSensitive() throws Exception {\n         assertFalse(filterImpl.matchCase(dict));\n         \n     }\n-    \n-}\n+}\n\\ No newline at end of file", "filename": "bundlerepository/src/test/java/org/apache/felix/bundlerepository/FilterImplTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/4b69b137f5fc47cdf5a4b9a28b0d12d9327ab85c", "parent": "https://github.com/apache/felix/commit/952556981c5e9700dca701db99b329fea540b049", "message": "Fix potential NPE on startup\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@907611 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_78", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/4b69b137f5fc47cdf5a4b9a28b0d12d9327ab85c/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/OptionalFeaturesHandler.java", "blob_url": "https://github.com/apache/felix/blob/4b69b137f5fc47cdf5a4b9a28b0d12d9327ab85c/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/OptionalFeaturesHandler.java", "sha": "e951123fdb67082172b23f40a1de3c06d05b862f", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/OptionalFeaturesHandler.java?ref=4b69b137f5fc47cdf5a4b9a28b0d12d9327ab85c", "patch": "@@ -73,7 +73,7 @@ public OptionalFeaturesHandler(final PluginServlet plugin, final BundleContext c\n         final ServiceReference cfaRef = this.bundleContext.getServiceReference(CONFIGURATION_ADMIN_CLASS_NAME);\n         if ( cfaRef != null )\n         {\n-            final Long id = (Long)ref.getProperty(Constants.SERVICE_ID);\n+            final Long id = (Long)cfaRef.getProperty(Constants.SERVICE_ID);\n             bindConfigAdmin(id);\n         }\n \n@@ -115,7 +115,7 @@ public void serviceChanged(final ServiceEvent event)\n                             public void run()\n                             {\n                                 try {\n-                                    Thread.sleep(50);\n+                                    Thread.sleep(500);\n                                 } catch (InterruptedException ignore) {}\n                                 bindEventAdmin(id);\n                             }\n@@ -128,7 +128,7 @@ else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                             public void run()\n                             {\n                                 try {\n-                                    Thread.sleep(50);\n+                                    Thread.sleep(500);\n                                 } catch (InterruptedException ignore) {}\n                                 unbindEventAdmin(id);\n                             }\n@@ -145,7 +145,7 @@ else if ( objectClasses[i].equals(CONFIGURATION_ADMIN_CLASS_NAME) )\n                             public void run()\n                             {\n                                 try {\n-                                    Thread.sleep(50);\n+                                    Thread.sleep(500);\n                                 } catch (InterruptedException ignore) {}\n                                 bindConfigAdmin(id);\n                             }\n@@ -158,7 +158,7 @@ else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                             public void run()\n                             {\n                                 try {\n-                                    Thread.sleep(50);\n+                                    Thread.sleep(500);\n                                 } catch (InterruptedException ignore) {}\n                                 unbindConfigAdmin(id);\n                             }", "filename": "webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/OptionalFeaturesHandler.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6861941b9f473aea137cfbe57743b3b403f483ff", "parent": "https://github.com/apache/felix/commit/8ebd92a14cc4bc3b608ae2cea752bbeb70ffd1e8", "message": "FELIX-1961 : NPE when invoking install/update panel\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@894169 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_79", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/6861941b9f473aea137cfbe57743b3b403f483ff/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "blob_url": "https://github.com/apache/felix/blob/6861941b9f473aea137cfbe57743b3b403f483ff/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "sha": "a1b14b80b2d1499f4e2ef1e0c0a7b9c67bfa7385", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java?ref=6861941b9f473aea137cfbe57743b3b403f483ff", "patch": "@@ -384,7 +384,7 @@ protected void renderContent( HttpServletRequest request, HttpServletResponse re\n         pw.println( \"var imgRoot = '\" + appRoot + \"/res/imgs';\");\n         pw.println( \"var startLevel = \" + getStartLevel().getInitialBundleStartLevel() + \";\");\n         pw.println( \"var drawDetails = \" + reqInfo.bundleRequested + \";\");\n-        pw.println( \"var currentBundle = \" + (reqInfo.bundleRequested ? String.valueOf(reqInfo.bundle.getBundleId()) : \"null\") + \";\");\n+        pw.println( \"var currentBundle = \" + (reqInfo.bundleRequested && reqInfo.bundle != null ? String.valueOf(reqInfo.bundle.getBundleId()) : \"null\") + \";\");\n         Util.endScript( pw );\n \n         Util.script(pw, appRoot, \"bundles.js\");", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/e441812b926ef59ec325c69dc5824f5646b5ced5", "parent": "https://github.com/apache/felix/commit/2a1f92bd6e3d1945e0dd2ce87c52c567bda0195c", "message": "FELIX-1566: Possible NPE when uninstalling a feature\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@812386 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_80", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/e441812b926ef59ec325c69dc5824f5646b5ced5/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/e441812b926ef59ec325c69dc5824f5646b5ced5/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java", "sha": "421de12863716757b6f8c661543a3a20bf60f590", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java?ref=e441812b926ef59ec325c69dc5824f5646b5ced5", "patch": "@@ -301,7 +301,10 @@ public void uninstallFeature(String name, String version) throws Exception {\n             bundles.removeAll(b);\n         }\n         for (long bundleId : bundles) {\n-            getBundleContext().getBundle(bundleId).uninstall();\n+            Bundle b = getBundleContext().getBundle(bundleId);\n+            if (b != null) {\n+                b.uninstall();\n+            }\n         }\n         callListeners(new FeatureEvent(feature, FeatureEvent.EventType.FeatureInstalled, false));\n         saveState();", "filename": "karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/db513bd2a486990d9dd2b35be66c289a3dfe91f7", "parent": "https://github.com/apache/felix/commit/e9a1a01a8663eecf45d5a37ce4061e9efb7c2456", "message": "tidy up npe caused by commented out image reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@804468 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_81", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/db513bd2a486990d9dd2b35be66c289a3dfe91f7/sigil/eclipse/ui/src/org/apache/felix/sigil/ui/eclipse/ui/editors/project/SigilProjectEditorPart.java", "blob_url": "https://github.com/apache/felix/blob/db513bd2a486990d9dd2b35be66c289a3dfe91f7/sigil/eclipse/ui/src/org/apache/felix/sigil/ui/eclipse/ui/editors/project/SigilProjectEditorPart.java", "sha": "0e91a61e6308c094ac9e2631116ec548598c76a0", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/eclipse/ui/src/org/apache/felix/sigil/ui/eclipse/ui/editors/project/SigilProjectEditorPart.java?ref=db513bd2a486990d9dd2b35be66c289a3dfe91f7", "patch": "@@ -209,7 +209,9 @@ public boolean isSaveAsAllowed()\n     public void dispose()\n     {\n         ResourcesPlugin.getWorkspace().removeResourceChangeListener( this );\n-        errorImage.dispose();\n+        if ( errorImage != null ) {\n+            errorImage.dispose();\n+        }\n         super.dispose();\n     }\n ", "filename": "sigil/eclipse/ui/src/org/apache/felix/sigil/ui/eclipse/ui/editors/project/SigilProjectEditorPart.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8b420ccc71de3cf2e293f79e90b585095eb281d4", "parent": "https://github.com/apache/felix/commit/8d0e201d300e7d5d4e12be75130ce5586ea881fe", "message": "FELIX-1028 : Throw NPE instead of InvalidSyntaxException if expr is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@763227 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_82", "file": [{"additions": 16, "raw_url": "https://github.com/apache/felix/raw/8b420ccc71de3cf2e293f79e90b585095eb281d4/framework/src/main/java/org/apache/felix/framework/FilterImpl.java", "blob_url": "https://github.com/apache/felix/blob/8b420ccc71de3cf2e293f79e90b585095eb281d4/framework/src/main/java/org/apache/felix/framework/FilterImpl.java", "sha": "4b7abfbc1a8f20200f036d27e31dddff385f41d7", "changes": 32, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/FilterImpl.java?ref=8b420ccc71de3cf2e293f79e90b585095eb281d4", "patch": "@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -20,8 +20,8 @@\n \n import java.io.CharArrayReader;\n import java.io.IOException;\n-import java.util.*;\n import java.lang.ref.SoftReference;\n+import java.util.*;\n \n import org.apache.felix.framework.util.StringMap;\n import org.apache.felix.framework.util.ldap.*;\n@@ -56,7 +56,7 @@ public FilterImpl(Logger logger, String expr) throws InvalidSyntaxException\n         m_logger = logger;\n         if (expr == null)\n         {\n-            throw new InvalidSyntaxException(\"Filter cannot be null\", null);\n+            throw new NullPointerException(\"Filter cannot be null\");\n         }\n         Object[] program = null;\n         synchronized (m_programCache)\n@@ -127,44 +127,44 @@ public int hashCode()\n         return toString().hashCode();\n     }\n \n-    private boolean match(Dictionary dict, ServiceReference ref, boolean caseSensitive) \n+    private boolean match(Dictionary dict, ServiceReference ref, boolean caseSensitive)\n         throws IllegalArgumentException\n     {\n         SoftReference tupleRef = (SoftReference) m_cache.get();\n         Evaluator evaluator = null;\n         SimpleMapper mapper = null;\n         Object[] tuple = null;\n \n-        if (tupleRef != null) \n+        if (tupleRef != null)\n         {\n             tuple = (Object[]) tupleRef.get();\n         }\n \n-        if (tuple == null) \n+        if (tuple == null)\n         {\n             evaluator = new Evaluator(m_program);\n             mapper = new SimpleMapper();\n         }\n-        else \n+        else\n         {\n             evaluator = (Evaluator) tuple[0];\n             mapper = (SimpleMapper) tuple[1];\n             m_cache.set(null);\n         }\n \n-        try \n+        try\n         {\n-            if (dict != null) \n+            if (dict != null)\n             {\n                 mapper.setSource(dict, caseSensitive);\n             }\n-            else \n+            else\n             {\n                 mapper.setSource(ref);\n             }\n \n             return evaluator.evaluate(mapper);\n-        } \n+        }\n         catch (AttributeNotFoundException ex)\n         {\n             log(Logger.LOG_DEBUG, \"FilterImpl: Attribute not found.\", ex);\n@@ -173,18 +173,18 @@ private boolean match(Dictionary dict, ServiceReference ref, boolean caseSensiti\n         {\n             log(Logger.LOG_ERROR, \"FilterImpl: \" + toString(), ex);\n         }\n-        finally \n+        finally\n         {\n-            if (dict != null) \n+            if (dict != null)\n             {\n                 mapper.setSource(null, caseSensitive);\n             }\n-            else \n+            else\n             {\n                 mapper.setSource(null);\n             }\n-            \n-            if (tuple == null) \n+\n+            if (tuple == null)\n             {\n                 m_cache.set(new SoftReference(new Object[] {evaluator, mapper}));\n             }", "filename": "framework/src/main/java/org/apache/felix/framework/FilterImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/cd6441baca63297e430901204817983567c70b05", "parent": "https://github.com/apache/felix/commit/a3291a0f67b767f7b877c193ed0c059b2bf8648c", "message": "FELIX-1028 : Prevent NPE on createFilter() call.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@762816 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_83", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/cd6441baca63297e430901204817983567c70b05/webconsole/src/main/java/org/apache/felix/webconsole/internal/compendium/ConfigManager.java", "blob_url": "https://github.com/apache/felix/blob/cd6441baca63297e430901204817983567c70b05/webconsole/src/main/java/org/apache/felix/webconsole/internal/compendium/ConfigManager.java", "sha": "278cf117498d971a454f2043c6b378b94fcedb2e", "changes": 23, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/compendium/ConfigManager.java?ref=cd6441baca63297e430901204817983567c70b05", "patch": "@@ -223,21 +223,24 @@ public void renderContent( HttpServletRequest request, HttpServletResponse respo\n         {\n             pidFilter = pid;\n         }\n-        try\n+        if ( pidFilter != null )\n         {\n-            getBundleContext().createFilter( pidFilter );\n+            try\n+            {\n+                getBundleContext().createFilter( pidFilter );\n \n-            // if the pidFilter was set from the pid, clear the pid\n-            if ( pid == pidFilter )\n+                // if the pidFilter was set from the pid, clear the pid\n+                if ( pid == pidFilter )\n+                {\n+                    pid = null;\n+                }\n+            }\n+            catch ( InvalidSyntaxException ise )\n             {\n-                pid = null;\n+                // its ok, if the pid is just a single PID\n+                pidFilter = null;\n             }\n         }\n-        catch ( InvalidSyntaxException ise )\n-        {\n-            // its ok, if the pid is just a single PID\n-            pidFilter = null;\n-        }\n \n         final ConfigurationAdmin ca = this.getConfigurationAdmin();\n ", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/compendium/ConfigManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f202a0afb2a0c22897f30b596b560184326ce45d", "parent": "https://github.com/apache/felix/commit/6eb1f679188900899e3386df0d3bc85d2c4f8655", "message": "Fix an NPE issue if state file is empty. (FELIX-902)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@738920 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_84", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/f202a0afb2a0c22897f30b596b560184326ce45d/framework/src/main/java/org/apache/felix/framework/cache/BundleArchive.java", "blob_url": "https://github.com/apache/felix/blob/f202a0afb2a0c22897f30b596b560184326ce45d/framework/src/main/java/org/apache/felix/framework/cache/BundleArchive.java", "sha": "cc6bc9cb7f1c5b86e537f4e95941b1f57978a1fb", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/cache/BundleArchive.java?ref=f202a0afb2a0c22897f30b596b560184326ce45d", "patch": "@@ -309,11 +309,11 @@ public synchronized int getPersistentState() throws Exception\n                 .getFileInputStream(stateFile);\n             br = new BufferedReader(new InputStreamReader(is));\n             String s = br.readLine();\n-            if (s.equals(ACTIVE_STATE))\n+            if ((s != null) && s.equals(ACTIVE_STATE))\n             {\n                 m_persistentState = Bundle.ACTIVE;\n             }\n-            else if (s.equals(UNINSTALLED_STATE))\n+            else if ((s != null) && s.equals(UNINSTALLED_STATE))\n             {\n                 m_persistentState = Bundle.UNINSTALLED;\n             }\n@@ -343,7 +343,7 @@ public synchronized void setPersistentState(int state) throws Exception\n     {\n         // Write the bundle state.\n         OutputStream os = null;\n-        BufferedWriter bw= null;\n+        BufferedWriter bw = null;\n         try\n         {\n             os = BundleCache.getSecureAction()", "filename": "framework/src/main/java/org/apache/felix/framework/cache/BundleArchive.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/afe513a8cd58f4fe0fadbdc66e24019b29614141", "parent": "https://github.com/apache/felix/commit/53d5b31641b8e9ac0f841d06cf648bb6acba0c15", "message": "Fixed a possible NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@709549 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_85", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/afe513a8cd58f4fe0fadbdc66e24019b29614141/main/src/main/java/org/apache/felix/main/Main.java", "blob_url": "https://github.com/apache/felix/blob/afe513a8cd58f4fe0fadbdc66e24019b29614141/main/src/main/java/org/apache/felix/main/Main.java", "sha": "69839be705fc8d03bfd033b67171c1f8c1ecf02f", "changes": 19, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/main/src/main/java/org/apache/felix/main/Main.java?ref=afe513a8cd58f4fe0fadbdc66e24019b29614141", "patch": "@@ -57,6 +57,10 @@\n      * The default name used for the configuration properties file.\n     **/\n     public static final String CONFIG_PROPERTIES_FILE_VALUE = \"config.properties\";\n+    /**\n+     * Name of the configuration directory.\n+     */\n+    public static final String CONFIG_DIRECTORY = \"conf\";\n \n     private static Framework m_felix = null;\n \n@@ -176,6 +180,13 @@ public static void main(String[] args) throws Exception\n \n         // Read configuration properties.\n         Properties configProps = Main.loadConfigProperties();\n+        // If no configuration properties were found, then create\n+        // an empty properties object.\n+        if (configProps == null)\n+        {\n+            System.err.println(\"No \" + CONFIG_PROPERTIES_FILE_VALUE + \" found.\");\n+            configProps = new Properties();\n+        }\n \n         // Copy framework properties from the system properties.\n         Main.copySystemProperties(configProps);\n@@ -267,12 +278,12 @@ public static void loadSystemProperties()\n                 // directory of the felix.jar directory.\n                 confDir = new File(\n                     new File(new File(jarLocation).getAbsolutePath()).getParent(),\n-                    \"conf\");\n+                    CONFIG_DIRECTORY);\n             }\n             else\n             {\n                 // Can't figure it out so use the current directory as default.\n-                confDir = new File(System.getProperty(\"user.dir\"));\n+                confDir = new File(System.getProperty(\"user.dir\"), CONFIG_DIRECTORY);\n             }\n \n             try\n@@ -378,12 +389,12 @@ public static Properties loadConfigProperties()\n                 // directory of the felix.jar directory.\n                 confDir = new File(\n                     new File(new File(jarLocation).getAbsolutePath()).getParent(),\n-                    \"conf\");\n+                    CONFIG_DIRECTORY);\n             }\n             else\n             {\n                 // Can't figure it out so use the current directory as default.\n-                confDir = new File(System.getProperty(\"user.dir\"));\n+                confDir = new File(System.getProperty(\"user.dir\"), CONFIG_DIRECTORY);\n             }\n \n             try", "filename": "main/src/main/java/org/apache/felix/main/Main.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/d7b6054ab640819ce26c78ab4b487e0d78dc2f6c", "parent": "https://github.com/apache/felix/commit/3d670740dfa9a4ca37bf093ac8e58ec955e57915", "message": "Fixed potential NPE when comparing resources. (FELIX-789)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@707743 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_86", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/d7b6054ab640819ce26c78ab4b487e0d78dc2f6c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceComparator.java", "blob_url": "https://github.com/apache/felix/blob/d7b6054ab640819ce26c78ab4b487e0d78dc2f6c/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceComparator.java", "sha": "40bd499236d273c2b00209806369259f4b786997", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceComparator.java?ref=d7b6054ab640819ce26c78ab4b487e0d78dc2f6c", "patch": "@@ -30,6 +30,14 @@ public int compare(Object o1, Object o2)\n         Resource r2 = (Resource) o2;\n         String name1 = (String) r1.getPresentationName();\n         String name2 = (String) r2.getPresentationName();\n+        if (name1 == null)\n+        {\n+            return -1;\n+        }\n+        else if (name2 == null)\n+        {\n+            return 1;\n+        }\n         return name1.compareToIgnoreCase(name2);\n     }\n }\n\\ No newline at end of file", "filename": "bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceComparator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8e32fc2a85e5689705a6d47121fcd3c128d57e31", "parent": "https://github.com/apache/felix/commit/b0bfc80788ab47a5ce3177aa38241fbd0c3689c6", "message": "Ignore global property with \"null\" value (instead of throwing NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@690156 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_87", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/8e32fc2a85e5689705a6d47121fcd3c128d57e31/scrplugin/src/main/java/org/apache/felix/scrplugin/PropertyHandler.java", "blob_url": "https://github.com/apache/felix/blob/8e32fc2a85e5689705a6d47121fcd3c128d57e31/scrplugin/src/main/java/org/apache/felix/scrplugin/PropertyHandler.java", "sha": "f7e5e6ede05d2f2d5b75a39941bd1bc654baad35", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/src/main/java/org/apache/felix/scrplugin/PropertyHandler.java?ref=8e32fc2a85e5689705a6d47121fcd3c128d57e31", "patch": "@@ -351,7 +351,7 @@ public void processProperties(final Map globalProperties)\n                 final String name = entry.getKey().toString();\n \n                 // check if the service already provides this property\n-                if ( !properties.containsKey(name) ) {\n+                if ( !properties.containsKey(name) && entry.getValue() != null ) {\n                     final String value = entry.getValue().toString();\n \n                     final Property p = new Property();", "filename": "scrplugin/src/main/java/org/apache/felix/scrplugin/PropertyHandler.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1fd4082b9d4f0de37ed2badb1f845aa973687d36", "parent": "https://github.com/apache/felix/commit/ea0e1ab80ad38477e3ea731cb9377d09da04a795", "message": "Fix a NPE on framework restart when extension bundles are installed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@612553 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_88", "file": [{"additions": 24, "raw_url": "https://github.com/apache/felix/raw/1fd4082b9d4f0de37ed2badb1f845aa973687d36/framework/src/main/java/org/apache/felix/framework/Felix.java", "blob_url": "https://github.com/apache/felix/blob/1fd4082b9d4f0de37ed2badb1f845aa973687d36/framework/src/main/java/org/apache/felix/framework/Felix.java", "sha": "b687ff7433fcdb6bf0f7eb0686f58188d67e5915", "changes": 44, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/Felix.java?ref=1fd4082b9d4f0de37ed2badb1f845aa973687d36", "patch": "@@ -712,6 +712,22 @@ public void moduleUnresolved(ModuleEvent event)\n             archives = null;\n         }\n \n+        // create the system bundle that is responsible for providing specific \n+        // container related services.\n+        IContentLoader cl = m_extensionManager;\n+        cl.setSearchPolicy(\n+            new R4SearchPolicy(\n+                m_policyCore, m_systemBundleInfo.getCurrentModule()));\n+        m_factory.setContentLoader(\n+            m_systemBundleInfo.getCurrentModule(),\n+            cl);\n+        m_factory.setSecurityContext(\n+            m_systemBundleInfo.getCurrentModule(),\n+            getClass().getProtectionDomain());\n+\n+        m_installedBundleMap.put(\n+            m_systemBundleInfo.getLocation(), this);\n+        \n         FelixBundle bundle = null;\n \n         // Now install all cached bundles.\n@@ -784,25 +800,10 @@ public void moduleUnresolved(ModuleEvent event)\n             }\n         }\n \n-        // Now that the cached bundles are reloaded, create the system\n-        // bundle that is responsible for providing specific container\n-        // related services and activating all custom framework activators.\n+        // Now that the cached bundles are reloaded, \n+        // activating all custom framework activators.\n         try\n         {\n-            IContentLoader cl = m_extensionManager;\n-            cl.setSearchPolicy(\n-                new R4SearchPolicy(\n-                    m_policyCore, m_systemBundleInfo.getCurrentModule()));\n-            m_factory.setContentLoader(\n-                m_systemBundleInfo.getCurrentModule(),\n-                cl);\n-            m_factory.setSecurityContext(\n-                m_systemBundleInfo.getCurrentModule(),\n-                getClass().getProtectionDomain());\n-\n-            m_installedBundleMap.put(\n-                m_systemBundleInfo.getLocation(), this);\n-\n             // Manually resolve the System Bundle, which will cause its\n             // state to be set to RESOLVED.\n             try\n@@ -822,8 +823,10 @@ public void moduleUnresolved(ModuleEvent event)\n \n             // Create the bundle context for the system bundle and\n             // then activate it.\n-            m_systemBundleInfo.setBundleContext(new BundleContextImpl(m_logger, this, this));\n-            Felix.m_secureAction.startActivator(m_systemBundleInfo.getActivator(), m_systemBundleInfo.getBundleContext());\n+            m_systemBundleInfo.setBundleContext(\n+                new BundleContextImpl(m_logger, this, this));\n+            Felix.m_secureAction.startActivator(m_systemBundleInfo.getActivator(), \n+                m_systemBundleInfo.getBundleContext());\n         }\n         catch (Throwable ex)\n         {\n@@ -843,7 +846,8 @@ public void moduleUnresolved(ModuleEvent event)\n         try\n         {\n             StartLevel sl = (StartLevel) getService(\n-                getBundle(0),getServiceReferences((FelixBundle) getBundle(0), StartLevel.class.getName(), null, true)[0]);\n+                getBundle(0),getServiceReferences((FelixBundle) getBundle(0), \n+                StartLevel.class.getName(), null, true)[0]);\n             if (sl instanceof StartLevelImpl)\n             {\n                 ((StartLevelImpl) sl).setStartLevelAndWait(startLevel);", "filename": "framework/src/main/java/org/apache/felix/framework/Felix.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/07c24ed5f26413c35eabe60a9cc777df0814f78f", "parent": "https://github.com/apache/felix/commit/d7785d33edb453b164020183434231025d50325f", "message": "Fix NPE by returning an empty array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@582130 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_89", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/07c24ed5f26413c35eabe60a9cc777df0814f78f/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/cl/ClassLoaderJavaClassDescription.java", "blob_url": "https://github.com/apache/felix/blob/07c24ed5f26413c35eabe60a9cc777df0814f78f/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/cl/ClassLoaderJavaClassDescription.java", "sha": "83e87db1c8e8ae6b545314caaeb5e6f3f5d8e4d2", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/cl/ClassLoaderJavaClassDescription.java?ref=07c24ed5f26413c35eabe60a9cc777df0814f78f", "patch": "@@ -56,15 +56,15 @@ public ClassLoaderJavaClassDescription(Class c, Component comp, JavaClassDescrip\n \n     public JavaField[] getFields() {\n         // TODO Auto-generated method stub\n-        return null;\n+        return new JavaField[0];\n     }\n \n     public JavaClassDescription[] getImplementedInterfaces() throws MojoExecutionException {\n         Class[] implemented = clazz.getInterfaces();\n         if (implemented == null || implemented.length == 0) {\n             return null;\n         }\n-        \n+\n         JavaClassDescription[] jcd = new JavaClassDescription[implemented.length];\n         for (int i=0; i < jcd.length; i++) {\n             jcd[i] = manager.getJavaClassDescription(implemented[i].getName());", "filename": "scrplugin/src/main/java/org/apache/felix/scrplugin/tags/cl/ClassLoaderJavaClassDescription.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/38d251cf85d490cb8ed0c7f3272297afed4241b4", "parent": "https://github.com/apache/felix/commit/5f6f1f3d4d36a2bb566d7e059d0785bef94b2319", "message": "Fix a NPE in manifest goal (FELIX-326)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@555987 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_90", "file": [{"additions": 7, "raw_url": "https://github.com/apache/felix/raw/38d251cf85d490cb8ed0c7f3272297afed4241b4/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java", "blob_url": "https://github.com/apache/felix/blob/38d251cf85d490cb8ed0c7f3272297afed4241b4/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java", "sha": "aafdba0587ea922806a4c44c4bac4ceff0b6ea28", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java?ref=38d251cf85d490cb8ed0c7f3272297afed4241b4", "patch": "@@ -19,6 +19,7 @@\n package org.apache.felix.bundleplugin;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.util.HashMap;\n@@ -109,12 +110,17 @@ protected Analyzer getAnalyzer( MavenProject project, Map instructions, Properti\n \n         analyzer.setProperties( props );\n \n-        if ( project.getArtifact().getFile() == null )\n+        File file = project.getArtifact().getFile();\n+        if ( file == null )\n         {\n             analyzer.setJar( getOutputDirectory() );\n         }\n         else\n         {\n+            if ( !file.exists() )\n+            {\n+                file.mkdirs();\n+            }\n             analyzer.setJar( project.getArtifact().getFile() );\n         }\n ", "filename": "bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1f84a2660a2868b5620f53c41c42f5a44573e592", "parent": "https://github.com/apache/felix/commit/35cca6959c573960d1848193c16adb1ee77de98f", "message": "Apply patch to fix a NPE in manifest goal (FELIX-326).\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@555293 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_91", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/1f84a2660a2868b5620f53c41c42f5a44573e592/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java", "blob_url": "https://github.com/apache/felix/blob/1f84a2660a2868b5620f53c41c42f5a44573e592/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java", "sha": "bdba88540a877c288eda64c6d6e5f2170360abc3", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java?ref=1f84a2660a2868b5620f53c41c42f5a44573e592", "patch": "@@ -111,9 +111,12 @@ protected Analyzer getAnalyzer( MavenProject project, Map instructions, Properti\n \n         if ( project.getArtifact().getFile() == null )\n         {\n-            throw new NullPointerException( \"Artifact file is null\" );\n+            analyzer.setJar( getOutputDirectory() );\n+        }\n+        else\n+        {\n+            analyzer.setJar( project.getArtifact().getFile() );\n         }\n-        analyzer.setJar( project.getArtifact().getFile() );\n \n         if ( classpath != null )\n             analyzer.setClasspath( classpath );", "filename": "bundleplugin/src/main/java/org/apache/felix/bundleplugin/ManifestPlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6c0257035e13838358dd0d3c5410ba0c04ce266b", "parent": "https://github.com/apache/felix/commit/1b21b00ba033f2f6aa67dfba9888a3fcb09d7582", "message": "Applied a patch to avoid an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/felix/trunk@452484 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_92", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/6c0257035e13838358dd0d3c5410ba0c04ce266b/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/6c0257035e13838358dd0d3c5410ba0c04ce266b/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java", "sha": "c096097821760215334c179a00d548adb414a2fc", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java?ref=6c0257035e13838358dd0d3c5410ba0c04ce266b", "patch": "@@ -560,6 +560,10 @@ private boolean isResourceUpdatable(\n         // Get all of the local resolvable requirements for the old\n         // version of the resource from the specified resource array.\n         Requirement[] reqs = getResolvableRequirements(oldVersion, resources);\n+        if (reqs == null)\n+        {\n+            return true;\n+        }\n \n         // Now make sure that all of the requirements resolved by the\n         // old version of the resource can also be resolved by the new\n@@ -623,4 +627,4 @@ private boolean isResourceUpdatable(\n         }\n         return null;\n     }\n-}\n\\ No newline at end of file\n+}", "filename": "bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/d7eb04a1120afed0ce0772333ab6c2091ff4bc84", "parent": "https://github.com/apache/felix/commit/afc52d4537e573a54bce2c3a1cc3d05e84de0ef9", "message": "A small patch from Marcel Offermans to avoid an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/felix/trunk@376282 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_93", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/d7eb04a1120afed0ce0772333ab6c2091ff4bc84/org.apache.felix.framework/src/main/java/org/apache/felix/framework/cache/DefaultBundleArchive.java", "blob_url": "https://github.com/apache/felix/blob/d7eb04a1120afed0ce0772333ab6c2091ff4bc84/org.apache.felix.framework/src/main/java/org/apache/felix/framework/cache/DefaultBundleArchive.java", "sha": "e2a162db21b7f05413151d20f21204d0e70a62fa", "changes": 7, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/org.apache.felix.framework/src/main/java/org/apache/felix/framework/cache/DefaultBundleArchive.java?ref=d7eb04a1120afed0ce0772333ab6c2091ff4bc84", "patch": "@@ -1154,13 +1154,10 @@ private void preprocessBundleJar(int revision, File revisionDir)\n         {\n             // Get the bundle's manifest header.\n             Map map = getManifestHeader(revision);\n-            if (map == null)\n-            {\n-                map = new HashMap();\n-            }\n \n             // Find class path meta-data.\n-            String classPath = map.get(FelixConstants.BUNDLE_CLASSPATH).toString();\n+            String classPath = (map == null)\n+                ? null : (String) map.get(FelixConstants.BUNDLE_CLASSPATH);\n \n             // Parse the class path into strings.\n             String[] classPathStrings = Util.parseDelimitedString(", "filename": "org.apache.felix.framework/src/main/java/org/apache/felix/framework/cache/DefaultBundleArchive.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/65b98ca9339d09303823e065a1bdbe83f22831cd", "parent": "https://github.com/apache/felix/commit/e4939fe97f399f8b855d1934f38a4bce6e33aec9", "message": "[FELIX-4495] Fix possible NPE when trying to resolve a single bundle which is an already resolved fragment\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1667218 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_94", "file": [{"additions": 22, "raw_url": "https://github.com/apache/felix/raw/65b98ca9339d09303823e065a1bdbe83f22831cd/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/65b98ca9339d09303823e065a1bdbe83f22831cd/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "sha": "381240b944741f3a7e83ff461064363815a4c506", "changes": 29, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java?ref=65b98ca9339d09303823e065a1bdbe83f22831cd", "patch": "@@ -197,15 +197,14 @@ public ResolverImpl(Logger logger)\n                 // If a populated resource is a fragment, then its host\n                 // must ultimately be verified, so store its host requirement\n                 // to use for package space calculation.\n-                Map<Resource, List<Requirement>> hostReqs =\n-                    new HashMap<Resource, List<Requirement>>();\n+                Map<Resource, Requirement> hostReqs = new HashMap<Resource, Requirement>();\n                 for (Resource resource : allResources)\n                 {\n                     if (Util.isFragment(resource))\n                     {\n                         hostReqs.put(\n                             resource,\n-                            resource.getRequirements(HostNamespace.HOST_NAMESPACE));\n+                            resource.getRequirements(HostNamespace.HOST_NAMESPACE).get(0));\n                     }\n                 }\n \n@@ -260,10 +259,18 @@ public ResolverImpl(Logger logger)\n \n                         // If we are resolving a fragment, then get its\n                         // host candidate and verify it instead.\n-                        List<Requirement> hostReq = hostReqs.get(resource);\n+                        Requirement hostReq = hostReqs.get(resource);\n                         if (hostReq != null)\n                         {\n-                            target = allCandidates.getFirstCandidate(hostReq.get(0)).getResource();\n+                            Capability hostCap = allCandidates.getFirstCandidate(hostReq);\n+                            // If the resource is an already resolved fragment and can not\n+                            // be attached to new hosts, there will be no matching host,\n+                            // so ignore this resource\n+                            if (hostCap == null)\n+                            {\n+                                continue;\n+                            }\n+                            target = hostCap.getResource();\n                         }\n \n                         calculatePackageSpaces(\n@@ -366,10 +373,18 @@ else if (faultyResources.size() > currentFaultyResources.size())\n \n                         // If we are resolving a fragment, then we\n                         // actually want to populate its host's wires.\n-                        List<Requirement> hostReq = hostReqs.get(resource);\n+                        Requirement hostReq = hostReqs.get(resource);\n                         if (hostReq != null)\n                         {\n-                            target = allCandidates.getFirstCandidate(hostReq.get(0)).getResource();\n+                            Capability hostCap = allCandidates.getFirstCandidate(hostReq);\n+                            // If the resource is an already resolved fragment and can not\n+                            // be attached to new hosts, there will be no matching host,\n+                            // so ignore this resource\n+                            if (hostCap == null)\n+                            {\n+                                continue;\n+                            }\n+                            target = hostCap.getResource();\n                         }\n \n                         if (allCandidates.isPopulated(target))", "filename": "resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/15366e991c1876b64d64eb42357b15bf14f472dd", "parent": "https://github.com/apache/felix/commit/e9b0986fa3381faa891754457aaf969da8243364", "message": "[FELIX-4618] - NPE if config value for ignore topic or timeout is empty\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1620869 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_95", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/15366e991c1876b64d64eb42357b15bf14f472dd/eventadmin/impl/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/15366e991c1876b64d64eb42357b15bf14f472dd/eventadmin/impl/changelog.txt", "sha": "8b2eab7f9f4e70be94de0a151422d66c884aa17b", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/eventadmin/impl/changelog.txt?ref=15366e991c1876b64d64eb42357b15bf14f472dd", "patch": "@@ -2,6 +2,7 @@ Changes from 1.4.0 to 1.4.2\n ---------------------------\n ** Bug\n     * [FELIX-4617] - Empty configurations for ignore topic and ignore timeout lead to error messages in the log\n+    * [FELIX-4618] - NPE if config value for ignore topic or timeout is empty\n \n \n Changes from 1.3.2 to 1.4.0", "filename": "eventadmin/impl/changelog.txt"}, {"additions": 13, "raw_url": "https://github.com/apache/felix/raw/15366e991c1876b64d64eb42357b15bf14f472dd/eventadmin/impl/src/main/java/org/apache/felix/eventadmin/impl/handler/EventHandlerTracker.java", "blob_url": "https://github.com/apache/felix/blob/15366e991c1876b64d64eb42357b15bf14f472dd/eventadmin/impl/src/main/java/org/apache/felix/eventadmin/impl/handler/EventHandlerTracker.java", "sha": "91f1eb02d938da1bae8020e0875e7a120f563d62", "changes": 17, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/eventadmin/impl/src/main/java/org/apache/felix/eventadmin/impl/handler/EventHandlerTracker.java?ref=15366e991c1876b64d64eb42357b15bf14f472dd", "patch": "@@ -18,6 +18,7 @@\n  */\n package org.apache.felix.eventadmin.impl.handler;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n@@ -283,7 +284,7 @@ private void checkHandlerAndAdd( final Set<EventHandlerProxy> handlers,\n         }\n         else\n         {\n-            matchers = new Matcher[config.length];\n+            final List<Matcher> list = new ArrayList<EventHandlerTracker.Matcher>();\n             for(int i=0;i<config.length;i++)\n             {\n                 String value = config[i];\n@@ -295,22 +296,30 @@ private void checkHandlerAndAdd( final Set<EventHandlerProxy> handlers,\n                 {\n                     if ( value.endsWith(\".\") )\n                     {\n-                        matchers[i] = new PackageMatcher(value.substring(0, value.length() - 1));\n+                        list.add(new PackageMatcher(value.substring(0, value.length() - 1)));\n                     }\n                     else if ( value.endsWith(\"*\") )\n                     {\n                         if ( value.equals(\"*\") )\n                         {\n                             return new Matcher[] {new MatcherAll()};\n                         }\n-                        matchers[i] = new SubPackageMatcher(value.substring(0, value.length() - 1));\n+                        list.add(new SubPackageMatcher(value.substring(0, value.length() - 1)));\n                     }\n                     else\n                     {\n-                        matchers[i] = new ClassMatcher(value);\n+                        list.add(new ClassMatcher(value));\n                     }\n                 }\n             }\n+            if ( list.size() > 0 )\n+            {\n+                matchers = list.toArray(new Matcher[list.size()]);\n+            }\n+            else\n+            {\n+                matchers = null;\n+            }\n         }\n         return matchers;\n \t}", "filename": "eventadmin/impl/src/main/java/org/apache/felix/eventadmin/impl/handler/EventHandlerTracker.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/e735c3d2c380d18f7bd7614bf3207d62ad706a17", "parent": "https://github.com/apache/felix/commit/3d3889f8150620749fa6981452f18777c0a5bbb8", "message": "Fixed FELIX-4572 : Web Console may cause NPE on refresh packages\nhttps://issues.apache.org/jira/browse/FELIX-4572\n\n(removed forgotten dump)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1612489 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_96", "file": [{"additions": 0, "raw_url": "https://github.com/apache/felix/raw/e735c3d2c380d18f7bd7614bf3207d62ad706a17/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "blob_url": "https://github.com/apache/felix/blob/e735c3d2c380d18f7bd7614bf3207d62ad706a17/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "sha": "682405f3b51d664857e40c600895278474a03278", "changes": 5, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java?ref=e735c3d2c380d18f7bd7614bf3207d62ad706a17", "patch": "@@ -414,11 +414,6 @@ else if ( \"uninstall\".equals( action ) )\n                     // we ignore this\n                 }\n \n-                if ( getBundleContext() == null ) {\n-                  System.out.println(\"BundlesServlet.doPost()1\");\n-                  return;\n-                }\n-\n                 // write the state only\n                 resp.setContentType( \"application/json\" ); //$NON-NLS-1$\n                 resp.setCharacterEncoding( \"UTF-8\" ); //$NON-NLS-1$", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3d3889f8150620749fa6981452f18777c0a5bbb8", "parent": "https://github.com/apache/felix/commit/800ec5775975ec9519e0b270f67bfa61fae6affa", "message": "Fixed FELIX-4572 : Web Console may cause NPE on refresh packages\nhttps://issues.apache.org/jira/browse/FELIX-4572\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1612488 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_97", "file": [{"additions": 17, "raw_url": "https://github.com/apache/felix/raw/3d3889f8150620749fa6981452f18777c0a5bbb8/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "blob_url": "https://github.com/apache/felix/blob/3d3889f8150620749fa6981452f18777c0a5bbb8/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "sha": "f4a7a1e6059a09ca9488e1a74181f4bd04a4484e", "changes": 21, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java?ref=3d3889f8150620749fa6981452f18777c0a5bbb8", "patch": "@@ -414,16 +414,29 @@ else if ( \"uninstall\".equals( action ) )\n                     // we ignore this\n                 }\n \n+                if ( getBundleContext() == null ) {\n+                  System.out.println(\"BundlesServlet.doPost()1\");\n+                  return;\n+                }\n+\n                 // write the state only\n                 resp.setContentType( \"application/json\" ); //$NON-NLS-1$\n                 resp.setCharacterEncoding( \"UTF-8\" ); //$NON-NLS-1$\n-                resp.getWriter().print( \"{\\\"fragment\\\":\" + isFragmentBundle( bundle ) // //$NON-NLS-1$\n-                    + \",\\\"stateRaw\\\":\" + bundle.getState() + \"}\" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                if ( null == getBundleContext() )\n+                {\n+                  // refresh package on the web console itself or some of it's dependencies\n+                  resp.getWriter().print(\"false\"); //$NON-NLS-1$\n+                }\n+                else\n+                {\n+                  resp.getWriter().print( \"{\\\"fragment\\\":\" + isFragmentBundle( bundle ) //$NON-NLS-1$\n+                      + \",\\\"stateRaw\\\":\" + bundle.getState() + \"}\" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                }\n                 return;\n             }\n         }\n \n-        if ( success )\n+        if ( success && null != getBundleContext() )\n         {\n             // let's wait a little bit to give the framework time\n             // to process our request\n@@ -448,7 +461,7 @@ else if ( \"uninstall\".equals( action ) )\n             super.doPost( req, resp );\n         }\n     }\n-\n+    \n     private String getServicesRoot(HttpServletRequest request)\n     {\n         return ( ( String ) request.getAttribute( WebConsoleConstants.ATTR_APP_ROOT ) ) +", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9a3fd76339d0ad42212999f99675e6a106c81c9a", "parent": "https://github.com/apache/felix/commit/5aec8f27a624157c7915165013530709eec681e6", "message": "FELIX-4402 avoid some NPEs if for some reason the deleted config is not actually associated with a component manager\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1602637 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_98", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/9a3fd76339d0ad42212999f99675e6a106c81c9a/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurableComponentHolder.java", "blob_url": "https://github.com/apache/felix/blob/9a3fd76339d0ad42212999f99675e6a106c81c9a/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurableComponentHolder.java", "sha": "bc43e41bcf72caef50bbb1608fae53a5a0a39f48", "changes": 17, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurableComponentHolder.java?ref=9a3fd76339d0ad42212999f99675e6a106c81c9a", "patch": "@@ -244,7 +244,7 @@ public void configurationDeleted( final TargetedPID pid, TargetedPID factoryPid\n \t\t\t\t{\n \t\t\t\t\tm_factoryPidIndex = null;\n \t\t\t\t}\n-\t\t\t\tif ( !m_enabled )\n+\t\t\t\tif ( !m_enabled || scm == null )\n \t\t\t\t{\n \t\t\t\t\treturn;\n \t\t\t\t}\n@@ -274,14 +274,13 @@ public void configurationDeleted( final TargetedPID pid, TargetedPID factoryPid\n \n \t\t\t\tif ( m_factoryPidIndex == null)\n \t\t\t\t{\n-\t\t\t\t\tif ( reconfigure)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tscms.put(m_singleComponent, mergeProperties( null ));\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\tscms.put( m_singleComponent, null);\n-\t\t\t\t\t\tm_singleComponent = null;\n+\t\t\t\t\tif ( m_singleComponent != null ) {\n+\t\t\t\t\t\tif (reconfigure) {\n+\t\t\t\t\t\t\tscms.put(m_singleComponent, mergeProperties(null));\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tscms.put(m_singleComponent, null);\n+\t\t\t\t\t\t\tm_singleComponent = null;\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\telse", "filename": "scr/src/main/java/org/apache/felix/scr/impl/config/ConfigurableComponentHolder.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1957dc193859f107f1c53d7ae9633163827f69b9", "parent": "https://github.com/apache/felix/commit/0e376caeb10f19d0cc0cfe9430b35dd712f42ac5", "message": "FELIX-4287 fix NPE when dispose called after bundle stopped, simplify deactivate method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1534395 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_99", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "blob_url": "https://github.com/apache/felix/blob/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java", "sha": "315137c26b9979a9e8a9f3a5334f0300ec6dac3e", "changes": 31, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java?ref=1957dc193859f107f1c53d7ae9633163827f69b9", "patch": "@@ -54,25 +54,25 @@\n public class BundleComponentActivator implements Logger\n {\n     // global component registration\n-    private ComponentRegistry m_componentRegistry;\n+    private final ComponentRegistry m_componentRegistry;\n \n     // The bundle context owning the registered component\n-    private BundleContext m_context = null;\n+    private final BundleContext m_context;\n \n     // This is a list of component instance managers that belong to a particular bundle\n     private List<ComponentHolder> m_managers = new ArrayList<ComponentHolder>();\n \n     // The Configuration Admin tracker providing configuration for components\n-    private ServiceTracker m_logService;\n+    private final ServiceTracker m_logService;\n \n     // thread acting upon configurations\n-    private ComponentActorThread m_componentActor;\n+    private final ComponentActorThread m_componentActor;\n \n     // true as long as the dispose method is not called\n     private boolean m_active;\n \n     // the configuration\n-    private ScrConfiguration m_configuration;\n+    private final ScrConfiguration m_configuration;\n \n \n     /**\n@@ -316,14 +316,15 @@ private void loadDescriptor( final URL descriptorURL )\n     */\n     void dispose( int reason )\n     {\n-        if ( m_context == null )\n+        synchronized ( this )\n         {\n-            return;\n+            if ( !m_active )\n+            {\n+                return;\n+            }\n+            // mark instance inactive (no more component activations)\n+            m_active = false;\n         }\n-\n-        // mark instance inactive (no more component activations)\n-        m_active = false;\n-\n         log( LogService.LOG_DEBUG, \"BundleComponentActivator : Bundle [{0}] will destroy {1} instances\", new Object[]\n             { m_context.getBundle().getBundleId(), m_managers.size() }, null, null, null );\n \n@@ -351,14 +352,8 @@ void dispose( int reason )\n         log( LogService.LOG_DEBUG, \"BundleComponentActivator : Bundle [{0}] STOPPED\", new Object[]\n             {m_context.getBundle().getBundleId()}, null, null, null );\n \n-        if (m_logService != null) {\n-            m_logService.close();\n-            m_logService = null;\n-        }\n+        m_logService.close();\n \n-        m_componentActor = null;\n-        m_componentRegistry = null;\n-        m_context = null;\n     }\n \n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/BundleComponentActivator.java"}, {"additions": 31, "raw_url": "https://github.com/apache/felix/raw/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java", "sha": "a8c895e411eea58dbea25eaf877d496d76abf567", "changes": 72, "status": "modified", "deletions": 41, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java?ref=1957dc193859f107f1c53d7ae9633163827f69b9", "patch": "@@ -513,7 +513,7 @@ public final void disable( final boolean async )\n             enableLatch = enableLatchWait();\n             if ( !async )\n             {\n-                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_DISABLED, true, m_trackingCount.get() );\n+                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_DISABLED, true, false );\n             }\n             disableInternal();\n         }\n@@ -538,7 +538,7 @@ public void run()\n                 {\n                     try\n                     {\n-                        deactivateInternal( ComponentConstants.DEACTIVATION_REASON_DISABLED, true, m_trackingCount.get() );\n+                        deactivateInternal( ComponentConstants.DEACTIVATION_REASON_DISABLED, true, false );\n                     }\n                     finally\n                     {\n@@ -572,8 +572,7 @@ void dispose()\n      */\n     public void dispose( int reason )\n     {\n-        m_disposed = true;\n-        disposeInternal( reason );\n+        deactivateInternal( reason, true, true );\n     }\n     \n     <T> void registerMissingDependency( DependencyManager<S, T> dm, ServiceReference<T> ref, int trackingCount)\n@@ -834,16 +833,22 @@ final void activateInternal( int trackingCount )\n         }\n     }\n \n-    final void deactivateInternal( int reason, boolean disable, int trackingCount )\n+    /**\n+     * Handles deactivating, disabling, and disposing a component manager. Deactivating a factory instance\n+     * always disables and disposes it.  Deactivating a factory disposes it.\n+     * @param reason reason for action\n+     * @param disable whether to also disable the manager\n+     * @param dispose whether to also dispose of the manager\n+     */\n+    final void deactivateInternal( int reason, boolean disable, boolean dispose )\n     {\n-        if ( m_disposed )\n-        {\n-            return;\n-        }\n-        if ( m_factoryInstance )\n+        synchronized ( this )\n         {\n-            disposeInternal( reason );\n-            return;\n+            if ( m_disposed )\n+            {\n+                return;\n+            }\n+            m_disposed = dispose;\n         }\n         log( LogService.LOG_DEBUG, \"Deactivating component\", null );\n \n@@ -852,45 +857,20 @@ final void deactivateInternal( int reason, boolean disable, int trackingCount )\n         obtainActivationReadLock( \"deactivateInternal\" );\n         try\n         {\n-            doDeactivate( reason, disable );\n+            doDeactivate( reason, disable || m_factoryInstance );\n         }\n         finally \n         {\n             releaseActivationReadLock( \"deactivateInternal\" );\n         }\n-        if ( isFactory() )\n+        if ( isFactory() || m_factoryInstance || dispose )\n         {\n+            log( LogService.LOG_DEBUG, \"Disposing component (reason: \" + reason + \")\", null );\n             clear();\n         }\n     }\n \n-    final void disableInternal()\n-    {\n-        m_internalEnabled = false;\n-        if ( m_disposed )\n-        {\n-            throw new IllegalStateException( \"Cannot disable a disposed component \" + getName() );\n-        }\n-        unregisterComponentId();\n-    }\n-\n-    /**\n-     * Disposes off this component deactivating and disabling it first as\n-     * required. After disposing off the component, it may not be used anymore.\n-     * <p>\n-     * This method unlike the other state change methods immediately takes\n-     * action and disposes the component. The reason for this is, that this\n-     * method has to actually complete before other actions like bundle stopping\n-     * may continue.\n-     */\n-    final void disposeInternal( int reason )\n-    {\n-        log( LogService.LOG_DEBUG, \"Disposing component (reason: \" + reason + \")\", null );\n-        doDeactivate( reason, true );\n-        clear();\n-    }\n-         \n-    final void doDeactivate( int reason, boolean disable )\n+    private void doDeactivate( int reason, boolean disable )\n     {\n         try\n         {\n@@ -924,6 +904,16 @@ final void doDeactivate( int reason, boolean disable )\n         }\n     }\n \n+    final void disableInternal()\n+    {\n+        m_internalEnabled = false;\n+        if ( m_disposed )\n+        {\n+            throw new IllegalStateException( \"Cannot disable a disposed component \" + getName() );\n+        }\n+        unregisterComponentId();\n+    }\n+\n     final ServiceReference<S> getServiceReference()\n     {\n         ServiceRegistration<S> reg = getServiceRegistration();", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java"}, {"additions": 3, "raw_url": "https://github.com/apache/felix/raw/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentFactoryImpl.java", "blob_url": "https://github.com/apache/felix/blob/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentFactoryImpl.java", "sha": "c8f20a16357e68240d780ae0936cac746dd26967", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentFactoryImpl.java?ref=1957dc193859f107f1c53d7ae9633163827f69b9", "patch": "@@ -129,7 +129,7 @@ public ComponentInstance newInstance( Dictionary<String, ?> dictionary )\n         if ( instance == null || instance.getInstance() == null )\n         {\n             // activation failed, clean up component manager\n-            cm.disposeInternal( ComponentConstants.DEACTIVATION_REASON_DISPOSED );\n+            cm.dispose( ComponentConstants.DEACTIVATION_REASON_DISPOSED );\n             throw new ComponentException( \"Failed activating component\" );\n         }\n \n@@ -313,7 +313,7 @@ public void configurationDeleted( String pid )\n             if ( ( getState() & STATE_DISPOSED ) == 0 && getComponentMetadata().isConfigurationRequired() )\n             {\n                 log( LogService.LOG_DEBUG, \"Deactivating component factory (required configuration has gone)\", null );\n-                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_CONFIGURATION_DELETED, true, getTrackingCount().get() );\n+                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_CONFIGURATION_DELETED, true, false );\n             }\n         }\n         else\n@@ -381,7 +381,7 @@ public boolean configurationUpdated( String pid, Dictionary<String, Object> conf\n                 {\n                     log( LogService.LOG_DEBUG,\n                             \"Component Factory target filters not satisfied anymore: deactivating\", null );\n-                    deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, getTrackingCount().get() );\n+                    deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                     return false;\n                 }\n             }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentFactoryImpl.java"}, {"additions": 10, "raw_url": "https://github.com/apache/felix/raw/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "f75f41c48cd4e3d66bbff883207329a3fb9c5145", "changes": 20, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=1957dc193859f107f1c53d7ae9633163827f69b9", "patch": "@@ -263,7 +263,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n             {\n                 if (getTracker().isEmpty())\n                 {\n-                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                 }\n             }\n         }\n@@ -362,7 +362,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                 lastRefPair = refPair;\n                 lastRefPairTrackingCount = trackingCount;\n                 tracked( trackingCount );\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                 lastRefPair = null;\n                 m_componentManager.log( LogService.LOG_DEBUG, \"dm {0} tracking {1} MultipleDynamic removed (deactivate) {2}\", new Object[] {getName(), trackingCount, serviceReference}, null );\n             }\n@@ -440,7 +440,7 @@ public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPa\n                 m_componentManager.log( LogService.LOG_DEBUG,\n                         \"Dependency Manager: Static dependency on {0}/{1} is broken\", new Object[]\n                         {getName(), m_dependencyMetadata.getInterface()}, null );\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                 m_componentManager.activateInternal( trackingCount );\n \n             }\n@@ -472,7 +472,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                 m_componentManager.log( LogService.LOG_DEBUG,\n                         \"Dependency Manager: Static dependency on {0}/{1} is broken\", new Object[]\n                         {getName(), m_dependencyMetadata.getInterface()}, null );\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                 //try to reactivate after ref is no longer tracked.\n                 m_componentManager.activateInternal( trackingCount );\n             }\n@@ -481,7 +481,7 @@ else if ( !isOptional() && getTracker().isEmpty() )\n                 m_componentManager.log( LogService.LOG_DEBUG,\n                         \"Dependency Manager: Static dependency on {0}/{1} is broken\", new Object[]\n                         {getName(), m_dependencyMetadata.getInterface()}, null );\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );                \n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );                \n             }\n             //This is unlikely\n             ungetService( refPair );\n@@ -572,7 +572,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                     m_componentManager.log( LogService.LOG_DEBUG,\n                         \"Dependency Manager: Static dependency on {0}/{1} is broken\", new Object[]\n                             { getName(), m_dependencyMetadata.getInterface() }, null );\n-                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n \n                     // FELIX-2368: immediately try to reactivate\n                     m_componentManager.activateInternal( trackingCount );\n@@ -584,7 +584,7 @@ else if ( !isOptional() && getTracker().isEmpty() )\n                 m_componentManager.log( LogService.LOG_DEBUG,\n                         \"Dependency Manager: Static dependency on {0}/{1} is broken\", new Object[]\n                         {getName(), m_dependencyMetadata.getInterface()}, null );\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );                \n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );                \n             }\n             ungetService( refPair );\n             m_componentManager.log( LogService.LOG_DEBUG, \"dm {0} tracking {1} MultipleStaticReluctant removed {2} (exit)\", new Object[] {getName(), trackingCount, serviceReference}, null );\n@@ -792,7 +792,7 @@ else if ( deactivate )\n                 this.trackingCount = trackingCount;\n                 tracked( trackingCount );\n                 untracked = false;\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n             }\n             if ( oldRefPair != null )\n             {\n@@ -894,7 +894,7 @@ public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPa\n                 }\n                 if ( reactivate )\n                 {\n-                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                    m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                     m_componentManager.activateInternal( trackingCount );\n                 }\n                 else \n@@ -942,7 +942,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n             }\n             if ( reactivate )\n             {\n-                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, trackingCount );\n+                m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false, false );\n                 m_componentManager.activateInternal( trackingCount );\n             }\n             m_componentManager.log( LogService.LOG_DEBUG, \"dm {0} tracking {1} SingleStatic removed {2} (exit)\", new Object[] {getName(), trackingCount, serviceReference}, null );", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/1957dc193859f107f1c53d7ae9633163827f69b9/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java", "sha": "dc72b8cc46a0008ef630f31dd5ee331d965a673d", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java?ref=1957dc193859f107f1c53d7ae9633163827f69b9", "patch": "@@ -587,7 +587,7 @@ public void reconfigure( Dictionary<String, Object> configuration, long changeCo\n             if ( configuration == null && getComponentMetadata().isConfigurationRequired() )\n             {\n                 //deactivate and remove service listeners\n-                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_CONFIGURATION_DELETED, true, getTrackingCount().get() );\n+                deactivateInternal( ComponentConstants.DEACTIVATION_REASON_CONFIGURATION_DELETED, true, false );\n                 //do not reset targets as that will reinstall the service listeners which may activate the component.\n                 //when a configuration arrives the properties will get set based on the new configuration.\n                 return;\n@@ -619,7 +619,7 @@ public void reconfigure( Dictionary<String, Object> configuration, long changeCo\n                     //     called through ConfigurationListener API which itself is\n                     //     called asynchronously by the Configuration Admin Service\n                     releaseActivationWriteeLock( \"reconfigure.modified.1\" );;\n-                    deactivateInternal( reason, false, getTrackingCount().get() );\n+                    deactivateInternal( reason, false, false );\n                     obtainActivationWriteLock( \"reconfigure.deactivate.activate\" );\n                     try\n                     {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/SingleComponentManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/33113b30dee87927a9e05090785e3887a23f019f", "parent": "https://github.com/apache/felix/commit/1fdfedc2a6f711ef9d7c2d95a0e72f76585a8e07", "message": "Fix FELIX-4261 NPE when an instance is declared without a configuration using the @ConfigurationTracker\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1528105 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_100", "file": [{"additions": 38, "raw_url": "https://github.com/apache/felix/raw/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/main/java/org/apache/felix/ipojo/runtime/core/components/SimpleConfiguration.java", "blob_url": "https://github.com/apache/felix/blob/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/main/java/org/apache/felix/ipojo/runtime/core/components/SimpleConfiguration.java", "sha": "314fb8c305c6e253ef836152a96f1b97327146ab", "changes": 38, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/main/java/org/apache/felix/ipojo/runtime/core/components/SimpleConfiguration.java?ref=33113b30dee87927a9e05090785e3887a23f019f", "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.felix.ipojo.runtime.core.components;\n+\n+import org.apache.felix.ipojo.configuration.Configuration;\n+import org.apache.felix.ipojo.configuration.Instance;\n+\n+import java.util.Properties;\n+\n+import static org.apache.felix.ipojo.configuration.Instance.instance;\n+\n+/**\n+ * Simple configuration\n+ */\n+@Configuration\n+public class SimpleConfiguration {\n+\n+    // Declare an instance of MyComponent named myInstance\n+    Instance myInstance = instance().of(MyComponent.class)\n+            .named(\"foo\");\n+}", "filename": "ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/main/java/org/apache/felix/ipojo/runtime/core/components/SimpleConfiguration.java"}, {"additions": 77, "raw_url": "https://github.com/apache/felix/raw/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/test/java/org/apache/felix/ipojo/runtime/core/TestSimpleConfiguration.java", "blob_url": "https://github.com/apache/felix/blob/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/test/java/org/apache/felix/ipojo/runtime/core/TestSimpleConfiguration.java", "sha": "1888d9736c4f6f962a2c56390e239fc1509f6114", "changes": 77, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/test/java/org/apache/felix/ipojo/runtime/core/TestSimpleConfiguration.java?ref=33113b30dee87927a9e05090785e3887a23f019f", "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.felix.ipojo.runtime.core;\n+\n+import junit.framework.Assert;\n+import org.apache.felix.ipojo.runtime.core.components.MyComponent;\n+import org.apache.felix.ipojo.runtime.core.components.SimpleConfiguration;\n+import org.apache.felix.ipojo.runtime.core.services.FooService;\n+import org.junit.Test;\n+import org.ops4j.pax.exam.Configuration;\n+import org.ops4j.pax.exam.Option;\n+import org.ops4j.pax.exam.OptionUtils;\n+import org.ops4j.pax.tinybundles.core.TinyBundles;\n+import org.osgi.framework.Constants;\n+import org.ow2.chameleon.testing.helpers.TimeUtils;\n+import org.ow2.chameleon.testing.tinybundles.ipojo.IPOJOStrategy;\n+\n+import java.io.IOException;\n+\n+import static org.ops4j.pax.exam.CoreOptions.streamBundle;\n+import static org.ops4j.pax.tinybundles.core.TinyBundles.withBnd;\n+\n+/**\n+ * Check a simple @Configuration\n+ */\n+public class TestSimpleConfiguration extends Common {\n+\n+    @Configuration\n+    public Option[] config() throws IOException {\n+\n+        Option[] options = super.config();\n+\n+        // Build a service bundle\n+        return OptionUtils.combine(options,\n+                streamBundle(\n+                        TinyBundles.bundle()\n+                                .add(FooService.class)\n+                                .set(Constants.BUNDLE_SYMBOLICNAME, \"ServiceInterface\")\n+                                .set(Constants.EXPORT_PACKAGE, \"org.apache.felix.ipojo.runtime.core.services\")\n+                                .build(withBnd())\n+                ),\n+                streamBundle(\n+                        TinyBundles.bundle()\n+                                .add(MyComponent.class)\n+                                .add(SimpleConfiguration.class)\n+                                .set(Constants.BUNDLE_SYMBOLICNAME, \"MyComponent\")\n+                                .build(IPOJOStrategy.withiPOJO())\n+                )\n+        );\n+    }\n+\n+    @Test\n+    public void testConfiguration() throws InterruptedException {\n+        TimeUtils.grace(1000);\n+        // Check configuration\n+        Assert.assertNotNull(osgiHelper.getServiceReference(FooService.class));\n+    }\n+\n+\n+}", "filename": "ipojo/runtime/core-it/ipojo-core-configuration-processor-test/src/test/java/org/apache/felix/ipojo/runtime/core/TestSimpleConfiguration.java"}, {"additions": 4, "raw_url": "https://github.com/apache/felix/raw/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/configuration/Instance.java", "blob_url": "https://github.com/apache/felix/blob/33113b30dee87927a9e05090785e3887a23f019f/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/configuration/Instance.java", "sha": "bda9f4f5ccca6619500d8e946c590da36af8860b", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/configuration/Instance.java?ref=33113b30dee87927a9e05090785e3887a23f019f", "patch": "@@ -62,8 +62,10 @@ public String name() {\n \n     public Dictionary<String, Object> configuration() {\n         Hashtable<String, Object> configuration = new Hashtable<String, Object>();\n-        for (Property property : this.configuration) {\n-            configuration.put(property.name, property.value);\n+        if (this.configuration != null) {\n+            for (Property property : this.configuration) {\n+                configuration.put(property.name, property.value);\n+            }\n         }\n \n         if (name != null) {", "filename": "ipojo/runtime/core/src/main/java/org/apache/felix/ipojo/configuration/Instance.java"}], "repo": "felix"}]
[{"commit": "https://github.com/apache/felix/commit/e1f2842590e35f6487b27542d4fe17f4b4741c0e", "parent": "https://github.com/apache/felix/commit/31c7c9b5ee07de85bf554f2086113c7e1d63f55e", "message": "FELIX-4192 : SCR Generator fails with a NPE in case a class level Reference doesn't define a referenceInterface\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1512947 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_101", "file": [{"additions": 22, "raw_url": "https://github.com/apache/felix/raw/e1f2842590e35f6487b27542d4fe17f4b4741c0e/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/SCRDescriptorGenerator.java", "blob_url": "https://github.com/apache/felix/blob/e1f2842590e35f6487b27542d4fe17f4b4741c0e/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/SCRDescriptorGenerator.java", "sha": "487f217c768a84d55620e2617e452947c3c784d7", "changes": 37, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/SCRDescriptorGenerator.java?ref=e1f2842590e35f6487b27542d4fe17f4b4741c0e", "patch": "@@ -232,6 +232,11 @@ public Result execute() throws SCRDescriptorException, SCRDescriptorFailureExcep\n \n     private void generateMethods(final ComponentContainer container) throws SCRDescriptorException {\n         for (final ReferenceDescription ref : container.getReferences().values()) {\n+            // skip refs without a interface name (validate will be called next)\n+            if (StringUtils.isEmpty(ref.getInterfaceName())) {\n+                continue;\n+            }\n+\n             // if this is a field with a single cardinality,\n             // we look for the bind/unbind methods\n             // and create them if they are not availabe\n@@ -642,24 +647,26 @@ private void processReferences(final ClassDescription current,\n \n             this.testReference(current, component.getReferences(), rd, component.getClassDescription() == current);\n \n-            // check for method signature\n-            try {\n-                final Validator.MethodResult bindMethod = Validator.findMethod(this.project, this.options, current, rd,\n-                        rd.getBind() == null ? \"bind\" : rd.getBind());\n-                if ( bindMethod != null ) {\n-                    component.getComponentDescription().setSpecVersion(bindMethod.requiredSpecVersion);\n-                }\n+            // check for method signature - if interface name is set (empty interface name will fail during validate)\n+            if (!StringUtils.isEmpty(rd.getInterfaceName())) {\n \n-                final Validator.MethodResult unbindMethod = Validator.findMethod(this.project, this.options, current, rd,\n-                        rd.getUnbind() == null ? \"unbind\" : rd.getUnbind());\n-                if ( unbindMethod != null ) {\n-                    component.getComponentDescription().setSpecVersion(unbindMethod.requiredSpecVersion);\n-                }\n+                try {\n+                    final Validator.MethodResult bindMethod = Validator.findMethod(this.project, this.options, current, rd,\n+                            rd.getBind() == null ? \"bind\" : rd.getBind());\n+                    if ( bindMethod != null ) {\n+                        component.getComponentDescription().setSpecVersion(bindMethod.requiredSpecVersion);\n+                    }\n \n-            } catch (final SCRDescriptorException sde) {\n-                // this happens only if a class not found exception occurs, so we can ignore this at this point!\n-            }\n+                    final Validator.MethodResult unbindMethod = Validator.findMethod(this.project, this.options, current, rd,\n+                            rd.getUnbind() == null ? \"unbind\" : rd.getUnbind());\n+                    if ( unbindMethod != null ) {\n+                        component.getComponentDescription().setSpecVersion(unbindMethod.requiredSpecVersion);\n+                    }\n \n+                } catch (final SCRDescriptorException sde) {\n+                    // this happens only if a class not found exception occurs, so we can ignore this at this point!\n+                }\n+            }\n         }\n     }\n ", "filename": "scrplugin/generator/src/main/java/org/apache/felix/scrplugin/SCRDescriptorGenerator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a7a1b923d6bae9b6c8571f1db8046a368860fcbf", "parent": "https://github.com/apache/felix/commit/52288deca421fade76069a7043ef424a24021bce", "message": "FELIX-3651 hopefully temporary use of snapshot ca to avoid NPE in permission check\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1480107 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_102", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/a7a1b923d6bae9b6c8571f1db8046a368860fcbf/scr/pom.xml", "blob_url": "https://github.com/apache/felix/blob/a7a1b923d6bae9b6c8571f1db8046a368860fcbf/scr/pom.xml", "sha": "c3bdb3153014a328d77951768512f3d1e6871c9a", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/pom.xml?ref=a7a1b923d6bae9b6c8571f1db8046a368860fcbf", "patch": "@@ -472,7 +472,7 @@\n             <!--  remember you need to specify all profiles using this, e.g. -PcaR5,felix -->\n             <id>caR5</id>\n             <properties>\n-                <felix.ca.version>1.6.0</felix.ca.version>\n+                <felix.ca.version>1.6.1-SNAPSHOT</felix.ca.version>\n             </properties>\n         </profile>\n     </profiles>", "filename": "scr/pom.xml"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ffcef3290a905d0eaab868277817122b93084edf", "parent": "https://github.com/apache/felix/commit/8eb4ed9260a809ad1294396b2e604fe211965332", "message": "FELIX-4011 fix a lot of potential NPEs during bundle shutdown when BundleComponentActivator and BundleContext may not be available\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1465203 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_103", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/pom.xml", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/pom.xml", "sha": "d971a7bc9c78a24bcba1f55228b152d94b7262d1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/pom.xml?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -205,7 +205,7 @@\n \t\t<dependency>\n \t\t\t<groupId>org.codehaus.mojo</groupId>\n \t\t\t<artifactId>animal-sniffer-annotations</artifactId>\n-\t\t\t<version>1.10-SNAPSHOT</version>\n+\t\t\t<version>1.9</version>\n \t\t\t<scope>compile</scope>\n \t\t</dependency>\n     </dependencies>", "filename": "scr/pom.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/config/ScrConfiguration.java", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/config/ScrConfiguration.java", "sha": "3318c46c4718bd9f82635a9599b4f25a2acaa5d6", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/config/ScrConfiguration.java?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -66,6 +66,8 @@\n     \n     public static final String PROP_LOCK_TIMEOUT = \"ds.lock.timeout.milliseconds\";\n     \n+    public static final long DEFAULT_LOCK_TIMEOUT_MILLISECONDS = 5000;\n+    \n     public static final String PROP_LOGLEVEL = \"ds.loglevel\";\n \n     private static final String LOG_LEVEL_DEBUG = \"debug\";\n@@ -88,7 +90,7 @@\n     \n     private boolean infoAsService;\n     \n-    private long lockTimeout = 5000;//milliseconds\n+    private long lockTimeout = DEFAULT_LOCK_TIMEOUT_MILLISECONDS;\n \n     private BundleContext bundleContext;\n \n@@ -143,7 +145,7 @@ void configure( Dictionary config )\n                 factoryEnabled = false;\n                 keepInstances = false;\n                 infoAsService = false;\n-                lockTimeout = 5000;\n+                lockTimeout = DEFAULT_LOCK_TIMEOUT_MILLISECONDS;\n             }\n             else\n             {\n@@ -161,7 +163,7 @@ void configure( Dictionary config )\n             keepInstances = VALUE_TRUE.equalsIgnoreCase( String.valueOf( config.get( PROP_DELAYED_KEEP_INSTANCES ) ) );\n             infoAsService = VALUE_TRUE.equalsIgnoreCase( String.valueOf( config.get( PROP_INFO_SERVICE) ) );\n             Long timeout = ( Long ) config.get( PROP_LOCK_TIMEOUT );\n-            lockTimeout = timeout == null? 5000: timeout;\n+            lockTimeout = timeout == null? DEFAULT_LOCK_TIMEOUT_MILLISECONDS: timeout;\n         }\n         if ( scrCommand != null )\n         {\n@@ -227,7 +229,7 @@ private long getDefaultLockTimeout()\n         String val = bundleContext.getProperty( PROP_LOCK_TIMEOUT);\n         if ( val == null)\n         {\n-            return 5000;\n+            return DEFAULT_LOCK_TIMEOUT_MILLISECONDS;\n         }\n         return Long.parseLong( val );\n     }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/config/ScrConfiguration.java"}, {"additions": 47, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java", "sha": "519023f9e741367b5737c8824079e4ee40071883", "changes": 63, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -41,6 +41,7 @@\n import org.apache.felix.scr.Component;\n import org.apache.felix.scr.Reference;\n import org.apache.felix.scr.impl.BundleComponentActivator;\n+import org.apache.felix.scr.impl.config.ScrConfiguration;\n import org.apache.felix.scr.impl.helper.ComponentMethods;\n import org.apache.felix.scr.impl.helper.MethodResult;\n import org.apache.felix.scr.impl.helper.SimpleLogger;\n@@ -192,7 +193,12 @@ final void obtainWriteLock( String source )\n \n     private long getLockTimeout()\n     {\n-        return getActivator().getConfiguration().lockTimeout();\n+        BundleComponentActivator activator = getActivator();\n+        if ( activator != null )\n+        {\n+            return activator.getConfiguration().lockTimeout();\n+        }\n+        return ScrConfiguration.DEFAULT_LOCK_TIMEOUT_MILLISECONDS;\n     }\n \n     final void releaseWriteLock( String source )\n@@ -490,6 +496,15 @@ public void dispose( int reason )\n         disposed = true;\n         disposeInternal( reason );\n     }\n+    \n+    <T> void registerMissingDependency( DependencyManager<S, T> dm, ServiceReference<T> ref, int trackingCount)\n+    {\n+        BundleComponentActivator activator = getActivator();\n+        if ( activator != null )\n+        {\n+            activator.registerMissingDependency( dm, ref, trackingCount );\n+        }\n+    }\n \n     //---------- Component interface ------------------------------------------\n \n@@ -509,26 +524,31 @@ public String getName() {\n      */\n     public Bundle getBundle()\n     {\n-        final BundleComponentActivator activator = getActivator();\n-        if ( activator != null )\n+        final BundleContext context = getBundleContext();\n+        if ( context != null )\n         {\n-            final BundleContext context = activator.getBundleContext();\n-            if ( context != null )\n+            try\n             {\n-                try\n-                {\n-                    return context.getBundle();\n-                }\n-                catch ( IllegalStateException ise )\n-                {\n-                    // if the bundle context is not valid any more\n-                }\n+                return context.getBundle();\n+            }\n+            catch ( IllegalStateException ise )\n+            {\n+                // if the bundle context is not valid any more\n             }\n         }\n-\n         // already disposed off component or bundle context is invalid\n         return null;\n     }\n+    \n+    BundleContext getBundleContext()\n+    {\n+        final BundleComponentActivator activator = getActivator();\n+        if ( activator != null )\n+        {\n+            return activator.getBundleContext();\n+        }\n+        return null;        \n+    }\n \n \n     public String getClassName()\n@@ -728,8 +748,13 @@ ComponentMethods getComponentMethods()\n         @Override\n         ServiceRegistration<S> register(String[] services)\n         {\n+            BundleContext bundleContext = getBundleContext();\n+            if (bundleContext == null) \n+            {\n+                return null;\n+            }\n             final Dictionary<String, Object> serviceProperties = getServiceProperties();\n-            ServiceRegistration<S> serviceRegistration = ( ServiceRegistration<S> ) getActivator().getBundleContext()\n+            ServiceRegistration<S> serviceRegistration = ( ServiceRegistration<S> ) bundleContext\n                     .registerService( services, getService(), serviceProperties );\n             return serviceRegistration;\n         }\n@@ -792,10 +817,16 @@ boolean initDependencyManagers()\n         {\n             return true;\n         }\n+        final Bundle bundle = getBundle();\n+        if (bundle == null)\n+        {\n+            log( LogService.LOG_ERROR, \"bundle shut down while trying to load implementation object class\", null );\n+            return false;\n+        }\n         Class<?> implementationObjectClass;\n         try\n         {\n-            implementationObjectClass = getActivator().getBundleContext().getBundle().loadClass(\n+            implementationObjectClass = bundle.loadClass(\n                     getComponentMetadata().getImplementationClassName() );\n         }\n         catch ( ClassNotFoundException e )", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java"}, {"additions": 12, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentContextImpl.java", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentContextImpl.java", "sha": "58dd8062894b88f98f0c7e4b57c5b61b1e7aa88a", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentContextImpl.java?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -23,6 +23,7 @@\n import java.util.Dictionary;\n \n import org.apache.felix.scr.component.ExtComponentContext;\n+import org.apache.felix.scr.impl.BundleComponentActivator;\n import org.apache.felix.scr.impl.helper.ReadOnlyDictionary;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n@@ -112,7 +113,7 @@ public Object locateService( String name, ServiceReference ref )\n \n     public BundleContext getBundleContext()\n     {\n-        return m_componentManager.getActivator().getBundleContext();\n+        return m_componentManager.getBundleContext();\n     }\n \n \n@@ -130,13 +131,21 @@ public ComponentInstance getComponentInstance()\n \n     public void enableComponent( String name )\n     {\n-        m_componentManager.getActivator().enableComponent( name );\n+        BundleComponentActivator activator = m_componentManager.getActivator();\n+        if ( activator != null )\n+        {\n+            activator.enableComponent( name );\n+        }\n     }\n \n \n     public void disableComponent( String name )\n     {\n-        m_componentManager.getActivator().disableComponent( name );\n+        BundleComponentActivator activator = m_componentManager.getActivator();\n+        if ( activator != null )\n+        {\n+            activator.disableComponent( name );\n+        }\n     }\n \n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ComponentContextImpl.java"}, {"additions": 61, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "92398a7dfdc23b4c649bbd2a7ef354aebd1a959d", "changes": 85, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -38,6 +38,7 @@\n import org.apache.felix.scr.Component;\n import org.apache.felix.scr.Reference;\n import org.apache.felix.scr.impl.BundleComponentActivator;\n+import org.apache.felix.scr.impl.helper.BindMethod;\n import org.apache.felix.scr.impl.helper.BindMethods;\n import org.apache.felix.scr.impl.helper.MethodResult;\n import org.apache.felix.scr.impl.metadata.ReferenceMetadata;\n@@ -214,7 +215,11 @@ protected void ungetService( RefPair<T> ref )\n                 if ( ref.getServiceObject() != null )\n                 {\n                     ref.setServiceObject( null );\n-                    m_componentManager.getActivator().getBundleContext().ungetService( ref.getRef() );\n+                    BundleContext bundleContext = m_componentManager.getBundleContext();\n+                    if ( bundleContext != null )\n+                    {\n+                        bundleContext.ungetService( ref.getRef() );\n+                    }\n                 }\n             }\n         }\n@@ -291,7 +296,7 @@ public void close()\n             }\n             if (isActive())\n             {\n-                 m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                 getServiceObject( m_bindMethods.getBind(), refPair );\n             }\n             return refPair;\n         }\n@@ -309,7 +314,7 @@ public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPa\n                         m_componentManager.invokeBindMethod( DependencyManager.this, refPair, trackingCount );\n                     }\n                     else {\n-                        m_componentManager.getActivator().registerMissingDependency( DependencyManager.this, serviceReference, trackingCount );\n+                        m_componentManager.registerMissingDependency( DependencyManager.this, serviceReference, trackingCount );\n                     }\n                 }\n                 else if ( isTrackerOpened() && !isOptional() )\n@@ -376,13 +381,13 @@ public boolean open()\n             {\n                 synchronized (refPair)\n                 {\n-                    if (m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager ))\n+                    if (getServiceObject( m_bindMethods.getBind(), refPair ))\n                     {\n                          success = true;\n                     }\n                     else\n                     {\n-                         m_componentManager.getActivator().registerMissingDependency( DependencyManager.this, refPair.getRef(), trackingCount.get() );\n+                         m_componentManager.registerMissingDependency( DependencyManager.this, refPair.getRef(), trackingCount.get() );\n                     }\n                 }\n             }\n@@ -427,7 +432,7 @@ public void close()\n             RefPair<T> refPair = new RefPair<T>( serviceReference  );\n             if (isActive())\n             {\n-                 m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                 getServiceObject( m_bindMethods.getBind(), refPair );\n             }\n             return refPair;\n         }\n@@ -491,7 +496,7 @@ public boolean open()\n             {\n                 synchronized (refPair)\n                 {\n-                    success |= m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                    success |= getServiceObject( m_bindMethods.getBind(), refPair );\n                 }\n             }\n             return success;\n@@ -584,7 +589,7 @@ public boolean open()\n                 {\n                     synchronized (refPair)\n                     {\n-                        success |= m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                        success |= getServiceObject( m_bindMethods.getBind(), refPair );\n                     }\n                 }\n                 return success;\n@@ -596,7 +601,7 @@ public boolean open()\n             {\n                 synchronized (refPair)\n                 {\n-                    success |= m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                    success |= getServiceObject( m_bindMethods.getBind(), refPair );\n                 }\n                 refs.add(refPair) ;\n             }\n@@ -665,7 +670,7 @@ public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPa\n                     {\n                         synchronized ( refPair )\n                         {\n-                            m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                            getServiceObject( m_bindMethods.getBind(), refPair );\n                         }\n                         if ( !refPair.isFailed() )\n                         {\n@@ -678,7 +683,7 @@ public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPa\n                         }\n                         else\n                         {\n-                            m_componentManager.getActivator().registerMissingDependency( DependencyManager.this, serviceReference, trackingCount );\n+                            m_componentManager.registerMissingDependency( DependencyManager.this, serviceReference, trackingCount );\n                         }\n                         this.refPair = refPair;\n                     }\n@@ -725,7 +730,7 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                         nextRefPair = tracked.values().iterator().next();\n                         synchronized ( nextRefPair )\n                         {\n-                            if (!m_bindMethods.getBind().getServiceObject( nextRefPair, m_componentManager.getActivator().getBundleContext(), m_componentManager ))\n+                            if (!getServiceObject( m_bindMethods.getBind(), nextRefPair ))\n                             {\n                                 //TODO error???\n                             }\n@@ -780,11 +785,11 @@ public boolean open()\n                     RefPair<T> refPair = tracked.values().iterator().next();\n                     synchronized ( refPair )\n                     {\n-                        success |= m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                        success |= getServiceObject( m_bindMethods.getBind(), refPair );\n                     }\n                     if (refPair.isFailed())\n                     {\n-                        m_componentManager.getActivator().registerMissingDependency( DependencyManager.this, refPair.getRef(), trackingCount.get() );\n+                        m_componentManager.registerMissingDependency( DependencyManager.this, refPair.getRef(), trackingCount.get() );\n                     }\n                     this.refPair = refPair;\n                 }\n@@ -891,7 +896,7 @@ public boolean open()\n                     RefPair<T> refPair = tracked.values().iterator().next();\n                     synchronized ( refPair )\n                     {\n-                        success |= m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+                        success |= getServiceObject( m_bindMethods.getBind(), refPair );\n                     }\n                     this.refPair = refPair;\n                 }\n@@ -1225,9 +1230,17 @@ private T getService( RefPair<T> refPair )\n         }\n         T serviceObject;\n         // otherwise acquire the service\n+        final BundleContext bundleContext = m_componentManager.getBundleContext();\n+        if (bundleContext == null)\n+        {\n+            m_componentManager.log( LogService.LOG_ERROR, \"Bundle shut down while getting service {0} ({1}/{2,number,#})\", new Object[]\n+                    { getName(), m_dependencyMetadata.getInterface(),\n+                        refPair.getRef().getProperty( Constants.SERVICE_ID ) }, null );\n+                return null;\n+        }\n         try\n         {\n-            serviceObject = m_componentManager.getActivator().getBundleContext().getService( refPair.getRef() );\n+            serviceObject = bundleContext.getService( refPair.getRef() );\n         }\n         catch ( Exception e )\n         {\n@@ -1427,7 +1440,7 @@ public void invokeBindMethodLate( final ServiceReference<T> ref, int trackingCou\n                 //something else got the reference and may be binding it.\n                 return;\n             }\n-            m_bindMethods.getBind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager );\n+            getServiceObject( m_bindMethods.getBind(), refPair );\n         }\n         m_componentManager.invokeBindMethod( this, refPair, trackingCount );\n     }\n@@ -1526,7 +1539,7 @@ void invokeUpdatedMethod( S componentInstance, final RefPair<T> refPair, int tra\n                     return;\n                 }\n             }\n-            if ( !m_bindMethods.getUpdated().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager ))\n+            if ( !getServiceObject( m_bindMethods.getUpdated(), refPair ))\n             {\n                 m_componentManager.log( LogService.LOG_WARNING,\n                         \"DependencyManager : invokeUpdatedMethod : Service not available from service registry for ServiceReference {0} for reference {1}\",\n@@ -1598,7 +1611,7 @@ void invokeUnbindMethod( S componentInstance, final RefPair<T> refPair, int trac\n                         \"DependencyManager : invokeUnbindMethod : Component set, but reference not present\", null );\n                 return;\n             }\n-            if ( !m_bindMethods.getUnbind().getServiceObject( refPair, m_componentManager.getActivator().getBundleContext(), m_componentManager ))\n+            if ( !getServiceObject( m_bindMethods.getUnbind(), refPair ))\n             {\n                 m_componentManager.log( LogService.LOG_WARNING,\n                         \"DependencyManager : invokeUnbindMethod : Service not available from service registry for ServiceReference {0} for reference {1}\",\n@@ -1764,29 +1777,39 @@ private void setTargetFilter( String target) throws InvalidSyntaxException\n         }\n         m_componentManager.log( LogService.LOG_DEBUG, \"Setting target property for dependency {0} to {1}\", new Object[]\n                 {getName(), target}, null );\n+        BundleContext bundleContext = m_componentManager.getBundleContext();\n+        if ( bundleContext != null )\n+        {\n         try\n         {\n-            m_targetFilter = m_componentManager.getActivator().getBundleContext().createFilter( filterString );\n+                m_targetFilter = bundleContext.createFilter( filterString );\n         }\n         catch ( InvalidSyntaxException ise )\n         {\n             m_componentManager.log( LogService.LOG_ERROR, \"Invalid syntax in target property for dependency {0} to {1}\", new Object[]\n                     {getName(), target}, null );\n             // TODO this is an error, how do we recover?\n-            m_targetFilter = null;\n+            return; //avoid an NPE\n+        }\n+        }\n+        else\n+        {\n+            m_componentManager.log( LogService.LOG_ERROR, \"Bundle is shut down for dependency {0} to {1}\", new Object[]\n+                    {getName(), target}, null );\n+            return;                \n         }\n \n-        registerServiceListener( refMap );\n+        registerServiceListener( bundleContext, refMap );\n     }\n \n-    private void registerServiceListener( SortedMap<ServiceReference<T>, RefPair<T>> refMap ) throws InvalidSyntaxException\n+    private void registerServiceListener( BundleContext bundleContext, SortedMap<ServiceReference<T>, RefPair<T>> refMap ) throws InvalidSyntaxException\n     {\n         final ServiceTracker<T, RefPair<T>> oldTracker = trackerRef.get();\n         customizer.setPreviousRefMap( refMap );\n         boolean initialActive = oldTracker != null && oldTracker.isActive();\n         m_componentManager.log( LogService.LOG_INFO, \"New service tracker for {0}, initial active: {1}\", new Object[]\n                 {getName(), initialActive}, null );\n-        ServiceTracker<T, RefPair<T>> tracker = new ServiceTracker<T, RefPair<T>>( m_componentManager.getActivator().getBundleContext(), m_targetFilter, customizer, initialActive );\n+        ServiceTracker<T, RefPair<T>> tracker = new ServiceTracker<T, RefPair<T>>( bundleContext, m_targetFilter, customizer, initialActive );\n         customizer.setTracker( tracker );\n         registered = true;\n         tracker.open( m_componentManager.getTrackingCount() );\n@@ -1882,4 +1905,18 @@ public String toString()\n     {\n         return \"DependencyManager: Component [\" + m_componentManager + \"] reference [\" + getName() + \"]\";\n     }\n+\n+    boolean getServiceObject(BindMethod bindMethod, RefPair<T> refPair)\n+    {\n+        BundleContext bundleContext = m_componentManager.getBundleContext();\n+        if ( bundleContext != null )\n+        {\n+            return bindMethod.getServiceObject( refPair, bundleContext, m_componentManager );\n+        }\n+        else \n+        {\n+            refPair.setFailed();\n+            return false;\n+        }\n+    }\n }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}, {"additions": 18, "raw_url": "https://github.com/apache/felix/raw/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/ImmediateComponentManager.java", "blob_url": "https://github.com/apache/felix/blob/ffcef3290a905d0eaab868277817122b93084edf/scr/src/main/java/org/apache/felix/scr/impl/manager/ImmediateComponentManager.java", "sha": "0c17fd5e3f2a1406faa06ffe62713faf575560d8", "changes": 21, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ImmediateComponentManager.java?ref=ffcef3290a905d0eaab868277817122b93084edf", "patch": "@@ -136,7 +136,11 @@ public void resetImplementationObject( S implementationObject )\n             log( LogService.LOG_DEBUG, \"Set implementation object for component {0}\", new Object[] { getName() },  null );\n \n             //notify that component was successfully created so any optional circular dependencies can be retried\n-            getActivator().missingServicePresent( getServiceReference() );\n+            BundleComponentActivator activator = getActivator();\n+            if ( activator != null )\n+            {\n+                activator.missingServicePresent( getServiceReference() );\n+            }\n         }\n         return true;\n     }\n@@ -216,10 +220,16 @@ protected S createImplementationObject( Bundle usingBundle, SetImplementationObj\n         // 1. Load the component implementation class\n         // 2. Create the component instance and component context\n         // If the component is not immediate, this is not done at this moment\n+        Bundle bundle = getBundle();\n+        if (bundle == null)\n+        {\n+            log( LogService.LOG_WARNING, \"Bundle shut down during instantiation of the implementation object\", null);\n+            return null;\n+        }\n         try\n         {\n             // 112.4.4 The class is retrieved with the loadClass method of the component's bundle\n-            implementationObjectClass = (Class<S>) getActivator().getBundleContext().getBundle().loadClass(\n+            implementationObjectClass = (Class<S>) bundle.loadClass(\n                     getComponentMetadata().getImplementationClassName() )  ;\n \n             // 112.4.4 The class must be public and have a public constructor without arguments so component instances\n@@ -754,7 +764,7 @@ public void ungetService( Bundle bundle, ServiceRegistration<S> serviceRegistrat\n             // unget the service instance if no bundle is using it\n             // any longer unless delayed component instances have to\n             // be kept (FELIX-3039)\n-            if ( useCount == 0 && !isImmediate() && !getActivator().getConfiguration().keepInstances() )\n+            if ( useCount == 0 && !isImmediate() && !keepInstances() )\n             {\n                 obtainWriteLock( \"ImmediateComponentManager.ungetService.1\" );\n                 try\n@@ -773,6 +783,11 @@ public void ungetService( Bundle bundle, ServiceRegistration<S> serviceRegistrat\n         }\n     }\n \n+    private boolean keepInstances()\n+    {\n+        return getActivator() != null && getActivator().getConfiguration().keepInstances();\n+    }\n+\n     public long getChangeCount()\n     {\n         return m_changeCount;", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ImmediateComponentManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/087c0ea8696c49df7fbadd3cb6fc6d90718de075", "parent": "https://github.com/apache/felix/commit/51dc877a678ef327a595c98e2e9397bd9e0e5cd2", "message": "Apply patch (FELIX-4008) to avoid NPE when converting blame to string.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1464569 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_104", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/087c0ea8696c49df7fbadd3cb6fc6d90718de075/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "blob_url": "https://github.com/apache/felix/blob/087c0ea8696c49df7fbadd3cb6fc6d90718de075/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java", "sha": "0f2caa0a31e698131e801892944aa2a793a37ed7", "changes": 18, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java?ref=087c0ea8696c49df7fbadd3cb6fc6d90718de075", "patch": "@@ -2007,8 +2007,20 @@ private static String toStringBlame(\n                         allCandidates,\n                         blame.m_reqs.get(i));\n                     sb.append(export.getNamespace());\n-                    sb.append(\"=\");\n-                    sb.append(export.getAttributes().get(export.getNamespace()).toString());\n+                    sb.append(\": \");\n+                    Object namespaceVal = export.getAttributes().get(export.getNamespace());\n+                    if (namespaceVal != null)\n+                    {\n+                        sb.append(namespaceVal.toString());\n+                    }\n+                    else\n+                    {\n+                        for (Entry<String, Object> attrEntry : export.getAttributes().entrySet())\n+                        {\n+                            sb.append(attrEntry.getKey()).append('=')\n+                                .append(attrEntry.getValue()).append(';');\n+                        }\n+                    }\n                     if (export.getNamespace().equals(PackageNamespace.PACKAGE_NAMESPACE)\n                         && !export.getAttributes().get(PackageNamespace.PACKAGE_NAMESPACE)\n                         .equals(blame.m_cap.getAttributes().get(\n@@ -2193,4 +2205,4 @@ public String toString()\n             return m_blames.toString();\n         }\n     }\n-}\n\\ No newline at end of file\n+}", "filename": "resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/5877b021cb6dd7e7e8800ab3ff5745ab1eaa0e9a", "parent": "https://github.com/apache/felix/commit/5abf4ff9a2380579b73c3bd13bf4f8f1a504d6e3", "message": "FELIX-3971 fix another NPE from ScrInfo when components are not active\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1458393 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_105", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/5877b021cb6dd7e7e8800ab3ff5745ab1eaa0e9a/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/5877b021cb6dd7e7e8800ab3ff5745ab1eaa0e9a/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "e0035b0b2909b20b95b0e3566bac42f8487fc12a", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=5877b021cb6dd7e7e8800ab3ff5745ab1eaa0e9a", "patch": "@@ -180,7 +180,12 @@ public void setTracker( ServiceTracker<T, RefPair<T>> tracker )\n \n         public boolean isSatisfied()\n         {\n-            return isOptional() || !getTracker().isEmpty();\n+            if (isOptional())\n+            {\n+                return true;\n+            }            \n+            ServiceTracker<T, RefPair<T>> tracker = getTracker();\n+            return !(tracker == null) && !tracker.isEmpty();\n         }\n \n         protected ServiceTracker<T, RefPair<T>> getTracker()", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f470a86d6c75f15cc19a577df3e5fa4494e60a3f", "parent": "https://github.com/apache/felix/commit/3e6d8395954afedc3c670f76c26d3bc3cbaf68ed", "message": "FELIX-3971 fix some NPEs from ScrInfo when components are not active\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1458174 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_106", "file": [{"additions": 11, "raw_url": "https://github.com/apache/felix/raw/f470a86d6c75f15cc19a577df3e5fa4494e60a3f/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/f470a86d6c75f15cc19a577df3e5fa4494e60a3f/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "3671050b29066259d5a1327a24759f7267964bac", "changes": 13, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=f470a86d6c75f15cc19a577df3e5fa4494e60a3f", "patch": "@@ -422,6 +422,11 @@ public void close()\n         {\n             if ( lastRefPair == null )\n             {\n+                ServiceTracker<T, RefPair<T>> tracker = getTracker();\n+                if (tracker == null) {\n+                    trackingCount.set( lastRefPairTrackingCount );\n+                    return Collections.emptyList();                    \n+                }\n                 return getTracker().getTracked( true, trackingCount ).values();\n             }\n             else\n@@ -522,7 +527,11 @@ public void close()\n \n         public Collection<RefPair<T>> getRefs( AtomicInteger trackingCount )\n         {\n-            return getTracker().getTracked( null, trackingCount ).values();\n+            ServiceTracker<T, RefPair<T>> tracker = getTracker();\n+            if (tracker == null) {\n+                return Collections.emptyList();                    \n+            }            \n+            return tracker.getTracked( null, trackingCount ).values();\n         }\n     }\n \n@@ -901,7 +910,7 @@ public void close()\n \n         public Collection<RefPair<T>> getRefs( AtomicInteger trackingCount )\n         {\n-            return null;\n+            return Collections.emptyList();\n         }\n \n         public boolean isSatisfied()", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/336e3f7bc14abcff984a14f379e15f67b1a78c1b", "parent": "https://github.com/apache/felix/commit/d25944cf20b46917b5e3c3bc90ccd1de511216c1", "message": "FELIX-3917 :  Potential NPE if bind/unbind method can't be found during validation \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1449672 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_107", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/336e3f7bc14abcff984a14f379e15f67b1a78c1b/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java", "blob_url": "https://github.com/apache/felix/blob/336e3f7bc14abcff984a14f379e15f67b1a78c1b/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java", "sha": "529e2801d156dbd0b4e6c79b79bbf398a28c4ff1", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java?ref=336e3f7bc14abcff984a14f379e15f67b1a78c1b", "patch": "@@ -608,6 +608,9 @@ public static MethodResult findMethod(final Project project,\n                 }\n             }\n \n+            if ( method == null ) {\n+                return null;\n+            }\n             final MethodResult result = new MethodResult();\n             result.method = method;\n             result.requiredSpecVersion = requiredVersion;", "filename": "scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8c13cef5f7522f81cd54c5a0db641be12c49baf8", "parent": "https://github.com/apache/felix/commit/0edce2ff63dc01bbde4f0480e027b1e8fabd4413", "message": "FELIX-3729 Fix NPE in isSatisfied.  Start setting up using trackingCount to track how much work is done when deactivating a component instance\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1424309 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_108", "file": [{"additions": 89, "raw_url": "https://github.com/apache/felix/raw/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "de7403be4eed8fa74f0e2dc71a8556a5a6f8ad15", "changes": 126, "status": "modified", "deletions": 37, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=8c13cef5f7522f81cd54c5a0db641be12c49baf8", "patch": "@@ -24,8 +24,10 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Dictionary;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.SortedMap;\n import java.util.TreeMap;\n import java.util.concurrent.atomic.AtomicInteger;\n@@ -137,6 +139,12 @@ void initBindingMethods(BindMethods bindMethods)\n \n         private volatile Map<ServiceReference<T>, RefPair<T>> previousRefMap = EMPTY_REF_MAP;\n \n+        private volatile int floor;\n+\n+        private volatile int ceiling;\n+\n+        private final Set<Integer> missing = new HashSet<Integer>( );\n+\n         public void setTracker( ServiceTracker<T, RefPair<T>> tracker )\n         {\n             this.tracker = tracker;\n@@ -200,30 +208,58 @@ protected void ungetService( RefPair<T> ref )\n                 }\n             }\n         }\n+\n+        protected void tracked( int trackingCount )\n+        {\n+            synchronized ( missing )\n+            {\n+                if (trackingCount == floor + 1 )\n+                {\n+                    floor++;\n+                    missing.remove( trackingCount );\n+                }\n+                else if ( trackingCount < ceiling )\n+                {\n+                    missing.remove( trackingCount );\n+                }\n+                if ( trackingCount > ceiling )\n+                {\n+                    for (int i = ceiling + 1; i < trackingCount; i++ )\n+                    {\n+                        missing.add( i );\n+                    }\n+                    ceiling = trackingCount;\n+                }\n+                if ( missing.isEmpty() )\n+                {\n+                    missing.notifyAll();\n+                }\n+            }\n+        }\n     }\n \n \n     private class FactoryCustomizer extends AbstractCustomizer {\n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = new RefPair<T>( serviceReference  );\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( !isOptional() )\n             {\n                 m_componentManager.activateInternal();\n             }\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( !isOptional() )\n             {\n@@ -237,7 +273,8 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n         public boolean open()\n         {\n             boolean success = m_dependencyMetadata.isOptional() || !getTracker().isEmpty();\n-            getTracker().getTracked( true );   //TODO activate method??\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            getTracker().getTracked( true, trackingCount );   //TODO activate method??\n             return success;\n         }\n \n@@ -256,7 +293,7 @@ public void close()\n \n         private RefPair<T> lastRefPair;\n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = getPreviousRefMap().get( serviceReference );\n             if ( refPair == null )\n@@ -273,7 +310,7 @@ public void close()\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( getPreviousRefMap().remove( serviceReference ) == null )\n             {\n@@ -289,17 +326,19 @@ else if ( isTrackerOpened() && !isOptional() )\n                     m_componentManager.activateInternal();\n                 }\n             }\n+            tracked( trackingCount );\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive())\n             {\n                 m_componentManager.update( DependencyManager.this, refPair );\n             }\n+            tracked( trackingCount );\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() )\n             {\n@@ -316,12 +355,14 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                 }\n             }\n             ungetService( refPair );\n+            tracked( trackingCount );\n         }\n \n         public boolean open()\n         {\n             boolean success = m_dependencyMetadata.isOptional();\n-            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true );\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true, trackingCount );\n             for (RefPair<T> refPair: tracked.values())\n             {\n                 synchronized (refPair)\n@@ -353,7 +394,8 @@ public void close()\n         {\n             if ( lastRefPair == null )\n             {\n-                return getTracker().getTracked( true ).values();\n+                AtomicInteger trackingCount = new AtomicInteger( );\n+                return getTracker().getTracked( true, trackingCount ).values();\n             }\n             else\n             {\n@@ -365,7 +407,7 @@ public void close()\n     private class MultipleStaticGreedyCustomizer extends AbstractCustomizer {\n \n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = new RefPair<T>( serviceReference  );\n             if (isActive())\n@@ -375,7 +417,7 @@ public void close()\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive())\n             {\n@@ -392,15 +434,15 @@ else if ( isTrackerOpened() &&  !isOptional() )\n             }\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive())\n             {\n                 m_componentManager.update( DependencyManager.this, refPair );\n             }\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() )\n             {\n@@ -419,7 +461,8 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n         public boolean open()\n         {\n             boolean success = m_dependencyMetadata.isOptional();\n-            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( success || !getTracker().isEmpty() );\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( success || !getTracker().isEmpty(), trackingCount );\n             for (RefPair<T> refPair: tracked.values())\n             {\n                 synchronized (refPair)\n@@ -441,37 +484,38 @@ public void close()\n \n         public Collection<RefPair<T>> getRefs()\n         {\n-            return getTracker().getTracked( null ).values();\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            return getTracker().getTracked( null, trackingCount ).values();\n         }\n     }\n \n     private class MultipleStaticReluctantCustomizer extends AbstractCustomizer {\n \n         private final Collection<RefPair<T>> refs = new ArrayList<RefPair<T>>();\n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = new RefPair<T>( serviceReference  );\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isTrackerOpened() && !isOptional() && !isActive())\n             {\n                 m_componentManager.activateInternal();\n             }\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive())\n             {\n                 m_componentManager.update( DependencyManager.this, refPair );\n             }\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() )\n             {\n@@ -494,7 +538,8 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n         public boolean open()\n         {\n             boolean success = m_dependencyMetadata.isOptional();\n-            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true );\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true, trackingCount );\n             for (RefPair<T> refPair: tracked.values())\n             {\n                 synchronized (refPair)\n@@ -526,13 +571,13 @@ public void close()\n \n         private RefPair<T> refPair;\n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = new RefPair<T>( serviceReference  );\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive() )\n             {\n@@ -564,15 +609,15 @@ else if ( isTrackerOpened() && !isOptional() )\n             }\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (isActive())\n             {\n                 m_componentManager.update( DependencyManager.this, refPair );\n             }\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if (refPair == this.refPair)\n             {\n@@ -581,7 +626,8 @@ public void removedService( ServiceReference<T> serviceReference, RefPair<T> ref\n                     RefPair<T> nextRefPair = null;\n                     if ( !getTracker().isEmpty() )\n                     {\n-                        SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true );\n+                        AtomicInteger trackingCount2 = new AtomicInteger( );\n+                        SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true, trackingCount2 );\n                         nextRefPair = tracked.values().iterator().next();\n                         synchronized ( nextRefPair )\n                         {\n@@ -615,7 +661,8 @@ public boolean open()\n             boolean success = m_dependencyMetadata.isOptional();\n             if ( success || !getTracker().isEmpty() )\n             {\n-                SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true );\n+                AtomicInteger trackingCount = new AtomicInteger( );\n+                SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true, trackingCount );\n                 if ( !tracked.isEmpty() )\n                 {\n                     RefPair<T> refPair = tracked.values().iterator().next();\n@@ -659,13 +706,13 @@ private void closeRefPair()\n \n         private RefPair<T> refPair;\n \n-        public RefPair<T> addingService( ServiceReference<T> serviceReference )\n+        public RefPair<T> addingService( ServiceReference<T> serviceReference, int trackingCount )\n         {\n             RefPair<T> refPair = new RefPair<T>( serviceReference );\n             return refPair;\n         }\n \n-        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void addedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() )\n             {\n@@ -681,15 +728,15 @@ else if (isTrackerOpened() && !isOptional() )\n             }\n         }\n \n-        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void modifiedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() )\n             {\n                 m_componentManager.update( DependencyManager.this, refPair );\n             }\n         }\n \n-        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair )\n+        public void removedService( ServiceReference<T> serviceReference, RefPair<T> refPair, int trackingCount )\n         {\n             if ( isActive() && refPair == this.refPair )\n             {\n@@ -703,7 +750,8 @@ public boolean open()\n             boolean success = m_dependencyMetadata.isOptional();\n             if ( success || !getTracker().isEmpty() )\n             {\n-                SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true );\n+                AtomicInteger trackingCount = new AtomicInteger( );\n+                SortedMap<ServiceReference<T>, RefPair<T>> tracked = getTracker().getTracked( true, trackingCount );\n                 if ( !tracked.isEmpty() )\n                 {\n                     RefPair<T> refPair = tracked.values().iterator().next();\n@@ -826,7 +874,8 @@ void deactivate()\n      */\n     int size()\n     {\n-        return trackerRef.get().getTracked( null ).size();\n+        AtomicInteger trackingCount = new AtomicInteger( );\n+        return trackerRef.get().getTracked( null, trackingCount ).size();\n     }\n \n \n@@ -976,7 +1025,8 @@ T getService()\n      */\n     private RefPair<T> getRefPair( ServiceReference<T> serviceReference )\n     {\n-        return trackerRef.get().getTracked( null ).get( serviceReference );\n+        AtomicInteger trackingCount = new AtomicInteger( );\n+        return trackerRef.get().getTracked( null, trackingCount ).get( serviceReference );\n     }\n \n \n@@ -1055,7 +1105,8 @@ public String getName()\n      */\n     public boolean isSatisfied()\n     {\n-        return customizerRef.get().isSatisfied();\n+        Customizer<T> customizer = customizerRef.get();\n+        return customizer != null && customizer.isSatisfied();\n     }\n \n \n@@ -1594,7 +1645,8 @@ else if ( isMultiple() )\n //        trackerRef.set( null ); //???\n         if ( tracker != null )\n         {\n-            refMap = tracker.close();\n+            AtomicInteger trackingCount = new AtomicInteger( );\n+            refMap = tracker.close( trackingCount );\n         }\n         else\n         {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}, {"additions": 61, "raw_url": "https://github.com/apache/felix/raw/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTracker.java", "blob_url": "https://github.com/apache/felix/blob/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTracker.java", "sha": "555eb36543b5b8bad186cf6d5bfa1beff8a45e79", "changes": 105, "status": "modified", "deletions": 44, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTracker.java?ref=8c13cef5f7522f81cd54c5a0db641be12c49baf8", "patch": "@@ -25,6 +25,8 @@\n import java.util.Map;\n import java.util.SortedMap;\n import java.util.TreeMap;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n import org.osgi.framework.AllServiceListener;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.Constants;\n@@ -367,8 +369,9 @@ public void open(boolean trackAllServices) {\n \t * <p>\n \t * This implementation calls {@link #getServiceReferences()} to get the list\n \t * of tracked services to remove.\n-\t */\n-\tpublic SortedMap<ServiceReference<S>, T> close() {\n+     * @param trackingCount\n+     */\n+\tpublic SortedMap<ServiceReference<S>, T> close( AtomicInteger trackingCount ) {\n \t\tfinal Tracked outgoing;\n //\t\tfinal ServiceReference<S>[] references;\n         SortedMap<ServiceReference<S>, T> map = new TreeMap<ServiceReference<S>, T>(Collections.reverseOrder());\n@@ -381,7 +384,11 @@ public void open(boolean trackAllServices) {\n \t\t\t\tSystem.out.println(\"ServiceTracker.close: \" + filter);\n \t\t\t}\n \t\t\toutgoing.close();\n-            outgoing.copyEntries( map );\n+            synchronized ( outgoing )\n+            {\n+                trackingCount.set( outgoing.getTrackingCount() );\n+                outgoing.copyEntries( map );\n+            }\n //\t\t\treferences = getServiceReferences();\n //\t\t\ttracked = null;\n \t\t\ttry {\n@@ -440,16 +447,16 @@ public void completeClose(Map<ServiceReference<S>, T> toUntrack) {\n \t * This method can be overridden in a subclass to customize the service\n \t * object to be tracked for the service being added. In that case, take care\n \t * not to rely on the default implementation of\n-\t * {@link #removedService(ServiceReference, Object) removedService} to unget\n+\t * {@link #removedService(ServiceReference, Object, int) removedService} to unget\n \t * the service.\n \t * \n \t * @param reference The reference to the service being added to this\n \t *        {@code ServiceTracker}.\n \t * @return The service object to be tracked for the service added to this\n \t *         {@code ServiceTracker}.\n-\t * @see ServiceTrackerCustomizer#addingService(ServiceReference)\n+\t * @see ServiceTrackerCustomizer#addingService(org.osgi.framework.ServiceReference, int)\n \t */\n-\tpublic T addingService(ServiceReference<S> reference) {\n+\tpublic T addingService(ServiceReference<S> reference, int trackingCount) {\n \t\tT result = (T) context.getService(reference);\n \t\treturn result;\n \t}\n@@ -467,9 +474,9 @@ public T addingService(ServiceReference<S> reference) {\n \t * \n \t * @param reference The reference to modified service.\n \t * @param service The service object for the modified service.\n-\t * @see ServiceTrackerCustomizer#modifiedService(ServiceReference, Object)\n+\t * @see ServiceTrackerCustomizer#modifiedService(org.osgi.framework.ServiceReference, Object, int)\n \t */\n-\tpublic void modifiedService(ServiceReference<S> reference, T service) {\n+\tpublic void modifiedService(ServiceReference<S> reference, T service, int trackingCount) {\n \t\t/* do nothing */\n \t}\n \n@@ -487,14 +494,14 @@ public void modifiedService(ServiceReference<S> reference, T service) {\n \t * passing the specified {@code ServiceReference}.\n \t * <p>\n \t * This method can be overridden in a subclass. If the default\n-\t * implementation of {@link #addingService(ServiceReference) addingService}\n+\t * implementation of {@link #addingService(ServiceReference, int) addingService}\n \t * method was used, this method must unget the service.\n \t * \n \t * @param reference The reference to removed service.\n \t * @param service The service object for the removed service.\n-\t * @see ServiceTrackerCustomizer#removedService(ServiceReference, Object)\n+\t * @see ServiceTrackerCustomizer#removedService(org.osgi.framework.ServiceReference, Object, int)\n \t */\n-\tpublic void removedService(ServiceReference<S> reference, T service) {\n+\tpublic void removedService(ServiceReference<S> reference, T service, int trackingCount) {\n \t\tcontext.ungetService(reference);\n \t}\n \n@@ -818,8 +825,9 @@ void modified() {\n \t *         the returned map is empty.\n \t * @since 1.5\n      * @param activate\n-\t */\n-\tpublic SortedMap<ServiceReference<S>, T> getTracked( Boolean activate ) {\n+     * @param trackingCount\n+     */\n+\tpublic SortedMap<ServiceReference<S>, T> getTracked( Boolean activate, AtomicInteger trackingCount ) {\n \t\tSortedMap<ServiceReference<S>, T> map = new TreeMap<ServiceReference<S>, T>(Collections.reverseOrder());\n \t\tfinal Tracked t = tracked();\n \t\tif (t == null) { /* if ServiceTracker is not open */\n@@ -830,6 +838,7 @@ void modified() {\n             {\n                 active = activate;\n             }\n+            trackingCount.set( t.getTrackingCount() );\n             return t.copyEntries(map);\n \t\t}\n \t}\n@@ -1132,7 +1141,7 @@ void track(final S item, final R related) {\n                 trackAdding(item, related);\n             } else {\n                 /* Call customizer outside of synchronized region */\n-                customizerModified(item, related, object);\n+                customizerModified(item, related, object, trackingCount );\n                 /*\n                  * If the customizer throws an unchecked exception, it is safe to\n                  * let it propagate\n@@ -1156,7 +1165,7 @@ private void trackAdding(final S item, final R related) {\n             boolean becameUntracked = false;\n             /* Call customizer outside of synchronized region */\n             try {\n-                object = customizerAdding(item, related);\n+                object = customizerAdding(item, related, trackingCount );\n                 /*\n                  * If the customizer throws an unchecked exception, it will\n                  * propagate after the finally\n@@ -1184,13 +1193,13 @@ private void trackAdding(final S item, final R related) {\n                     System.out.println(\"AbstractTracked.trackAdding[removed]: \" + item); //$NON-NLS-1$\n                 }\n                 /* Call customizer outside of synchronized region */\n-                customizerRemoved(item, related, object);\n+                customizerRemoved(item, related, object, trackingCount );\n                 /*\n                  * If the customizer throws an unchecked exception, it is safe to\n                  * let it propagate\n                  */\n             } else {\n-                customizerAdded( item, related, object );\n+                customizerAdded( item, related, object, trackingCount );\n             }\n         }\n \n@@ -1238,7 +1247,7 @@ void untrack(final S item, final R related) {\n                 System.out.println(\"AbstractTracked.untrack[removed]: \" + item); //$NON-NLS-1$\n             }\n             /* Call customizer outside of synchronized region */\n-            customizerRemoved(item, related, object);\n+            customizerRemoved(item, related, object, trackingCount );\n             /*\n              * If the customizer throws an unchecked exception, it is safe to let it\n              * propagate\n@@ -1277,7 +1286,7 @@ boolean isEmpty() {\n          * @GuardedBy this\n          */\n         T getCustomizedObject(final S item) {\n-            return tracked.get(item);\n+            return tracked.get( item );\n         }\n \n         /**\n@@ -1337,14 +1346,16 @@ int getTrackingCount() {\n          * Call the specific customizer adding method. This method must not be\n          * called while synchronized on this object.\n          *\n+         *\n          * @param item Item to be tracked.\n          * @param related Action related object.\n+         * @param trackingCount\n          * @return Customized object for the tracked item or {@code null} if the\n          *         item is not to be tracked.\n          */\n-        abstract T customizerAdding(final S item, final R related);\n+        abstract T customizerAdding( final S item, final R related, int trackingCount );\n \n-        abstract void customizerAdded(final S item, final R related, final T object);\n+        abstract void customizerAdded( final S item, final R related, final T object, int trackingCount );\n \n         /**\n          * Call the specific customizer modified method. This method must not be\n@@ -1353,8 +1364,9 @@ int getTrackingCount() {\n          * @param item Tracked item.\n          * @param related Action related object.\n          * @param object Customized object for the tracked item.\n+         * @param trackingCount\n          */\n-        abstract void customizerModified(final S item, final R related, final T object);\n+        abstract void customizerModified( final S item, final R related, final T object, int trackingCount );\n \n         /**\n          * Call the specific customizer removed method. This method must not be\n@@ -1363,8 +1375,9 @@ int getTrackingCount() {\n          * @param item Tracked item.\n          * @param related Action related object.\n          * @param object Customized object for the tracked item.\n+         * @param trackingCount\n          */\n-        abstract void customizerRemoved(final S item, final R related, final T object);\n+        abstract void customizerRemoved( final S item, final R related, final T object, int trackingCount );\n     }\n \n \n@@ -1436,41 +1449,45 @@ final void modified() {\n \t\t * Call the specific customizer adding method. This method must not be\n \t\t * called while synchronized on this object.\n \t\t * \n-\t\t * @param item Item to be tracked.\n-\t\t * @param related Action related object.\n-\t\t * @return Customized object for the tracked item or {@code null} if the\n+\t\t *\n+         * @param item Item to be tracked.\n+         * @param related Action related object.\n+         * @param trackingCount\n+         * @return Customized object for the tracked item or {@code null} if the\n \t\t *         item is not to be tracked.\n \t\t */\n-\t\tfinal T customizerAdding(final ServiceReference<S> item, final ServiceEvent related) {\n-\t\t\treturn customizer.addingService( item );\n+\t\tfinal T customizerAdding( final ServiceReference<S> item, final ServiceEvent related, int trackingCount ) {\n+\t\t\treturn customizer.addingService( item, trackingCount );\n \t\t}\n \n-\t\tfinal void customizerAdded(final ServiceReference<S> item, final ServiceEvent related, final T object) {\n-\t\t    customizer.addedService( item, object );\n+\t\tfinal void customizerAdded( final ServiceReference<S> item, final ServiceEvent related, final T object, int trackingCount ) {\n+\t\t    customizer.addedService( item, object, trackingCount );\n \t\t}\n \n \t\t/**\n \t\t * Call the specific customizer modified method. This method must not be\n \t\t * called while synchronized on this object.\n-\t\t * \n-\t\t * @param item Tracked item.\n-\t\t * @param related Action related object.\n-\t\t * @param object Customized object for the tracked item.\n-\t\t */\n-\t\tfinal void customizerModified(final ServiceReference<S> item, final ServiceEvent related, final T object) {\n-\t\t\tcustomizer.modifiedService(item, object);\n+\t\t *\n+         * @param item Tracked item.\n+         * @param related Action related object.\n+         * @param object Customized object for the tracked item.\n+         * @param trackingCount\n+         */\n+\t\tfinal void customizerModified( final ServiceReference<S> item, final ServiceEvent related, final T object, int trackingCount ) {\n+\t\t\tcustomizer.modifiedService( item, object, trackingCount );\n \t\t}\n \n         /**\n \t\t * Call the specific customizer removed method. This method must not be\n \t\t * called while synchronized on this object.\n-\t\t * \n-\t\t * @param item Tracked item.\n-\t\t * @param related Action related object.\n-\t\t * @param object Customized object for the tracked item.\n-\t\t */\n-\t\tfinal void customizerRemoved(final ServiceReference<S> item, final ServiceEvent related, final T object) {\n-\t\t\tcustomizer.removedService(item, object);\n+\t\t *\n+         * @param item Tracked item.\n+         * @param related Action related object.\n+         * @param object Customized object for the tracked item.\n+         * @param trackingCount\n+         */\n+\t\tfinal void customizerRemoved( final ServiceReference<S> item, final ServiceEvent related, final T object, int trackingCount ) {\n+\t\t\tcustomizer.removedService(item, object, trackingCount );\n \t\t}\n \t}\n ", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTracker.java"}, {"additions": 19, "raw_url": "https://github.com/apache/felix/raw/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTrackerCustomizer.java", "blob_url": "https://github.com/apache/felix/blob/8c13cef5f7522f81cd54c5a0db641be12c49baf8/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTrackerCustomizer.java", "sha": "77dff79b914cef13b7c013b880417f67a6b7909f", "changes": 34, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTrackerCustomizer.java?ref=8c13cef5f7522f81cd54c5a0db641be12c49baf8", "patch": "@@ -59,38 +59,42 @@\n \t * service object is stored in the {@code ServiceTracker} and is available\n \t * from the {@code getService} and {@code getServices} methods.\n \t * \n-\t * @param reference The reference to the service being added to the\n-\t *        {@code ServiceTracker}.\n-\t * @return The service object to be tracked for the specified referenced\n+\t *\n+     * @param reference The reference to the service being added to the\n+     *        {@code ServiceTracker}.\n+     * @param trackingCount\n+     * @return The service object to be tracked for the specified referenced\n \t *         service or {@code null} if the specified referenced service\n \t *         should not be tracked.\n \t */\n-\tpublic T addingService(ServiceReference<S> reference);\n+\tpublic T addingService( ServiceReference<S> reference, int trackingCount );\n \n-    public void addedService(ServiceReference<S> reference, T service);\n+    public void addedService( ServiceReference<S> reference, T service, int trackingCount );\n \n \t/**\n \t * A service tracked by the {@code ServiceTracker} has been modified.\n \t * \n \t * <p>\n \t * This method is called when a service being tracked by the\n \t * {@code ServiceTracker} has had it properties modified.\n-\t * \n-\t * @param reference The reference to the service that has been modified.\n-\t * @param service The service object for the specified referenced service.\n-\t */\n-\tpublic void modifiedService(ServiceReference<S> reference, T service);\n+\t *\n+     * @param reference The reference to the service that has been modified.\n+     * @param service The service object for the specified referenced service.\n+     * @param trackingCount\n+     */\n+\tpublic void modifiedService( ServiceReference<S> reference, T service, int trackingCount );\n \n \t/**\n \t * A service tracked by the {@code ServiceTracker} has been removed.\n \t * \n \t * <p>\n \t * This method is called after a service is no longer being tracked by the\n \t * {@code ServiceTracker}.\n-\t * \n-\t * @param reference The reference to the service that has been removed.\n-\t * @param service The service object for the specified referenced service.\n-\t */\n-\tpublic void removedService(ServiceReference<S> reference, T service);\n+\t *\n+     * @param reference The reference to the service that has been removed.\n+     * @param service The service object for the specified referenced service.\n+     * @param trackingCount\n+     */\n+\tpublic void removedService( ServiceReference<S> reference, T service, int trackingCount );\n \n }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/ServiceTrackerCustomizer.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/dbed8fd6a8ac1dd25a7dae4e8d377d36c9e450e9", "parent": "https://github.com/apache/felix/commit/72b57e785f0ffb6b2a47d485089d077dcf67d06a", "message": "FELIX-3787 Test dependencies map against null to prevent NPE on service update of inactive delayed components\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1414168 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_109", "file": [{"additions": 21, "raw_url": "https://github.com/apache/felix/raw/dbed8fd6a8ac1dd25a7dae4e8d377d36c9e450e9/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/dbed8fd6a8ac1dd25a7dae4e8d377d36c9e450e9/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "2de96c88c5b779821a4938297c08d6f0fa954f2f", "changes": 34, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=dbed8fd6a8ac1dd25a7dae4e8d377d36c9e450e9", "patch": "@@ -380,14 +380,18 @@ private void serviceAdded( ServiceReference reference )\n                 }\n                 else\n                 {\n-                    Map bound = ( Map ) m_componentManager.getDependencyMap().get( this );\n-                    if ( m_dependencyMetadata.isMultiple() ||\n-                                            bound.isEmpty() ||\n-                                            reference.compareTo( bound.keySet().iterator().next() ) > 0 )\n-                                    {\n-                                        m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false );\n-                                        m_componentManager.activateInternal();\n-                                    }\n+                    Map dependenciesMap = m_componentManager.getDependencyMap();\n+                    if ( dependenciesMap != null )\n+                    {\n+                        Map bound = ( Map ) dependenciesMap.get( this );\n+                        if ( m_dependencyMetadata.isMultiple() ||\n+                                                bound.isEmpty() ||\n+                                                reference.compareTo( bound.keySet().iterator().next() ) > 0 )\n+                                        {\n+                                            m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE, false );\n+                                            m_componentManager.activateInternal();\n+                                        }\n+                    }\n                 }\n             }\n \n@@ -404,12 +408,16 @@ else if ( m_dependencyMetadata.getBind() != null )\n                 else if ( !isReluctant() )\n                 {\n                     //dynamic greedy single: bind then unbind\n-                    Map bound = ( Map ) m_componentManager.getDependencyMap().get( this );\n-                    ServiceReference oldRef = ( ServiceReference ) bound.keySet().iterator().next();\n-                    if ( reference.compareTo( oldRef ) > 0 )\n+                    Map dependenciesMap = m_componentManager.getDependencyMap();\n+                    if ( dependenciesMap != null )\n                     {\n-                        m_componentManager.invokeBindMethod( this, reference );\n-                        m_componentManager.invokeUnbindMethod( this, oldRef );\n+                        Map bound = ( Map ) dependenciesMap.get( this );\n+                        ServiceReference oldRef = ( ServiceReference ) bound.keySet().iterator().next();\n+                        if ( reference.compareTo( oldRef ) > 0 )\n+                        {\n+                            m_componentManager.invokeBindMethod( this, reference );\n+                            m_componentManager.invokeUnbindMethod( this, oldRef );\n+                        }\n                     }\n                 }\n             }", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/58cf4fffd7cece65b476938834738412c66fec01", "parent": "https://github.com/apache/felix/commit/5ee183b450e94e3ab4178b8c81e1783112c93b53", "message": "Fixed FELIX-3669 : NPE in ControlServlet.deviceToJSON\nhttps://issues.apache.org/jira/browse/FELIX-3669\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1391982 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_110", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/58cf4fffd7cece65b476938834738412c66fec01/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "blob_url": "https://github.com/apache/felix/blob/58cf4fffd7cece65b476938834738412c66fec01/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "sha": "95a9f4f0e40c301218faa5775e9a611404d2c595", "changes": 20, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java?ref=58cf4fffd7cece65b476938834738412c66fec01", "patch": "@@ -55,6 +55,8 @@\n public class ControlServlet extends HttpServlet implements ServiceTrackerCustomizer\r\n {\r\n \r\n+    private static final long serialVersionUID = -5789642544511401813L;\r\n+\r\n     private static final SimpleDateFormat DATA_FORMAT = new SimpleDateFormat(\r\n         \"EEE, d MMM yyyy HH:mm:ss Z\"); //$NON-NLS-1$\r\n \r\n@@ -227,8 +229,11 @@ private final UPnPService requireService(HttpServletRequest request)\n \r\n     private final JSONObject deviceTreeToJSON(ServiceReference ref) throws JSONException\r\n     {\r\n-        UPnPDevice device = (UPnPDevice) tracker.getService(ref);\r\n-        Object[] refs = tracker.getServiceReferences();\r\n+        final UPnPDevice device = (UPnPDevice) tracker.getService(ref);\r\n+        if (null == device)\r\n+        {\r\n+            return null; // the device is dynamically removed\r\n+        }\r\n \r\n         Object parentUdn = ref.getProperty(UPnPDevice.UDN);\r\n         if (parentUdn == null)\r\n@@ -241,6 +246,7 @@ private final JSONObject deviceTreeToJSON(ServiceReference ref) throws JSONExcep\n         JSONObject json = deviceToJSON(ref, device);\r\n \r\n         // add child devices\r\n+        final Object[] refs = tracker.getServiceReferences();\r\n         for (int i = 0; refs != null && i < refs.length; i++)\r\n         {\r\n             ref = (ServiceReference) refs[i];\r\n@@ -257,7 +263,6 @@ else if (currentUDN != null && currentUDN.equals(parent))\n             }\r\n             else if (parentUdn.equals(parent))\r\n             {\r\n-                device = (UPnPDevice) tracker.getService(ref);\r\n                 JSONObject deviceJSON = deviceTreeToJSON(ref);\r\n                 if (null != deviceJSON)\r\n                 {\r\n@@ -456,14 +461,19 @@ private final UPnPDevice getDevice(String udn)\n             _udn = (String) refs[i].getProperty(UPnPDevice.UDN);\r\n             if (_udn != null && _udn.equals(udn))\r\n             {\r\n-                return (UPnPDevice) tracker.getService(refs[i]);\r\n+                UPnPDevice upnpDevice = (UPnPDevice) tracker.getService(refs[i]);\r\n+                if (null == upnpDevice)\r\n+                {\r\n+                    break; // device not found\r\n+                }\r\n+                return upnpDevice;\r\n             }\r\n         }\r\n \r\n         throw new IllegalArgumentException(\"Device '\" + udn + \"' not found!\");\r\n     }\r\n \r\n-    private final UPnPService getService(UPnPDevice device, String urn)\r\n+    private static final UPnPService getService(UPnPDevice device, String urn)\r\n     {\r\n         UPnPService[] services = device.getServices();\r\n         for (int i = 0; services != null && i < services.length; i++)\r", "filename": "webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/512d011b5e1b0ae61784305639c7bc2104a5953c", "parent": "https://github.com/apache/felix/commit/82c621ba2f18376229f884bb261185fc14d746a6", "message": "FELIX-3657 fix NPE from management interface when querying non-active components\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1383485 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_111", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/512d011b5e1b0ae61784305639c7bc2104a5953c/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "blob_url": "https://github.com/apache/felix/blob/512d011b5e1b0ae61784305639c7bc2104a5953c/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java", "sha": "bf8a5b7a0ec9973c665569df3ad0d061ba7d0f88", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java?ref=512d011b5e1b0ae61784305639c7bc2104a5953c", "patch": "@@ -770,6 +770,10 @@ Object getService()\n     private ServiceReference[] getBoundServiceReferences()\n     {\n         Map dependencyMap = m_componentManager.getDependencyMap();\n+        if ( dependencyMap == null )\n+        {\n+            return null;\n+        }\n         Map bound = ( Map ) dependencyMap.get( this );\n         if ( bound.isEmpty() )\n         {", "filename": "scr/src/main/java/org/apache/felix/scr/impl/manager/DependencyManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/129d6ee495e9c2f3e99ba99a40eb8a5f6dae17ec", "parent": "https://github.com/apache/felix/commit/19ab9c1847784b7fa3b39c0d47ad7e7c3f878de2", "message": "Fixed FELIX-3595 NPE in ControlServlet.addingService\nhttps://issues.apache.org/jira/browse/FELIX-3595\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1360693 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_112", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/129d6ee495e9c2f3e99ba99a40eb8a5f6dae17ec/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "blob_url": "https://github.com/apache/felix/blob/129d6ee495e9c2f3e99ba99a40eb8a5f6dae17ec/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "sha": "cf7cdb3f8ee20d9f07759df9ab446b4aba7a2edb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java?ref=129d6ee495e9c2f3e99ba99a40eb8a5f6dae17ec", "patch": "@@ -530,7 +530,7 @@ public final Object addingService(ServiceReference ref)\n     {\r\n         UPnPDevice device = (UPnPDevice) bc.getService(ref);\r\n \r\n-        UPnPIcon[] _icons = device.getIcons(null);\r\n+        UPnPIcon[] _icons = device == null ? null : device.getIcons(null);\r\n         if (_icons != null && _icons.length > 0)\r\n         {\r\n             icons.put(ref.getProperty(UPnPDevice.UDN), _icons[0]);\r", "filename": "webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/8e97091f81b13e5a744b275222665a8d02e8bee5", "parent": "https://github.com/apache/felix/commit/0e4d764291be43fe29e1fb88276069aa5952ede3", "message": "[FELIX-3493] PackageAdminImpl throws NPE - File Install does not handle a bundle uninstall gracefully\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1348898 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_113", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/8e97091f81b13e5a744b275222665a8d02e8bee5/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java", "blob_url": "https://github.com/apache/felix/blob/8e97091f81b13e5a744b275222665a8d02e8bee5/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java", "sha": "8600e0e709caff7c76d18b64dfb35c3690a6ce6d", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java?ref=8e97091f81b13e5a744b275222665a8d02e8bee5", "patch": "@@ -1236,7 +1236,9 @@ private boolean startBundle(Bundle bundle)\n         // Bundles can only be started transient when the start level of the framework is high\n         // enough. Persistent (i.e. non-transient) starts will simply make the framework start the\n         // bundle when the start level is high enough.\n-        if (!isFragment(bundle) && startBundles\n+        if (startBundles\n+                && bundle.getState() != Bundle.UNINSTALLED\n+                && !isFragment(bundle)\n                 && startLevelSvc.getStartLevel() >= startLevelSvc.getBundleStartLevel(bundle))\n         {\n             try", "filename": "fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/807a4185fcb1283966c0128e1dfb9ac714bb444a", "parent": "https://github.com/apache/felix/commit/f36ca366114fac073c96376a22f84a4416d49a25", "message": "Fixed FELIX-3428 NPE in UPnP Web Console Plugin (again)\nhttps://issues.apache.org/jira/browse/FELIX-3428\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1309270 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_114", "file": [{"additions": 51, "raw_url": "https://github.com/apache/felix/raw/807a4185fcb1283966c0128e1dfb9ac714bb444a/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "blob_url": "https://github.com/apache/felix/blob/807a4185fcb1283966c0128e1dfb9ac714bb444a/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "sha": "88e580d22ab2f29c8bb3fd28553bf0aa8881df3c", "changes": 74, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java?ref=807a4185fcb1283966c0128e1dfb9ac714bb444a", "patch": "@@ -37,6 +37,7 @@\n import org.json.JSONObject;\r\n import org.osgi.framework.BundleContext;\r\n import org.osgi.framework.ServiceReference;\r\n+import org.osgi.service.log.LogService;\r\n import org.osgi.service.upnp.UPnPAction;\r\n import org.osgi.service.upnp.UPnPDevice;\r\n import org.osgi.service.upnp.UPnPIcon;\r\n@@ -95,7 +96,8 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n                     response.setDateHeader(\"Last-Modified\", LAST_MODIFIED); //$NON-NLS-1$\r\n \r\n                     InputStream in = icon.getInputStream();\r\n-                    if (null == in) { // this is buggy implementations\r\n+                    if (null == in)\r\n+                    { // this is buggy implementations\r\n                         response.setStatus(HttpServletResponse.SC_NOT_FOUND);\r\n                         return;\r\n                     }\r\n@@ -142,7 +144,11 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n                     if (refs[i] != null\r\n                         && refs[i].getProperty(UPnPDevice.PARENT_UDN) == null)\r\n                     {\r\n-                        json.append(\"devices\", deviceTreeToJSON(refs[i])); //$NON-NLS-1$\r\n+                        JSONObject deviceJSON = deviceTreeToJSON(refs[i]);\r\n+                        if (null != deviceJSON)\r\n+                        {\r\n+                            json.append(\"devices\", deviceJSON); //$NON-NLS-1$\r\n+                        }\r\n                     }\r\n                 }\r\n             }\r\n@@ -159,8 +165,7 @@ else if (\"invokeAction\".equals(method)) //$NON-NLS-1$\n                 UPnPService service = requireService(request);\r\n                 UPnPAction action = service.getAction(require(\"actionID\", request)); //$NON-NLS-1$\r\n \r\n-                json = invoke(\r\n-                    action, //\r\n+                json = invoke(action, //\r\n                     request.getParameterValues(\"names\"), //$NON-NLS-1$\r\n                     request.getParameterValues(\"vals\")); //$NON-NLS-1$\r\n             }\r\n@@ -221,6 +226,13 @@ private final JSONObject deviceTreeToJSON(ServiceReference ref) throws JSONExcep\n         Object[] refs = tracker.getServiceReferences();\r\n \r\n         Object parentUdn = ref.getProperty(UPnPDevice.UDN);\r\n+        if (parentUdn == null)\r\n+        {\r\n+            plugin.log(LogService.LOG_ERROR,\r\n+                \"Invalid device, no UDN property specified for \" + device);\r\n+            return null;\r\n+        }\r\n+\r\n         JSONObject json = deviceToJSON(ref, device);\r\n \r\n         // add child devices\r\n@@ -241,7 +253,11 @@ else if (currentUDN != null && currentUDN.equals(parent))\n             else if (parentUdn.equals(parent))\r\n             {\r\n                 device = (UPnPDevice) tracker.getService(ref);\r\n-                json.append(\"children\", deviceTreeToJSON(ref)); //$NON-NLS-1$\r\n+                JSONObject deviceJSON = deviceTreeToJSON(ref);\r\n+                if (null != deviceJSON)\r\n+                {\r\n+                    json.append(\"children\", deviceJSON); //$NON-NLS-1$\r\n+                }\r\n             }\r\n         }\r\n         return json;\r\n@@ -296,14 +312,14 @@ private static final JSONObject serviceToJSON(UPnPService service,\n                 value = \"---\"; //$NON-NLS-1$\r\n \r\n             json.append(\"variables\", new JSONObject() // //$NON-NLS-1$\r\n-                .put(\"name\", vars[i].getName()) // //$NON-NLS-1$\r\n-                .put(\"value\", value) // //$NON-NLS-1$\r\n-                .put(\"defalt\", vars[i].getDefaultValue()) // //$NON-NLS-1$\r\n-                .put(\"min\", vars[i].getMinimum()) // //$NON-NLS-1$\r\n-                .put(\"max\", vars[i].getMaximum()) // //$NON-NLS-1$\r\n-                .put(\"step\", vars[i].getStep()) // //$NON-NLS-1$\r\n-                .put(\"allowed\", vars[i].getAllowedValues()) // //$NON-NLS-1$\r\n-                .put(\"sendsEvents\", vars[i].sendsEvents()) // //$NON-NLS-1$\r\n+            .put(\"name\", vars[i].getName()) // //$NON-NLS-1$\r\n+            .put(\"value\", value) // //$NON-NLS-1$\r\n+            .put(\"defalt\", vars[i].getDefaultValue()) // //$NON-NLS-1$\r\n+            .put(\"min\", vars[i].getMinimum()) // //$NON-NLS-1$\r\n+            .put(\"max\", vars[i].getMaximum()) // //$NON-NLS-1$\r\n+            .put(\"step\", vars[i].getStep()) // //$NON-NLS-1$\r\n+            .put(\"allowed\", vars[i].getAllowedValues()) // //$NON-NLS-1$\r\n+            .put(\"sendsEvents\", vars[i].sendsEvents()) // //$NON-NLS-1$\r\n             );\r\n         }\r\n \r\n@@ -350,15 +366,24 @@ private static final JSONObject invoke(UPnPAction action, String[] names,\n                 final UPnPStateVariable var = action.getStateVariable(names[i]);\r\n                 final String upnpType = var.getUPnPDataType();\r\n                 final Object argObj;\r\n-                if (UPnPStateVariable.TYPE_STRING.equals(upnpType)) {\r\n+                if (UPnPStateVariable.TYPE_STRING.equals(upnpType))\r\n+                {\r\n                     argObj = vals[i];\r\n-                } else if (UPnPStateVariable.TYPE_CHAR.equals(upnpType)) {\r\n+                }\r\n+                else if (UPnPStateVariable.TYPE_CHAR.equals(upnpType))\r\n+                {\r\n                     argObj = new Character(vals[i].charAt(0));\r\n-                } else if (UPnPStateVariable.TYPE_BIN_BASE64.equals(upnpType)) {\r\n-                    argObj = Base64.decodeBase64(vals[i]); \r\n-                } else if (UPnPStateVariable.TYPE_BIN_HEX.equals(upnpType)) {\r\n+                }\r\n+                else if (UPnPStateVariable.TYPE_BIN_BASE64.equals(upnpType))\r\n+                {\r\n+                    argObj = Base64.decodeBase64(vals[i]);\r\n+                }\r\n+                else if (UPnPStateVariable.TYPE_BIN_HEX.equals(upnpType))\r\n+                {\r\n                     argObj = Hex.decode(vals[i]);\r\n-                } else {\r\n+                }\r\n+                else\r\n+                {\r\n                     Class javaType = var.getJavaDataType();\r\n                     Constructor constructor = javaType.getConstructor(new Class[] { String.class });\r\n                     argObj = constructor.newInstance(new Object[] { vals[i] });\r\n@@ -393,9 +418,9 @@ else if (value instanceof byte[])\n                 }\r\n \r\n                 json.append(\"output\", new JSONObject() // //$NON-NLS-1$\r\n-                    .put(\"name\", key)// //$NON-NLS-1$\r\n-                    .put(\"type\", var.getUPnPDataType()) // //$NON-NLS-1$\r\n-                    .put(\"value\", value)); //$NON-NLS-1$\r\n+                .put(\"name\", key)// //$NON-NLS-1$\r\n+                .put(\"type\", var.getUPnPDataType()) // //$NON-NLS-1$\r\n+                .put(\"value\", value)); //$NON-NLS-1$\r\n             }\r\n         }\r\n         return json;\r\n@@ -447,16 +472,19 @@ private final UPnPService getService(UPnPDevice device, String urn)\n         throw new IllegalArgumentException(\"Service '\" + urn + \"' not found!\");\r\n     }\r\n \r\n+    private final WebConsolePlugin plugin;\r\n+\r\n     /**\r\n      * Creates new XML-RPC handler.\r\n      * \r\n      * @param bc the bundle context\r\n      * @param iconServlet the icon servlet.\r\n      */\r\n-    ControlServlet(BundleContext bc, ServiceTracker tracker)\r\n+    ControlServlet(BundleContext bc, ServiceTracker tracker, WebConsolePlugin plugin)\r\n     {\r\n         this.bc = bc;\r\n         this.tracker = tracker;\r\n+        this.plugin = plugin;\r\n     }\r\n \r\n     /**\r", "filename": "webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/807a4185fcb1283966c0128e1dfb9ac714bb444a/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/WebConsolePlugin.java", "blob_url": "https://github.com/apache/felix/blob/807a4185fcb1283966c0128e1dfb9ac714bb444a/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/WebConsolePlugin.java", "sha": "fdac46e6a86f9babb80a9b078ad2efadbec86fbd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/WebConsolePlugin.java?ref=807a4185fcb1283966c0128e1dfb9ac714bb444a", "patch": "@@ -64,7 +64,7 @@ public WebConsolePlugin(ServiceTracker tracker)\n     public void activate(BundleContext bundleContext)\r\n     {\r\n         super.activate(bundleContext);\r\n-        controller = new ControlServlet(bundleContext, tracker);\r\n+        controller = new ControlServlet(bundleContext, tracker, this);\r\n     }\r\n \r\n     /**\r", "filename": "webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/WebConsolePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f36ca366114fac073c96376a22f84a4416d49a25", "parent": "https://github.com/apache/felix/commit/9949ae1cd9c8f8e9f3887426e58c001ee667abea", "message": "Fixed FELIX-3427 NPE in UPnP Web Console Plugin\nhttps://issues.apache.org/jira/browse/FELIX-3427\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1309021 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_115", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/f36ca366114fac073c96376a22f84a4416d49a25/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "blob_url": "https://github.com/apache/felix/blob/f36ca366114fac073c96376a22f84a4416d49a25/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java", "sha": "784213f4cdec7fae5cbe2a4daecf95880ded3aed", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java?ref=f36ca366114fac073c96376a22f84a4416d49a25", "patch": "@@ -94,6 +94,12 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n                     // enable caching\r\n                     response.setDateHeader(\"Last-Modified\", LAST_MODIFIED); //$NON-NLS-1$\r\n \r\n+                    InputStream in = icon.getInputStream();\r\n+                    if (null == in) { // this is buggy implementations\r\n+                        response.setStatus(HttpServletResponse.SC_NOT_FOUND);\r\n+                        return;\r\n+                    }\r\n+\r\n                     String mime = icon.getMimeType();\r\n                     if (mime != null)\r\n                         response.setContentType(mime);\r\n@@ -103,7 +109,6 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n                     if (size > 0)\r\n                         response.setContentLength(size);\r\n \r\n-                    InputStream in = icon.getInputStream();\r\n                     // can't use buffer, because it's might block if reading byte[]\r\n                     int read;\r\n                     while (-1 != (read = in.read()))\r", "filename": "webconsole-plugins/upnp/src/main/java/org/apache/felix/webconsole/plugins/upnp/internal/ControlServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/4365f04e0bda5a92df682a57552d46cca83cddf4", "parent": "https://github.com/apache/felix/commit/36e947451db3b558d660b6e4e17e24cc588e411b", "message": "Fixed FELIX-3405 NPE in Web Console\nhttps://issues.apache.org/jira/browse/FELIX-3405\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1306203 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_116", "file": [{"additions": 2, "raw_url": "https://github.com/apache/felix/raw/4365f04e0bda5a92df682a57552d46cca83cddf4/webconsole/src/main/java/org/apache/felix/webconsole/AbstractWebConsolePlugin.java", "blob_url": "https://github.com/apache/felix/blob/4365f04e0bda5a92df682a57552d46cca83cddf4/webconsole/src/main/java/org/apache/felix/webconsole/AbstractWebConsolePlugin.java", "sha": "16d8e56a4461d4aa5aca2c8e2c7ee15486a014d8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/AbstractWebConsolePlugin.java?ref=4365f04e0bda5a92df682a57552d46cca83cddf4", "patch": "@@ -31,6 +31,7 @@\n import org.apache.commons.io.IOUtils;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n+import org.osgi.service.log.LogService;\n \n \n /**\n@@ -898,7 +899,7 @@ private final String readTemplateFile( final Class clazz, final String templateF\n         }\n \n         // template file does not exist, return an empty string\n-        log( \"readTemplateFile: File '\" + templateFile + \"' not found through class \" + clazz ); //$NON-NLS-1$ //$NON-NLS-2$\n+        log( LogService.LOG_ERROR, \"readTemplateFile: File '\" + templateFile + \"' not found through class \" + clazz ); //$NON-NLS-1$ //$NON-NLS-2$\n         return \"\"; //$NON-NLS-1$\n     }\n ", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/AbstractWebConsolePlugin.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/01133723745324c0a0fb249b64fdbd57a179e728", "parent": "https://github.com/apache/felix/commit/81377f392f6a7e1b93736ced340a4467d3cf5a90", "message": "FELIX-3334 : PreferencesManager can throw NPE after being stopped. Applied patch from J.W. Janssen\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1241796 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_117", "file": [{"additions": 52, "raw_url": "https://github.com/apache/felix/raw/01133723745324c0a0fb249b64fdbd57a179e728/prefs/src/main/java/org/apache/felix/prefs/impl/PreferencesManager.java", "blob_url": "https://github.com/apache/felix/blob/01133723745324c0a0fb249b64fdbd57a179e728/prefs/src/main/java/org/apache/felix/prefs/impl/PreferencesManager.java", "sha": "458ce6ae25f74c3f0595a42dd6ef97284db0cbef", "changes": 90, "status": "modified", "deletions": 38, "contents_url": "https://api.github.com/repos/apache/felix/contents/prefs/src/main/java/org/apache/felix/prefs/impl/PreferencesManager.java?ref=01133723745324c0a0fb249b64fdbd57a179e728", "patch": "@@ -30,15 +30,15 @@\n /**\n  * This activator registers itself as a service factory for the\n  * preferences service.\n- *\n  */\n public class PreferencesManager\n     implements BundleActivator,\n-               BundleListener,\n-               ServiceFactory,\n-               BackingStoreManager {\n+    BundleListener,\n+    ServiceFactory,\n+    BackingStoreManager {\n \n-    /** The map of already created services. For each client bundle\n+    /**\n+     * The map of already created services. For each client bundle\n      * a new service is created.\n      */\n     protected final Map services = new HashMap();\n@@ -61,13 +61,18 @@\n     /**\n      * @see org.osgi.framework.BundleListener#bundleChanged(org.osgi.framework.BundleEvent)\n      */\n-    public void bundleChanged(BundleEvent event) {\n+    public void bundleChanged(final BundleEvent event) {\n         if (event.getType() == BundleEvent.UNINSTALLED) {\n             final Long bundleId = new Long(event.getBundle().getBundleId());\n-            synchronized ( this.services ) {\n+            synchronized (this.services) {\n                 try {\n-                    this.getStore().remove(bundleId);\n-                } catch (BackingStoreException ignore) {\n+                    final BackingStore store = this.getStore();\n+                    // Only in the case we're already being stopped, this situation could occur, see FELIX-3334\n+                    if (store != null) {\n+                        store.remove(bundleId);\n+                    }\n+                }\n+                catch (final BackingStoreException ignore) {\n                     // we ignore this for now\n                 }\n                 this.services.remove(bundleId);\n@@ -78,15 +83,15 @@ public void bundleChanged(BundleEvent event) {\n     /**\n      * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\n      */\n-    public void start(BundleContext context) throws Exception {\n+    public void start(final BundleContext context) throws Exception {\n         this.context = context;\n \n         // track the log service using a ServiceTracker\n-        this.logTracker = new ServiceTracker( context, LogService.class.getName(), null );\n+        this.logTracker = new ServiceTracker(context, LogService.class.getName(), null);\n         this.logTracker.open();\n \n         // create the tracker for our backing store\n-        this.storeTracker = new ServiceTracker( context, BackingStore.class.getName(), null);\n+        this.storeTracker = new ServiceTracker(context, BackingStore.class.getName(), null);\n         this.storeTracker.open();\n \n         // register this activator as a bundle lister\n@@ -99,25 +104,25 @@ public void start(BundleContext context) throws Exception {\n     /**\n      * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)\n      */\n-    public void stop(BundleContext context) throws Exception {\n+    public void stop(final BundleContext context) throws Exception {\n         // if we get stopped, we should save all in memory representations\n         synchronized (this.services) {\n             final Iterator i = this.services.values().iterator();\n-            while ( i.hasNext() ) {\n-                final PreferencesServiceImpl service = (PreferencesServiceImpl)i.next();\n+            while (i.hasNext()) {\n+                final PreferencesServiceImpl service = (PreferencesServiceImpl) i.next();\n                 this.save(service);\n             }\n             this.services.clear();\n         }\n         // stop tracking store service\n-        if ( this.storeTracker != null ) {\n+        if (this.storeTracker != null) {\n             this.storeTracker.close();\n             this.storeTracker = null;\n         }\n         this.defaultStore = null;\n \n         // stop tracking log service\n-        if ( this.logTracker != null ) {\n+        if (this.logTracker != null) {\n             this.logTracker.close();\n             this.logTracker = null;\n         }\n@@ -128,7 +133,7 @@ public void stop(BundleContext context) throws Exception {\n     /**\n      * @see org.osgi.framework.ServiceFactory#getService(org.osgi.framework.Bundle, org.osgi.framework.ServiceRegistration)\n      */\n-    public Object getService(Bundle bundle, ServiceRegistration reg) {\n+    public Object getService(final Bundle bundle, final ServiceRegistration reg) {\n         final Long bundleId = new Long(bundle.getBundleId());\n \n         synchronized (this.services) {\n@@ -148,37 +153,39 @@ public Object getService(Bundle bundle, ServiceRegistration reg) {\n     /**\n      * @see org.osgi.framework.ServiceFactory#ungetService(org.osgi.framework.Bundle, org.osgi.framework.ServiceRegistration, java.lang.Object)\n      */\n-    public void ungetService(Bundle bundle, ServiceRegistration reg, Object s) {\n+    public void ungetService(final Bundle bundle, final ServiceRegistration reg, final Object s) {\n         final Long bundleId = new Long(bundle.getBundleId());\n         // we save all the preferences\n-        synchronized ( this.services ) {\n+        synchronized (this.services) {\n             final PreferencesServiceImpl service = (PreferencesServiceImpl) this.services.get(bundleId);\n-            if ( service != null ) {\n+            if (service != null) {\n                 this.save(service);\n             }\n         }\n     }\n \n     /**\n      * Save all preferences for this service.\n+     *\n      * @param service\n      */\n-    protected void save(PreferencesServiceImpl service) {\n+    protected void save(final PreferencesServiceImpl service) {\n         final Iterator i = service.getAllPreferences().iterator();\n-        while ( i.hasNext() ) {\n-            final PreferencesImpl prefs = (PreferencesImpl)i.next();\n+        while (i.hasNext()) {\n+            final PreferencesImpl prefs = (PreferencesImpl) i.next();\n             try {\n                 this.getStore().store(prefs);\n-            } catch (BackingStoreException ignore) {\n+            }\n+            catch (final BackingStoreException ignore) {\n                 // we ignore this\n             }\n         }\n     }\n \n-    protected void log( int level, String message, Throwable t ) {\n-        final LogService log = ( LogService ) this.logTracker.getService();\n-        if ( log != null ) {\n-            log.log( level, message, t );\n+    protected void log(final int level, final String message, final Throwable t) {\n+        final LogService log = (LogService) this.logTracker.getService();\n+        if (log != null) {\n+            log.log(level, message, t);\n             return;\n         }\n     }\n@@ -187,18 +194,23 @@ protected void log( int level, String message, Throwable t ) {\n      * @see org.apache.felix.prefs.BackingStoreManager#getStore()\n      */\n     public BackingStore getStore() {\n+        if (this.storeTracker == null) {\n+            // We're being stopped already...\n+            return null;\n+        }\n+\n         // has the service changed?\n         int currentCount = this.storeTracker.getTrackingCount();\n         BackingStore service = (BackingStore) this.storeTracker.getService();\n-        if ( service != null && this.storeTrackingCount < currentCount ) {\n+        if (service != null && this.storeTrackingCount < currentCount) {\n             this.storeTrackingCount = currentCount;\n             this.cleanupStore(service);\n         }\n-        if ( service == null ) {\n+        if (service == null) {\n             // no service available use default store\n-            if ( this.defaultStore == null ) {\n-                synchronized ( this ) {\n-                    if ( this.defaultStore == null ) {\n+            if (this.defaultStore == null) {\n+                synchronized (this) {\n+                    if (this.defaultStore == null) {\n                         this.defaultStore = new DataFileBackingStoreImpl(this.context);\n                         this.cleanupStore(this.defaultStore);\n                     }\n@@ -212,23 +224,25 @@ public BackingStore getStore() {\n \n     /**\n      * Clean up the store and remove preferences for deleted bundles.\n+     *\n      * @param store\n      */\n-    protected void cleanupStore(BackingStore store) {\n+    protected void cleanupStore(final BackingStore store) {\n         // check which bundles are available\n         final Long[] availableBundleIds = store.availableBundles();\n \n         // now check the bundles, for which we have preferences, if they are still\n         // in service and delete the preferences where the bundles are out of service.\n         // we synchronize on services in order to get not disturbed by a bundle event\n-        synchronized ( this.services ) {\n-            for(int i=0; i<availableBundleIds.length; i++) {\n+        synchronized (this.services) {\n+            for (int i = 0; i < availableBundleIds.length; i++) {\n                 final Long bundleId = availableBundleIds[i];\n                 final Bundle bundle = this.context.getBundle(bundleId.longValue());\n                 if (bundle == null || bundle.getState() == Bundle.UNINSTALLED) {\n                     try {\n                         store.remove(bundleId);\n-                    } catch (BackingStoreException ignore) {\n+                    }\n+                    catch (final BackingStoreException ignore) {\n                         // we ignore this for now\n                     }\n                 }", "filename": "prefs/src/main/java/org/apache/felix/prefs/impl/PreferencesManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3556a415c2b09021a46624d6b27c3ae41350a8ce", "parent": "https://github.com/apache/felix/commit/a29ef08af1aa29cdffa068c5bf02b4f00f3facb1", "message": "FELIX-2964 (NPE on some dependency manager adapters, when auto-configuration mode is disabled)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1125823 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_118", "file": [{"additions": 7, "raw_url": "https://github.com/apache/felix/raw/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/AbstractDecorator.java", "blob_url": "https://github.com/apache/felix/blob/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/AbstractDecorator.java", "sha": "c77a62893d6d93827a74931ced4b52138ab37cd0", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/AbstractDecorator.java?ref=3556a415c2b09021a46624d6b27c3ae41350a8ce", "patch": "@@ -44,6 +44,13 @@\n     \n     public abstract Component createService(Object[] properties);\n     \n+    /**\n+     * Catches our DependencyManager handle from our component init method.\n+     */\n+    public void init(Component c) {\n+        m_manager = c.getDependencyManager();\n+    }\n+    \n     /**\n      * Extra method, which may be used by sub-classes, when adaptee has changed.\n      * For now, it's only used by the FactoryConfigurationAdapterImpl class, ", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/AbstractDecorator.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/BundleAdapterServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/BundleAdapterServiceImpl.java", "sha": "84b7ce6ea3c0e3cb67e9e827688d5d0943e2066c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/BundleAdapterServiceImpl.java?ref=3556a415c2b09021a46624d6b27c3ae41350a8ce", "patch": "@@ -95,6 +95,7 @@ public Component createService(Object[] properties) {\n             for (int i = 0; i < m_stateListeners.size(); i ++) {\n                 service.addStateListener((ComponentStateListener) m_stateListeners.get(i));\n             }\n+            configureAutoConfigState(service, m_component);\n             return service;\n         }\n     }", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/BundleAdapterServiceImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/felix/raw/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/FactoryConfigurationAdapterServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/FactoryConfigurationAdapterServiceImpl.java", "sha": "31deebad4f3f88c282eeee79417623bb4f4ef6a7", "changes": 10, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/FactoryConfigurationAdapterServiceImpl.java?ref=3556a415c2b09021a46624d6b27c3ae41350a8ce", "patch": "@@ -68,10 +68,7 @@ public FactoryConfigurationAdapterServiceImpl(DependencyManager dm, String facto\n     /**\n      * Creates, updates, or removes a service, when a ConfigAdmin factory configuration is created/updated or deleted.\n      */\n-    public class AdapterImpl extends AbstractDecorator implements ManagedServiceFactory {\n-        // Our injected dependency manager\n-        protected volatile DependencyManager m_dm;\n-        \n+    public class AdapterImpl extends AbstractDecorator implements ManagedServiceFactory {        \n         // Our Managed Service Factory PID\n         protected String m_factoryPid;\n         \n@@ -109,7 +106,7 @@ public String getName() {\n          */\n         public Component createService(Object[] properties) {\n             Dictionary settings = (Dictionary) properties[0];     \n-            Component newService = m_dm.createComponent();        \n+            Component newService = m_manager.createComponent();        \n             Object impl = null;\n             \n             try {\n@@ -133,12 +130,13 @@ public Component createService(Object[] properties) {\n             newService.setInterface(m_serviceInterfaces, serviceProperties);\n             newService.setImplementation(impl);\n             List dependencies = m_component.getDependencies();\n-            newService.add(dependencies);\n+            newService.add(dependencies); // TODO check if we should create a copy of dependencies ?\n             newService.setComposition(m_compositionInstance, m_compositionMethod); // if not set, no effect\n             newService.setCallbacks(m_callbackObject, m_init, m_start, m_stop, m_destroy); // if not set, no effect\n             for (int i = 0; i < m_stateListeners.size(); i ++) {\n                 newService.addStateListener((ComponentStateListener) m_stateListeners.get(i));\n             }\n+            configureAutoConfigState(newService, m_component);\n             return newService;\n         }\n ", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/FactoryConfigurationAdapterServiceImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ResourceAdapterServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/3556a415c2b09021a46624d6b27c3ae41350a8ce/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ResourceAdapterServiceImpl.java", "sha": "f8823f274c191c9a217c5e82bb80197119af77cc", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ResourceAdapterServiceImpl.java?ref=3556a415c2b09021a46624d6b27c3ae41350a8ce", "patch": "@@ -118,6 +118,8 @@ public Component createService(Object[] properties) {\n                 .setCallbacks(m_callbackObject, m_init, m_start, m_stop, m_destroy) // if not set, no effect\n                 .add(resourceDependency);\n             \n+            configureAutoConfigState(service, m_component);\n+\n             for (int i = 0; i < dependencies.size(); i++) {\n                 service.add(((Dependency) dependencies.get(i)).createCopy());\n             }", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ResourceAdapterServiceImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/693525e29e4677f7ea4434e6c326416d699a1110", "parent": "https://github.com/apache/felix/commit/442d85feb7830cf168cf10ac907ddc1b8a619ef6", "message": "Fix NPE bug and lack of output for unmatched search. (FELIX-2937, FELIX-2938)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1097224 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_119", "file": [{"additions": 10, "raw_url": "https://github.com/apache/felix/raw/693525e29e4677f7ea4434e6c326416d699a1110/gogo/command/src/main/java/org/apache/felix/gogo/command/OBR.java", "blob_url": "https://github.com/apache/felix/blob/693525e29e4677f7ea4434e6c326416d699a1110/gogo/command/src/main/java/org/apache/felix/gogo/command/OBR.java", "sha": "a8231ed6e253533f39669131741930a1153b4cb3", "changes": 12, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/command/src/main/java/org/apache/felix/gogo/command/OBR.java?ref=693525e29e4677f7ea4434e6c326416d699a1110", "patch": "@@ -272,7 +272,7 @@ public void info(\n                 targetVersion = args[argIdx].substring(idx + 1);\n             }\n             Resource[] resources = searchRepository(ra, targetName, targetVersion);\n-            if (resources == null)\n+            if ((resources == null) || (resources.length == 0))\n             {\n                 System.err.println(\"Unknown bundle and/or version: \" + args[argIdx]);\n             }\n@@ -507,13 +507,21 @@ public void javadoc(\n         try\n         {\n             Bundle bundle = m_bc.getBundle(Long.parseLong(targetId));\n-            targetId = bundle.getSymbolicName();\n+            if (bundle != null)\n+            {\n+                targetId = bundle.getSymbolicName();\n+            }\n+            else\n+            {\n+                return null;\n+            }\n         }\n         catch (NumberFormatException ex)\n         {\n             // It was not a number, so ignore.\n         }\n \n+\n         // The targetId may be a bundle name or a bundle symbolic name,\n         // so create the appropriate LDAP query.\n         StringBuffer sb = new StringBuffer(\"(|(presentationname=\");", "filename": "gogo/command/src/main/java/org/apache/felix/gogo/command/OBR.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/fb896520429d8c36daef99bc4e78ef206aece219", "parent": "https://github.com/apache/felix/commit/6421981d208bb3ffd8ba32024f04d05df0d32992", "message": "FELIX-2860 Prevent NPE if no *.properties entries providing localization can be found in the bundle\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1074087 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_120", "file": [{"additions": 16, "raw_url": "https://github.com/apache/felix/raw/fb896520429d8c36daef99bc4e78ef206aece219/metatype/src/main/java/org/apache/felix/metatype/DefaultMetaTypeProvider.java", "blob_url": "https://github.com/apache/felix/blob/fb896520429d8c36daef99bc4e78ef206aece219/metatype/src/main/java/org/apache/felix/metatype/DefaultMetaTypeProvider.java", "sha": "4bf38558abb14a5656bb1ab6a026cd8296cebbd7", "changes": 28, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/felix/contents/metatype/src/main/java/org/apache/felix/metatype/DefaultMetaTypeProvider.java?ref=fb896520429d8c36daef99bc4e78ef206aece219", "patch": "@@ -124,21 +124,25 @@ public Bundle getBundle()\n                 pattern = localePrefix.substring( lastSlash + 1 );\n             }\n \n-            Enumeration entries = getBundle().findEntries( path, pattern + \"*.properties\", false );\n             TreeSet localeSet = new TreeSet();\n-            while ( entries.hasMoreElements() )\n+\n+            Enumeration entries = getBundle().findEntries( path, pattern + \"*.properties\", false );\n+            if ( entries != null )\n             {\n-                URL url = ( URL ) entries.nextElement();\n-                String name = url.getPath();\n-                name = name.substring( name.lastIndexOf( '/' ) + 1 + pattern.length(), name.length()\n-                    - \".properties\".length() );\n-                if ( name.startsWith( \"_\" ) )\n-                {\n-                    name = name.substring( 1 );\n-                }\n-                if ( name.length() > 0 )\n+                while ( entries.hasMoreElements() )\n                 {\n-                    localeSet.add( name );\n+                    URL url = ( URL ) entries.nextElement();\n+                    String name = url.getPath();\n+                    name = name.substring( name.lastIndexOf( '/' ) + 1 + pattern.length(), name.length()\n+                        - \".properties\".length() );\n+                    if ( name.startsWith( \"_\" ) )\n+                    {\n+                        name = name.substring( 1 );\n+                    }\n+                    if ( name.length() > 0 )\n+                    {\n+                        localeSet.add( name );\n+                    }\n                 }\n             }\n ", "filename": "metatype/src/main/java/org/apache/felix/metatype/DefaultMetaTypeProvider.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6ae05144fa041db1898c28daab3244e8d7ee9d0d", "parent": "https://github.com/apache/felix/commit/a44649edd369a4444c7682e62ab68b1851ad6af9", "message": "Fixed a potential NPE that seemed to occur under specific circumstances when the component was stopped.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1062015 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_121", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/6ae05144fa041db1898c28daab3244e8d7ee9d0d/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ComponentImpl.java", "blob_url": "https://github.com/apache/felix/blob/6ae05144fa041db1898c28daab3244e8d7ee9d0d/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ComponentImpl.java", "sha": "d368216c112be611137a73ade4d6b581d2a1f11e", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ComponentImpl.java?ref=6ae05144fa041db1898c28daab3244e8d7ee9d0d", "patch": "@@ -397,9 +397,9 @@ public void dependencyUnavailable(final Dependency dependency) {\n     public synchronized void start() {\n     \tif (m_serviceRegistration == null) {\n \t        m_serviceRegistration = m_context.registerService(ComponentDeclaration.class.getName(), this, null);\n-\t    \tState oldState, newState;\n+\t        State oldState, newState;\n \t        synchronized (m_dependencies) {\n-\t        \toldState = m_state;\n+\t            oldState = m_state;\n \t            newState = new State((List) m_dependencies.clone(), true, m_isInstantiated, m_isBound);\n \t            m_state = newState;\n \t        }\n@@ -409,15 +409,15 @@ public synchronized void start() {\n \n     public synchronized void stop() {\n     \tif (m_serviceRegistration != null) {\n-\t    \tState oldState, newState;\n+\t        m_serviceRegistration.unregister();\n+\t        m_serviceRegistration = null;\n+\t        State oldState, newState;\n \t        synchronized (m_dependencies) {\n-\t        \toldState = m_state;\n+\t            oldState = m_state;\n \t            newState = new State((List) m_dependencies.clone(), false, m_isInstantiated, m_isBound);\n \t            m_state = newState;\n \t        }\n \t        calculateStateChanges(oldState, newState);\n-\t        m_serviceRegistration.unregister();\n-\t        m_serviceRegistration = null;\n     \t}\n     }\n ", "filename": "dependencymanager/core/src/main/java/org/apache/felix/dm/impl/ComponentImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/2e83fe94fe90792f215d15d9d9a44e8b25364e67", "parent": "https://github.com/apache/felix/commit/80a15c40ed1725fb4b95983d95c362fc2a46dfff", "message": "Avoid a potential NPE in arch\n\nClean the output of the manipulator during annotation processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1058231 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_122", "file": [{"additions": 14, "raw_url": "https://github.com/apache/felix/raw/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/core/src/main/java/org/apache/felix/ipojo/PrimitiveInstanceDescription.java", "blob_url": "https://github.com/apache/felix/blob/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/core/src/main/java/org/apache/felix/ipojo/PrimitiveInstanceDescription.java", "sha": "e0662518d617e87185229f04ece09e6f3a623f64", "changes": 28, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/PrimitiveInstanceDescription.java?ref=2e83fe94fe90792f215d15d9d9a44e8b25364e67", "patch": "@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -34,11 +34,11 @@\n \n /**\n  * Primitive Instance Description.\n- * \n+ *\n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n public class PrimitiveInstanceDescription extends InstanceDescription {\n-    \n+\n     /**\n      * Creates a Primitive Instance Description.\n      * @param type the component type description\n@@ -64,7 +64,7 @@ public PrimitiveInstanceDescription(ComponentTypeDescription type, InstanceManag\n             return new String[0];\n         }\n     }\n-    \n+\n     /**\n      * Gets the instance service dependencies.\n      * @return the set of dependency description or an empty array if\n@@ -79,7 +79,7 @@ public PrimitiveInstanceDescription(ComponentTypeDescription type, InstanceManag\n                     .getDescription()).getDependencies();\n         }\n     }\n-    \n+\n     /**\n      * Gets the instance service dependency matching with the given service specification or id.\n      * @param specification the service specification of the looked specification.\n@@ -97,12 +97,12 @@ public DependencyDescription getDependency(String specification) {\n                         || specification.equals(deps[i].getSpecification())) {\n                     return deps[i];\n                 }\n-                        \n+\n             }\n         }\n         return null;\n     }\n-    \n+\n     /**\n      * Gets the instance provided service matching with the given service specification.\n      * @param specification the provided specification of the looked provided service.\n@@ -120,12 +120,12 @@ public ProvidedServiceDescription getProvidedService(String specification) {\n                     if (specification.equals(str[j])) {\n                         return pss[i];\n                     }\n-                }        \n+                }\n             }\n         }\n         return null;\n     }\n-    \n+\n     /**\n      * Gets the instance provided service.\n      * @return the set of provided service description or an empty array if\n@@ -140,7 +140,7 @@ public ProvidedServiceDescription getProvidedService(String specification) {\n                     .getDescription()).getProvidedServices();\n         }\n     }\n-    \n+\n     /**\n      * Gets the instance properties.\n      * @return the set of property descriptions or an empty array if\n@@ -155,7 +155,7 @@ public ProvidedServiceDescription getProvidedService(String specification) {\n                     .getDescription()).getProperties();\n         }\n     }\n-    \n+\n     /**\n      * Gets the instance description.\n      * Overridden to add created objects.\n@@ -165,14 +165,14 @@ public Element getDescription() {\n         Element elem = super.getDescription();\n         // Created Object (empty is composite)\n         String[] objs = getCreatedObjects();\n-        for (int i = 0; i < objs.length; i++) {\n+        for (int i = 0; objs != null  && i < objs.length; i++) {\n             Element obj = new Element(\"Object\", \"\");\n             obj.addAttribute(new Attribute(\"name\", ((Object) objs[i]).toString()));\n             elem.addElement(obj);\n         }\n         return elem;\n     }\n-    \n-    \n+\n+\n \n }", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/PrimitiveInstanceDescription.java"}, {"additions": 3, "raw_url": "https://github.com/apache/felix/raw/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "blob_url": "https://github.com/apache/felix/blob/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "sha": "e7cf61d155b9cc5e05eab81a5990d2619ed6b19e", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java?ref=2e83fe94fe90792f215d15d9d9a44e8b25364e67", "patch": "@@ -300,7 +300,8 @@ private void computeAnnotations(byte[] inC) {\n         cr.accept(collector, 0);\n \n         if (collector.isIgnoredBecauseOfMissingComponent()) {\n-            warn(\"Annotation processing ignored in \" + collector.getClassName() + \" - @Component missing\");\n+        \t// No @Component, just skip.\n+            //warn(\"Annotation processing ignored in \" + collector.getClassName() + \" - @Component missing\");\n         } else if (collector.isComponentType()) {\n             boolean toskip = false;\n             for (int i = 0; !toskip && i < m_metadata.size(); i++) {\n@@ -329,7 +330,7 @@ private void computeAnnotations(byte[] inC) {\n \n                 // Instantiate ?\n                 if (collector.getInstanceDeclaration() != null) {\n-                    warn(\"Declaring an empty instance of \" + elem.getAttribute(\"classname\"));\n+                    //warn(\"Declaring an empty instance of \" + elem.getAttribute(\"classname\"));\n                     m_metadata.add(collector.getInstanceDeclaration());\n                 }\n             }", "filename": "ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/NoAnnotation.java", "blob_url": "https://github.com/apache/felix/blob/2e83fe94fe90792f215d15d9d9a44e8b25364e67/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/NoAnnotation.java", "sha": "8e248460895beadd581e879d727236e51c580918", "changes": 5, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/NoAnnotation.java?ref=2e83fe94fe90792f215d15d9d9a44e8b25364e67", "patch": "@@ -0,0 +1,5 @@\n+package org.apache.felix.ipojo.test.scenarios.component;\n+\n+public class NoAnnotation {\n+\n+}", "filename": "ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/NoAnnotation.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3092530d0081bf071ac344e3d7e6dd88d0f7b608", "parent": "https://github.com/apache/felix/commit/6acd4ae6950212601b26d1590be43bcfb84ece01", "message": "Configure the RAT plugin for the webconsole-plugin project\n\nAdd a test about a potential NPE in the Annotation Collector.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1055816 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_123", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/annotations/MetadataCollector.java", "blob_url": "https://github.com/apache/felix/blob/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/annotations/MetadataCollector.java", "sha": "6527355fd61887899e5370efe761892ca7112ea1", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/annotations/MetadataCollector.java?ref=3092530d0081bf071ac344e3d7e6dd88d0f7b608", "patch": "@@ -219,11 +219,16 @@ public MethodVisitor visitMethod(int access, String name, String desc, String si\n      */\n     public void visitEnd() {\n         // If m_elem (Component) is null, print a warning and ignore.\n-        if (m_elem == null  && ! m_elements.isEmpty()) {\n+        if (m_elem == null  &&  ! m_elements.isEmpty()) {\n             m_ignoredBecauseOfMissingComponent = true;\n             return;\n         }\n \n+        if (! m_containsComponentAnnotation) {\n+        \tm_ignoredBecauseOfMissingComponent = true;\n+            return;\n+        }\n+\n         // Recompute the tree\n         Set elems = getElements().keySet();\n         Iterator it = elems.iterator();", "filename": "ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/annotations/MetadataCollector.java"}, {"additions": 10, "raw_url": "https://github.com/apache/felix/raw/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/error/AbstractClass.java", "blob_url": "https://github.com/apache/felix/blob/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/error/AbstractClass.java", "sha": "4cc792c7a17bfa4146f9e2a3648a173dcb991a7f", "changes": 10, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/error/AbstractClass.java?ref=3092530d0081bf071ac344e3d7e6dd88d0f7b608", "patch": "@@ -0,0 +1,10 @@\n+package org.apache.felix.ipojo.test.scenarios.component.error;\n+\n+import org.apache.felix.ipojo.annotations.Requires;\n+\n+public abstract class AbstractClass {\n+\n+\t@Requires\n+\tprivate Runnable run;\n+\n+}", "filename": "ipojo/tests/core/annotations/src/main/java/org/apache/felix/ipojo/test/scenarios/component/error/AbstractClass.java"}, {"additions": 7, "raw_url": "https://github.com/apache/felix/raw/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/webconsole-plugin/pom.xml", "blob_url": "https://github.com/apache/felix/blob/3092530d0081bf071ac344e3d7e6dd88d0f7b608/ipojo/webconsole-plugin/pom.xml", "sha": "4a38604a73adbd2b0e079591c4f65216d412c79b", "changes": 13, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/webconsole-plugin/pom.xml?ref=3092530d0081bf071ac344e3d7e6dd88d0f7b608", "patch": "@@ -28,7 +28,7 @@\n   <artifactId>org.apache.felix.ipojo.webconsole</artifactId>\n   <version>1.5.0-SNAPSHOT</version>\n   <name>Apache Felix iPOJO WebConsole Plugins</name>\n-  \n+\n   <description>\n   iPOJO plugin for the Apache Felix Web Console. This plugin allows introspecting an iPOJO system with the Apache Felix\n   Web Console.\n@@ -61,7 +61,7 @@\n               org.apache.felix.ipojo.webconsole\n             </Private-Package>\n             <Import-Package>*</Import-Package>\n-            <Include-Resource> \n+            <Include-Resource>\n               META-INF/LICENSE=LICENSE,\n               META-INF/LICENSE.json=LICENSE.json,\n               META-INF/NOTICE=NOTICE,\n@@ -99,7 +99,8 @@\n             <param>maven-eclipse.xml</param>\n             <param>.checkstyle</param>\n             <param>.externalToolBuilders/*</param>\n-            <param>LICENSE.asm</param>\n+            <param>LICENSE.*</param>\n+\t\t\t<param>DEPENDENCIES</param>\n           </excludes>\n         </configuration>\n       </plugin>\n@@ -118,17 +119,17 @@\n     <dependency>\n       <groupId>org.apache.felix</groupId>\n       <artifactId>org.apache.felix.webconsole</artifactId>\n-      <version>3.1.0</version>\n+      <version>3.1.6</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.felix</groupId>\n       <artifactId>org.apache.felix.ipojo</artifactId>\n-      <version>1.6.2</version>\n+      <version>1.6.4</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.felix</groupId>\n       <artifactId>org.apache.felix.ipojo.annotations</artifactId>\n-      <version>1.6.2</version>\n+      <version>1.6.4</version>\n     </dependency>\n     <dependency>\n       <groupId>org.osgi</groupId>", "filename": "ipojo/webconsole-plugin/pom.xml"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3eb97028bc2d5fb5955da7212577e51598a61b06", "parent": "https://github.com/apache/felix/commit/27f98e32eb1829129cbea60469b78e5552f297fd", "message": "Try a first approach to fix FELIX-2596 DependencyHandler.onObjectCreation throws NPE when bundle is refreshed.\nIf refs is null, exit immediately.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@996286 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_124", "file": [{"additions": 7, "raw_url": "https://github.com/apache/felix/raw/3eb97028bc2d5fb5955da7212577e51598a61b06/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java", "blob_url": "https://github.com/apache/felix/blob/3eb97028bc2d5fb5955da7212577e51598a61b06/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java", "sha": "bdbb269e29b0669e0fa78282e1edd6f4d00709b7", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java?ref=3eb97028bc2d5fb5955da7212577e51598a61b06", "patch": "@@ -247,6 +247,13 @@ protected void onObjectCreation(Object pojo) {\n             refs = getServiceReferences(); // Stack confinement.\n         }\n \n+        // This is a pretty strange case, but we don't have any service.\n+        // This may happen during refresh.\n+        // So we just return.\n+        if (refs == null) {\n+        \treturn;\n+        }\n+\n         // Call bind callback.\n         for (int j = 0; m_callbacks != null && j < m_callbacks.length; j++) { // The array is constant.\n             if (m_callbacks[j].getMethodType() == DependencyCallback.BIND) {", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/5514b9e4dd604c485e984db3701450914bc7e988", "parent": "https://github.com/apache/felix/commit/fa9b86e8ac2f75f1ea353837e61b9f303e488a7c", "message": "Add a test case for missing attributes in filters, which was previously\ncausing an NPE. (FELIX-2401)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@957239 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_125", "file": [{"additions": 46, "raw_url": "https://github.com/apache/felix/raw/5514b9e4dd604c485e984db3701450914bc7e988/framework/src/test/java/org/apache/felix/framework/FilterTest.java", "blob_url": "https://github.com/apache/felix/blob/5514b9e4dd604c485e984db3701450914bc7e988/framework/src/test/java/org/apache/felix/framework/FilterTest.java", "sha": "ceb111412be8381226916fc02bb03eac34d19153", "changes": 46, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/test/java/org/apache/felix/framework/FilterTest.java?ref=5514b9e4dd604c485e984db3701450914bc7e988", "patch": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.framework;\n+\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+import junit.framework.TestCase;\n+import org.osgi.framework.Filter;\n+import org.osgi.framework.FrameworkUtil;\n+\n+public class FilterTest extends TestCase\n+{\n+    public void testMissingAttribute()\n+    {\n+        Dictionary dict = new Hashtable();\n+        dict.put(\"one\", \"one-value\");\n+        dict.put(\"two\", \"two-value\");\n+        dict.put(\"three\", \"three-value\");\n+        Filter filter = null;\n+        try\n+        {\n+            filter = FrameworkUtil.createFilter(\"(missing=value)\");\n+        }\n+        catch (Exception ex)\n+        {\n+            assertTrue(\"Filter should parse: \" + ex, false);\n+        }\n+        assertFalse(\"Filter should not match: \" + filter, filter.match(dict));\n+    }\n+}", "filename": "framework/src/test/java/org/apache/felix/framework/FilterTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/af5c64effa3c62d145e9200130204c7cc56c54c9", "parent": "https://github.com/apache/felix/commit/cacd14f356655ccc52b3e6abf745f2029a1c6d28", "message": "Prevent NPE if value to decode is null (and also shortcut if the value is an empty string)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@926111 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_126", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/af5c64effa3c62d145e9200130204c7cc56c54c9/webconsole/src/main/java/org/apache/felix/webconsole/WebConsoleUtil.java", "blob_url": "https://github.com/apache/felix/blob/af5c64effa3c62d145e9200130204c7cc56c54c9/webconsole/src/main/java/org/apache/felix/webconsole/WebConsoleUtil.java", "sha": "7ff5b55f8ad9a0cffed02fc8a51e164df70a9e0b", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/WebConsoleUtil.java?ref=af5c64effa3c62d145e9200130204c7cc56c54c9", "patch": "@@ -350,6 +350,12 @@ public static final void keyVal(JSONWriter jw, String key, Object value)\n      */\n     public static String urlDecode( final String value )\n     {\n+        // shortcut for empty or missing values\n+        if ( value == null || value.length() == 0 )\n+        {\n+            return null;\n+        }\n+\n         try\n         {\n             return URLDecoder.decode( value, \"UTF-8\" );", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/WebConsoleUtil.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/eb493a3ca0de272bd71d1bc066911b2b74642e67", "parent": "https://github.com/apache/felix/commit/fd89b4deb7018a0fe2a1fb0f126d733175736092", "message": "FELIX-2169: Improve dev:show-tree performance and avoid NPE when no matching export is found\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@918963 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_127", "file": [{"additions": 9, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/descriptors/unix-bin.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/descriptors/unix-bin.xml", "sha": "d148c4803ed48977ed06e9273ed84adacd51c664", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/assembly/src/main/descriptors/unix-bin.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -170,6 +170,15 @@\n                 <include>org.ops4j.pax.url:pax-url-wrap</include>\n             </includes>\n         </dependencySet>\n+       <dependencySet>\n+            <outputDirectory>/system</outputDirectory>\n+            <unpack>false</unpack>\n+            <useProjectArtifact>false</useProjectArtifact>\n+            <outputFileNameMapping>org/apache/felix/karaf/${artifact.artifactId}/${artifact.baseVersion}/${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>\n+            <includes>\n+                <include>org.apache.felix.karaf:org.apache.felix.karaf.commons</include>\n+            </includes>\n+        </dependencySet>\n         <dependencySet>\n             <outputDirectory>/system</outputDirectory>\n             <unpack>false</unpack>", "filename": "karaf/assembly/src/main/descriptors/unix-bin.xml"}, {"additions": 9, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/descriptors/windows-bin.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/descriptors/windows-bin.xml", "sha": "995eed193ac1f1de3781a198b35d2e452e3cb2ed", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/assembly/src/main/descriptors/windows-bin.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -162,6 +162,15 @@\n                 <include>org.ops4j.pax.url:pax-url-wrap</include>\n             </includes>\n         </dependencySet>\n+        <dependencySet>\n+            <outputDirectory>/system</outputDirectory>\n+            <unpack>false</unpack>\n+            <useProjectArtifact>false</useProjectArtifact>\n+            <outputFileNameMapping>org/apache/felix/karaf/${artifact.artifactId}/${artifact.baseVersion}/${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>\n+            <includes>\n+                <include>org.apache.felix.karaf:org.apache.felix.karaf.commons</include>\n+            </includes>\n+        </dependencySet>\n         <dependencySet>\n             <outputDirectory>/system</outputDirectory>\n             <unpack>false</unpack>", "filename": "karaf/assembly/src/main/descriptors/windows-bin.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/filtered-resources/etc/startup.properties", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/assembly/src/main/filtered-resources/etc/startup.properties", "sha": "63c3cd0ada9fbdd813a46ca3073eb7674d6f6c35", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/assembly/src/main/filtered-resources/etc/startup.properties?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -36,6 +36,7 @@ org/apache/felix/org.apache.felix.fileinstall/${felix.fileinstall.version}/org.a\n #\n org/apache/aries/blueprint/org.apache.aries.blueprint/${aries.blueprint.version}/org.apache.aries.blueprint-${aries.blueprint.version}.jar=20\n \n+org/apache/felix/karaf/org.apache.felix.karaf.commons/${pom.version}/org.apache.felix.karaf.commons-${pom.version}.jar=30\n org/apache/felix/gogo/org.apache.felix.gogo.runtime/${felix.gogo.version}/org.apache.felix.gogo.runtime-${felix.gogo.version}.jar=30\n org/apache/felix/karaf/shell/org.apache.felix.karaf.shell.console/${pom.version}/org.apache.felix.karaf.shell.console-${pom.version}.jar=30\n org/apache/felix/karaf/deployer/org.apache.felix.karaf.deployer.spring/${pom.version}/org.apache.felix.karaf.deployer.spring-${pom.version}.jar=30", "filename": "karaf/assembly/src/main/filtered-resources/etc/startup.properties"}, {"additions": 70, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/commons/pom.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/commons/pom.xml", "sha": "f491e69987d42efbf384deaf9c91e7c00cf25048", "changes": 70, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/commons/pom.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <!--\n+\n+      Licensed to the Apache Software Foundation (ASF) under one or more\n+      contributor license agreements.  See the NOTICE file distributed with\n+      this work for additional information regarding copyright ownership.\n+      The ASF licenses this file to You under the Apache License, Version 2.0\n+      (the \"License\"); you may not use this file except in compliance with\n+      the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+      Unless required by applicable law or agreed to in writing, software\n+      distributed under the License is distributed on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+      See the License for the specific language governing permissions and\n+      limitations under the License.\n+  -->\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <artifactId>karaf</artifactId>\n+    <groupId>org.apache.felix.karaf</groupId>\n+    <version>1.5.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <groupId>org.apache.felix.karaf</groupId>\n+  <artifactId>org.apache.felix.karaf.commons</artifactId>\n+  <version>1.5.0-SNAPSHOT</version>\n+  <packaging>bundle</packaging>\n+  <name>Apache Felix Karaf :: Commons</name>\n+\n+  <properties>\n+    <appendedResourcesDirectory>${basedir}/../etc/appended-resources</appendedResourcesDirectory>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.felix</groupId>\n+      <artifactId>org.osgi.core</artifactId>\n+      <scope>provided</scope>\n+    </dependency>    \n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>\n+        <artifactId>maven-bundle-plugin</artifactId>\n+        <configuration>\n+          <instructions>\n+            <Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>\n+            <Export-Package>${pom.artifactId}*;version=${project.version}</Export-Package>\n+            <Import-Package>\n+                !${pom.artifactId}*,\n+                *\n+            </Import-Package>\n+            <_versionpolicy>${bnd.version.policy}</_versionpolicy>\n+          </instructions>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+</project>\n\\ No newline at end of file", "filename": "karaf/commons/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/commons/src/main/java/org/apache/felix/karaf/commons/osgi/VersionRange.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/commons/src/main/java/org/apache/felix/karaf/commons/osgi/VersionRange.java", "previous_filename": "karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/VersionRange.java", "sha": "47045deefc36bc8e74695906c9d4c1ed449d59e6", "changes": 2, "status": "renamed", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/commons/src/main/java/org/apache/felix/karaf/commons/osgi/VersionRange.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.felix.karaf.features.internal;\n+package org.apache.felix.karaf.commons.osgi;\n \n import org.osgi.framework.Version;\n ", "filename": "karaf/commons/src/main/java/org/apache/felix/karaf/commons/osgi/VersionRange.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/features/core/pom.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/features/core/pom.xml", "sha": "58c19ea8d6d1a27ea7583e686f44345523574d90", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/features/core/pom.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -54,6 +54,11 @@\n             <artifactId>org.apache.felix.bundlerepository</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.apache.felix.karaf</groupId>\n+            <artifactId>org.apache.felix.karaf.commons</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.felix.karaf.shell</groupId>\n             <artifactId>org.apache.felix.karaf.shell.console</artifactId>", "filename": "karaf/features/core/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java", "sha": "5bbf00067fdb2e6fd50fbf9612df1f1f2e4c0abc", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -40,6 +40,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import org.apache.felix.karaf.commons.osgi.VersionRange;\n import org.apache.felix.karaf.features.FeaturesService;\n import org.apache.felix.karaf.features.Feature;\n import org.apache.felix.karaf.features.Repository;", "filename": "karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/pom.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/pom.xml", "sha": "88eeb5cd6b2c98fd5ec18dcd938a887f9218067e", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/pom.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -35,6 +35,7 @@\n \n     <modules>\n         <module>main</module>\n+        <module>commons</module>\n         <module>features</module>\n         <module>admin</module>\n         <module>deployer</module>\n@@ -170,6 +171,11 @@\n                 <artifactId>org.apache.felix.karaf.client</artifactId>\n                 <version>${pom.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.apache.felix.karaf</groupId>\n+                <artifactId>org.apache.felix.karaf.commons</artifactId>\n+                <version>${pom.version}</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.apache.felix.karaf.deployer</groupId>\n                 <artifactId>org.apache.felix.karaf.deployer.spring</artifactId>", "filename": "karaf/pom.xml"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/pom.xml", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/pom.xml", "sha": "406df26f0c3b83d47c8713cead0a2d20e5a2b693", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/pom.xml?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -36,6 +36,11 @@\n         <artifactId>org.apache.felix.karaf.shell.console</artifactId>\n     </dependency>\n \n+    <dependency>\n+        <groupId>org.apache.felix.karaf</groupId>\n+        <artifactId>org.apache.felix.karaf.commons</artifactId>\n+    </dependency>\n+\n     <dependency>\n         <groupId>org.ops4j.pax.url</groupId>\n         <artifactId>pax-url-wrap</artifactId>", "filename": "karaf/shell/dev/pom.xml"}, {"additions": 51, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/ShowBundleTree.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/ShowBundleTree.java", "sha": "c46127489156039713eb3df35b37155dedf70c47", "changes": 74, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/ShowBundleTree.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -48,16 +48,19 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(ShowBundleTree.class);\n \n-    // a cache of all exported packages\n-    private ExportedPackage[] allExportedPackages;\n+    private Tree<Bundle> tree;\n \n     @Override\n     protected void doExecute(Bundle bundle) throws Exception {\n+        long start = System.currentTimeMillis();\n         // let's do the real work here\n         printHeader(bundle);\n-        Tree<Bundle> tree = createTree(bundle);\n+        tree = new Tree<Bundle>(bundle);\n+        createTree(bundle);\n         printTree(tree);\n         printDuplicatePackages(tree);\n+        LOGGER.debug(format(\"Dependency tree calculated in %d ms\",\n+                            System.currentTimeMillis() - start));\n     }\n \n     /*\n@@ -119,44 +122,69 @@ private void printDuplicatePackages(Tree<Bundle> tree) {\n     /*\n      * Creates the bundle tree\n      */\n-    protected Tree<Bundle> createTree(Bundle bundle) {\n-        Tree<Bundle> tree = new Tree<Bundle>(bundle);\n-        Set<Bundle> trail = new HashSet<Bundle>();\n+    protected void createTree(Bundle bundle) {\n         if (bundle.getState() >= Bundle.RESOLVED) {\n-            createNode(tree, trail);\n+            createNode(tree);\n         } else {\n-            for (Import i : Import.parse(String.valueOf(bundle.getHeaders().get(\"Import-Package\")))) {\n-                for (ExportedPackage ep : getPackageAdmin().getExportedPackages(i.getPackage())) {\n-                    if (ep.getVersion().compareTo(i.getVersion()) >= 0) {\n-                        if (!bundle.equals(ep.getExportingBundle())) {\n-                            Node child = tree.addChild(ep.getExportingBundle());\n-                            System.out.printf(\"- using %s to resolve import %s%n\", ep.getExportingBundle(), i);\n-                            createNode(child, trail);\n-                        }\n+            createNodesForImports(tree, bundle);\n+        }\n+    }\n+\n+    /*\n+     * Creates nodes for the imports of the bundle (instead of reporting wiring information\n+     */\n+    private void createNodesForImports(Node node, Bundle bundle) {\n+        for (Import i : Import.parse(String.valueOf(bundle.getHeaders().get(\"Import-Package\")),\n+                                     String.valueOf(bundle.getHeaders().get(\"Export-Package\")))) {\n+            createNodeForImport(node, bundle, i);\n+        }\n+    }\n+\n+    /*\n+     * Create a child node for a given import (by finding a matching export in the currently installed bundles)\n+     */\n+    private void createNodeForImport(Node node, Bundle bundle, Import i) {\n+        ExportedPackage[] exporters = getPackageAdmin().getExportedPackages(i.getPackage());\n+        boolean foundMatch = false;\n+        if (exporters != null) {\n+            for (ExportedPackage ep : exporters) {\n+                if (i.getVersion().isInRange(ep.getVersion())) {\n+                    if (bundle.equals(ep.getExportingBundle())) {\n+                        foundMatch = true;\n+                    } else {\n+                        Node child = node.addChild(ep.getExportingBundle());\n+                        System.out.printf(\"- import %s: resolved using %s%n\", i, ep.getExportingBundle());\n+                        foundMatch = true;\n+                        createNode(child);\n                     }\n                 }\n             }\n         }\n-        return tree;\n+        if (!foundMatch) {\n+            System.out.printf(\"- import %s: WARNING - unable to find matching export%n\", i);            \n+        }\n     }\n \n     /*\n      * Creates a node in the bundle tree\n      */\n-    private void createNode(Node<Bundle> node, Set<Bundle> trail) {\n+    private void createNode(Node<Bundle> node) {\n         Bundle bundle = node.getValue();\n         Collection<Bundle> exporters = new HashSet<Bundle>();\n         exporters.addAll(getWiredBundles(bundle).values());\n \n         for (Bundle exporter : exporters) {\n-            if (trail.contains(exporter)) {\n-                LOGGER.debug(format(\"Skipping %s because it already exists in the current tree branch\", exporter));\n+            if (node.hasAncestor(exporter)) {                \n+                LOGGER.debug(format(\"Skipping %s (already exists in the current branch)\", exporter));\n             } else {\n-                trail.add(exporter);\n-                Node child = node.addChild(exporter);\n+                boolean existing = tree.flatten().contains(exporter);\n                 LOGGER.debug(format(\"Adding %s as a dependency for %s\", exporter, bundle));\n-                createNode(child, trail);\n-                trail.remove(exporter);\n+                Node child = node.addChild(exporter);\n+                if (existing) {\n+                    LOGGER.debug(format(\"Skipping children of %s (already exists in another branch)\", exporter));\n+                } else {\n+                    createNode(child);\n+                }\n             }\n         }\n     }", "filename": "karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/ShowBundleTree.java"}, {"additions": 67, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Import.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Import.java", "sha": "321570773787d56e6cdc918b4b7993696fd407aa", "changes": 80, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Import.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -19,15 +19,15 @@\n import java.util.LinkedList;\n import java.util.List;\n \n-import org.osgi.framework.Version;\n+import org.apache.felix.karaf.commons.osgi.VersionRange;\n \n /**\n  * Simple class to model an OSGi Import-Package\n  */\n public class Import {\n \n     private final String packageName;\n-    private final Version version;\n+    private final VersionRange version;\n     private final String value;\n \n     /**\n@@ -38,28 +38,24 @@\n     protected Import(String value) {\n         super();\n         this.value = value;\n-        if (value.contains(\";\")) {\n-            this.packageName = value.split(\";\")[0];\n-        } else {\n-            this.packageName = value;\n-        }\n+        this.packageName = extractPackageName(value);\n         if (value.contains(\"version=\")) {\n             this.version = extractVersion(value);\n         } else {\n-            this.version = Version.emptyVersion;\n+            this.version = VersionRange.infiniteRange;\n         }\n     }\n \n     /*\n      * Extract the version from the string\n      */\n-    private Version extractVersion(String value) {\n+    private VersionRange extractVersion(String value) {\n         int begin = value.indexOf(\"version=\") + 8;\n         int end = value.indexOf(\";\", begin);\n         if (end < 0) {\n-            return Version.parseVersion(unquote(value.substring(begin)));\n+            return VersionRange.parse(unquote(value.substring(begin)));\n         } else {\n-            return Version.parseVersion(unquote(value.substring(begin, end)));\n+            return VersionRange.parse(unquote(value.substring(begin, end)));\n         }\n     }\n \n@@ -74,7 +70,7 @@ public String getPackage() {\n         return packageName;  \n     }\n \n-    public Version getVersion() {\n+    public VersionRange getVersion() {\n         return version;\n     }\n \n@@ -89,9 +85,67 @@ public String toString() {\n      */\n     public static List<Import> parse(String value) {\n         LinkedList<Import> imports = new LinkedList<Import>();\n-        for (String imp : value.split(\",\")) {\n+        for (String imp : split(value)) {\n             imports.add(new Import(imp));\n         }\n         return imports;\n     }\n+\n+    /**\n+     * Parse the value of an Import-Package META-INF header and return\n+     * a list of Import instances, filtering out packages that are in the\n+     * Export-Package META-INF header\n+     *\n+     * @param importValue the value of the Import-Package header\n+     * @param exportValue the value of the Export-Package header\n+     */\n+    public static List<Import> parse(String importValue, String exportValue) {\n+        LinkedList<String> exports = new LinkedList<String>();\n+        for (String exp : split(exportValue)) {\n+            exports.add(extractPackageName(exp));\n+        }\n+        LinkedList<Import> imports = new LinkedList<Import>();\n+        for (Import imp : parse(importValue)) {\n+            if (!exports.contains(imp.getPackage())) {\n+                imports.add(imp);\n+            }\n+        }\n+        return imports;\n+    }\n+\n+    /*\n+     * Extract the package name from the value\n+     * e.g. org.apache.felix.karaf;version=\"1.x\" -> org.apache.felix.karaf\n+     */\n+    private static String extractPackageName(String value) {\n+        if (value.contains(\";\")) {\n+            return value.split(\";\")[0];\n+        } else {\n+            return value;\n+        }\n+    }\n+\n+    /*\n+     * Counts the number of quotes in a String value\n+     */\n+    private static int quotes(String value) {\n+        return value.replaceAll(\"[^\\\"]\", \"\").length();\n+    }\n+\n+    /*\n+     * Split the OSGi headers on the , symbol\n+     */\n+    private static List<String> split(String value) {\n+        List<String> result = new LinkedList<String>();\n+        String[] elements = value.split(\",\");\n+        for (int i = 0; i < elements.length ; i++) {\n+            if (quotes(elements[i]) % 2 == 1) {\n+                // we probably split a version range, so joining it again with the next element\n+                result.add(elements[i] + \",\" + elements[++i]);\n+            } else {\n+                result.add(elements[i]);\n+            }\n+        }\n+        return result;\n+    }\n }", "filename": "karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Import.java"}, {"additions": 14, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Node.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Node.java", "sha": "b266fe4cab76df6335706672e0310c71a435f531", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Node.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -93,6 +93,20 @@ public Node addChild(T value) {\n         return result;\n     }\n \n+    /**\n+     * Check if the node has an ancestor that represents the given value\n+     *\n+     * @param value the node value\n+     * @return <code>true</code> it there's an ancestor that represents the value\n+     */\n+    public boolean hasAncestor(T value) {\n+        if (parent == null) {\n+            return false;\n+        } else {\n+            return value.equals(parent.value) || parent.hasAncestor(value);\n+        }\n+    }\n+\n     /*\n      * Write this node to the PrintWriter.  It should be indented one step\n      * further for every element in the indents array.  If an element in the", "filename": "karaf/shell/dev/src/main/java/org/apache/felix/karaf/shell/dev/util/Node.java"}, {"additions": 21, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/ImportTest.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/ImportTest.java", "sha": "8a2aa14234f8d2d6c4a3555786462c574a0dc83f", "changes": 23, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/ImportTest.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -20,8 +20,9 @@\n \n import static junit.framework.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.felix.karaf.commons.osgi.VersionRange;\n import org.junit.Test;\n-import org.osgi.framework.Version;\n \n /**\n  * Test cases for {@link org.apache.felix.karaf.shell.dev.util.Import}\n@@ -38,7 +39,7 @@ public void createWithPackageName() {\n     public void createWithPackageNameAndVersion() {\n         Import i = new Import(\"org.wip.bar;version=\\\"2.0.0\\\"\");\n         assertEquals(\"org.wip.bar\", i.getPackage());\n-        assertEquals(new Version(\"2.0.0\"), i.getVersion());\n+        assertEquals(VersionRange.parse(\"2.0.0\"), i.getVersion());\n     }\n \n     @Test\n@@ -49,4 +50,22 @@ public void createListOfImports() {\n         assertEquals(\"org.wip.bar\", imports.get(0).getPackage());\n         assertEquals(\"org.wip.foo\", imports.get(1).getPackage());\n     }\n+\n+    @Test\n+    public void createListOfImportsWithVersionRanges() {\n+        List<Import> imports =\n+                Import.parse(\"javax.activation;version=\\\"[0.0,2)\\\",javax.annotation;version=\\\"[0.0,2)\\\"\");\n+        assertNotNull(imports);\n+        assertEquals(2, imports.size());\n+        assertEquals(\"javax.activation\", imports.get(0).getPackage());\n+        assertEquals(\"javax.annotation\", imports.get(1).getPackage());\n+    }\n+\n+    @Test\n+    public void createListOfImportsWithExports() {\n+        List<Import> imports = Import.parse(\"org.wip.bar;version=\\\"2.0.0\\\",org.wip.foo\", \"org.wip.bar;version=\\\"2.0.0\\\"\");\n+        assertNotNull(imports);\n+        assertEquals(1, imports.size());\n+        assertEquals(\"org.wip.foo\", imports.get(0).getPackage());\n+    }\n }", "filename": "karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/ImportTest.java"}, {"additions": 14, "raw_url": "https://github.com/apache/felix/raw/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/TreeTest.java", "blob_url": "https://github.com/apache/felix/blob/eb493a3ca0de272bd71d1bc066911b2b74642e67/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/TreeTest.java", "sha": "c11e2c36c84b6d57225720552221ec8112bc54ff", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/TreeTest.java?ref=eb493a3ca0de272bd71d1bc066911b2b74642e67", "patch": "@@ -24,6 +24,7 @@\n import java.util.Set;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import org.junit.Test;\n@@ -108,6 +109,19 @@ public void flattenTree() throws IOException {\n         assertTrue(elements.contains(\"grandchild\"));\n     }\n \n+    @Test\n+    public void hasAncestor() throws IOException {\n+        Tree<String> tree = new Tree<String>(\"root\");\n+        Node<String> child1 = tree.addChild(\"child1\");\n+        child1.addChild(\"grandchild\");\n+        Node child2 = tree.addChild(\"child2\");\n+        Node node = child2.addChild(\"grandchild2\");\n+\n+        assertTrue(node.hasAncestor(\"child2\"));\n+        assertTrue(node.hasAncestor(\"root\"));\n+        assertFalse(node.hasAncestor(\"child1\"));\n+    }\n+\n     private BufferedReader read(Tree<String> tree) {\n         StringWriter writer = new StringWriter();\n         tree.write(new PrintWriter(writer));", "filename": "karaf/shell/dev/src/test/java/org/apache/felix/karaf/shell/dev/util/TreeTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1a5eb00e2ba52c510b9fb9e2a473c9d570346463", "parent": "https://github.com/apache/felix/commit/64a0d46c36b164f6425a05618145133bbb70acca", "message": "tidy up npe when system bundle does not have framework bundle set (FELIX-2143)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@917456 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_128", "file": [{"additions": 9, "raw_url": "https://github.com/apache/felix/raw/1a5eb00e2ba52c510b9fb9e2a473c9d570346463/sigil/eclipse/search/src/org/apache/felix/sigil/search/SigilSearch.java", "blob_url": "https://github.com/apache/felix/blob/1a5eb00e2ba52c510b9fb9e2a473c9d570346463/sigil/eclipse/search/src/org/apache/felix/sigil/search/SigilSearch.java", "sha": "bf871ff934b496c449412637b3ce1e90bdd7be74", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/eclipse/search/src/org/apache/felix/sigil/search/SigilSearch.java?ref=1a5eb00e2ba52c510b9fb9e2a473c9d570346463", "patch": "@@ -163,9 +163,14 @@ public boolean visit( ISigilBundle bundle )\n                     if ( bundle.isSynchronized() )\n                     {\n                         IPath loc = bundle.getLocation();\n-                        if ( loc.isAbsolute() )\n-                        {\n-                            indexJar( rep, bundle, loc );\n+                        if ( loc == null ) {\n+                            SigilCore.error(\"Location is null for \" + bundle);\n+                        }\n+                        else {\n+                            if ( loc.isAbsolute() )\n+                            {\n+                                indexJar( rep, bundle, loc );\n+                            }\n                         }\n                     }\n                 }\n@@ -193,8 +198,7 @@ private static void indexProject( IBundleRepository rep, ISigilProjectModel sigi\n         }\n         catch ( JavaModelException e )\n         {\n-            // TODO Auto-generated catch block\n-            e.printStackTrace();\n+            SigilCore.error( \"Failed to index project\", e);\n         }\n     }\n ", "filename": "sigil/eclipse/search/src/org/apache/felix/sigil/search/SigilSearch.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/5e192f630a3053ce537ac1c98ec0f0cb246b7bd9", "parent": "https://github.com/apache/felix/commit/15e4adfcdf2d545baf1f829f94ebf15448e1d40e", "message": "tidy up npe caused by adding system bundle repository to repository set (FELIX-2133)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@916032 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_129", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/5e192f630a3053ce537ac1c98ec0f0cb246b7bd9/sigil/common/core/src/org/apache/felix/sigil/core/repository/SystemRepository.java", "blob_url": "https://github.com/apache/felix/blob/5e192f630a3053ce537ac1c98ec0f0cb246b7bd9/sigil/common/core/src/org/apache/felix/sigil/core/repository/SystemRepository.java", "sha": "b39a7b25b66a0e0435cc0a8c2f51ebd553c4f26b", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/common/core/src/org/apache/felix/sigil/core/repository/SystemRepository.java?ref=5e192f630a3053ce537ac1c98ec0f0cb246b7bd9", "patch": "@@ -85,6 +85,9 @@ private synchronized ISigilBundle loadSystemBundle()\n                     info = ModelElementFactory.getInstance().newModelElement( IBundleModelElement.class );\n                 }\n \n+                info.setSymbolicName(\"system bundle\");\n+                info.setName(\"Sigil system bundle\");\n+                \n                 applyProfile( info );\n                 systemBundle.addChild( info );\n             }", "filename": "sigil/common/core/src/org/apache/felix/sigil/core/repository/SystemRepository.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/5e192f630a3053ce537ac1c98ec0f0cb246b7bd9/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/model/util/JavaHelper.java", "blob_url": "https://github.com/apache/felix/blob/5e192f630a3053ce537ac1c98ec0f0cb246b7bd9/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/model/util/JavaHelper.java", "sha": "86ca1e9cb01c82fee04bc45fc32d76bc12be690f", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/model/util/JavaHelper.java?ref=5e192f630a3053ce537ac1c98ec0f0cb246b7bd9", "patch": "@@ -351,13 +351,13 @@ else if ( element instanceof IRequiredBundle )\n     }\n \n \n-    public static Collection<IClasspathEntry> resolveClasspathEntrys( ISigilProjectModel newton,\n+    public static Collection<IClasspathEntry> resolveClasspathEntrys( ISigilProjectModel sigil,\n         IProgressMonitor monitor ) throws CoreException\n     {\n         if ( monitor == null )\n         {\n             monitor = Job.getJobManager().createProgressGroup();\n-            monitor.beginTask( \"Resolving classpath for \" + newton.getSymbolicName(), 2 );\n+            monitor.beginTask( \"Resolving classpath for \" + sigil.getSymbolicName(), 2 );\n         }\n \n         ArrayList<IClasspathEntry> entries = new ArrayList<IClasspathEntry>();\n@@ -368,7 +368,7 @@ else if ( element instanceof IRequiredBundle )\n         IResolution resolution;\n         try\n         {\n-            resolution = SigilCore.getRepositoryManager( newton ).getBundleResolver().resolve( newton, config,\n+            resolution = SigilCore.getRepositoryManager( sigil ).getBundleResolver().resolve( sigil, config,\n                 new ResolutionMonitorAdapter( monitor ) );\n         }\n         catch ( ResolutionException e )\n@@ -381,10 +381,10 @@ else if ( element instanceof IRequiredBundle )\n         Set<ISigilBundle> bundles = resolution.getBundles();\n         for ( ISigilBundle bundle : bundles )\n         {\n-            if ( !bundle.getBundleInfo().getSymbolicName().equals( newton.getSymbolicName() ) )\n+            if ( !sigil.getSymbolicName().equals(bundle.getBundleInfo().getSymbolicName()) )\n             { // discard self reference...\n                 List<IModelElement> matched = resolution.getMatchedRequirements( bundle );\n-                for ( IClasspathEntry cpe : buildClassPathEntry( newton, bundle, bundles, matched, monitor ) )\n+                for ( IClasspathEntry cpe : buildClassPathEntry( sigil, bundle, bundles, matched, monitor ) )\n                 {\n                     entries.add( cpe );\n                 }", "filename": "sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/model/util/JavaHelper.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a5e9fdeab9c7f9e13aba70f31f960793737c290b", "parent": "https://github.com/apache/felix/commit/577300b8d19fe80d82087c6e3512420f62e4bca6", "message": "FELIX-1932: Ensure that a missing reference in an itest gets logged without throwing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@888961 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_130", "file": [{"additions": 38, "raw_url": "https://github.com/apache/felix/raw/a5e9fdeab9c7f9e13aba70f31f960793737c290b/karaf/itests/src/test/java/org/apache/felix/karaf/shell/itests/AbstractIntegrationTest.java", "blob_url": "https://github.com/apache/felix/blob/a5e9fdeab9c7f9e13aba70f31f960793737c290b/karaf/itests/src/test/java/org/apache/felix/karaf/shell/itests/AbstractIntegrationTest.java", "sha": "950a6609d5518a13431a2a305d91d7d3c4f9760b", "changes": 44, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/karaf/itests/src/test/java/org/apache/felix/karaf/shell/itests/AbstractIntegrationTest.java?ref=a5e9fdeab9c7f9e13aba70f31f960793737c290b", "patch": "@@ -16,7 +16,11 @@\n  */\n package org.apache.felix.karaf.shell.itests;\n \n+import java.util.Collection;\n import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.LinkedList;\n+import java.util.List;\n \n import org.ops4j.pax.exam.CoreOptions;\n import org.ops4j.pax.exam.Inject;\n@@ -65,15 +69,14 @@\n             // This is buggy, as the service reference may change i think\n             Object svc = type.cast(tracker.waitForService(timeout));\n             if (svc == null) {\n-\n                 Dictionary dic = bundleContext.getBundle().getHeaders();\n-                System.err.println(\"Test bundle headers: \" + dic);\n-                ServiceReference[] refs = bundleContext.getAllServiceReferences(null, null);\n-                for (ServiceReference ref : refs) {\n+                System.err.println(\"Test bundle headers: \" + explode(dic));\n+\n+                for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null, null))) {\n                     System.err.println(\"ServiceReference: \" + ref);\n                 }\n-                refs = bundleContext.getAllServiceReferences(null, flt);\n-                for (ServiceReference ref : refs) {\n+\n+                for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null, flt))) {\n                     System.err.println(\"Filtered ServiceReference: \" + ref);\n                 }\n \n@@ -105,4 +108,33 @@ public static MavenArtifactProvisionOption mavenBundle(String groupId, String ar\n         return CoreOptions.mavenBundle().groupId(groupId).artifactId(artifactId).versionAsInProject();\n     }\n \n+    /*\n+     * Explode the dictionary into a ,-delimited list of key=value pairs\n+     */\n+    private static String explode(Dictionary dictionary) {\n+        Enumeration keys = dictionary.keys();\n+        StringBuffer result = new StringBuffer();\n+        while (keys.hasMoreElements()) {\n+            Object key = keys.nextElement();\n+            result.append(String.format(\"%s=%s\", key, dictionary.get(key)));\n+            if (keys.hasMoreElements()) {\n+                result.append(\", \");\n+            }\n+        }\n+        return result.toString();\n+    }\n+\n+    /*\n+     * Provides an iterable collection of references, even if the original array is null\n+     */\n+    private static final Collection<ServiceReference> asCollection(ServiceReference[] references) {\n+        List<ServiceReference> result = new LinkedList<ServiceReference>();\n+        if (references != null) {\n+            for (ServiceReference reference : references) {\n+                result.add(reference);\n+            }\n+        }\n+        return result;\n+    }\n+\n }", "filename": "karaf/itests/src/test/java/org/apache/felix/karaf/shell/itests/AbstractIntegrationTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/2687e78d5d36cc7fb8601f869297eaa2469c8438", "parent": "https://github.com/apache/felix/commit/b808d14ae0b2ad3ac2243eb45aff216cafbfb3b8", "message": "Avoid an NPE if the abstract path does not denote a directory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@819679 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_131", "file": [{"additions": 4, "raw_url": "https://github.com/apache/felix/raw/2687e78d5d36cc7fb8601f869297eaa2469c8438/ipojo/online-manipulator/src/main/java/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java", "blob_url": "https://github.com/apache/felix/blob/2687e78d5d36cc7fb8601f869297eaa2469c8438/ipojo/online-manipulator/src/main/java/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java", "sha": "14a9d4aa1765ea4c69244d055fe8e7858ab706c4", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/src/main/java/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java?ref=2687e78d5d36cc7fb8601f869297eaa2469c8438", "patch": "@@ -74,8 +74,10 @@ public IPOJOURLHandler(BundleContext bc) {\n      */\n     public void stop() {\n         File[] files = m_temp.listFiles();\n-        for (int i = 0; i < files.length; i++) {\n-            files[i].delete();\n+        if (files != null) {\n+            for (int i = 0; i < files.length; i++) {\n+                files[i].delete();\n+            }\n         }\n         m_temp.delete();\n     }", "filename": "ipojo/online-manipulator/src/main/java/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1504e7b6a4f4ee5c2a86ee359aa14c846e67be16", "parent": "https://github.com/apache/felix/commit/fd69ad6b9fd510588d858e4e06a31dee1fb59199", "message": "FELIX-1629 : SCR Annotations with Constanst reference may cause NPE. Apply patch from Stefan Seifert\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@818374 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_132", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/1504e7b6a4f4ee5c2a86ee359aa14c846e67be16/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/annotation/defaulttag/Util.java", "blob_url": "https://github.com/apache/felix/blob/1504e7b6a4f4ee5c2a86ee359aa14c846e67be16/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/annotation/defaulttag/Util.java", "sha": "28f71c74b7fc94a6908a6545a3a9e00c03dd5f24", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/src/main/java/org/apache/felix/scrplugin/tags/annotation/defaulttag/Util.java?ref=1504e7b6a4f4ee5c2a86ee359aa14c846e67be16", "patch": "@@ -347,6 +347,14 @@ private static String getAnnotationValue(final AnnotationValue av, final JavaCla\n     {\n         if ( av instanceof AnnotationFieldRef )\n         {\n+            // during prescan of AnnotationTagProviderManager#hasScrPluginAnnotation this method is called without desc attribute\n+            // avoid NPE in this case and just skip value resolving\n+            // FELIX-1629\n+            if ( desc == null)\n+            {\n+                return null;\n+            }\n+\n             // getField throws AIOOBE\n             // return ((AnnotationFieldRef)av).getField().getInitializationExpression();\n             final String s = av.getParameterValue().toString().trim();", "filename": "scrplugin/src/main/java/org/apache/felix/scrplugin/tags/annotation/defaulttag/Util.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f79068aa767a8ba449b18de3965de601ed42a75f", "parent": "https://github.com/apache/felix/commit/f68e29949119dfcc3d877be41cd00f1d9f31ccfd", "message": "Re-work on Felix-1518\nApply Guillaume patch, Fix the potential NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@807115 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_133", "file": [{"additions": 106, "raw_url": "https://github.com/apache/felix/raw/f79068aa767a8ba449b18de3965de601ed42a75f/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "blob_url": "https://github.com/apache/felix/blob/f79068aa767a8ba449b18de3965de601ed42a75f/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "sha": "90a1448c8132b8a6db3b844b2ad916a90084ce25", "changes": 178, "status": "modified", "deletions": 72, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java?ref=f79068aa767a8ba449b18de3965de601ed42a75f", "patch": "@@ -315,7 +315,11 @@ private void computeAnnotations(byte[] inC) {\n                 String name = m_metadata[m_metadata.length - 1].getAttribute(\"classname\");\n                 name = name.replace('.', '/');\n                 name += \".class\";\n-                m_components.add(new ComponentInfo(name, m_metadata[m_metadata.length - 1]));\n+\n+                // Creates the ComponentInfo and store bytecode\n+                ComponentInfo info = new ComponentInfo(name, m_metadata[m_metadata.length - 1]);\n+                info.m_bytecode = inC;\n+                m_components.add(info);\n             }\n         }\n     }\n@@ -348,11 +352,13 @@ private void manipulateJarFile(File out) {\n             Enumeration entries = m_inputJar.entries();\n             while (entries.hasMoreElements()) {\n                 JarEntry curEntry = (JarEntry) entries.nextElement();\n-                // Check if we need to manipulate the class\n+\n+                // If the class was manipulated, write out the manipulated\n+                // version of the bytecode\n                 if (m_classes.containsKey(curEntry.getName())) {\n                     JarEntry je = new JarEntry(curEntry.getName());\n                     byte[] outClazz = (byte[]) m_classes.get(curEntry.getName());\n-                    if (outClazz.length != 0) {\n+                    if (outClazz != null && outClazz.length != 0) {\n                         jos.putNextEntry(je); // copy the entry header to jos\n                         jos.write(outClazz);\n                         jos.closeEntry();\n@@ -452,76 +458,104 @@ private void manipulateDirectory() {\n         }\n \n     }\n-    \n-    /**\n-     * Reads the entry to extract the byte array.\n-     * This method should be called only if the class has to be read.\n-     * The cost of this method is not negligible.\n-     * @param name name of the entry to read from the input jar\n-     * @return the read byte array\n-     * @throws IOException occurs when the entry cannot be read\n-     */\n-    private byte[] readEntry(String name) throws IOException {\n-        InputStream currIn = getInputStream(name);\n-        byte[] in = new byte[0];\n-        int c;\n-        while ((c = currIn.read()) >= 0) {\n-            byte[] in2 = new byte[in.length + 1];\n-            System.arraycopy(in, 0, in2, 0, in.length);\n-            in2[in.length] = (byte) c;\n-            in = in2;\n-        }\n-        currIn.close();\n-        return in;\n-    }\n \n     /**\n      * Manipulate classes of the input Jar.\n      */\n     private void manipulateComponents() {\n-        Enumeration entries = getClassFiles();\n \n-        while (entries.hasMoreElements()) {\n-            String curName = (String) entries.nextElement();\n-            try {\n-                byte[] in = null; // Will store the bytes of the entry if required.\n-                if (!m_ignoreAnnotations) {\n-                    // If we need to process annotations, all classes has to be read.\n-                    in = readEntry(curName);\n-                    computeAnnotations(in); // This method adds the class to the\n-                                            // component list.\n+        // 1. Discover components described with annotations\n+        // Only do this if annotations are enabled\n+        if (!m_ignoreAnnotations) {\n+            Enumeration entries = getClassFiles();\n+\n+            while (entries.hasMoreElements()) {\n+                String curName = (String) entries.nextElement();\n+                try {\n+\n+                    // Need to load the bytecode for each .class entry\n+                    byte[] in = getBytecode(curName);\n+\n+                    // This method adds the class to the component list\n+                    // if that bytecode is annotated with @Component.\n+                    computeAnnotations(in);\n+                } catch (IOException e) {\n+                    error(\"Cannot read the class : \" + curName);\n+                    return;\n                 }\n-                // Check if we need to manipulate the class\n-                for (int i = 0; i < m_components.size(); i++) {\n-                    ComponentInfo ci = (ComponentInfo) m_components.get(i);\n-                    if (ci.m_classname.equals(curName)) {\n-                        // So, we have to manipulate the class, if not already read, read the input class\n-                        // Else reuse the same one.\n-                        if (in == null) {\n-                            in = readEntry(curName);\n-                        }\n-                        byte[] outClazz = manipulateComponent(in, ci);\n-                        m_classes.put(ci.m_classname, outClazz);\n-                        \n-                        // Manipulate inner classes ?\n-                        if (!ci.m_inners.isEmpty()) {\n-                            for (int k = 0; k < ci.m_inners.size(); k++) {\n-                                String innerCN = (String) ci.m_inners.get(k)\n-                                        + \".class\";\n-                                InputStream innerStream = getInputStream(innerCN);\n-                                // manipulateInnerClass(inputJar, inner,\n-                                // (String) ci.m_inners.get(k), ci);\n-                                manipulateInnerClass(innerStream, innerCN, ci);\n-                            }\n-                        }\n+            }\n+        }\n+\n+        // 2. Iterates over the list of discovered components\n+        // Note that this list includes components from metadata.xml AND from annotations\n+\n+        for (int i = 0; i < m_components.size(); i++) {\n+            ComponentInfo info = (ComponentInfo) m_components.get(i);\n+\n+            // Get the bytecode if necessary\n+            if (info.m_bytecode == null) {\n+                try {\n+                    info.m_bytecode = getBytecode(info.m_classname);\n+                } catch (IOException e) {\n+                    error(\"Cannot extract bytecode for component '\" + info.m_classname + \"'\");\n+                    return;\n+                }\n+            }\n+            // Manipulate the original bytecode and store the modified one\n+            byte[] outClazz = manipulateComponent(info.m_bytecode, info);\n+            m_classes.put(info.m_classname, outClazz);\n+\n+            // Are there any inner classes to be manipulated ?\n+            if (!info.m_inners.isEmpty()) {\n+                for (int k = 0; k < info.m_inners.size(); k++) {\n+                    String innerCN = (String) info.m_inners.get(k) + \".class\";\n+                    try {\n+                        // Get the bytecode and start manipulation\n+                        byte[] innerClassBytecode = getBytecode(innerCN);\n+                        manipulateInnerClass(innerClassBytecode, innerCN, info);\n+                    } catch (IOException e) {\n+                        error(\"Cannot manipulate inner class '\" + innerCN + \"'\");\n+                        return;\n                     }\n                 }\n-            } catch (IOException e) {\n-                error(\"Cannot read the class : \" + curName);\n-                return;\n             }\n+        }\n+    }\n+\n+    /**\n+     * Return a byte array that contains the bytecode of the given classname.\n+     * @param classname name of a class to be read\n+     * @return a byte array\n+     * @throws IOException if the classname cannot be read\n+     */\n+    private byte[] getBytecode(final String classname) throws IOException {\n \n+        InputStream currIn = null;\n+        byte[] in = new byte[0];\n+        try {\n+            // Get the stream to read\n+            currIn = getInputStream(classname);\n+            int c;\n+\n+            // Fill the byte array with IS content\n+            while ((c = currIn.read()) >= 0) {\n+                byte[] in2 = new byte[in.length + 1];\n+                System.arraycopy(in, 0, in2, 0, in.length);\n+                in2[in.length] = (byte) c;\n+                in = in2;\n+            }\n+        } finally {\n+            // Close the stream\n+            if (currIn != null) {\n+                try {\n+                    currIn.close();\n+                } catch (IOException e) {\n+                    // Ignored\n+                }\n+            }\n         }\n+\n+        return in;\n     }\n \n     /**\n@@ -533,6 +567,7 @@ private void manipulateComponents() {\n      */\n     private InputStream getInputStream(String classname) throws IOException {\n         if (m_inputJar != null) {\n+            // Fix entry name if needed\n             if (! classname.endsWith(\".class\")) {\n                 classname += \".class\";\n             }\n@@ -630,22 +665,15 @@ private String computeRelativePath(String absolutePath) {\n \n     /**\n      * Manipulates an inner class.\n-     * @param clazz input stream on the inner file to manipulate\n+     * @param in input bytecode of the inner file to manipulate\n      * @param cn the inner class name (ends with .class)\n      * @param ci component info of the component owning the inner class\n      * @throws IOException the inner class cannot be read\n      */\n-    private void manipulateInnerClass(InputStream clazz, String cn, ComponentInfo ci) throws IOException {\n-        byte[] in = new byte[0];\n-        int c;\n-        while ((c = clazz.read()) >= 0) {\n-            byte[] in2 = new byte[in.length + 1];\n-            System.arraycopy(in, 0, in2, 0, in.length);\n-            in2[in.length] = (byte) c;\n-            in = in2;\n-        }\n+    private void manipulateInnerClass(byte[] in, String cn, ComponentInfo ci) throws IOException {\n         // Remove '.class' from class name.\n-        InnerClassManipulator man = new InnerClassManipulator(ci.m_classname.substring(0, ci.m_classname.length() - 6), ci.m_fields);\n+        String name = ci.m_classname.substring(0, ci.m_classname.length() - 6);\n+        InnerClassManipulator man = new InnerClassManipulator(name, ci.m_fields);\n         byte[] out = man.manipulate(in);\n \n         m_classes.put(cn, out);\n@@ -773,6 +801,12 @@ private void computeDeclaredComponents() {\n          */\n         Set m_fields;\n \n+        /**\n+         * Initial (unmodified) bytecode of the component's class.\n+         * May be null !!\n+         */\n+        byte[] m_bytecode;\n+\n         /**\n          * Constructor.\n          * @param cn : class name", "filename": "ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/36af1547cb169c1c063ce0173615fe6a30a707cc", "parent": "https://github.com/apache/felix/commit/5868843f47b4df87dcf3cc452d1a555a5fc2a1c6", "message": "Fix FELIX-1497.\nNPE were thrown when the matching service reference list of the used service reference list were null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@805383 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_134", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/36af1547cb169c1c063ce0173615fe6a30a707cc/ipojo/webconsole-plugin/pom.xml", "blob_url": "https://github.com/apache/felix/blob/36af1547cb169c1c063ce0173615fe6a30a707cc/ipojo/webconsole-plugin/pom.xml", "sha": "a2f9b1b02e72f93049e74783e5803a1a64732b7d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/webconsole-plugin/pom.xml?ref=36af1547cb169c1c063ce0173615fe6a30a707cc", "patch": "@@ -27,7 +27,7 @@\n   <packaging>bundle</packaging>\n   <artifactId>org.apache.felix.ipojo.webconsole</artifactId>\n   <version>1.5.0-SNAPSHOT</version>\n-  <name>Apache Felix iPOJO WebConsole Plugin</name>\n+  <name>Apache Felix iPOJO WebConsole Plugins</name>\n   \n   <description>\n   iPOJO plugin for the Apache Felix Web Console. This plugin allows introspecting an iPOJO system with the Apache Felix", "filename": "ipojo/webconsole-plugin/pom.xml"}, {"additions": 42, "raw_url": "https://github.com/apache/felix/raw/36af1547cb169c1c063ce0173615fe6a30a707cc/ipojo/webconsole-plugin/src/main/java/org/apache/felix/org/apache/felix/ipojo/webconsole/IPOJOServlet.java", "blob_url": "https://github.com/apache/felix/blob/36af1547cb169c1c063ce0173615fe6a30a707cc/ipojo/webconsole-plugin/src/main/java/org/apache/felix/org/apache/felix/ipojo/webconsole/IPOJOServlet.java", "sha": "d6d3b2a4dde311adb11f605d58c2232842a7f4b4", "changes": 81, "status": "modified", "deletions": 39, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/webconsole-plugin/src/main/java/org/apache/felix/org/apache/felix/ipojo/webconsole/IPOJOServlet.java?ref=36af1547cb169c1c063ce0173615fe6a30a707cc", "patch": "@@ -92,7 +92,7 @@\n      * Label used by the web console.\n      */\n     @ServiceProperty(name = \"felix.webconsole.label\")\n-    private String m_label = \"ipojo\";\n+    private String m_label = \"iPOJO\";\n \n     /**\n      * Title used by the web console.\n@@ -161,7 +161,7 @@ public String getTitle() {\n      */\n     private int getValidCount() {\n         int i = 0;\n-        for (Architecture a : m_archs) {\n+        for (Architecture a : m_archs) { // Cannot be null, an empty list is returned.\n             if (a.getInstanceDescription().getState() == ComponentInstance.VALID) {\n                 i ++;\n             }\n@@ -175,7 +175,7 @@ private int getValidCount() {\n      */\n     private int getInvalidCount() {\n         int i = 0;\n-        for (Architecture a : m_archs) {\n+        for (Architecture a : m_archs) {  // Cannot be null, an empty list is returned.\n             if (a.getInstanceDescription().getState() == ComponentInstance.INVALID) {\n                 i ++;\n             }\n@@ -271,7 +271,7 @@ protected void renderContent(HttpServletRequest req, HttpServletResponse res) th\n      */\n     private void printFactoryDetail(PrintWriter pw, String name) {\n         List<ComponentTypeDescription> fs = new ArrayList<ComponentTypeDescription>();\n-        for (Factory f : this.m_factories) {\n+        for (Factory f : this.m_factories) { // Cannot be null, an empty list is returned.\n             if (f.getName().equals(name)) {\n                 fs.add(f.getComponentDescription());\n             }\n@@ -332,20 +332,20 @@ private String getProperties(PropertyDescription[] properties) {\n                 + \"</tr>\"\n                 + \"</thead>\"\n                 + \"<tbody>\";\n-        for (PropertyDescription pd : properties) {\n-            String name = pd.getName();\n-            String type = pd.getType();\n-            boolean mandatory = pd.isMandatory();\n-            boolean immutable = pd.isImmutable();\n-            String value = pd.getValue();\n-            s += \"<tr>\"\n-                + \"<td>\" + name + \"</td>\"\n-                + \"<td>\" + type + \"</td>\"\n-                + \"<td>\" + \"\" + mandatory + \"</td>\"\n-                + \"<td>\" + \"\" + immutable + \"</td>\"\n-                + \"<td>\" + (value == null ? \"<i>No Value</i>\" : value) + \"</td>\"\n-                + \"</tr>\";\n-        }\n+        if (properties != null) {\n+            for (PropertyDescription pd : properties) {\n+                String name = pd.getName();\n+                String type = pd.getType();\n+                boolean mandatory = pd.isMandatory();\n+                boolean immutable = pd.isImmutable();\n+                String value = pd.getValue();\n+                s += \"<tr>\" + \"<td>\" + name + \"</td>\" + \"<td>\" + type + \"</td>\"\n+                        + \"<td>\" + \"\" + mandatory + \"</td>\" + \"<td>\" + \"\"\n+                        + immutable + \"</td>\" + \"<td>\"\n+                        + (value == null ? \"<i>No Value</i>\" : value) + \"</td>\"\n+                        + \"</tr>\";\n+            }\n+        }  // Else don't print anything.\n         s += \"</tbody></table>\";\n         return s;\n     }\n@@ -366,7 +366,7 @@ private void printInstanceList(PrintWriter pw) {\n                 + \"</thead>\"\n                 + \"<tbody>\");\n \n-        for (Architecture arch : m_archs) {\n+        for (Architecture arch : m_archs) { // Cannot be null, an empty list is returned.\n             InstanceDescription id = arch.getInstanceDescription();\n             String name = id.getName();\n             String factory = id.getComponentDescription().getName();\n@@ -414,8 +414,7 @@ private String addEntry(String header, String value) {\n      */\n     private String getFactoryLinkIfPossible(InstanceDescription id) {\n         String n = id.getComponentDescription().getName();\n-        System.out.println(\"Look for \" + n);\n-        for (Factory f : m_factories) {\n+        for (Factory f : m_factories) { // Cannot be null, an empty list is returned.\n             if (f.getName().equals(n)) {\n                 return \"<a href=\\\"ipojo?factory=\" + n + \"\\\">\" + n + \"</a>\";\n             }\n@@ -431,9 +430,11 @@ private String getFactoryLinkIfPossible(InstanceDescription id) {\n      */\n     private String getInvalidHandlerList(HandlerDescription[] hl) {\n         List<String> list = new ArrayList<String>();\n-        for (HandlerDescription hd : hl) {\n-            if (! hd.isValid()) {\n-                list.add(hd.getHandlerName());\n+        if (hl != null) {\n+            for (HandlerDescription hd : hl) {\n+                if (! hd.isValid()) {\n+                    list.add(hd.getHandlerName());\n+                }\n             }\n         }\n         return list.toString();\n@@ -503,7 +504,7 @@ private String getServiceProperties(Properties properties) {\n      */\n     private String getInstanceList(String factory) {\n         String s = \"<ul>\";\n-        for (Architecture arch : m_archs) {\n+        for (Architecture arch : m_archs) { // Cannot be null, an empty list is returned.\n             String n = arch.getInstanceDescription().getComponentDescription().getName();\n             if (factory.equals(n)) {\n                 s += \"<li>\" + getInstanceLink(arch.getInstanceDescription().getName()) + \"</li>\";\n@@ -521,16 +522,18 @@ private String getInstanceList(String factory) {\n      */\n     private String getServiceReferenceList(List<ServiceReference> refs) {\n         String s = \"<ul>\";\n-        for (ServiceReference ref : refs) {\n-            s += \"<li>\";\n-            if (ref.getProperty(\"instance.name\") == null) {\n-                s += ref.getProperty(Constants.SERVICE_ID);\n-            } else {\n-                s += \"<a href=\\\"ipojo?instance=\"\n+        if (refs != null) {\n+            for (ServiceReference ref : refs) {\n+                s += \"<li>\";\n+                if (ref.getProperty(\"instance.name\") == null) {\n+                    s += ref.getProperty(Constants.SERVICE_ID);\n+                } else {\n+                    s += \"<a href=\\\"ipojo?instance=\"\n                         + ref.getProperty(\"instance.name\") + \"\\\">\"\n                         + ref.getProperty(\"instance.name\") + \" (\" +  ref.getProperty(Constants.SERVICE_ID) + \")</a>\";\n+                }\n+                s += \"</li>\";\n             }\n-            s += \"</li>\";\n         }\n         s += \"</ul>\";\n         return s;\n@@ -609,7 +612,7 @@ private String getRequiredServiceDetail(\n      * @return the instance description or <code>null</code> if not found\n      */\n     private InstanceDescription getInstanceDescriptionByName(String name) {\n-        for (Architecture arch : m_archs) {\n+        for (Architecture arch : m_archs) { \n             if (name.equals(arch.getInstanceDescription().getName())) {\n                 return arch.getInstanceDescription();\n             }\n@@ -644,7 +647,7 @@ private void printFactoryList(PrintWriter pw) {\n             pw.write(\"<tr>\"\n                     + \"<td><a href=\\\"ipojo?factory=\" + name + \"\\\">\"\n                         + (version == null ? name : name + \" (\" + version + \")\")\n-                        + \"</a></td>\" //TODO Link\n+                        + \"</a></td>\"\n                     + \"<td>\" + bundle + \"</td>\"\n                     + \"<td>\" + state + \"</td>\"\n                     + \"</tr>\");\n@@ -699,7 +702,7 @@ private void printHandlerList(PrintWriter pw) {\n      * @param state the state.\n      * @return the String form of the state.\n      */\n-    private String getInstanceState(int state) {\n+    private static String getInstanceState(int state) {\n         switch(state) {\n             case ComponentInstance.VALID :\n                 return \"valid\";\n@@ -719,7 +722,7 @@ private String getInstanceState(int state) {\n      * @param state the state.\n      * @return the String form of the state.\n      */\n-    private String getFactoryState(int state) {\n+    private static String getFactoryState(int state) {\n         switch(state) {\n             case Factory.VALID :\n                 return \"valid\";\n@@ -735,7 +738,7 @@ private String getFactoryState(int state) {\n      * @param state the state.\n      * @return the String form of the state.\n      */\n-    private String getDependencyState(int state) {\n+    private static String getDependencyState(int state) {\n         switch(state) {\n             case DependencyModel.RESOLVED :\n                 return \"resolved\";\n@@ -753,7 +756,7 @@ private String getDependencyState(int state) {\n      * @param policy the policy.\n      * @return the String form of the policy.\n      */\n-    private String getDependencyBindingPolicy(int policy) {\n+    private static String getDependencyBindingPolicy(int policy) {\n         switch(policy) {\n             case DependencyModel.DYNAMIC_BINDING_POLICY :\n                 return \"dynamic\";\n@@ -771,7 +774,7 @@ private String getDependencyBindingPolicy(int policy) {\n      * @param state the state.\n      * @return the String form of the state.\n      */\n-    private String getProvidedServiceState(int state) {\n+    private static String getProvidedServiceState(int state) {\n         switch(state) {\n             case ProvidedService.REGISTERED :\n                 return \"registered\";", "filename": "ipojo/webconsole-plugin/src/main/java/org/apache/felix/org/apache/felix/ipojo/webconsole/IPOJOServlet.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/e4b3299163eb28a60e76130a36351fca9e838f14", "parent": "https://github.com/apache/felix/commit/d439afabadcd334e2227358f56d1b6bc703f933e", "message": "Prevent NPE, throw meaningful runtime exception in it's place, FELIX-1438\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@800024 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_135", "file": [{"additions": 11, "raw_url": "https://github.com/apache/felix/raw/e4b3299163eb28a60e76130a36351fca9e838f14/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/repository/RepositoryConfiguration.java", "blob_url": "https://github.com/apache/felix/blob/e4b3299163eb28a60e76130a36351fca9e838f14/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/repository/RepositoryConfiguration.java", "sha": "e8a3aca0343bd26800a5e3cbdff94efcb4635cfa", "changes": 14, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/repository/RepositoryConfiguration.java?ref=e4b3299163eb28a60e76130a36351fca9e838f14", "patch": "@@ -169,8 +169,12 @@ public IRepositorySet getDefaultRepositorySet()\n         //int level = findLevel( key + LEVEL, type, prefs );\n         ArrayList<IRepositoryModel> reps = new ArrayList<IRepositoryModel>();\n         for ( String s : PrefsUtils.stringToArray( getPreferences().getString( REPOSITORY_DEFAULT_SET ) ) )\n-        {\n-            reps.add( findRepository( s ) );\n+        {   \n+            IRepositoryModel rep = findRepository( s );\n+            if ( rep == null ) {\n+                throw new IllegalStateException( \"Missing repository for \" + s );\n+            }\n+            reps.add( rep );\n         }\n         return new RepositorySet( reps );\n     }\n@@ -184,7 +188,11 @@ public IRepositorySet getRepositorySet( String name )\n             ArrayList<IRepositoryModel> reps = new ArrayList<IRepositoryModel>();\n             for ( String s : PrefsUtils.stringToArray( getPreferences().getString( key ) ) )\n             {\n-                reps.add( findRepository( s ) );\n+                IRepositoryModel rep = findRepository( s );\n+                if ( rep == null ) {\n+                    throw new IllegalStateException( \"Missing repository for \" + s );\n+                }\n+                reps.add( rep );\n             }\n             return new RepositorySet( reps );\n         }", "filename": "sigil/eclipse/core/src/org/apache/felix/sigil/eclipse/internal/model/repository/RepositoryConfiguration.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1b073e6035b6752654dc1799872e6f2962ee9400", "parent": "https://github.com/apache/felix/commit/267c9b5226547889e564c1525d1bba3cb8245d2e", "message": "OBR expected all resources to have a presentation name when listing them,\nwhen they did not an NPE resulted. (FELIX-1157)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@774904 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_136", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/1b073e6035b6752654dc1799872e6f2962ee9400/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ObrCommandImpl.java", "blob_url": "https://github.com/apache/felix/blob/1b073e6035b6752654dc1799872e6f2962ee9400/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ObrCommandImpl.java", "sha": "f079bd1457261eeacf108d7f7b73a5b04b2ed9e0", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/bundlerepository/src/main/java/org/apache/felix/bundlerepository/ObrCommandImpl.java?ref=1b073e6035b6752654dc1799872e6f2962ee9400", "patch": "@@ -241,7 +241,12 @@ public int compare(Object o1, Object o2)\n                 // Otherwise, compare the presentation name to keep them sorted\n                 // by presentation name. If the presentation names are equal, then\n                 // use the symbolic name to differentiate.\n-                int compare = r1.getPresentationName().compareToIgnoreCase(r2.getPresentationName());\n+                int compare = (r1.getPresentationName() == null)\n+                    ? -1\n+                    : (r2.getPresentationName() == null)\n+                        ? 1\n+                        : r1.getPresentationName().compareToIgnoreCase(\n+                            r2.getPresentationName());\n                 if (compare == 0)\n                 {\n                     return symCompare;", "filename": "bundlerepository/src/main/java/org/apache/felix/bundlerepository/ObrCommandImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/e069ba594c242ab7b980c7d244ab903ab90806a1", "parent": "https://github.com/apache/felix/commit/e0810b321d85344226c98a076297154e21b8bb2f", "message": "NPE if installed JAR is not a bundle; check for it now. (FELIX-29)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@771010 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_137", "file": [{"additions": 10, "raw_url": "https://github.com/apache/felix/raw/e069ba594c242ab7b980c7d244ab903ab90806a1/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java", "blob_url": "https://github.com/apache/felix/blob/e069ba594c242ab7b980c7d244ab903ab90806a1/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java", "sha": "af88da5f1bd99ce8b89886c36da01cfd7dbbb4a1", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java?ref=e069ba594c242ab7b980c7d244ab903ab90806a1", "patch": "@@ -70,16 +70,23 @@ public synchronized IModule mergeFragments(IModule rootModule) throws Exception\n             if (!host.isResolved() && !Util.isFragment(host))\n             {\n                 ICapability[] caps = host.getCapabilities();\n-                ICapability bundleCap = null;\n+                ICapability hostCap = null;\n                 for (int capIdx = 0; capIdx < caps.length; capIdx++)\n                 {\n                     if (caps[capIdx].getNamespace().equals(ICapability.HOST_NAMESPACE))\n                     {\n-                        bundleCap = caps[capIdx];\n+                        hostCap = caps[capIdx];\n                         break;\n                     }\n                 }\n \n+                // If there is no host capability in the current module,\n+                // then just ignore it.\n+                if (hostCap == null)\n+                {\n+                    continue;\n+                }\n+\n                 // Need to remove any previously attached, but not resolved fragments.\n                 // TODO: FRAGMENT - Would be better to have the previous resolves\n                 //       not leave fragments attached.\n@@ -99,7 +106,7 @@ public synchronized IModule mergeFragments(IModule rootModule) throws Exception\n                         for (int reqIdx = 0; reqIdx < reqs.length; reqIdx++)\n                         {\n                             if (reqs[reqIdx].getNamespace().equals(ICapability.HOST_NAMESPACE)\n-                                && reqs[reqIdx].isSatisfied(bundleCap)\n+                                && reqs[reqIdx].isSatisfied(hostCap)\n                                 && !((BundleImpl) fragments[fragIdx].getBundle()).isStale()\n                                 && !((BundleImpl) fragments[fragIdx].getBundle()).isRemovalPending())\n                             {", "filename": "framework/src/main/java/org/apache/felix/framework/FelixResolverState.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9dc5ada56dcfa3d472e386087fbc1922fa0ea8a2", "parent": "https://github.com/apache/felix/commit/925eee3f4e46fd8cab39b3eadb2e0f41643517f3", "message": "Fix a NPE in the manipulator when a synthetized method is not found (during annotations migration).\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@764776 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_138", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/9dc5ada56dcfa3d472e386087fbc1922fa0ea8a2/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/MethodCreator.java", "blob_url": "https://github.com/apache/felix/blob/9dc5ada56dcfa3d472e386087fbc1922fa0ea8a2/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/MethodCreator.java", "sha": "4d0b960fb0d226f435aaf42570500b38e4b0f5cb", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/MethodCreator.java?ref=9dc5ada56dcfa3d472e386087fbc1922fa0ea8a2", "patch": "@@ -214,7 +214,11 @@ public MethodVisitor visitMethod(int access, String name, String desc, String si\n         if ((access & ACC_STATIC) == ACC_STATIC) { return super.visitMethod(access, name, desc, signature, exceptions); }\r\n \r\n         MethodDescriptor md = getMethodDescriptor(name, desc);\r\n-        generateMethodHeader(access, name, desc, signature, exceptions, md.getAnnotations());\r\n+        if (md == null) {\r\n+            generateMethodHeader(access, name, desc, signature, exceptions, new ArrayList(0));\r\n+        } else {\r\n+            generateMethodHeader(access, name, desc, signature, exceptions, md.getAnnotations());\r\n+        }\r\n         \r\n         String id = generateMethodFlag(name, desc);\r\n         if (! m_methodFlags.contains(id)) {\r", "filename": "ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulation/MethodCreator.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/865478dd043c56753a0b1bf9895ec8e1fc8d96cb", "parent": "https://github.com/apache/felix/commit/03a913e224422bd8b44136ff47a4915072a94c3b", "message": "Fixed a NPE that was caused when readLine() improperly returned a null.\n(FELIX-525)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@654615 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_139", "file": [{"additions": 8, "raw_url": "https://github.com/apache/felix/raw/865478dd043c56753a0b1bf9895ec8e1fc8d96cb/main/src/main/java/org/apache/felix/main/Main.java", "blob_url": "https://github.com/apache/felix/blob/865478dd043c56753a0b1bf9895ec8e1fc8d96cb/main/src/main/java/org/apache/felix/main/Main.java", "sha": "09ab34c1c0064adeac4e2c55c5e28b17e0d28cbe", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/main/src/main/java/org/apache/felix/main/Main.java?ref=865478dd043c56753a0b1bf9895ec8e1fc8d96cb", "patch": "@@ -202,7 +202,14 @@ public static void main(String[] argv) throws Exception\n                 System.exit(-1);\n             }\n             System.out.println(\"\");\n-            if (profileName.length() != 0)\n+\n+            // On some platforms readLine() can return null, such as when\n+            // control-C is pressed, so check for that case.\n+            if (profileName == null)\n+            {\n+                profileName = \"\";\n+            }\n+            else if (profileName.length() != 0)\n             {\n                 configProps.setProperty(BundleCache.CACHE_PROFILE_PROP, profileName);\n             }", "filename": "main/src/main/java/org/apache/felix/main/Main.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/4afcec543909bca6239253053d45ed324c804f7f", "parent": "https://github.com/apache/felix/commit/4cc02661f97e3196948925b945c12eee0781579a", "message": "FindBugs: remove no-op method, use entrySet iterator for better performance, and fix potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@615726 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_140", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/4afcec543909bca6239253053d45ed324c804f7f/maven-obr-plugin/src/main/java/org/apache/felix/obr/plugin/ExtractBindexInfo.java", "blob_url": "https://github.com/apache/felix/blob/4afcec543909bca6239253053d45ed324c804f7f/maven-obr-plugin/src/main/java/org/apache/felix/obr/plugin/ExtractBindexInfo.java", "sha": "bff99cf65669615ef775bff0a61c443ee9728794", "changes": 25, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/felix/contents/maven-obr-plugin/src/main/java/org/apache/felix/obr/plugin/ExtractBindexInfo.java?ref=4afcec543909bca6239253053d45ed324c804f7f", "patch": "@@ -93,20 +93,6 @@ public ExtractBindexInfo( URI repoFilename, String outFile ) throws MojoExecutio\n     }\n \n \n-    /**\n-     * transform logical operator in xml syntax.\n-     * @param filter string which contains logical operator\n-     * @return string in correct xml syntax\n-     */\n-    private String parseFilter( String filter )\n-    {\n-        filter.replaceAll( \"&\", \"&amp\" );\n-        filter.replaceAll( \">=\", \"&gt\" );\n-\n-        return filter;\n-    }\n-\n-\n     /**\n      * extract capabilities from bindex information.\n      * @return bundle capabilities List\n@@ -125,11 +111,12 @@ public List getCapabilities()\n             if ( !( ci.getName().compareTo( \"bundle\" ) == 0 ) )\n             {\n                 Map properties = ci.getProperties();\n-                for ( Iterator k = properties.keySet().iterator(); k.hasNext(); )\n+                for ( Iterator e = properties.entrySet().iterator(); e.hasNext(); )\n                 {\n                     PElement p = new PElement();\n-                    String key = ( String ) k.next();\n-                    List values = ( List ) properties.get( key );\n+                    Map.Entry entry = ( Map.Entry ) e.next();\n+                    String key = ( String ) entry.getKey();\n+                    List values = ( List ) entry.getValue();\n                     for ( Iterator v = values.iterator(); v.hasNext(); )\n                     {\n                         Object value = v.next();\n@@ -149,7 +136,7 @@ public List getCapabilities()\n                         }\n                         else\n                         {\n-                            if ( value.getClass() == VersionRange.class )\n+                            if ( value instanceof VersionRange )\n                             {\n                                 type = \"version\";\n                             }\n@@ -187,7 +174,7 @@ public List getRequirement()\n             require.setMultiple( String.valueOf( ci.isMultiple() ) );\n             require.setOptional( String.valueOf( ci.isOptional() ) );\n             require.setName( ci.getName() );\n-            require.setFilter( parseFilter( ci.getFilter() ) );\n+            require.setFilter( ci.getFilter() );\n             require.setValue( ci.getComment() );\n             list.add( require );\n         }", "filename": "maven-obr-plugin/src/main/java/org/apache/felix/obr/plugin/ExtractBindexInfo.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/da7768dedabb7ad671a446ed3fa72f16c4de50e1", "parent": "https://github.com/apache/felix/commit/d8507981f406c30750b5e06fa555defbe0f360f2", "message": "Fix a NPE when getEntryPaths is called on the system bundle (FELIX-394).\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@587183 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_141", "file": [{"additions": 33, "raw_url": "https://github.com/apache/felix/raw/da7768dedabb7ad671a446ed3fa72f16c4de50e1/framework/src/main/java/org/apache/felix/framework/ExtensionManager.java", "blob_url": "https://github.com/apache/felix/blob/da7768dedabb7ad671a446ed3fa72f16c4de50e1/framework/src/main/java/org/apache/felix/framework/ExtensionManager.java", "sha": "709f2ae5fabe35a8761b6dbdb8d0e4cb82278f19", "changes": 35, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/ExtensionManager.java?ref=da7768dedabb7ad671a446ed3fa72f16c4de50e1", "patch": "@@ -33,6 +33,7 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.NoSuchElementException;\n import java.util.Set;\n \n import org.apache.felix.framework.util.FelixConstants;\n@@ -78,7 +79,7 @@\n // with the parent classloader and one instance per framework instance that\n // keeps track of extension bundles and systembundle exports for that framework\n // instance.\n-class ExtensionManager extends URLStreamHandler implements IModuleDefinition, IContentLoader\n+class ExtensionManager extends URLStreamHandler implements IModuleDefinition, IContentLoader, IContent\n {\n     // The private instance that is added to Felix.class.getClassLoader() -\n     // will be null if extension bundles are not supported (i.e., we are not \n@@ -414,7 +415,7 @@ public void close()\n \n     public IContent getContent()\n     {\n-        return null;\n+        return this;\n     }\n \n     public ISearchPolicy getSearchPolicy()\n@@ -573,4 +574,34 @@ private void _add(String name, Bundle extension)\n             m_extensions.add(extension);\n         }\n     }\n+\n+    public Enumeration getEntries() \n+    {\n+        return new Enumeration()\n+        {\n+            public boolean hasMoreElements() \n+            {\n+                return false;\n+            }\n+\n+            public Object nextElement() throws NoSuchElementException \n+            {\n+                throw new NoSuchElementException();\n+            }\n+        };\n+    }\n+\n+    public byte[] getEntry(String name) \n+    {\n+        return null;\n+    }\n+\n+    public InputStream getEntryAsStream(String name) throws IOException \n+    {\n+        return null;\n+    }\n+\n+    public boolean hasEntry(String name) {\n+        return false;\n+    }\n }", "filename": "framework/src/main/java/org/apache/felix/framework/ExtensionManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/65111605a44553b7be4009dace612f32f7a646a2", "parent": "https://github.com/apache/felix/commit/0add2d42d8e83c353166c8d7a4089ea0bb2d6cfc", "message": "Prevent possible NPE when tmpFile is null (if an error occurs before tmpFile could be set)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@572288 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_142", "file": [{"additions": 31, "raw_url": "https://github.com/apache/felix/raw/65111605a44553b7be4009dace612f32f7a646a2/configadmin/src/main/java/org/apache/felix/cm/file/FilePersistenceManager.java", "blob_url": "https://github.com/apache/felix/blob/65111605a44553b7be4009dace612f32f7a646a2/configadmin/src/main/java/org/apache/felix/cm/file/FilePersistenceManager.java", "sha": "369778d9192eed0419e99c3437dbb8f93cfd862b", "changes": 61, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/main/java/org/apache/felix/cm/file/FilePersistenceManager.java?ref=65111605a44553b7be4009dace612f32f7a646a2", "patch": "@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -115,7 +115,7 @@\n     /**\n      * The extension of the configuration files, while they are being written\n      * (value is \".tmp\").\n-     * \n+     *\n      * @see #store(String, Dictionary)\n      */\n     private static final String TMP_EXT = \".tmp\";\n@@ -159,9 +159,9 @@\n      * This method is not part of the API of this class and is declared package\n      * private to enable JUnit testing on it. This method may be removed or\n      * modified at any time without notice.\n-     * \n+     *\n      * @param pid The Service PID to encode into a relative path name.\n-     * \n+     *\n      * @return The relative path name corresponding to the Service PID.\n      */\n     static String encodePid( String pid )\n@@ -231,11 +231,11 @@ static String encodePid( String pid )\n      * This constructor is equivalent to calling\n      * {@link #FilePersistenceManager(BundleContext, String)} with a\n      * <code>null</code> <code>BundleContext</code>.\n-     * \n+     *\n      * @param location The configuration file location. If this is\n      *      <code>null</code> the <code>config</code> directory below the current\n      *      working directory is used.\n-     * \n+     *\n      * @throws IllegalArgumentException If the <code>location</code> exists but\n      *      is not a directory or does not exist and cannot be created.\n      */\n@@ -269,15 +269,15 @@ public FilePersistenceManager( String location )\n      * step or the named directory (including any parent directories) cannot be\n      * created, an <code>IllegalArgumentException</code> is thrown.</li>\n      * </ul>\n-     * \n+     *\n      * @param bundleContext The <code>BundleContext</code> to optionally get\n      *      the data location for the configuration files. This may be\n      *      <code>null</code>, in which case this constructor acts exactly the\n      *      same as calling {@link #FilePersistenceManager(String)}.\n      * @param location The configuration file location. If this is\n      *      <code>null</code> the <code>config</code> directory below the current\n      *      working directory is used.\n-     * \n+     *\n      * @throws IllegalArgumentException If the location exists but is not a\n      *      directory or does not exist and cannot be created.\n      * @throws IllegalStateException If the <code>bundleContext</code> is not\n@@ -315,11 +315,11 @@ public FilePersistenceManager( BundleContext bundleContext, String location )\n                     locationFile = bundleLocationFile;\n                 }\n             }\n-            \n+\n             // ensure the file object is an absolute file object\n             locationFile = locationFile.getAbsoluteFile();\n         }\n-        \n+\n         // check the location\n         if ( !locationFile.isDirectory() )\n         {\n@@ -341,7 +341,7 @@ public FilePersistenceManager( BundleContext bundleContext, String location )\n     /**\n      * Returns the directory in which the configuration files are written as\n      * a <code>File</code> object.\n-     * \n+     *\n      * @return The configuration file location.\n      */\n     public File getLocation()\n@@ -356,7 +356,7 @@ public File getLocation()\n      * <p>\n      * This method is a lazy implementation, which is just one configuration\n      * file ahead of the current enumeration location.\n-     * \n+     *\n      * @return an enumeration of configuration data returned as instances of\n      *      the <code>Dictionary</code> class.\n      */\n@@ -368,7 +368,7 @@ public Enumeration getDictionaries()\n \n     /**\n      * Deletes the file for the given identifier.\n-     * \n+     *\n      * @param pid The identifier of the configuration file to delete.\n      */\n     public void delete( String pid )\n@@ -380,9 +380,9 @@ public void delete( String pid )\n     /**\n      * Returns <code>true</code> if a (configuration) file exists for the given\n      * identifier.\n-     * \n+     *\n      * @param pid The identifier of the configuration file to check.\n-     * \n+     *\n      * @return <code>true</code> if the file exists\n      */\n     public boolean exists( String pid )\n@@ -394,9 +394,9 @@ public boolean exists( String pid )\n     /**\n      * Reads the (configuration) for the given identifier into a\n      * <code>Dictionary</code> object.\n-     * \n+     *\n      * @param pid The identifier of the configuration file to delete.\n-     * \n+     *\n      * @return The configuration read from the file. This <code>Dictionary</code>\n      *      may be empty if the file contains no configuration information\n      *      or is not properly formatted.\n@@ -410,11 +410,11 @@ public Dictionary load( String pid ) throws IOException\n     /**\n      * Stores the contents of the <code>Dictionary</code> in a file denoted\n      * by the given identifier.\n-     * \n+     *\n      * @param pid The identifier of the configuration file to which to write\n      *      the configuration contents.\n      * @param props The configuration data to write.\n-     * \n+     *\n      * @throws IOException If an error occurrs writing the configuration data.\n      */\n     public void store( String pid, Dictionary props ) throws IOException\n@@ -424,7 +424,7 @@ public void store( String pid, Dictionary props ) throws IOException\n         try\n         {\n             File cfgFile = getFile( pid );\n-            \n+\n             // ensure parent path\n             File cfgDir = cfgFile.getParentFile();\n             cfgDir.mkdirs();\n@@ -443,7 +443,7 @@ public void store( String pid, Dictionary props ) throws IOException\n                 if (cfgFile.exists()) {\n                     cfgFile.delete();\n                 }\n-                \n+\n                 // rename the temporary file to the new file\n                 tmpFile.renameTo( cfgFile );\n             }\n@@ -461,8 +461,9 @@ public void store( String pid, Dictionary props ) throws IOException\n                     // ignore\n                 }\n             }\n-            \n-            if (tmpFile.exists()) {\n+\n+            if (tmpFile != null && tmpFile.exists())\n+            {\n                 tmpFile.delete();\n             }\n         }\n@@ -472,11 +473,11 @@ public void store( String pid, Dictionary props ) throws IOException\n     /**\n      * Loads the contents of the <code>cfgFile</code> into a new\n      * <code>Dictionary</code> object.\n-     * \n+     *\n      * @param cfgFile The file from which to load the data.\n-     * \n+     *\n      * @return A new <code>Dictionary</code> object providing the file contents.\n-     * \n+     *\n      * @throws java.io.FileNotFoundException If the given file does not exist.\n      * @throws IOException If an error occurrs reading the configuration file.\n      */\n@@ -524,9 +525,9 @@ private Dictionary load( File cfgFile ) throws IOException\n      * </ul>\n      * Before returning the path name, the parent directory and any ancestors\n      * are created.\n-     *  \n+     *\n      * @param pid The identifier for which to create the abstract file name.\n-     * \n+     *\n      * @return The abstract path name, which the parent directory path created.\n      */\n     private File getFile( String pid )\n@@ -602,9 +603,9 @@ private Dictionary seek()\n                         try\n                         {\n                             Dictionary dict =  load( cfgFile );\n-                            \n+\n                             // use the dictionary if it has no PID or the PID\n-                            // derived file name matches the source file name \n+                            // derived file name matches the source file name\n                             if ( dict.get( Constants.SERVICE_PID ) == null\n                                 || cfgFile.equals( getFile( ( String ) dict.get( Constants.SERVICE_PID ) ) ) )\n                             {", "filename": "configadmin/src/main/java/org/apache/felix/cm/file/FilePersistenceManager.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/57cc459267362ef68fe33d3026d180451b5b30d2", "parent": "https://github.com/apache/felix/commit/6fa0edef2e59339b2848459cb5236ed04a927a39", "message": "Prevent NPE if a component to be validated does is not a service\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@568434 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_143", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/57cc459267362ef68fe33d3026d180451b5b30d2/scrplugin/src/main/java/org/apache/felix/scrplugin/om/Component.java", "blob_url": "https://github.com/apache/felix/blob/57cc459267362ef68fe33d3026d180451b5b30d2/scrplugin/src/main/java/org/apache/felix/scrplugin/om/Component.java", "sha": "51c5e915a63ac43f2237d6653f6f20a795e78575", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/src/main/java/org/apache/felix/scrplugin/om/Component.java?ref=57cc459267362ef68fe33d3026d180451b5b30d2", "patch": "@@ -224,7 +224,9 @@ public void validate(List issues, List warnings)\n                     }\n \n                     // verify service\n-                    this.getService().validate(issues, warnings);\n+                    if (this.getService() != null) {\n+                        this.getService().validate(issues, warnings);\n+                    }\n \n                     // serviceFactory must not be true for immediate of component factory\n                     if (this.isServiceFactory() && this.isImmediate() != null && this.isImmediate().booleanValue() && this.getFactory() != null) {", "filename": "scrplugin/src/main/java/org/apache/felix/scrplugin/om/Component.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/90e8b8a3ed621346cc6a626eb6e91066b7b4d060", "parent": "https://github.com/apache/felix/commit/4aab0dbe5a99812374aa5328ed93685d5efbd116", "message": "FELIX-4771 - Avoid NPE in Attribute#getContent:\n\n- no longer clone the content field, as it is already a local\n  clone, and this pattern isn't used in the other parts of the\n  API (such as AD);\n- added small test case to verify this behaviour.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1653464 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_144", "file": [{"additions": 15, "raw_url": "https://github.com/apache/felix/raw/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/main/java/org/apache/felix/metatype/Attribute.java", "blob_url": "https://github.com/apache/felix/blob/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/main/java/org/apache/felix/metatype/Attribute.java", "sha": "a62a91ddd00b0807688ca373b058669c46875690", "changes": 36, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/felix/contents/metatype/src/main/java/org/apache/felix/metatype/Attribute.java?ref=90e8b8a3ed621346cc6a626eb6e91066b7b4d060", "patch": "@@ -18,7 +18,6 @@\n  */\n package org.apache.felix.metatype;\n \n-\n /**\n  * The <code>Attribute</code> TODO\n  *\n@@ -30,58 +29,53 @@\n     private String adRef;\n     private String[] content;\n \n-\n     public String getAdRef()\n     {\n         return adRef;\n     }\n \n-\n-    public void setAdRef( String adRef )\n+    public void setAdRef(String adRef)\n     {\n         this.adRef = adRef;\n     }\n \n-\n     public String[] getContent()\n     {\n-        return ( String[] ) content.clone();\n+        // FELIX-4771 - removed the clone as we're already working on a local \n+        // copy and this pattern isn't used in other parts of the API...\n+        return this.content;\n     }\n \n-\n-    public void addContent( String[] added )\n+    public void addContent(String[] added)\n     {\n-        if ( added != null && added.length > 0 )\n+        if (added != null && added.length > 0)\n         {\n-            if ( content == null )\n+            if (content == null)\n             {\n-                content = ( String[] ) added.clone();\n+                content = (String[]) added.clone();\n             }\n             else\n             {\n                 String[] newContent = new String[content.length + added.length];\n-                System.arraycopy( content, 0, newContent, 0, content.length );\n-                System.arraycopy( added, 0, newContent, content.length, added.length );\n+                System.arraycopy(content, 0, newContent, 0, content.length);\n+                System.arraycopy(added, 0, newContent, content.length, added.length);\n                 content = newContent;\n             }\n         }\n     }\n \n-\n-    public void addContent( String content, boolean split )\n+    public void addContent(String content, boolean split)\n     {\n-        if ( content != null )\n+        if (content != null)\n         {\n-            if ( split )\n+            if (split)\n             {\n-                addContent( AD.splitList( content ) );\n+                addContent(AD.splitList(content));\n             }\n             else\n             {\n-                addContent( new String[]\n-                    { content } );\n+                addContent(new String[] { content });\n             }\n         }\n     }\n-\n }", "filename": "metatype/src/main/java/org/apache/felix/metatype/Attribute.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/test/java/org/apache/felix/metatype/ADTest.java", "blob_url": "https://github.com/apache/felix/blob/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/test/java/org/apache/felix/metatype/ADTest.java", "sha": "b271c82b49bbe9fa1853a45ac3f1ed1624cff25e", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/metatype/src/test/java/org/apache/felix/metatype/ADTest.java?ref=90e8b8a3ed621346cc6a626eb6e91066b7b4d060", "patch": "@@ -157,6 +157,7 @@ public void testToTypeString()\n         assertEquals(AttributeDefinition.INTEGER, AD.toType(\"Integer\"));\n         assertEquals(AttributeDefinition.BYTE, AD.toType(\"Byte\"));\n         assertEquals(AttributeDefinition.CHARACTER, AD.toType(\"Char\"));\n+        assertEquals(AttributeDefinition.CHARACTER, AD.toType(\"Character\"));\n         assertEquals(AttributeDefinition.BOOLEAN, AD.toType(\"Boolean\"));\n         assertEquals(AttributeDefinition.SHORT, AD.toType(\"Short\"));\n         assertEquals(AttributeDefinition.PASSWORD, AD.toType(\"Password\"));", "filename": "metatype/src/test/java/org/apache/felix/metatype/ADTest.java"}, {"additions": 63, "raw_url": "https://github.com/apache/felix/raw/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/test/java/org/apache/felix/metatype/AttributeTest.java", "blob_url": "https://github.com/apache/felix/blob/90e8b8a3ed621346cc6a626eb6e91066b7b4d060/metatype/src/test/java/org/apache/felix/metatype/AttributeTest.java", "sha": "1ff534959a3d0d4dfa2120f9d996dabd1a09077d", "changes": 63, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/metatype/src/test/java/org/apache/felix/metatype/AttributeTest.java?ref=90e8b8a3ed621346cc6a626eb6e91066b7b4d060", "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.metatype;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n+ */\n+public class AttributeTest extends TestCase\n+{\n+\n+    /**\n+     * FELIX-4771 - attributes can be content-less.\n+     */\n+    public void testAttributeWithoutContentOk() throws Exception\n+    {\n+        Attribute attr = new Attribute();\n+\n+        assertNull(attr.getContent());\n+\n+        // Null-values are ignored, so attribute remains empty...\n+        attr.addContent(null, false);\n+\n+        assertNull(attr.getContent());\n+    }\n+\n+    /**\n+     * FELIX-4771 - attributes can be content-less.\n+     */\n+    public void testAttributeWithNullContentOk() throws Exception\n+    {\n+        Attribute attr = new Attribute();\n+        // Null-values are ignored, so attribute remains empty...\n+        attr.addContent(null, false);\n+\n+        assertNull(attr.getContent());\n+    }\n+\n+    public void testAttributeWithContentOk() throws Exception\n+    {\n+        Attribute attr = new Attribute();\n+        attr.addContent(\"foo\", false /* split */);\n+\n+        assertNotNull(attr.getContent());\n+    }\n+}", "filename": "metatype/src/test/java/org/apache/felix/metatype/AttributeTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/cc125701b343e3883048c5bca4bba58014aea1d6", "parent": "https://github.com/apache/felix/commit/a55c41beb8f26397554741d62e4cd0cfb935f6ab", "message": "FELIX-4385: Applied the patch fixing the NPE when configuration is deleted at the same time \nthe corresponding ManagedService service is unregistered from the OSGi registry.\nAlso added the corresponding integration test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1563946 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_145", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "blob_url": "https://github.com/apache/felix/blob/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "sha": "12dd0de92c5b4d5aaffe21b44213ad0b79783edf", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java?ref=cc125701b343e3883048c5bca4bba58014aea1d6", "patch": "@@ -1663,6 +1663,9 @@ protected boolean provideReplacement( ServiceReference<T> sr )\n                 try\n                 {\n                     final String configPidString = this.getHelper().getServicePid( sr, this.config.getPid() );\n+                    if (configPidString == null) {\n+                        return false; // The managed service is not registered anymore in the OSGi service registry.\n+                    }\n                     final ConfigurationImpl rc = getTargetedConfiguration( configPidString, sr );\n                     if ( rc != null )\n                     {\n@@ -1723,7 +1726,15 @@ public void run()\n             if ( !srList.isEmpty() )\n             {\n                 // optionally bind dynamically to the first service\n-                config.tryBindLocation( srList.get( 0 ).getBundle().getLocation() );\n+                Bundle bundle = srList.get(0).getBundle();\n+                if (bundle == null) {\n+                    log( LogService.LOG_DEBUG,\n+                        \"Service {0} seems to be unregistered concurrently (not providing configuration)\",\n+                        new Object[]\n+                            { ConfigurationManager.toString( srList.get(0) ) } );\n+                    return;\n+                }\n+                config.tryBindLocation( bundle.getLocation() );\n \n                 final String configBundleLocation = config.getBundleLocation();\n ", "filename": "configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java"}, {"additions": 227, "raw_url": "https://github.com/apache/felix/raw/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX4385_StressTest.java", "blob_url": "https://github.com/apache/felix/blob/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX4385_StressTest.java", "sha": "659ce88cd219aa91114212ed7ec892b725907ec3", "changes": 227, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX4385_StressTest.java?ref=cc125701b343e3883048c5bca4bba58014aea1d6", "patch": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.cm.integration;\n+\n+import java.io.IOException;\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import junit.framework.Assert;\n+import junit.framework.TestCase;\n+\n+import org.apache.felix.cm.integration.helper.Log;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.ops4j.pax.exam.junit.JUnit4TestRunner;\n+import org.osgi.framework.Constants;\n+import org.osgi.framework.ServiceRegistration;\n+import org.osgi.service.cm.Configuration;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.osgi.service.cm.ConfigurationException;\n+import org.osgi.service.cm.ManagedService;\n+\n+/**\n+ * The <code>FELIX4385_StressTest</code> class tests the issue related to concurrency between configuration \n+ * creation/update/removal and ManagedService registration/unregistration.\n+ * The test performs some loops, each one is then executing the following scenario:\n+ * Some ManagedServices are concurrently registered in the OSGi registry using an Executor, and for each \n+ * managed service, we create a Configuration.\n+ * We then wait until every managed services have been updated with a non null configuration. Care is taken when a \n+ * ManagedService is called with an initial update(null) callback, because when a configuration is created the very first\n+ * time, an empty configuration is delivered to the corresponding managed service until the configuration is really updated.\n+ * Once all managed services have been updated, we then concurrently unregister the managed services, and we also\n+ * delete every created configurations. We don't use an executor when deleting configuration because the configuration \n+ * removal is already asynchronous.\n+ * \n+ * <p>\n+ * @see <a href=\"https://issues.apache.org/jira/browse/FELIX-4385\">FELIX-4385</a>\n+ */\n+@RunWith(JUnit4TestRunner.class)\n+public class FELIX4385_StressTest extends ConfigurationTestBase\n+{\n+    final static int MAXWAIT = 10000;\n+    final static int MANAGED_SERVICES = 3;\n+    volatile ExecutorService executor;\n+\n+    @Test\n+    public void test_ConcurrentManagedServicesWithConcurrentConfigurations()\n+    {\n+        final Log log = new Log(bundleContext);\n+        log.info(\"starting test_ConcurrentManagedServicesWithConcurrentConfigurations\");\n+        // Use at least 10 parallel threads, or take all available processors if the running host contains more than 10 processors.\n+        int parallelism = Math.max(10, Runtime.getRuntime().availableProcessors());\n+        final ConfigurationAdmin ca = getConfigurationAdmin();\n+        final ExecutorService executor = Executors.newFixedThreadPool(parallelism);\n+        try\n+        {\n+            int pidCounter = 0;\n+\n+            long timeStamp = System.currentTimeMillis();\n+            for (int loop = 0; loop < 1000; loop++)\n+            {\n+                log.debug(\"loop#%d -------------------------\", (loop + 1));\n+\n+                final CountDownLatch managedServiceUpdated = new CountDownLatch(MANAGED_SERVICES);\n+                final CountDownLatch managedServiceUnregistered = new CountDownLatch(MANAGED_SERVICES);\n+\n+                // Create some ManagedServices concurrently\n+                log.info(\"registering aspects concurrently\");\n+                final CopyOnWriteArrayList<ServiceRegistration> managedServices = new CopyOnWriteArrayList<ServiceRegistration>();\n+                final CopyOnWriteArrayList<Configuration> confs = new CopyOnWriteArrayList<Configuration>();\n+\n+                for (int i = 0; i < MANAGED_SERVICES; i++)\n+                {\n+                    final String pid = \"pid.\" + i + \"-\" + (pidCounter++);\n+                    executor.execute(new Runnable()\n+                    {\n+                        public void run()\n+                        {\n+                            Hashtable props = new Hashtable();\n+                            props.put(Constants.SERVICE_PID, pid);\n+\n+                            ServiceRegistration sr = bundleContext.registerService(\n+                                ManagedService.class.getName(),\n+                                new TestManagedService(managedServiceUpdated), props);\n+                            managedServices.add(sr);\n+                            try\n+                            {\n+                                Configuration c = ca.getConfiguration(pid, null);\n+                                c.update(new Hashtable()\n+                                {\n+                                    {\n+                                        put(\"foo\", \"bar\");\n+                                    }\n+                                });\n+                                confs.add(c);\n+                            }\n+                            catch (IOException e)\n+                            {\n+                                log.error(\"could not create pid %s\", e, pid);\n+                                return;\n+                            }\n+                        }\n+                    });\n+                }\n+\n+                if (!managedServiceUpdated.await(MAXWAIT, TimeUnit.MILLISECONDS))\n+                {\n+                    TestCase.fail(\"Detected errors logged during concurrent test\");\n+                    break;\n+                }\n+                log.info(\"all managed services updated\");\n+\n+                // Unregister managed services concurrently\n+                log.info(\"unregistering services concurrently\");\n+                for (final ServiceRegistration sr : managedServices)\n+                {\n+                    executor.execute(new Runnable()\n+                    {\n+                        public void run()\n+                        {\n+                            sr.unregister();\n+                            managedServiceUnregistered.countDown();\n+                        }\n+                    });\n+                }\n+\n+                // Unregister configuration concurrently\n+                log.info(\"unregistering configuration concurrently\");\n+                for (final Configuration c : confs)\n+                {\n+                    c.delete();\n+                }\n+\n+                // Wait until managed services have been unregistered\n+                if (!managedServiceUnregistered.await(MAXWAIT, TimeUnit.MILLISECONDS))\n+                {\n+                    TestCase.fail(\"Managed Servives could not be unregistered timely\");\n+                    break;\n+                }\n+\n+                if (log.errorsLogged())\n+                {\n+                    TestCase.fail(\"Detected errors logged during concurrent test\");\n+                    break;\n+                }\n+\n+                log.info(\"finished one test loop\");\n+                if ((loop + 1) % 100 == 0)\n+                {\n+                    long duration = System.currentTimeMillis() - timeStamp;\n+                    System.out.println(String.format(\"Performed %d tests in %d ms.\", (loop + 1), duration));\n+                    timeStamp = System.currentTimeMillis();\n+                }\n+            }\n+        }\n+\n+        catch (Throwable t)\n+        {\n+            Assert.fail(\"Test failed: \" + t.getMessage());\n+        }\n+\n+        finally\n+        {\n+            shutdown(executor);\n+            log.close();\n+        }\n+    }\n+\n+    void shutdown(ExecutorService exec)\n+    {\n+        exec.shutdown();\n+        try\n+        {\n+            exec.awaitTermination(5, TimeUnit.SECONDS);\n+        }\n+        catch (InterruptedException e)\n+        {\n+        }\n+    }\n+\n+    /**\n+     * One ManagedService concurrently registered in the OSGI registry.\n+     * We count down a latch once we have been updated with our configuration.\n+     */\n+    public class TestManagedService implements ManagedService\n+    {\n+        private final CountDownLatch latch;\n+        private Dictionary<String, ?> props;\n+\n+        TestManagedService(CountDownLatch latch)\n+        {\n+            this.latch = latch;\n+        }\n+\n+        public synchronized void updated(Dictionary<String, ?> properties) throws ConfigurationException\n+        {\n+            if (this.props == null && properties == null)\n+            {\n+                // GetConfiguration has been called, but configuration have not yet been delivered.\n+                return;\n+            }\n+            this.props = properties;\n+            latch.countDown();\n+        }\n+    }\n+}", "filename": "configadmin/src/test/java/org/apache/felix/cm/integration/FELIX4385_StressTest.java"}, {"additions": 239, "raw_url": "https://github.com/apache/felix/raw/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/test/java/org/apache/felix/cm/integration/helper/Log.java", "blob_url": "https://github.com/apache/felix/blob/cc125701b343e3883048c5bca4bba58014aea1d6/configadmin/src/test/java/org/apache/felix/cm/integration/helper/Log.java", "sha": "d30da00dbe2164a6837484272dd6b077b6613372", "changes": 239, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/test/java/org/apache/felix/cm/integration/helper/Log.java?ref=cc125701b343e3883048c5bca4bba58014aea1d6", "patch": "@@ -0,0 +1,239 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.cm.integration.helper;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkEvent;\n+import org.osgi.framework.FrameworkListener;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.framework.ServiceRegistration;\n+import org.osgi.service.log.LogService;\n+\n+/**\n+ * OSGi log service which logs messages to standard output.\n+ * This class can also be used to detect if the ConfigurationAdmin service has logged\n+ * some warnings during a stress integration test.\n+ */\n+public class Log implements LogService, FrameworkListener\n+{\n+    // Default OSGI log service level logged to standard output.\n+    private final static int LOG_LEVEL = LogService.LOG_WARNING;\n+\n+    // Flag used to check if some errors have been logged during the execution of a given test.\n+    private volatile boolean m_errorsLogged;\n+\n+    // We implement OSGI log service.\n+    protected ServiceRegistration logService;\n+\n+    // Bundle context used to register our log listener\n+    private BundleContext ctx;\n+\n+    /**\n+     * Default constructor. \n+     * @Param ctx the Bundle Context used to register this log service. The {@link #close} must\n+     * be called when the logger is not used anymore.\n+     */\n+    public Log(BundleContext ctx)\n+    {\n+        this.ctx = ctx;\n+        logService = ctx.registerService(LogService.class.getName(), this, null);\n+        ctx.addFrameworkListener(this);\n+    }\n+\n+    /**\n+     * Unregister our log listener\n+     */\n+    public void close()\n+    {\n+        logService.unregister();\n+        ctx.removeFrameworkListener(this);\n+    }\n+\n+    public void log(int level, String message)\n+    {\n+        checkError(level, null);\n+        if (LOG_LEVEL >= level)\n+        {\n+            System.out.println(getLevel(level) + \" - \" + Thread.currentThread().getName() + \" : \" + message);\n+        }\n+    }\n+\n+    public void log(int level, String message, Throwable exception)\n+    {\n+        checkError(level, exception);\n+        if (LOG_LEVEL >= level)\n+        {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(getLevel(level) + \" - \" + Thread.currentThread().getName() + \" : \");\n+            sb.append(message);\n+            parse(sb, exception);\n+            System.out.println(sb.toString());\n+        }\n+    }\n+\n+    public void log(ServiceReference sr, int level, String message)\n+    {\n+        checkError(level, null);\n+        if (LOG_LEVEL >= level)\n+        {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(getLevel(level) + \" - \" + Thread.currentThread().getName() + \" : \");\n+            sb.append(message);\n+            System.out.println(sb.toString());\n+        }\n+    }\n+\n+    public void log(ServiceReference sr, int level, String message, Throwable exception)\n+    {\n+        checkError(level, exception);\n+        if (LOG_LEVEL >= level)\n+        {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(getLevel(level) + \" - \" + Thread.currentThread().getName() + \" : \");\n+            sb.append(message);\n+            parse(sb, exception);\n+            System.out.println(sb.toString());\n+        }\n+    }\n+\n+    public boolean errorsLogged()\n+    {\n+        return m_errorsLogged;\n+    }\n+\n+    private void parse(StringBuilder sb, Throwable t)\n+    {\n+        if (t != null)\n+        {\n+            sb.append(\" - \");\n+            StringWriter buffer = new StringWriter();\n+            PrintWriter pw = new PrintWriter(buffer);\n+            t.printStackTrace(pw);\n+            sb.append(buffer.toString());\n+            m_errorsLogged = true;\n+        }\n+    }\n+\n+    private String getLevel(int level)\n+    {\n+        switch (level)\n+        {\n+            case LogService.LOG_DEBUG:\n+                return \"DEBUG\";\n+            case LogService.LOG_ERROR:\n+                return \"ERROR\";\n+            case LogService.LOG_INFO:\n+                return \"INFO\";\n+            case LogService.LOG_WARNING:\n+                return \"WARN\";\n+            default:\n+                return \"\";\n+        }\n+    }\n+\n+    private void checkError(int level, Throwable exception)\n+    {\n+        if (level <= LOG_ERROR)\n+        {\n+            m_errorsLogged = true;\n+        }\n+        if (exception != null)\n+        {\n+            m_errorsLogged = true;\n+        }\n+    }\n+\n+    public void frameworkEvent(FrameworkEvent event)\n+    {\n+        int eventType = event.getType();\n+        String msg = getFrameworkEventMessage(eventType);\n+        int level = (eventType == FrameworkEvent.ERROR) ? LOG_ERROR : LOG_WARNING;\n+        if (msg != null)\n+        {\n+            log(level, msg, event.getThrowable());\n+        }\n+        else\n+        {\n+            log(level, \"Unknown fwk event: \" + event);\n+        }\n+    }\n+\n+    private String getFrameworkEventMessage(int event)\n+    {\n+        switch (event)\n+        {\n+            case FrameworkEvent.ERROR:\n+                return \"FrameworkEvent: ERROR\";\n+            case FrameworkEvent.INFO:\n+                return \"FrameworkEvent INFO\";\n+            case FrameworkEvent.PACKAGES_REFRESHED:\n+                return \"FrameworkEvent: PACKAGE REFRESHED\";\n+            case FrameworkEvent.STARTED:\n+                return \"FrameworkEvent: STARTED\";\n+            case FrameworkEvent.STARTLEVEL_CHANGED:\n+                return \"FrameworkEvent: STARTLEVEL CHANGED\";\n+            case FrameworkEvent.WARNING:\n+                return \"FrameworkEvent: WARNING\";\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    public void warn(String msg, Object... params)\n+    {\n+        if (LOG_LEVEL >= LogService.LOG_WARNING)\n+        {\n+            log(LogService.LOG_WARNING, params.length > 0 ? String.format(msg, params) : msg);\n+        }\n+    }\n+\n+    public void info(String msg, Object... params)\n+    {\n+        if (LOG_LEVEL >= LogService.LOG_INFO)\n+        {\n+            log(LogService.LOG_INFO, params.length > 0 ? String.format(msg, params) : msg);\n+        }\n+    }\n+\n+    public void debug(String msg, Object... params)\n+    {\n+        if (LOG_LEVEL >= LogService.LOG_DEBUG)\n+        {\n+            log(LogService.LOG_DEBUG, params.length > 0 ? String.format(msg, params) : msg);\n+        }\n+    }\n+\n+    public void error(String msg, Object... params)\n+    {\n+        log(LogService.LOG_ERROR, params.length > 0 ? String.format(msg, params) : msg);\n+    }\n+\n+    public void error(String msg, Throwable err, Object... params)\n+    {\n+        log(LogService.LOG_ERROR, params.length > 0 ? String.format(msg, params) : msg, err);\n+    }\n+\n+    public void error(Throwable err)\n+    {\n+        log(LogService.LOG_ERROR, \"error\", err);\n+    }\n+}", "filename": "configadmin/src/test/java/org/apache/felix/cm/integration/helper/Log.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/1fdf69d9c53fe575114d28b78f4274716bbcee3d", "parent": "https://github.com/apache/felix/commit/b869fdd11790092b409b56539e2c5eb6365709c7", "message": "FELIX-4399, FELIX-4400: UserAdmin MongoDB store:\n\n- when creating a new role, we should return the created role if we\n  have good indications that the creation was successful;\n- MongoDB returns null for empty properties, causing NPEs on several\n  occassions.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1560612 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_146", "file": [{"additions": 12, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/pom.xml", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/pom.xml", "sha": "fbfdf53b1b0e0454953c8b23f2b30651a94b5e2e", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/itest/pom.xml?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -39,12 +39,6 @@\n \t<packaging>jar</packaging>\n \t<description>Integration tests for the UserAdmin OSGi compendium service.</description>\n \t<dependencies>\n-\t\t<dependency>\n-\t\t\t<groupId>org.osgi</groupId>\n-\t\t\t<artifactId>org.osgi.core</artifactId>\n-\t\t\t<version>${osgi.version}</version>\n-\t\t\t<scope>provided</scope>\n-\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.osgi</groupId>\n \t\t\t<artifactId>org.osgi.compendium</artifactId>\n@@ -62,6 +56,18 @@\n \t\t\t<version>1.0.3-SNAPSHOT</version>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.felix</groupId>\n+\t\t\t<artifactId>org.apache.felix.useradmin.mongodb</artifactId>\n+\t\t\t<version>1.0.2-SNAPSHOT</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+        <dependency>\n+        \t<groupId>org.mongodb</groupId>\n+        \t<artifactId>mongo-java-driver</artifactId>\n+        \t<version>2.8.0</version>\n+\t\t\t<scope>test</scope>\n+        </dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.apache.felix</groupId>\n \t\t\t<artifactId>org.apache.felix.dependencymanager</artifactId>", "filename": "useradmin/itest/pom.xml"}, {"additions": 69, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/BaseIntegrationTest.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/BaseIntegrationTest.java", "sha": "feb6995291dd4dce49d822d92d9014a06d036dcf", "changes": 103, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/BaseIntegrationTest.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -46,22 +46,26 @@\n  *  \n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n-public abstract class BaseIntegrationTest {\n+public abstract class BaseIntegrationTest\n+{\n \n-\tprivate static final int DEFAULT_TIMEOUT = 10000;\n-\t\n-\tprotected static final String ORG_APACHE_FELIX_USERADMIN = \"org.apache.felix.useradmin\";\n-\tprotected static final String ORG_APACHE_FELIX_USERADMIN_FILESTORE = \"org.apache.felix.useradmin.filestore\";\n+    private static final int DEFAULT_TIMEOUT = 10000;\n+\n+    protected static final String ORG_APACHE_FELIX_USERADMIN = \"org.apache.felix.useradmin\";\n+    protected static final String ORG_APACHE_FELIX_USERADMIN_FILESTORE = \"org.apache.felix.useradmin.filestore\";\n+    protected static final String ORG_APACHE_FELIX_USERADMIN_MONGODBSTORE = \"org.apache.felix.useradmin.mongodb\";\n+    protected static final String ORG_MONGODB_MONGO_JAVA_DRIVER = \"org.mongodb.mongo-java-driver\";\n \n     @Inject\n     protected volatile BundleContext m_context;\n \n     @Configuration\n-    public Option[] config() {\n+    public Option[] config()\n+    {\n         return options(\n             bootDelegationPackage(\"sun.*\"),\n             cleanCaches(),\n-            CoreOptions.systemProperty(\"logback.configurationFile\").value(\"file:src/test/resources/logback.xml\"),\n+            CoreOptions.systemProperty(\"logback.configurationFile\").value(\"file:src/test/resources/logback.xml\"), //\n //            CoreOptions.vmOption(\"-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8787\"),\n \n             mavenBundle(\"org.slf4j\", \"slf4j-api\").version(\"1.6.5\").startLevel(START_LEVEL_SYSTEM_BUNDLES),\n@@ -79,15 +83,15 @@\n             url(\"link:classpath:META-INF/links/org.apache.geronimo.specs.atinject.link\").startLevel(START_LEVEL_SYSTEM_BUNDLES),\n \n             mavenBundle(\"org.apache.felix\", ORG_APACHE_FELIX_USERADMIN).versionAsInProject().startLevel(START_LEVEL_SYSTEM_BUNDLES),\n-            mavenBundle(\"org.apache.felix\", ORG_APACHE_FELIX_USERADMIN_FILESTORE).versionAsInProject().startLevel(START_LEVEL_SYSTEM_BUNDLES),\n-            \n-            junitBundles(),\n-            frameworkStartLevel(START_LEVEL_TEST_BUNDLE),\n-            felix());\n+            mavenBundle(\"org.apache.felix\", ORG_APACHE_FELIX_USERADMIN_FILESTORE).versionAsInProject().noStart(),\n+            mavenBundle(\"org.apache.felix\", ORG_APACHE_FELIX_USERADMIN_MONGODBSTORE).versionAsInProject().noStart(), mavenBundle(\"org.mongodb\", \"mongo-java-driver\").versionAsInProject().noStart(),\n+\n+            junitBundles(), frameworkStartLevel(START_LEVEL_TEST_BUNDLE), felix());\n     }\n \n     @Before\n-    public void setUp() throws Exception {\n+    public void setUp() throws Exception\n+    {\n         assertNotNull(\"No bundle context?!\", m_context);\n     }\n \n@@ -97,55 +101,86 @@ public void setUp() throws Exception {\n      * @return\n      * @throws Exception\n      */\n-    protected <T> T awaitService(String serviceName) throws Exception {\n+    protected <T> T awaitService(String serviceName) throws Exception\n+    {\n         ServiceTracker tracker = new ServiceTracker(m_context, serviceName, null);\n         tracker.open();\n         T result;\n-        try {\n+        try\n+        {\n             result = (T) tracker.waitForService(DEFAULT_TIMEOUT);\n         }\n-        finally {\n+        finally\n+        {\n             tracker.close();\n         }\n         return result;\n     }\n \n+    /**\n+     * @param bsn\n+     * @return\n+     */\n+    protected Bundle findBundle(String bsn)\n+    {\n+        for (Bundle bundle : m_context.getBundles())\n+        {\n+            if (bsn.equals(bundle.getSymbolicName()))\n+            {\n+                return bundle;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    protected Bundle getFileStoreBundle()\n+    {\n+        Bundle b = findBundle(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n+        assertNotNull(\"Filestore bundle not found?!\", b);\n+        return b;\n+    }\n+\n+    protected Bundle getMongoDBStoreBundle()\n+    {\n+        Bundle b = findBundle(ORG_APACHE_FELIX_USERADMIN_MONGODBSTORE);\n+        assertNotNull(\"MongoDB store bundle not found?!\", b);\n+        return b;\n+    }\n+\n+    protected Bundle getMongoDBBundle()\n+    {\n+        Bundle b = findBundle(ORG_MONGODB_MONGO_JAVA_DRIVER);\n+        assertNotNull(\"MongoDB bundle not found?!\", b);\n+        return b;\n+    }\n+\n     /**\n      * Obtains a service without waiting for it to become available.\n      * @param serviceName\n      * @return\n      * @throws Exception\n      */\n-    protected <T> T getService(String serviceName) throws Exception {\n+    protected <T> T getService(String serviceName) throws Exception\n+    {\n         ServiceTracker tracker = new ServiceTracker(m_context, serviceName, null);\n         tracker.open();\n         T result;\n-        try {\n+        try\n+        {\n             result = (T) tracker.getService();\n         }\n-        finally {\n+        finally\n+        {\n             tracker.close();\n         }\n         return result;\n     }\n-    \n+\n     /**\n      * @return the {@link UserAdmin} service instance.\n      */\n-    protected UserAdmin getUserAdmin() throws Exception {\n+    protected UserAdmin getUserAdmin() throws Exception\n+    {\n         return getService(UserAdmin.class.getName());\n     }\n-\n-    /**\n-     * @param bsn\n-     * @return\n-     */\n-    protected Bundle findBundle(String bsn) {\n-    \tfor (Bundle bundle : m_context.getBundles()) {\n-    \t\tif (bsn.equals(bundle.getSymbolicName())) {\n-    \t\t\treturn bundle;\n-    \t\t}\n-    \t}\n-    \treturn null;\n-    }\n }", "filename": "useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/BaseIntegrationTest.java"}, {"additions": 47, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/FileStoreInitializationTest.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/FileStoreInitializationTest.java", "sha": "fd854e0970faffaff532136361dea808864e6254", "changes": 91, "status": "modified", "deletions": 44, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/FileStoreInitializationTest.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -36,51 +36,54 @@\n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n @RunWith(JUnit4TestRunner.class)\n-public class FileStoreInitializationTest extends BaseIntegrationTest {\n-\n-\t/**\n-\t * Tests that initialization and closing of the repository store is\n-\t * performed correctly.\n-\t */\n-\t@Test\n-\tpublic void testStoreIsInitializedAndClosedProperlyOk() throws Exception {\n-\t    UserAdmin ua = getUserAdmin();\n-\t    \n-\t    // Create two roles...\n-\t    User user = (User) ua.createRole(\"user1\", Role.USER);\n-\t    assertNotNull(user);\n-\t    \n-\t    Group group = (Group) ua.createRole(\"group1\", Role.GROUP);\n-\t    assertNotNull(group);\n-\t    \n-\t    group.addMember(user);\n-\t    group.addRequiredMember(ua.getRole(Role.USER_ANYONE));\n-\n-\t\t// Stop the file store; should persist the two roles...\n-\t\tBundle fileStoreBundle = findBundle(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n-\t\tassertNotNull(fileStoreBundle);\n-\t\tfileStoreBundle.stop();\n-\n-\t\tThread.sleep(100); // Wait a little until the bundle is really stopped...\n-\t\t\n-\t\t// Retrieve the roles again; should both yield null due to the store not being available...\n-\t\tuser = (User) ua.getRole(\"user1\");\n-\t\tassertNull(user);\n-\n-\t\tgroup = (Group) ua.getRole(\"group1\");\n-\t\tassertNull(group);\n-\t\t\n-\t\t// This will not succeed: no backend to store the user in...\n-\t\tassertNull(ua.createRole(\"user2\", Role.USER));\n-\n-\t\tfileStoreBundle.start();\n-\n-\t\tawaitService(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n-        \n+public class FileStoreInitializationTest extends BaseIntegrationTest\n+{\n+\n+    /**\n+     * Tests that initialization and closing of the repository store is\n+     * performed correctly.\n+     */\n+    @Test\n+    public void testStoreIsInitializedAndClosedProperlyOk() throws Exception\n+    {\n+        UserAdmin ua = getUserAdmin();\n+        // Start the file store bundle...\n+        Bundle fileStoreBundle = getFileStoreBundle();\n+        fileStoreBundle.start();\n+\n+        // Create two roles...\n+        User user = (User) ua.createRole(\"user1\", Role.USER);\n+        assertNotNull(user);\n+\n+        Group group = (Group) ua.createRole(\"group1\", Role.GROUP);\n+        assertNotNull(group);\n+\n+        group.addMember(user);\n+        group.addRequiredMember(ua.getRole(Role.USER_ANYONE));\n+\n+        // Stop the file store; should persist the two roles...\n+        fileStoreBundle.stop();\n+\n+        Thread.sleep(100); // Wait a little until the bundle is really stopped...\n+\n+        // Retrieve the roles again; should both yield null due to the store not being available...\n+        user = (User) ua.getRole(\"user1\");\n+        assertNull(user);\n+\n+        group = (Group) ua.getRole(\"group1\");\n+        assertNull(group);\n+\n+        // This will not succeed: no backend to store the user in...\n+        assertNull(ua.createRole(\"user2\", Role.USER));\n+\n+        fileStoreBundle.start();\n+\n+        awaitService(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n+\n         // Retrieve the roles again; should both yield valid values...\n         user = (User) ua.getRole(\"user1\");\n         assertNotNull(user);\n-        \n+\n         group = (Group) ua.getRole(\"group1\");\n         assertNotNull(group);\n \n@@ -93,8 +96,8 @@ public void testStoreIsInitializedAndClosedProperlyOk() throws Exception {\n         assertNotNull(members);\n         assertEquals(1, members.length);\n         assertEquals(Role.USER_ANYONE, members[0].getName());\n-        \n+\n         user = (User) ua.getRole(\"user2\");\n         assertNull(user);\n-\t}\n+    }\n }", "filename": "useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/FileStoreInitializationTest.java"}, {"additions": 201, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/MongoDBStoreTest.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/MongoDBStoreTest.java", "sha": "371d0960860048cf628b06b9b23a221de668024f", "changes": 201, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/MongoDBStoreTest.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -0,0 +1,201 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.useradmin.itest;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.ops4j.pax.exam.junit.JUnit4TestRunner;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.cm.ManagedService;\n+import org.osgi.service.useradmin.Role;\n+import org.osgi.service.useradmin.User;\n+import org.osgi.service.useradmin.UserAdmin;\n+\n+import com.mongodb.BasicDBObject;\n+import com.mongodb.CommandResult;\n+import com.mongodb.DB;\n+import com.mongodb.DBCollection;\n+import com.mongodb.Mongo;\n+import com.mongodb.WriteConcern;\n+\n+/**\n+ * Main integration test for the user admin service.\n+ * \n+ * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n+ */\n+@RunWith(JUnit4TestRunner.class)\n+public class MongoDBStoreTest extends BaseIntegrationTest\n+{\n+    /**\n+     * Tests that fetching an empty role without properties or other roles does not cause a NPE.\n+     */\n+    @Test\n+    public void testFelix4399_FetchEmptyRoleOk() throws Exception\n+    {\n+        UserAdmin ua = getUserAdmin();\n+\n+        String roleName = \"emptyRole\";\n+\n+        if (canRunTest())\n+        {\n+            Role emptyRole = ua.createRole(roleName, Role.USER);\n+            assertNotNull(\"Collection not empty?!\", emptyRole);\n+\n+            Role readRole = ua.getRole(roleName);\n+\n+            assertNotNull(\"Unable to read back created empty role?!\", readRole);\n+            assertEquals(\"Names not equal?!\", emptyRole.getName(), readRole.getName());\n+            assertEquals(\"Types not equal?!\", emptyRole.getType(), readRole.getType());\n+\n+            Role[] readRoles = ua.getRoles(null);\n+\n+            assertNotNull(\"Unable to read back created empty role?!\", readRoles);\n+            assertEquals(1, readRoles.length);\n+        }\n+    }\n+\n+    /**\n+     * Tests that creating a new role returns the actual created role.\n+     */\n+    @Test\n+    public void testFelix4400_CreateRoleReturnsNonNullOk() throws Exception\n+    {\n+        UserAdmin ua = getUserAdmin();\n+\n+        String roleName = \"newRole\";\n+\n+        if (canRunTest())\n+        {\n+            Role newRole = ua.createRole(roleName, Role.USER);\n+            assertNotNull(\"Felix-4400 not resolved?!\", newRole);\n+\n+            assertEquals(\"Names not equal?!\", roleName, newRole.getName());\n+            assertEquals(\"Types not equal?!\", Role.USER, newRole.getType());\n+        }\n+    }\n+\n+    /**\n+     * Tests that removing a role works correctly.\n+     */\n+    @Test\n+    public void testRemoveRoleOk() throws Exception\n+    {\n+        UserAdmin ua = getUserAdmin();\n+\n+        String roleName = \"newRole\";\n+        Role[] readRoles;\n+\n+        if (canRunTest())\n+        {\n+            Role role = ua.createRole(roleName, Role.USER);\n+            assertNotNull(\"Collection not empty?!\", role);\n+\n+            readRoles = ua.getRoles(null);\n+\n+            assertNotNull(\"No roles stored?!\", readRoles);\n+            assertEquals(1, readRoles.length);\n+\n+            ua.removeRole(roleName);\n+\n+            readRoles = ua.getRoles(null);\n+\n+            assertNull(\"Still roles stored?!\", readRoles);\n+        }\n+    }\n+\n+    /**\n+     * Tests that removing a role works correctly.\n+     */\n+    @Test\n+    public void testUpdateRoleOk() throws Exception\n+    {\n+        UserAdmin ua = getUserAdmin();\n+\n+        String roleName = \"role1\";\n+        Role[] readRoles;\n+\n+        if (canRunTest())\n+        {\n+            User role = (User) ua.createRole(roleName, Role.USER);\n+            assertNotNull(\"Collection not empty?!\", role);\n+\n+            readRoles = ua.getRoles(null);\n+\n+            assertNotNull(\"No roles stored?!\", readRoles);\n+            assertEquals(1, readRoles.length);\n+\n+            role.getProperties().put(\"key\", \"value\");\n+\n+            Thread.sleep(100); // Wait a little to ensure everything is written...\n+\n+            readRoles = ua.getRoles(\"(key=value)\");\n+\n+            assertNotNull(\"Role not updated?!\", readRoles);\n+            assertEquals(1, readRoles.length);\n+        }\n+    }\n+\n+    /**\n+     * Sets up MongoDB and tries to clear the useradmin collection. When this fails, it is assumed that no MongoDB service is available.\n+     */\n+    private boolean canRunTest() throws BundleException\n+    {\n+        Bundle mongoBundle = getMongoDBBundle();\n+        mongoBundle.start();\n+\n+        Bundle mongoStoreBundle = getMongoDBStoreBundle();\n+        mongoStoreBundle.start();\n+\n+        // Provision an empty configuration...\n+        BundleContext context = mongoStoreBundle.getBundleContext();\n+\n+        ServiceReference serviceRef = context.getServiceReference(ManagedService.class.getName());\n+        assertNotNull(serviceRef);\n+\n+        ManagedService service = (ManagedService) context.getService(serviceRef);\n+        try\n+        {\n+            service.updated(null);\n+\n+            Mongo mongo = new Mongo();\n+            DB db = mongo.getDB(\"ua_repo\");\n+            DBCollection collection = db.getCollection(\"useradmin\");\n+            // we always get a collection back, regardless if there is an actual MongoDB listening, hence we should do\n+            // some actual calls that cause a connection to MongoDB to be created...\n+            collection.remove(new BasicDBObject(), WriteConcern.SAFE);\n+\n+            CommandResult lastError = db.getLastError();\n+\n+            return (lastError.getException() == null && collection.getCount() == 0L);\n+        }\n+        catch (Exception e)\n+        {\n+            // Ignore; apparently, we failed to connect to MongoDB...\n+        }\n+\n+        return false;\n+    }\n+}", "filename": "useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/MongoDBStoreTest.java"}, {"additions": 108, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/UserAdminIntegrationTest.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/UserAdminIntegrationTest.java", "sha": "c09916e8bd9534e14619a14b4041710599f878b3", "changes": 212, "status": "modified", "deletions": 104, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/UserAdminIntegrationTest.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -35,108 +35,112 @@\n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n @RunWith(JUnit4TestRunner.class)\n-public class UserAdminIntegrationTest extends BaseIntegrationTest {\n-\t\n-\t/**\n-\t * Tests that stopping a filled store and starting it again will cause it to\n-\t * properly restore its state.\n-\t */\n-\t@Test\n-\tpublic void testFelix3735_StopRunningStoreRetainsDataOk() throws Exception {\n-\t\tfinal String userName = \"testUser\";\n-\t\tfinal String groupName = \"testGroup\";\n-\n-\t\tUserAdmin userAdmin = awaitService(UserAdmin.class.getName());\n-\n-\t\t// Fill the user admin with some data...\n-\t\tUser testUser = (User) userAdmin.createRole(userName, Role.USER);\n-\t\ttestUser.getProperties().put(\"key\", \"value\");\n-\n-\t\tGroup testGroup = (Group) userAdmin.createRole(groupName, Role.GROUP);\n-\t\ttestGroup.addMember(testUser);\n-\n-\t\t// Stop the file store...\n-\t\tBundle fileStoreBundle = findBundle(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n-\t\tassertNotNull(fileStoreBundle);\n-\t\tfileStoreBundle.stop();\n-\n-\t\t// retrieve the useradmin again...\n-\t\tuserAdmin = awaitService(UserAdmin.class.getName());\n-\n-\t\t// Verify the user + group are gone (no store available)...\n-\t\tassertNull(userAdmin.getRole(userName));\n-\t\tassertNull(userAdmin.getRole(groupName));\n-\n-\t\t// Start the file store...\n-\t\tfileStoreBundle.start();\n-\n-\t\t// Verify the user + group are gone (no store available)...\n-\t\tUser readUser = (User) userAdmin.getRole(userName);\n-\t\tassertNotNull(readUser);\n-\t\tassertEquals(userName, readUser.getName());\n-\t\tassertEquals(\"value\", readUser.getProperties().get(\"key\"));\n-\n-\t\tGroup readGroup = (Group) userAdmin.getRole(groupName);\n-\t\tassertNotNull(readGroup);\n-\t\tassertEquals(groupName, readGroup.getName());\n-\t\tassertEquals(1, readGroup.getMembers().length);\n-\t\tassertEquals(readUser, readGroup.getMembers()[0]);\n-\t}\n-\n-\t/**\n-\t * Tests that starting the file store <em>after</em> the user admin service\n-\t * is started will cause it to be properly initialized.\n-\t */\n-\t@Test\n-\tpublic void testFelix3735_StartStoreAfterUserAdminInitializesOk() throws Exception {\n-\t\tfinal String userName = \"anotherTestUser\";\n-\t\tfinal String groupName = \"anotherTestGroup\";\n-\n-\t\tUserAdmin userAdmin = awaitService(UserAdmin.class.getName());\n-\n-\t\t// Fill the user admin with some data...\n-\t\tUser testUser = (User) userAdmin.createRole(userName, Role.USER);\n-\t\ttestUser.getProperties().put(\"key\", \"value\");\n-\n-\t\tGroup testGroup = (Group) userAdmin.createRole(groupName, Role.GROUP);\n-\t\ttestGroup.addMember(testUser);\n-\n-\t\t// Stop the file store...\n-\t\tBundle fileStoreBundle = findBundle(ORG_APACHE_FELIX_USERADMIN_FILESTORE);\n-\t\tassertNotNull(fileStoreBundle);\n-\t\tfileStoreBundle.stop();\n-\n-\t\tBundle userAdminBundle = findBundle(ORG_APACHE_FELIX_USERADMIN);\n-\t\tassertNotNull(userAdminBundle);\n-\t\tuserAdminBundle.stop();\n-\n-\t\t// Obtain user admin service again; shouldn't be available...\n-\t\tuserAdmin = getService(UserAdmin.class.getName());\n-\t\tassertNull(userAdmin);\n-\n-\t\tuserAdminBundle.start();\n-\n-\t\t// Obtain user admin service again; should be available now...\n-\t\tuserAdmin = awaitService(UserAdmin.class.getName());\n-\t\tassertNotNull(userAdmin);\n-\n-\t\t// Verify the user + group are gone (no store available)...\n-\t\tassertNull(userAdmin.getRole(userName));\n-\t\tassertNull(userAdmin.getRole(groupName));\n-\n-\t\t// Start the file store...\n-\t\tfileStoreBundle.start();\n-\n-\t\t// Verify the user + group are gone (no store available)...\n-\t\tUser readUser = (User) userAdmin.getRole(userName);\n-\t\tassertNotNull(readUser);\n-\t\tassertEquals(userName, readUser.getName());\n-\t\tassertEquals(\"value\", readUser.getProperties().get(\"key\"));\n-\n-\t\tGroup readGroup = (Group) userAdmin.getRole(groupName);\n-\t\tassertNotNull(readGroup);\n-\t\tassertEquals(groupName, readGroup.getName());\n-\t\tassertEquals(1, readGroup.getMembers().length);\n-\t\tassertEquals(readUser, readGroup.getMembers()[0]);\n-\t}\n+public class UserAdminIntegrationTest extends BaseIntegrationTest\n+{\n+    /**\n+     * Tests that stopping a filled store and starting it again will cause it to\n+     * properly restore its state.\n+     */\n+    @Test\n+    public void testFelix3735_StopRunningStoreRetainsDataOk() throws Exception\n+    {\n+        final String userName = \"testUser\";\n+        final String groupName = \"testGroup\";\n+\n+        UserAdmin userAdmin = awaitService(UserAdmin.class.getName());\n+        Bundle fileStoreBundle = getFileStoreBundle();\n+        // Start a suitable storage service...\n+        fileStoreBundle.start();\n+\n+        // Fill the user admin with some data...\n+        User testUser = (User) userAdmin.createRole(userName, Role.USER);\n+        testUser.getProperties().put(\"key\", \"value\");\n+\n+        Group testGroup = (Group) userAdmin.createRole(groupName, Role.GROUP);\n+        testGroup.addMember(testUser);\n+\n+        // Stop the file store...\n+        fileStoreBundle.stop();\n+\n+        // retrieve the useradmin again...\n+        userAdmin = awaitService(UserAdmin.class.getName());\n+\n+        // Verify the user + group are gone (no store available)...\n+        assertNull(userAdmin.getRole(userName));\n+        assertNull(userAdmin.getRole(groupName));\n+\n+        // Start the file store...\n+        fileStoreBundle.start();\n+\n+        // Verify the user + group are gone (no store available)...\n+        User readUser = (User) userAdmin.getRole(userName);\n+        assertNotNull(readUser);\n+        assertEquals(userName, readUser.getName());\n+        assertEquals(\"value\", readUser.getProperties().get(\"key\"));\n+\n+        Group readGroup = (Group) userAdmin.getRole(groupName);\n+        assertNotNull(readGroup);\n+        assertEquals(groupName, readGroup.getName());\n+        assertEquals(1, readGroup.getMembers().length);\n+        assertEquals(readUser, readGroup.getMembers()[0]);\n+    }\n+\n+    /**\n+     * Tests that starting the file store <em>after</em> the user admin service\n+     * is started will cause it to be properly initialized.\n+     */\n+    @Test\n+    public void testFelix3735_StartStoreAfterUserAdminInitializesOk() throws Exception\n+    {\n+        final String userName = \"anotherTestUser\";\n+        final String groupName = \"anotherTestGroup\";\n+\n+        UserAdmin userAdmin = awaitService(UserAdmin.class.getName());\n+        Bundle fileStoreBundle = getFileStoreBundle();\n+        // Start a suitable storage service...\n+        fileStoreBundle.start();\n+\n+        // Fill the user admin with some data...\n+        User testUser = (User) userAdmin.createRole(userName, Role.USER);\n+        testUser.getProperties().put(\"key\", \"value\");\n+\n+        Group testGroup = (Group) userAdmin.createRole(groupName, Role.GROUP);\n+        testGroup.addMember(testUser);\n+\n+        // Stop the file store...\n+        fileStoreBundle.stop();\n+\n+        Bundle userAdminBundle = findBundle(ORG_APACHE_FELIX_USERADMIN);\n+        assertNotNull(userAdminBundle);\n+        userAdminBundle.stop();\n+\n+        // Obtain user admin service again; shouldn't be available...\n+        userAdmin = getService(UserAdmin.class.getName());\n+        assertNull(userAdmin);\n+\n+        userAdminBundle.start();\n+\n+        // Obtain user admin service again; should be available now...\n+        userAdmin = awaitService(UserAdmin.class.getName());\n+        assertNotNull(userAdmin);\n+\n+        // Verify the user + group are gone (no store available)...\n+        assertNull(userAdmin.getRole(userName));\n+        assertNull(userAdmin.getRole(groupName));\n+\n+        // Start the file store...\n+        fileStoreBundle.start();\n+\n+        // Verify the user + group are gone (no store available)...\n+        User readUser = (User) userAdmin.getRole(userName);\n+        assertNotNull(readUser);\n+        assertEquals(userName, readUser.getName());\n+        assertEquals(\"value\", readUser.getProperties().get(\"key\"));\n+\n+        Group readGroup = (Group) userAdmin.getRole(groupName);\n+        assertNotNull(readGroup);\n+        assertEquals(groupName, readGroup.getName());\n+        assertEquals(1, readGroup.getMembers().length);\n+        assertEquals(readUser, readGroup.getMembers()[0]);\n+    }\n }", "filename": "useradmin/itest/src/test/java/org/apache/felix/useradmin/itest/UserAdminIntegrationTest.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java", "sha": "fd80e86e6928c910b21df4829a8934641f8fdf2a", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -147,7 +147,8 @@ public Role addRole(String roleName, int type) throws MongoException {\n             result.getLastError().throwOnError();\n         }\n \n-        return role;\n+        // FELIX-4400: ensure we return the correct role...\n+        return getRole(roleName);\n     }\n \n     /**", "filename": "useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java"}, {"additions": 81, "raw_url": "https://github.com/apache/felix/raw/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoSerializerHelper.java", "blob_url": "https://github.com/apache/felix/blob/1fdf69d9c53fe575114d28b78f4274716bbcee3d/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoSerializerHelper.java", "sha": "06a80052edcb85daf092b727872d05e5deb7c65d", "changes": 131, "status": "modified", "deletions": 50, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoSerializerHelper.java?ref=1fdf69d9c53fe575114d28b78f4274716bbcee3d", "patch": "@@ -34,26 +34,28 @@\n /**\n  * Provides a helper class for (de)serializing data to/from MongoDB.\n  */\n-final class MongoSerializerHelper {\n-    \n+final class MongoSerializerHelper\n+{\n+\n     static final String TYPE = \"type\";\n     static final String NAME = \"name\";\n-    \n+\n     static final String PROPERTIES = \"properties\";\n     static final String CREDENTIALS = \"credentials\";\n     static final String MEMBERS = \"members\";\n     static final String REQUIRED_MEMBERS = \"requiredMembers\";\n-    \n+\n     static final String SET = \"$set\";\n-    \n+\n     private final RoleProvider m_roleProvider;\n-    \n+\n     /**\n      * Creates a new {@link MongoSerializerHelper} instance.\n      * \n      * @param roleProvider the role provider to use, cannot be <code>null</code>.\n      */\n-    public MongoSerializerHelper(RoleProvider roleProvider) {\n+    public MongoSerializerHelper(RoleProvider roleProvider)\n+    {\n         m_roleProvider = roleProvider;\n     }\n \n@@ -63,29 +65,34 @@ public MongoSerializerHelper(RoleProvider roleProvider) {\n      * @param object the {@link DBObject} to convert, cannot be <code>null</code>.\n      * @return a {@link Role} instance, never <code>null</code>.\n      */\n-    public Role deserialize(DBObject object) {\n+    public Role deserialize(DBObject object)\n+    {\n         int type = ((Integer) object.get(TYPE)).intValue();\n         String name = (String) object.get(NAME);\n \n         Role result = RoleFactory.createRole(type, name);\n         // Read the generic properties of the role...\n         deserializeDictionary(result.getProperties(), (DBObject) object.get(PROPERTIES));\n-        \n-        if ((Role.GROUP == type) || (Role.USER == type)) {\n+\n+        if ((Role.GROUP == type) || (Role.USER == type))\n+        {\n             // This is safe, as Group extends from User...\n             deserializeDictionary(((User) result).getCredentials(), (DBObject) object.get(CREDENTIALS));\n \n-            if (Role.GROUP == type) {\n-                for (Role member : getRoles((BasicDBList) object.get(MEMBERS))) {\n+            if (Role.GROUP == type)\n+            {\n+                for (Role member : getRoles((BasicDBList) object.get(MEMBERS)))\n+                {\n                     ((Group) result).addMember(member);\n                 }\n \n-                for (Role member : getRoles((BasicDBList) object.get(REQUIRED_MEMBERS))) {\n+                for (Role member : getRoles((BasicDBList) object.get(REQUIRED_MEMBERS)))\n+                {\n                     ((Group) result).addRequiredMember(member);\n                 }\n             }\n         }\n-        \n+\n         return result;\n     }\n \n@@ -95,24 +102,27 @@ public Role deserialize(DBObject object) {\n      * @param role the {@link Role} to serialize, cannot be <code>null</code> (unchecked!).\n      * @return a {@link DBObject} representing the given {@link Role}, never <code>null</code>.\n      */\n-    public DBObject serialize(Role role) {\n+    public DBObject serialize(Role role)\n+    {\n         BasicDBObject data = new BasicDBObject();\n-        \n+\n         int type = role.getType();\n-        \n+\n         data.put(TYPE, type);\n         data.put(NAME, role.getName());\n \n         data.put(PROPERTIES, serializeDictionary(role.getProperties()));\n-        if ((Role.GROUP == type) || (Role.USER == type)) {\n+        if ((Role.GROUP == type) || (Role.USER == type))\n+        {\n             data.put(CREDENTIALS, serializeDictionary(((User) role).getCredentials()));\n \n-            if (Role.GROUP == type) {\n+            if (Role.GROUP == type)\n+            {\n                 data.put(MEMBERS, getRoleNames(((Group) role).getMembers()));\n                 data.put(REQUIRED_MEMBERS, getRoleNames(((Group) role).getRequiredMembers()));\n             }\n         }\n-        \n+\n         return data;\n     }\n \n@@ -123,36 +133,40 @@ public DBObject serialize(Role role) {\n      * @param type the type of the role to serialize.\n      * @return a {@link DBObject} representing the role with the given name and type, never <code>null</code>.\n      */\n-    public DBObject serialize(String roleName, int type) {\n+    public DBObject serialize(String roleName, int type)\n+    {\n         BasicDBObject data = new BasicDBObject();\n-        \n+\n         data.put(TYPE, type);\n         data.put(NAME, roleName);\n-        \n+\n         return data;\n     }\n-    \n+\n     /**\n      * Creates a serialized version of the given {@link Role} to be used in an update statement.\n      * \n      * @param role the {@link Role} to update, cannot be <code>null</code>.\n      * @return a {@link DBObject} representing an update statement for the given {@link Role}.\n      */\n-    public DBObject serializeUpdate(Role role) {\n+    public DBObject serializeUpdate(Role role)\n+    {\n         int type = role.getType();\n-        \n+\n         BasicDBObject changeSet = new BasicDBObject();\n-        \n+\n         changeSet.put(PROPERTIES, serializeDictionary(role.getProperties()));\n-        if ((Role.GROUP == type) || (Role.USER == type)) {\n+        if ((Role.GROUP == type) || (Role.USER == type))\n+        {\n             changeSet.put(CREDENTIALS, serializeDictionary(((User) role).getCredentials()));\n \n-            if (Role.GROUP == type) {\n+            if (Role.GROUP == type)\n+            {\n                 changeSet.put(MEMBERS, getRoleNames(((Group) role).getMembers()));\n                 changeSet.put(REQUIRED_MEMBERS, getRoleNames(((Group) role).getRequiredMembers()));\n             }\n         }\n-        \n+\n         return new BasicDBObject(SET, changeSet);\n     }\n \n@@ -163,9 +177,11 @@ public DBObject serializeUpdate(Role role) {\n      * @return a member instance, never <code>null</code>.\n      * @throws MongoException in case the requested member was not found (or any other MongoDB exception).\n      */\n-    final Role findExistingMember(String name) {\n+    final Role findExistingMember(String name)\n+    {\n         Role result = m_roleProvider.getRole(name);\n-        if (result == null) {\n+        if (result == null)\n+        {\n             throw new MongoException(\"No such role: \" + name);\n         }\n         return result;\n@@ -174,40 +190,53 @@ final Role findExistingMember(String name) {\n     /**\n      * Deserializes the given {@link DBObject} into the given {@link Dictionary}.\n      * \n-     * @param dictionary the dictionary to fill;\n-     * @param object the {@link DBObject} to deserialize.\n+     * @param dictionary the dictionary to fill, cannot be <code>null</code>;\n+     * @param object the {@link DBObject} to deserialize, can be <code>null</code>.\n      */\n-    private void deserializeDictionary(Dictionary dictionary, DBObject object) {\n-        for (String key : object.keySet()) {\n-            dictionary.put(KeyCodec.decode(key), object.get(key));\n+    private void deserializeDictionary(Dictionary dictionary, DBObject object)\n+    {\n+        // FELIX-4399: MongoDB does return null for empty properties...\n+        if (object != null)\n+        {\n+            for (String key : object.keySet())\n+            {\n+                dictionary.put(KeyCodec.decode(key), object.get(key));\n+            }\n         }\n     }\n-    \n+\n     /**\n      * Serializes a given array of {@link Role}s to an list for storing in a {@link DBObject}.\n      * \n      * @param members the {@link Role}s to serialize, cannot be <code>null</code>.\n      * @return the \"serialized\" array, never <code>null</code>.\n      */\n-    private List<String> getRoleNames(Role[] members) {\n+    private List<String> getRoleNames(Role[] members)\n+    {\n         List<String> result = new ArrayList<String>();\n-        if (members != null) {\n-            for (Role member : members) {\n+        if (members != null)\n+        {\n+            for (Role member : members)\n+            {\n                 result.add(member.getName());\n             }\n         }\n         return result;\n     }\n-    \n+\n     /**\n      * Returns all roles mentioned in the given list.\n      * \n-     * @param list the list with role names to convert.\n+     * @param list the list with role names to convert, can be <code>null</code>.\n      * @return a list with {@link Role}s, never <code>null</code>.\n      */\n-    private List<Role> getRoles(BasicDBList list) {\n+    private List<Role> getRoles(BasicDBList list)\n+    {\n         List<Role> result = new ArrayList<Role>();\n-        for (int i = 0, size = list.size(); i < size; i++) {\n+        // FELIX-4399: MongoDB does return null for empty properties...\n+        int size = (list == null) ? 0 : list.size();\n+        for (int i = 0; i < size; i++)\n+        {\n             final String memberName = (String) list.get(i);\n             result.add(findExistingMember(memberName));\n         }\n@@ -220,17 +249,19 @@ private void deserializeDictionary(Dictionary dictionary, DBObject object) {\n      * @param properties the {@link Dictionary} to serialize, cannot be <code>null</code>.\n      * @return the serialized dictionary, never <code>null</code>. \n      */\n-    private DBObject serializeDictionary(Dictionary properties) {\n+    private DBObject serializeDictionary(Dictionary properties)\n+    {\n         BasicDBObject result = new BasicDBObject();\n-        \n+\n         Enumeration<String> keysEnum = properties.keys();\n-        while (keysEnum.hasMoreElements()) {\n+        while (keysEnum.hasMoreElements())\n+        {\n             String key = keysEnum.nextElement();\n             Object value = properties.get(key);\n-            \n+\n             result.append(KeyCodec.encode(key), value);\n         }\n-        \n+\n         return result;\n     }\n }", "filename": "useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoSerializerHelper.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/3867a6223e610e1a513bb6f7b0c35576a0f7dd87", "parent": "https://github.com/apache/felix/commit/e4035330b7d1e0e2813462d498a3591a1d014fec", "message": "Finalized this test, which is reproducing some problems inside ConfigurationDependencyImpl.\nAlso, this test seems to reproduce a NPE inside config admin (see FELIX-4385).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1558377 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_147", "file": [{"additions": 264, "raw_url": "https://github.com/apache/felix/raw/3867a6223e610e1a513bb6f7b0c35576a0f7dd87/dependencymanager/test/src/test/java/org/apache/felix/dm/test/integration/api/ServiceRaceTest.java", "blob_url": "https://github.com/apache/felix/blob/3867a6223e610e1a513bb6f7b0c35576a0f7dd87/dependencymanager/test/src/test/java/org/apache/felix/dm/test/integration/api/ServiceRaceTest.java", "sha": "1096b00d68c161ac597ad5f773e5c9dbe12cb6bd", "changes": 353, "status": "modified", "deletions": 89, "contents_url": "https://api.github.com/repos/apache/felix/contents/dependencymanager/test/src/test/java/org/apache/felix/dm/test/integration/api/ServiceRaceTest.java?ref=3867a6223e610e1a513bb6f7b0c35576a0f7dd87", "patch": "@@ -18,6 +18,8 @@\n  */\n package org.apache.felix.dm.test.integration.api;\n \n+import java.io.IOException;\n+import java.util.Dictionary;\n import java.util.Hashtable;\n import java.util.List;\n import java.util.Map;\n@@ -38,17 +40,21 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.ops4j.pax.exam.junit.PaxExam;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.cm.Configuration;\n import org.osgi.service.cm.ConfigurationAdmin;\n \n /**\n- * FELIX-3910: Another race test for concurrent service registration/unregistration.\n+ * Another race test for concurrent service registrations/unregistrations.\n+ * Aspects are also depending on some configuration pids, which are also registered/unregistered concurrently.\n  */\n @RunWith(PaxExam.class)\n public class ServiceRaceTest extends TestBase {\n-    final static int SERVICES = 10;\n+    final static int STEP_WAIT = 10000;\n+    final static int SERVICES = 3;\n     final static int INVOKES = 10;\n-    volatile ExecutorService m_execRegister; // used to register/unregister S services\n-    volatile ExecutorService m_execInvoke; // Used by Client to invoke S services\n+    volatile ExecutorService m_execServices; // used to register/unregister S services\n+    volatile ExecutorService m_execAspects; // used to register/unregister Aspects\n \n     @Inject\n     volatile ConfigurationAdmin m_ca;\n@@ -60,87 +66,139 @@ public void testConcurrentServices() {\n         final DependencyManager dm = new DependencyManager(context);\n \n         try {\n-            m_execRegister = Executors.newFixedThreadPool(cores);\n-            m_execInvoke = Executors.newFixedThreadPool(1);\n-\n-            for (int loop = 0; loop < 10000; loop++) {\n-                Ensure e = new Ensure(false);\n-                long timeStamp = System.currentTimeMillis();\n-                \n-                // Create one client depending on 'SERVICES' S services\n-                Client client = new Client(e);\n-                Component c = dm\n-                        .createComponent()\n-                        .setImplementation(client);\n-                for (int i = 0; i < SERVICES; i ++) {\n+            m_execServices = Executors.newFixedThreadPool(cores);\n+            m_execAspects = Executors.newFixedThreadPool(cores);\n+            int aspectPidCounter = 1;\n+            int aspectCounter = 1;\n+\n+            long timeStamp = System.currentTimeMillis();\n+            for (int loop = 0; loop < 30000; loop++) {\n+                debug(\"loop#%d -------------------------\", (loop + 1));\n+\n+                final Ensure clientStarted = new Ensure(false);\n+                final Ensure clientStopped = new Ensure(false);\n+                final Ensure serviceStarted = new Ensure(false);\n+                final Ensure serviceStopped = new Ensure(false);\n+                final Ensure serviceInvoked = new Ensure(false);\n+                final Ensure aspectStarted = new Ensure(false);\n+                final Ensure aspectStopped = new Ensure(false);\n+                final Ensure aspectUpdated = new Ensure(false);\n+                final Ensure aspectInvoked = new Ensure(false);\n+\n+                // Create one client depending on many S services\n+                Client client = new Client(clientStarted, clientStopped);\n+                Component c = dm.createComponent().setImplementation(client);\n+                for (int i = 0; i < SERVICES; i++) {\n                     c.add(dm.createServiceDependency().setService(S.class, \"(name=S\" + i + \")\").setRequired(true).setCallbacks(\n-                        \"add\", \"remove\"));\n+                        \"add\", null, \"remove\", \"swap\"));\n                 }\n                 dm.add(c);\n \n-                // Create all the 'SERVICES' S services concurrently\n-                info(\"registering services concurrently\");\n-                final Ensure addE = new Ensure(false);\n+                // Create S services concurrently\n+                info(\"registering S services concurrently\");\n                 final List<Component> services = new CopyOnWriteArrayList<Component>();\n-                for (int i = 0; i < SERVICES; i ++) {\n+                for (int i = 0; i < SERVICES; i++) {\n                     final String name = \"S\" + i;\n-                    m_execRegister.execute(new Runnable() {\n+                    m_execServices.execute(new Runnable() {\n                         public void run() {\n                             Hashtable h = new Hashtable();\n                             h.put(\"name\", name);\n-                            Component sImpl = dm\n-                                .createComponent()\n-                                .setImplementation(new SImpl())\n-                                .setInterface(S.class.getName(), h);\n+                            Component sImpl = dm.createComponent().setImplementation(\n+                                new SImpl(serviceStarted, serviceStopped, serviceInvoked, name)).setInterface(\n+                                S.class.getName(), h);\n                             services.add(sImpl);\n                             dm.add(sImpl);\n-                            addE.step();\n                         }\n                     });\n                 }\n-                addE.waitForStep(SERVICES, 5000);\n-                \n-                // Make sure client is started:\n-                e.waitForStep(1, 5000);\n-                \n-                // Make sure client invoked services SERVICES * INVOKES times\n-                e.waitForStep(1 + (SERVICES * INVOKES), 10000);\n-                if ((loop+1) % 100 == 0) {\n-                    long duration = System.currentTimeMillis() - timeStamp;\n-                    warn(\"Performed %d tests in %d ms.\", (loop+1), duration);\n-                    timeStamp = System.currentTimeMillis();\n+\n+                // Create S aspects concurrently\n+                info(\"registering aspects concurrently\");\n+                final List<Component> aspects = new CopyOnWriteArrayList<Component>();\n+                final List<Configuration> aspectPids = new CopyOnWriteArrayList<Configuration>();\n+                for (int i = 0; i < SERVICES; i++) {\n+                    final String name = \"Aspect\" + i + \"-\" + (aspectCounter++);\n+                    final String filter = \"(name=S\" + i + \")\";\n+                    final String pid = \"Aspect\" + i + \".pid\" + (aspectPidCounter++);\n+                    m_execServices.execute(new Runnable() {\n+                        public void run() {\n+                            SAspect sa = new SAspect(aspectStarted, aspectStopped, aspectUpdated, aspectInvoked, name);\n+                            debug(\"Adding aspect \" + sa);\n+                            Component aspect = dm.createAspectService(S.class, filter, 1).setImplementation(sa).add(\n+                                dm.createConfigurationDependency().setPid(pid));\n+                            aspects.add(aspect);\n+                            dm.add(aspect);\n+                            try {\n+                                Configuration aspectConf = m_ca.getConfiguration(pid, null);\n+                                aspectConf.update(new Hashtable() {\n+                                    {\n+                                        put(\"name\", name);\n+                                    }\n+                                });\n+                                aspectPids.add(aspectConf);\n+                            }\n+                            catch (IOException e) {\n+                                error(\"could not create pid %s for aspect %s\", e, pid, name);\n+                                return;\n+                            }\n+                        }\n+                    });\n                 }\n-                \n+\n+                // Make sure all services and aspects are created\n+                clientStarted.waitForStep(1, STEP_WAIT);\n+                aspectUpdated.waitForStep(SERVICES, STEP_WAIT);\n+                aspectStarted.waitForStep(SERVICES, STEP_WAIT);\n+                info(\"all aspects and services registered\");\n+\n+                // Make sure client invoked services and aspects SERVICES * INVOKES times\n+                serviceInvoked.waitForStep(SERVICES * INVOKES, STEP_WAIT);\n+                aspectInvoked.waitForStep(SERVICES * INVOKES, STEP_WAIT);\n+                info(\"All aspects and services have been properly invoked\");\n+\n                 // Unregister services concurrently\n-                final Ensure removeE = new Ensure(false);\n                 info(\"unregistering services concurrently\");\n                 for (final Component sImpl : services) {\n-                    m_execRegister.execute(new Runnable() {\n+                    m_execServices.execute(new Runnable() {\n                         public void run() {\n                             dm.remove(sImpl);\n-                            removeE.step();\n                         }\n                     });\n                 }\n-                removeE.waitForStep(SERVICES, 5000);\n-                \n-                // Make sure Client has been stopped\n-                info(\"waiting for client to be stopped\");\n-                int nextStep = 1 /* start */ + (SERVICES * INVOKES) + 1 /* stop */;\n-                e.waitForStep(nextStep, 5000);\n-                \n-                info(\"all services stopped\");\n-                \n-                // Make sure all services are all unbound from our client.\n-                nextStep += SERVICES; // Client.removed should have been called for each unbound service.\n-                e.waitForStep(nextStep, 5000);\n-                \n-                // Clear everything before interating on next loop\n-                dm.clear();\n-                \n+\n+                // Unregister aspects (and configuration) concurrently\n+                info(\"unregistering aspects concurrently\");\n+                for (final Component a : aspects) {\n+                    m_execAspects.execute(new Runnable() {\n+                        public void run() {\n+                            debug(\"removing aspect %s\", a);\n+                            dm.remove(a);\n+                        }\n+                    });\n+                }\n+                info(\"unregistering aspect configuration concurrently\");\n+                for (Configuration aspectConf : aspectPids) {\n+                    aspectConf.delete();\n+                }\n+\n+                info(\"removing client from dm\");\n+                dm.remove(c);\n+\n+                // Wait until all services/aspects have been stopped\n+                serviceStopped.waitForStep(SERVICES, STEP_WAIT);\n+                aspectStopped.waitForStep(SERVICES, STEP_WAIT);\n+                clientStopped.waitForStep(1, STEP_WAIT);\n+\n                 if (super.errorsLogged()) {\n                     throw new IllegalStateException(\"Race test interrupted (some error occured, see previous logs)\");\n                 }\n+\n+                info(\"finished one test loop\");\n+                if ((loop + 1) % 100 == 0) {\n+                    long duration = System.currentTimeMillis() - timeStamp;\n+                    warn(\"Performed %d tests in %d ms.\", (loop + 1), duration);\n+                    timeStamp = System.currentTimeMillis();\n+                }\n             }\n         }\n \n@@ -149,8 +207,8 @@ public void run() {\n             Assert.fail(\"Test failed: \" + t.getMessage());\n         }\n         finally {\n-            shutdown(m_execRegister);\n-            shutdown(m_execInvoke);\n+            shutdown(m_execServices);\n+            shutdown(m_execAspects);\n             dm.clear();\n         }\n     }\n@@ -165,53 +223,170 @@ void shutdown(ExecutorService exec) {\n     }\n \n     public interface S {\n-        void invoke(Ensure e);\n+        void invoke();\n     }\n \n-    public static class SImpl implements S {\n-        public void invoke(Ensure e) {\n-            e.step();\n+    public class SImpl implements S {\n+        final Ensure m_started, m_stopped, m_invoked;\n+        final String m_name;\n+\n+        public SImpl(Ensure started, Ensure stopped, Ensure invoked, String name) {\n+            m_name = name;\n+            m_started = started;\n+            m_stopped = stopped;\n+            m_invoked = invoked;\n+        }\n+\n+        public void invoke() {\n+            m_invoked.step();\n+        }\n+\n+        public String toString() {\n+            return m_name;\n+        }\n+\n+        public void start() {\n+            info(\"started %s\", this);\n+            m_started.step();\n+        }\n+\n+        public void stop() {\n+            info(\"stopped %s\", this);\n+            m_stopped.step();\n         }\n     }\n-    \n-    public class Client {\n-        final Ensure m_e;\n+\n+    public class Client implements Runnable {\n+        final Ensure m_started, m_stopped;\n         final Map<String, S> m_services = new ConcurrentHashMap<String, S>();\n+        volatile Thread m_thread;\n+        volatile Exception m_firstStartStackTrace;\n+        volatile boolean m_running;\n+\n+        Client(Ensure started, Ensure stopped) {\n+            m_started = started;\n+            m_stopped = stopped;\n+        }\n \n-        Client(Ensure e) {\n-            m_e = e;\n+        synchronized void swap(ServiceReference prevRef, S prev, ServiceReference nextRef, S next) {\n+            info(\"client.swap: prev=%s, next=%s\", prev, next);\n+            m_services.put((String) nextRef.getProperty(\"name\"), next);\n         }\n-        \n-        void add(Map<String, String> props, S s) {\n-            info(\"client.add: %s (name=%s)\", s, props.get(\"name\"));\n+\n+        synchronized void add(Map<String, String> props, S s) {\n+            info(\"client.add: %s\", s);\n             m_services.put(props.get(\"name\"), s);\n         }\n-        \n-        void remove(Map<String, String> props, S s) {\n-            info(\"client.remove: %s (name=%s)\", s, props.get(\"name\"));\n+\n+        synchronized void remove(Map<String, String> props, S s) {\n+            info(\"client.remove: %s\", s);\n             m_services.remove(props.get(\"name\"));\n-            m_e.step();\n         }\n-        \n-        public void start() {   \n+\n+        public synchronized void start() {\n+            if (m_firstStartStackTrace != null) {\n+                error(\"client already started\", new Exception());\n+                error(\"first start was done here:\", m_firstStartStackTrace);\n+                return;\n+            }\n+            if (m_running) {\n+                error(\"Client already started\");\n+                return;\n+            }\n             if (m_services.size() != SERVICES) {\n                 error(\"Client started with unexpected number of injected services: %s\", m_services);\n                 return;\n             }\n-            m_e.step(1);\n-            m_execInvoke.execute(new Runnable() {\n-                public void run() {\n-                    for (int i = 0; i < INVOKES; i ++) {\n-                        for (Map.Entry<String, S> e : m_services.entrySet()) {\n-                            e.getValue().invoke(m_e);\n-                        }\n+            m_firstStartStackTrace = new Exception(\"First start stacktrace\");\n+            info(\"client starting\");\n+\n+            m_thread = new Thread(this, \"Client\");\n+            m_thread.setDaemon(true);\n+            m_running = true;\n+            m_thread.start();\n+        }\n+\n+        public void run() {\n+            m_started.step();\n+            while (m_running) {\n+                for (int i = 0; i < INVOKES; i++) {\n+                    for (Map.Entry<String, S> e : m_services.entrySet()) {\n+                        e.getValue().invoke();\n                     }\n                 }\n-            });\n+            }\n+        }\n+\n+        public synchronized void stop() {\n+            if (!m_running) {\n+                error(\"client can't be stopped (not running)\");\n+                return;\n+            }\n+\n+            info(\"stopping client\");\n+            m_running = false;\n+            try {\n+                m_thread.join();\n+            }\n+            catch (InterruptedException e) {\n+                error(\"interrupted while stopping client\", e);\n+            }\n+            info(\"client stopped\");\n+            m_firstStartStackTrace = null;\n+            m_stopped.step();\n+        }\n+    }\n+\n+    public class SAspect implements S {\n+        volatile S m_next;\n+        final String m_name;\n+        final Ensure m_invoked, m_started, m_stopped, m_updated;\n+        volatile Dictionary<String, String> m_conf;\n+\n+        SAspect(Ensure started, Ensure stopped, Ensure updated, Ensure invoked, String name) {\n+            m_started = started;\n+            m_stopped = stopped;\n+            m_updated = updated;\n+            m_invoked = invoked;\n+            m_name = name;\n+        }\n+\n+        public void updated(Dictionary<String, String> conf) {\n+            if (conf == null) {\n+                error(\"Aspect %s injected with a null configuration\", this);\n+                return;\n+            }\n+            debug(\"Aspect %s injected with configuration: %s\", this, conf);\n+            m_conf = conf;\n+            m_updated.step();\n         }\n-        \n+\n+        public void start() {\n+            info(\"started aspect %s\", this);\n+            m_started.step();\n+        }\n+\n         public void stop() {\n-            m_e.step(1 /* start */ + (SERVICES * INVOKES) + 1);\n+            info(\"stopped aspect %s\", this);\n+            m_stopped.step();\n+        }\n+\n+        public void invoke() {\n+            if (m_conf == null) {\n+                error(\"Aspect: %s has not been injected with its configuration\", this);\n+                return;\n+            }\n+\n+            if (!m_name.equals(m_conf.get(\"name\"))) {\n+                error(\"Aspect %s has not been injected with expected configuration: %s\", this, m_conf);\n+                return;\n+            }\n+            m_invoked.step();\n+            m_next.invoke();\n+        }\n+\n+        public String toString() {\n+            return m_name;\n         }\n     }\n }", "filename": "dependencymanager/test/src/test/java/org/apache/felix/dm/test/integration/api/ServiceRaceTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "parent": "https://github.com/apache/felix/commit/e1f2842590e35f6487b27542d4fe17f4b4741c0e", "message": "FELIX-4192 : SCR Generator fails with a NPE in case a class level Reference doesn't define a referenceInterface. Add test cases from Daniel Kuffner\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1513731 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_148", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/changelog.txt", "sha": "dbbc673bc5bc8d248b2f61e7ba32c35d9ae54c9e", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/changelog.txt?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -1,3 +1,8 @@\n+Changes from 1.8.2 to 1.8.0\n+---------------------------\n+** Bug\n+    * [FELIX-4192] - SCR Generator fails with a NPE in case a class level Reference doesn't define a referenceInterface\n+\n Changes from 1.8.0 to 1.7.0\n ---------------------------\n ** Improvement", "filename": "scrplugin/generator/changelog.txt"}, {"additions": 37, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/pom.xml", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/pom.xml", "sha": "419ad2be934de7544259327b59379902cae26775", "changes": 37, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/pom.xml?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -62,6 +62,43 @@\n             <artifactId>org.osgi.compendium</artifactId>\n             <version>4.2.0</version>\n         </dependency>\n+\n+\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>4.8.1</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.easymock</groupId>\n+            <artifactId>easymock</artifactId>\n+            <version>3.2</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>commons-lang</groupId>\n+            <artifactId>commons-lang</artifactId>\n+            <version>2.6</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>commons-io</groupId>\n+            <artifactId>commons-io</artifactId>\n+            <version>2.4</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.felix</groupId>\n+            <artifactId>org.apache.felix.scr.annotations</artifactId>\n+            <version>1.9.6</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n     </dependencies>\n     \n     <build>", "filename": "scrplugin/generator/pom.xml"}, {"additions": 41, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java", "sha": "baddef950a416d5b471c82b4b471a56a4886ad81", "changes": 80, "status": "modified", "deletions": 39, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -453,52 +453,54 @@ private void validateReference(final ReferenceDescription ref, final boolean com\n             ref.setStrategy(ReferenceStrategy.EVENT);\n         }\n \n-        // validate bind and unbind methods\n-        if (ref.getStrategy() != ReferenceStrategy.LOOKUP) {\n-            String bindName = ref.getBind();\n-            String unbindName = ref.getUnbind();\n-\n-            final boolean canGenerate = this.options.isGenerateAccessors() &&\n-                            ref.getField() != null\n-                            && (ref.getCardinality() == ReferenceCardinality.OPTIONAL_UNARY || ref.getCardinality() == ReferenceCardinality.MANDATORY_UNARY);\n-            if (bindName == null && !canGenerate ) {\n-                bindName = \"bind\";\n-            }\n-            if (unbindName == null && !canGenerate ) {\n-                unbindName = \"unbind\";\n-            }\n+        // validate methods only if interface name is set\n+        if (!StringUtils.isEmpty(ref.getInterfaceName())) {\n+            // validate bind and unbind methods\n+            if (ref.getStrategy() != ReferenceStrategy.LOOKUP) {\n+                String bindName = ref.getBind();\n+                String unbindName = ref.getUnbind();\n+\n+                final boolean canGenerate = this.options.isGenerateAccessors() &&\n+                                ref.getField() != null\n+                                && (ref.getCardinality() == ReferenceCardinality.OPTIONAL_UNARY || ref.getCardinality() == ReferenceCardinality.MANDATORY_UNARY);\n+                if (bindName == null && !canGenerate ) {\n+                    bindName = \"bind\";\n+                }\n+                if (unbindName == null && !canGenerate ) {\n+                    unbindName = \"unbind\";\n+                }\n \n-            if ( bindName != null ) {\n-                bindName = this.validateMethod(ref, bindName, componentIsAbstract);\n-                if ( bindName == null && ref.getField() != null ) {\n-                    iLog.addError(\"Something went wrong: \" + canGenerate + \" - \" + this.options.isGenerateAccessors() + \" - \" + ref.getCardinality(), ref.getField().getName());\n+                if ( bindName != null ) {\n+                    bindName = this.validateMethod(ref, bindName, componentIsAbstract);\n+                    if ( bindName == null && ref.getField() != null ) {\n+                        iLog.addError(\"Something went wrong: \" + canGenerate + \" - \" + this.options.isGenerateAccessors() + \" - \" + ref.getCardinality(), ref.getField().getName());\n+                    }\n+                } else {\n+                    bindName = \"bind\" + Character.toUpperCase(ref.getName().charAt(0)) + ref.getName().substring(1);\n+                }\n+                if ( unbindName != null ) {\n+                    unbindName = this.validateMethod(ref, unbindName, componentIsAbstract);\n+                } else {\n+                    unbindName = \"unbind\" + Character.toUpperCase(ref.getName().charAt(0)) + ref.getName().substring(1);\n                 }\n-            } else {\n-                bindName = \"bind\" + Character.toUpperCase(ref.getName().charAt(0)) + ref.getName().substring(1);\n-            }\n-            if ( unbindName != null ) {\n-                unbindName = this.validateMethod(ref, unbindName, componentIsAbstract);\n-            } else {\n-                unbindName = \"unbind\" + Character.toUpperCase(ref.getName().charAt(0)) + ref.getName().substring(1);\n-            }\n \n-            if (iLog.getNumberOfErrors() == currentIssueCount) {\n-                ref.setBind(bindName);\n-                ref.setUnbind(unbindName);\n+                if (iLog.getNumberOfErrors() == currentIssueCount) {\n+                    ref.setBind(bindName);\n+                    ref.setUnbind(unbindName);\n+                }\n+            } else {\n+                ref.setBind(null);\n+                ref.setUnbind(null);\n             }\n-        } else {\n-            ref.setBind(null);\n-            ref.setUnbind(null);\n-        }\n \n-        // validate updated method\n-        if (ref.getUpdated() != null) {\n-            if (this.options.getSpecVersion().ordinal() < SpecVersion.VERSION_1_1_FELIX.ordinal()) {\n-                this.logError(ref, \"Updated method declaration requires version \"\n-                                + SpecVersion.VERSION_1_1_FELIX.getName() + \", \" + SpecVersion.VERSION_1_2.getName() + \" or newer\");\n+            // validate updated method\n+            if (ref.getUpdated() != null) {\n+                if (this.options.getSpecVersion().ordinal() < SpecVersion.VERSION_1_1_FELIX.ordinal()) {\n+                    this.logError(ref, \"Updated method declaration requires version \"\n+                                    + SpecVersion.VERSION_1_1_FELIX.getName() + \", \" + SpecVersion.VERSION_1_2.getName() + \" or newer\");\n+                }\n             }\n         }\n-\n     }\n \n     private String validateMethod(final ReferenceDescription ref, final String methodName, final boolean componentIsAbstract)", "filename": "scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/Validator.java"}, {"additions": 115, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SCRDescriptorGeneratorTest.java", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SCRDescriptorGeneratorTest.java", "sha": "9272576cffade473170a914a9f2f6148fbdbd330", "changes": 115, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SCRDescriptorGeneratorTest.java?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.scrplugin;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.UUID;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.IOUtils;\n+import org.easymock.EasyMock;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SCRDescriptorGeneratorTest {\n+\n+    File folder;\n+    File dest;\n+\n+    @Before\n+    public void setup() throws IOException {\n+        folder = new File(FileUtils.getTempDirectory(), UUID.randomUUID().toString());\n+        FileUtils.forceMkdir(folder);\n+\n+        dest = new File(folder, \"testComponents\");\n+        FileUtils.forceMkdir(dest);\n+\n+    }\n+\n+    @After\n+    public void tearDown() throws IOException {\n+        FileUtils.deleteDirectory(folder);\n+    }\n+\n+    @Test\n+    public void testSimpleComponent() throws SCRDescriptorException, SCRDescriptorFailureException, IOException {\n+        Env env = new Env(\"SimpleComponent\").invoke();\n+        EasyMock.replay(env.log());\n+        env.generator().execute();\n+        EasyMock.verify(env.log());\n+    }\n+\n+    @Test\n+    public void testComponentWithClassReferenceAndMissingInterface() throws SCRDescriptorException, SCRDescriptorFailureException, IOException {\n+        Env env = new Env(\"ComponentWithClassReferenceAndMissingInterface\").invoke();\n+        EasyMock.replay(env.log());\n+        try {\n+            env.generator().execute();\n+        } catch ( final SCRDescriptorFailureException e) {\n+            // this is expected as the interface for a reference is missing\n+        }\n+        EasyMock.verify(env.log());\n+    }\n+\n+    private void unpackSource(String resource, File dest) throws IOException {\n+        IOUtils.copy(getClass().getResourceAsStream(resource), new FileOutputStream(dest));\n+    }\n+\n+    /**\n+     * Setups a minimal environment.\n+     */\n+    private class Env {\n+        private String className;\n+        private Log log;\n+        private SCRDescriptorGenerator gen;\n+\n+        public Env(String className) {\n+            this.className = className;\n+        }\n+\n+        public Log log() {\n+            return log;\n+        }\n+\n+        public SCRDescriptorGenerator generator() {\n+            return gen;\n+        }\n+\n+        public Env invoke() throws IOException {\n+            File aFile = new File(dest, className + \".class\");\n+            unpackSource(\"/testComponents/\" + className + \".class\", aFile);\n+\n+            log = EasyMock.createNiceMock(Log.class);\n+            gen = new SCRDescriptorGenerator(log);\n+            Project p = new Project();\n+            p.setClassLoader(getClass().getClassLoader());\n+            p.setSources(Collections.<Source>singletonList(new SourceImpl(\"testComponents.\" + className, aFile)));\n+\n+            Options o = new Options();\n+            o.setOutputDirectory(folder);\n+            gen.setProject(p);\n+            gen.setOptions(o);\n+            return this;\n+        }\n+    }\n+}", "filename": "scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SCRDescriptorGeneratorTest.java"}, {"additions": 39, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SourceImpl.java", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SourceImpl.java", "sha": "2601490d7529767b45212b37c101d29257db775b", "changes": 39, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SourceImpl.java?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.scrplugin;\n+\n+import java.io.File;\n+\n+class SourceImpl implements Source {\n+    String className;\n+    File file;\n+\n+    SourceImpl(String className, File file) {\n+        this.className = className;\n+        this.file = file;\n+    }\n+\n+    public String getClassName() {\n+        return className;\n+    }\n+\n+    public File getFile() {\n+        return file;\n+    }\n+}", "filename": "scrplugin/generator/src/test/java/org/apache/felix/scrplugin/SourceImpl.java"}, {"additions": 28, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/testComponents/ComponentWithClassReferenceAndMissingInterface.java", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/testComponents/ComponentWithClassReferenceAndMissingInterface.java", "sha": "0114444eaa87fd1daf1ab835e9a95ffe82b227ee", "changes": 28, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/test/java/testComponents/ComponentWithClassReferenceAndMissingInterface.java?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package testComponents;\n+\n+import org.apache.felix.scr.annotations.Component;\n+import org.apache.felix.scr.annotations.Reference;\n+\n+@Component\n+@Reference(bind = \"setRunnable\", unbind = \"unsetRunnable\")\n+public class ComponentWithClassReferenceAndMissingInterface {\n+\n+}", "filename": "scrplugin/generator/src/test/java/testComponents/ComponentWithClassReferenceAndMissingInterface.java"}, {"additions": 25, "raw_url": "https://github.com/apache/felix/raw/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/testComponents/SimpleComponent.java", "blob_url": "https://github.com/apache/felix/blob/45e286d5f8cccdff22391b7cd1ec6963fae80f4c/scrplugin/generator/src/test/java/testComponents/SimpleComponent.java", "sha": "a093198e94e891cfe3b2411be813d911198ec16a", "changes": 25, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/scrplugin/generator/src/test/java/testComponents/SimpleComponent.java?ref=45e286d5f8cccdff22391b7cd1ec6963fae80f4c", "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package testComponents;\n+\n+import org.apache.felix.scr.annotations.Component;\n+\n+@Component\n+public class SimpleComponent {\n+}", "filename": "scrplugin/generator/src/test/java/testComponents/SimpleComponent.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/bea9bce35bbcf98ffc754146d0af2615603c0d04", "parent": "https://github.com/apache/felix/commit/a97335c8dfa784e0a257118948d0146ce500cbfc", "message": "FELIX-3946 Prevent NPE in BundlesServlet.bundleDetails\n\n* BundleInfoProvider: Clarify webConsoleRoot may be null\n* BundlesServlet: Guard pluginRoot against null (only get substring if not null)\n* BundlesServlet: Fix rendition of \"nfo\" structure generated based\n  on BundleInforProvider data\n* ServicesUsedInfoProvider: Generate BundleInfo of type VALUE if\n  webConsoleRoot is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1452202 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_149", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/bundleinfo/BundleInfoProvider.java", "blob_url": "https://github.com/apache/felix/blob/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/bundleinfo/BundleInfoProvider.java", "sha": "62178efec8b0bea1301fdd129e29963fe21366cf", "changes": 19, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/bundleinfo/BundleInfoProvider.java?ref=bea9bce35bbcf98ffc754146d0af2615603c0d04", "patch": "@@ -25,16 +25,16 @@\n /**\r\n  * The bundle info provider allows the user to supply additional information\r\n  * that will be used by the Web Console bundle plugin.\r\n- * \r\n+ *\r\n  * The API allows the user to register a special service, that could bind a\r\n  * custom, implementation-specific information to a bundle.\r\n- * \r\n+ *\r\n  * A typical use-case for that API would be the Declarative Services, that could\r\n  * provide information about the components provided by this bundle (and link to\r\n  * the component plugin too). Another usage could be the ProSyst resource\r\n  * manager, that would provide information about the memory and CPU usage of the\r\n  * bundle.\r\n- * \r\n+ *\r\n  * @author Valentin Valchev\r\n  */\r\n public interface BundleInfoProvider\r\n@@ -49,7 +49,7 @@\n \r\n     /**\r\n      * Gets the name of the bundle info provider as localized string.\r\n-     * \r\n+     *\r\n      * @param locale\r\n      *            the locale in which the name should be returned\r\n      * @return the name of the bundle info provider.\r\n@@ -60,11 +60,18 @@\n     /**\r\n      * Gets the associated bundle information with the specified bundle (by it's\r\n      * ID)\r\n-     * \r\n+     *\r\n+     * The Service may also be called outside through the new Inventory bundle\r\n+     * due to mapping the BundlesServlet to an InventoryPrinter and for example\r\n+     * calling it from a Gogo Shell. In this case the {@code webConsoleRoot}\r\n+     * parameter will be null a {@link BundleInfo} objects of type\r\n+     * {@link BundleInfoType#LINK} must not be generated.\r\n+     *\r\n      * @param bundle\r\n      *            the bundle, for which additional information is requested.\r\n      * @param webConsoleRoot\r\n-     *            the root alias of the web console itself.\r\n+     *            the root alias of the web console itself or {@code null}\r\n+     *            if this method is not called through the Web Console itself.\r\n      * @param locale\r\n      *            the locale in which the key-value pair should be returned.\r\n      * @return array of available {@link BundleInfo} or empty array if none.\r", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/bundleinfo/BundleInfoProvider.java"}, {"additions": 50, "raw_url": "https://github.com/apache/felix/raw/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "blob_url": "https://github.com/apache/felix/blob/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java", "sha": "c8a4f483685cb0cbc80951b88c86da4dac970a00", "changes": 72, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java?ref=bea9bce35bbcf98ffc754146d0af2615603c0d04", "patch": "@@ -219,25 +219,50 @@ public void printConfiguration( PrintWriter pw )\n                         if ( !props.isNull( pi ) )\n                         {\n                             JSONObject entry = props.getJSONObject( pi );\n-\n-                            pw.print( \"    \" + entry.get( \"key\" ) + \": \" );\n-\n-                            Object entryValue = entry.get( \"value\" );\n-                            if ( entryValue instanceof JSONArray )\n+                            String key = ( String ) entry.get( \"key\" );\n+                            if ( \"nfo\".equals( key ) )\n                             {\n-                                pw.println();\n-                                JSONArray entryArray = ( JSONArray ) entryValue;\n-                                for ( int ei = 0; ei < entryArray.length(); ei++ )\n+                                // BundleInfo (see #bundleInfo & #bundleInfoDetails\n+                                JSONObject infos = ( JSONObject ) entry.get( \"value\" );\n+                                Iterator infoKeys = infos.keys();\n+                                while ( infoKeys.hasNext() )\n                                 {\n-                                    if ( !entryArray.isNull( ei ) )\n+                                    String infoKey = ( String ) infoKeys.next();\n+                                    pw.println( \"    \" + infoKey + \": \" );\n+\n+                                    JSONArray infoA = infos.getJSONArray( infoKey );\n+                                    for ( int iai = 0; iai < infoA.length(); iai++ )\n                                     {\n-                                        pw.println( \"        \" + entryArray.get( ei ) );\n+                                        if ( !infoA.isNull( iai ) )\n+                                        {\n+                                            JSONObject info = infoA.getJSONObject( iai );\n+                                            pw.println( \"        \" + info.get( \"name\" ) );\n+                                        }\n                                     }\n                                 }\n                             }\n                             else\n                             {\n-                                pw.println( entryValue );\n+                                // regular data\n+                                pw.print( \"    \" + key + \": \" );\n+\n+                                Object entryValue = entry.get( \"value\" );\n+                                if ( entryValue instanceof JSONArray )\n+                                {\n+                                    pw.println();\n+                                    JSONArray entryArray = ( JSONArray ) entryValue;\n+                                    for ( int ei = 0; ei < entryArray.length(); ei++ )\n+                                    {\n+                                        if ( !entryArray.isNull( ei ) )\n+                                        {\n+                                            pw.println( \"        \" + entryArray.get( ei ) );\n+                                        }\n+                                    }\n+                                }\n+                                else\n+                                {\n+                                    pw.println( entryValue );\n+                                }\n                             }\n                         }\n                     }\n@@ -803,7 +828,8 @@ private final void bundleDetails( JSONWriter jw, Bundle bundle, final String plu\n         }\n \n         listHeaders( jw, bundle );\n-        bundleInfoDetails(jw, bundle, pluginRoot.substring(0, pluginRoot.lastIndexOf(\"/\")), locale);\n+        final String appRoot = ( pluginRoot == null ) ? null : pluginRoot.substring( 0, pluginRoot.lastIndexOf( \"/\" ) );\n+        bundleInfoDetails( jw, bundle, appRoot, locale );\n \n         jw.endArray();\n     }\n@@ -837,20 +863,22 @@ private final void bundleInfoDetails( JSONWriter jw, Bundle bundle, String appRo\n         jw.endObject();\n     }\n \n+\n     private static final void bundleInfo( JSONWriter jw, BundleInfo info ) throws JSONException\n     {\n-\tjw.object();\n-\tjw.key(\"name\");\n-\tjw.value( info.getName() );\n-\tjw.key(\"description\");\n-\tjw.value( info.getDescription() );\n-\tjw.key(\"type\");\n-\tjw.value( info.getType().getName() );\n-\tjw.key(\"value\");\n-\tjw.value( info.getValue() );\n-\tjw.endObject();\n+        jw.object();\n+        jw.key( \"name\" );\n+        jw.value( info.getName() );\n+        jw.key( \"description\" );\n+        jw.value( info.getDescription() );\n+        jw.key( \"type\" );\n+        jw.value( info.getType().getName() );\n+        jw.key( \"value\" );\n+        jw.value( info.getValue() );\n+        jw.endObject();\n     }\n \n+\n     private final Integer getStartLevel( Bundle bundle )\n     {\n         if ( bundle.getState() != Bundle.UNINSTALLED )", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java"}, {"additions": 42, "raw_url": "https://github.com/apache/felix/raw/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/ServicesUsedInfoProvider.java", "blob_url": "https://github.com/apache/felix/blob/bea9bce35bbcf98ffc754146d0af2615603c0d04/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/ServicesUsedInfoProvider.java", "sha": "8ab35886d9d245ae5ed2bcc76d738c032cef4f87", "changes": 76, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/src/main/java/org/apache/felix/webconsole/internal/core/ServicesUsedInfoProvider.java?ref=bea9bce35bbcf98ffc754146d0af2615603c0d04", "patch": "@@ -18,6 +18,7 @@\n  */\r\n package org.apache.felix.webconsole.internal.core;\r\n \r\n+\r\n import java.text.MessageFormat;\r\n import java.util.Arrays;\r\n import java.util.Locale;\r\n@@ -32,60 +33,67 @@\n import org.osgi.framework.ServiceReference;\r\n import org.osgi.framework.ServiceRegistration;\r\n \r\n-final class ServicesUsedInfoProvider implements\r\n-\tBundleInfoProvider {\r\n-    \r\n+\r\n+final class ServicesUsedInfoProvider implements BundleInfoProvider\r\n+{\r\n+\r\n     private final LocalizationHelper localization;\r\n-    \r\n-    ServicesUsedInfoProvider(Bundle bundle) \r\n+\r\n+\r\n+    ServicesUsedInfoProvider( Bundle bundle )\r\n     {\r\n-\tlocalization = new LocalizationHelper(bundle);\r\n+        localization = new LocalizationHelper( bundle );\r\n     }\r\n \r\n+\r\n     /*\r\n      * (non-Javadoc)\r\n-     * \r\n+     *\r\n      * @see\r\n      * org.apache.felix.webconsole.bundleinfo.BundleInfoProvider#getName(java\r\n      * .util.Locale)\r\n      */\r\n-    public String getName(Locale locale) \r\n+    public String getName( Locale locale )\r\n     {\r\n-\treturn localization.getResourceBundle(locale).getString(\"services.info.name\"); //$NON-NLS-1$;\r\n+        return localization.getResourceBundle( locale ).getString( \"services.info.name\" ); //$NON-NLS-1$;\r\n     }\r\n \r\n-    public BundleInfo[] getBundleInfo(Bundle bundle, String webConsoleRoot,\r\n-\t    Locale locale) \r\n+\r\n+    public BundleInfo[] getBundleInfo( Bundle bundle, String webConsoleRoot, Locale locale )\r\n     {\r\n-\tfinal ServiceReference[] refs = bundle.getServicesInUse();\r\n-\tif (null == refs || refs.length == 0)\r\n-\t    return NO_INFO;\r\n-\t\r\n-\tBundleInfo[] ret = new BundleInfo[refs.length];\r\n-\tfor ( int i=0; i < refs.length; i++ )\r\n-\t{\r\n-\t    ret[i] = toInfo(refs[i], webConsoleRoot, locale);\r\n-\t}\r\n-\treturn ret;\r\n+        final ServiceReference[] refs = bundle.getServicesInUse();\r\n+        if ( null == refs || refs.length == 0 )\r\n+            return NO_INFO;\r\n+\r\n+        BundleInfo[] ret = new BundleInfo[refs.length];\r\n+        for ( int i = 0; i < refs.length; i++ )\r\n+        {\r\n+            ret[i] = toInfo( refs[i], webConsoleRoot, locale );\r\n+        }\r\n+        return ret;\r\n     }\r\n \r\n-    private BundleInfo toInfo(ServiceReference ref, String webConsoleRoot, Locale locale) \r\n+\r\n+    private BundleInfo toInfo( ServiceReference ref, String webConsoleRoot, Locale locale )\r\n     {\r\n-\tfinal String[] classes = (String[]) ref\r\n-\t\t.getProperty(Constants.OBJECTCLASS);\r\n-\tfinal Object id = ref.getProperty(Constants.SERVICE_ID);\r\n-\tfinal String descr =  localization.getResourceBundle(locale).getString(\"services.info.descr\"); //$NON-NLS-1$;\r\n-\tString name = localization.getResourceBundle(locale).getString(\"services.info.key\"); //$NON-NLS-1$;\r\n-\tname = MessageFormat.format(name, new Object[] {\r\n-\t\tid, Arrays.asList(classes).toString()\r\n-\t});\r\n-\treturn new BundleInfo(name, webConsoleRoot + \"/services/\" + id, //$NON-NLS-1$\r\n-\t\tBundleInfoType.LINK, descr);\r\n+        final String[] classes = ( String[] ) ref.getProperty( Constants.OBJECTCLASS );\r\n+        final Object id = ref.getProperty( Constants.SERVICE_ID );\r\n+        final String descr = localization.getResourceBundle( locale ).getString( \"services.info.descr\" ); //$NON-NLS-1$;\r\n+        String name = localization.getResourceBundle( locale ).getString( \"services.info.key\" ); //$NON-NLS-1$;\r\n+        name = MessageFormat.format( name, new Object[]\r\n+            { id, Arrays.asList( classes ).toString() } );\r\n+        if ( webConsoleRoot == null )\r\n+        {\r\n+            return new BundleInfo( name, id, BundleInfoType.VALUE, descr );\r\n+        }\r\n+        return new BundleInfo( name, webConsoleRoot + \"/services/\" + id, //$NON-NLS-1$\r\n+            BundleInfoType.LINK, descr );\r\n     }\r\n-    \r\n+\r\n+\r\n     ServiceRegistration register( BundleContext context )\r\n     {\r\n-\treturn context.registerService(BundleInfoProvider.class.getName(), this, null);\r\n+        return context.registerService( BundleInfoProvider.class.getName(), this, null );\r\n     }\r\n \r\n }\r", "filename": "webconsole/src/main/java/org/apache/felix/webconsole/internal/core/ServicesUsedInfoProvider.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/6e63f916cc5aa55b0cc61f3cdc320ccd1d4e8555", "parent": "https://github.com/apache/felix/commit/ed18c55f435d4d9e5b1b032ccfbe08f5e147c720", "message": "FELIX-3774, FELIX-3775 & FELIX-3776:\n\n- wrong key used in the retrieval of password property;\n- possible NPE when supplying the configuration for the first time (oldMongoDb can be null);\n- use sensible defaults and shorter keys for the configuration of the MongoDb backend.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1412466 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_150", "file": [{"additions": 60, "raw_url": "https://github.com/apache/felix/raw/6e63f916cc5aa55b0cc61f3cdc320ccd1d4e8555/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java", "blob_url": "https://github.com/apache/felix/blob/6e63f916cc5aa55b0cc61f3cdc320ccd1d4e8555/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java", "sha": "5dc17191d79e16fb35bae9410738cd0483322c10", "changes": 131, "status": "modified", "deletions": 71, "contents_url": "https://api.github.com/repos/apache/felix/contents/useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java?ref=6e63f916cc5aa55b0cc61f3cdc320ccd1d4e8555", "patch": "@@ -47,30 +47,33 @@\n  * The configuration options recognized by this service are:\n  * </p>\n  * <dl>\n- * <dt>\"useradmin.mongodb.server\"</dt>\n- * <dd>A space separated string containing the MongoDB servers. The format for this string is: \"<code>&lt;host1:port1&gt; &lt;host2:port2&gt;</code>\". This value is mandatory;</dd>\n- * <dt>\"useradmin.mongodb.name\"</dt>\n- * <dd>A string containing the name of the database to use for this store. This value is mandatory;</dd>\n- * <dt>\"useradmin.mongodb.collection\"</dt>\n- * <dd>The name of the database collection to use for this store. This value is mandatory;</dd>\n- * <dt>\"useradmin.mongodb.username\"</dt>\n- * <dd>An optional string value representing the name of the user to authenticate against MongoDB;</dd>\n- * <dt>\"useradmin.mongodb.password\"</dt>\n- * <dd>An optional string value representing the password to authenticate against MongoDB.</dd>\n+ * <dt>server</dt>\n+ * <dd>A space separated string containing the MongoDB servers. The format for this string is: \"<code>&lt;host1:port1&gt; &lt;host2:port2&gt;</code>\". This value is optional;</dd>\n+ * <dt>dbname</dt>\n+ * <dd>A string value containing the name of the database to use for this store. This value is optional;</dd>\n+ * <dt>collection</dt>\n+ * <dd>The name of the database collection to use for this store. This value is optional;</dd>\n+ * <dt>username</dt>\n+ * <dd>A string value representing the name of the user to authenticate against MongoDB. This value is optional;</dd>\n+ * <dt>password</dt>\n+ * <dd>A string value representing the password to authenticate against MongoDB. This value is optional.</dd>\n  * </dl>\n  * <p>\n- * Alternatively, one can also supply the above mentioned configuration keys as system properties. However,\n- * this implies that only a single store can be configured on a system!\n+ * Alternatively, one can also supply the above mentioned configuration keys prefixed with \n+ * \"<tt>org.apache.felix.useradmin.mongodb.</tt>\" as system properties (e.g.: \n+ * <tt>-Dorg.apache.felix.useradmin.mongodb.server=my.mongo.server:27017</tt>). However, this \n+ * implies that only a single store can be configured on a system (which could be a sensible\n+ * default for some situations)!\n  * </p>\n  * <p>\n  * By default, the following values are used:\n  * </p>\n  * <table>\n- * <tr><td>\"<tt>useradmin.mongodb.server</tt>\"</td><td>\"<tt>localhost:27017</tt>\"</td></tr>\n- * <tr><td>\"<tt>useradmin.mongodb.name</tt>\"</td><td>\"<tt>ua_repo</tt>\"</td></tr>\n- * <tr><td>\"<tt>useradmin.mongodb.collection</tt>\"</td><td>\"<tt>useradmin</tt>\"</td></tr>\n- * <tr><td>\"<tt>useradmin.mongodb.username</tt>\"</td><td>&lt;none&gt;</td></tr>\n- * <tr><td>\"<tt>useradmin.mongodb.password</tt>\"</td><td>&lt;none&gt;</td></tr>\n+ * <tr><td><tt>server</tt></td><td>\"<tt>localhost:27017</tt>\"</td></tr>\n+ * <tr><td><tt>dbname</tt></td><td>\"<tt>ua_repo</tt>\"</td></tr>\n+ * <tr><td><tt>collection</tt></td><td>\"<tt>useradmin</tt>\"</td></tr>\n+ * <tr><td><tt>username</tt></td><td>&lt;none&gt;</td></tr>\n+ * <tr><td><tt>password</tt></td><td>&lt;none&gt;</td></tr>\n  * </table>\n  * <p>\n  * This class is thread-safe.\n@@ -85,26 +88,27 @@\n      * A space-separated array with server definitions to access MongoDB. \n      * Format = \"&lt;host1:port1&gt; &lt;host2:port2&gt;\". \n      * */\n-    private static final String KEY_MONGODB_SERVER = \"useradmin.mongodb.server\";\n+    private static final String KEY_MONGODB_SERVER = \"server\";\n     /** The name of the MongoDB database instance. */\n-    private static final String KEY_MONGODB_NAME = \"useradmin.mongodb.name\";\n+    private static final String KEY_MONGODB_DBNAME = \"dbname\";\n     /** The username of the MongoDB database instance. */\n-    private static final String KEY_MONGODB_USERNAME = \"useradmin.mongodb.username\";\n+    private static final String KEY_MONGODB_USERNAME = \"username\";\n     /** The password of the MongoDB database instance. */\n-    private static final String KEY_MONGODB_PASSWORD = \"useradmin.mongodb.password\";\n+    private static final String KEY_MONGODB_PASSWORD = \"password\";\n     /** The name of the MongoDB collection to use. */\n-    private static final String KEY_MONGODB_COLLECTION_NAME = \"useradmin.mongodb.collection\";\n+    private static final String KEY_MONGODB_COLLECTION_NAME = \"collection\";\n \n+    private static final String PREFIX = PID.concat(\".\");\n     /** Default MongoDB server; first checks a system property */\n-    private static final String DEFAULT_MONGODB_SERVER = System.getProperty(KEY_MONGODB_SERVER, \"localhost:27017\");\n+    private static final String DEFAULT_MONGODB_SERVER = System.getProperty(PREFIX.concat(KEY_MONGODB_SERVER), \"localhost:27017\");\n     /** Default MongoDB name */\n-    private static final String DEFAULT_MONGODB_NAME = System.getProperty(KEY_MONGODB_NAME, \"ua_repo\");\n+    private static final String DEFAULT_MONGODB_DBNAME = System.getProperty(PREFIX.concat(KEY_MONGODB_DBNAME), \"ua_repo\");\n     /** Default MongoDB collection */\n-    private static final String DEFAULT_MONGODB_COLLECTION = System.getProperty(KEY_MONGODB_COLLECTION_NAME, \"useradmin\");\n+    private static final String DEFAULT_MONGODB_COLLECTION = System.getProperty(PREFIX.concat(KEY_MONGODB_COLLECTION_NAME), \"useradmin\");\n     /** Default MongoDB username */\n-    private static final String DEFAULT_MONGODB_USERNAME = System.getProperty(KEY_MONGODB_USERNAME);\n+    private static final String DEFAULT_MONGODB_USERNAME = System.getProperty(PREFIX.concat(KEY_MONGODB_USERNAME));\n     /** Default MongoDB password */\n-    private static final String DEFAULT_MONGODB_PASSWORD = System.getProperty(KEY_MONGODB_PASSWORD);\n+    private static final String DEFAULT_MONGODB_PASSWORD = System.getProperty(PREFIX.concat(KEY_MONGODB_PASSWORD));\n \n     private final AtomicReference<MongoDB> m_mongoDbRef;\n     private final MongoSerializerHelper m_helper;\n@@ -220,7 +224,7 @@ public void initialize() throws IOException {\n         // already done by the #updated method...\n         MongoDB oldMongoDB = m_mongoDbRef.get();\n         if (oldMongoDB == null) {\n-            MongoDB mongoDB = new MongoDB(DEFAULT_MONGODB_SERVER, DEFAULT_MONGODB_NAME, DEFAULT_MONGODB_COLLECTION);\n+            MongoDB mongoDB = new MongoDB(DEFAULT_MONGODB_SERVER, DEFAULT_MONGODB_DBNAME, DEFAULT_MONGODB_COLLECTION);\n             \n             do {\n                 oldMongoDB = m_mongoDbRef.get();\n@@ -290,21 +294,16 @@ public void setLogService(LogService log) {\n     \n     @Override\n     public void updated(Dictionary properties) throws ConfigurationException {\n-        String newServers = DEFAULT_MONGODB_SERVER;\n-        String newDbName = DEFAULT_MONGODB_NAME;\n-        String newCollectionName = DEFAULT_MONGODB_COLLECTION;\n-        String newUsername = DEFAULT_MONGODB_USERNAME;\n-        String newPassword = DEFAULT_MONGODB_PASSWORD;\n-        \n-        if (properties != null) {\n-            // Use values supplied...\n-            newServers = getMandatoryProperty(properties, KEY_MONGODB_SERVER);\n-            newDbName = getMandatoryProperty(properties, KEY_MONGODB_NAME);\n-            newCollectionName = getMandatoryProperty(properties, KEY_MONGODB_COLLECTION_NAME);\n-            \n-            newUsername = getProperty(properties, KEY_MONGODB_USERNAME);\n-            newPassword = getProperty(properties, DEFAULT_MONGODB_PASSWORD);\n-        }\n+        // Defaults to \"ua_repo\"\n+        String newDbName = getProperty(properties, KEY_MONGODB_DBNAME, DEFAULT_MONGODB_DBNAME);\n+        // Defaults to \"localhost:27017\"\n+        String newServers = getProperty(properties, KEY_MONGODB_SERVER, DEFAULT_MONGODB_SERVER);\n+        // Defaults to \"useradmin\"\n+        String newCollectionName = getProperty(properties, KEY_MONGODB_COLLECTION_NAME, DEFAULT_MONGODB_COLLECTION);\n+        // Defaults to null\n+        String newUsername = getProperty(properties, KEY_MONGODB_USERNAME, DEFAULT_MONGODB_USERNAME);\n+        // Defaults to null. FELIX-3774; use correct property name...\n+        String newPassword = getProperty(properties, KEY_MONGODB_PASSWORD, DEFAULT_MONGODB_PASSWORD); \n \n         MongoDB newMongoDb = new MongoDB(newServers, newDbName, newCollectionName);\n \n@@ -315,7 +314,10 @@ public void updated(Dictionary properties) throws ConfigurationException {\n         while (!m_mongoDbRef.compareAndSet(oldMongoDb, newMongoDb));\n \n         try {\n-            oldMongoDb.disconnect();\n+            // FELIX-3775: oldMongoDb can be null when supplying the configuration for the first time...\n+            if (oldMongoDb != null) {\n+                oldMongoDb.disconnect();\n+            }\n         }\n         catch (MongoException e) {\n             m_log.log(LogService.LOG_WARNING, \"Failed to disconnect from (old) MongoDB!\", e);\n@@ -342,7 +344,7 @@ private void connectToDB(MongoDB mongoDB, String userName, String password) thro\n         if (!mongoDB.connect(userName, password)) {\n             throw new MongoException(\"Failed to connect to MongoDB! Authentication failed!\");\n         }\n-        \n+\n         DBCollection collection = mongoDB.getCollection();\n         if (collection == null) {\n             throw new MongoException(\"Failed to connect to MongoDB! No collection returned!\");\n@@ -364,37 +366,24 @@ private DBCollection getCollection() {\n         }\n         return mongoDB.getCollection();\n     }\n-\n-    /**\n-     * Returns the mandatory value for the given key.\n-     * \n-     * @param properties the properties to get the mandatory value from;\n-     * @param key the key of the value to retrieve;\n-     * @return the value, never <code>null</code>.\n-     * @throws ConfigurationException in case the given key had no value.\n-     */\n-    private String getMandatoryProperty(Dictionary properties, String key) throws ConfigurationException {\n-        String result = getProperty(properties, key);\n-        if (result == null || \"\".equals(result.trim())) {\n-            throw new ConfigurationException(key, \"cannot be null or empty!\");\n-        }\n-        return result;\n-    }\n     \n     /**\n-     * Returns the value for the given key.\n+     * Returns the value for the given key from the given properties.\n      * \n-     * @param properties the properties to get the value from;\n-     * @param key the key of the value to retrieve;\n-     * @return the value, can be <code>null</code> in case no such key is present.\n-     * @throws ConfigurationException in case the given key had no value.\n+     * @param properties the properties to get the value from, may be <code>null</code>;\n+     * @param key the key to retrieve the value for, cannot be <code>null</code>;\n+     * @param defaultValue the default value to use in case no value is present in the given dictionary, the value is not a string, or the dictionary itself was <code>null</code>.\n+     * @return the value, can be <code>null</code> in case the given key lead to a null value, or a null value was supplied as default value.\n      */\n-    private String getProperty(Dictionary properties, String key) throws ConfigurationException {\n-        Object result = properties.get(key);\n-        if (result == null || !(result instanceof String)) {\n-            return null;\n+    private String getProperty(Dictionary properties, String key, String defaultValue) {\n+        String result = defaultValue;\n+        if (properties != null) {\n+            Object value = properties.get(key);\n+            if (value != null && (value instanceof String)) {\n+                result = (String) value;\n+            }\n         }\n-        return (String) result;\n+        return result;\n     }\n     \n     /**", "filename": "useradmin/mongodb/src/main/java/org/apache/felix/useradmin/mongodb/MongoDBStore.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/55c22c81f1bf4afe74faffe5fa6041feb93bef00", "parent": "https://github.com/apache/felix/commit/8c60c0b5f87f63761e965a84e4963ed21a4eb918", "message": "FELIX-3139 Implemented first version of uninstall. Does not follow the spec yet to the letter, but functionally does the right thing.\nFELIX-1829 Fixed the NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1177325 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_151", "file": [{"additions": 27, "raw_url": "https://github.com/apache/felix/raw/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/AbstractDeploymentPackage.java", "blob_url": "https://github.com/apache/felix/blob/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/AbstractDeploymentPackage.java", "sha": "4a9cd3313152455d9241cbe760f2819142ee0920", "changes": 38, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/AbstractDeploymentPackage.java?ref=55c22c81f1bf4afe74faffe5fa6041feb93bef00", "patch": "@@ -41,34 +41,40 @@\n  * deployment package data is obtained, this should be handled by extending classes.\n  */\n public abstract class AbstractDeploymentPackage implements DeploymentPackage {\n+    private static final String[] STRINGS = new String[] {};\n+    private static final ResourceInfoImpl[] RESOURCE_INFO_IMPLS = new ResourceInfoImpl[] {};\n+    private static final BundleInfoImpl[] BUNDLE_INFO_IMPLS = new BundleInfoImpl[] {};\n     private final BundleContext m_bundleContext;\n+    private final DeploymentAdminImpl m_deploymentAdmin;\n     private final DeploymentPackageManifest m_manifest;\n     private final Map m_nameToBundleInfo = new HashMap();\n     private final Map m_pathToEntry = new HashMap();\n     private final BundleInfoImpl[] m_bundleInfos;\n     private final ResourceInfoImpl[] m_resourceInfos;\n     private final String[] m_resourcePaths;\n     private final boolean m_isFixPackage;\n-    protected static final AbstractDeploymentPackage emptyPackage = new AbstractDeploymentPackage() {\n+    private boolean m_isStale;\n+    protected static final AbstractDeploymentPackage EMPTY_PACKAGE = new AbstractDeploymentPackage() {\n         public String getHeader(String header) {\n             if (Constants.DEPLOYMENTPACKAGE_SYMBOLICMAME.equals(header)) { return \"\"; }\n             else if (Constants.DEPLOYMENTPACKAGE_VERSION.equals(header)) { return Version.emptyVersion.toString(); }\n             else { return null; }\n         }\n         public Bundle getBundle(String symbolicName) { return null; }\n-        public BundleInfo[] getBundleInfos() { return new BundleInfoImpl[] {}; }\n-        public BundleInfoImpl[] getBundleInfoImpls() { return new BundleInfoImpl[] {}; }\n+        public BundleInfo[] getBundleInfos() { return BUNDLE_INFO_IMPLS; }\n+        public BundleInfoImpl[] getBundleInfoImpls() { return BUNDLE_INFO_IMPLS; }\n+        public ResourceInfoImpl[] getResourceInfos() { return RESOURCE_INFO_IMPLS; }\n         public String getName() { return \"\"; }\n         public String getResourceHeader(String resource, String header) { return null; }\n         public ServiceReference getResourceProcessor(String resource) { return null; }\n-        public String[] getResources() { return new String[] {}; }\n+        public String[] getResources() { return STRINGS; }\n         public Version getVersion() { return Version.emptyVersion; }\n         public boolean isStale() { return true; }\n         public void uninstall() throws DeploymentException { throw new IllegalStateException(\"Can not uninstall stale DeploymentPackage\"); }\n         public boolean uninstallForced() throws DeploymentException { throw new IllegalStateException(\"Can not uninstall stale DeploymentPackage\"); }\n         public InputStream getBundleStream(String symbolicName) throws IOException { return null; }\n-        public BundleInfoImpl[] getOrderedBundleInfos() { return new BundleInfoImpl[] {}; }\n-        public ResourceInfoImpl[] getOrderedResourceInfos() { return new ResourceInfoImpl[] {}; }\n+        public BundleInfoImpl[] getOrderedBundleInfos() { return BUNDLE_INFO_IMPLS; }\n+        public ResourceInfoImpl[] getOrderedResourceInfos() { return RESOURCE_INFO_IMPLS; }\n         public InputStream getCurrentEntryStream() { throw new UnsupportedOperationException(); }\n         public AbstractInfo getNextEntry() throws IOException { throw new UnsupportedOperationException(); }\n         public String getDisplayName() { return \"\"; }\n@@ -83,6 +89,7 @@ private AbstractDeploymentPackage() {\n         m_resourceInfos = null;\n         m_resourcePaths = null;\n         m_isFixPackage = false;\n+        m_deploymentAdmin = null;\n     }\n \n     /**\n@@ -92,10 +99,11 @@ private AbstractDeploymentPackage() {\n      * @param bundleContext The bundle context.\n      * @throws DeploymentException Thrown if the specified manifest does not describe a valid deployment package.\n      */\n-    public AbstractDeploymentPackage(Manifest manifest, BundleContext bundleContext) throws DeploymentException {\n+    public AbstractDeploymentPackage(Manifest manifest, BundleContext bundleContext, DeploymentAdminImpl deploymentAdmin) throws DeploymentException {\n         m_manifest = new DeploymentPackageManifest(manifest);\n         m_isFixPackage = m_manifest.getFixPackage() != null;\n         m_bundleContext = bundleContext;\n+        m_deploymentAdmin = deploymentAdmin;\n         m_bundleInfos = (BundleInfoImpl[]) m_manifest.getBundleInfos().toArray(new BundleInfoImpl[0]);\n         for(int i = 0; i < m_bundleInfos.length; i++) {\n             m_nameToBundleInfo.put(m_bundleInfos[i].getSymbolicName(), m_bundleInfos[i]);\n@@ -115,7 +123,7 @@ public Bundle getBundle(String symbolicName) {\n         if (m_nameToBundleInfo.containsKey(symbolicName)) {\n             Bundle[] bundles = m_bundleContext.getBundles();\n             for (int i = 0; i < bundles.length; i++) {\n-                if (bundles[i].getSymbolicName().equals(symbolicName)) {\n+                if (symbolicName.equals(bundles[i].getSymbolicName())) {\n                     return bundles[i];\n                 }\n             }\n@@ -236,15 +244,23 @@ public VersionRange getVersionRange() {\n     }\n \n     public boolean isStale() {\n-        return false;\n+        return m_isStale;\n+    }\n+    \n+    public void setStale(boolean isStale) {\n+        m_isStale = isStale;\n     }\n \n     public void uninstall() throws DeploymentException {\n-        throw new IllegalStateException(\"Not implemented\");\n+        if (isStale()) {\n+            throw new IllegalStateException(\"Deployment package is stale, cannot uninstall.\");\n+        }\n+        m_deploymentAdmin.uninstallDeploymentPackage(this);\n+        setStale(true);\n     }\n \n     public boolean uninstallForced() throws DeploymentException {\n-        throw new IllegalStateException(\"Not implemented\");\n+        throw new IllegalStateException(\"Not implemented, use uninstall() for now.\");\n     }\n \n     /**", "filename": "deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/AbstractDeploymentPackage.java"}, {"additions": 40, "raw_url": "https://github.com/apache/felix/raw/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/DeploymentAdminImpl.java", "blob_url": "https://github.com/apache/felix/blob/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/DeploymentAdminImpl.java", "sha": "b099016a9dfed80ecadcc8ea0b701091b35777b7", "changes": 45, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/DeploymentAdminImpl.java?ref=55c22c81f1bf4afe74faffe5fa6041feb93bef00", "patch": "@@ -104,7 +104,7 @@ public void start() throws DeploymentException {\n                     try {\n                         File index = new File(packages[i], PACKAGEINDEX_FILE);\n                         File contents = new File(packages[i], PACKAGECONTENTS_DIR);\n-                        FileDeploymentPackage dp = new FileDeploymentPackage(index, contents, m_context);\n+                        FileDeploymentPackage dp = new FileDeploymentPackage(index, contents, m_context, this);\n                         m_packages.put(dp.getName(), dp);\n                     }\n                     catch (IOException e) {\n@@ -155,7 +155,7 @@ public DeploymentPackage installDeploymentPackage(InputStream input) throws Depl\n         }\n         try {\n             if (!m_semaphore.tryAcquire(TIMEOUT)) {\n-                throw new DeploymentException(DeploymentException.CODE_TIMEOUT, \"Timeout exceeded while waiting to install deployment package (\" + TIMEOUT + \"msec)\");\n+                throw new DeploymentException(DeploymentException.CODE_TIMEOUT, \"Timeout exceeded while waiting to install deployment package (\" + TIMEOUT + \" ms)\");\n             }\n         }\n         catch (InterruptedException ie) {\n@@ -191,13 +191,13 @@ public DeploymentPackage installDeploymentPackage(InputStream input) throws Depl\n                 m_log.log(LogService.LOG_ERROR, \"Stream does not contain a valid Jar\", e);\n                 throw new DeploymentException(DeploymentException.CODE_NOT_A_JAR, \"Stream does not contain a valid Jar\", e);\n             }\n-            source = new StreamDeploymentPackage(jarInput, m_context);\n+            source = new StreamDeploymentPackage(jarInput, m_context, this);\n             sendStartedEvent(source.getName());\n             \n             AbstractDeploymentPackage target = (AbstractDeploymentPackage) getDeploymentPackage(source.getName());\n             boolean newPackage = (target == null);\n             if (newPackage) {\n-                target = AbstractDeploymentPackage.emptyPackage;\n+                target = AbstractDeploymentPackage.EMPTY_PACKAGE;\n             }\n             if (source.isFixPackage() && ((newPackage) || (!source.getVersionRange().isInRange(target.getVersion())))) {\n                 succeeded = false;\n@@ -238,7 +238,7 @@ public DeploymentPackage installDeploymentPackage(InputStream input) throws Depl\n             }\n             FileDeploymentPackage fileDeploymentPackage = null;\n             try {\n-                fileDeploymentPackage = new FileDeploymentPackage(targetIndex, targetContents, m_context);\n+                fileDeploymentPackage = new FileDeploymentPackage(targetIndex, targetContents, m_context, this);\n                 m_packages.put(source.getName(), fileDeploymentPackage);\n             }\n             catch (IOException e) {\n@@ -259,6 +259,41 @@ public DeploymentPackage installDeploymentPackage(InputStream input) throws Depl\n             m_semaphore.release();\n         }\n     }\n+    \n+    public void uninstallDeploymentPackage(DeploymentPackage dp) throws DeploymentException {\n+        try {\n+            if (!m_semaphore.tryAcquire(TIMEOUT)) {\n+                throw new DeploymentException(DeploymentException.CODE_TIMEOUT, \"Timeout exceeded while waiting to uninstall deployment package (\" + TIMEOUT + \" ms)\");\n+            }\n+        }\n+        catch (InterruptedException ie) {\n+            throw new DeploymentException(DeploymentException.CODE_TIMEOUT, \"Thread interrupted\");\n+        }\n+        boolean succeeded = false;\n+        AbstractDeploymentPackage source = AbstractDeploymentPackage.EMPTY_PACKAGE;\n+        AbstractDeploymentPackage target = (AbstractDeploymentPackage) dp;\n+        try {\n+            try {\n+                m_session = new DeploymentSessionImpl(source, target, m_commandChain, this);\n+                m_session.call();\n+            }\n+            catch (DeploymentException de) {\n+                succeeded = false;\n+                throw de;\n+            }\n+\n+            File targetPackage = m_context.getDataFile(PACKAGE_DIR + File.separator + source.getName());\n+            delete(targetPackage);\n+            m_packages.remove(dp.getName());\n+            succeeded = true;\n+        }\n+        finally {\n+            if (source != null) {\n+                sendCompleteEvent(source.getName(), succeeded);\n+            }\n+            m_semaphore.release();\n+        }\n+    }\n \n     private void delete(File target) {\n     \tif (target.isDirectory()) {", "filename": "deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/DeploymentAdminImpl.java"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/FileDeploymentPackage.java", "blob_url": "https://github.com/apache/felix/blob/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/FileDeploymentPackage.java", "sha": "a369d040384d1772b93ae747c96932de502f8e58", "changes": 12, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/FileDeploymentPackage.java?ref=55c22c81f1bf4afe74faffe5fa6041feb93bef00", "patch": "@@ -34,8 +34,7 @@\n /**\n  * Implementation of a <code>DeploymentPackage</code> that is persisted on disk.\n  */\n-class FileDeploymentPackage extends AbstractDeploymentPackage {\n-\n+public class FileDeploymentPackage extends AbstractDeploymentPackage {\n     private final List m_index;\n     private final File m_contentsDir;\n \n@@ -48,12 +47,12 @@\n      * @throws DeploymentException Thrown if the disk contents do not resemble a valid deployment package.\n      * @throws IOException Thrown if there was a problem reading the resources from disk.\n      */\n-    public FileDeploymentPackage(File index, File packageDir, BundleContext bundleContext) throws DeploymentException, IOException {\n-        this(ExplodingOutputtingInputStream.readIndex(index), packageDir, bundleContext);\n+    public FileDeploymentPackage(File index, File packageDir, BundleContext bundleContext, DeploymentAdminImpl deploymentAdmin) throws DeploymentException, IOException {\n+        this(ExplodingOutputtingInputStream.readIndex(index), packageDir, bundleContext, deploymentAdmin);\n     }\n \n-    private FileDeploymentPackage(List index, File packageDir, BundleContext bundleContext) throws DeploymentException, IOException {\n-        super(new Manifest(new GZIPInputStream(new FileInputStream(new File(packageDir, (String) index.remove(0))))), bundleContext);\n+    private FileDeploymentPackage(List index, File packageDir, BundleContext bundleContext, DeploymentAdminImpl deploymentAdmin) throws DeploymentException, IOException {\n+        super(new Manifest(new GZIPInputStream(new FileInputStream(new File(packageDir, (String) index.remove(0))))), bundleContext, deploymentAdmin);\n         m_index = index;\n         m_contentsDir = packageDir;\n     }\n@@ -95,5 +94,4 @@ public InputStream getCurrentEntryStream() {\n     public AbstractInfo getNextEntry() throws IOException {\n         throw new UnsupportedOperationException(\"Not implemented for file-based deployment package\");\n     }\n-\n }\n\\ No newline at end of file", "filename": "deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/FileDeploymentPackage.java"}, {"additions": 3, "raw_url": "https://github.com/apache/felix/raw/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/StreamDeploymentPackage.java", "blob_url": "https://github.com/apache/felix/blob/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/StreamDeploymentPackage.java", "sha": "887628b493c15310700179328a10c6d52632e04a", "changes": 8, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/StreamDeploymentPackage.java?ref=55c22c81f1bf4afe74faffe5fa6041feb93bef00", "patch": "@@ -32,8 +32,7 @@\n /**\n  * This class represents a deployment package that is read from a jar stream.\n  */\n-class StreamDeploymentPackage extends AbstractDeploymentPackage {\n-\n+public class StreamDeploymentPackage extends AbstractDeploymentPackage {\n     private final JarInputStream m_input;\n     private final List m_names = new ArrayList();\n \n@@ -44,8 +43,8 @@\n      * @param bundleContext The bundle context.\n      * @throws DeploymentException If it was not possible to read a valid deployment package from the specified stream.\n      */\n-    public StreamDeploymentPackage(JarInputStream input, BundleContext bundleContext) throws DeploymentException {\n-        super(input.getManifest(), bundleContext);\n+    public StreamDeploymentPackage(JarInputStream input, BundleContext bundleContext, DeploymentAdminImpl deploymentAdmin) throws DeploymentException {\n+        super(input.getManifest(), bundleContext, deploymentAdmin);\n         m_input = input;\n     }\n \n@@ -94,5 +93,4 @@ public AbstractInfo getNextEntry() throws IOException {\n     public InputStream getCurrentEntryStream() {\n         return new NonCloseableStream(m_input);\n     }\n-\n }\n\\ No newline at end of file", "filename": "deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/StreamDeploymentPackage.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/spi/StartBundleCommand.java", "blob_url": "https://github.com/apache/felix/blob/55c22c81f1bf4afe74faffe5fa6041feb93bef00/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/spi/StartBundleCommand.java", "sha": "8bc7056f6b913d35fd25ba33dd479780a7a2f1f3", "changes": 13, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/spi/StartBundleCommand.java?ref=55c22c81f1bf4afe74faffe5fa6041feb93bef00", "patch": "@@ -21,7 +21,6 @@\n import org.apache.felix.deploymentadmin.AbstractDeploymentPackage;\n import org.apache.felix.deploymentadmin.BundleInfoImpl;\n import org.osgi.framework.Bundle;\n-import org.osgi.framework.BundleContext;\n import org.osgi.framework.BundleException;\n import org.osgi.framework.FrameworkEvent;\n import org.osgi.framework.FrameworkListener;\n@@ -32,21 +31,19 @@\n  * Command that starts all bundles described in the source deployment package of a deployment session.\n  */\n public class StartBundleCommand extends Command {\n-\n     private final RefreshPackagesMonitor m_refreshMonitor = new RefreshPackagesMonitor();\n     private static final int REFRESH_TIMEOUT = 10000;\n \n     public void execute(DeploymentSessionImpl session) {\n         AbstractDeploymentPackage source = session.getSourceAbstractDeploymentPackage();\n-        BundleContext context = session.getBundleContext();\n         PackageAdmin packageAdmin = session.getPackageAdmin();\n         RefreshPackagesListener listener = new RefreshPackagesListener();\n         LogService log = session.getLog();\n \n-        context.addFrameworkListener(listener);\n+        session.getBundleContext().addFrameworkListener(listener);\n         packageAdmin.refreshPackages(null);\n         m_refreshMonitor.waitForRefresh();\n-        context.removeFrameworkListener(listener);\n+        session.getBundleContext().removeFrameworkListener(listener);\n \n         // start source bundles\n         BundleInfoImpl[] bundleInfos = source.getOrderedBundleInfos();\n@@ -76,7 +73,6 @@ public void execute(DeploymentSessionImpl session) {\n     private class RefreshPackagesListener implements FrameworkListener {\n         public void frameworkEvent(FrameworkEvent event) {\n             if (event.getType() == FrameworkEvent.PACKAGES_REFRESHED) {\n-                // TODO: m_log.log(LogService.LOG_INFO, \"Packages refreshed event received\");\n                 m_refreshMonitor.proceed();\n             }\n         }\n@@ -97,20 +93,16 @@ public void frameworkEvent(FrameworkEvent event) {\n          */\n         public synchronized void waitForRefresh() {\n             if (!m_alreadyNotified) {\n-             // TODO: m_log.log(LogService.LOG_DEBUG, \"wait for Packages refreshed event\");\n                 try {\n                     wait(REFRESH_TIMEOUT);\n                 }\n                 catch (InterruptedException ie) {\n-                 // TODO: m_log.log(LogService.LOG_INFO, \"interrupted while waiting for packages refreshed event\", ie);\n                 }\n                 finally {\n-                    // just reset the misted notification variable, this Monitor object might be reused.\n                     m_alreadyNotified = false;\n                 }\n             }\n             else {\n-                // TODO: m_log.log(LogService.LOG_DEBUG, \"won't wait for Packages refreshed event, event is already received\");\n                 // just reset the misted notification variable, this Monitor object might be reused.\n                 m_alreadyNotified = false;\n             }\n@@ -125,5 +117,4 @@ public synchronized void proceed() {\n             notifyAll();\n         }\n     }\n-\n }", "filename": "deploymentadmin/deploymentadmin/src/main/java/org/apache/felix/deploymentadmin/spi/StartBundleCommand.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f853a9004a167391a967f8821c9484ee5d91f794", "parent": "https://github.com/apache/felix/commit/b4f66972919d8b175a8c932403448344238ff6c3", "message": "FELIX-2813 This test shows the issue, even though it does not fail. If somebody knows how to make a test fail if another thread throws a NPE, feel free to jump in.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1065734 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_152", "file": [{"additions": 82, "raw_url": "https://github.com/apache/felix/raw/f853a9004a167391a967f8821c9484ee5d91f794/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX2813_ConfigurationAdminStartupTest.java", "blob_url": "https://github.com/apache/felix/blob/f853a9004a167391a967f8821c9484ee5d91f794/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX2813_ConfigurationAdminStartupTest.java", "sha": "0efb84f0a76b25ece28fb11a62ff9a5c358d07b3", "changes": 82, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/test/java/org/apache/felix/cm/integration/FELIX2813_ConfigurationAdminStartupTest.java?ref=f853a9004a167391a967f8821c9484ee5d91f794", "patch": "@@ -0,0 +1,82 @@\n+package org.apache.felix.cm.integration;\n+\n+import static org.ops4j.pax.exam.CoreOptions.mavenBundle;\n+import static org.ops4j.pax.exam.CoreOptions.options;\n+import static org.ops4j.pax.exam.CoreOptions.provision;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.ops4j.pax.exam.Option;\n+import org.ops4j.pax.exam.junit.Configuration;\n+import org.ops4j.pax.exam.junit.JUnit4TestRunner;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.Constants;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceEvent;\n+import org.osgi.framework.ServiceListener;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.osgi.service.cm.ConfigurationEvent;\n+import org.osgi.service.cm.ConfigurationListener;\n+\n+@RunWith(JUnit4TestRunner.class)\n+public class FELIX2813_ConfigurationAdminStartupTest implements ServiceListener, ConfigurationListener {\n+    private volatile BundleContext m_context;\n+\n+    @Configuration\n+    public static Option[] configuration() {\n+        return options(\n+            provision(\n+                mavenBundle().groupId(\"org.apache.felix\").artifactId(\"org.apache.felix.configadmin\").version(\"1.2.8\").noStart()\n+            )\n+        );\n+    }    \n+\n+    @Test\n+    public void testAddConfigurationWhenConfigurationAdminStarts(BundleContext context) throws InvalidSyntaxException, BundleException {\n+        m_context = context;\n+        m_context.registerService(ConfigurationListener.class.getName(), this, null);\n+        m_context.addServiceListener(this, \"(\" + Constants.OBJECTCLASS + \"=\" + ConfigurationAdmin.class.getName() + \")\");\n+        Bundle[] bundles = m_context.getBundles();\n+        for (Bundle b : bundles) {\n+            if (b.getSymbolicName().equals(\"org.apache.felix.configadmin\")) {\n+                b.start();\n+            }\n+        }\n+        \n+        /*\n+         * Look at the console output for the following exception:\n+         * \n+         * *ERROR* Unexpected problem executing task\n+         * java.lang.NullPointerException: reference and pid must not be null\n+         *     at org.osgi.service.cm.ConfigurationEvent.<init>(ConfigurationEvent.java:120)\n+         *     at org.apache.felix.cm.impl.ConfigurationManager$FireConfigurationEvent.run(ConfigurationManager.java:1818)\n+         *     at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:104)\n+         *     at java.lang.Thread.run(Thread.java:680)\n+         *     \n+         * It is in fact the service reference that is still null, because the service registration\n+         * has not been 'set' yet.\n+         */\n+    }\n+\n+    public void serviceChanged(ServiceEvent event) {\n+        if (event.getType() == ServiceEvent.REGISTERED) {\n+            ServiceReference ref = event.getServiceReference();\n+            ConfigurationAdmin ca = (ConfigurationAdmin) m_context.getService(ref);\n+            try {\n+                org.osgi.service.cm.Configuration config = ca.getConfiguration(\"test\");\n+                config.update(new Properties() {{ put(\"abc\", \"123\"); }});\n+            }\n+            catch (IOException e) {\n+            }\n+        }\n+    }\n+\n+    public void configurationEvent(ConfigurationEvent event) {\n+    }\n+}", "filename": "configadmin/src/test/java/org/apache/felix/cm/integration/FELIX2813_ConfigurationAdminStartupTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/2bcead4f8a63276503c5de21c0773a78235c472a", "parent": "https://github.com/apache/felix/commit/24b98f48ffd82479e8c61fdbe4d44b82ac32c355", "message": "Fix FELIX-2472 [iPOJO] Proxies should throw the OSGi service exception for the temporal dependency handler. Just replaced the former NPE by a Runtime Exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@963400 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_153", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/2bcead4f8a63276503c5de21c0773a78235c472a/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/ProxyGenerator.java", "blob_url": "https://github.com/apache/felix/blob/2bcead4f8a63276503c5de21c0773a78235c472a/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/ProxyGenerator.java", "sha": "a3fcd69aa68bc46740166923ebc3fa986ec53ace", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/ProxyGenerator.java?ref=2bcead4f8a63276503c5de21c0773a78235c472a", "patch": "@@ -123,7 +123,7 @@ private static void generateDelegator(ClassWriter cw, Method method,\n         int varSvc = freeRoom; \n         freeRoom = freeRoom + 1; // Object Reference.\n         mv.visitVarInsn(ASTORE, varSvc); // Store the service object.\n-        \n+                \n         // Invoke the method on the service object.\n         mv.visitVarInsn(ALOAD, varSvc);\n         // Push argument on the stack.", "filename": "ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/ProxyGenerator.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/2bcead4f8a63276503c5de21c0773a78235c472a/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/TemporalDependency.java", "blob_url": "https://github.com/apache/felix/blob/2bcead4f8a63276503c5de21c0773a78235c472a/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/TemporalDependency.java", "sha": "73e58dbc051cf1d44a482b324e5b6ffbd566b721", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/TemporalDependency.java?ref=2bcead4f8a63276503c5de21c0773a78235c472a", "patch": "@@ -350,7 +350,7 @@ public Object getService() {\n             if (exhausted) {\n                 Object obj =  onTimeout(); // Throw the Runtime Exception\n                 if (obj == null) {\n-                    throw new NullPointerException(\"No service available\"); // NPE if null.\n+                    throw new RuntimeException(\"No service available\"); // Runtime Exception to be consistent with iPOJO Core.\n                 } else {\n                     return obj; // Return a nullable or DI\n                 }", "filename": "ipojo/handler/temporal/src/main/java/org/apache/felix/ipojo/handler/temporal/TemporalDependency.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/0316b089c0e2626a0f891b00cb11becef8284aa7", "parent": "https://github.com/apache/felix/commit/baf4be12bbf4f65891f2f641776633c9a5b62a12", "message": "fix NPE in session.execute(\"a = $b x\") when $b evaluates to null;\nfix session.get(\".commands\") to be list of command names, rather than map.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@943079 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_154", "file": [{"additions": 6, "raw_url": "https://github.com/apache/felix/raw/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Activator.java", "blob_url": "https://github.com/apache/felix/blob/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Activator.java", "sha": "75cee01b8a969d535aca506dacd754c845522bb2", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Activator.java?ref=0316b089c0e2626a0f891b00cb11becef8284aa7", "patch": "@@ -53,6 +53,11 @@\n     private OSGiCommands commands;\n     private OSGiConverters converters;\n     private ServiceRegistration convertersRegistration;\n+    \n+    protected CommandProcessorImpl newProcessor(ThreadIO tio)\n+    {\n+        return new CommandProcessorImpl(threadio);\n+    }\n \n     public void start(final BundleContext context) throws Exception\n     {\n@@ -61,7 +66,7 @@ public void start(final BundleContext context) throws Exception\n         threadioRegistration = context.registerService(ThreadIO.class.getName(),\n             threadio, null);\n \n-        processor = new CommandProcessorImpl(threadio);\n+        processor = newProcessor(threadio);\n         processorRegistration = context.registerService(CommandProcessor.class.getName(),\n             processor, null);\n         ", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Activator.java"}, {"additions": 12, "raw_url": "https://github.com/apache/felix/raw/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/Closure.java", "blob_url": "https://github.com/apache/felix/blob/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/Closure.java", "sha": "8e84e79191b5892a523b60d4f2192cac92a5acdc", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/Closure.java?ref=0316b089c0e2626a0f891b00cb11becef8284aa7", "patch": "@@ -45,6 +45,7 @@\n     private final Object script;\n \n     private Token errTok;\n+    private Token errTok2;\n     private List<Object> parms = null;\n     private List<Object> parmv = null;\n \n@@ -289,6 +290,11 @@ public Object executeStatement(List<Token> statement) throws Exception\n \n         List<Object> values = new ArrayList<Object>();\n         errTok = statement.get(0);\n+        \n+        if ((statement.size() > 3) && Type.ASSIGN.equals(statement.get(1).type))\n+        {\n+            errTok2 = statement.get(2);\n+        }\n \n         for (Token t : statement)\n         {\n@@ -352,7 +358,12 @@ private Object execute(Object cmd, List<Object> values) throws Exception\n                 }\n                 else\n                 {\n-                    value = execute(values.get(1), values.subList(2, values.size()));\n+                    cmd = values.get(1);\n+                    if (null == cmd)\n+                    {\n+                        throw new RuntimeException(\"Command name evaluates to null: \" + errTok2);\n+                    }\n+                    value = execute(cmd, values.subList(2, values.size()));\n                 }\n \n                 return assignment(scmd, value);", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/Closure.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProcessorImpl.java", "blob_url": "https://github.com/apache/felix/blob/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProcessorImpl.java", "sha": "a37546f333360e909c53d89d0ee2bb6424605133", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProcessorImpl.java?ref=0316b089c0e2626a0f891b00cb11becef8284aa7", "patch": "@@ -62,9 +62,9 @@ public void removeConverter(Converter c)\n         converters.remove(c);\n     }\n     \n-    public Map<String, Object> getCommands()\n+    public Set<String> getCommands()\n     {\n-        return commands;\n+        return commands.keySet();\n     }\n \n     public Function getCommand(String name)", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProcessorImpl.java"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProxy.java", "blob_url": "https://github.com/apache/felix/blob/0316b089c0e2626a0f891b00cb11becef8284aa7/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProxy.java", "sha": "aca890c2213a149d233dfdaff4080417b930c250", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProxy.java?ref=0316b089c0e2626a0f891b00cb11becef8284aa7", "patch": "@@ -44,11 +44,16 @@ public CommandProxy(Object target, String function)\n         this.function = function;\n         this.target = target;\n     }\n+    \n+    public Object getTarget()\n+    {\n+        return (context != null ? context.getService(reference) : target);\n+    }\n \n     public Object execute(CommandSession session, List<Object> arguments)\n         throws Exception\n     {\n-        Object tgt = (context != null ? context.getService(reference) : target);\n+        Object tgt = getTarget();\n         \n         try\n         {", "filename": "gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandProxy.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/041797036e0a03e2e7986f0f20a8bd25cc26994d", "parent": "https://github.com/apache/felix/commit/b68eaaa3794cda40670a6c0f7a5e1d06eedcbffe", "message": "FELIX-1165 Ensure setting the service reference field for a ManagedService\nconfiguration also during update.\nAdditional fixes:\n  * NPE prevention if bundle event is handled after bundle stop (due to timing)\n  * logging if on configuration update multiple ManagedService candidates exist\n  * integration test for service reference field setting\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@804387 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_155", "file": [{"additions": 59, "raw_url": "https://github.com/apache/felix/raw/041797036e0a03e2e7986f0f20a8bd25cc26994d/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "blob_url": "https://github.com/apache/felix/blob/041797036e0a03e2e7986f0f20a8bd25cc26994d/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java", "sha": "1bd31ff2624baa5329252d587e6c94a7100c4794", "changes": 90, "status": "modified", "deletions": 31, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java?ref=041797036e0a03e2e7986f0f20a8bd25cc26994d", "patch": "@@ -138,7 +138,8 @@\n     private Map factories;\n \n     // the cache of Configuration instances mapped by their PID\n-    private Map configurations;\n+    // have this always set to prevent NPE on bundle shutdown\n+    private final Map configurations = new HashMap();\n \n     // the maximum log level when no LogService is available\n     private int logLevel = CM_LOG_LEVEL_DEFAULT;\n@@ -173,7 +174,6 @@ public void start( BundleContext bundleContext )\n         // set up some fields\n         this.bundleContext = bundleContext;\n         this.factories = new HashMap();\n-        this.configurations = new HashMap();\n \n         // configurationlistener support\n         configurationListenerTracker = new ServiceTracker( bundleContext, ConfigurationListener.class.getName(), null );\n@@ -205,8 +205,7 @@ public void start( BundleContext bundleContext )\n         bundleContext.addBundleListener( this );\n \n         // get all persistence managers to begin with\n-        pmtCount = 1; // make sure to get the persistence managers at least\n-        // once\n+        pmtCount = 1; // make sure to get the persistence managers at least once\n         persistenceManagerTracker = new ServiceTracker( bundleContext, PersistenceManager.class.getName(), null );\n         persistenceManagerTracker.open();\n \n@@ -227,6 +226,9 @@ public void start( BundleContext bundleContext )\n     public void stop( BundleContext bundleContext )\n     {\n \n+        // stop handling bundle events immediately\n+        handleBundleEvents = false;\n+\n         // immediately unregister the Configuration Admin before cleaning up\n         // clearing the field before actually unregistering the service\n         // prevents IllegalStateException in getServiceReference() if\n@@ -246,7 +248,6 @@ public void stop( BundleContext bundleContext )\n \n         // stop listening for events\n         bundleContext.removeBundleListener( this );\n-        handleBundleEvents = false;\n \n         if ( configurationListenerTracker != null )\n         {\n@@ -274,8 +275,13 @@ public void stop( BundleContext bundleContext )\n             logTracker.close();\n         }\n \n+        // just ensure the configuration cache is cleared, not cleaning\n+        synchronized ( configurations )\n+        {\n+            configurations.clear();\n+        }\n+\n         this.bundleContext = null;\n-        this.configurations = null;\n     }\n \n \n@@ -942,8 +948,7 @@ else if ( !bundleLocation.equals( cfg.getBundleLocation() ) )\n                 }\n \n                 // 104.3 Report an error in the log if more than one service\n-                // with\n-                // the same PID asks for the configuration\n+                // with the same PID asks for the configuration\n                 if ( cfg.getServiceReference() != null && !sr.equals( cfg.getServiceReference() ) )\n                 {\n                     log( LogService.LOG_ERROR, \"Configuration for \" + pid + \" has already been used for service \"\n@@ -1189,17 +1194,31 @@ public void run()\n             {\n                 if ( config.getFactoryPid() == null )\n                 {\n-                    ServiceReference[] sr = bundleContext.getServiceReferences( ManagedService.class.getName(), \"(\"\n-                        + Constants.SERVICE_PID + \"=\" + config.getPid() + \")\" );\n-                    if ( sr != null && sr.length > 0 )\n+                    final ServiceReference[] srList = bundleContext.getServiceReferences( ManagedService.class\n+                        .getName(), \"(\" + Constants.SERVICE_PID + \"=\" + config.getPid() + \")\" );\n+                    if ( srList != null && srList.length > 0 )\n                     {\n-                        ManagedService srv = ( ManagedService ) bundleContext.getService( sr[0] );\n+                        final ServiceReference sr = srList[0];\n+                        final ManagedService srv = ( ManagedService ) bundleContext.getService( sr );\n+\n+                        // 104.3 Report an error in the log if more than one service\n+                        // with the same PID asks for the configuration\n+                        if ( srList.length > 1 )\n+                        {\n+                            for ( int i = 1; i < srList.length; i++ )\n+                            {\n+                                log( LogService.LOG_ERROR, \"Configuration for \" + config.getPid()\n+                                    + \" is used for service \" + sr\n+                                    + \"following services will not receive configuration: \" + srList[i], null );\n+                            }\n+                        }\n+\n                         try\n                         {\n                             // bind the configuration, fail if bound to another\n                             // bundle !!\n                             // check bundle location of configuration\n-                            String bundleLocation = sr[0].getBundle().getLocation();\n+                            String bundleLocation = sr.getBundle().getLocation();\n                             if ( config.getBundleLocation() == null )\n                             {\n                                 // bind to the location of the service if\n@@ -1215,32 +1234,39 @@ else if ( !bundleLocation.equals( config.getBundleLocation() ) )\n                                 return;\n                             }\n \n+                            // record the delivery of the configuration\n+                            if ( config.getServiceReference() == null )\n+                            {\n+                                config.setServiceReference( sr );\n+                            }\n+\n                             // prepare the configuration for the service (call plugins)\n-                            Dictionary dictionary = callPlugins( config.getPid(), sr[0], config );\n+                            Dictionary dictionary = callPlugins( config.getPid(), sr, config );\n \n                             // update the ManagedService with the properties\n                             srv.updated( dictionary );\n                             config.setDelivered( true );\n                         }\n                         finally\n                         {\n-                            bundleContext.ungetService( sr[0] );\n+                            bundleContext.ungetService( sr );\n                         }\n                     }\n                 }\n                 else\n                 {\n-                    ServiceReference[] sr = bundleContext.getServiceReferences( ManagedServiceFactory.class.getName(),\n-                        \"(\" + Constants.SERVICE_PID + \"=\" + config.getFactoryPid() + \")\" );\n-                    if ( sr != null && sr.length > 0 )\n+                    ServiceReference[] srList = bundleContext.getServiceReferences( ManagedServiceFactory.class\n+                        .getName(), \"(\" + Constants.SERVICE_PID + \"=\" + config.getFactoryPid() + \")\" );\n+                    if ( srList != null && srList.length > 0 )\n                     {\n-                        ManagedServiceFactory srv = ( ManagedServiceFactory ) bundleContext.getService( sr[0] );\n+                        final ServiceReference sr = srList[0];\n+                        final ManagedServiceFactory srv = ( ManagedServiceFactory ) bundleContext.getService( sr );\n                         try\n                         {\n                             // bind the configuration, fail if bound to another\n                             // bundle !!\n                             // check bundle location of configuration\n-                            String bundleLocation = sr[0].getBundle().getLocation();\n+                            String bundleLocation = sr.getBundle().getLocation();\n                             if ( config.getBundleLocation() == null )\n                             {\n                                 // bind to the location of the service if\n@@ -1259,7 +1285,7 @@ else if ( !bundleLocation.equals( config.getBundleLocation() ) )\n                             // prepare the configuration for the service (call plugins)\n                             // call the plugins with cm.target set to the service's factory PID\n                             // (clarification in Section 104.9.1 of Compendium 4.2)\n-                            Dictionary dictionary = callPlugins( config.getFactoryPid(), sr[0], config );\n+                            Dictionary dictionary = callPlugins( config.getFactoryPid(), sr, config );\n \n                             // update the ManagedServiceFactory with the properties\n                             // only, if there is non-null configuration data\n@@ -1271,7 +1297,7 @@ else if ( !bundleLocation.equals( config.getBundleLocation() ) )\n                         }\n                         finally\n                         {\n-                            bundleContext.ungetService( sr[0] );\n+                            bundleContext.ungetService( sr );\n                         }\n                     }\n                 }\n@@ -1331,19 +1357,20 @@ public void run()\n             {\n                 if ( factoryPid == null )\n                 {\n-                    ServiceReference[] sr = bundleContext.getServiceReferences( ManagedService.class.getName(), \"(\"\n+                    ServiceReference[] srList = bundleContext.getServiceReferences( ManagedService.class.getName(), \"(\"\n                         + Constants.SERVICE_PID + \"=\" + pid + \")\" );\n-                    if ( sr != null && sr.length > 0 )\n+                    if ( srList != null && srList.length > 0 )\n                     {\n-                        ManagedService srv = ( ManagedService ) bundleContext.getService( sr[0] );\n+                        final ServiceReference sr = srList[0];\n+                        final ManagedService srv = ( ManagedService ) bundleContext.getService( sr );\n                         try\n                         {\n                             srv.updated( null );\n                             config.setDelivered( true );\n                         }\n                         finally\n                         {\n-                            bundleContext.ungetService( sr[0] );\n+                            bundleContext.ungetService( sr );\n                         }\n                     }\n                 }\n@@ -1354,19 +1381,20 @@ public void run()\n                     factory.removePID( pid );\n                     factory.store();\n \n-                    ServiceReference[] sr = bundleContext.getServiceReferences( ManagedServiceFactory.class.getName(),\n-                        \"(\" + Constants.SERVICE_PID + \"=\" + factoryPid + \")\" );\n-                    if ( sr != null && sr.length > 0 )\n+                    ServiceReference[] srList = bundleContext.getServiceReferences( ManagedServiceFactory.class\n+                        .getName(), \"(\" + Constants.SERVICE_PID + \"=\" + factoryPid + \")\" );\n+                    if ( srList != null && srList.length > 0 )\n                     {\n-                        ManagedServiceFactory srv = ( ManagedServiceFactory ) bundleContext.getService( sr[0] );\n+                        final ServiceReference sr = srList[0];\n+                        final ManagedServiceFactory srv = ( ManagedServiceFactory ) bundleContext.getService( sr );\n                         try\n                         {\n                             srv.deleted( pid );\n                             config.setDelivered( true );\n                         }\n                         finally\n                         {\n-                            bundleContext.ungetService( sr[0] );\n+                            bundleContext.ungetService( sr );\n                         }\n                     }\n                 }", "filename": "configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java"}, {"additions": 89, "raw_url": "https://github.com/apache/felix/raw/041797036e0a03e2e7986f0f20a8bd25cc26994d/configadmin/src/test/java/org/apache/felix/cm/integration/ConfigurationTest.java", "blob_url": "https://github.com/apache/felix/blob/041797036e0a03e2e7986f0f20a8bd25cc26994d/configadmin/src/test/java/org/apache/felix/cm/integration/ConfigurationTest.java", "sha": "cfadf94dcbffbd70d3f83ff04dbdbdb2e0ea0690", "changes": 91, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/configadmin/src/test/java/org/apache/felix/cm/integration/ConfigurationTest.java?ref=041797036e0a03e2e7986f0f20a8bd25cc26994d", "patch": "@@ -129,6 +129,10 @@ public void test_configuration_unbound_on_uninstall() throws IOException, Bundle\n         // give cm time for distribution\n         delay();\n \n+        // assert activater has configuration\n+        TestCase.assertNotNull( \"Expect Properties after Service Registration\", tester.props );\n+        TestCase.assertEquals( \"Expect a single update call\", 1, tester.numUpdatedCalls );\n+\n         // ensure a freshly retrieved object also has the location\n         final Configuration beforeStop = getConfiguration( pid );\n         TestCase.assertEquals( beforeStop.getBundleLocation(), bundle.getLocation() );\n@@ -160,17 +164,100 @@ public void test_configuration_unbound_on_uninstall() throws IOException, Bundle\n         // ensure a freshly retrieved object also does not have the location\n         final Configuration atEnd = getConfiguration( pid );\n         TestCase.assertNull( atEnd.getBundleLocation() );\n+\n+        // remove the configuration for good\n+        deleteConfig( pid );\n     }\n \n \n-    private Bundle installBundle( final String pid ) throws BundleException {\n+    @Test\n+    public void test_start_bundle_configure_stop_start_bundle() throws IOException, BundleException\n+    {\n+        String pid = \"test_start_bundle_configure_stop_start_bundle\";\n+\n+        // start the bundle and assert this\n+        bundle = installBundle( pid );\n+        bundle.start();\n+        final TestActivator tester = TestActivator.INSTANCE;\n+        TestCase.assertNotNull( \"Activator not started !!\", tester );\n+\n+        // give cm time for distribution\n+        delay();\n+\n+        // assert activater has no configuration\n+        TestCase.assertNull( \"Expect no Properties after Service Registration\", tester.props );\n+        TestCase.assertEquals( \"Expect no update call\", 1, tester.numUpdatedCalls );\n+\n+        // configure after ManagedServiceRegistration --> configure via update\n+        configure( pid );\n+        delay();\n+\n+        // assert activater has configuration\n+        TestCase.assertNotNull( \"Expect Properties after Service Registration\", tester.props );\n+        TestCase.assertEquals( \"Expect a single update call\", 2, tester.numUpdatedCalls );\n+\n+        // stop the bundle now\n+        bundle.stop();\n+\n+        // assert INSTANCE is null\n+        TestCase.assertNull( TestActivator.INSTANCE );\n+\n+        delay();\n+\n+        // start the bundle again (and check)\n+        bundle.start();\n+        final TestActivator tester2 = TestActivator.INSTANCE;\n+        TestCase.assertNotNull( \"Activator not started the second time!!\", tester2 );\n+        TestCase.assertNotSame( \"Instances must not be the same\", tester, tester2 );\n+\n+        // give cm time for distribution\n+        delay();\n+\n+        // assert activater has configuration\n+        TestCase.assertNotNull( \"Expect Properties after Service Registration\", tester2.props );\n+        TestCase.assertEquals( \"Expect a second update call\", 1, tester2.numUpdatedCalls );\n+\n+        // cleanup\n+        bundle.uninstall();\n+        bundle = null;\n+\n+        // remove the configuration for good\n+        deleteConfig( pid );\n+    }\n+\n+\n+    /*\n+    @Test\n+    public void test_() throws BundleException\n+    {\n+        final int count = 2;\n+        for (int i=0; i < count; i++) {\n+            final Bundle bundle = installBundle( \"dummy\", FailureActivator.class );\n+            bundle.start();\n+            delay();\n+            bundle.uninstall();\n+            delay();\n+        }\n+    }\n+    */\n+\n+\n+    private Bundle installBundle( final String pid ) throws BundleException\n+    {\n+        return installBundle( pid, TestActivator.class );\n+    }\n+\n+\n+    private Bundle installBundle( final String pid, final Class<?> activatorClass )\n+        throws BundleException\n+    {\n         final InputStream bundleStream = new MyTinyBundle()\n             .prepare(\n                 withBnd()\n                 .set( Constants.BUNDLE_SYMBOLICNAME, \"simpleconfiguration\" )\n                 .set( Constants.BUNDLE_VERSION, \"0.0.11\" )\n                 .set( Constants.IMPORT_PACKAGE, \"org.apache.felix.cm.integration.helper\" )\n-                .set( Constants.BUNDLE_ACTIVATOR, \"org.apache.felix.cm.integration.helper.TestActivator\" )\n+                .set( Constants.BUNDLE_ACTIVATOR, activatorClass.getName() )\n                 .set( TestActivator.HEADER_PID, pid )\n             )\n             .build( TinyBundles.asStream() );", "filename": "configadmin/src/test/java/org/apache/felix/cm/integration/ConfigurationTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/d629298fc4639897d40306a854b7d020695f28bc", "parent": "https://github.com/apache/felix/commit/56f32318f7047c6c90ce742600f8109ebebc4801", "message": "Reorganized usage count methods to better handle null reference checking\nin response to Karl Pauls seeing an NPE when trying to get a service that\nwas already unregistered while shutting down the framework.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@593337 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_156", "file": [{"additions": 95, "raw_url": "https://github.com/apache/felix/raw/d629298fc4639897d40306a854b7d020695f28bc/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java", "blob_url": "https://github.com/apache/felix/blob/d629298fc4639897d40306a854b7d020695f28bc/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java", "sha": "7dbd94ea94026ec9bd8cc24ac1f2b3efec939615", "changes": 179, "status": "modified", "deletions": 84, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java?ref=d629298fc4639897d40306a854b7d020695f28bc", "patch": "@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -197,51 +197,51 @@ else if (className != null)\n \n     public synchronized Object getService(Bundle bundle, ServiceReference ref)\n     {\n-        // Get usage counts for specified bundle.\n-        UsageCount[] usages = (UsageCount[]) m_inUseMap.get(bundle);\n+        // Variable for service object.\n+        Object svcObj = null;\n+\n+        // Get the service registration.\n+        ServiceRegistrationImpl reg = ((ServiceReferenceImpl) ref).getServiceRegistration();\n \n         // Make sure the service registration is still valid.\n-        if (!((ServiceReferenceImpl) ref).getServiceRegistration().isValid())\n+        if (!reg.isValid())\n         {\n             // If the service registration is not valid, then this means\n             // that the service provider unregistered the service. The spec\n             // says that calls to get an unregistered service should always\n             // return null (assumption: even if it is currently cached\n             // by the bundle). So in this case, flush the service reference\n             // from the cache and return null.\n-            m_inUseMap.put(bundle, removeUsageCount(usages, ref));\n+            flushUsageCount(bundle, ref);\n \n             // It is not necessary to unget the service object from\n             // the providing bundle, since the associated service is\n             // unregistered and hence not in the list of registered services\n             // of the providing bundle. This is precisely why the service\n             // registration was not found above in the first place.\n-            return null;\n-        }\n-\n-        // Get the service registration.\n-        ServiceRegistrationImpl reg = ((ServiceReferenceImpl) ref).getServiceRegistration();\n-\n-        // Get the usage count, if any.\n-        UsageCount usage = getUsageCount(usages, ref);\n-       \n-        // If the service object is cached, then increase the usage\n-        // count and return the cached service object.\n-        Object svcObj = null;\n-        if (usage != null)\n-        {\n-            usage.m_count++;\n-            svcObj = usage.m_svcObj;\n         }\n         else\n         {\n-            // Get service object from service registration.\n-            svcObj = reg.getService(bundle);\n+            // Get the usage count, if any.\n+            UsageCount usage = getUsageCount(bundle, ref);\n \n-            // Cache the service object.\n-            if (svcObj != null)\n+            // If the service object is cached, then increase the usage\n+            // count and return the cached service object.\n+            if (usage != null)\n+            {\n+                usage.m_count++;\n+                svcObj = usage.m_svcObj;\n+            }\n+            else\n             {\n-                m_inUseMap.put(bundle, addUsageCount(usages, ref, svcObj));\n+                // Get service object from service registration.\n+                svcObj = reg.getService(bundle);\n+\n+                // Cache the service object.\n+                if (svcObj != null)\n+                {\n+                    addUsageCount(bundle, ref, svcObj);\n+                }\n             }\n         }\n \n@@ -250,57 +250,49 @@ public synchronized Object getService(Bundle bundle, ServiceReference ref)\n \n     public synchronized boolean ungetService(Bundle bundle, ServiceReference ref)\n     {\n+        // Result of unget.\n+        boolean result = false;\n+\n         // Get usage count.\n-        UsageCount[] usages = (UsageCount[]) m_inUseMap.get(bundle);\n-        UsageCount usage = getUsageCount(usages, ref);\n+        UsageCount usage = getUsageCount(bundle, ref);\n \n         // If no usage count, then return.\n-        if (usage == null)\n-        {\n-            return false;\n-        }\n-\n-        // Make sure the service registration is still valid.\n-        if (!((ServiceReferenceImpl) ref).getServiceRegistration().isValid())\n-        {\n-            // If the service registration is not valid, then this means\n-            // that the service provider unregistered the service. The spec\n-            // says that calls to get an unregistered service should always\n-            // return null (assumption: even if it is currently cached\n-            // by the bundle). So in this case, flush the service reference\n-            // from the cache and return null.\n-            m_inUseMap.put(bundle, removeUsageCount(usages, ref));\n-            return false;\n-        }\n-\n-        // Decrement usage count.\n-        usage.m_count--;\n-\n-        // Remove reference when usage count goes to zero\n-        // and unget the service object from the exporting\n-        // bundle.\n-        if (usage.m_count == 0)\n+        if (usage != null)\n         {\n-            // Remove reference from usages array.\n-            usages = removeUsageCount(usages, ref);\n-            // If there are no more usages in the array, then remove\n-            // the bundle from the inUseMap to allow for garbage collection.\n-            if (usages.length == 0)\n+            // Make sure the service registration is still valid.\n+            if (!((ServiceReferenceImpl) ref).getServiceRegistration().isValid())\n             {\n-                m_inUseMap.remove(bundle);\n+                // If the service registration is not valid, then this means\n+                // that the service provider unregistered the service. The spec\n+                // says that calls to get an unregistered service should always\n+                // return null (assumption: even if it is currently cached\n+                // by the bundle). So in this case, flush the service reference\n+                // from the cache and return null.\n+                flushUsageCount(bundle, ref);\n             }\n             else\n             {\n-                m_inUseMap.put(bundle, usages);\n+                // Decrement usage count.\n+                usage.m_count--;\n+\n+                // Remove reference when usage count goes to zero\n+                // and unget the service object from the exporting\n+                // bundle.\n+                if (usage.m_count == 0)\n+                {\n+                    // Remove reference from usages array.\n+                    flushUsageCount(bundle, ref);\n+                    ((ServiceReferenceImpl) ref)\n+                        .getServiceRegistration().ungetService(bundle, usage.m_svcObj);\n+                    usage.m_svcObj = null;\n+                }\n+\n+                // Return true if the usage count is greater than zero.\n+                result = (usage.m_count > 0);\n             }\n-            ServiceRegistrationImpl reg =\n-                ((ServiceReferenceImpl) ref).getServiceRegistration();\n-            reg.ungetService(bundle, usage.m_svcObj);\n-            usage.m_svcObj = null;\n         }\n \n-        // Return true if the usage count is greater than zero.\n-        return (usage.m_count > 0);\n+        return result;\n     }\n \n \n@@ -411,7 +403,7 @@ public Logger getLogger()\n                     regs = newRegs;\n                 }\n             }\n-        }      \n+        }\n         return regs;\n     }\n \n@@ -440,18 +432,18 @@ protected void fireServiceChanged(ServiceEvent event)\n     {\n         protected ServiceListener m_a = null, m_b = null;\n \n-        protected ServiceListenerMulticaster(ServiceListener a, ServiceListener b)    \n-        {        \n-            m_a = a;        \n-            m_b = b;    \n-        }    \n-    \n-        public void serviceChanged(ServiceEvent e)    \n+        protected ServiceListenerMulticaster(ServiceListener a, ServiceListener b)\n+        {\n+            m_a = a;\n+            m_b = b;\n+        }\n+\n+        public void serviceChanged(ServiceEvent e)\n         {\n             m_a.serviceChanged(e);\n             m_b.serviceChanged(e);\n         }\n-    \n+\n         public static ServiceListener add(ServiceListener a, ServiceListener b)\n         {\n             if (a == null)\n@@ -467,7 +459,7 @@ else if (b == null)\n                 return new ServiceListenerMulticaster(a, b);\n             }\n         }\n-    \n+\n         public static ServiceListener remove(ServiceListener a, ServiceListener b)\n         {\n             if ((a == null) || (a == b))\n@@ -487,8 +479,9 @@ else if (a instanceof ServiceListenerMulticaster)\n         }\n     }\n \n-    private static UsageCount getUsageCount(UsageCount[] usages, ServiceReference ref)\n+    private UsageCount getUsageCount(Bundle bundle, ServiceReference ref)\n     {\n+        UsageCount[] usages = (UsageCount[]) m_inUseMap.get(bundle);\n         for (int i = 0; (usages != null) && (i < usages.length); i++)\n         {\n             if (usages[i].m_ref.equals(ref))\n@@ -499,8 +492,17 @@ private static UsageCount getUsageCount(UsageCount[] usages, ServiceReference re\n         return null;\n     }\n \n-    private static UsageCount[] addUsageCount(UsageCount[] usages, ServiceReference ref, Object svcObj)\n+    /**\n+     * Utility method to update the specified bundle's usage count array to\n+     * include the specified service.\n+     * @param bundle The bundle acquiring the service.\n+     * @param ref The service reference of the acquired service.\n+     * @param svcObj The service object of the acquired service.\n+     */\n+    private void addUsageCount(Bundle bundle, ServiceReference ref, Object svcObj)\n     {\n+        UsageCount[] usages = (UsageCount[]) m_inUseMap.get(bundle);\n+\n         UsageCount usage = new UsageCount();\n         usage.m_ref = ref;\n         usage.m_svcObj = svcObj;\n@@ -517,24 +519,26 @@ private static UsageCount getUsageCount(UsageCount[] usages, ServiceReference re\n             newUsages[usages.length] = usage;\n             usages = newUsages;\n         }\n-        return usages;\n+\n+        m_inUseMap.put(bundle, usages);\n     }\n \n-    private static UsageCount[] removeUsageCount(UsageCount[] usages, ServiceReference ref)\n+    private void flushUsageCount(Bundle bundle, ServiceReference ref)\n     {\n+        UsageCount[] usages = (UsageCount[]) m_inUseMap.get(bundle);\n         for (int i = 0; (usages != null) && (i < usages.length); i++)\n         {\n             if (usages[i].m_ref.equals(ref))\n             {\n                 // If this is the only usage, then point to empty list.\n                 if ((usages.length - 1) == 0)\n                 {\n-                    usages = new UsageCount[0];\n+                    usages = null;\n                 }\n                 // Otherwise, we need to do some array copying.\n                 else\n                 {\n-                    UsageCount[] newUsages= new UsageCount[usages.length - 1];\n+                    UsageCount[] newUsages = new UsageCount[usages.length - 1];\n                     System.arraycopy(usages, 0, newUsages, 0, i);\n                     if (i < newUsages.length)\n                     {\n@@ -545,8 +549,15 @@ private static UsageCount getUsageCount(UsageCount[] usages, ServiceReference re\n                 }\n             }\n         }\n-        \n-        return usages;\n+\n+        if (usages != null)\n+        {\n+            m_inUseMap.put(bundle, usages);\n+        }\n+        else\n+        {\n+            m_inUseMap.remove(bundle);\n+        }\n     }\n \n     private static class UsageCount", "filename": "framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/b3193cb7b76a7e5bcefb2371672d397a9f864ae4", "parent": "https://github.com/apache/felix/commit/4c98f67d5c754a75e6333310dd32863b9b466532", "message": "A previous change to help garbage collection was causing an NPE. It is\nunclear to me that the \"fix\" is actually necessary, so I am commenting\nit out now until we can investigate it further.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/felix/trunk@468023 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_157", "file": [{"additions": 7, "raw_url": "https://github.com/apache/felix/raw/b3193cb7b76a7e5bcefb2371672d397a9f864ae4/framework/src/main/java/org/apache/felix/framework/Felix.java", "blob_url": "https://github.com/apache/felix/blob/b3193cb7b76a7e5bcefb2371672d397a9f864ae4/framework/src/main/java/org/apache/felix/framework/Felix.java", "sha": "95b77ec4e7eda79473234f58461bf6a63303e1c7", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/Felix.java?ref=b3193cb7b76a7e5bcefb2371672d397a9f864ae4", "patch": "@@ -3152,6 +3152,13 @@ public void purgeOrRemove()\n                     // This physically removes the bundle from memory\n                     // as well as the bundle cache.\n                     garbageCollectBundle(m_bundle);\n+// TODO: FRAMEWORK - There is some indication that there is a memory leak\n+//                   if we do not null the BundleInfo here. We should verify\n+//                   that this is true, because if we null here then we have\n+//                   check for nulls when we are releasing bundle locks, which\n+//                   maybe cascading unnecessary ugliness. For now, I will\n+//                   leave this commented out until we can investigate further.\n+//                    m_bundle.setInfo(null);\n                     m_bundle = null;\n                 }\n                 else", "filename": "framework/src/main/java/org/apache/felix/framework/Felix.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/9fb1a3f424583ce9dd0df92a3ca5f6404bafe635", "parent": "https://github.com/apache/felix/commit/014551b4f005cb28f4bc9141f826f3bcf5b45fa9", "message": "Fixed a bug (FELIX-143) that was causing an NPE due to the fact that the\nfindEntries() code was assuming that all bundles have content, but the\nsystem bundle does not.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/felix/trunk@462805 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_158", "file": [{"additions": 3, "raw_url": "https://github.com/apache/felix/raw/9fb1a3f424583ce9dd0df92a3ca5f6404bafe635/framework/src/main/java/org/apache/felix/framework/FindEntriesEnumeration.java", "blob_url": "https://github.com/apache/felix/blob/9fb1a3f424583ce9dd0df92a3ca5f6404bafe635/framework/src/main/java/org/apache/felix/framework/FindEntriesEnumeration.java", "sha": "9dc1dc5aadf0d0a268261901d804a538c2050303", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/FindEntriesEnumeration.java?ref=9fb1a3f424583ce9dd0df92a3ca5f6404bafe635", "patch": "@@ -36,8 +36,8 @@ public FindEntriesEnumeration(\n     {\n         m_bundle = bundle;\n         m_path = path;\n-        m_enumeration = m_bundle.getInfo().getCurrentModule()\n-            .getContentLoader().getContent().getEntries();\n+        m_enumeration = (m_bundle.getInfo().getCurrentModule().getContentLoader().getContent() == null)\n+            ? null : m_bundle.getInfo().getCurrentModule().getContentLoader().getContent().getEntries();\n         m_recurse = recurse;\n \n         // Sanity check the parameters.\n@@ -86,7 +86,7 @@ private Object findNext()\n         // it only displays the contents of the directory specified by\n         // the path argument either recursively or not; much like using\n         // \"ls -R\" or \"ls\" to list the contents of a directory, respectively.\n-        while (m_enumeration.hasMoreElements())\n+        while ((m_enumeration != null) && m_enumeration.hasMoreElements())\n         {\n             // Get the next entry name.\n             String entryName = (String) m_enumeration.nextElement();", "filename": "framework/src/main/java/org/apache/felix/framework/FindEntriesEnumeration.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/7a74324eef3537b1474c955a33b01d5922afbdb9", "parent": "https://github.com/apache/felix/commit/21ac64c4271fa06096d0ed50f0d564e345e05b8d", "message": "The repository impl now ignores extra metadata in the XML file. Also fixed\na bug in the requirement impl that could lead to a NPE when comparing\nrequirements with null comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/felix/trunk@396876 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_159", "file": [{"additions": 17, "raw_url": "https://github.com/apache/felix/raw/7a74324eef3537b1474c955a33b01d5922afbdb9/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RepositoryImpl.java", "blob_url": "https://github.com/apache/felix/blob/7a74324eef3537b1474c955a33b01d5922afbdb9/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RepositoryImpl.java", "sha": "ca73ecf96ca0a35b31882708c6dbee922059e8d7", "changes": 20, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RepositoryImpl.java?ref=7a74324eef3537b1474c955a33b01d5922afbdb9", "patch": "@@ -108,6 +108,16 @@ public void setLastmodified(String s)\n         }\n     }\n \n+    /**\n+     * Default setter method when setting parsed data from the XML file,\n+     * which currently ignores everything. \n+    **/\n+    protected Object put(Object key, Object value)\n+    {\n+        // Ignore everything for now.\n+        return null;\n+    }\n+\n     private void parseRepositoryFile(int hopCount)\n     {\n // TODO: OBR - Implement hop count.\n@@ -145,13 +155,17 @@ public RepositoryImpl newInstance()\n                     }\n                 };\n \n+                // Get default setter method for Repository.\n+                Method repoSetter = RepositoryImpl.class.getDeclaredMethod(\n+                    \"put\", new Class[] { Object.class, Object.class });\n+\n                 // Get default setter method for Resource.\n-                Method resourceSetter = ResourceImpl.class.getDeclaredMethod(\n+                Method resSetter = ResourceImpl.class.getDeclaredMethod(\n                     \"put\", new Class[] { Object.class, Object.class });\n \n                 // Map XML tags to types.\n-                handler.addType(\"repository\", factory, Repository.class, null);\n-                handler.addType(\"resource\", ResourceImpl.class, Resource.class, resourceSetter);\n+                handler.addType(\"repository\", factory, Repository.class, repoSetter);\n+                handler.addType(\"resource\", ResourceImpl.class, Resource.class, resSetter);\n                 handler.addType(\"category\", CategoryImpl.class, null, null);\n                 handler.addType(\"require\", RequirementImpl.class, Requirement.class, null);\n                 handler.addType(\"capability\", CapabilityImpl.class, Capability.class, null);", "filename": "org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RepositoryImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/felix/raw/7a74324eef3537b1474c955a33b01d5922afbdb9/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RequirementImpl.java", "blob_url": "https://github.com/apache/felix/blob/7a74324eef3537b1474c955a33b01d5922afbdb9/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RequirementImpl.java", "sha": "b959f74b600b0646df07a29c3fa2acfab945a598", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RequirementImpl.java?ref=7a74324eef3537b1474c955a33b01d5922afbdb9", "patch": "@@ -118,7 +118,8 @@ public synchronized boolean equals(Object o)\n                 (m_optional == r.isOptional()) &&\n                 (m_multiple == r.isMultiple()) &&\n                 m_filter.toString().equals(r.getFilter()) &&\n-                m_comment.equals(r.getComment());\n+                ((m_comment == r.getComment()) ||\n+                    ((m_comment != null) && (m_comment.equals(r.getComment()))));\n         }\n         return false;\n     }", "filename": "org.apache.felix.bundlerepository/src/main/java/org/apache/felix/bundlerepository/RequirementImpl.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/a44649edd369a4444c7682e62ab68b1851ad6af9", "parent": "https://github.com/apache/felix/commit/7427f720266df0b558757493f13873765c760494", "message": "When the resource processor gets a resource that contains no Designates, which might be a bit strange but is allowed according to the spec, the processor throws a NPE, when it should just not do any processing. This change does just that, and logs the fact that there are no Designates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1061781 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_160", "file": [{"additions": 5, "raw_url": "https://github.com/apache/felix/raw/a44649edd369a4444c7682e62ab68b1851ad6af9/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java", "blob_url": "https://github.com/apache/felix/blob/a44649edd369a4444c7682e62ab68b1851ad6af9/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java", "sha": "980c0906633387bc7e1d8a5d10c90bbb09225356", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java?ref=a44649edd369a4444c7682e62ab68b1851ad6af9", "patch": "@@ -100,6 +100,11 @@ public void process(String name, InputStream stream) throws ResourceProcessorExc\n \n \t   // process resources\n \t   Map designates = data.getDesignates();\n+\t   if (designates == null) {\n+\t       // if there are no designates, there's nothing to process\n+\t       m_log.log(LogService.LOG_INFO, \"No designates found in the resource, so there's nothing to process.\");\n+\t       return;\n+\t   }\n \t   Map localOcds = data.getObjectClassDefinitions();\n \t   Iterator i = designates.keySet().iterator();\n \t   while (i.hasNext()) {", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "parent": "https://github.com/apache/felix/commit/2dceb845cddfbb4db9e4271dc16005d730271082", "message": "Fix FELIX-2716 [iPOJO] Failure when creating proxies for classes in java.* packages\nChange the package name of smart proxies of java.* interfaces\nAdd a second check to be sure to never create proxy of non-interface type\n\nImprove the logger messages (cosmetic fixes)\nAvoid an NPE in the InstanceManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1042125 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_161", "file": [{"additions": 1, "raw_url": "https://github.com/apache/felix/raw/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/InstanceManager.java", "blob_url": "https://github.com/apache/felix/blob/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/InstanceManager.java", "sha": "4910516135cb4f4c7314bb468dc076a44631af31", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/InstanceManager.java?ref=abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "patch": "@@ -1068,7 +1068,7 @@ public void onError(Object pojo, String methodId, Throwable error) {\n     private Method getMethodById(String methodId) {\n         // Not necessary synchronized as recomputing the methodID will give the same Method twice.\n         Method method = (Method) m_methods.get(methodId);\n-        if (method == null) {\n+        if (method == null  && m_clazz != null) {\n             Method[] mets = m_clazz.getDeclaredMethods();\n             for (int i = 0; i < mets.length; i++) {\n                 // Check if the method was not already computed. If not, compute the Id and check.", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/InstanceManager.java"}, {"additions": 20, "raw_url": "https://github.com/apache/felix/raw/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java", "blob_url": "https://github.com/apache/felix/blob/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java", "sha": "3ffe9053db56032a20394a75304aa294075d67c1", "changes": 29, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java?ref=abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "patch": "@@ -397,14 +397,20 @@ public void start() {\n             if (isAggregate()) {\n                 m_proxyObject = new ServiceCollection(this);\n             } else {\n-                String type = getHandler().getInstanceManager().getContext().getProperty(DependencyHandler.PROXY_TYPE_PROPERTY);\n-                if (type == null || type.equals(DependencyHandler.SMART_PROXY)) {\n-                    SmartProxyFactory proxyFactory = new SmartProxyFactory(this.getClass().getClassLoader());\n-                    m_proxyObject = proxyFactory.getProxy(getSpecification(), this);\n-                } else {\n-                    DynamicProxyFactory proxyFactory = new DynamicProxyFactory();\n-                    m_proxyObject = proxyFactory.getProxy(getSpecification());\n-                }\n+            \t// Can we really proxy ? We can proxy only interfaces.\n+            \tif (getSpecification().isInterface()) {\n+\t                String type = getHandler().getInstanceManager().getContext().getProperty(DependencyHandler.PROXY_TYPE_PROPERTY);\n+\t                if (type == null || type.equals(DependencyHandler.SMART_PROXY)) {\n+\t                    SmartProxyFactory proxyFactory = new SmartProxyFactory(this.getClass().getClassLoader());\n+\t                    m_proxyObject = proxyFactory.getProxy(getSpecification(), this);\n+\t                } else {\n+\t                    DynamicProxyFactory proxyFactory = new DynamicProxyFactory();\n+\t                    m_proxyObject = proxyFactory.getProxy(getSpecification());\n+\t                }\n+            \t} else {\n+            \t\tm_handler.warn(\"Cannot create a proxy for a service dependency which is not an interface \" +\n+            \t\t\t\t\"- disabling proxy for \" + getId());\n+            \t}\n             }\n         }\n \n@@ -868,7 +874,12 @@ public SmartProxyFactory(ClassLoader parent) {\n          */\n         protected Class getProxyClass(Class clazz) {\n             byte[] clz = ProxyGenerator.dumpProxy(clazz); // Generate the proxy.\n-            return defineClass(clazz.getName() + \"$$Proxy\", clz, 0, clz.length);\n+        \t// Turn around the VM changes (FELIX-2716) about java.* classes.\n+            String cn = clazz.getName();\n+            if (cn.startsWith(\"java.\")) {\n+            \tcn = \"$\" + cn;\n+            }\n+            return defineClass(cn + \"$$Proxy\", clz, 0, clz.length);\n         }\n \n         /**", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/Dependency.java"}, {"additions": 40, "raw_url": "https://github.com/apache/felix/raw/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/ProxyGenerator.java", "blob_url": "https://github.com/apache/felix/blob/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/ProxyGenerator.java", "sha": "1dd2cf38351fca17494ba171a894ca130f845049", "changes": 66, "status": "modified", "deletions": 26, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/ProxyGenerator.java?ref=abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "patch": "@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -34,26 +34,26 @@\n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n public class ProxyGenerator implements Opcodes {\n-    \n+\n     /**\n-     * The dependency name. \n+     * The dependency name.\n      */\n     private static final String DEPENDENCY = \"m_dependency\";\n-    \n+\n     /**\n      * The dependency descriptor.\n      */\n     private static final String DEPENDENCY_DESC = Type.getDescriptor(Dependency.class);\n-    \n+\n     /**\n-     * Dependency internal class name. \n+     * Dependency internal class name.\n      */\n     private static final String DEPENDENCY_INTERNAL_NAME = \"org/apache/felix/ipojo/handlers/dependency/Dependency\";\n-    \n+\n     /**\n-     * Gets the internal names of the given class objects. \n+     * Gets the internal names of the given class objects.\n      * @param classes the classes\n-     * @return the array containing internal names of the given class array. \n+     * @return the array containing internal names of the given class array.\n      */\n     private static String[] getInternalClassNames(Class[] classes) {\n         final String[] names = new String[classes.length];\n@@ -62,7 +62,7 @@\n         }\n         return names;\n     }\n-    \n+\n     /**\n      * Generates a proxy class.\n      * @param spec the proxied service specification\n@@ -71,25 +71,39 @@\n     public static byte[] dumpProxy(Class spec) {\n         ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n         String internalClassName = Type.getInternalName(spec); // Specification class internal name.\n-        String[] itfs = new String[] {internalClassName};  // Implemented interface.\n+        String[] itfs = new String[0];\n+        String parent = \"java/lang/Object\";\n+        if (spec.isInterface()) {\n+        \titfs = new String[] {internalClassName};  // Implemented interface.\n+        } else {\n+        \tparent = internalClassName;\n+        }\n         String className = internalClassName + \"$$Proxy\"; // Unique name.\n+\n+        // Turn around the VM changes (FELIX-2716) about java.* classes.\n+        if (className.startsWith(\"java/\")) {\n+        \tclassName = \"$\" + className;\n+        }\n+\n         Method[] methods = spec.getMethods(); // Method to delegate\n-        \n-        cw.visit(Opcodes.V1_3, Opcodes.ACC_PUBLIC | Opcodes.ACC_FINAL, className, null, \"java/lang/Object\", itfs);\n+\n+        cw.visit(Opcodes.V1_3, Opcodes.ACC_PUBLIC | Opcodes.ACC_FINAL, className, null, parent, itfs);\n         addDependencyField(cw);\n-        generateConstructor(cw, className);\n-        \n+\n+        // We try to call super() on the parent, however this should not be used as proxing does work only for interface.\n+        generateConstructor(cw, className, parent);\n+\n         // For each method, create the delegator code.\n         for (int i = 0; i < methods.length; i++) {\n             if ((methods[i].getModifiers() & (Modifier.STATIC | Modifier.FINAL)) == 0) {\n                 generateDelegator(cw, methods[i], className, internalClassName);\n             }\n-        }        \n-        \n+        }\n+\n         cw.visitEnd();\n-        \n+\n         return cw.toByteArray();\n-        \n+\n     }\n \n     /**\n@@ -121,10 +135,10 @@ private static void generateDelegator(ClassWriter cw, Method method,\n         mv.visitFieldInsn(GETFIELD, className, DEPENDENCY, DEPENDENCY_DESC);  // The dependency is on the stack.\n         mv.visitMethodInsn(INVOKEVIRTUAL, DEPENDENCY_INTERNAL_NAME, \"getService\", // Call getService\n                 \"()Ljava/lang/Object;\"); // The service object is on the stack.\n-        int varSvc = freeRoom; \n+        int varSvc = freeRoom;\n         freeRoom = freeRoom + 1; // Object Reference.\n         mv.visitVarInsn(ASTORE, varSvc); // Store the service object.\n-        \n+\n         Label notNull = new Label();\n         Label isNull = new Label();\n         mv.visitVarInsn(ALOAD, varSvc); // Load the service\n@@ -137,16 +151,16 @@ private static void generateDelegator(ClassWriter cw, Method method,\n         mv.visitMethodInsn(INVOKESPECIAL, \"java/lang/RuntimeException\", \"<init>\", \"(Ljava/lang/String;)V\");\n         mv.visitInsn(ATHROW);\n         // End of the null branch\n-        \n+\n         // Not null, go one the execution\n         mv.visitLabel(notNull);\n-                \n+\n         // Invoke the method on the service object.\n         mv.visitVarInsn(ALOAD, varSvc);\n         // Push argument on the stack.\n         int i = 1; // Arguments. (non static method)\n         for (int t = 0; t < types.length; t++) {\n-            mv.visitVarInsn(types[t].getOpcode(ILOAD), i); \n+            mv.visitVarInsn(types[t].getOpcode(ILOAD), i);\n             i = i + types[t].getSize();\n         }\n         // Invocation\n@@ -171,13 +185,13 @@ private static void generateDelegator(ClassWriter cw, Method method,\n      * @param cw the class writer\n      * @param className the generated class name.\n      */\n-    private static void generateConstructor(ClassWriter cw, String className) {\n+    private static void generateConstructor(ClassWriter cw, String className, String parent) {\n         MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\", '(' + DEPENDENCY_DESC + \")V\", null, null);\n         mv.visitCode();\n \n         mv.visitVarInsn(ALOAD, 0); // Load this\n         mv.visitInsn(DUP); // Dup\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java/lang/Object\", \"<init>\", \"()V\"); // Call  super\n+        mv.visitMethodInsn(INVOKESPECIAL, parent, \"<init>\", \"()V\"); // Call  super\n         mv.visitVarInsn(ALOAD, 1); // Load the argument\n         mv.visitFieldInsn(PUTFIELD, className, DEPENDENCY, DEPENDENCY_DESC); // Assign the dependency field\n         mv.visitInsn(RETURN); // Return void", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/handlers/dependency/ProxyGenerator.java"}, {"additions": 20, "raw_url": "https://github.com/apache/felix/raw/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/util/Logger.java", "blob_url": "https://github.com/apache/felix/blob/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/main/java/org/apache/felix/ipojo/util/Logger.java", "sha": "387ff75494a0926331d2e30da484092432d78c51", "changes": 30, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/main/java/org/apache/felix/ipojo/util/Logger.java?ref=abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "patch": "@@ -182,41 +182,46 @@ private void dispatch(int level, String msg) {\n         }\n \n         String message = null;\n+        String name = m_name;\n+        if (name == null) {\n+        \tname = \"\";\n+        }\n+\n         switch (level) {\n             case DEBUG:\n-                message = \"[DEBUG] \" + m_name + \" : \" + msg;\n+                message = \"[DEBUG] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_DEBUG, message);\n                 } else {\n                     System.err.println(message);\n                 }\n                 break;\n             case ERROR:\n-                message = \"[ERROR] \" + m_name + \" : \" + msg;\n+                message = \"[ERROR] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_ERROR, message);\n                 } else {\n                     System.err.println(message);\n                 }\n                 break;\n             case INFO:\n-                message = \"[INFO] \" + m_name + \" : \" + msg;\n+                message = \"[INFO] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_INFO, message);\n                 } else {\n                     System.err.println(message);\n                 }\n                 break;\n             case WARNING:\n-                message = \"[WARNING] \" + m_name + \" : \" + msg;\n+                message = \"[WARNING] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_WARNING, message);\n                 } else {\n                     System.err.println(message);\n                 }\n                 break;\n             default:\n-                message = \"[UNKNOWN] \" + m_name + \" : \" + msg;\n+                message = \"[UNKNOWN] \" + name + \" : \" + msg;\n                 System.err.println(message);\n                 break;\n         }\n@@ -251,9 +256,14 @@ private void dispatch(int level, String msg, Throwable exception) {\n         }\n \n         String message = null;\n+        String name = m_name;\n+        if (name == null) {\n+        \tname = \"\";\n+        }\n+\n         switch (level) {\n             case DEBUG:\n-                message = \"[DEBUG] \" + m_name + \" : \" + msg;\n+                message = \"[DEBUG] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_DEBUG, message, exception);\n                 } else {\n@@ -262,7 +272,7 @@ private void dispatch(int level, String msg, Throwable exception) {\n                 }\n                 break;\n             case ERROR:\n-                message = \"[ERROR] \" + m_name + \" : \" + msg;\n+                message = \"[ERROR] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_ERROR, message, exception);\n                 } else {\n@@ -271,7 +281,7 @@ private void dispatch(int level, String msg, Throwable exception) {\n                 }\n                 break;\n             case INFO:\n-                message = \"[INFO] \" + m_name + \" : \" + msg;\n+                message = \"[INFO] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_INFO, message, exception);\n                 } else {\n@@ -280,7 +290,7 @@ private void dispatch(int level, String msg, Throwable exception) {\n                 }\n                 break;\n             case WARNING:\n-                message = \"[WARNING] \" + m_name + \" : \" + msg;\n+                message = \"[WARNING] \" + name + \" : \" + msg;\n                 if (log != null) {\n                     log.log(LogService.LOG_WARNING, message, exception);\n                 } else {\n@@ -289,7 +299,7 @@ private void dispatch(int level, String msg, Throwable exception) {\n                 }\n                 break;\n             default:\n-                message = \"[UNKNOWN] \" + m_name + \" : \" + msg;\n+                message = \"[UNKNOWN] \" + name + \" : \" + msg;\n                 System.err.println(message);\n                 exception.printStackTrace();\n                 break;", "filename": "ipojo/core/src/main/java/org/apache/felix/ipojo/util/Logger.java"}, {"additions": 168, "raw_url": "https://github.com/apache/felix/raw/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/test/java/org/apache/felix/ipojo/handlers/dependency/SmartProxyTest.java", "blob_url": "https://github.com/apache/felix/blob/abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f/ipojo/core/src/test/java/org/apache/felix/ipojo/handlers/dependency/SmartProxyTest.java", "sha": "baf97255c792a9ceb32197c2235e143835a0d78b", "changes": 168, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/core/src/test/java/org/apache/felix/ipojo/handlers/dependency/SmartProxyTest.java?ref=abbb67fe1e0d8ef097c8829ceb2361ff0d7c523f", "patch": "@@ -0,0 +1,168 @@\n+package org.apache.felix.ipojo.handlers.dependency;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.List;\n+\n+import javax.swing.Action;\n+\n+import junit.framework.Assert;\n+import junit.framework.TestCase;\n+\n+import org.apache.felix.ipojo.ComponentFactory;\n+import org.apache.felix.ipojo.InstanceManager;\n+import org.apache.felix.ipojo.util.Logger;\n+import org.mockito.Mockito;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.ServiceReference;\n+\n+public class SmartProxyTest extends TestCase {\n+\n+\tprivate Dependency dependency;\n+\n+\n+\tpublic void setUp() {\n+\t}\n+\n+\n+\t/**\n+\t * Tests if we can proxies classes from java.* package.\n+\t * Indeed, a recent JVM bug fix introduces a bug:\n+\t * <code>\n+\t * [ERROR] test : Cannot create the proxy object\n+\t * java.lang.SecurityException: Prohibited package name: java.awt\n+\t * </code>\n+\t */\n+\tpublic void testProxiesOfJavaClasses() {\n+\t\tBundle bundle = new Bundle() {\n+\n+\t\t\tpublic int getState() {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\tpublic void start() throws BundleException {\n+\t\t\t}\n+\n+\t\t\tpublic void stop() throws BundleException {\n+\t\t\t}\n+\n+\t\t\tpublic void update() throws BundleException {\n+\t\t\t}\n+\n+\t\t\tpublic void update(InputStream in) throws BundleException {\n+\t\t\t}\n+\n+\t\t\tpublic void uninstall() throws BundleException {\n+\t\t\t}\n+\n+\t\t\tpublic Dictionary getHeaders() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic long getBundleId() {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\tpublic String getLocation() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic ServiceReference[] getRegisteredServices() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic ServiceReference[] getServicesInUse() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic boolean hasPermission(Object permission) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\n+\t\t\tpublic URL getResource(String name) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic Dictionary getHeaders(String locale) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic String getSymbolicName() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic Class loadClass(String name) throws ClassNotFoundException {\n+\t\t\t\treturn Dependency.class.getClassLoader().loadClass(name);\n+\t\t\t}\n+\n+\t\t\tpublic Enumeration getResources(String name) throws IOException {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic Enumeration getEntryPaths(String path) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic URL getEntry(String name) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tpublic long getLastModified() {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\tpublic Enumeration findEntries(String path, String filePattern,\n+\t\t\t\t\tboolean recurse) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t};\n+\n+\n+\t\tBundleContext context = (BundleContext) Mockito.mock(BundleContext.class);\n+\t\tMockito.when(context.getProperty(DependencyHandler.PROXY_TYPE_PROPERTY)).thenReturn(null);\n+\t\tMockito.when(context.getProperty(Logger.IPOJO_LOG_LEVEL_PROP)).thenReturn(null);\n+\t\tMockito.when(context.getBundle()).thenReturn(bundle);\n+\n+\t\t//getBundle().loadClass(name);\n+\n+\t\tComponentFactory factory = (ComponentFactory) Mockito.mock(ComponentFactory.class);\n+\t\tMockito.when(factory.getBundleClassLoader()).thenReturn(Dependency.class.getClassLoader());\n+\n+\t\tInstanceManager im = (InstanceManager) Mockito.mock(InstanceManager.class);\n+\t\tMockito.when(im.getContext()).thenReturn(context);\n+\t\tMockito.when(im.getFactory()).thenReturn(factory);\n+\n+\t\tDependencyHandler handler = (DependencyHandler) Mockito.mock(DependencyHandler.class);\n+\t\tMockito.when(handler.getInstanceManager()).thenReturn(im);\n+\t\tLogger logger = new Logger(context, \"test\", Logger.INFO);\n+\n+\n+\t\tMockito.when(handler.getLogger()).thenReturn(logger);\n+\n+\t\t// Try with java.List\n+\t\tdependency = new Dependency(handler, \"a_field\", List.class, null, false, false, false,\n+\t\t\t\ttrue, \"dep\", context, Dependency.DYNAMIC_BINDING_POLICY, null, null);\n+\t\tdependency.start();\n+\n+\t\t// OK\n+\t\tAssert.assertNotNull(dependency.onGet(new Object(), \"a_field\", null));\n+\t\tAssert.assertTrue(dependency.onGet(new Object(), \"a_field\", null) instanceof List);\n+\n+\t\tdependency.stop();\n+\n+\t\t// Try with javax.swing.Action\n+\t\tdependency = new Dependency(handler, \"a_field\", Action.class, null, false, false, false,\n+\t\t\t\ttrue, \"dep\", context, Dependency.DYNAMIC_BINDING_POLICY, null, null);\n+\t\tdependency.start();\n+\t\t// OK\n+\t\tAssert.assertNotNull(dependency.onGet(new Object(), \"a_field\", null));\n+\t\tAssert.assertTrue(dependency.onGet(new Object(), \"a_field\", null) instanceof Action);\n+\t}\n+\n+}", "filename": "ipojo/core/src/test/java/org/apache/felix/ipojo/handlers/dependency/SmartProxyTest.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/045881657d6b42a9a9fa75c15f89479dd7e6460c", "parent": "https://github.com/apache/felix/commit/ec6897dfe11d9f8c0764cbe36822997726d2db63", "message": "URLHandlers are broken on harmony and J9. The reason is that they don't expect somebody to call toExternalForm from inside a URLHandlers. That causes a NPE and subsequently, we don't start-up. This fixes the issue for harmony and hopefully for J9 as well.  (FELIX-893)\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@785395 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_162", "file": [{"additions": 72, "raw_url": "https://github.com/apache/felix/raw/045881657d6b42a9a9fa75c15f89479dd7e6460c/framework/src/main/java/org/apache/felix/framework/URLHandlersStreamHandlerProxy.java", "blob_url": "https://github.com/apache/felix/blob/045881657d6b42a9a9fa75c15f89479dd7e6460c/framework/src/main/java/org/apache/felix/framework/URLHandlersStreamHandlerProxy.java", "sha": "3cb9751e4b3996f3c632c05ea0e95ebbfdb2d095", "changes": 77, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/felix/contents/framework/src/main/java/org/apache/felix/framework/URLHandlersStreamHandlerProxy.java?ref=045881657d6b42a9a9fa75c15f89479dd7e6460c", "patch": "@@ -20,6 +20,7 @@\n \n import java.io.IOException;\n import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.lang.reflect.Proxy;\n import java.net.InetAddress;\n@@ -296,13 +297,21 @@ protected URLConnection openConnection(URL url) throws IOException\n                     \n                     throw new IOException(\"Extensions not supported or ambiguous context.\");\n                 }\n+                catch (IOException ex)\n+                {\n+                    throw ex;\n+                }\n                 catch (Exception ex)\n                 {\n                     throw new IOException(ex.getMessage());\n                 }\n             }\n             return (URLConnection) OPEN_CONNECTION.invoke(svc, new Object[]{url});\n         } \n+        catch (IOException ex)\n+        {\n+            throw ex;\n+        }\n         catch (Exception ex)  \n         {\n             throw new IllegalStateException(\"Stream handler unavailable due to: \" + ex.getMessage());\n@@ -331,9 +340,13 @@ protected URLConnection openConnection(URL url, java.net.Proxy proxy) throws IOE\n             {\n                 m_action.setAccesssible(method);\n                 return (URLConnection) method.invoke(svc, new Object[]{url, proxy});\n-            } \n+            }\n             catch (Exception e) \n             {\n+                if (e instanceof IOException)\n+                {\n+                    throw (IOException) e;\n+                }\n                 throw new IOException(e.getMessage());\n             }\n         }\n@@ -343,6 +356,10 @@ protected URLConnection openConnection(URL url, java.net.Proxy proxy) throws IOE\n         } \n         catch (Exception ex)  \n         {\n+            if (ex instanceof IOException)\n+            {\n+                throw (IOException) ex;\n+            }\n             throw new IllegalStateException(\"Stream handler unavailable due to: \" + ex.getMessage());\n         }\n     }\n@@ -435,11 +452,61 @@ private String toExternalForm(URL url, Object svc)\n         {\n             return ((URLStreamHandlerService) svc).toExternalForm(url);\n         }\n-        try \n+        try\n         {\n-            return (String) TO_EXTERNAL_FORM.invoke( \n-                svc, new Object[]{url});\n-        } \n+            try \n+            {\n+                return (String) TO_EXTERNAL_FORM.invoke( \n+                    svc, new Object[]{url});\n+            }\n+            catch (InvocationTargetException ex)\n+            {\n+               Throwable t = ex.getTargetException();\n+               if (t instanceof Exception)\n+               {\n+                   throw (Exception) t;\n+               }\n+               else if (t instanceof Error)\n+               {\n+                   throw (Error) t;\n+               }\n+               else\n+               {\n+                   throw new IllegalStateException(\"Unknown throwable: \" + t);\n+               }\n+            }\n+        }\n+        catch (NullPointerException ex)\n+        {\n+            // workaround for harmony and possibly J9. The issue is that\n+            // their implementation of URLStreamHandler.toExternalForm() \n+            // assumes that URL.getFile() doesn't return null but in our\n+            // case it can -- hence, we catch the NPE and do the work\n+            // ourselvs. The only difference is that we check whether the\n+            // URL.getFile() is null or not. \n+            StringBuffer answer = new StringBuffer();\n+            answer.append(url.getProtocol());\n+            answer.append(':');\n+            String authority = url.getAuthority();\n+            if (authority != null && authority.length() > 0) \n+            {\n+                answer.append(\"//\"); //$NON-NLS-1$\n+                answer.append(url.getAuthority());\n+            }\n+\n+            String file = url.getFile();\n+            String ref = url.getRef();\n+            if (file != null)\n+            {\n+                answer.append(file);\n+            }\n+            if (ref != null) \n+            {\n+                answer.append('#');\n+                answer.append(ref);\n+            }\n+            return answer.toString();\n+        }\n         catch (Exception ex)  \n         {\n             throw new IllegalStateException(\"Stream handler unavailable due to: \" + ex.getMessage());", "filename": "framework/src/main/java/org/apache/felix/framework/URLHandlersStreamHandlerProxy.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/723f3bdd6477a25812d248c9310715d9dd810d20", "parent": "https://github.com/apache/felix/commit/9f00cc809f11392cfeebeeaa4435f4afc708cd5b", "message": "Add license and notice  file to the online-manipulator\nAdd apache license header to the online-manipulator\n\nEdit license and notice file of junit4osgi\n\nAdd the online-manipulator to the reactor\n\nFix a potential NPE in the manipulator when the Created-By entry does not exist in the manipulated jar\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@767443 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_163", "file": [{"additions": 11, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/felix-command/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/felix-command/NOTICE", "sha": "96ef392c6f44c68a695d6af510aadd7bdf7ae908", "changes": 11, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/felix-command/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -13,5 +13,16 @@ This product uses software developed at\n The Apache Software Foundation (http://www.apache.org/).\n Licensed under the Apache License 2.0.\n \n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n+This product uses software developed by\n+Junit project (http://junit.org)\n+Licensed under Common Public License 1.0.\n+\n III. License Summary\n - Apache License 2.0\n+- Common Public License 1.0\n+", "filename": "ipojo/junit4osgi/felix-command/NOTICE"}, {"additions": 0, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/felix-command/src/main/java/org/apache/felix/ipojo/junit4osgi/command/JunitCommand.java", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/felix-command/src/main/java/org/apache/felix/ipojo/junit4osgi/command/JunitCommand.java", "sha": "da52feb30681a87c8929997ef76b281dccf572a0", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/felix-command/src/main/java/org/apache/felix/ipojo/junit4osgi/command/JunitCommand.java?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -23,7 +23,6 @@\n import java.util.List;\r\n import java.util.ListIterator;\r\n \r\n-import junit.framework.Test;\r\n import junit.framework.TestCase;\r\n import junit.framework.TestFailure;\r\n import junit.framework.TestResult;\r", "filename": "ipojo/junit4osgi/felix-command/src/main/java/org/apache/felix/ipojo/junit4osgi/command/JunitCommand.java"}, {"additions": 10, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/immediate-launcher/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/immediate-launcher/NOTICE", "sha": "986cc712d69b5522bfe107af514a40ded463ced2", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/immediate-launcher/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -13,5 +13,15 @@ This product uses software developed at\n The Apache Software Foundation (http://www.apache.org/).\n Licensed under the Apache License 2.0.\n \n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n+This product uses software developed by\n+Junit project (http://junit.org)\n+Licensed under Common Public License 1.0.\n+\n III. License Summary\n - Apache License 2.0\n+- Common Public License 1.0", "filename": "ipojo/junit4osgi/immediate-launcher/NOTICE"}, {"additions": 86, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/LICENSE.junit", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/LICENSE.junit", "sha": "4fbc2f92b811edfdd5a920f32c53ca506377ba3f", "changes": 86, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/junit4osgi/LICENSE.junit?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,86 @@\n+Common Public License - v 1.0\n+\n+THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS COMMON PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n+\n+1. DEFINITIONS\n+\n+\"Contribution\" means:\n+\n+      a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and\n+      b) in the case of each subsequent Contributor:\n+\n+      i) changes to the Program, and\n+\n+      ii) additions to the Program;\n+\n+      where such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program. \n+\n+\"Contributor\" means any person or entity that distributes the Program.\n+\n+\"Licensed Patents \" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n+\n+\"Program\" means the Contributions distributed in accordance with this Agreement.\n+\n+\"Recipient\" means anyone who receives the Program under this Agreement, including all Contributors.\n+\n+2. GRANT OF RIGHTS\n+\n+      a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.\n+\n+      b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder. \n+\n+      c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\n+\n+      d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement. \n+\n+3. REQUIREMENTS\n+\n+A Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:\n+\n+      a) it complies with the terms and conditions of this Agreement; and\n+\n+      b) its license agreement:\n+\n+      i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose; \n+\n+      ii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits; \n+\n+      iii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and\n+\n+      iv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange. \n+\n+When the Program is made available in source code form:\n+\n+      a) it must be made available under this Agreement; and \n+\n+      b) a copy of this Agreement must be included with each copy of the Program. \n+\n+Contributors may not remove or alter any copyright notices contained within the Program.\n+\n+Each Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.\n+\n+4. COMMERCIAL DISTRIBUTION\n+\n+Commercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n+\n+For example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n+\n+5. NO WARRANTY\n+\n+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement, including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n+\n+6. DISCLAIMER OF LIABILITY\n+\n+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n+\n+7. GENERAL\n+\n+If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n+\n+If Recipient institutes patent litigation against a Contributor with respect to a patent applicable to software (including a cross-claim or counterclaim in a lawsuit), then any patent licenses granted by that Contributor to such Recipient under this Agreement shall terminate as of the date such litigation is filed. In addition, if Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n+\n+All Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n+\n+Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. IBM is the initial Agreement Steward. IBM may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.\n+\n+This Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation. \n\\ No newline at end of file", "filename": "ipojo/junit4osgi/junit4osgi/LICENSE.junit"}, {"additions": 10, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/NOTICE", "sha": "f6a2f5fd84ba80d0e63fde62f6c52f371ec7e778", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/junit4osgi/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -11,12 +11,22 @@ This product includes software developed by\n Junit project (http://junit.org)\n Licensed under Common Public License 1.0.\n \n+This product includes software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n II. Used Software\n \n This product uses software developed at\n The Apache Software Foundation (http://www.apache.org/).\n Licensed under the Apache License 2.0.\n \n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n III. License Summary\n - Apache License 2.0\n - Common Public License 1.0", "filename": "ipojo/junit4osgi/junit4osgi/NOTICE"}, {"additions": 5, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/pom.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/junit4osgi/pom.xml", "sha": "b6b235d4b8a3e8a76983fa173bfce6dee7522b11", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/junit4osgi/pom.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -83,8 +83,11 @@\n \t\t\t\t\t\t\torg.apache.felix.ipojo.junit4osgi.test.TestTestSuite,\r\n \t\t\t\t\t\t\torg.apache.felix.ipojo.junit4osgi.test.TestOSGiTestSuite,\r\n \t\t\t\t\t\t</Test-Suite>  -->\r\n-\t\t\t\t\t\t<Include-Resource> META-INF/LICENCE=LICENSE,\r\n-\t\t\t\t\t\t\tMETA-INF/NOTICE=NOTICE </Include-Resource>\r\n+\t\t\t\t\t\t<Include-Resource> \r\n+\t\t\t\t\t\t\tMETA-INF/LICENSE=LICENSE,\r\n+\t\t\t\t\t\t\tMETA-INF/LICENSE.junit=LICENSE.junit,\r\n+\t\t\t\t\t\t\tMETA-INF/NOTICE=NOTICE\r\n+\t\t\t\t\t\t</Include-Resource>\r\n \t\t\t\t\t</instructions>\r\n \t\t\t\t</configuration>\r\n \t\t\t</plugin>\r", "filename": "ipojo/junit4osgi/junit4osgi/pom.xml"}, {"additions": 14, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/maven-junit4osgi-plugin/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/maven-junit4osgi-plugin/NOTICE", "sha": "657444e8deb486c3eae459ef02a5730bb7febb4f", "changes": 14, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/maven-junit4osgi-plugin/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -13,5 +13,19 @@ This product uses software developed at\n The Apache Software Foundation (http://www.apache.org/).\n Licensed under the Apache License 2.0.\n \n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n+This product uses software developed by\n+Junit project (http://junit.org)\n+Licensed under Common Public License 1.0.\n+\n+This product uses software developed at\n+The Codehaus (http://www.codehaus.org)\n+Licensed under the Apache License 2.0.\n+\n III. License Summary\n - Apache License 2.0\n+- Common Public License 1.0", "filename": "ipojo/junit4osgi/maven-junit4osgi-plugin/NOTICE"}, {"additions": 10, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/swing-runner/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/junit4osgi/swing-runner/NOTICE", "sha": "18acb796b779e9b1143e524b83e550f39a599fa3", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/junit4osgi/swing-runner/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -13,5 +13,15 @@ This product uses software developed at\n The Apache Software Foundation (http://www.apache.org/).\n Licensed under the Apache License 2.0.\n \n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n+This product uses software developed by\n+Junit project (http://junit.org)\n+Licensed under Common Public License 1.0.\n+\n III. License Summary\n - Apache License 2.0\n+- Common Public License 1.0", "filename": "ipojo/junit4osgi/swing-runner/NOTICE"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java", "sha": "87b6d694fc9ec7e2d208d2234f3549611c3fead1", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -801,8 +801,12 @@ private void computeReferredFields(List list, Element metadata) {\n      */\n     private void setCreatedBy(Attributes att) {\n         String prev = att.getValue(\"Created-By\");\n-        if (prev.indexOf(\"iPOJO\") == -1) { // Avoid appending iPOJO several times\n-            att.putValue(\"Created-By\", prev + \" & iPOJO\");\n+        if (prev == null) {\n+            att.putValue(\"Created-By\", \"iPOJO \" + IPOJO_PACKAGE_VERSION);\n+        } else {\n+            if (prev.indexOf(\"iPOJO\") == -1) { // Avoid appending iPOJO several times\n+                att.putValue(\"Created-By\", prev + \" & iPOJO \" + IPOJO_PACKAGE_VERSION);\n+            }\n         }\n     }\n ", "filename": "ipojo/manipulator/src/main/java/org/apache/felix/ipojo/manipulator/Pojoization.java"}, {"additions": 202, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/LICENSE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/LICENSE", "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7", "changes": 202, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/LICENSE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,202 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.", "filename": "ipojo/online-manipulator/LICENSE"}, {"additions": 28, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/NOTICE", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/NOTICE", "sha": "06496a3faf2253d4194da5bc386fb2ef9b9ccee3", "changes": 28, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/NOTICE?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,28 @@\n+Apache Felix iPOJO Online Manipulator\n+Copyright 2008-2009 The Apache Software Foundation\n+\n+I. Included Software\n+\n+This product includes software developed at\n+The Apache Software Foundation (http://www.apache.org/).\n+Licensed under the Apache License 2.0.\n+\n+This product includes software developed at\n+Copyright (c) 2000-2005 INRIA, France Telecom\n+Licensed under BSD License.\n+\n+II. Used Software\n+\n+This product uses software developed at\n+The Apache Software Foundation (http://www.apache.org/).\n+Licensed under the Apache License 2.0.\n+\n+This product uses software developed at\n+The OSGi Alliance (http://www.osgi.org/).\n+Copyright (c) OSGi Alliance (2000, 2007).\n+Licensed under the Apache License 2.0.\n+\n+III. License Summary\n+- Apache License 2.0\n+- BSD Licence\n+", "filename": "ipojo/online-manipulator/NOTICE"}, {"additions": 18, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/metadata.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/metadata.xml", "sha": "faa1f7d9ae1f2c50912cc03641a83ab8ed871ea3", "changes": 18, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/metadata.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -1,3 +1,21 @@\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n <ipojo>\n <component classname=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.IPOJOURLHandler\" \n \tpublic=\"false\"", "filename": "ipojo/online-manipulator/metadata.xml"}, {"additions": 105, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/pom.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/pom.xml", "sha": "fdd899a023e6bd77b324d32e8bbc697e83cd3248", "changes": 169, "status": "modified", "deletions": 64, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/pom.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -1,53 +1,94 @@\n-<project>\n-  <modelVersion>4.0.0</modelVersion>\n-  <packaging>bundle</packaging>\n-  <groupId>org.apache.felix</groupId>\n-  <artifactId>org.apache.felix.ipojo.online.manipulator</artifactId>\n-  <version>1.3.0-SNAPSHOT</version>\n-  <name>Apache Felix iPOJO URL Handler</name>\n-  \n-  <build>\n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.felix</groupId>\n-        <artifactId>maven-bundle-plugin</artifactId>\n-        <version>1.4.3</version>\n-        <extensions>true</extensions>\n-        <configuration>\n-          <instructions>\n-            <Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>\n-            <Private-Package>org.apache.felix.org.apache.felix.ipojo.online.manipulator</Private-Package>\n-            <Export-Package>\n-            \t\t\t\torg.apache.felix.ipojo.manipulator,\n-            \t\t\t\torg.apache.felix.ipojo.xml.parser,\n-            \t\t\t\torg.apache.felix.ipojo.manipulation,\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\t<parent>\n+\t\t<groupId>org.apache.felix</groupId>\n+\t\t<artifactId>felix</artifactId>\n+\t\t<version>1.0.4</version>\n+\t\t<relativePath>../../pom/pom.xml</relativePath>\n+\t</parent>\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<packaging>bundle</packaging>\n+\t<artifactId>org.apache.felix.ipojo.online.manipulator</artifactId>\n+\t<version>1.3.0-SNAPSHOT</version>\n+\t<name>Apache Felix iPOJO URL Handler</name>\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.felix</groupId>\n+\t\t\t\t<artifactId>maven-bundle-plugin</artifactId>\n+\t\t\t\t<version>1.4.3</version>\n+\t\t\t\t<extensions>true</extensions>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<instructions>\n+\t\t\t\t\t\t<Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>\n+\t\t\t\t\t\t<Private-Package>org.apache.felix.org.apache.felix.ipojo.online.manipulator</Private-Package>\n+\t\t\t\t\t\t<Export-Package> org.apache.felix.ipojo.manipulator,\n+\t\t\t\t\t\t\torg.apache.felix.ipojo.xml.parser,\n+\t\t\t\t\t\t\torg.apache.felix.ipojo.manipulation,\n \t\t\t\t\t\t\torg.apache.felix.ipojo.manipulation.annotations,\n-\t\t\t\t\t\t\torg.objectweb.asm.commons, org.objectweb.asm\n-\t\t\t</Export-Package>\n-\t\t\t<Import-Package>\n-\t\t\t!org.objectweb.asm.tree, !sun.io,\n-\t\t\t\t\t\t\t*\n+\t\t\t\t\t\t\torg.objectweb.asm.commons, org.objectweb.asm </Export-Package>\n+\t\t\t\t\t\t<Import-Package> !org.objectweb.asm.tree, !sun.io, * \n \t\t\t\t\t\t</Import-Package>\n \t\t\t\t\t\t<Embed-Dependency>xercesImpl|xml-resolver</Embed-Dependency>\n-          </instructions>\n-        </configuration>\n-      </plugin>\n-      <plugin>\n-\t      <groupId>org.apache.felix</groupId>\n-\t      <artifactId>maven-ipojo-plugin</artifactId>\n-\t       <version>1.3.0-SNAPSHOT</version>\n-\t\t  <executions>\n-          \t<execution>\n-            \t<goals>\n-\t              <goal>ipojo-bundle</goal>\n-               </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n-    </plugins>\n-  </build>\n-  <dependencies>\n-  \t\t\t<dependency>\n+\t\t\t\t\t</instructions>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.felix</groupId>\n+\t\t\t\t<artifactId>maven-ipojo-plugin</artifactId>\n+\t\t\t\t<version>1.3.0-SNAPSHOT</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>ipojo-bundle</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n+\t\t\t\t<artifactId>rat-maven-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludeSubProjects>false</excludeSubProjects>\n+\t\t\t\t\t<useEclipseDefaultExcludes>true</useEclipseDefaultExcludes>\n+\t\t\t\t\t<useMavenDefaultExcludes>true</useMavenDefaultExcludes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<param>doc/*</param>\n+\t\t\t\t\t\t<param>maven-eclipse.xml</param>\n+\t\t\t\t\t\t<param>.checkstyle</param>\n+\t\t\t\t\t\t<param>.externalToolBuilders/*</param>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<configLocation>http://felix.apache.org/ipojo/dev/checkstyle_ipojo.xml</configLocation>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\t<dependencies>\n+\t\t<dependency>\n \t\t\t<groupId>org.apache.felix</groupId>\n \t\t\t<artifactId>org.apache.felix.ipojo.manipulator</artifactId>\n \t\t\t<version>1.3.0-SNAPSHOT</version>\n@@ -63,20 +104,20 @@\n \t\t\t\t</exclusion>\n \t\t\t</exclusions>\n \t\t</dependency>\n-  \t<dependency>\n-  \t\t<groupId>org.apache.felix</groupId>\n-  \t\t<artifactId>org.osgi.core</artifactId>\n-  \t\t<version>1.2.0</version>\n-  \t</dependency>\n-  \t<dependency>\n-  \t\t<groupId>xerces</groupId>\n-  \t\t<artifactId>xercesImpl</artifactId>\n-  \t\t<version>2.9.1</version>\n-  \t</dependency>\n-  \t<dependency>\n-  \t\t<groupId>xml-resolver</groupId>\n-  \t\t<artifactId>xml-resolver</artifactId>\n-  \t\t<version>1.2</version>\n-  \t</dependency>\n-  </dependencies>\n-</project>\n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.felix</groupId>\n+\t\t\t<artifactId>org.osgi.core</artifactId>\n+\t\t\t<version>1.2.0</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>xerces</groupId>\n+\t\t\t<artifactId>xercesImpl</artifactId>\n+\t\t\t<version>2.9.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>xml-resolver</groupId>\n+\t\t\t<artifactId>xml-resolver</artifactId>\n+\t\t\t<version>1.2</version>\n+\t\t</dependency>\n+\t</dependencies>\n+</project>\n\\ No newline at end of file", "filename": "ipojo/online-manipulator/pom.xml"}, {"additions": 88, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/src/main/java/org/apache/felix/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/online-manipulator/src/main/java/org/apache/felix/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java", "sha": "b71246aa707eb0060b5454108c9f2a395f175f9b", "changes": 94, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/online-manipulator/src/main/java/org/apache/felix/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -1,3 +1,21 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n package org.apache.felix.org.apache.felix.ipojo.online.manipulator;\n \n import java.io.File;\n@@ -14,11 +32,34 @@\n import org.osgi.framework.BundleContext;\n import org.osgi.service.url.URLStreamHandlerService;\n \n+/**\n+* iPOJO URL Handler allowing installation time manipulation.\n+* When a bundle is installed with the <code>ipojo:</code> URL\n+* prefix, the bundle is downloaded and manipulated by this \n+* handler.\n+* The metadata.xml file can either be provided inside the bundle (root,\n+* or in META-INF) or given in the URL:\n+* ipojo:URL_BUNDLE!URL_METADATA.\n+* @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n+*/\n public class IPOJOURLHandler extends org.osgi.service.url.AbstractURLStreamHandlerService implements URLStreamHandlerService {\n     \n+    /**\n+     * The bundle context.\n+     */\n     private BundleContext m_context;\n+    \n+    /**\n+     * The directory storing bundles.\n+     */\n     private File m_temp;\n     \n+    /**\n+     * Creates a IPOJOURLHandler.\n+     * Gets the bundle context and create the working\n+     * directory.\n+     * @param bc the bundle context\n+     */\n     public IPOJOURLHandler(BundleContext bc) {\n         m_context = bc;\n         m_temp = m_context.getDataFile(\"temp\");\n@@ -27,6 +68,10 @@ public IPOJOURLHandler(BundleContext bc) {\n         }\n     }\n     \n+    /**\n+     * Stops the URL handler:\n+     * Deletes the working directory.  \n+     */\n     public void stop() {\n         File[] files = m_temp.listFiles();\n         for (int i = 0; i < files.length; i++) {\n@@ -35,6 +80,15 @@ public void stop() {\n         m_temp.delete();\n     }\n \n+    /**\n+     * Opens a connection using the ipojo url handler.\n+     * This methods parses the URL and manipulate the given bundle.\n+     * @param url the url.\n+     * @return the URL connection on the manipulated bundle\n+     * @throws IOException  occurs when the bundle cannot be either downloaded, or manipulated or\n+     * installed correctly.\n+     * @see org.osgi.service.url.AbstractURLStreamHandlerService#openConnection(java.net.URL)\n+     */\n     public URLConnection openConnection(URL url) throws IOException {\n         System.out.println(\"Processing URL : \" + url);\n \n@@ -52,19 +106,19 @@ public URLConnection openConnection(URL url) throws IOException {\n         full = full.trim();\n         \n         // Now full is like : URL,URL or URL\n-        String urls[] = full.split(\"!\");\n+        String[] urls = full.split(\"!\");\n         URL bundleURL = null;\n         URL metadataURL = null;\n         if (urls.length == 1) {\n             // URL form\n             System.out.println(\"Extracted URL : \" + urls[0]);\n             bundleURL = new URL(urls[0]);\n-        } else if (urls.length == 2){\n+        } else if (urls.length == 2) {\n             // URL,URL form\n             bundleURL = new URL(urls[0]);\n             metadataURL = new URL(urls[1]);\n         } else {\n-            throw new MalformedURLException(\"The iPOJO url is not formatted correctly, ipojo://bundle_url[!metadata_url] expected\");\n+            throw new MalformedURLException(\"The iPOJO url is not formatted correctly, ipojo:bundle_url[!metadata_url] expected\");\n         }\n         \n         File bundle = File.createTempFile(\"ipojo_\", \".jar\", m_temp);\n@@ -81,7 +135,7 @@ public URLConnection openConnection(URL url) throws IOException {\n         \n         // Pojoization\n         Pojoization pojoizator = new Pojoization();\n-        File out =  new File(m_temp, bundle.getName()+\"-ipojo.jar\");\n+        File out =  new File(m_temp, bundle.getName() + \"-ipojo.jar\");\n         System.out.println(\"Pojoization \" + bundle.exists() + \" - \" + metadata.exists());\n         try {\n             pojoizator.pojoization(bundle, out, metadata);\n@@ -97,7 +151,7 @@ public URLConnection openConnection(URL url) throws IOException {\n             throw new IOException(\"Errors occured during the manipulation : \" + pojoizator.getErrors());\n         }\n         if (! pojoizator.getWarnings().isEmpty()) {\n-           System.err.println(\"Warnings occured during the manipulation : \" + pojoizator.getWarnings());\n+            System.err.println(\"Warnings occured during the manipulation : \" + pojoizator.getWarnings());\n         }\n \n         System.out.println(\"Manipulation done : \" + out.exists());\n@@ -114,18 +168,34 @@ public URLConnection openConnection(URL url) throws IOException {\n         \n     }\n \n+    /**\n+     * Downloads the content pointed by the given url to\n+     * the given file.\n+     * @param url   the url\n+     * @param file  the file\n+     * @throws IOException occurs if the content cannot be read \n+     * and save inside the file \n+     */\n     private void save(URL url, File file) throws IOException {\n         InputStream is = url.openStream();\n         save(is, file);\n     }\n     \n+    /**\n+     * Saves the content of the input stream to the given file.\n+     * @param is    the input stream to read\n+     * @param file  the file\n+     * @throws IOException  occurs if the content cannot be read \n+     * and save inside the file  \n+     */\n     private void save(InputStream is, File file) throws IOException {\n         FileOutputStream writer = new FileOutputStream(file);\n         int cc = 0;\n         do {\n             int i = is.read();\n-            if (i == -1)\n+            if (i == -1) {\n                 break;\n+            }\n             cc++;\n             writer.write(i);\n         } while (true);\n@@ -134,13 +204,25 @@ private void save(InputStream is, File file) throws IOException {\n         writer.close();        \n     }\n     \n+    /**\n+     * Looks for the metadata.xml file in the jar file.\n+     * Two locations are checked:\n+     * <ol>\n+     * <li>the root of the jar file</li>\n+     * <li>the META-INF directory</li>\n+     * </ol>\n+     * @param jar   the jar file\n+     * @return  the founded file or <code>null</code> if not found.\n+     * @throws IOException  occurs when the Jar file cannot be read.\n+     */\n     private File findMetadata(JarFile jar) throws IOException {\n         JarEntry je = jar.getJarEntry(\"metadata.xml\");\n         if (je == null) {\n             je = jar.getJarEntry(\"META-INF/metadata.xml\");\n         }\n         \n         if (je == null) {\n+            System.out.println(\"Metadata file not found, use annotations only.\");\n             return null; // Not Found, use annotation only\n         } else {\n             System.out.println(\"Metadata file found: \" + je.getName());", "filename": "ipojo/online-manipulator/src/main/java/org/apache/felix/org/apache/felix/ipojo/online/manipulator/IPOJOURLHandler.java"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/pom.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/pom.xml", "sha": "0e59421cd9fc8fb2faaa1b30164387e57a1df00d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/pom.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -44,6 +44,7 @@\n \t\t<module>handler/eventadmin</module>\n \t\t<module>handler/whiteboard</module>\n \t\t<module>api</module>\n+\t\t<module>online-manipulator</module>\n \t\t<module>junit4osgi</module>\n \t</modules>\n \t\t", "filename": "ipojo/pom.xml"}, {"additions": 125, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/pom.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/pom.xml", "sha": "847c58a1468529af3b94e16500fe3857994d694d", "changes": 125, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/online-manipulator/pom.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,125 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.felix</groupId>\n+  <artifactId>org.apache.felix.ipojo.online.manipulator.test</artifactId>\n+  <version>1.3.0-SNAPSHOT</version>\n+  <name>Online Manipulator Test</name>\n+  <packaging>jar</packaging>\n+    <build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>\n+\t\t\t\t\t<target>1.5</target>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.servicemix.tooling</groupId>\n+\t\t\t\t<artifactId>depends-maven-plugin</artifactId>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>generate-depends-file</id>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>generate-depends-file</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n+\t\t\t\n+\t\t\t<!--  <plugin>\n+\t\t\t\t<groupId>org.ops4j.pax.exam</groupId>\n+\t\t\t\t<artifactId>maven-paxexam-plugin</artifactId>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t<id>generate-paxexam-config</id>\n+\t\t\t\t\t<goals>\n+\t\t\t\t\t\t<goal>generate-paxexam-config</goal>\n+\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t\t<configuration>\n+\t\t\t\t<settings>\n+\t\t\t\t\t<platform>felix</platform>\n+\t\t\t\t</settings>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin> -->\n+\t\t</plugins>\n+\t</build>\t\n+\t\n+\t<dependencies>\n+\t<dependency>\n+ \t \t<groupId>org.apache.felix</groupId>\n+ \t \t<artifactId>org.osgi.core</artifactId>\n+ \t \t<version>1.2.0</version>\n+ \t </dependency>\n+\t\t\n+\t<!--\n+\t\tPax Exam API:\n+\t-->\n+\t<dependency>\n+\t\t<groupId>org.ops4j.pax.exam</groupId>\n+\t\t<artifactId>pax-exam</artifactId>\n+\t\t<version>0.4.0</version>\n+\t</dependency>\n+\t<!--\n+\t\tDuring runtime Pax Exam will discover the OSGi container to use by\n+\t\tsearching metadata available into classpath. Pax Exam comes with a\n+\t\tdefault container that uses [Pax Runner] for implementing the\n+\t\tcontainer requirements:\n+\t-->\n+\t<dependency>\n+\t\t<groupId>org.ops4j.pax.exam</groupId>\n+\t\t<artifactId>pax-exam-container-default\n+\t\t</artifactId>\n+\t\t<version>0.4.0</version>\n+\t</dependency>\n+\t<!--\n+\t\tIf your test code is based on JUnit you will have to have the Junit\n+\t\tsupport artifact:\n+\t-->\n+\t<dependency>\n+\t\t<groupId>org.ops4j.pax.exam</groupId>\n+\t\t<artifactId>pax-exam-junit</artifactId>\n+\t\t<version>0.4.0</version>\n+\t</dependency>\n+\t<dependency>\n+\t\t<groupId>junit</groupId>\n+\t\t<artifactId>junit</artifactId>\n+\t\t<version>4.5</version>\n+\t\t<type>jar</type>\n+\t\t<scope>test</scope>\n+\t</dependency>\n+\t\n+\t\t\n+\t<!-- TinyBundle -->\n+\t<dependency>\n+\t\t <groupId>org.ops4j.pax.tinybundles</groupId>\n+  \t\t <artifactId>pax-tinybundles-core</artifactId>\n+  \t\t <version>0.5.0-SNAPSHOT</version>\n+  \t</dependency>\n+  \t<dependency>\n+  \t\t<groupId>org.apache.felix</groupId>\n+  \t\t<artifactId>org.apache.felix.ipojo.pax.exam.target</artifactId>\n+  \t\t<version>0.9.0-SNAPSHOT</version>\n+ \t </dependency>\n+ \t <dependency>\n+\t\t\t<groupId>xerces</groupId>\n+\t\t\t<artifactId>xercesImpl</artifactId>\n+\t\t\t<version>2.4.0</version>\n+\t\t</dependency>\n+ \t <dependency>\n+ \t \t<groupId>org.apache.felix</groupId>\n+ \t \t<artifactId>org.apache.felix.ipojo.annotations</artifactId>\n+ \t \t<version>1.2.0</version>\n+ \t </dependency>\n+  \t <dependency>\n+ \t \t<groupId>org.apache.felix</groupId>\n+ \t \t<artifactId>org.apache.felix.ipojo</artifactId>\n+ \t \t<version>1.3.0-SNAPSHOT</version>\n+ \t </dependency>\n+ \t \n+\t</dependencies>\n+</project>", "filename": "ipojo/tests/online-manipulator/pom.xml"}, {"additions": 4, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/java/consumer.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/java/consumer.xml", "sha": "ab0947268fca9e742952993ad1c11a1a54b45233", "changes": 4, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/online-manipulator/src/test/java/consumer.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,4 @@\n+<ipojo>\n+<instance component=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.Consumer\"\n+\tname=\"cons\"/>\n+</ipojo>\n\\ No newline at end of file", "filename": "ipojo/tests/online-manipulator/src/test/java/consumer.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/java/provider.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/java/provider.xml", "sha": "64bbe019249de0d4c0eea5acc81599de201b1ded", "changes": 6, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/online-manipulator/src/test/java/provider.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,6 @@\n+<ipojo>\n+<component classname=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.MyProvider\">\n+\t<provides/>\n+</component>\n+<instance component=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.MyProvider\"/>\n+</ipojo>\n\\ No newline at end of file", "filename": "ipojo/tests/online-manipulator/src/test/java/provider.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/resources/consumer.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/resources/consumer.xml", "sha": "2775f7c0bb57124ee77223520c158cce490e9c71", "changes": 3, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/online-manipulator/src/test/resources/consumer.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,3 @@\n+<ipojo>\n+<instance component=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.Consumer\"/>\n+</ipojo>\n\\ No newline at end of file", "filename": "ipojo/tests/online-manipulator/src/test/resources/consumer.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/felix/raw/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/resources/provider.xml", "blob_url": "https://github.com/apache/felix/blob/723f3bdd6477a25812d248c9310715d9dd810d20/ipojo/tests/online-manipulator/src/test/resources/provider.xml", "sha": "64bbe019249de0d4c0eea5acc81599de201b1ded", "changes": 6, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/ipojo/tests/online-manipulator/src/test/resources/provider.xml?ref=723f3bdd6477a25812d248c9310715d9dd810d20", "patch": "@@ -0,0 +1,6 @@\n+<ipojo>\n+<component classname=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.MyProvider\">\n+\t<provides/>\n+</component>\n+<instance component=\"org.apache.felix.org.apache.felix.ipojo.online.manipulator.test.impl.MyProvider\"/>\n+</ipojo>\n\\ No newline at end of file", "filename": "ipojo/tests/online-manipulator/src/test/resources/provider.xml"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/cf6665e272505981b8236f3c6a54ac5be888ed8b", "parent": "https://github.com/apache/felix/commit/66b7605aed25924d75328003be306318859b43f7", "message": "Code review:\n\n- cleaned up the code to use more recent Java constructs, such as foreach\n  loops;\n- cleaned up the test cases to make them a bit more readable and easier to\n  maintain by folding some duplicate code into helper methods;\n- fixed a corner case in which an AutoConf resource drops a configuration while\n  updating existing ones at the same time. A NPE could be thrown in this\n  situation due ConfigurationAdmin not being present;\n- fixed a corner case in which a resource is dropped twice. A IOException could\n  be thrown;\n- moved some really specific MetaType code to a utility class;\n- added some test cases for PersistencyManager;\n- applied the code formatting guidelines for Apache Felix.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1724802 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_164", "file": [{"additions": 13, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/pom.xml", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/pom.xml", "sha": "0406d3af4d5b4b4b74f8607639d492086f0d2748", "changes": 16, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/pom.xml?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -85,9 +85,19 @@\n                         <Bundle-Name>Apache Felix AutoConf Resource Processor</Bundle-Name>\n                         <Bundle-Description>A customizer bundle that publishes a Resource Processor service that processes configuration resources shipped in a Deployment Package.</Bundle-Description>\n                         <Bundle-Vendor>The Apache Software Foundation</Bundle-Vendor>\n-                        <Private-Package>org.apache.felix.deployment.rp.autoconf, org.apache.felix.metatype, org.apache.felix.metatype.internal.l10n, org.apache.felix.metatype.internal, org.kxml2.io;-split-package:=merge-first, org.xmlpull.v1;-split-package:=merge-first, org.osgi.service.metatype;-split-package:=merge-first</Private-Package>\n-                        <Import-Package>org.apache.felix.dm,org.osgi.service.deploymentadmin,org.osgi.service.deploymentadmin.spi,org.osgi.service.event,org.osgi.service.log,*</Import-Package>\n-                        <Export-Package>org.osgi.service.deploymentadmin.spi;version=\"1.0\",org.osgi.service.metatype;version=\"1.2\"</Export-Package>\n+                        <Private-Package>\n+                        \torg.apache.felix.deployment.rp.autoconf,\n+                        \torg.apache.felix.metatype,\n+                        \torg.apache.felix.metatype.internal.l10n,\n+                        \torg.apache.felix.metatype.internal,\n+                        \torg.kxml2.io; -split-package:=merge-first,\n+                        \torg.xmlpull.v1; -split-package:=merge-first,\n+                        \torg.osgi.service.metatype; -split-package:=merge-first\n+                       \t</Private-Package>\n+                        <Export-Package>\n+                        \torg.osgi.service.deploymentadmin.spi; -split-package:=merge-last;version=\"1.0\",\n+                        \torg.osgi.service.metatype; -split-package:=merge-last;version=\"1.2\"\n+                       \t</Export-Package>\n                         <DeploymentPackage-Customizer>true</DeploymentPackage-Customizer>\n                         <Deployment-ProvidesResourceProcessor>org.osgi.deployment.rp.autoconf</Deployment-ProvidesResourceProcessor>\n                     </instructions>", "filename": "deploymentadmin/autoconf/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/Activator.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/Activator.java", "sha": "0a31cfab07e9779b44a2b52e589de416d864aead", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/Activator.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -38,7 +38,7 @@\n     public void init(BundleContext context, DependencyManager manager) throws Exception {\n     \tDictionary properties = new Properties();\n         properties.put(Constants.SERVICE_PID, \"org.osgi.deployment.rp.autoconf\");\n-        \n+\n         AutoConfResourceProcessor processor = new AutoConfResourceProcessor();\n         manager.add(createComponent()\n             .setInterface(ResourceProcessor.class.getName(), properties)", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/Activator.java"}, {"additions": 132, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResource.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResource.java", "sha": "ca7e936b5674518d3801343189d336e59362a420", "changes": 213, "status": "modified", "deletions": 81, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResource.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -18,95 +18,146 @@\n  */\n package org.apache.felix.deployment.rp.autoconf;\n \n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.Dictionary;\n \n-public class AutoConfResource implements Serializable {\n+import org.osgi.framework.Filter;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.InvalidSyntaxException;\n \n-\tprivate static final long serialVersionUID = 1L;\n-\t\n-\tprivate final String m_pid;\n-\tprivate final String m_factoryPid;\n-\tprivate final Dictionary m_properties;\n-\tprivate final String m_bundleLoc;\n-\tprivate final boolean m_merge;\n-\tprivate final String m_name;\n-\tprivate final String m_filter;\n+public class AutoConfResource implements Serializable\n+{\n+    private static final long serialVersionUID = 1L;\n \n-\tprivate String m_alias = null;\n+    private final String m_pid;\n+    private final String m_factoryPid;\n+    private final Dictionary m_properties;\n+    private final String m_bundleLoc;\n+    private final boolean m_merge;\n+    private final String m_name;\n \n-\t\n-\tpublic AutoConfResource(String name, String pid, String factoryPid, String bundleLocation, boolean merge, Dictionary properties, String filter) {\n-\t\tm_name = name;\n-\t\tm_pid = pid;\n+    private transient Filter m_filter;\n+    private String m_alias = null;\n+\n+    public AutoConfResource(String name, String pid, String factoryPid, String bundleLocation, boolean merge, Dictionary properties, Filter filter)\n+    {\n+        m_name = name;\n+        m_pid = pid;\n         m_filter = filter;\n-\t\tm_factoryPid = (factoryPid == null) ? \"\" : factoryPid;\n-\t\tm_bundleLoc = bundleLocation;\n-\t\tm_merge = merge;\n-\t\tm_properties = properties;\n-\t}\n-\n-\tpublic String getName() {\n-\t\treturn m_name;\n-\t}\n-\t\n-\tpublic String getPid() {\n-\t\treturn m_pid;\n-\t}\n-\t\n-\tpublic String getFilter() {\n+        m_factoryPid = (factoryPid == null) ? \"\" : factoryPid;\n+        m_bundleLoc = bundleLocation;\n+        m_merge = merge;\n+        m_properties = properties;\n+    }\n+\n+    public String getName()\n+    {\n+        return m_name;\n+    }\n+\n+    public String getPid()\n+    {\n+        return m_pid;\n+    }\n+\n+    public Filter getFilter()\n+    {\n         return m_filter;\n     }\n \n-\t/**\n-\t * Returns empty string if this configuration is not a factory configuration, otherwise the factory\n-\t * PID is returned.\n-\t * \n-\t * @return Empty string if this is not a factory configuration resource, else the factory PID is returned.\n-\t */\n-\tpublic String getFactoryPid() {\n-\t\treturn m_factoryPid;\n-\t}\n-\n-\tpublic Dictionary getProperties() {\n-\t\treturn m_properties;\n-\t}\n-\t\n-\tpublic String getBundleLocation() {\n-\t\treturn m_bundleLoc;\n-\t}\n-\t\n-\tpublic boolean isMerge() {\n-\t\treturn m_merge;\n-\t}\n-\t\n-\tpublic boolean isFactoryConfig() {\n-\t\treturn !(m_factoryPid == null || \"\".equals(m_factoryPid));\n-\t}\n-\t\n-\tpublic void setGeneratedPid(String alias) {\n-\t\tm_alias = alias;\n-\t}\n-\t\n-\tpublic String getGeneratedPid() {\n-\t\tif (m_alias == null) {\n-\t\t\tthrow new IllegalStateException(\"Must set an alias first.\");\n-\t\t}\n-\t\treturn m_alias;\n-\t}\n-\t\n-\t/**\n-\t * Determine if the specified <code>AutoConfResource</code> is meant to be used for the same <code>Configuration</code> as this object.\n-\t *  \n-\t * @param resource The <code>AutoConfResource</code> to compare with.\n-\t * @return Returns <code>true</code> if the two resources are meant to be used for the same <code>Configuration</code> object, false otherwise.\n-\t */\n-\tpublic boolean equalsTargetConfiguration(AutoConfResource resource) {\n-\t\tif (isFactoryConfig()) {\n-\t\t\treturn m_pid.equals(resource.getPid()) && m_factoryPid.equals(resource.getFactoryPid());\n-\t\t}\n-\t\telse {\n-\t\t\treturn m_pid.equals(resource.getPid());\n-\t\t}\n-\t}\n+    /**\n+     * Returns empty string if this configuration is not a factory configuration, otherwise the factory\n+     * PID is returned.\n+     * \n+     * @return Empty string if this is not a factory configuration resource, else the factory PID is returned.\n+     */\n+    public String getFactoryPid()\n+    {\n+        return m_factoryPid;\n+    }\n+\n+    public Dictionary getProperties()\n+    {\n+        return m_properties;\n+    }\n+\n+    public String getBundleLocation()\n+    {\n+        return m_bundleLoc;\n+    }\n+\n+    public boolean isMerge()\n+    {\n+        return m_merge;\n+    }\n+\n+    public boolean isFactoryConfig()\n+    {\n+        return !(m_factoryPid == null || \"\".equals(m_factoryPid));\n+    }\n+\n+    public void setGeneratedPid(String alias)\n+    {\n+        m_alias = alias;\n+    }\n+\n+    public String getGeneratedPid()\n+    {\n+        if (m_alias == null)\n+        {\n+            throw new IllegalStateException(\"Must set an alias first.\");\n+        }\n+        return m_alias;\n+    }\n+\n+    /**\n+     * Determine if the specified <code>AutoConfResource</code> is meant to be used for the same <code>Configuration</code> as this object.\n+     *  \n+     * @param resource The <code>AutoConfResource</code> to compare with.\n+     * @return Returns <code>true</code> if the two resources are meant to be used for the same <code>Configuration</code> object, false otherwise.\n+     */\n+    public boolean equalsTargetConfiguration(AutoConfResource resource)\n+    {\n+        if (isFactoryConfig())\n+        {\n+            return m_pid.equals(resource.getPid()) && m_factoryPid.equals(resource.getFactoryPid());\n+        }\n+        else\n+        {\n+            return m_pid.equals(resource.getPid());\n+        }\n+    }\n+\n+    private void writeObject(ObjectOutputStream out) throws IOException\n+    {\n+        out.defaultWriteObject();\n+        if (m_filter != null)\n+        {\n+            out.writeUTF(m_filter.toString());\n+        }\n+        else\n+        {\n+            out.writeUTF(\"\");\n+        }\n+    }\n+\n+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException\n+    {\n+        in.defaultReadObject();\n+        String filter = in.readUTF();\n+        if (!\"\".equals(filter))\n+        {\n+            try\n+            {\n+                m_filter = FrameworkUtil.createFilter(filter);\n+            }\n+            catch (InvalidSyntaxException e)\n+            {\n+                throw new IOException(\"Unable to parse serialized filter: \" + e.getMessage());\n+            }\n+        }\n+    }\n }", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResource.java"}, {"additions": 551, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java", "sha": "f158b8ef30dbd56ba8ad674d33ada53c24acc74c", "changes": 1066, "status": "modified", "deletions": 515, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -18,33 +18,32 @@\n  */\n package org.apache.felix.deployment.rp.autoconf;\n \n+import static org.osgi.service.deploymentadmin.spi.ResourceProcessorException.CODE_OTHER_ERROR;\n+\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.Dictionary;\n import java.util.Enumeration;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n-import java.util.Set;\n-import java.util.Vector;\n+import java.util.concurrent.atomic.AtomicReference;\n \n import org.apache.felix.dm.Component;\n import org.apache.felix.dm.DependencyManager;\n-import org.apache.felix.metatype.Attribute;\n import org.apache.felix.metatype.Designate;\n+import org.apache.felix.metatype.DesignateObject;\n import org.apache.felix.metatype.MetaData;\n import org.apache.felix.metatype.MetaDataReader;\n import org.apache.felix.metatype.OCD;\n import org.osgi.framework.Bundle;\n-import org.osgi.framework.BundleContext;\n import org.osgi.framework.Filter;\n+import org.osgi.framework.FrameworkUtil;\n import org.osgi.framework.InvalidSyntaxException;\n import org.osgi.framework.ServiceReference;\n import org.osgi.service.cm.Configuration;\n@@ -56,386 +55,495 @@\n import org.osgi.service.event.EventConstants;\n import org.osgi.service.event.EventHandler;\n import org.osgi.service.log.LogService;\n-import org.osgi.service.metatype.AttributeDefinition;\n import org.osgi.service.metatype.MetaTypeInformation;\n import org.osgi.service.metatype.MetaTypeService;\n import org.osgi.service.metatype.ObjectClassDefinition;\n \n-public class AutoConfResourceProcessor implements ResourceProcessor, EventHandler {\n-    private static final int CODE_OTHER_ERROR = ResourceProcessorException.CODE_OTHER_ERROR;\n-    private static final String LOCATION_PREFIX = \"osgi-dp:\";\n+public class AutoConfResourceProcessor implements ResourceProcessor, EventHandler\n+{\n     public static final String CONFIGURATION_ADMIN_FILTER_ATTRIBUTE = \"filter\";\n \n-\t// dependencies injected by Dependency Manager\n-\tprivate volatile LogService m_log;\n-\tprivate volatile ConfigurationAdmin m_configAdmin;\n-\tprivate volatile MetaTypeService m_metaService;\n-\tprivate volatile BundleContext m_bc;\n+    private static final String LOCATION_PREFIX = \"osgi-dp:\";\n+\n+    // dependencies injected by Dependency Manager\n+    private volatile LogService m_log;\n+    private volatile MetaTypeService m_metaService;\n     private volatile DependencyManager m_dm;\n-    \n-\tprivate Component m_component;\n-\t\n-\tprivate final Object m_lock = new Object(); // protects the members below\n-\n-\tprivate DeploymentSession m_session = null;\n-\tprivate final Map m_toBeInstalled = new HashMap(); // Map<String, List<AutoConfResource>>\n-\tprivate final Map m_toBeDeleted = new HashMap();\n-\t\n-\tprivate PersistencyManager m_persistencyManager;\n-\n-\tpublic void start() throws IOException {\n-\t\tFile root = m_bc.getDataFile(\"\");\n-\t\tif (root == null) {\n-\t\t\tthrow new IOException(\"No file system support\");\n-\t\t}\n-\t\tm_persistencyManager = new PersistencyManager(root);\n-\t}\n-\t\n-    public void begin(DeploymentSession session) {\n+    // Locally managed\n+    private Component m_component;\n+    private PersistencyManager m_persistencyManager;\n+\n+    private final Object m_lock; // protects the members below\n+    private final Map<String, List<AutoConfResource>> m_toBeInstalled;\n+    private final Map<String, List<AutoConfResource>> m_toBeDeleted;\n+    private final AtomicReference<DeploymentSession> m_sessionRef;\n+    private final List<ConfigurationAdminTask> m_configurationAdminTasks;\n+    private final List<PostCommitTask> m_postCommitTasks;\n+\n+    public AutoConfResourceProcessor()\n+    {\n+        m_lock = new Object();\n+        m_sessionRef = new AtomicReference<DeploymentSession>();\n+        m_toBeInstalled = new HashMap<String, List<AutoConfResource>>();\n+        m_toBeDeleted = new HashMap<String, List<AutoConfResource>>();\n+        m_configurationAdminTasks = new ArrayList<ConfigurationAdminTask>();\n+        m_postCommitTasks = new ArrayList<PostCommitTask>();\n+    }\n+\n+    /**\n+     * Called by Felix DM for the component created in {@link #commit()}.\n+     */\n+    public void addConfigurationAdmin(ServiceReference ref, ConfigurationAdmin ca)\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"found configuration admin \" + ref);\n+\n+        List<ConfigurationAdminTask> configAdminTasks;\n+        synchronized (m_lock)\n+        {\n+            configAdminTasks = new ArrayList<ConfigurationAdminTask>(m_configurationAdminTasks);\n+        }\n+\n+        for (ConfigurationAdminTask task : configAdminTasks)\n+        {\n+            try\n+            {\n+                Filter filter = task.getFilter();\n+                if ((filter == null) || (filter != null && filter.match(ref)))\n+                {\n+                    task.run(m_persistencyManager, ca);\n+                }\n+            }\n+            catch (Exception e)\n+            {\n+                m_log.log(LogService.LOG_ERROR, \"Exception during configuration to \" + ca + \". Trying to continue.\", e);\n+            }\n+        }\n+\n+        m_log.log(LogService.LOG_DEBUG, \"found configuration admin \" + ref + \" done\");\n+    }\n+\n+    public void begin(DeploymentSession session)\n+    {\n         m_log.log(LogService.LOG_DEBUG, \"beginning session \" + session);\n-        synchronized (m_lock) {\n-            if (m_session != null) {\n+\n+        synchronized (m_lock)\n+        {\n+            DeploymentSession current = m_sessionRef.get();\n+            if (current != null)\n+            {\n                 throw new IllegalArgumentException(\"Trying to begin new deployment session while already in one.\");\n             }\n-            if (session == null) {\n+            if (session == null)\n+            {\n                 throw new IllegalArgumentException(\"Trying to begin new deployment session with a null session.\");\n             }\n-            if (!m_toBeInstalled.isEmpty() || !m_toBeDeleted.isEmpty() || !m_configurationAdminTasks.isEmpty() || !m_postCommitTasks.isEmpty() || m_component != null) {\n+            if (!m_toBeInstalled.isEmpty() || !m_toBeDeleted.isEmpty() || !m_configurationAdminTasks.isEmpty() || !m_postCommitTasks.isEmpty() || m_component != null)\n+            {\n                 throw new IllegalStateException(\"State not reset correctly at start of session.\");\n             }\n-            m_session = session;\n+            m_sessionRef.set(session);\n         }\n     }\n- \n-    public void process(String name, InputStream stream) throws ResourceProcessorException {\n-        m_log.log(LogService.LOG_DEBUG, \"processing \" + name);\n-        // initial validation\n-        synchronized (m_lock) {\n-            if (m_session == null) {\n-                throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Can not process resource without a Deployment Session\");\n+\n+    public void cancel()\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"cancel\");\n+        rollback();\n+    }\n+\n+    public void commit()\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"commit\");\n+\n+        Dictionary properties = new Properties();\n+        properties.put(EventConstants.EVENT_TOPIC, org.apache.felix.deploymentadmin.Constants.EVENTTOPIC_COMPLETE);\n+        m_component = m_dm.createComponent()\n+            .setInterface(EventHandler.class.getName(), properties)\n+            .setImplementation(this)\n+            .setCallbacks(null, null, null, null)\n+            .setAutoConfig(Component.class, false)\n+            .add(m_dm.createServiceDependency()\n+                    .setService(ConfigurationAdmin.class)\n+                    .setCallbacks(\"addConfigurationAdmin\", null)\n+                    .setRequired(false)\n+        );\n+        m_dm.add(m_component);\n+\n+        m_log.log(LogService.LOG_DEBUG, \"commit done\");\n+    }\n+\n+    public void dropAllResources() throws ResourceProcessorException\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"drop all resources\");\n+\n+        assertInDeploymentSession(\"Can not drop all resources without a Deployment Session\");\n+\n+        for (String name : m_persistencyManager.getResourceNames())\n+        {\n+            dropped(name);\n+        }\n+\n+        m_log.log(LogService.LOG_DEBUG, \"drop all resources done\");\n+    }\n+\n+    public void dropped(String name) throws ResourceProcessorException\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"dropped \" + name);\n+\n+        assertInDeploymentSession(\"Can not drop resource without a Deployment Session\");\n+\n+        Map<String, List<AutoConfResource>> toBeDeleted;\n+        synchronized (m_lock)\n+        {\n+            toBeDeleted = new HashMap<String, List<AutoConfResource>>(m_toBeDeleted);\n+        }\n+\n+        try\n+        {\n+            List<AutoConfResource> resources = m_persistencyManager.load(name);\n+\n+            if (!toBeDeleted.containsKey(name))\n+            {\n+                toBeDeleted.put(name, new ArrayList());\n             }\n+            toBeDeleted.get(name).addAll(resources);\n         }\n-        MetaDataReader reader = new MetaDataReader();\n-        MetaData data = null;\n-        try {\n-            data = reader.parse(stream);\n+        catch (IOException ioe)\n+        {\n+            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to drop resource: \" + name, ioe);\n         }\n-        catch (IOException e) {\n-            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to process resource.\", e);\n+\n+        synchronized (m_lock)\n+        {\n+            m_toBeDeleted.putAll(toBeDeleted);\n         }\n-        if (data == null) {\n-            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Supplied configuration is not conform the metatype xml specification.\");\n+\n+        m_log.log(LogService.LOG_DEBUG, \"dropped \" + name + \" done\");\n+    }\n+\n+    public void handleEvent(Event event)\n+    {\n+        // regardless of the outcome, we simply invoke postcommit\n+        postcommit();\n+    }\n+\n+    public void postcommit()\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"post commit\");\n+\n+        List<PostCommitTask> postCommitTasks;\n+        synchronized (m_lock)\n+        {\n+            postCommitTasks = new ArrayList<PostCommitTask>(m_postCommitTasks);\n         }\n-        // process resources\n-        String filter = null;\n-        Map optionalAttributes = data.getOptionalAttributes();\n-        if (optionalAttributes != null) {\n-            filter = (String) optionalAttributes.get(AutoConfResourceProcessor.CONFIGURATION_ADMIN_FILTER_ATTRIBUTE);\n+\n+        for (PostCommitTask task : postCommitTasks)\n+        {\n+            try\n+            {\n+                task.run(m_persistencyManager);\n+            }\n+            catch (Exception e)\n+            {\n+                m_log.log(LogService.LOG_ERROR, \"Exception during post commit wrap-up. Trying to continue.\", e);\n+            }\n         }\n+\n+        endSession();\n+\n+        m_log.log(LogService.LOG_DEBUG, \"post commit done\");\n+    }\n+\n+    public void prepare() throws ResourceProcessorException\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"prepare\");\n+\n+        assertInDeploymentSession(\"Can not prepare resource without a Deployment Session\");\n+\n+        Map<String, List<AutoConfResource>> toBeDeleted;\n+        Map<String, List<AutoConfResource>> toBeInstalled;\n+        synchronized (m_lock)\n+        {\n+            toBeDeleted = new HashMap<String, List<AutoConfResource>>(m_toBeDeleted);\n+            toBeInstalled = new HashMap<String, List<AutoConfResource>>(m_toBeInstalled);\n+        }\n+\n+        List<ConfigurationAdminTask> configAdminTasks = new ArrayList<ConfigurationAdminTask>();\n+        List<PostCommitTask> postCommitTasks = new ArrayList<PostCommitTask>();\n+\n+        m_log.log(LogService.LOG_DEBUG, \"prepare delete\");\n+        // delete dropped resources\n+        for (Map.Entry<String, List<AutoConfResource>> entry : toBeDeleted.entrySet())\n+        {\n+            String name = entry.getKey();\n+            for (AutoConfResource resource : entry.getValue())\n+            {\n+                configAdminTasks.add(new DropResourceTask(resource));\n+            }\n+            postCommitTasks.add(new DeleteResourceTask(name));\n+        }\n+\n+        m_log.log(LogService.LOG_DEBUG, \"prepare install/update\");\n+        // install new/updated resources\n+        for (Map.Entry<String, List<AutoConfResource>> entry : toBeInstalled.entrySet())\n+        {\n+            String name = entry.getKey();\n+\n+            List<AutoConfResource> existingResources = null;\n+            try\n+            {\n+                existingResources = m_persistencyManager.load(name);\n+            }\n+            catch (IOException ioe)\n+            {\n+                throw new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE, \"Unable to read existing resources for resource \" + name, ioe);\n+            }\n+\n+            List<AutoConfResource> resources = entry.getValue();\n+            for (AutoConfResource resource : resources)\n+            {\n+                // When updating existing configurations, make sure that we delete the ones that have become obsolete... \n+                if (existingResources != null)\n+                {\n+                    Iterator<AutoConfResource> iter = existingResources.iterator();\n+                    while (iter.hasNext())\n+                    {\n+                        AutoConfResource existing = iter.next();\n+                        if (existing.equalsTargetConfiguration(resource))\n+                        {\n+                            iter.remove();\n+                        }\n+                    }\n+                }\n+\n+                configAdminTasks.add(new InstallOrUpdateResourceTask(resource));\n+            }\n+            // remove existing configurations that were not in the new version of the resource\n+            for (AutoConfResource existingResource : existingResources)\n+            {\n+                configAdminTasks.add(new DropResourceTask(existingResource));\n+            }\n+\n+            postCommitTasks.add(new StoreResourceTask(name, resources));\n+        }\n+\n+        synchronized (m_lock)\n+        {\n+            m_configurationAdminTasks.addAll(configAdminTasks);\n+            m_postCommitTasks.addAll(postCommitTasks);\n+        }\n+\n+        m_log.log(LogService.LOG_DEBUG, \"prepare done\");\n+    }\n+\n+    public void process(String name, InputStream stream) throws ResourceProcessorException\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"processing \" + name);\n+\n+        // initial validation\n+        assertInDeploymentSession(\"Can not process resource without a Deployment Session\");\n+\n+        Map<String, List<AutoConfResource>> toBeInstalled;\n+        synchronized (m_lock)\n+        {\n+            toBeInstalled = new HashMap<String, List<AutoConfResource>>(m_toBeInstalled);\n+        }\n+\n+        MetaData data = parseAutoConfResource(stream);\n+        // process resources\n+        Filter filter = getFilter(data);\n+\n         // add to session data\n-        if (!m_toBeInstalled.containsKey(name)) {\n-            m_toBeInstalled.put(name, new ArrayList());\n+        if (!toBeInstalled.containsKey(name))\n+        {\n+            toBeInstalled.put(name, new ArrayList<AutoConfResource>());\n         }\n-        List designates = data.getDesignates();\n-        if (designates == null || designates.isEmpty()) {\n+\n+        List<Designate> designates = data.getDesignates();\n+        if (designates == null || designates.isEmpty())\n+        {\n             // if there are no designates, there's nothing to process\n             m_log.log(LogService.LOG_INFO, \"No designates found in the resource, so there's nothing to process.\");\n             return;\n         }\n-        Map localOcds = data.getObjectClassDefinitions();\n-        if (localOcds == null) {\n-            localOcds = Collections.EMPTY_MAP;\n+\n+        Map<String, OCD> localOcds = data.getObjectClassDefinitions();\n+        if (localOcds == null)\n+        {\n+            localOcds = Collections.emptyMap();\n         }\n-        Iterator i = designates.iterator();\n-        while (i.hasNext()) {\n-            Designate designate = (Designate) i.next();\n-            \n+\n+        for (Designate designate : designates)\n+        {\n             // check object\n-            if (designate.getObject() == null) {\n+            DesignateObject objectDef = designate.getObject();\n+            if (objectDef == null)\n+            {\n                 throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Designate Object child missing or invalid\");\n             }\n-            \n+\n             // check attributes\n-            if (designate.getObject().getAttributes() == null || designate.getObject().getAttributes().size() == 0) {\n+            if (objectDef.getAttributes() == null || objectDef.getAttributes().isEmpty())\n+            {\n                 throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Object Attributes child missing or invalid\");\n             }\n-            \n+\n             // check ocdRef\n-            String ocdRef = designate.getObject().getOcdRef();\n-            if (ocdRef == null || \"\".equals(ocdRef)) {\n+            String ocdRef = objectDef.getOcdRef();\n+            if (ocdRef == null || \"\".equals(ocdRef))\n+            {\n                 throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Object ocdRef attribute missing or invalid\");\n             }\n \n             // determine OCD\n             ObjectClassDefinition ocd = null;\n-            OCD localOcd = (OCD) localOcds.get(ocdRef);\n+            OCD localOcd = localOcds.get(ocdRef);\n             // ask meta type service for matching OCD if no local OCD has been defined\n             ocd = (localOcd != null) ? new ObjectClassDefinitionImpl(localOcd) : getMetaTypeOCD(data, designate);\n-            if (ocd == null) {\n+            if (ocd == null)\n+            {\n                 throw new ResourceProcessorException(CODE_OTHER_ERROR, \"No Object Class Definition found with id=\" + ocdRef);\n             }\n+\n             // determine configuration data based on the values and their type definition\n-            Dictionary dict = getProperties(designate, ocd);\n-            if (dict == null) {\n+            Dictionary dict = MetaTypeUtil.getProperties(designate, ocd);\n+            if (dict == null)\n+            {\n                 // designate does not match it's definition, but was marked optional, ignore it\n                 continue;\n             }\n-            List resources = (List) m_toBeInstalled.get(name);\n-            resources.add(new AutoConfResource(name, designate.getPid(), designate.getFactoryPid(), designate.getBundleLocation(), designate.isMerge(), dict, filter));\n-        }\n-        m_log.log(LogService.LOG_DEBUG, \"processing \" + name + \" done\");\n-    }\n \n-    public void dropped(String name) throws ResourceProcessorException {\n-        m_log.log(LogService.LOG_DEBUG, \"dropped \" + name);\n-        synchronized (m_lock) {\n-        \tif (m_session == null) {\n-        \t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Can not process resource without a Deployment Session\");\n-        \t}\n-        }\n-    \ttry {\n-    \t\tList resources = m_persistencyManager.load(name);\n-    \t\tif (!m_toBeDeleted.containsKey(name)) {\n-    \t\t\tm_toBeDeleted.put(name, new ArrayList());\n-    \t\t}\n-    \t\t((List) m_toBeDeleted.get(name)).addAll(resources);\n-    \t}\n-    \tcatch (IOException ioe) {\n-    \t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to drop resource: \" + name, ioe);\n-    \t}\n-        m_log.log(LogService.LOG_DEBUG, \"dropped \" + name + \" done\");\n-    }\n+            AutoConfResource resource = new AutoConfResource(name, designate.getPid(), designate.getFactoryPid(), designate.getBundleLocation(), designate.isMerge(), dict, filter);\n+            \n+            toBeInstalled.get(name).add(resource);\n+        }\n \n-    public void dropAllResources() throws ResourceProcessorException {\n-        m_log.log(LogService.LOG_DEBUG, \"drop all resources\");\n-        synchronized (m_lock) {\n-        \tif (m_session == null) {\n-        \t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Can not drop all resources without a Deployment Session\");\n-        \t}\n-        }\n-\n-    \tFile basedir = m_bc.getDataFile(\"\");\n-    \tif (basedir != null && basedir.isDirectory()) {\n-    \t\tString[] files = basedir.list();\n-    \t\tfor (int i = 0; i < files.length; i++) {\n-    \t\t\tdropped(files[i]);\n-    \t\t}\n-    \t}\n-    \telse {\n-    \t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to drop resources, data area is not accessible\");\n-    \t}\n-        m_log.log(LogService.LOG_DEBUG, \"drop all resources done\");\n-    }\n-    \n-    private List m_configurationAdminTasks = new ArrayList();\n-    private List m_postCommitTasks = new ArrayList();\n+        synchronized (m_lock)\n+        {\n+            m_toBeInstalled.putAll(toBeInstalled);\n+        }\n \n-    public void prepare() throws ResourceProcessorException {\n-        m_log.log(LogService.LOG_DEBUG, \"prepare\");\n-        synchronized (m_lock) {\n-        \tif (m_session == null) {\n-        \t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Can not process resource without a Deployment Session\");\n-        \t}\n-        }\n-    \ttry {\n-            m_log.log(LogService.LOG_DEBUG, \"prepare delete\");\n-    \t\t// delete dropped resources\n-    \t\tfor (Iterator i = m_toBeDeleted.keySet().iterator(); i.hasNext();) {\n-    \t\t\tString name = (String) i.next();\n-    \t\t\tList resources = (List) m_toBeDeleted.get(name);\n-    \t\t\tfor (Iterator j = resources.iterator(); j.hasNext();) {\n-    \t\t\t\tAutoConfResource resource = (AutoConfResource) j.next();\n-    \t\t\t\tm_configurationAdminTasks.add(new DropResourceTask(resource));\n-    \t\t\t}\n-    \t\t\tm_postCommitTasks.add(new DeleteResourceTask(name));\n-    \t\t}\n-\n-            m_log.log(LogService.LOG_DEBUG, \"prepare install/update\");\n-    \t\t// install new/updated resources\n-    \t\tfor (Iterator j = m_toBeInstalled.keySet().iterator(); j.hasNext();) {\n-    \t\t\tString name = (String) j.next();\n-    \t\t\tList existingResources = null;\n-    \t\t\ttry {\n-    \t\t\t\texistingResources = m_persistencyManager.load(name);\n-    \t\t\t}\n-    \t\t\tcatch (IOException ioe) {\n-    \t\t\t\tthrow new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE, \"Unable to read existing resources for resource \" + name, ioe);\n-    \t\t\t}\n-    \t\t\tList resources = (List) m_toBeInstalled.get(name);\n-    \t\t\tfor (Iterator iterator = resources.iterator(); iterator.hasNext();) {\n-    \t\t\t\tAutoConfResource resource = (AutoConfResource) iterator.next();\n-    \t\t\t\tm_configurationAdminTasks.add(new InstallOrUpdateResourceTask(resource));\n-    \t\t\t}\n-    \t\t\t// remove existing configurations that were not in the new version of the resource\n-    \t\t\tfor (Iterator i = existingResources.iterator(); i.hasNext();) {\n-    \t\t\t\tAutoConfResource existingResource = (AutoConfResource) i.next();\n-    \t\t\t\tConfiguration configuration = null;\n-    \t\t\t\tif (existingResource.isFactoryConfig()) {\n-    \t\t\t\t\tconfiguration = m_configAdmin.getConfiguration(existingResource.getGeneratedPid(), existingResource.getBundleLocation());\n-    \t\t\t\t} else {\n-    \t\t\t\t\tconfiguration = m_configAdmin.getConfiguration(existingResource.getPid(), existingResource.getBundleLocation());\n-    \t\t\t\t}\n-    \t\t\t\tconfiguration.delete();\n-    \t\t\t}\n-    \t\t\tm_postCommitTasks.add(new StoreResourceTask(name, resources));\n-    \t\t}\n-    \t}\n-    \tcatch (IOException ioe) {\n-    \t\tm_toBeInstalled.clear();\n-    \t\tthrow new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE, \"Unable to prepare for commit for resource\", ioe);\n-    \t}\n-        m_log.log(LogService.LOG_DEBUG, \"prepare done\");\n+        m_log.log(LogService.LOG_DEBUG, \"processing \" + name + \" done\");\n     }\n \n-    public synchronized void commit() {\n-        m_log.log(LogService.LOG_DEBUG, \"commit\");\n+    public void rollback()\n+    {\n+        m_log.log(LogService.LOG_DEBUG, \"rollback\");\n \n-        Dictionary properties = new Properties();\n-        properties.put(EventConstants.EVENT_TOPIC, org.apache.felix.deploymentadmin.Constants.EVENTTOPIC_COMPLETE);\n-        m_component = m_dm.createComponent()\n-            .setInterface(EventHandler.class.getName(), properties)\n-            .setImplementation(this)\n-            .setCallbacks(null, null, null, null)\n-            .setAutoConfig(Component.class, false)\n-            .add(m_dm.createServiceDependency()\n-                .setService(ConfigurationAdmin.class)\n-                .setCallbacks(\"addConfigurationAdmin\", null)\n-                .setRequired(false));\n-        m_dm.add(m_component);\n+        Map<String, List<AutoConfResource>> toBeInstalled;\n+        synchronized (m_lock)\n+        {\n+            toBeInstalled = new HashMap<String, List<AutoConfResource>>(m_toBeInstalled);\n+        }\n \n-        m_log.log(LogService.LOG_DEBUG, \"commit done\");\n-    }\n-    \n-    public void addConfigurationAdmin(ServiceReference ref, ConfigurationAdmin ca) {\n-        m_log.log(LogService.LOG_DEBUG, \"found configuration admin \" + ref);\n-        Iterator iterator = m_configurationAdminTasks.iterator();\n-        while (iterator.hasNext()) {\n-            ConfigurationAdminTask task = (ConfigurationAdminTask) iterator.next();\n-            try {\n-                Filter filter = null;\n-                String filterString = task.getFilter();\n-                if (filterString != null) {\n-                    try {\n-                        filter = m_bc.createFilter(filterString);\n-                    }\n-                    catch (InvalidSyntaxException e) {\n-                        m_log.log(LogService.LOG_ERROR, \"Could not parse filter, ignoring it: \" + filterString, e);\n-                    }\n+        for (Map.Entry<String, List<AutoConfResource>> entry : toBeInstalled.entrySet())\n+        {\n+            for (AutoConfResource resource : entry.getValue())\n+            {\n+                String name = resource.getName();\n+                try\n+                {\n+                    dropped(name);\n                 }\n-                if (filter == null || filter != null && filter.match(ref)) {\n-                    task.run(m_persistencyManager, ca);\n+                catch (ResourceProcessorException e)\n+                {\n+                    m_log.log(LogService.LOG_ERROR, \"Unable to roll back resource '\" + name + \"', reason: \" + e.getMessage() + \", caused by: \" + e.getCause().getMessage());\n                 }\n-            }\n-            catch (Exception e) {\n-                m_log.log(LogService.LOG_ERROR, \"Exception during configuration to \" + ca + \". Trying to continue.\", e);\n+                break;\n             }\n         }\n-        m_log.log(LogService.LOG_DEBUG, \"found configuration admin \" + ref + \" done\");\n+\n+        endSession();\n+\n+        m_log.log(LogService.LOG_DEBUG, \"rollback done\");\n     }\n-    \n-    public void postcommit() {\n-        m_log.log(LogService.LOG_DEBUG, \"post commit\");\n-        Iterator iterator = m_postCommitTasks.iterator();\n-        while (iterator.hasNext()) {\n-            PostCommitTask task = (PostCommitTask) iterator.next();\n-            try {\n-                task.run(m_persistencyManager);\n-            }\n-            catch (Exception e) {\n-                m_log.log(LogService.LOG_ERROR, \"Exception during post commit wrap-up. Trying to continue.\", e);\n-            }\n+\n+    /**\n+     * Called by Felix DM when starting this component.\n+     */\n+    public void start() throws IOException\n+    {\n+        File root = m_dm.getBundleContext().getDataFile(\"\");\n+        if (root == null)\n+        {\n+            throw new IOException(\"No file system support\");\n         }\n-        endSession();\n-        m_log.log(LogService.LOG_DEBUG, \"post commit done\");\n+        m_persistencyManager = new PersistencyManager(root);\n     }\n \n-    private void endSession() {\n-        if (m_component != null) {\n-        \tm_dm.remove(m_component);\n-            m_component = null;\n+    private void assertInDeploymentSession(String msg) throws ResourceProcessorException\n+    {\n+        synchronized (m_lock)\n+        {\n+            DeploymentSession current = m_sessionRef.get();\n+            if (current == null)\n+            {\n+                throw new ResourceProcessorException(CODE_OTHER_ERROR, msg);\n+            }\n         }\n-        m_toBeInstalled.clear();\n-        m_toBeDeleted.clear();\n-        m_postCommitTasks.clear();\n-        m_configurationAdminTasks.clear();\n-        m_session = null;\n     }\n \n-    public void rollback() {\n-        m_log.log(LogService.LOG_DEBUG, \"rollback\");\n-    \tSet keys = m_toBeInstalled.keySet();\n-    \tfor (Iterator i = keys.iterator(); i.hasNext();) {\n-    \t\tList configs = (List) m_toBeInstalled.get(i.next());\n-    \t\tfor (Iterator j = configs.iterator(); j.hasNext();) {\n-    \t\t\tAutoConfResource resource = (AutoConfResource) j.next();\n-    \t\t\tString name = resource.getName();\n-    \t\t\ttry {\n-    \t\t\t\tdropped(name);\n-    \t\t\t}\n-    \t\t\tcatch (ResourceProcessorException e) {\n-    \t\t\t\tm_log.log(LogService.LOG_ERROR, \"Unable to roll back resource '\" + name + \"', reason: \" + e.getMessage() + \", caused by: \" + e.getCause().getMessage());\n-    \t\t\t}\n-    \t\t\tbreak;\n-    \t\t}\n-    \t}\n-    \tendSession();\n-        m_log.log(LogService.LOG_DEBUG, \"rollback done\");\n+    private void endSession()\n+    {\n+        if (m_component != null)\n+        {\n+            m_dm.remove(m_component);\n+            m_component = null;\n+        }\n+        synchronized (m_lock)\n+        {\n+            m_toBeInstalled.clear();\n+            m_toBeDeleted.clear();\n+            m_postCommitTasks.clear();\n+            m_configurationAdminTasks.clear();\n+            m_sessionRef.set(null);\n+        }\n     }\n \n-    public void cancel() {\n-        m_log.log(LogService.LOG_DEBUG, \"cancel\");\n-    \trollback();\n+    private Bundle getBundle(String bundleLocation, boolean isFactory) throws ResourceProcessorException\n+    {\n+        Bundle bundle = null;\n+        if (!isFactory)\n+        {\n+            // singleton configuration, no foreign bundles allowed, use source deployment package to find specified bundle\n+            if (bundleLocation.startsWith(LOCATION_PREFIX))\n+            {\n+                DeploymentSession session = m_sessionRef.get();\n+                bundle = session.getSourceDeploymentPackage().getBundle(bundleLocation.substring(LOCATION_PREFIX.length()));\n+            }\n+        }\n+        else\n+        {\n+            // factory configuration, foreign bundles allowed, use bundle context to find the specified bundle\n+            Bundle[] bundles = m_dm.getBundleContext().getBundles();\n+            for (int i = 0; i < bundles.length; i++)\n+            {\n+                String location = bundles[i].getLocation();\n+                if (bundleLocation.equals(location))\n+                {\n+                    bundle = bundles[i];\n+                    break;\n+                }\n+            }\n+        }\n+        return bundle;\n     }\n \n-    /**\n-     * Determines the actual configuration data based on the specified designate and object class definition\n-     * \n-     * @param designate The designate object containing the values for the properties\n-     * @param ocd The object class definition\n-     * @return A dictionary containing data as described in the designate and ocd objects, or <code>null</code> if the designate does not match it's\n-     * definition and the designate was marked as optional.\n-     * @throws ResourceProcessorException If the designate does not match the ocd and the designate is not marked as optional.\n-     */\n-    private Dictionary getProperties(Designate designate, ObjectClassDefinition ocd) throws ResourceProcessorException {\n-    \tDictionary properties = new Hashtable();\n-    \tAttributeDefinition[] attributeDefs = ocd.getAttributeDefinitions(ObjectClassDefinition.ALL);\n-    \tList attributes = designate.getObject().getAttributes();\n-\n-    \tfor (Iterator i = attributes.iterator(); i.hasNext();) {\n-    \t\tAttribute attribute = (Attribute) i.next();\n-\n-    \t\tString adRef = attribute.getAdRef();\n-    \t\tboolean found = false;\n-    \t\tfor(int j = 0; j < attributeDefs.length; j++) {\n-    \t\t\tAttributeDefinition ad = attributeDefs[j];\n-    \t\t\tif (adRef.equals(ad.getID())) {\n-    \t\t\t\t// found attribute definition\n-    \t\t\t\tObject value = getValue(attribute, ad);\n-    \t\t\t\tif (value == null) {\n-    \t\t\t\t\tif (designate.isOptional()) {\n-    \t\t\t\t\t\tproperties = null;\n-    \t\t\t\t\t\tbreak;\n-    \t\t\t\t\t}\n-    \t\t\t\t\telse {\n-    \t\t\t\t\t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Could not match attribute to it's definition: adref=\" + adRef);\n-    \t\t\t\t\t}\n-    \t\t\t\t}\n-    \t\t\t\tproperties.put(adRef, value);\n-    \t\t\t\tfound = true;\n-    \t\t\t\tbreak;\n-    \t\t\t}\n-    \t\t}\n-    \t\tif (!found) {\n-    \t\t\tif (designate.isOptional()) {\n-    \t\t\t\tproperties = null;\n-    \t\t\t\tbreak;\n-    \t\t\t} else {\n-    \t\t\t\tthrow new ResourceProcessorException(CODE_OTHER_ERROR, \"Could not find attribute definition: adref=\" + adRef);\n-    \t\t\t}\n-    \t\t}\n-    \t}\n-\n-    \treturn properties;\n+    private Filter getFilter(MetaData data) throws ResourceProcessorException\n+    {\n+        Map optionalAttributes = data.getOptionalAttributes();\n+        if (optionalAttributes != null)\n+        {\n+            try\n+            {\n+                return FrameworkUtil.createFilter((String) optionalAttributes.get(AutoConfResourceProcessor.CONFIGURATION_ADMIN_FILTER_ATTRIBUTE));\n+            }\n+            catch (InvalidSyntaxException e)\n+            {\n+                throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to create filter!\", e);\n+            }\n+        }\n+        return null;\n     }\n \n     /**\n@@ -446,268 +554,200 @@ private Dictionary getProperties(Designate designate, ObjectClassDefinition ocd)\n      * @return\n      * @throws ResourceProcessorException\n      */\n-    private ObjectClassDefinition getMetaTypeOCD(MetaData data, Designate designate) throws ResourceProcessorException {\n-    \tObjectClassDefinition ocd = null;\n-    \tString ocdRef = designate.getObject().getOcdRef();\n-    \tBundle bundle = getBundle(designate.getBundleLocation(), isFactoryConfig(designate));\n-    \tif (bundle != null) {\n-    \t\tMetaTypeInformation mti = m_metaService.getMetaTypeInformation(bundle);\n-    \t\tif (mti != null) {\n-    \t\t\tString pid = isFactoryConfig(designate) ? pid = designate.getFactoryPid() : designate.getPid();\n-    \t\t\ttry {\n-    \t\t\t\tObjectClassDefinition tempOcd = mti.getObjectClassDefinition(pid, null);\n-    \t\t\t\t// tempOcd will always have a value, if pid was not known IAE will be thrown\n-    \t\t\t\tif (ocdRef.equals(tempOcd.getID())) {\n-    \t\t\t\t\tocd = tempOcd;\n-    \t\t\t\t}\n-    \t\t\t}\n-    \t\t\tcatch (IllegalArgumentException iae) {\n-    \t\t\t\t// let null be returned\n-    \t\t\t}\n-    \t\t}\n-    \t}\n-    \treturn ocd;\n-    }\n+    private ObjectClassDefinition getMetaTypeOCD(MetaData data, Designate designate) throws ResourceProcessorException\n+    {\n+        boolean isFactoryConfig = isFactoryConfig(designate);\n+\n+        Bundle bundle = getBundle(designate.getBundleLocation(), isFactoryConfig);\n+        if (bundle == null)\n+        {\n+            return null;\n+        }\n \n-    private boolean isFactoryConfig(Designate designate) {\n-    \tString factoryPid = designate.getFactoryPid();\n-    \treturn (factoryPid != null && !\"\".equals(factoryPid));\n-    }\n+        MetaTypeInformation mti = m_metaService.getMetaTypeInformation(bundle);\n+        if (mti == null)\n+        {\n+            return null;\n+        }\n \n-    private Bundle getBundle(String bundleLocation, boolean isFactory) throws ResourceProcessorException {\n-    \tBundle bundle = null;\n-    \tif (!isFactory) {\n-    \t\t// singleton configuration, no foreign bundles allowed, use source deployment package to find specified bundle\n-    \t\tif (bundleLocation.startsWith(LOCATION_PREFIX)) {\n-    \t\t\tbundle = m_session.getSourceDeploymentPackage().getBundle(bundleLocation.substring(LOCATION_PREFIX.length()));\n-    \t\t}\n-    \t}\n-    \telse {\n-    \t\t// factory configuration, foreign bundles allowed, use bundle context to find the specified bundle\n-    \t\tBundle[] bundles = m_bc.getBundles();                                                                               \n-    \t\tfor (int i = 0; i < bundles.length; i++) {\n-    \t\t\tString location = bundles[i].getLocation();\n-    \t\t\tif (bundleLocation.equals(location)) {\n-    \t\t\t\tbundle = bundles[i];\n-    \t\t\t\tbreak;\n-    \t\t\t}\n-    \t\t}\n-    \t}\n-    \treturn bundle;\n+        String pid = isFactoryConfig ? pid = designate.getFactoryPid() : designate.getPid();\n+        try\n+        {\n+            ObjectClassDefinition tempOcd = mti.getObjectClassDefinition(pid, null);\n+            // tempOcd will always have a value, if pid was not known IAE will be thrown\n+            String ocdRef = designate.getObject().getOcdRef();\n+            if (ocdRef.equals(tempOcd.getID()))\n+            {\n+                return tempOcd;\n+            }\n+        }\n+        catch (IllegalArgumentException iae)\n+        {\n+            // let null be returned\n+        }\n+\n+        return null;\n     }\n \n-    /**\n-     * Determines the value of an attribute based on an attribute definition\n-     * \n-     * @param attribute The attribute containing value(s)\n-     * @param ad The attribute definition\n-     * @return An <code>Object</code> reflecting what was specified in the attribute and it's definition or <code>null</code> if the value did not match it's definition.\n-     * @throws ResourceProcessorException in case we're unable to parse the value of an attribute.\n-     */\n-    private Object getValue(Attribute attribute, AttributeDefinition ad) throws ResourceProcessorException {\n-    \tif (attribute == null || ad == null || !attribute.getAdRef().equals(ad.getID())) {\n-    \t\t// wrong attribute or definition\n-    \t\treturn null;\n-    \t}\n-    \tString[] content = attribute.getContent();\n-\n-    \t// verify correct type of the value(s)\n-    \tint type = ad.getType();\n-    \tObject[] typedContent = null;\n-    \ttry {\n-    \t\tfor (int i = 0; i < content.length; i++) {\n-    \t\t\tString value = content[i];\n-    \t\t\tswitch (type) {\n-\t    \t\t\tcase AttributeDefinition.BOOLEAN:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Boolean[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Boolean.valueOf(value);\t\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.BYTE:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Byte[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Byte.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.CHARACTER:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Character[content.length] : typedContent;\n-\t    \t\t\t\tchar[] charArray = value.toCharArray();\n-\t    \t\t\t\tif (charArray.length == 1) {\n-\t    \t\t\t\t\ttypedContent[i] = new Character(charArray[0]);\n-\t    \t\t\t\t}\n-\t    \t\t\t\telse {\n-\t    \t\t            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to parse value for definition: adref=\" + ad.getID());\n-\t    \t\t\t\t}\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.DOUBLE:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Double[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Double.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.FLOAT:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Float[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Float.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.INTEGER:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Integer[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Integer.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.LONG:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Long[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Long.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.SHORT:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new Short[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = Short.valueOf(value);\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tcase AttributeDefinition.STRING:\n-\t    \t\t\t\ttypedContent = (typedContent == null) ? new String[content.length] : typedContent;\n-\t    \t\t\t\ttypedContent[i] = value;\n-\t    \t\t\t\tbreak;\n-\t    \t\t\tdefault:\n-\t    \t\t\t\t// unsupported type\n-                        throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unsupported value-type for definition: adref=\" + ad.getID());\n-    \t\t\t}\n-    \t\t}\n-    \t}\n-    \tcatch (NumberFormatException nfe) {\n-            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to parse value for definition: adref=\" + ad.getID());\n-    \t}\n-\n-    \t// verify cardinality of value(s)\n-    \tint cardinality = ad.getCardinality();\n-    \tObject result = null;\n-    \tif (cardinality == 0) {\n-    \t\tif (typedContent.length == 1) {\n-    \t\t\tresult = typedContent[0];\n-    \t\t}\n-    \t\telse {\n-    \t\t\tresult = null;\n-    \t\t}\n-    \t}\n-    \telse if (cardinality == Integer.MIN_VALUE) {\n-    \t\tresult = new Vector(Arrays.asList(typedContent));\n-    \t}\n-    \telse if (cardinality == Integer.MAX_VALUE) {\n-    \t\tresult = typedContent;\n-    \t}\n-    \telse if (cardinality < 0) {\n-            if (typedContent.length <= Math.abs(cardinality)) {\n-    \t\t\tresult = new Vector(Arrays.asList(typedContent));\n-    \t\t}\n-    \t\telse {\n-    \t\t\tresult = null;\n-    \t\t}\n-    \t}\n-    \telse if (cardinality > 0) {\n-    \t\tif (typedContent.length <= cardinality) {\n-    \t\t\tresult = typedContent;\n-    \t\t}\n-    \t\telse {\n-    \t\t\tresult = null;\n-    \t\t}\n-    \t}\n-    \treturn result;\n+    private boolean isFactoryConfig(Designate designate)\n+    {\n+        String factoryPid = designate.getFactoryPid();\n+        return (factoryPid != null && !\"\".equals(factoryPid));\n     }\n \n-    public void handleEvent(Event event) {\n-    \t// regardless of the outcome, we simply invoke postcommit\n-    \tpostcommit();\n+    private MetaData parseAutoConfResource(InputStream stream) throws ResourceProcessorException\n+    {\n+        MetaDataReader reader = new MetaDataReader();\n+        MetaData data = null;\n+        try\n+        {\n+            data = reader.parse(stream);\n+        }\n+        catch (IOException e)\n+        {\n+            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to process resource.\", e);\n+        }\n+        if (data == null)\n+        {\n+            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Supplied configuration is not conform the metatype xml specification.\");\n+        }\n+        return data;\n     }\n }\n \n-interface ConfigurationAdminTask {\n-    public String getFilter();\n+interface ConfigurationAdminTask\n+{\n+    public Filter getFilter();\n+\n     public void run(PersistencyManager persistencyManager, ConfigurationAdmin configAdmin) throws Exception;\n }\n \n-interface PostCommitTask {\n-    public void run(PersistencyManager manager) throws Exception;\n+class DeleteResourceTask implements PostCommitTask\n+{\n+    private final String m_name;\n+\n+    public DeleteResourceTask(String name)\n+    {\n+        m_name = name;\n+    }\n+\n+    public void run(PersistencyManager manager) throws Exception\n+    {\n+        manager.delete(m_name);\n+    }\n }\n \n-class DropResourceTask implements ConfigurationAdminTask {\n+class DropResourceTask implements ConfigurationAdminTask\n+{\n     private final AutoConfResource m_resource;\n \n-    public DropResourceTask(AutoConfResource resource) {\n+    public DropResourceTask(AutoConfResource resource)\n+    {\n         m_resource = resource;\n     }\n-    \n-    public String getFilter() {\n+\n+    public Filter getFilter()\n+    {\n         return m_resource.getFilter();\n     }\n \n-    public void run(PersistencyManager persistencyManager, ConfigurationAdmin configAdmin) throws Exception {\n+    public void run(PersistencyManager persistencyManager, ConfigurationAdmin configAdmin) throws Exception\n+    {\n         String pid;\n-        if (m_resource.isFactoryConfig()) {\n+        if (m_resource.isFactoryConfig())\n+        {\n             pid = m_resource.getGeneratedPid();\n         }\n-        else {\n+        else\n+        {\n             pid = m_resource.getPid();\n         }\n         Configuration configuration = configAdmin.getConfiguration(pid, m_resource.getBundleLocation());\n         configuration.delete();\n     }\n }\n \n-class InstallOrUpdateResourceTask implements ConfigurationAdminTask {\n+class InstallOrUpdateResourceTask implements ConfigurationAdminTask\n+{\n     private final AutoConfResource m_resource;\n \n-    public InstallOrUpdateResourceTask(AutoConfResource resource) {\n+    public InstallOrUpdateResourceTask(AutoConfResource resource)\n+    {\n         m_resource = resource;\n     }\n \n-    public String getFilter() {\n+    public Filter getFilter()\n+    {\n         return m_resource.getFilter();\n     }\n \n-    public void run(PersistencyManager persistencyManager, ConfigurationAdmin configAdmin) throws Exception {\n+    public void run(PersistencyManager persistencyManager, ConfigurationAdmin configAdmin) throws Exception\n+    {\n         String name = m_resource.getName();\n         Dictionary properties = m_resource.getProperties();\n         String bundleLocation = m_resource.getBundleLocation();\n         Configuration configuration = null;\n \n         List existingResources = null;\n-        try {\n+        try\n+        {\n             existingResources = persistencyManager.load(name);\n         }\n-        catch (IOException ioe) {\n+        catch (IOException ioe)\n+        {\n             throw new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE, \"Unable to read existing resources for resource \" + name, ioe);\n         }\n-        \n+\n         // update configuration\n-        if (m_resource.isFactoryConfig()) {\n+        if (m_resource.isFactoryConfig())\n+        {\n             // check if this is an factory config instance update\n-            for (Iterator i = existingResources.iterator(); i.hasNext();) {\n+            for (Iterator i = existingResources.iterator(); i.hasNext();)\n+            {\n                 AutoConfResource existingResource = (AutoConfResource) i.next();\n-                if (m_resource.equalsTargetConfiguration(existingResource)) {\n+                if (m_resource.equalsTargetConfiguration(existingResource))\n+                {\n                     // existing instance found\n                     configuration = configAdmin.getConfiguration(existingResource.getGeneratedPid(), bundleLocation);\n                     existingResources.remove(existingResource);\n                     break;\n                 }\n             }\n-            if (configuration == null) {\n+            if (configuration == null)\n+            {\n                 // no existing instance, create new\n                 configuration = configAdmin.createFactoryConfiguration(m_resource.getFactoryPid(), bundleLocation);\n             }\n             m_resource.setGeneratedPid(configuration.getPid());\n         }\n-        else {\n-            for (Iterator i = existingResources.iterator(); i.hasNext();) {\n+        else\n+        {\n+            for (Iterator i = existingResources.iterator(); i.hasNext();)\n+            {\n                 AutoConfResource existingResource = (AutoConfResource) i.next();\n-                if (m_resource.getPid().equals(existingResource.getPid())) {\n+                if (m_resource.getPid().equals(existingResource.getPid()))\n+                {\n                     // existing resource found\n                     existingResources.remove(existingResource);\n                     break;\n                 }\n             }\n             configuration = configAdmin.getConfiguration(m_resource.getPid(), bundleLocation);\n-            if (!bundleLocation.equals(configuration.getBundleLocation())) {\n+            if (!bundleLocation.equals(configuration.getBundleLocation()))\n+            {\n                 // an existing configuration exists that is bound to a different location, which is not allowed\n-                throw new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE, \"Existing configuration was bound to \" + configuration.getBundleLocation() + \" instead of \" + bundleLocation);\n+                throw new ResourceProcessorException(ResourceProcessorException.CODE_PREPARE,\n+                    \"Existing configuration was bound to \" + configuration.getBundleLocation() + \" instead of \" + bundleLocation);\n             }\n         }\n-        if (m_resource.isMerge()) {\n+        if (m_resource.isMerge())\n+        {\n             Dictionary existingProperties = configuration.getProperties();\n-            if (existingProperties != null) {\n+            if (existingProperties != null)\n+            {\n                 Enumeration keys = existingProperties.keys();\n-                while (keys.hasMoreElements()) {\n+                while (keys.hasMoreElements())\n+                {\n                     Object key = keys.nextElement();\n                     properties.put(key, existingProperties.get(key));\n                 }\n@@ -717,28 +757,24 @@ public void run(PersistencyManager persistencyManager, ConfigurationAdmin config\n     }\n }\n \n-class DeleteResourceTask implements PostCommitTask {\n-    private final String m_name;\n-\n-    public DeleteResourceTask(String name) {\n-        m_name = name;\n-    }\n-\n-    public void run(PersistencyManager manager) throws Exception {\n-        manager.delete(m_name);\n-    }\n+interface PostCommitTask\n+{\n+    public void run(PersistencyManager manager) throws Exception;\n }\n \n-class StoreResourceTask implements PostCommitTask {\n+class StoreResourceTask implements PostCommitTask\n+{\n     private final String m_name;\n     private final List m_resources;\n \n-    public StoreResourceTask(String name, List resources) {\n+    public StoreResourceTask(String name, List resources)\n+    {\n         m_name = name;\n         m_resources = resources;\n     }\n \n-    public void run(PersistencyManager manager) throws Exception {\n+    public void run(PersistencyManager manager) throws Exception\n+    {\n         manager.store(m_name, m_resources);\n     }\n }\n\\ No newline at end of file", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessor.java"}, {"additions": 233, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/MetaTypeUtil.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/MetaTypeUtil.java", "sha": "7abbb91e17c8e279446a167814cfc171b2062786", "changes": 233, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/MetaTypeUtil.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -0,0 +1,233 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.felix.deployment.rp.autoconf;\n+\n+import static org.osgi.service.deploymentadmin.spi.ResourceProcessorException.CODE_OTHER_ERROR;\n+\n+import java.util.Arrays;\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+import java.util.List;\n+import java.util.Vector;\n+\n+import org.apache.felix.metatype.Attribute;\n+import org.apache.felix.metatype.Designate;\n+import org.osgi.service.deploymentadmin.spi.ResourceProcessorException;\n+import org.osgi.service.metatype.AttributeDefinition;\n+import org.osgi.service.metatype.ObjectClassDefinition;\n+\n+/**\n+ * Convenience methods to work with MetaType structures.\n+ */\n+public class MetaTypeUtil\n+{\n+    private MetaTypeUtil()\n+    {\n+        // Nop\n+    }\n+\n+    /**\n+     * Determines the actual configuration data based on the specified designate and object class definition\n+     * \n+     * @param designate The designate object containing the values for the properties\n+     * @param ocd The object class definition\n+     * @return A dictionary containing data as described in the designate and ocd objects, or <code>null</code> if the designate does not match it's\n+     * definition and the designate was marked as optional.\n+     * @throws ResourceProcessorException If the designate does not match the ocd and the designate is not marked as optional.\n+     */\n+    public static Dictionary getProperties(Designate designate, ObjectClassDefinition ocd) throws ResourceProcessorException\n+    {\n+        Dictionary properties = new Hashtable();\n+        AttributeDefinition[] attributeDefs = ocd.getAttributeDefinitions(ObjectClassDefinition.ALL);\n+\n+        List<Attribute> attributes = designate.getObject().getAttributes();\n+        for (Attribute attribute : attributes)\n+        {\n+            String adRef = attribute.getAdRef();\n+            boolean found = false;\n+            for (int j = 0; j < attributeDefs.length; j++)\n+            {\n+                AttributeDefinition ad = attributeDefs[j];\n+                if (adRef.equals(ad.getID()))\n+                {\n+                    // found attribute definition\n+                    Object value = getValue(attribute, ad);\n+                    if (value == null)\n+                    {\n+                        if (designate.isOptional())\n+                        {\n+                            properties = null;\n+                            break;\n+                        }\n+                        else\n+                        {\n+                            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Could not match attribute to it's definition: adref=\" + adRef);\n+                        }\n+                    }\n+                    properties.put(adRef, value);\n+                    found = true;\n+                    break;\n+                }\n+            }\n+            if (!found)\n+            {\n+                if (designate.isOptional())\n+                {\n+                    properties = null;\n+                    break;\n+                }\n+                else\n+                {\n+                    throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Could not find attribute definition: adref=\" + adRef);\n+                }\n+            }\n+        }\n+\n+        return properties;\n+    }\n+\n+    /**\n+     * Determines the value of an attribute based on an attribute definition\n+     * \n+     * @param attribute The attribute containing value(s)\n+     * @param ad The attribute definition\n+     * @return An <code>Object</code> reflecting what was specified in the attribute and it's definition or <code>null</code> if the value did not match it's definition.\n+     * @throws ResourceProcessorException in case we're unable to parse the value of an attribute.\n+     */\n+    private static Object getValue(Attribute attribute, AttributeDefinition ad) throws ResourceProcessorException\n+    {\n+        if (attribute == null || ad == null || !attribute.getAdRef().equals(ad.getID()))\n+        {\n+            // wrong attribute or definition\n+            return null;\n+        }\n+        String[] content = attribute.getContent();\n+\n+        // verify correct type of the value(s)\n+        int type = ad.getType();\n+        Object[] typedContent = null;\n+        try\n+        {\n+            for (int i = 0; i < content.length; i++)\n+            {\n+                String value = content[i];\n+                switch (type)\n+                {\n+                    case AttributeDefinition.BOOLEAN:\n+                        typedContent = (typedContent == null) ? new Boolean[content.length] : typedContent;\n+                        typedContent[i] = Boolean.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.BYTE:\n+                        typedContent = (typedContent == null) ? new Byte[content.length] : typedContent;\n+                        typedContent[i] = Byte.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.CHARACTER:\n+                        typedContent = (typedContent == null) ? new Character[content.length] : typedContent;\n+                        char[] charArray = value.toCharArray();\n+                        if (charArray.length == 1)\n+                        {\n+                            typedContent[i] = new Character(charArray[0]);\n+                        }\n+                        else\n+                        {\n+                            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to parse value for definition: adref=\" + ad.getID());\n+                        }\n+                        break;\n+                    case AttributeDefinition.DOUBLE:\n+                        typedContent = (typedContent == null) ? new Double[content.length] : typedContent;\n+                        typedContent[i] = Double.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.FLOAT:\n+                        typedContent = (typedContent == null) ? new Float[content.length] : typedContent;\n+                        typedContent[i] = Float.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.INTEGER:\n+                        typedContent = (typedContent == null) ? new Integer[content.length] : typedContent;\n+                        typedContent[i] = Integer.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.LONG:\n+                        typedContent = (typedContent == null) ? new Long[content.length] : typedContent;\n+                        typedContent[i] = Long.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.SHORT:\n+                        typedContent = (typedContent == null) ? new Short[content.length] : typedContent;\n+                        typedContent[i] = Short.valueOf(value);\n+                        break;\n+                    case AttributeDefinition.STRING:\n+                        typedContent = (typedContent == null) ? new String[content.length] : typedContent;\n+                        typedContent[i] = value;\n+                        break;\n+                    default:\n+                        // unsupported type\n+                        throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unsupported value-type for definition: adref=\" + ad.getID());\n+                }\n+            }\n+        }\n+        catch (NumberFormatException nfe)\n+        {\n+            throw new ResourceProcessorException(CODE_OTHER_ERROR, \"Unable to parse value for definition: adref=\" + ad.getID());\n+        }\n+\n+        // verify cardinality of value(s)\n+        int cardinality = ad.getCardinality();\n+        Object result = null;\n+        if (cardinality == 0)\n+        {\n+            if (typedContent.length == 1)\n+            {\n+                result = typedContent[0];\n+            }\n+            else\n+            {\n+                result = null;\n+            }\n+        }\n+        else if (cardinality == Integer.MIN_VALUE)\n+        {\n+            result = new Vector(Arrays.asList(typedContent));\n+        }\n+        else if (cardinality == Integer.MAX_VALUE)\n+        {\n+            result = typedContent;\n+        }\n+        else if (cardinality < 0)\n+        {\n+            if (typedContent.length <= Math.abs(cardinality))\n+            {\n+                result = new Vector(Arrays.asList(typedContent));\n+            }\n+            else\n+            {\n+                result = null;\n+            }\n+        }\n+        else if (cardinality > 0)\n+        {\n+            if (typedContent.length <= cardinality)\n+            {\n+                result = typedContent;\n+            }\n+            else\n+            {\n+                result = null;\n+            }\n+        }\n+        return result;\n+    }\n+}", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/MetaTypeUtil.java"}, {"additions": 147, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/PersistencyManager.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/PersistencyManager.java", "sha": "cd41d3089edf0248833dee9a40046cdf3b8873e0", "changes": 242, "status": "modified", "deletions": 95, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/PersistencyManager.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -19,6 +19,7 @@\n package org.apache.felix.deployment.rp.autoconf;\n \n import java.io.File;\n+import java.io.FileFilter;\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n@@ -28,104 +29,155 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-public class PersistencyManager {\n-\t\n-\tprivate final File m_root;\n+public class PersistencyManager\n+{\n+    private static final FileFilter FILES_ONLY_FILTER = new FileFilter()\n+    {\n+        public boolean accept(File pathname)\n+        {\n+            return pathname.isFile();\n+        }\n+    };\n \n-\tpublic PersistencyManager(File root) {\n-\t\tm_root = root;\n-\t}\n+    private final File m_root;\n \n-\t/**\n-\t * Stores a resource.\n-\t * \n-\t * @param name Name of the resource.\n-\t * @param configs List of <code>AutoConfResource</code>s representing the specified resource.\n-\t * @throws IOException If the resource could not be stored.\n-\t */\n-\tpublic void store(String name, List configs) throws IOException {\n-\t\tFile targetDir = m_root;\n-\t\tname = name.replace('/', File.separatorChar);\n-\t\t\n-\t\tif (name.startsWith(File.separator)) {\n-\t\t\tname = name.substring(1);\n-\t\t}\n-\t\tint lastSeparator = name.lastIndexOf(File.separator);\n-\t\tFile target = null;\n-\t\tif (lastSeparator != -1) {\n-\t\t\ttargetDir = new File(targetDir, name.substring(0, lastSeparator));\n-\t\t\ttargetDir.mkdirs();\n-\t\t}\n-\t\ttarget = new File(targetDir, name.substring(lastSeparator + 1));\n+    public PersistencyManager(File root)\n+    {\n+        m_root = root;\n+    }\n \n-\t\tObjectOutputStream out = null;\n-\t\ttry {\n-\t\t\tout = new ObjectOutputStream(new FileOutputStream(target));\n-\t\t\tout.writeObject(configs);\n-\t\t}\n-\t\tfinally {\n-\t\t\tif (out != null) {\n-\t\t\t\ttry {\n-\t\t\t\t\tout.close();\n-\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t// not much we can do\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+    /**\n+     * Deletes a resource.\n+     * \n+     * @param name Name of the resource.\n+     * @throws IOException If the resource could not be deleted.\n+     */\n+    public void delete(String name) throws IOException\n+    {\n+        name = name.replace('/', File.separatorChar);\n+        File target = new File(m_root, name);\n+        if (target.exists() && !target.delete())\n+        {\n+            throw new IOException(\"Unable to delete file: \" + target.getAbsolutePath());\n+        }\n+        while (target.getParentFile().list().length == 0 && !target.getParentFile().getAbsolutePath().equals(m_root.getAbsolutePath()))\n+        {\n+            target = target.getParentFile();\n+            target.delete();\n+        }\n+    }\n \n-\t/**\n-\t * Deletes a resource.\n-\t * \n-\t * @param name Name of the resource.\n-\t * @throws IOException If the resource could not be deleted.\n-\t */\n-\tpublic void delete(String name) throws IOException {\n-\t\tname = name.replace('/', File.separatorChar);\n-\t\tFile target = new File(m_root, name);\n-\t\tif (!target.delete()) {\n-\t\t\tthrow new IOException(\"Unable to delete file: \" + target.getAbsolutePath());\n-\t\t}\n-\t\twhile (target.getParentFile().list().length == 0 && !target.getParentFile().getAbsolutePath().equals(m_root.getAbsolutePath())) {\n-\t\t\ttarget = target.getParentFile();\n-\t\t\ttarget.delete();\n-\t\t}\n-\t}\n+    /**\n+     * Returns the names of all persisted resources.\n+     * @return a list of resource names, never <code>null</code>.\n+     */\n+    public List<String> getResourceNames()\n+    {\n+        List<String> result = new ArrayList<String>();\n \n-\t/**\n-\t * Loads a stored resource.\n-\t * \n-\t * @param name Name of the resource.\n-\t * @return List of <code>AutoConfResource</code>s representing the specified resource, if the resource is unknown an empty list is returned.\n-\t * @throws IOException If the resource could not be properly read.\n-\t */\n-\tpublic List load(String name) throws IOException {\n-\t\tname = name.replace('/', File.separatorChar);\n-\t\tList resources = new ArrayList();\n-\t\tFile resourcesFile = new File(m_root, name);\n-\t\tif (resourcesFile.exists()) {\n-\t\t\tObjectInputStream in = null;\n-\t\t\ttry {\n-\t\t\t\tin = new ObjectInputStream(new FileInputStream(resourcesFile));\n-\t\t\t\tresources = (List) in.readObject();\n-\t\t\t} \n-\t\t\tcatch (FileNotFoundException fnfe) {\n-\t\t\t\tthrow new IOException(\"Resource does not exist: \" + name);\n-\t\t\t} \n-\t\t\tcatch (ClassNotFoundException cnfe) {\n-\t\t\t\tthrow new IOException(\"Unable to recreate persisted object from file: \" + name);\n-\t\t\t} \n-\t\t\tfinally {\n-\t\t\t\tif (in != null) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tin.close();\n-\t\t\t\t\t} \n-\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\t// not much we can do\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn resources;\n-\t}\n+        File[] list = m_root.listFiles(FILES_ONLY_FILTER);\n+        if (list != null && list.length > 0)\n+        {\n+            for (File resource : list)\n+            {\n+                result.add(resource.getName());\n+            }\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * Loads a stored resource.\n+     * \n+     * @param name Name of the resource.\n+     * @return List of <code>AutoConfResource</code>s representing the specified resource, if the resource is unknown an empty list is returned.\n+     * @throws IOException If the resource could not be properly read.\n+     */\n+    public List<AutoConfResource> load(String name) throws IOException\n+    {\n+        List<AutoConfResource> resources = new ArrayList<AutoConfResource>();\n+        name = name.replace('/', File.separatorChar);\n+        File resourcesFile = new File(m_root, name);\n+        if (!resourcesFile.exists())\n+        {\n+            return resources;\n+        }\n+\n+        ObjectInputStream in = null;\n+        try\n+        {\n+            in = new ObjectInputStream(new FileInputStream(resourcesFile));\n+            resources = (List<AutoConfResource>) in.readObject();\n+        }\n+        catch (FileNotFoundException e)\n+        {\n+            throw new IOException(\"Resource does not exist: \" + name);\n+        }\n+        catch (ClassNotFoundException e)\n+        {\n+            throw new IOException(\"Unable to recreate persisted object from file: \" + name);\n+        }\n+        finally\n+        {\n+            if (in != null)\n+            {\n+                try\n+                {\n+                    in.close();\n+                }\n+                catch (Exception e)\n+                {\n+                    // not much we can do\n+                }\n+            }\n+        }\n+        return resources;\n+    }\n+\n+    /**\n+     * Stores a resource.\n+     * \n+     * @param name Name of the resource.\n+     * @param configs List of <code>AutoConfResource</code>s representing the specified resource.\n+     * @throws IOException If the resource could not be stored.\n+     */\n+    public void store(String name, List<AutoConfResource> configs) throws IOException\n+    {\n+        File targetDir = m_root;\n+        name = name.replace('/', File.separatorChar);\n+\n+        if (name.startsWith(File.separator))\n+        {\n+            name = name.substring(1);\n+        }\n+        int lastSeparator = name.lastIndexOf(File.separator);\n+        File target = null;\n+        if (lastSeparator != -1)\n+        {\n+            targetDir = new File(targetDir, name.substring(0, lastSeparator));\n+            targetDir.mkdirs();\n+        }\n+        target = new File(targetDir, name.substring(lastSeparator + 1));\n+\n+        ObjectOutputStream out = null;\n+        try\n+        {\n+            out = new ObjectOutputStream(new FileOutputStream(target));\n+            out.writeObject(configs);\n+        }\n+        finally\n+        {\n+            if (out != null)\n+            {\n+                try\n+                {\n+                    out.close();\n+                }\n+                catch (Exception e)\n+                {\n+                    // not much we can do\n+                }\n+            }\n+        }\n+    }\n }", "filename": "deploymentadmin/autoconf/src/main/java/org/apache/felix/deployment/rp/autoconf/PersistencyManager.java"}, {"additions": 506, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessorTest.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessorTest.java", "sha": "271520c89ccf9a120ce523b07b7bcde5ea26668d", "changes": 858, "status": "modified", "deletions": 352, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessorTest.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -21,7 +21,10 @@\n import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n+import java.util.Collections;\n import java.util.Dictionary;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n import java.util.Properties;\n \n import junit.framework.TestCase;\n@@ -40,434 +43,585 @@\n import org.osgi.service.deploymentadmin.spi.ResourceProcessorException;\n import org.osgi.service.log.LogService;\n \n-public class AutoConfResourceProcessorTest extends TestCase {\n-    /** Make sure the processor does not accept a 'null' session. */\n-    public void testNullSession() throws Exception {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        try {\n-            p.begin(null);\n-            fail(\"Should have gotten an exception when trying to begin with null session.\");\n+public class AutoConfResourceProcessorTest extends TestCase\n+{\n+    private static class ConfigurationAdminImpl implements ConfigurationAdmin\n+    {\n+        private final String[] m_expectedPIDs;\n+        private final String[] m_expectedFactoryPIDs;\n+        private final Map<String, ConfigurationImpl> m_configs;\n+\n+        public ConfigurationAdminImpl(String... expectedPIDs)\n+        {\n+            this(expectedPIDs, new String[0]);\n         }\n-        catch (Exception e) {\n-            // expected\n+\n+        public ConfigurationAdminImpl(String[] expectedPIDs, String[] expectedFactoryPIDs)\n+        {\n+            m_expectedPIDs = expectedPIDs;\n+            m_expectedFactoryPIDs = expectedFactoryPIDs;\n+\n+            m_configs = new LinkedHashMap<String, ConfigurationImpl>();\n         }\n-    }\n-    \n-    /** Go through a simple session, containing two empty configurations. */\n-    public void testSimpleSession() throws Exception {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        Utils.configureObject(p, LogService.class);\n-        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n-        \tpublic void remove(Component service) {\n-        \t}\n-        });\n-        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n-        tempDir.delete();\n-        tempDir.mkdirs();\n-        \n-        System.out.println(\"Temporary dir: \" + tempDir);\n-        \n-        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n-        Session s = new Session();\n-        p.begin(s);\n-        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n-            public DependencyManager getDependencyManager() {\n-                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n-            }\n-        }));\n-        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n-        p.process(\"b\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n-        p.prepare();\n-        p.commit();\n-        p.postcommit();\n-        Utils.removeDirectoryWithContent(tempDir);\n-    }\n \n-    /** Go through a simple session, containing two empty configurations. */\n-    public void testSimpleInstallAndUninstallSession() throws Throwable {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        Utils.configureObject(p, LogService.class);\n-        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n-        \tpublic void remove(Component service) {\n-        \t}\n-        });\n-        Logger logger = new Logger();\n-        Utils.configureObject(p, LogService.class, logger);\n-        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n-        tempDir.delete();\n-        tempDir.mkdirs();\n-        \n-        System.out.println(\"Temporary dir: \" + tempDir);\n-        \n-        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n-        Session s = new Session();\n-        p.begin(s);\n-        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n-            public DependencyManager getDependencyManager() {\n-                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n-            }\n-        }));\n-        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n-        p.prepare();\n-        p.commit();\n-        p.postcommit();\n-        logger.failOnException();\n-        s = new Session();\n-        p.begin(s);\n-        p.dropped(\"a\");\n-        p.prepare();\n-        p.commit();\n-        p.postcommit();\n-        logger.failOnException();\n-        Utils.removeDirectoryWithContent(tempDir);\n-    }\n-    \n-    /** Go through a simple session, containing two empty configurations. */\n-    public void testBasicConfigurationSession() throws Throwable {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        Logger logger = new Logger();\n-        Utils.configureObject(p, LogService.class, logger);\n-        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n-        \tpublic void remove(Component service) {\n-        \t}\n-        });\n-        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n-        tempDir.delete();\n-        tempDir.mkdirs();\n-        \n-        System.out.println(\"Temporary dir: \" + tempDir);\n-        \n-        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n-        Session s = new Session();\n-        p.begin(s);\n-        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n-            public DependencyManager getDependencyManager() {\n-                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n-            }\n-        }));\n-        String config =\n-            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\\n\" + \n-            \"  <OCD name='ocd' id='ocd'>\\n\" + \n-            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n-            \"  </OCD>\\n\" + \n-            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n-            \"    <Object ocdref='ocd'>\\n\" + \n-            \"      <Attribute adref='name'>\\n\" + \n-            \"        <Value><![CDATA[test]]></Value>\\n\" + \n-            \"      </Attribute>\\n\" + \n-            \"    </Object>\\n\" + \n-            \"  </Designate>\\n\" + \n-            \"</MetaData>\\n\";\n-        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n-        p.prepare();\n-        p.commit();\n-        p.addConfigurationAdmin(null, new ConfigurationAdmin() {\n-            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n-                return null;\n-            }\n-            \n-            public Configuration getConfiguration(String pid, String location) throws IOException {\n-                return new ConfigurationImpl();\n-            }\n-            \n-            public Configuration getConfiguration(String pid) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n-                return null;\n-            }\n-        });\n-        p.postcommit();\n-        logger.failOnException();\n-        Utils.removeDirectoryWithContent(tempDir);\n-    }\n+        public Configuration createFactoryConfiguration(String factoryPid) throws IOException\n+        {\n+            return createFactoryConfiguration(factoryPid, null);\n+        }\n \n-    /** Go through a simple session, containing two empty configurations. */\n-    public void testFilteredConfigurationSession() throws Throwable {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        Logger logger = new Logger();\n-        Utils.configureObject(p, LogService.class, logger);\n-        BundleContext mockBC = (BundleContext) Utils.createMockObjectAdapter(BundleContext.class, new Object() {\n-            public Filter createFilter(String condition) {\n-                return (Filter) Utils.createMockObjectAdapter(Filter.class, new Object() {\n-                    public boolean match(ServiceReference ref) {\n-                        Object id = ref.getProperty(\"id\");\n-                        if (id != null && id.equals(Integer.valueOf(42))) {\n-                            return true;\n-                        }\n-                        return false;\n-                    }\n-                    public void remove(Component service) {\n-                    }\n-                });\n-            }\n-        });\n-\t\tUtils.configureObject(p, BundleContext.class, mockBC);\n-        Utils.configureObject(p, DependencyManager.class, new DependencyManager(mockBC) {\n-        \tpublic void remove(Component service) {\n-        \t}\n-        });\n-        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n-        tempDir.delete();\n-        tempDir.mkdirs();\n-        \n-        System.out.println(\"Temporary dir: \" + tempDir);\n-        \n-        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n-        Session s = new Session();\n-        p.begin(s);\n-        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n-            public DependencyManager getDependencyManager() {\n-                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n-            }\n-        }));\n-        String config =\n-            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0' filter='(id=42)'>\\n\" + \n-            \"  <OCD name='ocd' id='ocd'>\\n\" + \n-            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n-            \"  </OCD>\\n\" + \n-            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n-            \"    <Object ocdref='ocd'>\\n\" + \n-            \"      <Attribute adref='name'>\\n\" + \n-            \"        <Value><![CDATA[test]]></Value>\\n\" + \n-            \"      </Attribute>\\n\" + \n-            \"    </Object>\\n\" + \n-            \"  </Designate>\\n\" + \n-            \"</MetaData>\\n\";\n-        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n-        p.prepare();\n-        p.commit();\n-        Properties props = new Properties();\n-        props.put(\"id\", Integer.valueOf(42));\n-        final Configuration configuration = new ConfigurationImpl();\n-        p.addConfigurationAdmin(new Reference(props), new ConfigurationAdmin() {\n-            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n-                return null;\n-            }\n-            \n-            public Configuration getConfiguration(String pid, String location) throws IOException {\n-                return configuration;\n-            }\n-            \n-            public Configuration getConfiguration(String pid) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n-                return null;\n-            }\n-        });\n-        \n-        final Configuration emptyConfiguration = new ConfigurationImpl();\n-        p.addConfigurationAdmin(new Reference(new Properties()), new ConfigurationAdmin() {\n-            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n-                return null;\n-            }\n-            \n-            public Configuration getConfiguration(String pid, String location) throws IOException {\n-                return emptyConfiguration;\n-            }\n-            \n-            public Configuration getConfiguration(String pid) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n-                return null;\n-            }\n-            \n-            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n-                return null;\n+        public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException\n+        {\n+            if (!isExpected(m_expectedFactoryPIDs, factoryPid))\n+            {\n+                throw new IOException(\"Unexpected factory PID: \" + factoryPid);\n             }\n-        });        \n-        p.postcommit();\n-        logger.failOnException();\n-        assertEquals(\"test\", configuration.getProperties().get(\"name\"));\n-        assertNull(emptyConfiguration.getProperties());\n-        Utils.removeDirectoryWithContent(tempDir);\n-    }\n+            // This should be unique enough for our use cases...\n+            String pid = String.format(\"pid%d\", m_configs.size());\n \n-    /** Go through a simple session, containing two empty configurations. */\n-    public void testMissingMandatoryValueInConfig() throws Throwable {\n-        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n-        Logger logger = new Logger();\n-        Utils.configureObject(p, LogService.class, logger);\n-        BundleContext mockBC = (BundleContext) Utils.createMockObjectAdapter(BundleContext.class, new Object() {\n-            public Filter createFilter(String condition) {\n-                return (Filter) Utils.createMockObjectAdapter(Filter.class, new Object() {\n-                    public boolean match(ServiceReference ref) {\n-                        Object id = ref.getProperty(\"id\");\n-                        if (id != null && id.equals(Integer.valueOf(42))) {\n-                            return true;\n-                        }\n-                        return false;\n-                    }\n-                    public void remove(Component service) {\n-                    }\n-                });\n+            ConfigurationImpl config = m_configs.get(pid);\n+            if (config == null)\n+            {\n+                config = new ConfigurationImpl(factoryPid, pid, location);\n+                m_configs.put(pid, config);\n             }\n-        });\n-        Utils.configureObject(p, BundleContext.class, mockBC);\n-        Utils.configureObject(p, DependencyManager.class, new DependencyManager(mockBC) {\n-            public void remove(Component service) {\n+            config.setBundleLocation(location);\n+            return config;\n+        }\n+\n+        public Configuration getConfiguration(String pid) throws IOException\n+        {\n+            return getConfiguration(pid, null);\n+        }\n+\n+        public Configuration getConfiguration(String pid, String location) throws IOException\n+        {\n+            if (!isExpected(m_expectedPIDs, pid))\n+            {\n+                throw new IOException(\"Unexpected PID: \" + pid);\n             }\n-        });\n-        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n-        tempDir.delete();\n-        tempDir.mkdirs();\n-        \n-        System.out.println(\"Temporary dir: \" + tempDir);\n-        \n-        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n-        Session s = new Session();\n-        p.begin(s);\n-        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n-            public DependencyManager getDependencyManager() {\n-                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n+\n+            ConfigurationImpl config = m_configs.get(pid);\n+            if (config == null)\n+            {\n+                config = new ConfigurationImpl(null, pid, location);\n+                m_configs.put(pid, config);\n             }\n-        }));\n-\n-        String config =\n-            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.1.0' filter='(id=42)'>\\n\" + \n-            \"  <OCD name='ocd' id='ocd'>\\n\" + \n-            \"    <AD id='name' type='Integer' />\\n\" + \n-            \"  </OCD>\\n\" + \n-            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n-            \"    <Object ocdref='ocd'>\\n\" + \n-            \"      <Attribute adref='name'>\\n\" + \n-            \"        <Value><![CDATA[]]></Value>\\n\" + \n-            \"      </Attribute>\\n\" + \n-            \"    </Object>\\n\" + \n-            \"  </Designate>\\n\" + \n-            \"</MetaData>\\n\";\n-        \n-        try\n+            config.setBundleLocation(location);\n+            return config;\n+        }\n+\n+        public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException\n         {\n-            p.process(\"missing-value\", new ByteArrayInputStream(config.getBytes()));\n-            fail(\"Expected ResourceProcessorException for missing value!\");\n+            return null;\n         }\n-        catch (ResourceProcessorException e)\n+\n+        private boolean isExpected(String[] expectedPIDs, String actualPID)\n         {\n-            // Ok; expected...\n-            assertEquals(\"Unable to parse value for definition: adref=name\", e.getMessage());\n+            for (String expectedPID : expectedPIDs)\n+            {\n+                if (actualPID.equals(expectedPID))\n+                {\n+                    return true;\n+                }\n+            }\n+            return false;\n         }\n-        Utils.removeDirectoryWithContent(tempDir);\n     }\n \n-    private static class ConfigurationImpl implements Configuration {\n-        private String m_bundleLocation = \"osgi-dp:location\";\n+    private static class ConfigurationImpl implements Configuration\n+    {\n+        private final String m_factoryPID;\n+        private final String m_pid;\n+        private String m_bundleLocation;\n         private Dictionary m_properties;\n+        private boolean m_deleted;\n \n-        public String getPid() {\n-            return null;\n+        public ConfigurationImpl(String factoryPid, String pid, String bundleLocation)\n+        {\n+            m_factoryPID = factoryPid;\n+            m_pid = pid;\n+            m_bundleLocation = bundleLocation;\n         }\n \n-        public Dictionary getProperties() {\n-            return m_properties;\n+        public void delete() throws IOException\n+        {\n+            m_deleted = true;\n         }\n \n-        public void update(Dictionary properties) throws IOException {\n-            m_properties = properties;\n+        public String getBundleLocation()\n+        {\n+            return m_bundleLocation;\n         }\n \n-        public void delete() throws IOException {\n+        public String getFactoryPid()\n+        {\n+            return m_factoryPID;\n         }\n \n-        public String getFactoryPid() {\n-            return null;\n+        public String getPid()\n+        {\n+            return m_pid;\n         }\n \n-        public void update() throws IOException {\n+        public Dictionary getProperties()\n+        {\n+            return m_properties;\n         }\n \n-        public void setBundleLocation(String bundleLocation) {\n+        public void setBundleLocation(String bundleLocation)\n+        {\n+            if (m_bundleLocation != null && !m_bundleLocation.equals(bundleLocation))\n+            {\n+                throw new RuntimeException(\"Configuration already bound to location: \" + m_bundleLocation + \" (trying to set to: \" + bundleLocation + \")\");\n+            }\n             m_bundleLocation = bundleLocation;\n         }\n \n-        public String getBundleLocation() {\n-            return m_bundleLocation;\n+        public void update() throws IOException\n+        {\n+        }\n+\n+        public void update(Dictionary properties) throws IOException\n+        {\n+            m_properties = properties;\n         }\n     }\n \n     /** Dummy session. */\n-    private static class Session implements DeploymentSession {\n-        public DeploymentPackage getTargetDeploymentPackage() {\n+    private static class DeploymentSessionImpl implements DeploymentSession\n+    {\n+        public File getDataFile(Bundle bundle)\n+        {\n             return null;\n         }\n-        public DeploymentPackage getSourceDeploymentPackage() {\n+\n+        public DeploymentPackage getSourceDeploymentPackage()\n+        {\n             return null;\n         }\n-        public File getDataFile(Bundle bundle) {\n+\n+        public DeploymentPackage getTargetDeploymentPackage()\n+        {\n             return null;\n         }\n+\n+        @Override\n+        public String toString()\n+        {\n+            return \"Test DeploymentSession @ 0x\" + System.identityHashCode(this);\n+        }\n     }\n-    \n-    private static class Logger implements LogService {\n+\n+    private static class LogServiceImpl implements LogService\n+    {\n         private static final String[] LEVEL = { \"\", \"[ERROR]\", \"[WARN ]\", \"[INFO ]\", \"[DEBUG]\" };\n         private Throwable m_exception;\n-        \n-        public void log(int level, String message) {\n+\n+        public void failOnException() throws Throwable\n+        {\n+            if (m_exception != null)\n+            {\n+                throw m_exception;\n+            }\n+        }\n+\n+        public void log(int level, String message)\n+        {\n             System.out.println(LEVEL[level] + \" - \" + message);\n         }\n \n-        public void log(int level, String message, Throwable exception) {\n+        public void log(int level, String message, Throwable exception)\n+        {\n             System.out.println(LEVEL[level] + \" - \" + message + \" - \" + exception.getMessage());\n             m_exception = exception;\n         }\n \n-        public void log(ServiceReference sr, int level, String message) {\n+        public void log(ServiceReference sr, int level, String message)\n+        {\n             System.out.println(LEVEL[level] + \" - \" + message);\n         }\n \n-        public void log(ServiceReference sr, int level, String message, Throwable exception) {\n+        public void log(ServiceReference sr, int level, String message, Throwable exception)\n+        {\n             System.out.println(LEVEL[level] + \" - \" + message + \" - \" + exception.getMessage());\n             m_exception = exception;\n         }\n-        \n-        public void failOnException() throws Throwable {\n-            if (m_exception != null) {\n-                throw m_exception;\n-            }\n-        }\n     }\n-    private static class Reference implements ServiceReference {\n-        private final Dictionary m_properties;\n \n-        public Reference(Dictionary properties) {\n+    private static class ServiceReferenceImpl implements ServiceReference\n+    {\n+        private final Properties m_properties;\n+\n+        public ServiceReferenceImpl()\n+        {\n+            this(new Properties());\n+        }\n+\n+        public ServiceReferenceImpl(Properties properties)\n+        {\n             m_properties = properties;\n         }\n \n-        public Object getProperty(String key) {\n-            return m_properties.get(key);\n+        public int compareTo(Object reference)\n+        {\n+            return 0;\n         }\n \n-        public String[] getPropertyKeys() {\n+        public Bundle getBundle()\n+        {\n             return null;\n         }\n \n-        public Bundle getBundle() {\n-            return null;\n+        public Object getProperty(String key)\n+        {\n+            return m_properties.get(key);\n         }\n \n-        public Bundle[] getUsingBundles() {\n+        public String[] getPropertyKeys()\n+        {\n+            return Collections.list(m_properties.keys()).toArray(new String[0]);\n+        }\n+\n+        public Bundle[] getUsingBundles()\n+        {\n             return null;\n         }\n \n-        public boolean isAssignableTo(Bundle bundle, String className) {\n+        public boolean isAssignableTo(Bundle bundle, String className)\n+        {\n             return false;\n         }\n \n-        public int compareTo(Object reference) {\n-            return 0;\n+        @Override\n+        public String toString()\n+        {\n+            return \"Test ConfigAdmin @ 0x\" + System.identityHashCode(this);\n+        }\n+    }\n+\n+    private File m_tempDir;\n+    private LogServiceImpl m_logger;\n+\n+    /** Go through a simple session, containing two empty configurations. */\n+    public void testBasicConfigurationSession() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+        String config = \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\\n\" +\n+            \"  <OCD name='ocd' id='ocd'>\\n\" +\n+            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" +\n+            \"  </OCD>\\n\" +\n+            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" +\n+            \"    <Object ocdref='ocd'>\\n\" +\n+            \"      <Attribute adref='name'>\\n\" +\n+            \"        <Value><![CDATA[test]]></Value>\\n\" +\n+            \"      </Attribute>\\n\" +\n+            \"    </Object>\\n\" +\n+            \"  </Designate>\\n\" +\n+            \"</MetaData>\\n\";\n+        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n+        p.prepare();\n+        p.commit();\n+        p.addConfigurationAdmin(new ServiceReferenceImpl(), new ConfigurationAdminImpl(\"simple\"));\n+        p.postcommit();\n+        m_logger.failOnException();\n+    }\n+\n+    /** Go through a simple session, containing two empty configurations. */\n+    public void testFilteredConfigurationSession() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+        String config = \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0' filter='(id=42)'>\\n\" +\n+            \"  <OCD name='ocd' id='ocd'>\\n\" +\n+            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" +\n+            \"  </OCD>\\n\" +\n+            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" +\n+            \"    <Object ocdref='ocd'>\\n\" +\n+            \"      <Attribute adref='name'>\\n\" +\n+            \"        <Value><![CDATA[test]]></Value>\\n\" +\n+            \"      </Attribute>\\n\" +\n+            \"    </Object>\\n\" +\n+            \"  </Designate>\\n\" +\n+            \"</MetaData>\\n\";\n+        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n+        p.prepare();\n+        p.commit();\n+\n+        Properties props = new Properties();\n+        props.put(\"id\", Integer.valueOf(42));\n+\n+        ConfigurationAdminImpl ca1 = new ConfigurationAdminImpl(\"simple\");\n+        ConfigurationAdminImpl ca2 = new ConfigurationAdminImpl();\n+\n+        p.addConfigurationAdmin(new ServiceReferenceImpl(props), ca1);\n+        p.addConfigurationAdmin(new ServiceReferenceImpl(), ca2);\n+        p.postcommit();\n+\n+        m_logger.failOnException();\n+\n+        assertEquals(\"test\", ca1.m_configs.get(\"simple\").getProperties().get(\"name\"));\n+        assertTrue(ca2.m_configs.isEmpty());\n+    }\n+\n+    /** Go through a simple session, containing two empty configurations. */\n+    public void testMissingMandatoryValueInConfig() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+\n+        String config = \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.1.0' filter='(id=42)'>\\n\" +\n+            \"  <OCD name='ocd' id='ocd'>\\n\" +\n+            \"    <AD id='name' type='Integer' />\\n\" +\n+            \"  </OCD>\\n\" +\n+            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" +\n+            \"    <Object ocdref='ocd'>\\n\" +\n+            \"      <Attribute adref='name'>\\n\" +\n+            \"        <Value><![CDATA[]]></Value>\\n\" +\n+            \"      </Attribute>\\n\" +\n+            \"    </Object>\\n\" +\n+            \"  </Designate>\\n\" +\n+            \"</MetaData>\\n\";\n+\n+        try\n+        {\n+            p.process(\"missing-value\", new ByteArrayInputStream(config.getBytes()));\n+            fail(\"Expected ResourceProcessorException for missing value!\");\n+        }\n+        catch (ResourceProcessorException e)\n+        {\n+            // Ok; expected...\n+            assertEquals(\"Unable to parse value for definition: adref=name\", e.getMessage());\n+        }\n+    }\n+\n+    /** Make sure the processor does not accept a 'null' session. */\n+    public void testNullSession() throws Exception\n+    {\n+        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n+        try\n+        {\n+            p.begin(null);\n+            fail(\"Should have gotten an exception when trying to begin with null session.\");\n+        }\n+        catch (Exception e)\n+        {\n+            // expected\n         }\n     }\n+\n+    /** Go through a simple session, containing two empty configurations. */\n+    public void testSimpleInstallAndUninstallSession() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+\n+        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n+        p.prepare();\n+        p.commit();\n+        p.postcommit();\n+        m_logger.failOnException();\n+\n+        createNewSession(p);\n+\n+        p.dropAllResources();\n+        p.prepare();\n+        p.commit();\n+        p.postcommit();\n+        m_logger.failOnException();\n+    }\n+\n+    /** Go through a simple session, containing two empty configurations. */\n+    public void testSimpleSession() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n+        p.process(\"b\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n+        p.prepare();\n+        p.commit();\n+        p.postcommit();\n+        m_logger.failOnException();\n+    }\n+\n+    /** Tests that we can update an existing configuration and properly handling deleted & updated configurations. */\n+    public void testUpdateConfigurationSession() throws Throwable\n+    {\n+        AutoConfResourceProcessor p = createAutoConfRP();\n+\n+        createNewSession(p);\n+\n+        String config1 = \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\" +\n+            \"<OCD name='ocd1' id='ocd1'>\" +\n+            \"  <AD id='nameA' type='STRING' cardinality='0' />\" +\n+            \"</OCD>\" +\n+            \"<OCD name='ocd2' id='ocd2'>\" +\n+            \"  <AD id='nameB' type='STRING' cardinality='0' />\" +\n+            \"</OCD>\" +\n+            \"<Designate pid='pid2' bundle='osgi-dp:location2'>\" +\n+            \"  <Object ocdref='ocd2'>\" +\n+            \"    <Attribute adref='nameB'>\" +\n+            \"      <Value><![CDATA[test2]]></Value>\" +\n+            \"    </Attribute>\" +\n+            \"  </Object>\" +\n+            \"</Designate>\" +\n+            \"<Designate pid='pid1' bundle='osgi-dp:location1'>\" +\n+            \"  <Object ocdref='ocd1'>\" +\n+            \"    <Attribute adref='nameA'>\" +\n+            \"      <Value><![CDATA[test1]]></Value>\" +\n+            \"    </Attribute>\" +\n+            \"  </Object>\" +\n+            \"</Designate>\" +\n+            \"</MetaData>\";\n+\n+        ConfigurationAdminImpl ca = new ConfigurationAdminImpl(\"pid1\", \"pid2\", \"pid3\");\n+\n+        p.process(\"update\", new ByteArrayInputStream(config1.getBytes()));\n+        p.prepare();\n+        p.commit();\n+        p.addConfigurationAdmin(new ServiceReferenceImpl(), ca);\n+        p.postcommit();\n+        m_logger.failOnException();\n+\n+        assertEquals(2, ca.m_configs.size());\n+        assertTrue(ca.m_configs.containsKey(\"pid1\"));\n+        assertFalse(ca.m_configs.get(\"pid1\").m_deleted);\n+        assertEquals(\"test1\", ca.m_configs.get(\"pid1\").getProperties().get(\"nameA\"));\n+\n+        assertTrue(ca.m_configs.containsKey(\"pid2\"));\n+        assertFalse(ca.m_configs.get(\"pid2\").m_deleted);\n+        assertEquals(\"test2\", ca.m_configs.get(\"pid2\").getProperties().get(\"nameB\"));\n+\n+        String config2 = \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\" +\n+            \"<OCD name='ocd3' id='ocd3'>\" +\n+            \"  <AD id='nameC' type='STRING' cardinality='0' />\" +\n+            \"</OCD>\" +\n+            \"<OCD name='ocd2' id='ocd2'>\" +\n+            \"  <AD id='nameB' type='STRING' cardinality='0' />\" +\n+            \"</OCD>\" +\n+            \"<Designate pid='pid2' bundle='osgi-dp:location2'>\" +\n+            \"  <Object ocdref='ocd2'>\" +\n+            \"    <Attribute adref='nameB'>\" +\n+            \"      <Value><![CDATA[test4]]></Value>\" +\n+            \"    </Attribute>\" +\n+            \"  </Object>\" +\n+            \"</Designate>\" +\n+            \"<Designate pid='pid3' bundle='osgi-dp:location3'>\" +\n+            \"  <Object ocdref='ocd3'>\" +\n+            \"    <Attribute adref='nameC'>\" +\n+            \"      <Value><![CDATA[test3]]></Value>\" +\n+            \"    </Attribute>\" +\n+            \"  </Object>\" +\n+            \"</Designate>\" +\n+            \"</MetaData>\";\n+\n+        createNewSession(p);\n+\n+        p.process(\"update\", new ByteArrayInputStream(config2.getBytes()));\n+        p.prepare();\n+        p.commit();\n+        p.addConfigurationAdmin(new ServiceReferenceImpl(), ca);\n+        p.postcommit();\n+        m_logger.failOnException();\n+\n+        assertEquals(3, ca.m_configs.size());\n+        assertTrue(ca.m_configs.containsKey(\"pid1\"));\n+        assertTrue(ca.m_configs.get(\"pid1\").m_deleted);\n+        assertEquals(\"test1\", ca.m_configs.get(\"pid1\").getProperties().get(\"nameA\"));\n+\n+        assertTrue(ca.m_configs.containsKey(\"pid2\"));\n+        assertFalse(ca.m_configs.get(\"pid2\").m_deleted);\n+        assertEquals(\"test4\", ca.m_configs.get(\"pid2\").getProperties().get(\"nameB\"));\n+\n+        assertTrue(ca.m_configs.containsKey(\"pid3\"));\n+        assertFalse(ca.m_configs.get(\"pid3\").m_deleted);\n+        assertEquals(\"test3\", ca.m_configs.get(\"pid3\").getProperties().get(\"nameC\"));\n+    }\n+\n+    @Override\n+    protected void setUp() throws IOException\n+    {\n+        m_tempDir = File.createTempFile(\"persistence\", \"dir\");\n+        m_tempDir.delete();\n+        m_tempDir.mkdirs();\n+\n+        m_logger = new LogServiceImpl();\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception\n+    {\n+        Utils.removeDirectoryWithContent(m_tempDir);\n+    }\n+\n+    private AutoConfResourceProcessor createAutoConfRP()\n+    {\n+        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n+        Utils.configureObject(p, LogService.class, m_logger);\n+        Utils.configureObject(p, DependencyManager.class, createMockDM());\n+        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(m_tempDir));\n+        return p;\n+    }\n+\n+    @SuppressWarnings(\"unused\")\n+    private BundleContext createMockBundleContext()\n+    {\n+        return Utils.createMockObjectAdapter(BundleContext.class, new Object()\n+        {\n+            public Filter createFilter(String condition)\n+            {\n+                return Utils.createMockObjectAdapter(Filter.class, new Object()\n+                {\n+                    public boolean match(ServiceReference ref)\n+                    {\n+                        Object id = ref.getProperty(\"id\");\n+                        if (id != null && id.equals(Integer.valueOf(42)))\n+                        {\n+                            return true;\n+                        }\n+                        return false;\n+                    }\n+\n+                    public void remove(Component service)\n+                    {\n+                    }\n+                });\n+            }\n+        });\n+    }\n+\n+    @SuppressWarnings(\"unused\")\n+    private Component createMockComponent()\n+    {\n+        return Utils.createMockObjectAdapter(Component.class, new Object()\n+        {\n+            public DependencyManager getDependencyManager()\n+            {\n+                return new DependencyManager(createMockBundleContext());\n+            }\n+        });\n+    }\n+\n+    private DependencyManager createMockDM()\n+    {\n+        return new DependencyManager(createMockBundleContext())\n+        {\n+            public void remove(Component service)\n+            {\n+            }\n+        };\n+    }\n+\n+    private DeploymentSession createNewSession(AutoConfResourceProcessor p)\n+    {\n+        DeploymentSessionImpl s = new DeploymentSessionImpl();\n+        p.begin(s);\n+        Utils.configureObject(p, Component.class, createMockComponent());\n+        return s;\n+    }\n }", "filename": "deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/AutoConfResourceProcessorTest.java"}, {"additions": 27, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/DefaultNullObject.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/DefaultNullObject.java", "sha": "e6b827c3af5098b3ae6d8d5118b9d24aec702b1e", "changes": 45, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/DefaultNullObject.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -21,50 +21,59 @@\n import java.lang.reflect.InvocationHandler;\n import java.lang.reflect.Method;\n \n-\n /**\n  * Default null object implementation. Uses a dynamic proxy. Null objects are used\n  * as placeholders for services that are not available.\n  * \n  * @author <a href=\"mailto:dev@felix.apache.org\">Felix Project Team</a>\n  */\n-public class DefaultNullObject implements InvocationHandler {\n+public class DefaultNullObject implements InvocationHandler\n+{\n     private static final Boolean DEFAULT_BOOLEAN = Boolean.FALSE;\n     private static final Byte DEFAULT_BYTE = new Byte((byte) 0);\n     private static final Short DEFAULT_SHORT = new Short((short) 0);\n     private static final Integer DEFAULT_INT = new Integer(0);\n     private static final Long DEFAULT_LONG = new Long(0);\n     private static final Float DEFAULT_FLOAT = new Float(0.0f);\n     private static final Double DEFAULT_DOUBLE = new Double(0.0);\n-    \n+\n     /**\n      * Invokes a method on this null object. The method will return a default\n      * value without doing anything.\n      */\n-    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable\n+    {\n         Class returnType = method.getReturnType();\n-        if (returnType.equals(Boolean.class) || returnType.equals(Boolean.TYPE)) {\n+        if (returnType.equals(Boolean.class) || returnType.equals(Boolean.TYPE))\n+        {\n             return DEFAULT_BOOLEAN;\n         }\n-        else if (returnType.equals(Byte.class) || returnType.equals(Byte.TYPE)) {\n+        else if (returnType.equals(Byte.class) || returnType.equals(Byte.TYPE))\n+        {\n             return DEFAULT_BYTE;\n-        } \n-        else if (returnType.equals(Short.class) || returnType.equals(Short.TYPE)) {\n+        }\n+        else if (returnType.equals(Short.class) || returnType.equals(Short.TYPE))\n+        {\n             return DEFAULT_SHORT;\n-        } \n-        else if (returnType.equals(Integer.class) || returnType.equals(Integer.TYPE)) {\n+        }\n+        else if (returnType.equals(Integer.class) || returnType.equals(Integer.TYPE))\n+        {\n             return DEFAULT_INT;\n-        } \n-        else if (returnType.equals(Long.class) || returnType.equals(Long.TYPE)) {\n+        }\n+        else if (returnType.equals(Long.class) || returnType.equals(Long.TYPE))\n+        {\n             return DEFAULT_LONG;\n-        } \n-        else if (returnType.equals(Float.class) || returnType.equals(Float.TYPE)) {\n+        }\n+        else if (returnType.equals(Float.class) || returnType.equals(Float.TYPE))\n+        {\n             return DEFAULT_FLOAT;\n-        } \n-        else if (returnType.equals(Double.class) || returnType.equals(Double.TYPE)) {\n+        }\n+        else if (returnType.equals(Double.class) || returnType.equals(Double.TYPE))\n+        {\n             return DEFAULT_DOUBLE;\n-        } \n-        else {\n+        }\n+        else\n+        {\n             return null;\n         }\n     }", "filename": "deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/DefaultNullObject.java"}, {"additions": 99, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/PersistencyManagerTest.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/PersistencyManagerTest.java", "sha": "07bfe30700a5ee0ec57d4d4b624f6232d0d765d1", "changes": 99, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/PersistencyManagerTest.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.felix.deployment.rp.autoconf;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Hashtable;\n+\n+import org.osgi.framework.Filter;\n+import org.osgi.framework.FrameworkUtil;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Test cases for {@link PersistencyManager}.\n+ */\n+public class PersistencyManagerTest extends TestCase\n+{\n+    private File m_tempDir;\n+\n+    public void testHandleNonExistingDirectory() throws Exception\n+    {\n+        PersistencyManager pm = new PersistencyManager(new File(\"/does/not/exist\"));\n+        assertNotNull(pm);\n+\n+        assertEquals(0, pm.getResourceNames().size());\n+    }\n+\n+    public void testHandleEmptyExistingDirectory() throws Exception\n+    {\n+        PersistencyManager pm = new PersistencyManager(m_tempDir);\n+        assertNotNull(pm);\n+\n+        assertEquals(0, pm.getResourceNames().size());\n+    }\n+\n+    public void testLoadNonExistingResource() throws Exception\n+    {\n+        PersistencyManager pm = new PersistencyManager(m_tempDir);\n+        assertEquals(0, pm.load(\"doesNotExist\").size());\n+    }\n+\n+    public void testSaveResourceWithoutFilter() throws Exception\n+    {\n+        AutoConfResource res1 = new AutoConfResource(\"res1\", \"pid1\", null, \"osgi-dp:locationA\", false, new Hashtable<String, Object>(), null);\n+        AutoConfResource res2 = new AutoConfResource(\"res2\", \"pid2\", null, \"osgi-dp:locationB\", false, new Hashtable<String, Object>(), null);\n+\n+        PersistencyManager pm = new PersistencyManager(m_tempDir);\n+        pm.store(\"test1\", Arrays.asList(res1, res2));\n+\n+        assertEquals(2, pm.load(\"test1\").size());\n+    }\n+\n+    public void testSaveResourceWithFilter() throws Exception\n+    {\n+        Filter f = FrameworkUtil.createFilter(\"(name=test)\");\n+\n+        AutoConfResource res1 = new AutoConfResource(\"res1\", \"pid1\", null, \"osgi-dp:locationA\", false, new Hashtable<String, Object>(), f);\n+        AutoConfResource res2 = new AutoConfResource(\"res2\", \"pid2\", null, \"osgi-dp:locationB\", false, new Hashtable<String, Object>(), null);\n+\n+        PersistencyManager pm = new PersistencyManager(m_tempDir);\n+        pm.store(\"test1\", Arrays.asList(res1, res2));\n+\n+        assertEquals(2, pm.load(\"test1\").size());\n+    }\n+\n+    @Override\n+    protected void setUp() throws IOException\n+    {\n+        m_tempDir = File.createTempFile(\"persistence\", \"dir\");\n+        m_tempDir.delete();\n+        m_tempDir.mkdirs();\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception\n+    {\n+        Utils.removeDirectoryWithContent(m_tempDir);\n+    }\n+\n+}", "filename": "deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/PersistencyManagerTest.java"}, {"additions": 42, "raw_url": "https://github.com/apache/felix/raw/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/Utils.java", "blob_url": "https://github.com/apache/felix/blob/cf6665e272505981b8236f3c6a54ac5be888ed8b/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/Utils.java", "sha": "a13d5e79c364f77f6275878af1ebeb25264c707e", "changes": 65, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/felix/contents/deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/Utils.java?ref=cf6665e272505981b8236f3c6a54ac5be888ed8b", "patch": "@@ -28,14 +28,16 @@\n /**\n  * Utility class that injects dependencies. Can be used to unit test service implementations.\n  */\n-public class Utils {\n+public class Utils\n+{\n     /**\n      * Configures an object to use a null object for the specified service interface.\n      *\n      * @param object the object\n      * @param iface the service interface\n      */\n-    public static void configureObject(Object object, Class iface) {\n+    public static void configureObject(Object object, Class iface)\n+    {\n         configureObject(object, iface, createNullObject(iface));\n     }\n \n@@ -45,8 +47,9 @@ public static void configureObject(Object object, Class iface) {\n      * @param iface the service interface\n      * @return a null object\n      */\n-    public static Object createNullObject(Class iface) {\n-        return Proxy.newProxyInstance(iface.getClassLoader(), new Class[] { iface }, new DefaultNullObject());\n+    public static <T> T createNullObject(Class<T> iface)\n+    {\n+        return (T) Proxy.newProxyInstance(iface.getClassLoader(), new Class[] { iface }, new DefaultNullObject());\n     }\n \n     /**\n@@ -57,19 +60,24 @@ public static Object createNullObject(Class iface) {\n      * @param handler the handler to pass invocations to.\n      * @return an adapter that will try to pass on received invocations to the given handler\n      */\n-    public static Object createMockObjectAdapter(Class iface, final Object handler) {\n-        return Proxy.newProxyInstance(iface.getClassLoader(), new Class[] { iface }, new DefaultNullObject() {\n-\n-            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n-                try {\n+    public static <T> T createMockObjectAdapter(Class<T> iface, final Object handler)\n+    {\n+        return (T) Proxy.newProxyInstance(iface.getClassLoader(), new Class[] { iface }, new DefaultNullObject()\n+        {\n+            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable\n+            {\n+                try\n+                {\n                     Method bridge = handler.getClass().getMethod(method.getName(), method.getParameterTypes());\n                     bridge.setAccessible(true);\n                     return bridge.invoke(handler, args);\n                 }\n-                catch (NoSuchMethodException ex) {\n+                catch (NoSuchMethodException ex)\n+                {\n                     return super.invoke(proxy, method, args);\n                 }\n-                catch (InvocationTargetException ex) {\n+                catch (InvocationTargetException ex)\n+                {\n                     throw ex.getCause();\n                 }\n             }\n@@ -83,42 +91,53 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n      * @param iface the service interface\n      * @param instance the implementation\n      */\n-    public static void configureObject(Object object, Class iface, Object instance) {\n+    public static void configureObject(Object object, Class iface, Object instance)\n+    {\n         Class serviceClazz = object.getClass();\n \n-        while (serviceClazz != null) {\n+        while (serviceClazz != null)\n+        {\n             Field[] fields = serviceClazz.getDeclaredFields();\n             AccessibleObject.setAccessible(fields, true);\n-            for (int j = 0; j < fields.length; j++) {\n-                if (fields[j].getType().equals(iface)) {\n-                    try {\n+            for (int j = 0; j < fields.length; j++)\n+            {\n+                if (fields[j].getType().equals(iface))\n+                {\n+                    try\n+                    {\n                         // synchronized makes sure the field is actually written to immediately\n-                        synchronized (new Object()) {\n+                        synchronized (new Object())\n+                        {\n                             fields[j].set(object, instance);\n                         }\n                     }\n-                    catch (Exception e) {\n+                    catch (Exception e)\n+                    {\n                         throw new IllegalStateException(\"Could not set field \" + fields[j].getName() + \" on \" + object);\n                     }\n                 }\n             }\n             serviceClazz = serviceClazz.getSuperclass();\n         }\n     }\n-    \n+\n     /**\n      * Remove the given directory and all it's files and subdirectories\n      * \n      * @param directory the name of the directory to remove\n      */\n-    public static void removeDirectoryWithContent(File directory) {\n-        if ((directory == null) || !directory.exists()) {\n+    public static void removeDirectoryWithContent(File directory)\n+    {\n+        if ((directory == null) || !directory.exists())\n+        {\n             return;\n         }\n         File[] filesAndSubDirs = directory.listFiles();\n-        for (int i=0; i < filesAndSubDirs.length; i++) {\n+        for (int i = 0; i < filesAndSubDirs.length; i++)\n+        {\n             File file = filesAndSubDirs[i];\n-            if (file.isDirectory()) {\n+            if (file.isDirectory())\n+            {\n                 removeDirectoryWithContent(file);\n             }\n             // else just remove the file", "filename": "deploymentadmin/autoconf/src/test/java/org/apache/felix/deployment/rp/autoconf/Utils.java"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/f7defd32d8075bbc6d6f41b0482e8aa8775ce7ab", "parent": "https://github.com/apache/felix/commit/f275ff7443ad8f696dfda36f25a3e95b3335c944", "message": "Changes from 4.2.0 to 4.2.4\n---------------------------\n** Bug\n    * [FELIX-3817] - Form parameters might clash with configuration parameters\n    * [FELIX-4558] - Web Console Service plugin doesn&#39;t list properties with value 0\n    * [FELIX-4562] - Web Console License plugin fails to load files\n    * [FELIX-4572] - Web Console may cause NPE on refresh packages\n    * [FELIX-4610] - WebConsole doesn&#39;t start with Java Security enabled\n    * [FELIX-4652] - Security problem with AbstractWebConsolePlugin.spoolResource\n    * [FELIX-4660] - Security problem in WebConsoleUtil.getParameter() method\n    * [FELIX-4662] - WebConsole Xdialog javascript function is not working correctly\n                \n** New Feature\n    * [FELIX-3848] - Differentiate between unbound and new configuration\n    * [FELIX-4711] - Web Console: False AJAX error displayed on deleting or unbinding config\n\nChanges from 4.0.0 to 4.2.0\n---------------------------\n\n** Bug\n    * [FELIX-3318] - NPE in WebConsole when trying to uninstall a bundle\n    * [FELIX-3570] - Commons IO dependency issue\n    * [FELIX-3605] - Configuration Status plugin has an error in IE/Compatibility View\n    * [FELIX-3663] - Java Runtime in the System Information tab appears as 'null(build null)' in Skelmir CEE-J VM\n    * [FELIX-3666] - NPE when uninstalling a bundle\n    * [FELIX-3694] - In some cases web console cannot edit configs without metatype\n    * [FELIX-3783] - ConfigurationAdminConfigurationPrinter failing if Configuration Admin API not bound\n    * [FELIX-3784] - Configuration Admin tab not working when Metatype Service API is missing\n    * [FELIX-3795] - JS Error in Configuration Status printing\n    * [FELIX-3814] - Javascript error when directly invoking a configuration with IE8\n    * [FELIX-3829] - NullPointerException when creating configuration with multi-value password properties\n    * [FELIX-3841] - CSS issues in IE with Web Console menus\n    * [FELIX-3936] - Main menu items hidden in the Configuration Status page\n    * [FELIX-3946] - NullPointerException in BundleServlet.bundleDetails when not called through HTTP\n    * [FELIX-3965] - threads configuration status generates invalid results\n    * [FELIX-3969] - web console shows invalid bundle symbolic name\n    * [FELIX-3986] - ThreadDumper comparators are not correctly implemented\n    * [FELIX-4074] - Plugin class name changed for config manager plugin, might be disabled on update\n \n** Improvement\n    * [FELIX-2234] - Reduce status information from bundle plugin\n    * [FELIX-3594] - Service should be sorted by ID in service configuration printer\n    * [FELIX-3798] - Make default category configurable\n    * [FELIX-3799] - Sort plugin plugin links by title\n    * [FELIX-3851] - Allow for refresh after bundle update/install\n    * [FELIX-3861] - Set felix.webconsole.category on Web Console plugins\n    * [FELIX-3951] - Let users able to specify the directory used to temporarily store uploaded files\n\n** New Feature\n    * [FELIX-2896] - Add support for bundle info providers\n    * [FELIX-3769] - Improve the way Web Console UI manages growing number of plugins.\n    * [FELIX-3770] - Upgrade jquery-ui to 1.9.1\n\n** Task\n    * [FELIX-3778] - Create all-in-one WebConsole build again\n    * [FELIX-3833] - Consider backwards compatibility break with label map due to Categories\n    * [FELIX-3834] - Create separate language fragment bundles\n    * [FELIX-3874] - Create new status printer module\n\n\nChanges from 3.1.8 to 4.0.0\n---------------------------\n\n** Bug\n    * [FELIX-1865] - Metatype resolving mechanism does not seem to work correctly\n    * [FELIX-2707] - Webconsole does not resolve resource bundle properly\n    * [FELIX-2708] - Webconsole causes NPE in Bundle.getResource(String)\n    * [FELIX-2727] - WebConsole logs an error not being able to create the DepPackServlet\n    * [FELIX-2830] - Tablesorter loses it's styling if placed in JQuery TAB component\n    * [FELIX-2855] - WebConsole cannot read the list of enabled plugins when using FileInstall\n    * [FELIX-2879] - Metatype Service confuses the id of the OCD with the Designate.pid/factoryPid.\n    * [FELIX-2889] - Invalid JSON content in http response after starting or stopping a bundle.\n    * [FELIX-2971] - Configuration changes cannot be made via Felix Web Console in IE7\n    * [FELIX-2979] - Declarative Services Components page only displayed if Configuration Admin and Metatype Service API is available\n    * [FELIX-3010] - XSS in Felix Web Console\n    * [FELIX-3028] - Better handle configuration unbinding\n    * [FELIX-3116] - Saving configuration shows \"AJAX error\" dialog\n    * [FELIX-3132] - Extensions not properly supported\n    * [FELIX-3268] - Cannot build webconsole and webconsole-plugins with JDK 7\n    * [FELIX-3284] - NullPointerException may be thrown if asynchronous bundle update fails\n    * [FELIX-3285] - Wrong vector and array handling in Configuration Admin plugin\n    * [FELIX-3311] - Cookie handling seems not to work anymore\n    * [FELIX-3320] - WebConsole UX: actions and status on bundle details don't update properly\n    * [FELIX-3404] - Web Admin Log Plugin stops listing of log entries if message is null.\n    * [FELIX-3405] - NPE in Web Console\n    * [FELIX-3406] - Localization in Web Console doesn't work anymore\n    * [FELIX-3408] - Web Console date chooser shows garbage text\n    * [FELIX-3433] - WebConsole default ajax error handlers doesn't work with IE\n    * [FELIX-3469] - Type mismatch JS error using the memoryusage plugin\n    * [FELIX-3473] - web console config manager plugin no longer works with J9\n    * [FELIX-3485] - ui-bg_glass_55_fbf9ee_1x400.png does not exist in admin_compat.css\n\n** Improvement\n    * [FELIX-2117] - Use DynamicImport instead of Optional Packages\n    * [FELIX-2697] - Allow enable/disable internal plugins dynamically\n    * [FELIX-3014] - Have a way to \"deep link\" to a particular tab within Configuration Status\n    * [FELIX-3022] - Add Uptime indication to Status page\n    * [FELIX-3024] - Add Delete and Unbind buttons to Configuration Detail dialogs\n    * [FELIX-3025] - Add a configuration status list with a short bundle list\n    * [FELIX-3027] - Make download links for single configuration status file (or ZIP file) more prominent\n    * [FELIX-3040] - Configuration status dump should contain a timestamp when the dump has been taken\n    * [FELIX-3099] - Separate Deployment Admin plugin\n    * [FELIX-3100] - Separate SCR plugin\n    * [FELIX-3107] - Separate Shell Plugin\n    * [FELIX-3111] - Separate OBR Plugin\n    * [FELIX-3168] - Add support for new PASSWORD attribute type of Metatype service\n    * [FELIX-3236] - Make language selection cookie longer lasting\n    * [FELIX-3282] - Generate default fields for configurations without descriptor\n    * [FELIX-3290] - Improve Cookie handling of the Web Console\n    * [FELIX-3298] - Add animal sniffer plugin to ensure no using any non-Java 1.4 API\n    * [FELIX-3315] - Log plugin does not show the bundle that has logged the event\n    * [FELIX-3316] - Log plugin should provide more detailed exception column\n    * [FELIX-3417] - Web Console Inconsistent status text\n    * [FELIX-3418] - Sort threads by name in Configuration Status -> Threads\n    * [FELIX-3482] - Text wrapping goes out of bounds in Configuration Status\n    * [FELIX-3491] - Better activity indication when pressing refresh/update bundle buttons \n    * [FELIX-3502] - Improve Threads web console printer\n\n** New Feature\n    * [FELIX-2709] - Allow webconsole context root be obtained from framework properties\n\n** Task\n    * [FELIX-2904] - Inlined required/embedded dependencies\n    * [FELIX-3279] - Drop default build and use bare profile as the single build\n    * [FELIX-3280] - Update to use parent POM 2.1\n    * [FELIX-3281] - Use bundle plugin 2.3.6 and BND annotations for package export\n    * [FELIX-3490] - Notice included OSGi classes\n\n\nChanges from 3.1.6 to 3.1.8\n---------------------------\n\n** Bug\n    * [FELIX-2713] - Problem in HtmlConfigurationWriter\n    * [FELIX-2729] - Webconsole - Configuration fails to print configuration for bundles without MetatypeService config\n    * [FELIX-2735] - ClassCastException in PermissionsConfigurationPrinter\n    * [FELIX-2793] - Plugin request is not detected as html request if context path contains a dot\n    * [FELIX-2795] - Parameters are not removed from symbolic name when installing a bundle\n\n\nChanges from 3.1.2 to 3.1.6\n---------------------------\n\n** Bug\n    * [FELIX-2570] - HTML is escaped in ModeAwareConfigurationPrinter when in &quot;web&quot; mode\n    * [FELIX-2573] - switching the console language bugs the jqueryUI datepicker component\n    * [FELIX-2609] - WebConsole doesn't work with JDK 1.3.1_06 because of Locale\n    * [FELIX-2610] -  WebConsole doesn't work with JDK 1.3.1_06 because of problem in MessageFormat\n    * [FELIX-2617] - webconsole has option to change the language but doesn't show the currently selected one\n    * [FELIX-2627] - can't install war files via webconsole\n    * [FELIX-2635] - PluginHolder.setServletContext() must nullify servlet context after plugins destroying \n    * [FELIX-2644] - cannot disable plugin\n    * [FELIX-2650] - ConfigurationPrinter with other modes than web should be excluded from web\n    * [FELIX-2658] - Deprecate ConfigurationPrinter.PROPERTY_MODES constant\n    * [FELIX-2659] - ConfigurationRender.searchMethod must catch problems more broadly\n\n** Improvement\n    * [FELIX-2541] - [Licenses Page] Add support for DEPENDENCIES files\n    * [FELIX-2614] - Mark unresolved packages\n    * [FELIX-2616] - Russian l10n files for Web Console\n    * [FELIX-2639] - Improve Security Provider support\n    * [FELIX-2652] - Allow attachment providers which do not implement the interface\n    * [FELIX-2660] - Prevent Bundle ConfigurationPrinter from being used in the web output\n    * [FELIX-2668] - Add localization for the meta-type\n    * [FELIX-2674] - Too much error logging after fixing FELIX-2644\n\n** New Feature\n    * [FELIX-2638] - Make a single configuration printer output available via http\n    * [FELIX-2649] - Support for configuration printers without requiring them to implement the interface\n\n** Task\n    * [FELIX-2540] - Ensure inclusion of the DEPENDENCIES file in the build artifacts\n    * [FELIX-2684] - Fix legal files and add a changelog.txt\n\n\nChanges from 3.1.0 to 3.1.2\n---------------------------\n\n** Sub-task\n    * [FELIX-2412] - Update Web Console legal files\n\n** Bug\n    * [FELIX-2287] - Webcosole: showing all resources from a repository doesn't work\n    * [FELIX-2288] - Felix SCR API problem/misunderstanding\n    * [FELIX-2299] - OBR web console plugin doesn't show some bundles as installed\n    * [FELIX-2424] - Internal Server Error requesting /system/console or /system/console/\n    * [FELIX-2447] - Clicking on a service link does not display the service details\n    * [FELIX-2448] - PermissionAdmin and WireAdmin plugins cause internal server error if service API is missing\n    * [FELIX-2470] - No class def found error - Wire Admin (see screenshot)\n    * [FELIX-2471] - No class def found error - Permissions Admin (see screenshot)\n    * [FELIX-2508] - Web Console does not show all components\n    * [FELIX-2535] - Cyrillic characters are not displayed properly.\n\n** Improvement\n    * [FELIX-2240] - Web Console should allow user to select http service to bind to\n    * [FELIX-2277] - Allow the user to select display language\n    * [FELIX-2282] - Optimize Services Printer\n    * [FELIX-2391] - Potential dead locking issue in OsgiManager.init\n    * [FELIX-2509] - Render more data for component details\n\n\nChanges from 3.0.0 to 3.1.0\n---------------------------\n\n** Bug\n    * [FELIX-2243] - Bundle Plugin 'Find All&quot; button generates error with Opera\n    * [FELIX-2244] - Bundles Printer fails when imports contains range.\n    * [FELIX-2256] - Some small visual defects in the WebConsole\n    * [FELIX-2257] - Bundle sort order is not stored in a cookie anymore\n    * [FELIX-2260] - Potential NullPointerException in ServicesServlet.writeJSON()\n    * [FELIX-2261] - On the Servlets page the list of using bundles is not displayed\n    * [FELIX-2263] - OsgiManager servlet should commit response\n    * [FELIX-2272] - SCR plugin shows misleading message\n    * [FELIX-2274] - 404 when plugin is missing\n    * [FELIX-2285] - Bundles Plugin doesn't render the bundles name in IE\n    * [FELIX-2286] - Various rendering issues with IE\n    * [FELIX-2338] - Problem in the Configuration Render\n    * [FELIX-2390] - WebConsole Config Manager problem\n\n** Improvement\n    * [FELIX-1141] - Provide feedback for operations\n    * [FELIX-2207] - License plugin should support Bundle-License manifest header\n    * [FELIX-2245] - Log Plugin - level sorting should be by level\n    * [FELIX-2246] - Lazy initialization of plugins\n    * [FELIX-2250] - Security Policy configuration printer\n    * [FELIX-2251] - Wire Admin configuration printer\n    * [FELIX-2253] - Display progress indiciator on configuration status page\n    * [FELIX-2259] - ServicesServlet should use BundleContext.getAllServiceReferences instead of getServiceReferences\n    * [FELIX-2267] - Improved locale detection\n    * [FELIX-2284] - Add common utility method for converting object (array) to string\n    * [FELIX-2291] - Show available number of processors on the System Information page\n\n** New Feature\n    * [FELIX-1764] - Add support for pluggable access control\n\n\nChanges from 2.0.6 to 3.0.0\n---------------------------\n\n** Bug\n    * [FELIX-1992] - Change the use of the &#xA7; character as a separator in the BundleRepositoryRender class\n    * [FELIX-2005] - Configuration done using &quot;org.apache.felix.webconsole.internal.servlet.OsgiManager&quot; PID is not used by WebConsole\n    * [FELIX-2007] - JavaScript error on bundle page\n    * [FELIX-2009] - Reconfiguring the web console location fails\n    * [FELIX-2022] - [Branding] webconsole.product.image not treated correctly when referencing http resource\n    * [FELIX-2023] - [Branding] webconsole.product.name is not used in HTML page title and header tags\n    * [FELIX-2029] - Support for &quot;default&quot; locale does not work\n    * [FELIX-2034] - WebConsole fails to register if Http Service is registered after Web Console start\n    * [FELIX-2086] - Use a different symbolic name for the bare web console bundle\n    * [FELIX-2105] - Make Web Console compatible with OSGi/Minimum-1.1 EE\n    * [FELIX-2118] - IE7 does not properly load license files into &lt;pre&gt; element\n    * [FELIX-2119] - Bundle update fails, if OBR is not installed\n    * [FELIX-2120] - OBR plugin should hide the repository table, if OBR service is not available\n    * [FELIX-2122] - Possible NullPointerException reporting failure to instantiate a plugin\n    * [FELIX-2123] - Latest commit to ConfigurationRender is not OSGi/Minumum-1.0 compatible\n    * [FELIX-2124] - remove internal usage of deprecated Action interface\n    * [FELIX-2142] - The Config Manager doesn't show configurations which values are pritive arrays\n    * [FELIX-2147] - ConfigurationPrinter services not unregistered on destroy\n    * [FELIX-2149] - Configuration Status tabs are not properly left aligned\n    * [FELIX-2157] - Login dialog delay\n    * [FELIX-2183] - Global AJAX error handler can be improved\n    * [FELIX-2188] - Layout problems with old pluggins\n    * [FELIX-2198] - ConfigManager plugin logs NullPointerException if ConfigurationAdmin Service is not availble\n    * [FELIX-2204] - Localization causes a problem in WebConsole configuration\n    * [FELIX-2206] - Localization causes a problem in Configuration Printers\n    * [FELIX-2214] - Event plugin - template &amp; localization files must be UTF-8.\n    * [FELIX-2216] - Web console needs to be able to use service bundles like obr installed after it\n    * [FELIX-2219] - Showing bundle details of an uninstalled bundles reports &quot;Internal Server Error&quot;\n    * [FELIX-2235] - Deployment plugin fails with internal server error\n\n** Improvement\n    * [FELIX-567] - Search for exported/imported packages\n    * [FELIX-569] - Improve Configuration Page\n    * [FELIX-957] - Migrate Bundle Repository Page to JQuery\n    * [FELIX-1051] - Localize the web console\n    * [FELIX-1910] - Normal URLs instead of Javascript links in Licenses screen\n    * [FELIX-1956] - Collect duplicate &amp; reusable code in WebConsoleUtil\n    * [FELIX-1958] - Branding L&amp;F issues \n    * [FELIX-1993] - Enhance configuration printer support\n    * [FELIX-1996] - Console should warn when config is bound to a different bundle\n    * [FELIX-2017] - Potential NullPointerException when running Web Console in Equinox\n    * [FELIX-2099] - Cleanup logging\n    * [FELIX-2125] - Localization of the bundle headers &amp; bundle name\n    * [FELIX-2146] - Tab sorting and access of Configuration Status page is unstable\n    * [FELIX-2148] - Support selection of default ConfigurationPrinter to display by URL\n    * [FELIX-2158] - Localization of plugin titles\n    * [FELIX-2162] - The bundle repository page can't scale\n    * [FELIX-2167] - Simplify UpdateHelper.updateFromBundleLocation method\n    * [FELIX-2171] - The OBR page should be able to display detailed information about a bundle\n    * [FELIX-2189] - Shell Plugin Should Only be Available if shell is available\n    * [FELIX-2199] - Extract Configuration Printers as top-level classes.\n    * [FELIX-2203] - provide localization of plugin titles\n    * [FELIX-2218] - webconsole dialog font size\n    * [FELIX-2226] - Support direct details view of a resource by symbolic name and version\n    * [FELIX-2227] - Request to OBR plugin should just act as if list=a parameter is set\n    * [FELIX-2228] - Encoding issues with search queries in the OBR plugin\n    * [FELIX-2229] - Provide German Translation for the Web Console\n    * [FELIX-2238] - Bring back icons for backwards compatibility\n\n** New Feature\n    * [FELIX-1441] - Search manifest entries of bundles\n    * [FELIX-1959] - Move towards unified L&amp;F and extended branding support\n\n** Task\n    * [FELIX-1988] - Integrate jQuery UI integration into the Web Console Trunk\n    * [FELIX-2098] - Removed unused AssemblyListRender\n    * [FELIX-2165] - Remove deprecated Action interface\n    * [FELIX-2217] - Web Console OBR plugin should work with old OBR and new bundlerepository API\n    * [FELIX-2220] - Use Manifest Header parser from new utils bundle\n\n\nChanges from 2.0.4 to 2.0.6\n---------------------------\n\n** Bug\n    * [FELIX-1961] - NPE when invoking install/update panel\n    * [FELIX-1983] - WebConsole HttpContext should flush response after setting response status\n\n** Improvement\n    * [FELIX-1976] - Define Web Console build without embedded libraries\n    * [FELIX-1977] - Improve message if a plugin cannot be installed\n\n** New Feature\n    * [FELIX-1957] - Make Web Console compatible with OSGi/Minimum-1.0 EE\n\n\nChanges from 2.0.2 to 2.0.4\n---------------------------\n\n** Bug\n    * [FELIX-1800] - Bound configurations for which there exists no bundle cannot be edited\n    * [FELIX-1912] - Bundles without categories are never displayed in the bundle repository list\n    * [FELIX-1930] - Clicking action on bundles detail page shows full bundle list while URL stays on bundles/&lt;id&gt;\n\n** Improvement\n    * [FELIX-1894] - Show more fragment information in bundle details\n    * [FELIX-1895] - Show configuration property names in configuration forms\n    * [FELIX-1916] - Rename &quot;Location&quot; label to &quot;Bundle Location&quot; in the bundle details display\n    * [FELIX-1931] - Keep sort order of bundle list across page reloads (eg. in a cookie)\n\n** New Feature\n    * [FELIX-1808] - Support unbinding configurations through the Web Console\n    * [FELIX-1884] - WebConsole should have a Services plugin\n\n\nChanges from 2.0.0 to 2.0.2\n---------------------------\n\n** Bug\n    * [FELIX-1370] - Sometimes the configuration for org.apache.felix.webconsole.internal.servlet.OsgiManager is ignored\n    * [FELIX-1674] - typo in scr and webconsole - &quot;unsatisifed&quot;\n\n\nChanges from 1.2.10 to 2.0.0\n----------------------------\n\n** Sub-task\n    * [FELIX-1014] - Hardcoded list of webconsole plugins in OSGiManager\n    * [FELIX-1015] - Hardcoded HTML Header/Footer in AbstractWebConsolePlugin\n    * [FELIX-1043] - Support WebConsole plugins without requiring extending the AbstractWebConsolePlugin\n    * [FELIX-1211] - How to provide resources like CSS or JavaScript files for plugins\n    * [FELIX-1281] - Provide official constants of web console request attributes\n    * [FELIX-1599] - Validate TabWorld license\n\n\n** Bug\n    * [FELIX-1020] - Footer redered before content in bundle plugin\n    * [FELIX-1160] - WebConsole Manifest.MF should specify required version for Servlet API (2.4)\n    * [FELIX-1164] - Updating a configuration containing a property configured with unbound array size\n    * [FELIX-1224] - Component display depends on ManagedService[Factory] instances to be registered for components\n    * [FELIX-1230] - Configuration Page depends on ManagedService[Factory] instances to be registered for components\n    * [FELIX-1270] - Displaying the bundle detail view resolves a bundle\n    * [FELIX-1275] - On the Bundles page, when bundle details are displayed inline, the links to imported and importing bundles are invalid.\n    * [FELIX-1389] - Main div is not closed\n    * [FELIX-1415] - &quot;Reload&quot; button in webconsole bundles list doesn't work\n    * [FELIX-1460] - Can't view installed but unresolved bundle details page\n    * [FELIX-1622] - NullPointerException\n    * [FELIX-1623] - Configuration status tabs not correctly rendered in FireFox 3.5\n    * [FELIX-1630] - Make WebConsole more independent\n    * [FELIX-1632] - Remove reference to KXml from NOTICE and LICENSE and update OSGi copyright years\n    * [FELIX-1636] - Html footer and header are always added to the response for a servlet plugin\n\n** Improvement\n    * [FELIX-1171] - Enhance Configuration Status Page\n    * [FELIX-1191] - Add logging to OBR support plugin\n    * [FELIX-1215] - Provide hyperlinks when referring to bundles\n    * [FELIX-1217] - Move install/update to separate page\n    * [FELIX-1221] - Display the alias ID created by Karaf Features when showing service details\n    * [FELIX-1282] - Cleanup bundle: do not export SCR API, only embedd header parser\n    * [FELIX-1283] - Order page titles in top navigation ignoring case\n    * [FELIX-1569] - Remove deprecated Render interface\n    * [FELIX-1637] - Support additional CSS references provided by plugins\n\n** New Feature\n    * [FELIX-1644] - Reintroduce button to update a single bundle\n\n** Task\n    * [FELIX-1013] - Improve console extensibility\n    * [FELIX-1607] - Enhance the Web Console Event Plugin\n\n\nChanges from 1.2.8 to 1.2.10\n----------------------------\n\n** Bug\n    * [FELIX-1003] - Saving Apache Felix OSGI Management Console on Safari cause Error 404\n    * [FELIX-1028] - NPE in configuration view when running webconsole with Equinox\n    * [FELIX-1048] - Handle fragment bundles differently than &quot;normal&quot; bundles\n    * [FELIX-1061] - [PATCH] webconsole silently ignores bundles which have no Bundle-SymbolicName header\n\n** Improvement\n    * [FELIX-1042] - [PATCH] Add log service to web console\n    * [FELIX-1049] - Display symbolic name and version in bundle list\n    * [FELIX-1050] - Display complete manifest entry\n    * [FELIX-1139] - Remove fixed width of layout\n    * [FELIX-1143] - Upgrade to Felix Parent POM 1.2.0\n\n\nChanges from 1.2.2 to 1.2.8\n---------------------------\n\n** Bug\n    * [FELIX-871] - Bundle Repository page displays NullPointerException if no RepositoryAdmin service is available\n    * [FELIX-873] - Server Stop should be Framework stop and does not work correctly\n    * [FELIX-874] - Bundle startlevel of new bundle cannot be set from the bundle installation form\n    * [FELIX-885] - Saving a factory configuraiton instance creates a new instance instead of updating the old instance\n    * [FELIX-913] - IllegalStateException thrown on startup due to OsgiManager trying to unregister a not yet registered resource\n    * [FELIX-916] - Web Console does not start if the org.osgi.service.log package is missing\n    * [FELIX-918] - Relative redirect on config page does not work in WebSphere\n    * [FELIX-975] - Several UI Problems with IE\n\n** Improvement\n    * [FELIX-564] - Allow changing the sort order in the bundle list\n    * [FELIX-858] - Use new layout from event plugin in bundle plugin\n    * [FELIX-863] - Merge license and NOTICE information of OBR bundle embedded in web console with the main license and NOTICE files\n    * [FELIX-875] - Support updating the system bundle\n    * [FELIX-882] - Use Logger to log messages in the OsgiManager instead of the servlet context log\n    * [FELIX-888] - JSON information and actions for a bundle should be possible with symbolic name\n    * [FELIX-904] - Dependencies should be included as jars and not as classes\n    * [FELIX-919] - Use new table layout for the components list\n    * [FELIX-933] - Config Manager Plugin should support displaying a form even if no configuration is stored\n    * [FELIX-955] - Cleanup Bundle Repository Page\n    * [FELIX-956] - Enhance log output in case of failed resource resolution\n\n** New Feature\n    * [FELIX-878] - Allow to get configurations directly in json format\n\n\nChanges from 1.2.0 to 1.2.2\n---------------------------\n\n** Bug\n    * [FELIX-738] - First access to &quot;Bundles&quot; web console tab takes a long time if the server has no internet access \n    * [FELIX-752] - webconsole 1.2.0 seems to depend on SCR\n    * [FELIX-767] - NOTICE file should list OSGi under &quot;includes&quot; and &quot;uses&quot;\n    * [FELIX-774] - Checkboxes do not work in configuration admin\n    * [FELIX-780] - ArrayIndexOutOfBoundsException in webconsole\n    * [FELIX-802] - Bundle and other displays incomplete and show JavaScript error(s)\n    * [FELIX-856] - Web Console fails to start if HttpService is only available after the WebConsole bundle start\n    * [FELIX-859] - Event display shows double lines between event properties for some events\n\n** Improvement\n    * [FELIX-757] - Add status message about bundle\n    * [FELIX-793] - Improve update and install through web console\n    * [FELIX-857] - Do not rely on Declarative Services for plugins of the Web Console itself\n\n** New Feature\n    * [FELIX-781] - Add basic thread dump to Configuration Status page\n    * [FELIX-790] - Add console plugin to display OSGi events\n\n\nChanges from 1.0.0 to 1.2.0\n---------------------------\n\n** Bug\n    * [FELIX-563] - Add support to access the Felix ShellService\n    * [FELIX-583] - org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): ManagedServiceFactory instances are listed twice: with pid and factoryPid\n    * [FELIX-584] - org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.applyConfiguration(): &quot;create&quot; action is not handled properly\n    * [FELIX-585] - org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): Configuration instances for ManagedServiceFactoy instances cause IllegalArgumentException\n    * [FELIX-586] - org.apache.felix.webconsole.internal.compendium.BaseConfigManager.getAttributeDefinitionMap(): implementation does not properly handle Configuration instances of a ManagedServiceFactory\n    * [FELIX-587] - org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.configForm(): Configuration instance for a ManagedServiceFactory will cause Exception\n    * [FELIX-592] - Console does not work properly in Internet Explorer\n    * [FELIX-600] - Insert Delay before refreshing packages after install/update\n    * [FELIX-662] - ConfigManager should check for empty value before converting into a specific type\n\n** Improvement\n    * [FELIX-566] - More RESTful management console URLs\n    * [FELIX-574] - Replace Action and Render service interfaces by the Servlet interface\n    * [FELIX-614] - Change behaviour of little arrow on single bundle/component display\n    * [FELIX-671] - Web Console OBR description\n    * [FELIX-742] - Order configurations alphabetically\n    * [FELIX-743] - Support configuration filtering\n    * [FELIX-744] - Support configuration creation from the GET request\n    * [FELIX-745] - Mark optional imports as such\n    * [FELIX-746] - Display Bundle Doc URL as a link\n    * [FELIX-747] - Enable bundle installation through OBR again\n\n** New Feature\n    * [FELIX-604] - Add License/Notice page\n    * [FELIX-691] - Add support for the deployment admin\n\n\nInitial Release 1.0.0\n---------------------\n** Improvement\n    * [FELIX-570] - Add flag to InstallAction asking for PackageAdmin.refreshPackages after package update\n\n** Task\n    * [FELIX-562] - Move OSGi Console to Apache Felix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1644060 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_165", "file": [{"additions": 0, "raw_url": "https://github.com/apache/felix/raw/f7defd32d8075bbc6d6f41b0482e8aa8775ce7ab/webconsole/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/f7defd32d8075bbc6d6f41b0482e8aa8775ce7ab/webconsole/changelog.txt", "sha": "5ef9b264ff3fb2810d13cba92e03590001b7be06", "changes": 3, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/changelog.txt?ref=f7defd32d8075bbc6d6f41b0482e8aa8775ce7ab", "patch": "@@ -1,8 +1,6 @@\n Changes from 4.2.0 to 4.2.4\n ---------------------------\n ** Bug\n-    * [FELIX-3614] - In latest webconsole no property descriptors are available\n-    * [FELIX-3760] - Clean webconsole startup and disposal\n     * [FELIX-3817] - Form parameters might clash with configuration parameters\n     * [FELIX-4558] - Web Console Service plugin doesn&#39;t list properties with value 0\n     * [FELIX-4562] - Web Console License plugin fails to load files\n@@ -13,7 +11,6 @@ Changes from 4.2.0 to 4.2.4\n     * [FELIX-4662] - WebConsole Xdialog javascript function is not working correctly\n                 \n ** New Feature\n-    * [FELIX-3800] - Support Category Translation\n     * [FELIX-3848] - Differentiate between unbound and new configuration\n     * [FELIX-4711] - Web Console: False AJAX error displayed on deleting or unbinding config\n ", "filename": "webconsole/changelog.txt"}], "repo": "felix"}, {"commit": "https://github.com/apache/felix/commit/ef74c406ad0db8dcad41d90189723e9ee9a1df8e", "parent": "https://github.com/apache/felix/commit/8f1750ef142321a416bd6d0b677bd4cd2c657ddd", "message": "Changes from 4.2.0 to 4.2.4\n---------------------------\n** Bug\n    * [FELIX-3614] - In latest webconsole no property descriptors are available\n    * [FELIX-3760] - Clean webconsole startup and disposal\n    * [FELIX-3817] - Form parameters might clash with configuration parameters\n    * [FELIX-4558] - Web Console Service plugin doesn&#39;t list properties with value 0\n    * [FELIX-4562] - Web Console License plugin fails to load files\n    * [FELIX-4572] - Web Console may cause NPE on refresh packages\n    * [FELIX-4610] - WebConsole doesn&#39;t start with Java Security enabled\n    * [FELIX-4652] - Security problem with AbstractWebConsolePlugin.spoolResource\n    * [FELIX-4660] - Security problem in WebConsoleUtil.getParameter() method\n    * [FELIX-4662] - WebConsole Xdialog javascript function is not working correctly\n                \n** New Feature\n    * [FELIX-3800] - Support Category Translation\n    * [FELIX-3848] - Differentiate between unbound and new configuration\n    * [FELIX-4711] - Web Console: False AJAX error displayed on deleting or unbinding config\n\nChanges from 4.0.0 to 4.2.0\n---------------------------\n\n** Bug\n    * [FELIX-3318] - NPE in WebConsole when trying to uninstall a bundle\n    * [FELIX-3570] - Commons IO dependency issue\n    * [FELIX-3605] - Configuration Status plugin has an error in IE/Compatibility View\n    * [FELIX-3663] - Java Runtime in the System Information tab appears as 'null(build null)' in Skelmir CEE-J VM\n    * [FELIX-3666] - NPE when uninstalling a bundle\n    * [FELIX-3694] - In some cases web console cannot edit configs without metatype\n    * [FELIX-3783] - ConfigurationAdminConfigurationPrinter failing if Configuration Admin API not bound\n    * [FELIX-3784] - Configuration Admin tab not working when Metatype Service API is missing\n    * [FELIX-3795] - JS Error in Configuration Status printing\n    * [FELIX-3814] - Javascript error when directly invoking a configuration with IE8\n    * [FELIX-3829] - NullPointerException when creating configuration with multi-value password properties\n    * [FELIX-3841] - CSS issues in IE with Web Console menus\n    * [FELIX-3936] - Main menu items hidden in the Configuration Status page\n    * [FELIX-3946] - NullPointerException in BundleServlet.bundleDetails when not called through HTTP\n    * [FELIX-3965] - threads configuration status generates invalid results\n    * [FELIX-3969] - web console shows invalid bundle symbolic name\n    * [FELIX-3986] - ThreadDumper comparators are not correctly implemented\n    * [FELIX-4074] - Plugin class name changed for config manager plugin, might be disabled on update\n \n** Improvement\n    * [FELIX-2234] - Reduce status information from bundle plugin\n    * [FELIX-3594] - Service should be sorted by ID in service configuration printer\n    * [FELIX-3798] - Make default category configurable\n    * [FELIX-3799] - Sort plugin plugin links by title\n    * [FELIX-3851] - Allow for refresh after bundle update/install\n    * [FELIX-3861] - Set felix.webconsole.category on Web Console plugins\n    * [FELIX-3951] - Let users able to specify the directory used to temporarily store uploaded files\n\n** New Feature\n    * [FELIX-2896] - Add support for bundle info providers\n    * [FELIX-3769] - Improve the way Web Console UI manages growing number of plugins.\n    * [FELIX-3770] - Upgrade jquery-ui to 1.9.1\n\n** Task\n    * [FELIX-3778] - Create all-in-one WebConsole build again\n    * [FELIX-3833] - Consider backwards compatibility break with label map due to Categories\n    * [FELIX-3834] - Create separate language fragment bundles\n    * [FELIX-3874] - Create new status printer module\n\n\nChanges from 3.1.8 to 4.0.0\n---------------------------\n\n** Bug\n    * [FELIX-1865] - Metatype resolving mechanism does not seem to work correctly\n    * [FELIX-2707] - Webconsole does not resolve resource bundle properly\n    * [FELIX-2708] - Webconsole causes NPE in Bundle.getResource(String)\n    * [FELIX-2727] - WebConsole logs an error not being able to create the DepPackServlet\n    * [FELIX-2830] - Tablesorter loses it's styling if placed in JQuery TAB component\n    * [FELIX-2855] - WebConsole cannot read the list of enabled plugins when using FileInstall\n    * [FELIX-2879] - Metatype Service confuses the id of the OCD with the Designate.pid/factoryPid.\n    * [FELIX-2889] - Invalid JSON content in http response after starting or stopping a bundle.\n    * [FELIX-2971] - Configuration changes cannot be made via Felix Web Console in IE7\n    * [FELIX-2979] - Declarative Services Components page only displayed if Configuration Admin and Metatype Service API is available\n    * [FELIX-3010] - XSS in Felix Web Console\n    * [FELIX-3028] - Better handle configuration unbinding\n    * [FELIX-3116] - Saving configuration shows \"AJAX error\" dialog\n    * [FELIX-3132] - Extensions not properly supported\n    * [FELIX-3268] - Cannot build webconsole and webconsole-plugins with JDK 7\n    * [FELIX-3284] - NullPointerException may be thrown if asynchronous bundle update fails\n    * [FELIX-3285] - Wrong vector and array handling in Configuration Admin plugin\n    * [FELIX-3311] - Cookie handling seems not to work anymore\n    * [FELIX-3320] - WebConsole UX: actions and status on bundle details don't update properly\n    * [FELIX-3404] - Web Admin Log Plugin stops listing of log entries if message is null.\n    * [FELIX-3405] - NPE in Web Console\n    * [FELIX-3406] - Localization in Web Console doesn't work anymore\n    * [FELIX-3408] - Web Console date chooser shows garbage text\n    * [FELIX-3433] - WebConsole default ajax error handlers doesn't work with IE\n    * [FELIX-3469] - Type mismatch JS error using the memoryusage plugin\n    * [FELIX-3473] - web console config manager plugin no longer works with J9\n    * [FELIX-3485] - ui-bg_glass_55_fbf9ee_1x400.png does not exist in admin_compat.css\n\n** Improvement\n    * [FELIX-2117] - Use DynamicImport instead of Optional Packages\n    * [FELIX-2697] - Allow enable/disable internal plugins dynamically\n    * [FELIX-3014] - Have a way to \"deep link\" to a particular tab within Configuration Status\n    * [FELIX-3022] - Add Uptime indication to Status page\n    * [FELIX-3024] - Add Delete and Unbind buttons to Configuration Detail dialogs\n    * [FELIX-3025] - Add a configuration status list with a short bundle list\n    * [FELIX-3027] - Make download links for single configuration status file (or ZIP file) more prominent\n    * [FELIX-3040] - Configuration status dump should contain a timestamp when the dump has been taken\n    * [FELIX-3099] - Separate Deployment Admin plugin\n    * [FELIX-3100] - Separate SCR plugin\n    * [FELIX-3107] - Separate Shell Plugin\n    * [FELIX-3111] - Separate OBR Plugin\n    * [FELIX-3168] - Add support for new PASSWORD attribute type of Metatype service\n    * [FELIX-3236] - Make language selection cookie longer lasting\n    * [FELIX-3282] - Generate default fields for configurations without descriptor\n    * [FELIX-3290] - Improve Cookie handling of the Web Console\n    * [FELIX-3298] - Add animal sniffer plugin to ensure no using any non-Java 1.4 API\n    * [FELIX-3315] - Log plugin does not show the bundle that has logged the event\n    * [FELIX-3316] - Log plugin should provide more detailed exception column\n    * [FELIX-3417] - Web Console Inconsistent status text\n    * [FELIX-3418] - Sort threads by name in Configuration Status -> Threads\n    * [FELIX-3482] - Text wrapping goes out of bounds in Configuration Status\n    * [FELIX-3491] - Better activity indication when pressing refresh/update bundle buttons \n    * [FELIX-3502] - Improve Threads web console printer\n\n** New Feature\n    * [FELIX-2709] - Allow webconsole context root be obtained from framework properties\n\n** Task\n    * [FELIX-2904] - Inlined required/embedded dependencies\n    * [FELIX-3279] - Drop default build and use bare profile as the single build\n    * [FELIX-3280] - Update to use parent POM 2.1\n    * [FELIX-3281] - Use bundle plugin 2.3.6 and BND annotations for package export\n    * [FELIX-3490] - Notice included OSGi classes\n\n\nChanges from 3.1.6 to 3.1.8\n---------------------------\n\n** Bug\n    * [FELIX-2713] - Problem in HtmlConfigurationWriter\n    * [FELIX-2729] - Webconsole - Configuration fails to print configuration for bundles without MetatypeService config\n    * [FELIX-2735] - ClassCastException in PermissionsConfigurationPrinter\n    * [FELIX-2793] - Plugin request is not detected as html request if context path contains a dot\n    * [FELIX-2795] - Parameters are not removed from symbolic name when installing a bundle\n\n\nChanges from 3.1.2 to 3.1.6\n---------------------------\n\n** Bug\n    * [FELIX-2570] - HTML is escaped in ModeAwareConfigurationPrinter when in &quot;web&quot; mode\n    * [FELIX-2573] - switching the console language bugs the jqueryUI datepicker component\n    * [FELIX-2609] - WebConsole doesn't work with JDK 1.3.1_06 because of Locale\n    * [FELIX-2610] -  WebConsole doesn't work with JDK 1.3.1_06 because of problem in MessageFormat\n    * [FELIX-2617] - webconsole has option to change the language but doesn't show the currently selected one\n    * [FELIX-2627] - can't install war files via webconsole\n    * [FELIX-2635] - PluginHolder.setServletContext() must nullify servlet context after plugins destroying \n    * [FELIX-2644] - cannot disable plugin\n    * [FELIX-2650] - ConfigurationPrinter with other modes than web should be excluded from web\n    * [FELIX-2658] - Deprecate ConfigurationPrinter.PROPERTY_MODES constant\n    * [FELIX-2659] - ConfigurationRender.searchMethod must catch problems more broadly\n\n** Improvement\n    * [FELIX-2541] - [Licenses Page] Add support for DEPENDENCIES files\n    * [FELIX-2614] - Mark unresolved packages\n    * [FELIX-2616] - Russian l10n files for Web Console\n    * [FELIX-2639] - Improve Security Provider support\n    * [FELIX-2652] - Allow attachment providers which do not implement the interface\n    * [FELIX-2660] - Prevent Bundle ConfigurationPrinter from being used in the web output\n    * [FELIX-2668] - Add localization for the meta-type\n    * [FELIX-2674] - Too much error logging after fixing FELIX-2644\n\n** New Feature\n    * [FELIX-2638] - Make a single configuration printer output available via http\n    * [FELIX-2649] - Support for configuration printers without requiring them to implement the interface\n\n** Task\n    * [FELIX-2540] - Ensure inclusion of the DEPENDENCIES file in the build artifacts\n    * [FELIX-2684] - Fix legal files and add a changelog.txt\n\n\nChanges from 3.1.0 to 3.1.2\n---------------------------\n\n** Sub-task\n    * [FELIX-2412] - Update Web Console legal files\n\n** Bug\n    * [FELIX-2287] - Webcosole: showing all resources from a repository doesn't work\n    * [FELIX-2288] - Felix SCR API problem/misunderstanding\n    * [FELIX-2299] - OBR web console plugin doesn't show some bundles as installed\n    * [FELIX-2424] - Internal Server Error requesting /system/console or /system/console/\n    * [FELIX-2447] - Clicking on a service link does not display the service details\n    * [FELIX-2448] - PermissionAdmin and WireAdmin plugins cause internal server error if service API is missing\n    * [FELIX-2470] - No class def found error - Wire Admin (see screenshot)\n    * [FELIX-2471] - No class def found error - Permissions Admin (see screenshot)\n    * [FELIX-2508] - Web Console does not show all components\n    * [FELIX-2535] - Cyrillic characters are not displayed properly.\n\n** Improvement\n    * [FELIX-2240] - Web Console should allow user to select http service to bind to\n    * [FELIX-2277] - Allow the user to select display language\n    * [FELIX-2282] - Optimize Services Printer\n    * [FELIX-2391] - Potential dead locking issue in OsgiManager.init\n    * [FELIX-2509] - Render more data for component details\n\n\nChanges from 3.0.0 to 3.1.0\n---------------------------\n\n** Bug\n    * [FELIX-2243] - Bundle Plugin 'Find All&quot; button generates error with Opera\n    * [FELIX-2244] - Bundles Printer fails when imports contains range.\n    * [FELIX-2256] - Some small visual defects in the WebConsole\n    * [FELIX-2257] - Bundle sort order is not stored in a cookie anymore\n    * [FELIX-2260] - Potential NullPointerException in ServicesServlet.writeJSON()\n    * [FELIX-2261] - On the Servlets page the list of using bundles is not displayed\n    * [FELIX-2263] - OsgiManager servlet should commit response\n    * [FELIX-2272] - SCR plugin shows misleading message\n    * [FELIX-2274] - 404 when plugin is missing\n    * [FELIX-2285] - Bundles Plugin doesn't render the bundles name in IE\n    * [FELIX-2286] - Various rendering issues with IE\n    * [FELIX-2338] - Problem in the Configuration Render\n    * [FELIX-2390] - WebConsole Config Manager problem\n\n** Improvement\n    * [FELIX-1141] - Provide feedback for operations\n    * [FELIX-2207] - License plugin should support Bundle-License manifest header\n    * [FELIX-2245] - Log Plugin - level sorting should be by level\n    * [FELIX-2246] - Lazy initialization of plugins\n    * [FELIX-2250] - Security Policy configuration printer\n    * [FELIX-2251] - Wire Admin configuration printer\n    * [FELIX-2253] - Display progress indiciator on configuration status page\n    * [FELIX-2259] - ServicesServlet should use BundleContext.getAllServiceReferences instead of getServiceReferences\n    * [FELIX-2267] - Improved locale detection\n    * [FELIX-2284] - Add common utility method for converting object (array) to string\n    * [FELIX-2291] - Show available number of processors on the System Information page\n\n** New Feature\n    * [FELIX-1764] - Add support for pluggable access control\n\n\nChanges from 2.0.6 to 3.0.0\n---------------------------\n\n** Bug\n    * [FELIX-1992] - Change the use of the &#xA7; character as a separator in the BundleRepositoryRender class\n    * [FELIX-2005] - Configuration done using &quot;org.apache.felix.webconsole.internal.servlet.OsgiManager&quot; PID is not used by WebConsole\n    * [FELIX-2007] - JavaScript error on bundle page\n    * [FELIX-2009] - Reconfiguring the web console location fails\n    * [FELIX-2022] - [Branding] webconsole.product.image not treated correctly when referencing http resource\n    * [FELIX-2023] - [Branding] webconsole.product.name is not used in HTML page title and header tags\n    * [FELIX-2029] - Support for &quot;default&quot; locale does not work\n    * [FELIX-2034] - WebConsole fails to register if Http Service is registered after Web Console start\n    * [FELIX-2086] - Use a different symbolic name for the bare web console bundle\n    * [FELIX-2105] - Make Web Console compatible with OSGi/Minimum-1.1 EE\n    * [FELIX-2118] - IE7 does not properly load license files into &lt;pre&gt; element\n    * [FELIX-2119] - Bundle update fails, if OBR is not installed\n    * [FELIX-2120] - OBR plugin should hide the repository table, if OBR service is not available\n    * [FELIX-2122] - Possible NullPointerException reporting failure to instantiate a plugin\n    * [FELIX-2123] - Latest commit to ConfigurationRender is not OSGi/Minumum-1.0 compatible\n    * [FELIX-2124] - remove internal usage of deprecated Action interface\n    * [FELIX-2142] - The Config Manager doesn't show configurations which values are pritive arrays\n    * [FELIX-2147] - ConfigurationPrinter services not unregistered on destroy\n    * [FELIX-2149] - Configuration Status tabs are not properly left aligned\n    * [FELIX-2157] - Login dialog delay\n    * [FELIX-2183] - Global AJAX error handler can be improved\n    * [FELIX-2188] - Layout problems with old pluggins\n    * [FELIX-2198] - ConfigManager plugin logs NullPointerException if ConfigurationAdmin Service is not availble\n    * [FELIX-2204] - Localization causes a problem in WebConsole configuration\n    * [FELIX-2206] - Localization causes a problem in Configuration Printers\n    * [FELIX-2214] - Event plugin - template &amp; localization files must be UTF-8.\n    * [FELIX-2216] - Web console needs to be able to use service bundles like obr installed after it\n    * [FELIX-2219] - Showing bundle details of an uninstalled bundles reports &quot;Internal Server Error&quot;\n    * [FELIX-2235] - Deployment plugin fails with internal server error\n\n** Improvement\n    * [FELIX-567] - Search for exported/imported packages\n    * [FELIX-569] - Improve Configuration Page\n    * [FELIX-957] - Migrate Bundle Repository Page to JQuery\n    * [FELIX-1051] - Localize the web console\n    * [FELIX-1910] - Normal URLs instead of Javascript links in Licenses screen\n    * [FELIX-1956] - Collect duplicate &amp; reusable code in WebConsoleUtil\n    * [FELIX-1958] - Branding L&amp;F issues \n    * [FELIX-1993] - Enhance configuration printer support\n    * [FELIX-1996] - Console should warn when config is bound to a different bundle\n    * [FELIX-2017] - Potential NullPointerException when running Web Console in Equinox\n    * [FELIX-2099] - Cleanup logging\n    * [FELIX-2125] - Localization of the bundle headers &amp; bundle name\n    * [FELIX-2146] - Tab sorting and access of Configuration Status page is unstable\n    * [FELIX-2148] - Support selection of default ConfigurationPrinter to display by URL\n    * [FELIX-2158] - Localization of plugin titles\n    * [FELIX-2162] - The bundle repository page can't scale\n    * [FELIX-2167] - Simplify UpdateHelper.updateFromBundleLocation method\n    * [FELIX-2171] - The OBR page should be able to display detailed information about a bundle\n    * [FELIX-2189] - Shell Plugin Should Only be Available if shell is available\n    * [FELIX-2199] - Extract Configuration Printers as top-level classes.\n    * [FELIX-2203] - provide localization of plugin titles\n    * [FELIX-2218] - webconsole dialog font size\n    * [FELIX-2226] - Support direct details view of a resource by symbolic name and version\n    * [FELIX-2227] - Request to OBR plugin should just act as if list=a parameter is set\n    * [FELIX-2228] - Encoding issues with search queries in the OBR plugin\n    * [FELIX-2229] - Provide German Translation for the Web Console\n    * [FELIX-2238] - Bring back icons for backwards compatibility\n\n** New Feature\n    * [FELIX-1441] - Search manifest entries of bundles\n    * [FELIX-1959] - Move towards unified L&amp;F and extended branding support\n\n** Task\n    * [FELIX-1988] - Integrate jQuery UI integration into the Web Console Trunk\n    * [FELIX-2098] - Removed unused AssemblyListRender\n    * [FELIX-2165] - Remove deprecated Action interface\n    * [FELIX-2217] - Web Console OBR plugin should work with old OBR and new bundlerepository API\n    * [FELIX-2220] - Use Manifest Header parser from new utils bundle\n\n\nChanges from 2.0.4 to 2.0.6\n---------------------------\n\n** Bug\n    * [FELIX-1961] - NPE when invoking install/update panel\n    * [FELIX-1983] - WebConsole HttpContext should flush response after setting response status\n\n** Improvement\n    * [FELIX-1976] - Define Web Console build without embedded libraries\n    * [FELIX-1977] - Improve message if a plugin cannot be installed\n\n** New Feature\n    * [FELIX-1957] - Make Web Console compatible with OSGi/Minimum-1.0 EE\n\n\nChanges from 2.0.2 to 2.0.4\n---------------------------\n\n** Bug\n    * [FELIX-1800] - Bound configurations for which there exists no bundle cannot be edited\n    * [FELIX-1912] - Bundles without categories are never displayed in the bundle repository list\n    * [FELIX-1930] - Clicking action on bundles detail page shows full bundle list while URL stays on bundles/&lt;id&gt;\n\n** Improvement\n    * [FELIX-1894] - Show more fragment information in bundle details\n    * [FELIX-1895] - Show configuration property names in configuration forms\n    * [FELIX-1916] - Rename &quot;Location&quot; label to &quot;Bundle Location&quot; in the bundle details display\n    * [FELIX-1931] - Keep sort order of bundle list across page reloads (eg. in a cookie)\n\n** New Feature\n    * [FELIX-1808] - Support unbinding configurations through the Web Console\n    * [FELIX-1884] - WebConsole should have a Services plugin\n\n\nChanges from 2.0.0 to 2.0.2\n---------------------------\n\n** Bug\n    * [FELIX-1370] - Sometimes the configuration for org.apache.felix.webconsole.internal.servlet.OsgiManager is ignored\n    * [FELIX-1674] - typo in scr and webconsole - &quot;unsatisifed&quot;\n\n\nChanges from 1.2.10 to 2.0.0\n----------------------------\n\n** Sub-task\n    * [FELIX-1014] - Hardcoded list of webconsole plugins in OSGiManager\n    * [FELIX-1015] - Hardcoded HTML Header/Footer in AbstractWebConsolePlugin\n    * [FELIX-1043] - Support WebConsole plugins without requiring extending the AbstractWebConsolePlugin\n    * [FELIX-1211] - How to provide resources like CSS or JavaScript files for plugins\n    * [FELIX-1281] - Provide official constants of web console request attributes\n    * [FELIX-1599] - Validate TabWorld license\n\n\n** Bug\n    * [FELIX-1020] - Footer redered before content in bundle plugin\n    * [FELIX-1160] - WebConsole Manifest.MF should specify required version for Servlet API (2.4)\n    * [FELIX-1164] - Updating a configuration containing a property configured with unbound array size\n    * [FELIX-1224] - Component display depends on ManagedService[Factory] instances to be registered for components\n    * [FELIX-1230] - Configuration Page depends on ManagedService[Factory] instances to be registered for components\n    * [FELIX-1270] - Displaying the bundle detail view resolves a bundle\n    * [FELIX-1275] - On the Bundles page, when bundle details are displayed inline, the links to imported and importing bundles are invalid.\n    * [FELIX-1389] - Main div is not closed\n    * [FELIX-1415] - &quot;Reload&quot; button in webconsole bundles list doesn't work\n    * [FELIX-1460] - Can't view installed but unresolved bundle details page\n    * [FELIX-1622] - NullPointerException\n    * [FELIX-1623] - Configuration status tabs not correctly rendered in FireFox 3.5\n    * [FELIX-1630] - Make WebConsole more independent\n    * [FELIX-1632] - Remove reference to KXml from NOTICE and LICENSE and update OSGi copyright years\n    * [FELIX-1636] - Html footer and header are always added to the response for a servlet plugin\n\n** Improvement\n    * [FELIX-1171] - Enhance Configuration Status Page\n    * [FELIX-1191] - Add logging to OBR support plugin\n    * [FELIX-1215] - Provide hyperlinks when referring to bundles\n    * [FELIX-1217] - Move install/update to separate page\n    * [FELIX-1221] - Display the alias ID created by Karaf Features when showing service details\n    * [FELIX-1282] - Cleanup bundle: do not export SCR API, only embedd header parser\n    * [FELIX-1283] - Order page titles in top navigation ignoring case\n    * [FELIX-1569] - Remove deprecated Render interface\n    * [FELIX-1637] - Support additional CSS references provided by plugins\n\n** New Feature\n    * [FELIX-1644] - Reintroduce button to update a single bundle\n\n** Task\n    * [FELIX-1013] - Improve console extensibility\n    * [FELIX-1607] - Enhance the Web Console Event Plugin\n\n\nChanges from 1.2.8 to 1.2.10\n----------------------------\n\n** Bug\n    * [FELIX-1003] - Saving Apache Felix OSGI Management Console on Safari cause Error 404\n    * [FELIX-1028] - NPE in configuration view when running webconsole with Equinox\n    * [FELIX-1048] - Handle fragment bundles differently than &quot;normal&quot; bundles\n    * [FELIX-1061] - [PATCH] webconsole silently ignores bundles which have no Bundle-SymbolicName header\n\n** Improvement\n    * [FELIX-1042] - [PATCH] Add log service to web console\n    * [FELIX-1049] - Display symbolic name and version in bundle list\n    * [FELIX-1050] - Display complete manifest entry\n    * [FELIX-1139] - Remove fixed width of layout\n    * [FELIX-1143] - Upgrade to Felix Parent POM 1.2.0\n\n\nChanges from 1.2.2 to 1.2.8\n---------------------------\n\n** Bug\n    * [FELIX-871] - Bundle Repository page displays NullPointerException if no RepositoryAdmin service is available\n    * [FELIX-873] - Server Stop should be Framework stop and does not work correctly\n    * [FELIX-874] - Bundle startlevel of new bundle cannot be set from the bundle installation form\n    * [FELIX-885] - Saving a factory configuraiton instance creates a new instance instead of updating the old instance\n    * [FELIX-913] - IllegalStateException thrown on startup due to OsgiManager trying to unregister a not yet registered resource\n    * [FELIX-916] - Web Console does not start if the org.osgi.service.log package is missing\n    * [FELIX-918] - Relative redirect on config page does not work in WebSphere\n    * [FELIX-975] - Several UI Problems with IE\n\n** Improvement\n    * [FELIX-564] - Allow changing the sort order in the bundle list\n    * [FELIX-858] - Use new layout from event plugin in bundle plugin\n    * [FELIX-863] - Merge license and NOTICE information of OBR bundle embedded in web console with the main license and NOTICE files\n    * [FELIX-875] - Support updating the system bundle\n    * [FELIX-882] - Use Logger to log messages in the OsgiManager instead of the servlet context log\n    * [FELIX-888] - JSON information and actions for a bundle should be possible with symbolic name\n    * [FELIX-904] - Dependencies should be included as jars and not as classes\n    * [FELIX-919] - Use new table layout for the components list\n    * [FELIX-933] - Config Manager Plugin should support displaying a form even if no configuration is stored\n    * [FELIX-955] - Cleanup Bundle Repository Page\n    * [FELIX-956] - Enhance log output in case of failed resource resolution\n\n** New Feature\n    * [FELIX-878] - Allow to get configurations directly in json format\n\n\nChanges from 1.2.0 to 1.2.2\n---------------------------\n\n** Bug\n    * [FELIX-738] - First access to &quot;Bundles&quot; web console tab takes a long time if the server has no internet access \n    * [FELIX-752] - webconsole 1.2.0 seems to depend on SCR\n    * [FELIX-767] - NOTICE file should list OSGi under &quot;includes&quot; and &quot;uses&quot;\n    * [FELIX-774] - Checkboxes do not work in configuration admin\n    * [FELIX-780] - ArrayIndexOutOfBoundsException in webconsole\n    * [FELIX-802] - Bundle and other displays incomplete and show JavaScript error(s)\n    * [FELIX-856] - Web Console fails to start if HttpService is only available after the WebConsole bundle start\n    * [FELIX-859] - Event display shows double lines between event properties for some events\n\n** Improvement\n    * [FELIX-757] - Add status message about bundle\n    * [FELIX-793] - Improve update and install through web console\n    * [FELIX-857] - Do not rely on Declarative Services for plugins of the Web Console itself\n\n** New Feature\n    * [FELIX-781] - Add basic thread dump to Configuration Status page\n    * [FELIX-790] - Add console plugin to display OSGi events\n\n\nChanges from 1.0.0 to 1.2.0\n---------------------------\n\n** Bug\n    * [FELIX-563] - Add support to access the Felix ShellService\n    * [FELIX-583] - org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): ManagedServiceFactory instances are listed twice: with pid and factoryPid\n    * [FELIX-584] - org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.applyConfiguration(): &quot;create&quot; action is not handled properly\n    * [FELIX-585] - org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): Configuration instances for ManagedServiceFactoy instances cause IllegalArgumentException\n    * [FELIX-586] - org.apache.felix.webconsole.internal.compendium.BaseConfigManager.getAttributeDefinitionMap(): implementation does not properly handle Configuration instances of a ManagedServiceFactory\n    * [FELIX-587] - org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.configForm(): Configuration instance for a ManagedServiceFactory will cause Exception\n    * [FELIX-592] - Console does not work properly in Internet Explorer\n    * [FELIX-600] - Insert Delay before refreshing packages after install/update\n    * [FELIX-662] - ConfigManager should check for empty value before converting into a specific type\n\n** Improvement\n    * [FELIX-566] - More RESTful management console URLs\n    * [FELIX-574] - Replace Action and Render service interfaces by the Servlet interface\n    * [FELIX-614] - Change behaviour of little arrow on single bundle/component display\n    * [FELIX-671] - Web Console OBR description\n    * [FELIX-742] - Order configurations alphabetically\n    * [FELIX-743] - Support configuration filtering\n    * [FELIX-744] - Support configuration creation from the GET request\n    * [FELIX-745] - Mark optional imports as such\n    * [FELIX-746] - Display Bundle Doc URL as a link\n    * [FELIX-747] - Enable bundle installation through OBR again\n\n** New Feature\n    * [FELIX-604] - Add License/Notice page\n    * [FELIX-691] - Add support for the deployment admin\n\n\nInitial Release 1.0.0\n---------------------\n** Improvement\n    * [FELIX-570] - Add flag to InstallAction asking for PackageAdmin.refreshPackages after package update\n\n** Task\n    * [FELIX-562] - Move OSGi Console to Apache Felix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk@1643779 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "felix_166", "file": [{"additions": 19, "raw_url": "https://github.com/apache/felix/raw/ef74c406ad0db8dcad41d90189723e9ee9a1df8e/webconsole/changelog.txt", "blob_url": "https://github.com/apache/felix/blob/ef74c406ad0db8dcad41d90189723e9ee9a1df8e/webconsole/changelog.txt", "sha": "e4b4e5f2520e60dd7500f2fc3e2b113e0248b2db", "changes": 19, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/felix/contents/webconsole/changelog.txt?ref=ef74c406ad0db8dcad41d90189723e9ee9a1df8e", "patch": "@@ -1,3 +1,22 @@\n+Changes from 4.2.0 to 4.2.4\n+---------------------------\n+** Bug\n+    * [FELIX-3614] - In latest webconsole no property descriptors are available\n+    * [FELIX-3760] - Clean webconsole startup and disposal\n+    * [FELIX-3817] - Form parameters might clash with configuration parameters\n+    * [FELIX-4558] - Web Console Service plugin doesn&#39;t list properties with value 0\n+    * [FELIX-4562] - Web Console License plugin fails to load files\n+    * [FELIX-4572] - Web Console may cause NPE on refresh packages\n+    * [FELIX-4610] - WebConsole doesn&#39;t start with Java Security enabled\n+    * [FELIX-4652] - Security problem with AbstractWebConsolePlugin.spoolResource\n+    * [FELIX-4660] - Security problem in WebConsoleUtil.getParameter() method\n+    * [FELIX-4662] - WebConsole Xdialog javascript function is not working correctly\n+                \n+** New Feature\n+    * [FELIX-3800] - Support Category Translation\n+    * [FELIX-3848] - Differentiate between unbound and new configuration\n+    * [FELIX-4711] - Web Console: False AJAX error displayed on deleting or unbinding config\n+\n Changes from 4.0.0 to 4.2.0\n ---------------------------\n ", "filename": "webconsole/changelog.txt"}], "repo": "felix"}]
