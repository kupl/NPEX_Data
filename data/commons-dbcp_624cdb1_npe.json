[
    {
        "repo": "commons-dbcp",
        "commit": "https://github.com/apache/commons-dbcp/commit/624cdb14f819ec4ce5a5c02df0293f317cf9737a",
        "bug_id": "commons-dbcp_624cdb1",
        "message": "[DBCP-486] DriverAdapterCPDS.setUser(null) and setPassword(null) throw\nNullPointerExceptions when connection properties are set.",
        "parent": "https://github.com/apache/commons-dbcp/commit/b0bb65029d1e3dcf57d8a0a56e4ca7cccbd18db4",
        "patched_files": [
            "changes.xml",
            "DriverAdapterCPDS.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-dbcp/raw/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-dbcp/contents/src/changes/changes.xml?ref=624cdb14f819ec4ce5a5c02df0293f317cf9737a",
                "filename": "src/changes/changes.xml",
                "deletions": 0,
                "sha": "8f69ffbed1f2ef07a1c81a2c6adbe8a322cf5e94",
                "blob_url": "https://github.com/apache/commons-dbcp/blob/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/changes/changes.xml",
                "patch": "@@ -67,6 +67,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action dev=\"ggregory\" type=\"update\" issue=\"DBCP-483\">\n         Make constant public: org.apache.commons.dbcp2.PoolingDriver.URL_PREFIX.\n       </action>\n+      <action dev=\"ggregory\" type=\"update\" issue=\"DBCP-486\" due-to=\"Gary Gregory\">\n+        DriverAdapterCPDS.setUser(null) and setPassword(null) throw NullPointerExceptions when connection properties are set.\n+      </action>\n     </release>\n     <release version=\"2.2.0\" date=\"2017-12-DD\" description=\"This is a minor release, including bug fixes and enhancements.\">\n       <action dev=\"ggregory\" type=\"fix\" issue=\"DBCP-481\" due-to=\"Gary Gregory\">",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 26,
                "raw_url": "https://github.com/apache/commons-dbcp/raw/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/main/java/org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS.java",
                "contents_url": "https://api.github.com/repos/apache/commons-dbcp/contents/src/main/java/org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS.java?ref=624cdb14f819ec4ce5a5c02df0293f317cf9737a",
                "filename": "src/main/java/org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS.java",
                "deletions": 12,
                "sha": "bf7d960147381885a69572beaa401dc3c625e043",
                "blob_url": "https://github.com/apache/commons-dbcp/blob/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/main/java/org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS.java",
                "patch": "@@ -94,6 +94,12 @@\n     implements ConnectionPoolDataSource, Referenceable, Serializable,\n                ObjectFactory {\n \n+    private static final String KEY_USER = \"user\";\n+\n+\n+    private static final String KEY_PASSWORD = \"password\";\n+\n+\n     private static final long serialVersionUID = -4820523787212147844L;\n \n \n@@ -171,8 +177,8 @@ public PooledConnection getPooledConnection(final String username, final String\n         // exception upon first invocation.\n         try {\n             if (connectionProperties != null) {\n-                connectionProperties.put(\"user\", username);\n-                connectionProperties.put(\"password\", pass);\n+                connectionProperties.put(KEY_USER, username);\n+                connectionProperties.put(KEY_PASSWORD, pass);\n                 pci = new PooledConnectionImpl(DriverManager.getConnection(\n                         getUrl(), connectionProperties));\n             } else {\n@@ -245,8 +251,8 @@ public Reference getReference() throws NamingException {\n         ref.add(new StringRefAddr(\"driver\", getDriver()));\n         ref.add(new StringRefAddr(\"loginTimeout\",\n                                   String.valueOf(getLoginTimeout())));\n-        ref.add(new StringRefAddr(\"password\", getPassword()));\n-        ref.add(new StringRefAddr(\"user\", getUser()));\n+        ref.add(new StringRefAddr(KEY_PASSWORD, getPassword()));\n+        ref.add(new StringRefAddr(KEY_USER, getUser()));\n         ref.add(new StringRefAddr(\"url\", getUrl()));\n \n         ref.add(new StringRefAddr(\"poolPreparedStatements\",\n@@ -295,11 +301,11 @@ public Object getObjectInstance(final Object refObj, final Name name,\n                 if (ra != null && ra.getContent() != null) {\n                     setUrl(ra.getContent().toString());\n                 }\n-                ra = ref.get(\"user\");\n+                ra = ref.get(KEY_USER);\n                 if (ra != null && ra.getContent() != null) {\n                     setUser(ra.getContent().toString());\n                 }\n-                ra = ref.get(\"password\");\n+                ra = ref.get(KEY_PASSWORD);\n                 if (ra != null && ra.getContent() != null) {\n                     setPassword(ra.getContent().toString());\n                 }\n@@ -389,11 +395,11 @@ public Properties getConnectionProperties() {\n     public void setConnectionProperties(final Properties props) {\n         assertInitializationAllowed();\n         connectionProperties = props;\n-        if (connectionProperties.containsKey(\"user\")) {\n-            setUser(connectionProperties.getProperty(\"user\"));\n+        if (connectionProperties.containsKey(KEY_USER)) {\n+            setUser(connectionProperties.getProperty(KEY_USER));\n         }\n-        if (connectionProperties.containsKey(\"password\")) {\n-            setPassword(connectionProperties.getProperty(\"password\"));\n+        if (connectionProperties.containsKey(KEY_PASSWORD)) {\n+            setPassword(connectionProperties.getProperty(KEY_PASSWORD));\n         }\n     }\n \n@@ -437,7 +443,11 @@ public void setPassword(final String v) {\n         assertInitializationAllowed();\n         this.password = v;\n         if (connectionProperties != null) {\n-            connectionProperties.setProperty(\"password\", v);\n+            if (v == null) {\n+                connectionProperties.remove(KEY_PASSWORD);\n+            } else {\n+                connectionProperties.setProperty(KEY_PASSWORD, v);\n+            }\n         }\n     }\n \n@@ -476,7 +486,11 @@ public void setUser(final String v) {\n         assertInitializationAllowed();\n         this.user = v;\n         if (connectionProperties != null) {\n-            connectionProperties.setProperty(\"user\", v);\n+            if (v == null) {\n+                connectionProperties.remove(KEY_USER);\n+            } else {\n+                connectionProperties.setProperty(KEY_USER, v);\n+            }\n         }\n     }\n ",
                "changes": 38
            },
            {
                "status": "modified",
                "additions": 18,
                "raw_url": "https://github.com/apache/commons-dbcp/raw/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java",
                "contents_url": "https://api.github.com/repos/apache/commons-dbcp/contents/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java?ref=624cdb14f819ec4ce5a5c02df0293f317cf9737a",
                "filename": "src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java",
                "deletions": 0,
                "sha": "52e6729637848655d107f2063b87d4d057bfe742",
                "blob_url": "https://github.com/apache/commons-dbcp/blob/624cdb14f819ec4ce5a5c02df0293f317cf9737a/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java",
                "patch": "@@ -170,6 +170,15 @@ public void testSetUserNull() throws Exception {\n         assertEquals(null, pcds.getUser());\n     }\n     \n+    @Test\n+    public void testSetUserNullWithConnectionProperties() throws Exception {\n+        pcds.setConnectionProperties(new Properties());\n+        pcds.setUser(\"Alice\");\n+        assertEquals(\"Alice\", pcds.getUser());\n+        pcds.setUser(null);\n+        assertEquals(null, pcds.getUser());\n+    }\n+    \n     @Test\n     public void testSetPasswordNull() throws Exception {\n         pcds.setPassword(\"Secret\");\n@@ -178,6 +187,15 @@ public void testSetPasswordNull() throws Exception {\n         assertEquals(null, pcds.getPassword());\n     }\n     \n+    @Test\n+    public void testSetPasswordNullWithConnectionProperties() throws Exception {\n+        pcds.setConnectionProperties(new Properties());\n+        pcds.setPassword(\"Secret\");\n+        assertEquals(\"Secret\", pcds.getPassword());\n+        pcds.setPassword(null);\n+        assertEquals(null, pcds.getPassword());\n+    }\n+    \n     /**\n      * JIRA: DBCP-442\n      */",
                "changes": 18
            }
        ],
        "unit_tests": [
            "TestDriverAdapterCPDS.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java",
        "buggy_files": [
            "src/changes/changes.xml",
            "src/main/java/org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS.java"
        ],
        "fixed": true
    }
]