{
    "karaf-cave_480ffd9": {
        "bug_id": "karaf-cave_480ffd9",
        "commit": "https://github.com/apache/karaf-cave/commit/480ffd9581032fb576d22b9976c04ebdc6e236d4",
        "file": [
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/karaf-cave/blob/480ffd9581032fb576d22b9976c04ebdc6e236d4/deployer/service/src/main/java/org/apache/karaf/cave/deployer/service/impl/DeployerImpl.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/karaf-cave/contents/deployer/service/src/main/java/org/apache/karaf/cave/deployer/service/impl/DeployerImpl.java?ref=480ffd9581032fb576d22b9976c04ebdc6e236d4",
                "deletions": 28,
                "filename": "deployer/service/src/main/java/org/apache/karaf/cave/deployer/service/impl/DeployerImpl.java",
                "patch": "@@ -75,6 +75,9 @@ public void setConfigurationAdmin(ConfigurationAdmin configurationAdmin) {\n     public void registerConnection(Connection connection) throws Exception {\n         Configuration configuration = configurationAdmin.getConfiguration(CONFIG_PID);\n         Dictionary<String, Object> properties = configuration.getProperties();\n+        if (properties == null) {\n+            properties = new Hashtable<>();\n+        }\n         properties.put(connection.getName() + \".jmx\", connection.getJmxUrl());\n         properties.put(connection.getName() + \".instance\", connection.getKarafName());\n         properties.put(connection.getName() + \".username\", connection.getUser());\n@@ -86,11 +89,13 @@ public void registerConnection(Connection connection) throws Exception {\n     public void deleteConnection(String connection) throws Exception {\n         Configuration configuration = configurationAdmin.getConfiguration(CONFIG_PID);\n         Dictionary<String, Object> properties = configuration.getProperties();\n-        properties.remove(connection + \".jmx\");\n-        properties.remove(connection + \".instance\");\n-        properties.remove(connection + \".username\");\n-        properties.remove(connection + \".password\");\n-        configuration.update(properties);\n+        if (properties != null) {\n+            properties.remove(connection + \".jmx\");\n+            properties.remove(connection + \".instance\");\n+            properties.remove(connection + \".username\");\n+            properties.remove(connection + \".password\");\n+            configuration.update(properties);\n+        }\n     }\n \n     @Override\n@@ -99,18 +104,20 @@ public void deleteConnection(String connection) throws Exception {\n \n         Configuration configuration = configurationAdmin.getConfiguration(CONFIG_PID);\n         Dictionary<String, Object> properties = configuration.getProperties();\n-        Enumeration<String> keys = properties.keys();\n-        while (keys.hasMoreElements()) {\n-            String key = keys.nextElement();\n-            if (key.endsWith(\".jmx\")) {\n-                String connectionName = key.substring(0, key.indexOf(\".jmx\"));\n-                Connection connection = new Connection();\n-                connection.setName(connectionName);\n-                connection.setJmxUrl((String) properties.get(connectionName + \".jmx\"));\n-                connection.setKarafName((String) properties.get(connectionName + \".instance\"));\n-                connection.setUser((String) properties.get(connectionName + \".username\"));\n-                connection.setPassword((String) properties.get(connectionName + \".password\"));\n-                connections.add(connection);\n+        if (properties != null) {\n+            Enumeration<String> keys = properties.keys();\n+            while (keys.hasMoreElements()) {\n+                String key = keys.nextElement();\n+                if (key.endsWith(\".jmx\")) {\n+                    String connectionName = key.substring(0, key.indexOf(\".jmx\"));\n+                    Connection connection = new Connection();\n+                    connection.setName(connectionName);\n+                    connection.setJmxUrl((String) properties.get(connectionName + \".jmx\"));\n+                    connection.setKarafName((String) properties.get(connectionName + \".instance\"));\n+                    connection.setUser((String) properties.get(connectionName + \".username\"));\n+                    connection.setPassword((String) properties.get(connectionName + \".password\"));\n+                    connections.add(connection);\n+                }\n             }\n         }\n \n@@ -121,18 +128,21 @@ private Connection getConnection(String name) throws Exception {\n         Connection connection = new Connection();\n         Configuration configuration = configurationAdmin.getConfiguration(CONFIG_PID);\n         Dictionary<String, Object> properties = configuration.getProperties();\n-        String jmx = (String) properties.get(name + \".jmx\");\n-        String instance = (String) properties.get(name + \".instance\");\n-        String username = (String) properties.get(name + \".username\");\n-        String password = (String) properties.get(name + \".password\");\n-        if (jmx == null || instance == null) {\n-            throw new IllegalArgumentException(\"No connection found with name \" + name);\n+        if (properties != null) {\n+            String jmx = (String) properties.get(name + \".jmx\");\n+            String instance = (String) properties.get(name + \".instance\");\n+            String username = (String) properties.get(name + \".username\");\n+            String password = (String) properties.get(name + \".password\");\n+            if (jmx == null || instance == null) {\n+                throw new IllegalArgumentException(\"No connection found with name \" + name);\n+            }\n+            connection.setJmxUrl(jmx);\n+            connection.setKarafName(instance);\n+            connection.setUser(username);\n+            connection.setPassword(password);\n+            return connection;\n         }\n-        connection.setJmxUrl(jmx);\n-        connection.setKarafName(instance);\n-        connection.setUser(username);\n-        connection.setPassword(password);\n-        return connection;\n+        return null;\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/karaf-cave/raw/480ffd9581032fb576d22b9976c04ebdc6e236d4/deployer/service/src/main/java/org/apache/karaf/cave/deployer/service/impl/DeployerImpl.java",
                "sha": "22d549ed1c170750b7ed6cbb41cd05b68c21bc47",
                "status": "modified"
            }
        ],
        "message": "[KARAF-5556] Prevent NPE dealing with Cave Deployer connections",
        "parent": "https://github.com/apache/karaf-cave/commit/281f15e7a7a3b11fa812ac4eca4130cec1a98649",
        "repo": "karaf-cave",
        "unit_tests": [
            "DeployerImplTest.java"
        ]
    }
}