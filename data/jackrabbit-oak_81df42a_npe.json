[
    {
        "repo": "jackrabbit-oak",
        "commit": "https://github.com/apache/jackrabbit-oak/commit/81df42a4951b96f87cbe108bf58715c8bc318b93",
        "bug_id": "jackrabbit-oak_81df42a",
        "message": "OAK-3123: NPE in RecordIdMap\n* Properly guard against NPE\n* Added test case for empty map\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1691965 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit-oak/commit/8f832fdbdfc169715462c2a853175ec573fc5045",
        "patched_files": [
            "RecordIdMap.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/81df42a4951b96f87cbe108bf58715c8bc318b93/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java?ref=81df42a4951b96f87cbe108bf58715c8bc318b93",
                "filename": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java",
                "deletions": 4,
                "sha": "fe62ffdc3c16a5f4e4ee451736b7c98189e240b0",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/81df42a4951b96f87cbe108bf58715c8bc318b93/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java",
                "patch": "@@ -29,8 +29,11 @@\n  * A memory optimised map of {@code short} key to {@link RecordId} values.\n  */\n public class RecordIdMap {\n-    private short[] keys;\n-    private RecordId[] values;\n+    private static final short[] NO_KEYS = new short[0];\n+    private static final RecordId[] NO_VALUES = new RecordId[0];\n+\n+    private short[] keys = NO_KEYS;\n+    private RecordId[] values = NO_VALUES;\n \n     /**\n      * Associates {@code key} with {@code value} if not already present\n@@ -39,7 +42,7 @@\n      * @return  {@code true} if added, {@code false} if already present\n      */\n     public boolean put(short key, @Nonnull RecordId value) {\n-        if (keys == null) {\n+        if (keys.length == 0) {\n             keys = new short[1];\n             values = new RecordId[1];\n             keys[0] = key;\n@@ -90,7 +93,7 @@ public RecordId get(short key) {\n      * @return  {@code true} iff {@code key} is present.\n      */\n     public boolean containsKey(short key) {\n-        return keys != null && binarySearch(keys, key) >= 0;\n+        return binarySearch(keys, key) >= 0;\n     }\n \n     /**\n@@ -105,6 +108,7 @@ public int size() {\n      * the natural ordering of shorts.\n      * @param index\n      * @return the key at {@code index}\n+     * @throws ArrayIndexOutOfBoundsException if not {@code 0 <= index < size()}\n      */\n     public short getKey(int index) {\n         return keys[index];\n@@ -115,6 +119,7 @@ public short getKey(int index) {\n      * the natural ordering of shorts.\n      * @param index\n      * @return the value at {@code index}\n+     * @throws ArrayIndexOutOfBoundsException if not {@code 0 <= index < size()}\n      */\n     @Nonnull\n     public RecordId getRecordId(int index) {",
                "changes": 13
            },
            {
                "status": "modified",
                "additions": 19,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/81df42a4951b96f87cbe108bf58715c8bc318b93/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMapTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMapTest.java?ref=81df42a4951b96f87cbe108bf58715c8bc318b93",
                "filename": "oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMapTest.java",
                "deletions": 0,
                "sha": "25ccd576545d5f6d4cce2454bc22dbfb9fd454ee",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/81df42a4951b96f87cbe108bf58715c8bc318b93/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMapTest.java",
                "patch": "@@ -25,7 +25,10 @@\n import static org.apache.jackrabbit.oak.plugins.segment.Segment.encode;\n import static org.apache.jackrabbit.oak.plugins.segment.TestUtils.newValidOffset;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import java.util.Map;\n import java.util.Map.Entry;\n@@ -36,6 +39,22 @@\n \n public class RecordIdMapTest {\n \n+    @Test\n+    public void testEmpty() {\n+        RecordIdMap map = new RecordIdMap();\n+        assertFalse(map.containsKey((short) 0));\n+        assertNull(map.get((short) 0));\n+        assertEquals(0, map.size());\n+        try {\n+            map.getKey(0);\n+            fail(\"Expected AIOBE\");\n+        } catch (ArrayIndexOutOfBoundsException ignored) {}\n+        try {\n+            map.getRecordId(0);\n+            fail(\"Expected AIOBE\");\n+        } catch (ArrayIndexOutOfBoundsException ignored) {}\n+    }\n+\n     @Test\n     public void testRecordIdMap() {\n         int maxSegments = 1000;",
                "changes": 19
            }
        ],
        "unit_tests": [
            "RecordIdMapTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMapTest.java",
        "buggy_files": [
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java"
        ],
        "fixed": true
    }
]