{
    "sling-org-apache-sling-servlets-post_7ceda6d": {
        "bug_id": "sling-org-apache-sling-servlets-post_7ceda6d",
        "commit": "https://github.com/apache/sling-org-apache-sling-servlets-post/commit/7ceda6db0da9581bf1a691f4cd736dd90602625c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/blob/7ceda6db0da9581bf1a691f4cd736dd90602625c/src/main/java/org/apache/sling/servlets/post/impl/SlingPostServlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-servlets-post/contents/src/main/java/org/apache/sling/servlets/post/impl/SlingPostServlet.java?ref=7ceda6db0da9581bf1a691f4cd736dd90602625c",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/servlets/post/impl/SlingPostServlet.java",
                "patch": "@@ -215,7 +215,7 @@ protected void doPost(SlingHttpServletRequest request,\n      HtmlResponse createHtmlResponse(SlingHttpServletRequest req) {\n         @SuppressWarnings({\"MismatchedQueryAndUpdateOfCollection\"})\n         MediaRangeList mediaRangeList = new MediaRangeList(req);\n-        if (mediaRangeList.prefer(\"text/html\", JSONResponse.RESPONSE_CONTENT_TYPE).equals(JSONResponse.RESPONSE_CONTENT_TYPE)) {\n+        if (JSONResponse.RESPONSE_CONTENT_TYPE.equals(mediaRangeList.prefer(\"text/html\", JSONResponse.RESPONSE_CONTENT_TYPE))) {\n             return new JSONResponse();\n         } else {\n             return new HtmlResponse();",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/raw/7ceda6db0da9581bf1a691f4cd736dd90602625c/src/main/java/org/apache/sling/servlets/post/impl/SlingPostServlet.java",
                "sha": "3ff104babe35c76779814c770a57231effcf2dff",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/blob/7ceda6db0da9581bf1a691f4cd736dd90602625c/src/main/java/org/apache/sling/servlets/post/impl/helper/MediaRangeList.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-servlets-post/contents/src/main/java/org/apache/sling/servlets/post/impl/helper/MediaRangeList.java?ref=7ceda6db0da9581bf1a691f4cd736dd90602625c",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/servlets/post/impl/helper/MediaRangeList.java",
                "patch": "@@ -145,7 +145,8 @@ public String prefer(String... mediaRanges) {\n         for (String mediaRange : mediaRanges) {\n             ranges.add(new MediaRange(mediaRange));\n         }\n-        return prefer(ranges).toString();\n+        final MediaRange preferred = prefer(ranges);\n+        return(preferred == null ? null : preferred.toString());\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/raw/7ceda6db0da9581bf1a691f4cd736dd90602625c/src/main/java/org/apache/sling/servlets/post/impl/helper/MediaRangeList.java",
                "sha": "4e8ac6a27851291b95d4f4c450a0bf0c8e995569",
                "status": "modified"
            }
        ],
        "message": "SLING-1336 - avoid NPE if no Accept header\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@921422 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-servlets-post/commit/ab9bb79e5fde0094f4fd2620b493c1d69f3e35ec",
        "repo": "sling-org-apache-sling-servlets-post",
        "unit_tests": [
            "MediaRangeListTest.java"
        ]
    },
    "sling-org-apache-sling-servlets-post_ac27ffa": {
        "bug_id": "sling-org-apache-sling-servlets-post_ac27ffa",
        "commit": "https://github.com/apache/sling-org-apache-sling-servlets-post/commit/ac27ffafbc42486636a1bce8491f2ced5fc85cd9",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/blob/ac27ffafbc42486636a1bce8491f2ced5fc85cd9/src/main/java/org/apache/sling/servlets/post/impl/helper/SlingPropertyValueHandler.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-servlets-post/contents/src/main/java/org/apache/sling/servlets/post/impl/helper/SlingPropertyValueHandler.java?ref=ac27ffafbc42486636a1bce8491f2ced5fc85cd9",
                "deletions": 11,
                "filename": "src/main/java/org/apache/sling/servlets/post/impl/helper/SlingPropertyValueHandler.java",
                "patch": "@@ -32,7 +32,6 @@\n import javax.jcr.Value;\n import javax.jcr.ValueFactory;\n import javax.jcr.nodetype.NodeType;\n-import javax.jcr.nodetype.NodeTypeIterator;\n import javax.jcr.nodetype.PropertyDefinition;\n \n import org.apache.sling.api.resource.ModifiableValueMap;\n@@ -281,9 +280,6 @@ private void setPropertyAsIs(final Modifiable parent, final RequestProperty prop\n                 }\n             }\n \n-            // TODO - we should check for session\n-            final ValueFactory valFac = parent.resource.getResourceResolver().adaptTo(Session.class).getValueFactory();\n-\n             final boolean multiValue = isMultiValue(parent, prop, values);\n             final int type = getType(parent, prop);\n \n@@ -292,13 +288,17 @@ private void setPropertyAsIs(final Modifiable parent, final RequestProperty prop\n                 removeIfSingleValueProperty(parent, prop);\n             }\n \n-            if (type == PropertyType.DATE) {\n-                if (storeAsDate(parent, prop.getName(), values, multiValue, valFac)) {\n-                    return;\n-                }\n-            } else if (isReferencePropertyType(type)) {\n-                if (storeAsReference(parent, prop.getName(), values, type, multiValue, valFac)) {\n-                    return;\n+            Session s = parent.resource.getResourceResolver().adaptTo(Session.class);\n+            if (s != null) {\n+                final ValueFactory valFac = s.getValueFactory();\n+                if (type == PropertyType.DATE) {\n+                    if (storeAsDate(parent, prop.getName(), values, multiValue, valFac)) {\n+                        return;\n+                    }\n+                } else if (isReferencePropertyType(type)) {\n+                    if (storeAsReference(parent, prop.getName(), values, type, multiValue, valFac)) {\n+                        return;\n+                    }\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-servlets-post/raw/ac27ffafbc42486636a1bce8491f2ced5fc85cd9/src/main/java/org/apache/sling/servlets/post/impl/helper/SlingPropertyValueHandler.java",
                "sha": "f36974bd5271b4951008883ebf231b64cc0f16d5",
                "status": "modified"
            }
        ],
        "message": "SLING-4007 Prevent NPE if Session is not available. Also don't call any code which makes use\n   of the ValueFactory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1629608 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-servlets-post/commit/cd3f7e93dbe58319cad452b7f142b5b77d0db1a4",
        "repo": "sling-org-apache-sling-servlets-post",
        "unit_tests": [
            "SlingPropertyValueHandlerTest.java"
        ]
    }
}