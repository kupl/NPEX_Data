{
    "airavata_05fe41a": {
        "bug_id": "airavata_05fe41a",
        "commit": "https://github.com/apache/airavata/commit/05fe41a4c91c1802e342147deeb2df4f0c5966d8",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java?ref=05fe41a4c91c1802e342147deeb2df4f0c5966d8",
                "deletions": 0,
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "patch": "@@ -479,6 +479,7 @@ private String doStaging(String outputFileStagingPath, String paramValue, Actual\n                 gssCred, outputFile);\n         return outputFileStagingPath + File.separator + fileName;\n     }\n+\n     private String readLastLinesofStdOut(String path, int count) {\n         StringBuffer buffer = new StringBuffer();\n         FileInputStream in = null;",
                "raw_url": "https://github.com/apache/airavata/raw/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "sha": "9ea5072bf68ab49690feac96eef1aa842e9146ff",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java?ref=05fe41a4c91c1802e342147deeb2df4f0c5966d8",
                "deletions": 1,
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "patch": "@@ -100,7 +100,8 @@ public static GramAttributes configureRemoteJob(InvocationContext context) throw\n         }\n         // Using the workflowContext Header values if user provided them in the request and overwrite the default values in DD\n         ContextHeaderDocument.ContextHeader currentContextHeader = WorkflowContextHeaderBuilder.getCurrentContextHeader();\n-        if (currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n+        if (currentContextHeader != null &&\n+                currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n                 currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray().length > 0) {\n             try {\n                 int cpuCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getCpuCount();",
                "raw_url": "https://github.com/apache/airavata/raw/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "sha": "9dd19dde22a3374d772c110f98763fdbb9bf6c01",
                "status": "modified"
            }
        ],
        "message": "Fixing a NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1350007 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/184c805b1cd17115cf8c737deecfb444f00e4879",
        "patched_files": [
            "GramProvider.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "GramProviderTest.java"
        ]
    },
    "airavata_07009cb": {
        "bug_id": "airavata_07009cb",
        "commit": "https://github.com/apache/airavata/commit/07009cba4296d915c767114e50e778282dd25e08",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java?ref=07009cba4296d915c767114e50e778282dd25e08",
                "deletions": 0,
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "patch": "@@ -79,6 +79,8 @@ public void setUp() throws Exception {\n         ApplicationDescription ec2Desc = new ApplicationDescription(Ec2ApplicationDeploymentType.type);\n         Ec2ApplicationDeploymentType ec2App = (Ec2ApplicationDeploymentType)ec2Desc.getType();\n \n+        String serviceName = \"Gnome_distance_calculation_workflow\";\n+        ec2Desc.getType().addNewApplicationName().setStringValue(serviceName);\n         ec2App.setJobType(JobTypeType.EC_2);\n         ec2App.setExecutable(\"/home/ec2-user/run.sh\");\n         ec2App.setExecutableType(\"sh\");",
                "raw_url": "https://github.com/apache/airavata/raw/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "sha": "7152bda241cc6d1ea171852c0617f3d28779a903",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1454626 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/8c8f667be61896fed1fb7a5aa2da104fd9a5a4c1",
        "patched_files": [
            "EC2Provider.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "EC2ProviderTest.java"
        ]
    },
    "airavata_1bc3ce8": {
        "bug_id": "airavata_1bc3ce8",
        "commit": "https://github.com/apache/airavata/commit/1bc3ce8b7010395648d27227a5d1a0756e85c434",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "deletions": 13,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "patch": "@@ -242,9 +242,12 @@ public String addExperimentError(ErrorModel experimentError, String expId) throw\n     }\n \n     public String addProcess(ProcessModel process, String expId) throws RegistryException {\n+\n         try {\n             ProcessResource processResource = new ProcessResource();\n-            processResource.setProcessId(getProcessID(expId));\n+            String processId = getProcessID(expId);\n+            process.setProcessId(processId);\n+            processResource.setProcessId(processId);\n             processResource.setExperimentId(expId);\n             processResource.setCreationTime(AiravataUtils.getTime(process.getCreationTime()));\n             processResource.setLastUpdateTime(AiravataUtils.getTime(process.getLastUpdateTime()));\n@@ -286,7 +289,7 @@ public String addProcess(ProcessModel process, String expId) throws RegistryExce\n             logger.error(expId, \"Error while adding process...\", e);\n             throw new RegistryException(e);\n         }\n-        return expId;\n+        return process.getProcessId();\n     }\n \n \n@@ -364,17 +367,18 @@ public String addProcessStatus(ProcessStatus processStatus, String processID) th\n             processResource.setProcessId(processID);\n             ProcessStatusResource status = processResource.getProcessStatus();\n             if (status == null) {\n-                status = (ProcessStatusResource) processResource.create(ResourceType.EXPERIMENT_STATUS);\n-            }\n-            if (isValidStatusTransition(ProcessState.valueOf(status.getState()), processStatus.getState())) {\n-                status.setStatusId(getStatusID(processID));\n-                status.setProcessId(processID);\n-                status.setTimeOfStateChange(AiravataUtils.getTime(processStatus.getTimeOfStateChange()));\n-                status.setState(processStatus.getState().toString());\n-                status.setReason(processStatus.getReason());\n-                status.save();\n-                logger.debug(processID, \"Added process {} status to {}.\", processID, processStatus.toString());\n-            }\n+                status = (ProcessStatusResource) processResource.create(ResourceType.PROCESS_STATUS);\n+            }\n+            status.setStatusId(getStatusID(processID));\n+            status.setProcessId(processID);\n+            status.setTimeOfStateChange(AiravataUtils.getTime(processStatus.getTimeOfStateChange()));\n+            ProcessState state = processStatus.getState();\n+            if (state != null){\n+                status.setState(state.toString());\n+            }\n+            status.setReason(processStatus.getReason());\n+            status.save();\n+            logger.debug(processID, \"Added process {} status to {}.\", processID, processStatus.toString());\n         } catch (Exception e) {\n             logger.error(processID, \"Error while adding process status...\", e);\n             throw new RegistryException(e);",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "sha": "413fbe5bd1d55fa19daa9aa4bfbe446c0a9a0f86",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "deletions": 1,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "patch": "@@ -105,7 +105,7 @@\n \t// Task table\n     public final class TaskConstants {\n         public static final String TASK_ID = \"taskId\";\n-        public static final String PROCESS_ID = \"processId\";\n+        public static final String PROCESS_ID = \"parentProcessId\";\n     }\n \n     // Task Error table",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "sha": "8df4ac25cce96cc3f2614c791ca65414934e21e3",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "deletions": 2,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.resources;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExpCatResourceUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExperimentCatResource;\n import org.apache.airavata.registry.core.experiment.catalog.ResourceType;\n@@ -506,8 +507,11 @@ public ExperimentStatusResource getExperimentStatus() throws RegistryException{\n         }else{\n             ExperimentStatusResource max = experimentStatusResources.get(0);\n             for(int i=1; i<experimentStatusResources.size();i++){\n-                if(experimentStatusResources.get(i).getTimeOfStateChange().after(max.getTimeOfStateChange())){\n-                    max = experimentStatusResources.get(i);\n+                Timestamp timeOfStateChange = experimentStatusResources.get(i).getTimeOfStateChange();\n+                if (timeOfStateChange != null){\n+                    if(timeOfStateChange.after(max.getTimeOfStateChange())){\n+                        max = experimentStatusResources.get(i);\n+                    }\n                 }\n             }\n             return max;",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "sha": "c32a636064d27c7e310b66c1e9ddc47ec63e67c9",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.resources;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExpCatResourceUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExperimentCatResource;\n import org.apache.airavata.registry.core.experiment.catalog.ResourceType;\n@@ -448,10 +449,10 @@ public void save() throws RegistryException{\n             process.setCreationTime(creationTime);\n             process.setLastUpdateTime(lastUpdateTime);\n             process.setProcessDetail(processDetail);\n-            process.setApplicationInterfaceId(applicationInterfaceId);\n             process.setTaskDag(taskDag);\n             process.setComputeResourceId(computeResourceId);\n             process.setApplicationInterfaceId(applicationInterfaceId);\n+            process.setApplicationDeploymentId(applicationDeploymentId);\n             process.setGatewayExecutionId(gatewayExecutionId);\n             process.setEnableEmailNotification(enableEmailNotification);\n             process.setEmailAddresses(emailAddresses);\n@@ -507,8 +508,11 @@ public ProcessStatusResource getProcessStatus() throws RegistryException{\n         }else{\n             ProcessStatusResource max = processStatusResources.get(0);\n             for(int i=1; i<processStatusResources.size();i++){\n-                if(processStatusResources.get(i).getTimeOfStateChange().after(max.getTimeOfStateChange())){\n-                    max = processStatusResources.get(i);\n+                Timestamp timeOfStateChange = processStatusResources.get(i).getTimeOfStateChange();\n+                if (timeOfStateChange != null){\n+                    if(timeOfStateChange.after(max.getTimeOfStateChange())){\n+                        max = processStatusResources.get(i);\n+                    }\n                 }\n             }\n             return max;",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "sha": "5a95f97945b80cc04606163402dd35a93812e828",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "deletions": 0,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "patch": "@@ -119,6 +119,7 @@ public static ExperimentModel getExperiment(ExperimentResource experimentResourc\n             experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n             experiment.setUserName(experimentResource.getUserName());\n             experiment.setExperimentName(experimentResource.getExperimentName());\n+            experiment.setExecutionId(experimentResource.getExecutionId());\n             experiment.setDescription(experimentResource.getDescription());\n             experiment.setEnableEmailNotification(experimentResource.getEnableEmailNotification());\n             experiment.setGatewayExecutionId(experimentResource.getGatewayExecutionId());",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "sha": "e3e6a5fd85ec63cc6966ce5ea6436597f0df445a",
                "status": "modified"
            }
        ],
        "message": "Fixing NPEs at registry level",
        "parent": "https://github.com/apache/airavata/commit/b5b522ba4fd07456863538dda35d4e7ce5bf50a2",
        "patched_files": [
            "ProcessResource.java",
            "ExperimentResource.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "ProcessResourceTest.java",
            "ExperimentResourceTest.java"
        ]
    },
    "airavata_565f14f": {
        "bug_id": "airavata_565f14f",
        "commit": "https://github.com/apache/airavata/commit/565f14fb87cc55c333b62f9d608bc7420cc61e80",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/airavata/blob/565f14fb87cc55c333b62f9d608bc7420cc61e80/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=565f14fb87cc55c333b62f9d608bc7420cc61e80",
                "deletions": 1,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "patch": "@@ -765,11 +765,21 @@ private void handleWSComponent(Node node) throws XBayaException {\n \t\t\t\t\t\t\t\t.getID()));\n \n \t\t\t} else {\n-\t\t\t\tinvoker = new GenericInvoker(portTypeQName,\n+                if(this.mode == GUI_MODE){\n+                    //if user configure the msgBox url using the UI we have to pick the latest one which\n+                    //set by the UI\n+\t\t\t\t    invoker = new GenericInvoker(portTypeQName,\n \t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n \t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n \t\t\t\t\t\tthis.engine.getMonitor().getConfiguration().getMessageBoxURL().toASCIIString(),\n \t\t\t\t\t\tgfacURLString, this.notifier);\n+                }else{\n+                    invoker = new GenericInvoker(portTypeQName,\n+\t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n+\t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n+\t\t\t\t\t\tthis.configuration.getMessageBoxURL().toASCIIString(),\n+\t\t\t\t\t\tgfacURLString, this.notifier);\n+                }\n \t\t\t}\n \n \t\t} else {",
                "raw_url": "https://github.com/apache/airavata/raw/565f14fb87cc55c333b62f9d608bc7420cc61e80/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "sha": "348213629e825817fa3e41f151174c685e9bb052",
                "status": "modified"
            }
        ],
        "message": "fixing NPE in Interpreter service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1231322 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/9f5a6d03351bf76a51c4c519c783eccef2de8768",
        "patched_files": [
            "WorkflowInterpreter.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestWorkflowInterpreter.java"
        ]
    },
    "airavata_5c41277": {
        "bug_id": "airavata_5c41277",
        "commit": "https://github.com/apache/airavata/commit/5c412773b4dd63325c0e007d38bce14057193f68",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/5c412773b4dd63325c0e007d38bce14057193f68/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=5c412773b4dd63325c0e007d38bce14057193f68",
                "deletions": 4,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "patch": "@@ -751,16 +751,16 @@ private void handleWSComponent(Node node) throws XBayaException {\n \t\t\t\t}\n \n \t\t\t\tinvoker = new WorkflowInvokerWrapperForGFacInvoker(\n-\t\t\t\t\t\tportTypeQName, gfacURLString, this.configuration\n-\t\t\t\t\t\t\t\t.getMessageBoxURL().toString(), leadCtxHeader,\n+\t\t\t\t\t\tportTypeQName, gfacURLString,\n+                        this.engine.getMonitor().getConfiguration().getMessageBoxURL().toString(), leadCtxHeader,\n \t\t\t\t\t\tthis.notifier.createServiceNotificationSender(node\n \t\t\t\t\t\t\t\t.getID()));\n \n \t\t\t} else {\n \t\t\t\tinvoker = new GenericInvoker(portTypeQName,\n \t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n \t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n-\t\t\t\t\t\tthis.configuration.getMessageBoxURL().toString(),\n+\t\t\t\t\t\tthis.engine.getMonitor().getConfiguration().getMessageBoxURL().toASCIIString(),\n \t\t\t\t\t\tgfacURLString, this.notifier);\n \t\t\t}\n \n@@ -1326,7 +1326,7 @@ private void runInThread(LinkedList<String> listOfValues,\n \t\t\tfor (Iterator<String> iterator = listOfValues.iterator(); iterator\n \t\t\t\t\t.hasNext();) {\n \t\t\t\tString input = iterator.next();\n-\t\t\t\tfinal String gfacURLString = this.engine.getConfiguration()\n+\t\t\t\tfinal String gfacURLString = this.configuration\n \t\t\t\t\t\t.getGFacURL().toString();\n \n \t\t\t\tif (middleNode instanceof WSNode) {",
                "raw_url": "https://github.com/apache/airavata/raw/5c412773b4dd63325c0e007d38bce14057193f68/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "sha": "7a1a3a5c0516b9465037a4873ff68edc5b7de142",
                "status": "modified"
            }
        ],
        "message": "fixing NPE during invocation of interpreterservice.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1230297 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/6eba54cf0b7786e3c22a6fd03ecf81fece01dddd",
        "patched_files": [
            "WorkflowInterpreter.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestWorkflowInterpreter.java"
        ]
    },
    "airavata_6938f90": {
        "bug_id": "airavata_6938f90",
        "commit": "https://github.com/apache/airavata/commit/6938f907f6d994a84f0ed6cd02291ed828211ca9",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "deletions": 10,
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "patch": "@@ -48,7 +48,7 @@\n public class CreateLaunchExperiment {\n \n     //FIXME: Read from a config file\n-    public static final String THRIFT_SERVER_HOST = \"localhost\";\n+    public static final String THRIFT_SERVER_HOST = \"gw56.iu.xsede.org\";\n     public static final int THRIFT_SERVER_PORT = 8930;\n //\tpublic static final String THRIFT_SERVER_HOST = \"gw111.iu.xsede.org\";\n //\tpublic static final int THRIFT_SERVER_PORT = 9930;\n@@ -58,7 +58,7 @@\n     public static final String DEFAULT_GATEWAY = \"default\";\n     private static Airavata.Client airavataClient;\n \n-    private static String echoAppId = \"Echo_b730bf47-6a22-44ac-91f3-91bd463bd627\";\n+    private static String echoAppId = \"Python_Echo_069ea651-4937-4b89-9684-fb0682ac52f5\";\n     private static String mpiAppId = \"HelloMPI_71b6f45e-40c2-46e9-a417-160b2640fcb9\";\n     private static String wrfAppId = \"WRF_7ad5da38-c08b-417c-a9ea-da9298839762\";\n     private static String amberAppId = \"Amber_74ad818e-7633-476a-b861-952de9b0a529\";\n@@ -967,19 +967,19 @@ public static String createExperimentEchoForLocalHost(Airavata.Client client) th\n     public static String createEchoExperimentForStampede(Airavata.Client client) throws TException {\n         try {\n             List<InputDataObjectType> exInputs = client.getApplicationInputs(new AuthzToken(\"\"), echoAppId);\n-            for (InputDataObjectType inputDataObjectType : exInputs) {\n-                if (inputDataObjectType.getName().equalsIgnoreCase(\"Input_to_Echo\")) {\n-                    inputDataObjectType.setValue(\"Hello World\");\n-                }\n-            }\n-            List<OutputDataObjectType> exOut = client.getApplicationOutputs(new AuthzToken(\"\"), echoAppId);\n+//            for (InputDataObjectType inputDataObjectType : exInputs) {\n+//                if (inputDataObjectType.getName().equalsIgnoreCase(\"Input_to_Echo\")) {\n+//                    inputDataObjectType.setValue(\"Hello World\");\n+//                }\n+//            }\n+//            List<OutputDataObjectType> exOut = client.getApplicationOutputs(new AuthzToken(\"\"), echoAppId);\n \n             Project project = ProjectModelUtil.createProject(\"default\", \"admin\", \"test project\");\n \t        String projectId = client.createProject(new AuthzToken(\"\"), DEFAULT_GATEWAY, project);\n \n             ExperimentModel simpleExperiment =\n                     ExperimentModelUtil.createSimpleExperiment(DEFAULT_GATEWAY,projectId, \"admin\", \"echoExperiment\", \"SimpleEcho3\", echoAppId, exInputs);\n-            simpleExperiment.setExperimentOutputs(exOut);\n+//            simpleExperiment.setExperimentOutputs(exOut);\n \n             Map<String, String> computeResources = airavataClient.getAvailableAppInterfaceComputeResources(new AuthzToken(\"\"), echoAppId);\n             if (computeResources != null && computeResources.size() != 0) {\n@@ -1441,7 +1441,7 @@ public static String createExperimentForTrestlesAmber(Airavata.Client client) th\n     public static void launchExperiment(Airavata.Client client, String expId)\n             throws TException {\n         try {\n-            String tokenId = \"-0bbb-403b-a88a-42b6dbe198e9\";\n+            String tokenId = \"47507a08-1579-4883-be03-3c8e3b7da061\";\n             client.launchExperiment(new AuthzToken(\"\"), expId, tokenId);\n         } catch (ExperimentNotFoundException e) {\n             logger.error(\"Error occured while launching the experiment...\", e.getMessage());",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "sha": "2d045bdf37d2dd368d93e270e188ebfaf7826c1f",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "deletions": 4,
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "patch": "@@ -29,8 +29,6 @@\n import org.apache.airavata.credential.store.store.impl.CredentialReaderImpl;\n import org.apache.airavata.gfac.core.context.ProcessContext;\n import org.apache.airavata.gfac.core.context.TaskContext;\n-import org.apache.airavata.gfac.core.watcher.CancelRequestWatcher;\n-import org.apache.airavata.gfac.core.watcher.RedeliveryRequestWatcher;\n import org.apache.airavata.messaging.core.MessageContext;\n import org.apache.airavata.model.appcatalog.appdeployment.ApplicationDeploymentDescription;\n import org.apache.airavata.model.appcatalog.appdeployment.ApplicationParallelismType;\n@@ -1008,10 +1006,36 @@ public static boolean isEmailBasedJobMonitor(ProcessContext processContext) thro\n     public static JobSubmissionInterface getPreferredJobSubmissionInterface(ProcessContext context) throws AppCatalogException {\n         try {\n             String resourceHostId = context.getComputeResourceDescription().getComputeResourceId();\n+            ComputeResourcePreference resourcePreference = context.getComputeResourcePreference();\n+            JobSubmissionProtocol preferredJobSubmissionProtocol = resourcePreference.getPreferredJobSubmissionProtocol();\n             ComputeResourceDescription resourceDescription = context.getAppCatalog().getComputeResource().getComputeResource(resourceHostId);\n             List<JobSubmissionInterface> jobSubmissionInterfaces = resourceDescription.getJobSubmissionInterfaces();\n+            Map<JobSubmissionProtocol, List<JobSubmissionInterface>> orderedInterfaces = new HashMap<>();\n+            List<JobSubmissionInterface> interfaces = new ArrayList<>();\n             if (jobSubmissionInterfaces != null && !jobSubmissionInterfaces.isEmpty()) {\n-                Collections.sort(jobSubmissionInterfaces, new Comparator<JobSubmissionInterface>() {\n+                for (JobSubmissionInterface submissionInterface : jobSubmissionInterfaces){\n+\n+                    if (preferredJobSubmissionProtocol != null){\n+                        if (preferredJobSubmissionProtocol.toString().equals(submissionInterface.getJobSubmissionProtocol().toString())){\n+                            if (orderedInterfaces.containsKey(submissionInterface.getJobSubmissionProtocol())){\n+                                List<JobSubmissionInterface> interfaceList = orderedInterfaces.get(submissionInterface.getJobSubmissionProtocol());\n+                                interfaceList.add(submissionInterface);\n+                            }else {\n+                                interfaces.add(submissionInterface);\n+                                orderedInterfaces.put(submissionInterface.getJobSubmissionProtocol(), interfaces);\n+                            }\n+                        }\n+                    }else {\n+                        Collections.sort(jobSubmissionInterfaces, new Comparator<JobSubmissionInterface>() {\n+                            @Override\n+                            public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionInterface jobSubmissionInterface2) {\n+                                return jobSubmissionInterface.getPriorityOrder() - jobSubmissionInterface2.getPriorityOrder();\n+                            }\n+                        });\n+                    }\n+                }\n+                interfaces = orderedInterfaces.get(preferredJobSubmissionProtocol);\n+                Collections.sort(interfaces, new Comparator<JobSubmissionInterface>() {\n                     @Override\n                     public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionInterface jobSubmissionInterface2) {\n                         return jobSubmissionInterface.getPriorityOrder() - jobSubmissionInterface2.getPriorityOrder();\n@@ -1020,7 +1044,7 @@ public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionI\n             } else {\n                 throw new AppCatalogException(\"Compute resource should have at least one job submission interface defined...\");\n             }\n-            return jobSubmissionInterfaces.get(0);\n+            return interfaces.get(0);\n         } catch (AppCatalogException e) {\n             throw new AppCatalogException(\"Error occurred while retrieving data from app catalog\", e);\n         }",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "sha": "5880fcc348aac724f53ee311a63fd32fa063c81c",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "deletions": 10,
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "patch": "@@ -103,16 +103,18 @@ private void populateAddressAndParserMap(Map<ResourceJobManagerType, ResourceCon\n \t\t\tResourceJobManagerType type = resourceConfigEntry.getKey();\n \t\t\tResourceConfig config = resourceConfigEntry.getValue();\n \t\t\tList<String> resourceEmailAddresses = config.getResourceEmailAddresses();\n-\t\t\tfor (String resourceEmailAddress : resourceEmailAddresses) {\n-\t\t\t\taddressMap.put(resourceEmailAddress, type);\n-\t\t\t}\n-\t\t\ttry {\n-\t\t\t\tClass<? extends EmailParser> emailParserClass = Class.forName(config.getEmailParser()).asSubclass(EmailParser.class);\n-\t\t\t\tEmailParser emailParser = emailParserClass.getConstructor().newInstance();\n-\t\t\t\temailParserMap.put(type, emailParser);\n-\t\t\t} catch (Exception e) {\n-\t\t\t\tthrow new AiravataException(\"Error while instantiation email parsers\", e);\n-\t\t\t}\n+            if (resourceEmailAddresses != null && !resourceEmailAddresses.isEmpty()){\n+                for (String resourceEmailAddress : resourceEmailAddresses) {\n+                    addressMap.put(resourceEmailAddress, type);\n+                }\n+                try {\n+                    Class<? extends EmailParser> emailParserClass = Class.forName(config.getEmailParser()).asSubclass(EmailParser.class);\n+                    EmailParser emailParser = emailParserClass.getConstructor().newInstance();\n+                    emailParserMap.put(type, emailParser);\n+                } catch (Exception e) {\n+                    throw new AiravataException(\"Error while instantiation email parsers\", e);\n+                }\n+            }\n \t\t}\n \n \t}",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "sha": "616373dbe60909d70912a9a8d3b8b0ffd71d9b21",
                "status": "modified"
            }
        ],
        "message": "fixing priority order logic and NPE in monitor - AIRAVATA-1820",
        "parent": "https://github.com/apache/airavata/commit/55aa6dfa0b58ff7cb1ec9c54e8b6ba551f2ec0b9",
        "patched_files": [
            "CreateLaunchExperiment.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestCreateLaunchExperiment.java"
        ]
    },
    "airavata_80cbc3e": {
        "bug_id": "airavata_80cbc3e",
        "commit": "https://github.com/apache/airavata/commit/80cbc3e884cbc4f0609d5ff216b59430fee0abaf",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/airavata/blob/80cbc3e884cbc4f0609d5ff216b59430fee0abaf/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java?ref=80cbc3e884cbc4f0609d5ff216b59430fee0abaf",
                "deletions": 9,
                "filename": "tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "patch": "@@ -21,6 +21,7 @@\n package org.apache.airavata.job.monitor.impl.pull.qstat;\n \n import org.apache.airavata.common.utils.ServerSettings;\n+import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gsi.ssh.api.SSHApiException;\n import org.apache.airavata.job.monitor.HostMonitorData;\n import org.apache.airavata.job.monitor.MonitorID;\n@@ -109,12 +110,14 @@ public boolean startPulling() throws AiravataMonitorException {\n         UserMonitorData take = null;\n         JobStatus jobStatus = new JobStatus();\n         MonitorID currentMonitorID = null;\n+        HostDescription currentHostDescription = null;\n         try {\n             take = this.queue.take();\n             List<MonitorID> completedJobs = new ArrayList<MonitorID>();\n             List<HostMonitorData> hostMonitorData = take.getHostMonitorData();\n             for (HostMonitorData iHostMonitorData : hostMonitorData) {\n                 if (iHostMonitorData.getHost().getType() instanceof GsisshHostType) {\n+                    currentHostDescription = iHostMonitorData.getHost();\n                     GsisshHostType gsisshHostType = (GsisshHostType) iHostMonitorData.getHost().getType();\n                     String hostName = gsisshHostType.getHostAddress();\n                     ResourceConnection connection = null;\n@@ -183,16 +186,21 @@ public boolean startPulling() throws AiravataMonitorException {\n             } else if (e.getMessage().contains(\"illegally formed job identifier\")) {\n                 logger.error(\"Wrong job ID is given so dropping the job from monitoring system\");\n             } else if (!this.queue.contains(take)) {   // we put the job back to the queue only if its state is not unknown\n-                if (currentMonitorID.getFailedCount() < 2) {\n-                    try {\n-                        currentMonitorID.setFailedCount(currentMonitorID.getFailedCount() + 1);\n-                        this.queue.put(take);\n-                    } catch (InterruptedException e1) {\n-                        e1.printStackTrace();\n-                    }\n+                if (currentMonitorID == null) {\n+                    logger.error(\"Monitoring the jobs failed, for user: \" + take.getUserName()\n+                            + \" in Host: \" + currentHostDescription.getType().getHostAddress());\n                 } else {\n-                    logger.error(e.getMessage());\n-                    logger.error(\"Tried to monitor the job 3 times, so dropping of the the Job with ID: \" + currentMonitorID.getJobID());\n+                    if (currentMonitorID.getFailedCount() < 2) {\n+                        try {\n+                            currentMonitorID.setFailedCount(currentMonitorID.getFailedCount() + 1);\n+                            this.queue.put(take);\n+                        } catch (InterruptedException e1) {\n+                            e1.printStackTrace();\n+                        }\n+                    } else {\n+                        logger.error(e.getMessage());\n+                        logger.error(\"Tried to monitor the job 3 times, so dropping of the the Job with ID: \" + currentMonitorID.getJobID());\n+                    }\n                 }\n             }\n             throw new AiravataMonitorException(\"Error retrieving the job status\", e);",
                "raw_url": "https://github.com/apache/airavata/raw/80cbc3e884cbc4f0609d5ff216b59430fee0abaf/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "sha": "59de0f44e991542abc1a7606a5654408bfbd3626",
                "status": "modified"
            }
        ],
        "message": "Fixing a NPE during error scenario and fixing the code to show proper error message",
        "parent": "https://github.com/apache/airavata/commit/d68afe9b29a0ad968be6f8902a52e62d3dcfadd5",
        "patched_files": [
            "QstatMonitor.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "QstatMonitorTest.java"
        ]
    },
    "airavata_82e60f3": {
        "bug_id": "airavata_82e60f3",
        "commit": "https://github.com/apache/airavata/commit/82e60f39cdffd691a4a4afb7752ba870a0034a6d",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "patch": "@@ -36,7 +36,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Experiment experiment;\n \n@@ -94,11 +94,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "sha": "5b84c6ebd149c69a937abe05a34cc23ca94db601",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 12,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "patch": "@@ -35,13 +35,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput;\n+    private boolean standardInput;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged;\n     private Experiment experiment;\n \n     @Id\n@@ -97,11 +97,11 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"STANDARD_INPUT\")\n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -137,31 +137,31 @@ public void setInputOrder(Integer inputOrder) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_STAGED\")\n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "sha": "ffb6713018553f84f6d685440c7ca3133bd5773a",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 9,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "patch": "@@ -35,9 +35,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n     private Experiment experiment;\n@@ -95,31 +95,31 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_MOVEMENT\")\n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "sha": "bd8b28886040dd0822703d647606aff8438ab103",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "patch": "@@ -41,7 +41,7 @@\n     private String applicationDeploymentId;\n     private String computeResourceId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n     private Experiment experiment;\n     private Collection<ProcessError> processErrors;\n@@ -155,11 +155,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n \n     @Basic\n     @Column(name = \"ENABLE_EMAIL_NOTIFICATION\")\n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "sha": "c96c335d01fd38ef238a070b007683260f27a7db",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "patch": "@@ -37,7 +37,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Process process;\n \n@@ -95,11 +95,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "sha": "63fbdb297b8f87f4c09c708578c7579d694af518",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 12,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "patch": "@@ -36,13 +36,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput;\n+    private boolean standardInput;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged;\n     private Process process;\n \n     @Id\n@@ -98,11 +98,11 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"STANDARD_INPUT\")\n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -138,31 +138,31 @@ public void setInputOrder(Integer inputOrder) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_STAGED\")\n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "sha": "57721c1cbda57dfa76f623163d898ea691291cd6",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 9,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "patch": "@@ -36,9 +36,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n     private Process process;\n@@ -96,31 +96,31 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_MOVEMENT\")\n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "sha": "7c1738c50352e4a56bbc7953b7a8637d94e12840",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "patch": "@@ -36,7 +36,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Task task;\n \n@@ -94,11 +94,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "sha": "281b9f378c5489a656fb6d7277d6c365f398284d",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 15,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "patch": "@@ -30,12 +30,12 @@\n public class UserConfigurationData {\n     private final static Logger logger = LoggerFactory.getLogger(UserConfigurationData.class);\n     private String experimentId;\n-    private Boolean airavataAutoSchedule;\n-    private Boolean overrideManualScheduledParams;\n-    private Boolean shareExperimentPublically;\n-    private Boolean throttleResources;\n+    private boolean airavataAutoSchedule;\n+    private boolean overrideManualScheduledParams;\n+    private boolean shareExperimentPublically;\n+    private boolean throttleResources;\n     private String userDn;\n-    private Boolean generateCert;\n+    private boolean generateCert;\n     private String resourceHostId;\n     private Integer totalCpuCount;\n     private Integer nodeCount;\n@@ -57,41 +57,41 @@ public void setExperimentId(String experimentId) {\n \n     @Basic\n     @Column(name = \"AIRAVATA_AUTO_SCHEDULE\")\n-    public Boolean getAiravataAutoSchedule() {\n+    public boolean getAiravataAutoSchedule() {\n         return airavataAutoSchedule;\n     }\n \n-    public void setAiravataAutoSchedule(Boolean airavataAutoSchedule) {\n+    public void setAiravataAutoSchedule(boolean airavataAutoSchedule) {\n         this.airavataAutoSchedule = airavataAutoSchedule;\n     }\n \n     @Basic\n     @Column(name = \"OVERRIDE_MANUAL_SCHEDULED_PARAMS\")\n-    public Boolean getOverrideManualScheduledParams() {\n+    public boolean getOverrideManualScheduledParams() {\n         return overrideManualScheduledParams;\n     }\n \n-    public void setOverrideManualScheduledParams(Boolean overrideManualScheduledParams) {\n+    public void setOverrideManualScheduledParams(boolean overrideManualScheduledParams) {\n         this.overrideManualScheduledParams = overrideManualScheduledParams;\n     }\n \n     @Basic\n     @Column(name = \"SHARE_EXPERIMENT_PUBLICALLY\")\n-    public Boolean getShareExperimentPublically() {\n+    public boolean getShareExperimentPublically() {\n         return shareExperimentPublically;\n     }\n \n-    public void setShareExperimentPublically(Boolean shareExperimentPublically) {\n+    public void setShareExperimentPublically(boolean shareExperimentPublically) {\n         this.shareExperimentPublically = shareExperimentPublically;\n     }\n \n     @Basic\n     @Column(name = \"THROTTLE_RESOURCES\")\n-    public Boolean getThrottleResources() {\n+    public boolean getThrottleResources() {\n         return throttleResources;\n     }\n \n-    public void setThrottleResources(Boolean throttleResources) {\n+    public void setThrottleResources(boolean throttleResources) {\n         this.throttleResources = throttleResources;\n     }\n \n@@ -107,11 +107,11 @@ public void setUserDn(String userDn) {\n \n     @Basic\n     @Column(name = \"GENERATE_CERT\")\n-    public Boolean getGenerateCert() {\n+    public boolean getGenerateCert() {\n         return generateCert;\n     }\n \n-    public void setGenerateCert(Boolean generateCert) {\n+    public void setGenerateCert(boolean generateCert) {\n         this.generateCert = generateCert;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "sha": "8039ce122364d312f59857a6560b0fd09e9cbe64",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "sha": "6a049d33ffdc2d0d0eeff449619f93f954c3a715",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 12,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "patch": "@@ -40,13 +40,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput = false;\n+    private boolean standardInput = false;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged = false;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged = false;\n \n     public String getExperimentId() {\n         return experimentId;\n@@ -88,11 +88,11 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -120,27 +120,27 @@ public void setInputOrder(Integer inputOrder) {\n         this.inputOrder = inputOrder;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "sha": "56e3128e181574c0cfde51520fd5a1bf3a75622e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 9,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "patch": "@@ -40,9 +40,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n \n@@ -86,27 +86,27 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "sha": "1d4b06c49e89e0a63ed5d7da46cc4d0c620bde60",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "patch": "@@ -49,7 +49,7 @@\n     private String description;\n     private String executionId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n \n     public String getExperimentId() {\n@@ -132,11 +132,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n         this.gatewayExecutionId = gatewayExecutionId;\n     }\n \n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "sha": "ea55bec587cb23d67d21f8aa2230a3e540059d20",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "sha": "7f84a7402f50001687d1c2764b0fc0c245994bb0",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 12,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "patch": "@@ -40,13 +40,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput = false;\n+    private boolean standardInput = false;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged = false;\n+    private boolean isRequired = false;\n+    private boolean requiredToAddedToCmd = false;\n+    private boolean dataStaged = false;\n \n     public String getProcessId() {\n         return processId;\n@@ -88,11 +88,11 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -120,27 +120,27 @@ public void setInputOrder(Integer inputOrder) {\n         this.inputOrder = inputOrder;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "sha": "d2437a0c3ba1bfb6bac301da514fc7bb5ca66d29",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 9,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "patch": "@@ -40,9 +40,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n \n@@ -86,27 +86,27 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "sha": "bee0ef76ca46311631879746c0810bfcce4426a1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "patch": "@@ -49,7 +49,7 @@\n     private String applicationDeploymentId;\n     private String computeResourceId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n \n     public String getProcessId() {\n@@ -132,11 +132,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n         this.gatewayExecutionId = gatewayExecutionId;\n     }\n \n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "sha": "cdd1cfe96c9be93ab71cee14c11f21486033f653",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 3,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "sha": "1ec0c451eb2dbcf91e6213d37dfd7c0e308bacfa",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 15,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "patch": "@@ -35,12 +35,12 @@\n public class UserConfigurationDataResource extends AbstractExpCatResource {\n     private static final Logger logger = LoggerFactory.getLogger(UserConfigurationDataResource.class);\n     private String experimentId;\n-    private Boolean airavataAutoSchedule;\n-    private Boolean overrideManualScheduledParams;\n-    private Boolean shareExperimentPublically;\n-    private Boolean throttleResources;\n+    private boolean airavataAutoSchedule;\n+    private boolean overrideManualScheduledParams;\n+    private boolean shareExperimentPublically;\n+    private boolean throttleResources;\n     private String userDn;\n-    private Boolean generateCert;\n+    private boolean generateCert;\n     private String resourceHostId;\n     private Integer totalCpuCount;\n     private Integer nodeCount;\n@@ -113,35 +113,35 @@ public void setTotalPhysicalMemory(Integer totalPhysicalMemory) {\n         this.totalPhysicalMemory = totalPhysicalMemory;\n     }\n \n-    public Boolean getAiravataAutoSchedule() {\n+    public boolean getAiravataAutoSchedule() {\n         return airavataAutoSchedule;\n     }\n \n-    public void setAiravataAutoSchedule(Boolean airavataAutoSchedule) {\n+    public void setAiravataAutoSchedule(boolean airavataAutoSchedule) {\n         this.airavataAutoSchedule = airavataAutoSchedule;\n     }\n \n-    public Boolean getOverrideManualScheduledParams() {\n+    public boolean getOverrideManualScheduledParams() {\n         return overrideManualScheduledParams;\n     }\n \n-    public void setOverrideManualScheduledParams(Boolean overrideManualScheduledParams) {\n+    public void setOverrideManualScheduledParams(boolean overrideManualScheduledParams) {\n         this.overrideManualScheduledParams = overrideManualScheduledParams;\n     }\n \n-    public Boolean getShareExperimentPublically() {\n+    public boolean getShareExperimentPublically() {\n         return shareExperimentPublically;\n     }\n \n-    public void setShareExperimentPublically(Boolean shareExperimentPublically) {\n+    public void setShareExperimentPublically(boolean shareExperimentPublically) {\n         this.shareExperimentPublically = shareExperimentPublically;\n     }\n \n-    public Boolean getThrottleResources() {\n+    public boolean getThrottleResources() {\n         return throttleResources;\n     }\n \n-    public void setThrottleResources(Boolean throttleResources) {\n+    public void setThrottleResources(boolean throttleResources) {\n         this.throttleResources = throttleResources;\n     }\n \n@@ -153,11 +153,11 @@ public void setUserDn(String userDn) {\n         this.userDn = userDn;\n     }\n \n-    public Boolean getGenerateCert() {\n+    public boolean getGenerateCert() {\n         return generateCert;\n     }\n \n-    public void setGenerateCert(Boolean generateCert) {\n+    public void setGenerateCert(boolean generateCert) {\n         this.generateCert = generateCert;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "sha": "0ee986a3f02ee06b591b8090d2aa31e5b66b9533",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "deletions": 16,
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.utils;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.model.application.io.DataType;\n import org.apache.airavata.model.application.io.InputDataObjectType;\n import org.apache.airavata.model.application.io.OutputDataObjectType;\n@@ -42,6 +43,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.sql.Timestamp;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -273,11 +275,12 @@ public static OutputDataObjectType getOutput(Object object){\n     public static ExperimentStatus getExperimentStatus(ExperimentStatusResource status){\n         if (status != null){\n             ExperimentStatus experimentStatus = new ExperimentStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             experimentStatus.setState(ExperimentState.valueOf(status.getState()));\n-            experimentStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            experimentStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             experimentStatus.setReason(status.getReason());\n             return experimentStatus;\n         }\n@@ -287,11 +290,12 @@ public static ExperimentStatus getExperimentStatus(ExperimentStatusResource stat\n     public static ProcessStatus getProcessStatus (ProcessStatusResource status){\n         if (status != null){\n             ProcessStatus processStatus = new ProcessStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             processStatus.setState(ProcessState.valueOf(status.getState()));\n-            processStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            processStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             processStatus.setReason(status.getReason());\n             return processStatus;\n         }\n@@ -301,11 +305,12 @@ public static ProcessStatus getProcessStatus (ProcessStatusResource status){\n     public static TaskStatus getTaskStatus (TaskStatusResource status){\n         if (status != null){\n             TaskStatus taskStatus = new TaskStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             taskStatus.setState(TaskState.valueOf(status.getState()));\n-            taskStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            taskStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             taskStatus.setReason(status.getReason());\n             return taskStatus;\n         }\n@@ -315,11 +320,12 @@ public static TaskStatus getTaskStatus (TaskStatusResource status){\n     public static JobStatus getJobStatus (JobStatusResource status){\n         if (status != null){\n             JobStatus jobStatus = new JobStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             jobStatus.setJobState(JobState.valueOf(status.getState()));\n-            jobStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            jobStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             jobStatus.setReason(status.getReason());\n             return jobStatus;\n         }",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "sha": "b0226537363f9aa46357d6be9c3c9236d4dbd6a6",
                "status": "modified"
            }
        ],
        "message": "fixing NPEs at registry level",
        "parent": "https://github.com/apache/airavata/commit/cc792369ecd4c7b3d1a572127ed470dbaed5fe81",
        "patched_files": [
            "UserConfigurationData.java",
            "ProcessResource.java",
            "ExperimentOutputResource.java",
            "ExperimentResource.java",
            "ExperimentInputResource.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "ProcessResourceTest.java",
            "ExperimentInputResourceTest.java",
            "ExperimentOutputResourceTest.java",
            "ExperimentResourceTest.java",
            "UserConfigurationDataTest.java"
        ]
    },
    "airavata_9f5a6d0": {
        "bug_id": "airavata_9f5a6d0",
        "commit": "https://github.com/apache/airavata/commit/9f5a6d03351bf76a51c4c519c783eccef2de8768",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/9f5a6d03351bf76a51c4c519c783eccef2de8768/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=9f5a6d03351bf76a51c4c519c783eccef2de8768",
                "deletions": 1,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "patch": "@@ -167,6 +167,7 @@ public WorkflowInterpreter(XBayaConfiguration configuration, String topic,\n \t\tthis.mode = SERVER_MODE;\n \t\tthis.retryFailed = false;\n \t\tthis.runWithCrossProduct = this.configuration.isRunWithCrossProduct();\n+        provenanceWriter = new PredicatedTaskRunner(1);\n \t}\n \n \n@@ -195,7 +196,7 @@ public WorkflowInterpreter(XBayaConfiguration configuration, String topic,\n                 }\n                 this.mode = SERVER_MODE;\n                 this.retryFailed = false;\n-            provenanceWriter = new PredicatedTaskRunner(1);\n+                provenanceWriter = new PredicatedTaskRunner(1);\n \n         }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/9f5a6d03351bf76a51c4c519c783eccef2de8768/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "sha": "45bd62c131920ebd9ccc713ed216cf02a19db0b7",
                "status": "modified"
            }
        ],
        "message": "fixing NPE in WorkflowInterpreter service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1231317 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/f231d6d25a5f5a81220783febf74afed9f266f87",
        "patched_files": [
            "WorkflowInterpreter.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestWorkflowInterpreter.java"
        ]
    },
    "airavata_ab54c7d": {
        "bug_id": "airavata_ab54c7d",
        "commit": "https://github.com/apache/airavata/commit/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 0,
                "filename": "modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "patch": "@@ -22,6 +22,7 @@\n \n import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gsi.ssh.api.authentication.AuthenticationInfo;\n+import org.apache.airavata.gsi.ssh.impl.authentication.MyProxyAuthenticationInfo;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -72,6 +73,12 @@ public MonitorID(HostDescription host, String jobID,String taskID,String experim\n         this.jobStartedTime = new Timestamp((new Date()).getTime());\n         this.authenticationInfo = authenticationInfo;\n         this.userName = userName;\n+        // if we give myproxyauthenticationInfo, so we try to use myproxy user as the user\n+        if(this.authenticationInfo != null){\n+            if(this.authenticationInfo instanceof MyProxyAuthenticationInfo){\n+                this.userName = ((MyProxyAuthenticationInfo)this.authenticationInfo).getUserName();\n+            }\n+        }\n         this.jobID = jobID;\n         this.taskID = taskID;\n         this.experimentID = experimentID;",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "sha": "06d04ac2c51dc19399b0406fdf68b4edf04394f3",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 0,
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "patch": "@@ -171,6 +171,10 @@ public boolean launchExperiment(String experimentId) throws TException {\n                 //iterate through all the generated tasks and performs the job submisssion+monitoring\n \n                 Experiment experiment = (Experiment) registry.get(DataType.EXPERIMENT, experimentId);\n+                if(experiment == null){\n+                    log.error(\"Error retrieving the Experiment by the given experimentID: \" + experimentId);\n+                    return false;\n+                }\n                 String userName = experiment.getUserName();\n \n                 HostDescription hostDescription = OrchestratorUtils.getHostDescription(orchestrator, taskID);",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "sha": "9610a56a9da98b5d3f18986606069bcbcbc5a78a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 2,
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "patch": "@@ -47,12 +47,12 @@\n \n public class OrchestratorClientFactoryTest {\n     private DocumentCreator documentCreator;\n-//    private OrchestratorService.Client orchestratorClient;\n+    private OrchestratorService.Client orchestratorClient;\n     private Registry registry;\n \n     @Before\n     public void setUp(){\n-//        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n+        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n         registry = RegistryFactory.getDefaultRegistry();\n         AiravataUtils.setExecutionAsServer();\n         documentCreator = new DocumentCreator(getAiravataAPI());\n@@ -95,6 +95,8 @@ public void storeExperimentDetail(){\n             String expId = (String)registry.add(ParentDataType.EXPERIMENT, simpleExperiment);\n             CompositeIdentifier compositeIdentifier = new CompositeIdentifier(expId, null);\n             registry.add(ChildDataType.COMPUTATIONAL_RESOURCE_SCHEDULING, scheduling, compositeIdentifier);\n+\n+            orchestratorClient.launchExperiment(expId);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "sha": "0b6e8b2f049d364fc1919b73df72b807fe20dbc3",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 5,
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "patch": "@@ -566,12 +566,14 @@ private static Resource createExperiment(Experiment o) {\n         ExperimentResource experimentResource = new ExperimentResource();\n         GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n         experimentResource.setGateway(gatewayResource);\n-        Gateway_Worker gateway_worker = new Gateway_Worker();\n-        gateway_worker.setGateway(o.getGateway());\n-        gateway_worker.setUser_name(o.getExecutionUser());\n+//        Gateway_Worker gateway_worker = new Gateway_Worker();\n+//        gateway_worker.setGateway(o.getGateway());\n+//        gateway_worker.setUser_name(o.getExecutionUser());\n         experimentResource.setExecutionUser(o.getExecutionUser());\n-        ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n-        experimentResource.setProject(projectResource);\n+        if (o.getProject() != null){\n+            ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n+            experimentResource.setProject(projectResource);\n+        }\n         experimentResource.setExpID(o.getExpId());\n         experimentResource.setCreationTime(o.getCreationTime());\n         experimentResource.setDescription(o.getExpDesc());",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "sha": "e7bb86589a786fe98afebd029c05fec7f41ad315",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 5,
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "patch": "@@ -34,7 +34,10 @@\n \n     public static Experiment getExperiment(ExperimentResource experimentResource){\n         Experiment experiment = new Experiment();\n-        experiment.setProjectID(experimentResource.getProject().getName());\n+        if (experimentResource.getProject()!= null){\n+            experiment.setProjectID(experimentResource.getProject().getName());\n+        }\n+\n         experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n         experiment.setUserName(experimentResource.getExecutionUser());\n         experiment.setName(experimentResource.getExpName());\n@@ -49,13 +52,22 @@ public static Experiment getExperiment(ExperimentResource experimentResource){\n         List<ExperimentOutputResource> experimentOutputs = experimentResource.getExperimentOutputs();\n         experiment.setExperimentOutputs(getExpOutputs(experimentOutputs));\n         StatusResource experimentStatus = experimentResource.getExperimentStatus();\n-        experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        if (experimentStatus != null){\n+            experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        }\n         List<StatusResource> changeList = experimentResource.getWorkflowNodeStatuses();\n-        experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        if (changeList != null){\n+               experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        }\n+\n         List<WorkflowNodeDetailResource> workflowNodeDetails = experimentResource.getWorkflowNodeDetails();\n-        experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        if (workflowNodeDetails != null){\n+                experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        }\n         List<ErrorDetailResource> errorDetails = experimentResource.getErrorDetails();\n-        experiment.setErrors(getErrorDetailList(errorDetails));\n+        if (errorDetails!= null){\n+            experiment.setErrors(getErrorDetailList(errorDetails));\n+        }\n         return experiment;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "sha": "3f9ff66328e84601333aac85f5eb98a10df02a7d",
                "status": "modified"
            }
        ],
        "message": "Adding NPE fixes - AIRAVATA-1028",
        "parent": "https://github.com/apache/airavata/commit/d29a148f610b0d92bfa9d1005f6cb712cf6ec182",
        "patched_files": [
            "Utils.java",
            "OrchestratorServerHandler.java",
            "ThriftDataModelConversion.java",
            "OrchestratorClientFactory.java",
            "MonitorID.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "OrchestratorClientFactoryTest.java"
        ]
    },
    "airavata_aefd913": {
        "bug_id": "airavata_aefd913",
        "commit": "https://github.com/apache/airavata/commit/aefd913a843f1bc764aa8da49f496a06dea27c77",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/aefd913a843f1bc764aa8da49f496a06dea27c77/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=aefd913a843f1bc764aa8da49f496a06dea27c77",
                "deletions": 3,
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "patch": "@@ -490,7 +490,7 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n         GroovyMap groovyMap = new GroovyMap();\n         try {\n             ProcessModel processModel = processContext.getProcessModel();\n-            ResourceJobManager resourceJobManager = getResourceJobManager(processContext);\n+            ResourceJobManager resourceJobManager = processContext.getResourceJobManager();\n             setMailAddresses(processContext, groovyMap); // set email options and addresses\n \n             groovyMap.add(Script.INPUT_DIR, processContext.getInputDir());\n@@ -611,8 +611,9 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n             }\n \n             ApplicationParallelismType parallelism = appDepDescription.getParallelism();\n-            Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n-            if (parallelism != null) {\n+\n+            if (parallelism != null && resourceJobManager != null) {\n+                Map<ApplicationParallelismType, String> parallelismPrefix = resourceJobManager.getParallelismPrefix();\n                 if (parallelism != ApplicationParallelismType.SERIAL) {\n                     if (parallelismPrefix != null){\n                         String parallelismCommand = parallelismPrefix.get(parallelism);",
                "raw_url": "https://github.com/apache/airavata/raw/aefd913a843f1bc764aa8da49f496a06dea27c77/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "sha": "88a3ada87c2fd84500926656f0d55df3a6b8730d",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE with resource job manager",
        "parent": "https://github.com/apache/airavata/commit/fe7bc1fcaef59bb5df73700f175ce45c99e8d6ac",
        "patched_files": [
            "GFacUtils.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "GFacUtilsTest.java"
        ]
    },
    "airavata_c37054b": {
        "bug_id": "airavata_c37054b",
        "commit": "https://github.com/apache/airavata/commit/c37054be449b70b62b7fd19aa1acc04aa2fbef55",
        "file": [
            {
                "additions": 219,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "changes": 368,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "deletions": 149,
                "filename": "modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "patch": "@@ -408,321 +408,391 @@ public static Resource getResource(AppCatalogResourceType type, Object o) {\n \t\n \tprivate static Resource createLocalDataMovement(LocalDataMovement o) {\n \t\tLocalDataMovementResource localDataMovementResource = new LocalDataMovementResource();\n-\t\tlocalDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        if (o != null){\n+            localDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        }\n \t\treturn localDataMovementResource;\n \t}\n \t\n     private static Resource createLocalSubmission(LocalSubmission o) {\n \t\tLocalSubmissionResource localSubmissionResource = new LocalSubmissionResource();\n-\t\tlocalSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tlocalSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tlocalSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        if (o != null){\n+            localSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            localSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            localSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        }\n \t\treturn localSubmissionResource;\n \t}\n     \n     private static Resource createJobManagerCommand(JobManagerCommand o) {\n \t\tJobManagerCommandResource jobManagerCommandResource = new JobManagerCommandResource();\n-\t\tjobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tjobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tjobManagerCommandResource.setCommandType(o.getCommandType());\n-\t\tjobManagerCommandResource.setCommand(o.getCommand());\n+        if (o != null){\n+            jobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            jobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            jobManagerCommandResource.setCommandType(o.getCommandType());\n+            jobManagerCommandResource.setCommand(o.getCommand());\n+        }\n \t\treturn jobManagerCommandResource;\n \t}\n     \n     private static Resource createResourceJobManager(ResourceJobManager o) {\n \t\tResourceJobManagerResource resourceJobManagerResource = new ResourceJobManagerResource();\n-\t\tresourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tresourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n-\t\tresourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n-\t\tresourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        if (o != null) {\n+            resourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            resourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n+            resourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n+            resourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        }\n \t\treturn resourceJobManagerResource;\n \t}\n     \n     private static Resource createDataMovementInterface(DataMovementInterface o) {\n \t\tDataMovementInterfaceResource dataMovementInterfaceResource = new DataMovementInterfaceResource();\n-\t\tdataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tdataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tdataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n-\t\tdataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tdataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            dataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            dataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            dataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n+            dataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            dataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn dataMovementInterfaceResource;\n \t}\n     \n     private static Resource createJobSubmissionInterface(JobSubmissionInterface o) {\n \t\tJobSubmissionInterfaceResource jobSubmissionInterfaceResource = new JobSubmissionInterfaceResource();\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tjobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tjobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n-\t\tjobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            jobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            jobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            jobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            jobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n+            jobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn jobSubmissionInterfaceResource;\n \t}\n     \n     private static Resource createComputeResourceFileSystem(ComputeResourceFileSystem o) {\n \t\tComputeResourceFileSystemResource computeResourceFileSystemResource = new ComputeResourceFileSystemResource();\n-\t\tcomputeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tcomputeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tcomputeResourceFileSystemResource.setPath(o.getPath());\n-\t\tcomputeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        if (o != null){\n+            computeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n+            computeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            computeResourceFileSystemResource.setPath(o.getPath());\n+            computeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        }\n \t\treturn computeResourceFileSystemResource;\n \t}\n     \n     private static Resource createBatchQueue(BatchQueue o) {\n \t\tBatchQueueResource batchQueueResource = new BatchQueueResource();\n-\t\tbatchQueueResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tbatchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tbatchQueueResource.setMaxRuntime(o.getMaxRuntime());\n-\t\tbatchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n-\t\tbatchQueueResource.setQueueDescription(o.getQueueDescription());\n-\t\tbatchQueueResource.setQueueName(o.getQueueName());\n-\t\tbatchQueueResource.setMaxProcessors(o.getMaxProcessors());\n-\t\tbatchQueueResource.setMaxNodes(o.getMaxNodes());\n+        if (o != null){\n+            batchQueueResource.setComputeResourceId(o.getComputeResourceId());\n+            batchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            batchQueueResource.setMaxRuntime(o.getMaxRuntime());\n+            batchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n+            batchQueueResource.setQueueDescription(o.getQueueDescription());\n+            batchQueueResource.setQueueName(o.getQueueName());\n+            batchQueueResource.setMaxProcessors(o.getMaxProcessors());\n+            batchQueueResource.setMaxNodes(o.getMaxNodes());\n+        }\n \t\treturn batchQueueResource;\n \t}\n     private static Resource createComputeResource(ComputeResource o) {\n \t\tComputeResourceResource computeResourceResource = new ComputeResourceResource();\n-\t\tcomputeResourceResource.setResourceDescription(o.getResourceDescription());\n-\t\tcomputeResourceResource.setResourceId(o.getResourceId());\n-\t\tcomputeResourceResource.setHostName(o.getHostName());\n+        if (o != null) {\n+            computeResourceResource.setResourceDescription(o.getResourceDescription());\n+            computeResourceResource.setResourceId(o.getResourceId());\n+            computeResourceResource.setHostName(o.getHostName());\n+        }\n \t\treturn computeResourceResource;\n \t}\n \n     private static Resource createHostAlias(HostAlias o) {\n         HostAliasResource aliasResource = new HostAliasResource();\n-        aliasResource.setResourceID(o.getResourceID());\n-        aliasResource.setAlias(o.getAlias());\n-        aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            aliasResource.setResourceID(o.getResourceID());\n+            aliasResource.setAlias(o.getAlias());\n+            aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return aliasResource;\n     }\n \n     private static Resource createHostIPAddress(HostIPAddress o) {\n         HostIPAddressResource ipAddressResource = new HostIPAddressResource();\n-        ipAddressResource.setResourceID(o.getResourceID());\n-        ipAddressResource.setIpaddress(o.getIpaddress());\n-        ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            ipAddressResource.setResourceID(o.getResourceID());\n+            ipAddressResource.setIpaddress(o.getIpaddress());\n+            ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return ipAddressResource;\n     }\n \n     private static Resource createGSSISSHSubmission(GSISSHSubmission o) {\n         GSISSHSubmissionResource submissionResource = new GSISSHSubmissionResource();\n-        submissionResource.setSubmissionID(o.getSubmissionID());\n-        submissionResource.setResourceJobManager(o.getResourceJobManager());\n-        submissionResource.setSshPort(o.getSshPort());\n-        submissionResource.setInstalledPath(o.getInstalledPath());\n-        submissionResource.setMonitorMode(o.getMonitorMode());\n+        if (o != null) {\n+            submissionResource.setSubmissionID(o.getSubmissionID());\n+            submissionResource.setResourceJobManager(o.getResourceJobManager());\n+            submissionResource.setSshPort(o.getSshPort());\n+            submissionResource.setInstalledPath(o.getInstalledPath());\n+            submissionResource.setMonitorMode(o.getMonitorMode());\n+        }\n         return submissionResource;\n     }\n \n     private static Resource createGSISSHExport(GSISSHExport o){\n         GSISSHExportResource resource = new GSISSHExportResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setExport(o.getExport());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setExport(o.getExport());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPreJObCommand(GSISSHPreJobCommand o){\n         GSISSHPreJobCommandResource resource = new GSISSHPreJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPostJObCommand(GSISSHPostJobCommand o){\n         GSISSHPostJobCommandResource resource = new GSISSHPostJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusJobSubmission(GlobusJobSubmission o) {\n         GlobusJobSubmissionResource resource = new GlobusJobSubmissionResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setResourceJobManager(o.getResourceJobManager());\n-        resource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setResourceJobManager(o.getResourceJobManager());\n+            resource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusEndpoint(GlobusGKEndpoint o) {\n         GlobusGKEndpointResource resource = new GlobusGKEndpointResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setEndpoint(o.getEndpoint());\n-        resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setEndpoint(o.getEndpoint());\n+            resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        }\n         return resource;\n     }\n \t\n \tprivate static Resource createSshJobSubmission(SshJobSubmission o) {\n-\t\tSshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n-\t\tsshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tsshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tsshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tsshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n-\t\tsshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tsshJobSubmissionResource.setSshPort(o.getSshPort());\n-\t\treturn sshJobSubmissionResource;\n-\t}\n+        SshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n+        if (o != null) {\n+            sshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            sshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource) createResourceJobManager(o.getResourceJobManager()));\n+            sshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            sshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n+            sshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n+            sshJobSubmissionResource.setSshPort(o.getSshPort());\n+        }\n+        return sshJobSubmissionResource;\n+    }\n \n     private static Resource createScpDataMovement(ScpDataMovement o) {\n \t\tScpDataMovementResource scpDataMovementResource = new ScpDataMovementResource();\n-\t\tscpDataMovementResource.setQueueDescription(o.getQueueDescription());\n-\t\tscpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tscpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tscpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n-\t\tscpDataMovementResource.setSshPort(o.getSshPort());\n+        if (o != null){\n+            scpDataMovementResource.setQueueDescription(o.getQueueDescription());\n+            scpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            scpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+            scpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n+            scpDataMovementResource.setSshPort(o.getSshPort());\n+        }\n \t\treturn scpDataMovementResource;\n \t}\n \n     private static Resource createGridftpDataMovement(GridftpDataMovement o) {\n \t\tGridftpDataMovementResource gridftpDataMovementResource = new GridftpDataMovementResource();\n-\t\tgridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            gridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n \t\treturn gridftpDataMovementResource;\n \t}\n \n     private static Resource createGridftpEndpoint(GridftpEndpoint o) {\n \t\tGridftpEndpointResource gridftpEndpointResource = new GridftpEndpointResource();\n-\t\tgridftpEndpointResource.setEndpoint(o.getEndpoint());\n-\t\tgridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        if (o != null){\n+            gridftpEndpointResource.setEndpoint(o.getEndpoint());\n+            gridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        }\n \t\treturn gridftpEndpointResource;\n \t}\n \n     private static Resource createJobSubmissionProtocol(JobSubmissionProtocol o) {\n         JobSubmissionProtocolResource resource = new JobSubmissionProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setJobType(o.getJobType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setResourceID(o.getResourceID());\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setJobType(o.getJobType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createDataMovementProtocol(DataMovementProtocol o) {\n         DataMovementProtocolResource resource = new DataMovementProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setDataMoveID(o.getDataMoveID());\n-        resource.setDataMoveType(o.getDataMoveType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null) {\n+            resource.setResourceID(o.getResourceID());\n+            resource.setDataMoveID(o.getDataMoveID());\n+            resource.setDataMoveType(o.getDataMoveType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationModule(ApplicationModule o) {\n         AppModuleResource moduleResource = new AppModuleResource();\n-        moduleResource.setModuleId(o.getModuleID());\n-        moduleResource.setModuleDesc(o.getModuleDesc());\n-        moduleResource.setModuleName(o.getModuleName());\n-        moduleResource.setModuleVersion(o.getModuleVersion());\n+        if (o != null){\n+            moduleResource.setModuleId(o.getModuleID());\n+            moduleResource.setModuleDesc(o.getModuleDesc());\n+            moduleResource.setModuleName(o.getModuleName());\n+            moduleResource.setModuleVersion(o.getModuleVersion());\n+        }\n         return moduleResource;\n     }\n \n     private static Resource createApplicationDeployment(ApplicationDeployment o) {\n         AppDeploymentResource resource = new AppDeploymentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setAppDes(o.getApplicationDesc());\n-        resource.setAppModuleId(o.getAppModuleID());\n-        resource.setHostId(o.getHostID());\n-        resource.setExecutablePath(o.getExecutablePath());\n-        resource.setParallelism(o.getParallelism());\n-        resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n-        resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setAppDes(o.getApplicationDesc());\n+            resource.setAppModuleId(o.getAppModuleID());\n+            resource.setHostId(o.getHostID());\n+            resource.setExecutablePath(o.getExecutablePath());\n+            resource.setParallelism(o.getParallelism());\n+            resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n+            resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryPrepPathResource(LibraryPrepandPath o) {\n         LibraryPrepandPathResource resource = new LibraryPrepandPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryApendPathResource(LibraryApendPath o) {\n         LibraryApendPathResource resource = new LibraryApendPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppEnvironmentResource(AppEnvironment o) {\n         AppEnvironmentResource resource = new AppEnvironmentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppInterfaceResource(ApplicationInterface o) {\n         AppInterfaceResource resource = new AppInterfaceResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setAppName(o.getAppName());\n-        resource.setAppDescription(o.getAppDescription());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setAppName(o.getAppName());\n+            resource.setAppDescription(o.getAppDescription());\n+        }\n         return resource;\n     }\n \n     private static Resource createAppModMappingResource(AppModuleMapping o) {\n         AppModuleMappingResource resource = new AppModuleMappingResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setModuleId(o.getModuleID());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setModuleId(o.getModuleID());\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationInput(ApplicationInput o) {\n         ApplicationInputResource resource = new ApplicationInputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setInputKey(o.getInputKey());\n-        resource.setInputVal(o.getInputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setMetadata(o.getMetadata());\n-        resource.setAppArgument(o.getAppArgument());\n-        resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n-        resource.setStandareInput(o.isStandardInput());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setInputKey(o.getInputKey());\n+            resource.setInputVal(o.getInputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setMetadata(o.getMetadata());\n+            resource.setAppArgument(o.getAppArgument());\n+            resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n+            resource.setStandareInput(o.isStandardInput());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationOutput(ApplicationOutput o) {\n         ApplicationOutputResource resource = new ApplicationOutputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setOutputKey(o.getOutputKey());\n-        resource.setOutputVal(o.getOutputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setOutputKey(o.getOutputKey());\n+            resource.setOutputVal(o.getOutputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGatewayProfile(GatewayProfile o) {\n         GatewayProfileResource resource = new GatewayProfileResource();\n-        resource.setGatewayID(o.getGatewayID());\n-        resource.setGatewayName(o.getGatewayName());\n-        resource.setGatewayDesc(o.getGatewayDesc());\n+        if (o != null) {\n+            resource.setGatewayID(o.getGatewayID());\n+            resource.setGatewayName(o.getGatewayName());\n+            resource.setGatewayDesc(o.getGatewayDesc());\n+        }\n         return resource;\n     }\n \n     private static Resource createComputeResourcePref(ComputeResourcePreference o) {\n         ComputeHostPreferenceResource resource = new ComputeHostPreferenceResource();\n-        resource.setGatewayId(o.getGatewayId());\n-        resource.setResourceId(o.getResourceId());\n-        resource.setOverrideByAiravata(o.isOverrideByAiravata());\n-        resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n-        resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n-        resource.setBatchQueue(o.getBatchQueue());\n-        resource.setScratchLocation(o.getScratchLocation());\n-        resource.setProjectNumber(o.getProjectNumber());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeHostResource()));\n-        resource.setGatewayProfile((GatewayProfileResource)createGatewayProfile(o.getGatewayProfile()));\n+        if (o != null) {\n+            resource.setGatewayId(o.getGatewayId());\n+            resource.setResourceId(o.getResourceId());\n+            resource.setOverrideByAiravata(o.isOverrideByAiravata());\n+            resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n+            resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n+            resource.setBatchQueue(o.getBatchQueue());\n+            resource.setScratchLocation(o.getScratchLocation());\n+            resource.setProjectNumber(o.getProjectNumber());\n+            resource.setComputeHostResource((ComputeResourceResource) createComputeResource(o.getComputeHostResource()));\n+            resource.setGatewayProfile((GatewayProfileResource) createGatewayProfile(o.getGatewayProfile()));\n+        }\n         return resource;\n     }\n \n     private static Resource createModuleLoadCmd(ModuleLoadCmd o) {\n         ModuleLoadCmdResource moduleLoadCmdResource = new ModuleLoadCmdResource();\n-        moduleLoadCmdResource.setCmd(o.getCmd());\n-        moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n-        moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            moduleLoadCmdResource.setCmd(o.getCmd());\n+            moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n+            moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return moduleLoadCmdResource;\n     }\n }",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "sha": "ddcc527ed2555380d331021e7a09f312fac76380",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "deletions": 4,
                "filename": "modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "patch": "@@ -42,11 +42,11 @@\n     public void setUp() throws Exception {\n         initialize = new Initialize(\"registry-derby.sql\");\n         initialize.initializeDB();\n-        gatewayResource = (GatewayResource) ResourceUtils.getGateway(\"default\");\n-        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), \"admin\");\n+        gatewayResource = (GatewayResource) ResourceUtils.getGateway(ServerSettings.getSystemUserGateway());\n+        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), ServerSettings.getDefaultUser());\n         userResource = new UserResource();\n-        userResource.setUserName(\"admin\");\n-        userResource.setPassword(\"admin\");\n+        userResource.setUserName(ServerSettings.getDefaultUser());\n+        userResource.setPassword(ServerSettings.getDefaultUser());\n \n         documentCreator = new DocumentCreator(getAiravataAPI());\n         documentCreator.createLocalHostDocs();",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "sha": "e281851b250161771cda28b0e0e8e14a50594b76",
                "status": "modified"
            }
        ],
        "message": "fixing tests in orchestrator and fixing NPE for AIRAVATA-1342",
        "parent": "https://github.com/apache/airavata/commit/3e151ce37690a1664b2a18747153ef12466e82ec",
        "patched_files": [
            "AppCatalogJPAUtils.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "BaseOrchestratorTest.java"
        ]
    },
    "airavata_c87eb42": {
        "bug_id": "airavata_c87eb42",
        "commit": "https://github.com/apache/airavata/commit/c87eb4270bfb89953da252985e27d9037241a108",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "deletions": 2,
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.airavata.model.scheduling.ComputationalResourceSchedulingModel;\n import org.apache.airavata.model.security.AuthzToken;\n import org.apache.airavata.model.status.ExperimentState;\n+import org.apache.airavata.model.status.JobStatus;\n import org.apache.airavata.model.util.ExperimentModelUtil;\n import org.apache.airavata.model.util.ProjectModelUtil;\n import org.apache.airavata.model.workspace.Gateway;\n@@ -85,9 +86,15 @@\n     public static void main(String[] args) throws Exception {\n         airavataClient = AiravataClientFactory.createAiravataClient(THRIFT_SERVER_HOST, THRIFT_SERVER_PORT);\n         AuthzToken token = new AuthzToken(\"empty_token\");\n-        System.out.println(\"API version is \" + airavataClient.getAPIVersion(null));\n+        System.out.println(\"API version is \" + airavataClient.getAPIVersion(token));\n //        registerApplications(); // run this only the first time\n-        createAndLaunchExp();\n+        Map<String, JobStatus> jobStatuses = airavataClient.getJobStatuses(token, \"test_78ddc6f0-ddd1-4154-ba45-6d597b8c8f3b\");\n+        for (String jobId : jobStatuses.keySet()){\n+            JobStatus jobStatus = jobStatuses.get(jobId);\n+            System.out.println(jobId);\n+            System.out.println(jobStatus.getJobState().toString());\n+        }\n+//        createAndLaunchExp();\n     }\n \n     private static String fsdResourceId;",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "sha": "2c6d3a385d76025e2e2a49a745019809192867b8",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "deletions": 0,
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.common.utils.ServerSettings;\n import org.apache.airavata.common.utils.ThriftUtils;\n+import org.apache.airavata.gfac.core.GFac;\n import org.apache.airavata.gfac.core.GFacEngine;\n import org.apache.airavata.gfac.core.GFacException;\n import org.apache.airavata.gfac.core.GFacUtils;\n@@ -405,6 +406,12 @@ private boolean outputDataStaging(ProcessContext processContext, boolean recover\n                         errorModel.setUserFriendlyMessage(\"Error while staging output data\");\n                         errorModel.setActualErrorMessage(errorMsg);\n                         GFacUtils.saveTaskError(taskCtx, errorModel);\n+                        ProcessStatus processStatus = processContext.getProcessStatus();\n+                        processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n+                        processStatus.setReason(errorMsg);\n+                        processContext.setProcessStatus(processStatus);\n+                        GFacUtils.saveAndPublishProcessStatus(processContext);\n+                        GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\t\t\t\tthrow new GFacException(\"Error while staging output data\");\n \t\t\t\t\t}\n \t\t\t\t\tbreak;",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "sha": "c14e5bceb55521b2102a3d32de3591cfcdd7bd8c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "deletions": 3,
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "patch": "@@ -250,12 +250,19 @@ private void outputDataStaging(TaskContext taskContext, Session sshSession, URI\n \n \t@Override\n \tpublic TaskStatus recover(TaskContext taskContext) {\n-\t\treturn null;\n-\t}\n+        // FIXME - Recover gives NPE s because of this\n+        TaskState state = taskContext.getTaskStatus().getState();\n+        if (state == TaskState.EXECUTING || state == TaskState.CREATED) {\n+            return execute(taskContext);\n+        } else {\n+            // files already transferred or failed\n+            return taskContext.getTaskStatus();\n+        }\n+    }\n \n \t@Override\n \tpublic TaskTypes getType() {\n-\t\treturn null;\n+\t\treturn TaskTypes.DATA_STAGING;\n \t}\n \n \tprivate SSHPasswordAuthentication getSSHPasswordAuthentication() {",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "sha": "4e70ac058754ce9fc04c2170a7a4c37599deb77f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "deletions": 1,
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "patch": "@@ -115,6 +115,6 @@ public TaskStatus recover(TaskContext taskContext) {\n \n \t@Override\n \tpublic TaskTypes getType() {\n-\t\treturn null;\n+\t\treturn TaskTypes.DATA_STAGING;\n \t}\n }",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "sha": "a6539632403ec51d6bf2f0b8d583429019f1c54a",
                "status": "modified"
            }
        ],
        "message": "fixing NPE s in recovery and process state update when output staging fail",
        "parent": "https://github.com/apache/airavata/commit/a65c01e2be52a707e8d98ca426685b42a9929a25",
        "patched_files": [
            "CreateLaunchExperiment.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestCreateLaunchExperiment.java"
        ]
    },
    "airavata_e2f83e8": {
        "bug_id": "airavata_e2f83e8",
        "commit": "https://github.com/apache/airavata/commit/e2f83e8c466558def7a833b7529030426877a2ca",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "deletions": 0,
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "patch": "@@ -252,6 +252,7 @@ public void preProcess(InvocationContext context) throws ServiceException {\n \n     @Override\n     public void postProcess(InvocationContext context) throws ServiceException {\n+        if(this.registryService != null)\n         ((JCRRegistry)this.registryService).closeConnection();\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "sha": "e5ad7e9086e0fd83843155679e0ea66e48d1f6f8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "deletions": 0,
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "patch": "@@ -125,7 +125,13 @@ public void testExecute() {\n \t\t\tDefaultExecutionContext ec = new DefaultExecutionContext();\n \t\t\tec.addNotifiable(new LoggingNotification());\n \t\t\tct.setExecutionContext(ec);\n+             Map<String,String> config = new HashMap<String,String>();\n+            config.put(\"org.apache.jackrabbit.repository.home\",\"target\");\n+\t\t    AiravataJCRRegistry jcrRegistry = new AiravataJCRRegistry(null,\n+\t\t\t\t\"org.apache.jackrabbit.core.RepositoryFactoryImpl\", \"admin\",\n+\t\t\t\t\"admin\", config);\n \n+            ec.setRegistryService(jcrRegistry);\n \t\t\tct.setServiceName(\"SimpleEcho\");\n \n \t\t\t/*",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "sha": "d05ba070c1dbedf8b0988c73494b1831038ca765",
                "status": "modified"
            }
        ],
        "message": "fixing test failure and NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1245073 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/bf41c0bf90f7edf22805fb736b5f4ec141402989",
        "patched_files": [
            "PropertiesBasedServiceImpl.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "PropertiesBasedServiceImplTest.java"
        ]
    },
    "airavata_e4a6b18": {
        "bug_id": "airavata_e4a6b18",
        "commit": "https://github.com/apache/airavata/commit/e4a6b18d44d915554194259b3b976a52caaf527a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/e4a6b18d44d915554194259b3b976a52caaf527a/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=e4a6b18d44d915554194259b3b976a52caaf527a",
                "deletions": 1,
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "patch": "@@ -607,9 +607,9 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n         }\n \n         ApplicationParallelismType parallelism = appDepDescription.getParallelism();\n-        Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n         if (parallelism != null) {\n             if (parallelism != ApplicationParallelismType.SERIAL) {\n+                Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n                 if (parallelismPrefix != null){\n                     String parallelismCommand = parallelismPrefix.get(parallelism);\n                     if (parallelismCommand != null){",
                "raw_url": "https://github.com/apache/airavata/raw/e4a6b18d44d915554194259b3b976a52caaf527a/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "sha": "22190c9a8fef39d78a1bde2c26903faff5cc49f1",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE with resource job manager",
        "parent": "https://github.com/apache/airavata/commit/c0665f1aaa804736a6a839ba5438387557a873e9",
        "patched_files": [
            "GFacUtils.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "GFacUtilsTest.java"
        ]
    },
    "airavata_f76708a": {
        "bug_id": "airavata_f76708a",
        "commit": "https://github.com/apache/airavata/commit/f76708aa2ded069344d7cee1f4c0fe1d493a867a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java?ref=f76708aa2ded069344d7cee1f4c0fe1d493a867a",
                "deletions": 1,
                "filename": "modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "patch": "@@ -124,7 +124,7 @@\n \n \t// private NameValue[] configurations = new NameValue[7];\n \n-\tprivate static final Version API_VERSION=new Version(\"Airavata\",0,1,null,\"INCUBATING\",null);\n+\tprivate static final Version API_VERSION=new Version(\"Airavata\",0,4,null,\"INCUBATING\",null);\n \t\n \tprotected AiravataClient(Map<String,String> configuration)\n \t\t\tthrows MalformedURLException {",
                "raw_url": "https://github.com/apache/airavata/raw/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "sha": "6845dc80e985d38cc6dd69b621377d13f4abe0f9",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java?ref=f76708aa2ded069344d7cee1f4c0fe1d493a867a",
                "deletions": 2,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "patch": "@@ -139,12 +139,12 @@ public void close() {\n     private void ok() {\n         hostId = this.hostIdTextField.getText();\n         String hostAddress = this.hostAddressTextField.getText();\n-        String globusGateKeeperEPR = this.globusGateKeeperTextField.getText();\n-        String gridFTP = this.GridFTPTextField.getText();\n \n         setHostId(hostId);\n         setHostLocation(hostAddress);\n         if(isGlobusHostType()) {\n+        \tString globusGateKeeperEPR = this.globusGateKeeperTextField.getText();\n+            String gridFTP = this.GridFTPTextField.getText();\n         \tsetGlobusGateKeeperEPR(globusGateKeeperEPR);\n         \tsetGridFTPEPR(gridFTP);\n         }",
                "raw_url": "https://github.com/apache/airavata/raw/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "sha": "8b24acd89c26762dbb9404dd9b06eb35d9a750d9",
                "status": "modified"
            }
        ],
        "message": "updating the API version to airavata version + NPE in host desc dialog when saving\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1359237 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/009460dcce21f05158ee961bc213f11473f4a873",
        "patched_files": [
            "AiravataClient.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "AiravataClientTest.java"
        ]
    },
    "airavata_fa553cd": {
        "bug_id": "airavata_fa553cd",
        "commit": "https://github.com/apache/airavata/commit/fa553cd35fd41c99c70b118238e5040574967ee3",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/fa553cd35fd41c99c70b118238e5040574967ee3/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=fa553cd35fd41c99c70b118238e5040574967ee3",
                "deletions": 2,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "patch": "@@ -1377,7 +1377,7 @@ private Invoker createInvokerForEachSingleWSNode(Node foreachWSNode,\n     private void runInThread(final LinkedList<String> listOfValues,\n                              ForEachNode forEachNode, final Node middleNode,\n                               Node[] endForEachNodes,\n-\t\t\tMap<Node,Invoker> tempInvoker,\n+\t\t\t                Map<Node,Invoker> tempInvoker,\n                              AtomicInteger counter, final Integer[] inputNumber) throws XBayaException {\n \n         final LinkedList<Invoker> invokerList = new LinkedList<Invoker>();\n@@ -1435,7 +1435,8 @@ public void run() {\n                     */\n                     Node fromNode = port.getFromNode();\n //                if (fromNode instanceof ForEachNode) {\n-                    inputVal = input;\n+                    inputVal = ODEClientUtil.parseValue((WSComponentPort) port.getComponentPort(),\n+                                                    input);\n //                }\n \n                     if (null == inputVal) {",
                "raw_url": "https://github.com/apache/airavata/raw/fa553cd35fd41c99c70b118238e5040574967ee3/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "sha": "c0844ce7828187365003f299d26b63d478f81a84",
                "status": "modified"
            }
        ],
        "message": "fixing NPE hwen invoking GFac service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1235072 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/4b6ca8799086c8f62eab9983b8e15ededeebaba6",
        "patched_files": [
            "WorkflowInterpreter.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestWorkflowInterpreter.java"
        ]
    },
    "airavata_fab4836": {
        "bug_id": "airavata_fab4836",
        "commit": "https://github.com/apache/airavata/commit/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "deletions": 1,
                "filename": "modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "patch": "@@ -316,7 +316,7 @@ private OMElement getWSDL(ConfigurationContext context, String serviceName) thro\n      */\n     private Axis2Registry getRegistry(ConfigurationContext context) {\n         if (this.registry == null) {\n-            this.registry = (Axis2Registry) context.getProperty(GFacService.CONFIGURATION_CONTEXT_REGISTRY);\n+            this.registry = (Axis2Registry) ((GFacConfiguration)context.getProperty(GFacService.GFAC_CONFIGURATION)).getRegistry();\n         }\n         return registry;\n     }",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "sha": "9ba75daee8dc90e940ea630d051ecca93e84d1fb",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "deletions": 2,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "patch": "@@ -923,7 +923,7 @@ private void handleWSComponent(Node node) throws XBayaException {\n                                         .getComponent().getWSDL()), node.getID(),\n                                 this.engine.getMonitor().getConfiguration()\n                                         .getMessageBoxURL().toASCIIString(),\n-                                gfacURLString, this.notifier, this.topic,\n+                                this.engine.getMonitor().getConfiguration().getBrokerURL().toASCIIString(), this.notifier, this.topic,\n                                 this.engine.getConfiguration().getJcrComponentRegistry().getRegistry(),\n                                 portTypeQName.getLocalPart(),this.engine.getConfiguration());\n                     } else {\n@@ -941,7 +941,7 @@ private void handleWSComponent(Node node) throws XBayaException {\n                                         .getComponent().getWSDL()), node.getID(),\n                                 this.configuration.getMessageBoxURL()\n                                         .toASCIIString(),\n-                                gfacURLString, this.notifier, this.topic, configuration.getJcrComponentRegistry().getRegistry(),\n+                                this.configuration.getBrokerURL().toASCIIString(), this.notifier, this.topic, configuration.getJcrComponentRegistry().getRegistry(),\n                                 portTypeQName.getLocalPart(),this.configuration);\n                     }else{\n                         invoker = new GenericInvoker(portTypeQName,",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "sha": "1a52d7af112093e2d2192f12ff7af816523196ab",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "deletions": 0,
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "patch": "@@ -199,6 +199,7 @@ public EmbeddedGFacInvoker(QName portTypeQName, WsdlDefinitions wsdl, String nod\n      * @throws XBayaException\n      */\n     public void setup() throws XBayaException {\n+        this.notifier.setServiceID(this.nodeID);\n     }\n \n     private void setup(WsdlDefinitions definitions) throws XBayaException {",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "sha": "3fa956471ec4d0729df7546f4a7e94a273a65755",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE during embedded mode invocations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1311979 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/afc9e808bbbb7ed69495ce1faaf9fd6370a918de",
        "patched_files": [
            "WorkflowInterpreter.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestWorkflowInterpreter.java"
        ]
    },
    "airavata_fbc558d": {
        "bug_id": "airavata_fbc558d",
        "commit": "https://github.com/apache/airavata/commit/fbc558ddc4ecce57833fdaff9062f264a631e2ad",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/airavata/blob/fbc558ddc4ecce57833fdaff9062f264a631e2ad/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java?ref=fbc558ddc4ecce57833fdaff9062f264a631e2ad",
                "deletions": 3,
                "filename": "airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "patch": "@@ -1637,9 +1637,15 @@ private ExperimentStatus getExperimentStatusInternal(String airavataExperimentId\n                       for (TaskModel task : tasks){\n                           String taskId =  task.getTaskId();\n                           List<Object> jobs = experimentCatalog.get(ExperimentCatalogModelType.JOB, Constants.FieldConstants.JobConstants.TASK_ID, taskId);\n-                          for (Object jobObject : jobs) {\n-                              String jobID = ((JobModel)jobObject).getJobId();\n-                              jobStatus.put(jobID, ((JobModel)jobObject).getJobStatus());\n+                          if (jobs != null && !jobs.isEmpty()){\n+                              for (Object jobObject : jobs) {\n+                                  JobModel jobModel = (JobModel) jobObject;\n+                                  String jobID = jobModel.getJobId();\n+                                  JobStatus status = jobModel.getJobStatus();\n+                                  if (status != null){\n+                                      jobStatus.put(jobID, status);\n+                                  }\n+                              }\n                           }\n                       }\n                     }",
                "raw_url": "https://github.com/apache/airavata/raw/fbc558ddc4ecce57833fdaff9062f264a631e2ad/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "sha": "40d0758b71c7f381ccdde7d377bbcedf6c4d2fdc",
                "status": "modified"
            }
        ],
        "message": "fixing NPE s in job status method",
        "parent": "https://github.com/apache/airavata/commit/766433652a3c968917b3200e8fd248e9e6a65280",
        "patched_files": [
            "AiravataServerHandler.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "AiravataServerHandlerTest.java"
        ]
    },
    "airavata_fc1cffb": {
        "bug_id": "airavata_fc1cffb",
        "commit": "https://github.com/apache/airavata/commit/fc1cffb221290d876adfc2ec6d666bbff01e7166",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/airavata/blob/fc1cffb221290d876adfc2ec6d666bbff01e7166/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=fc1cffb221290d876adfc2ec6d666bbff01e7166",
                "deletions": 3,
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "patch": "@@ -58,7 +58,7 @@\n     private static final String DEFAULT_GATEWAY = \"php_reference_gateway\";\n     private static Airavata.Client airavataClient;\n \n-    private static String echoAppId = \"Echo_a3c69094-2591-47d9-b5c4-e14c9fa5abf5\";\n+    private static String echoAppId = \"Echo_f6eabb22-a7c0-4e13-90bc-7874c2d54a7d\";\n     private static String mpiAppId = \"HelloMPI_bfd56d58-6085-4b7f-89fc-646576830518\";\n     private static String wrfAppId = \"WRF_7ad5da38-c08b-417c-a9ea-da9298839762\";\n     private static String amberAppId = \"Amber_cb54b269-cf79-4276-8dbb-2ec16b759cc6\";\n@@ -168,12 +168,12 @@ public static void createAndLaunchExp() throws TException {\n //                final String expId = createMPIExperimentForFSD(airavataClient);\n //               final String expId = createEchoExperimentForStampede(airavataClient);\n //                final String expId = createEchoExperimentForTrestles(airavataClient);\n-//                final String expId = createExperimentEchoForLocalHost(airavataClient);\n+                final String expId = createExperimentEchoForLocalHost(airavataClient);\n //                final String expId = createExperimentWRFTrestles(airavataClient);\n //                final String expId = createExperimentForBR2(airavataClient);\n //                final String expId = createExperimentForBR2Amber(airavataClient);\n //                final String expId = createExperimentWRFStampede(airavataClient);\n-                final String expId = createExperimentForStampedeAmber(airavataClient);\n+//                final String expId = createExperimentForStampedeAmber(airavataClient);\n //                String expId = createExperimentForTrestlesAmber(airavataClient);\n //                final String expId = createExperimentGROMACSStampede(airavataClient);\n //                final String expId = createExperimentESPRESSOStampede(airavataClient);",
                "raw_url": "https://github.com/apache/airavata/raw/fc1cffb221290d876adfc2ec6d666bbff01e7166/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "sha": "a8d2653c187f7444589ef21bf9fe2a29fcadf929",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/fc1cffb221290d876adfc2ec6d666bbff01e7166/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java?ref=fc1cffb221290d876adfc2ec6d666bbff01e7166",
                "deletions": 0,
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "patch": "@@ -964,6 +964,7 @@ public void invokeOutFlowHandlers(JobExecutionContext jobExecutionContext) throw\n                 synchronized (mutex) {\n                     mutex.wait(5000);  // waiting for the syncConnected event\n                 }\n+                experimentPath = AiravataZKUtils.getExpZnodePath(jobExecutionContext.getExperimentID());\n                 if (jobExecutionContext.getZk().exists(experimentPath, false) == null) {\n                     log.error(\"Experiment is already finalized so no output handlers will be invoked\");\n                     return;",
                "raw_url": "https://github.com/apache/airavata/raw/fc1cffb221290d876adfc2ec6d666bbff01e7166/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "sha": "df7b84014a49ec0c83e5663fada5a8c38be6ffb8",
                "status": "modified"
            }
        ],
        "message": "fixing NPE",
        "parent": "https://github.com/apache/airavata/commit/8ef27824c71ecbb467f767d964bf7fc330c67272",
        "patched_files": [
            "CreateLaunchExperiment.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "TestCreateLaunchExperiment.java"
        ]
    }
}