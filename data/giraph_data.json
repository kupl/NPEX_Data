[{"commit": "https://github.com/apache/giraph/commit/64428a9d0f8bca0edb1ccf34d281e89747b295f7", "parent": "https://github.com/apache/giraph/commit/58576c81fed9f4eccb03366151c1cf280765d237", "message": "GIRAPH-922: SimpleEdgeStore has a bug causing NPE (pavanka)", "bug_id": "giraph_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/giraph/raw/64428a9d0f8bca0edb1ccf34d281e89747b295f7/CHANGELOG", "blob_url": "https://github.com/apache/giraph/blob/64428a9d0f8bca0edb1ccf34d281e89747b295f7/CHANGELOG", "sha": "d315a9fa6161dff604d214d138f54fc6b5123f66", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/giraph/contents/CHANGELOG?ref=64428a9d0f8bca0edb1ccf34d281e89747b295f7", "patch": "@@ -1,6 +1,8 @@\n Giraph Change Log\n \n Release 1.1.0 - unreleased\n+  GIRAPH-922: SimpleEdgeStore has a bug causing NPE (pavanka)\n+\n   GIRAPH-915: With BigDataIO some messages can get ignored (majakabiljo via pavanka)\n \n   GIRAPH-918: GIRAPH-908 has a small bug reg counting entries (pavanka)", "filename": "CHANGELOG"}, {"additions": 5, "raw_url": "https://github.com/apache/giraph/raw/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/AbstractEdgeStore.java", "blob_url": "https://github.com/apache/giraph/blob/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/AbstractEdgeStore.java", "sha": "b40ac005e2be4a213763cd51d9333fe3463e2f3b", "changes": 12, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-core/src/main/java/org/apache/giraph/edge/AbstractEdgeStore.java?ref=64428a9d0f8bca0edb1ccf34d281e89747b295f7", "patch": "@@ -121,14 +121,12 @@ public AbstractEdgeStore(\n   protected abstract Map<K, OutEdges<I, E>> getPartitionEdges(int partitionId);\n \n   /**\n-   * Remove and return the OutEdges for a given partition\n+   * Return the OutEdges for a given partition\n    *\n    * @param entry for vertexId key\n-   * @param partitionEdges map of out-edges for vertices in a partition\n    * @return out edges\n    */\n-  protected abstract OutEdges<I, E> removePartitionEdges(Et entry,\n-    Map<K, OutEdges<I, E>> partitionEdges);\n+  protected abstract OutEdges<I, E> getPartitionEdges(Et entry);\n \n   /**\n    * Get iterator for partition edges\n@@ -223,10 +221,10 @@ public Void call() throws Exception {\n               // process all vertices in given partition\n               while (iterator.hasNext()) {\n                 Et entry = iterator.next();\n-                I vertexId = getVertexId(entry,\n-                    representativeVertexId);\n+                I vertexId = getVertexId(entry, representativeVertexId);\n                 OutEdges<I, E> outEdges = convertInputToComputeEdges(\n-                    removePartitionEdges(entry, partitionEdges));\n+                  getPartitionEdges(entry));\n+                iterator.remove();\n                 Vertex<I, V, E> vertex = partition.getVertex(vertexId);\n                 // If the source vertex doesn't exist, create it. Otherwise,\n                 // just set the edges.", "filename": "giraph-core/src/main/java/org/apache/giraph/edge/AbstractEdgeStore.java"}, {"additions": 3, "raw_url": "https://github.com/apache/giraph/raw/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/SimpleEdgeStore.java", "blob_url": "https://github.com/apache/giraph/blob/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/SimpleEdgeStore.java", "sha": "3eb97d6b87193f2c6d29d8be04b51a42ea37843f", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-core/src/main/java/org/apache/giraph/edge/SimpleEdgeStore.java?ref=64428a9d0f8bca0edb1ccf34d281e89747b295f7", "patch": "@@ -87,10 +87,9 @@ protected I createVertexId(Map.Entry<I, OutEdges<I, E>> entry) {\n   }\n \n   @Override\n-  protected OutEdges<I, E> removePartitionEdges(\n-      Map.Entry<I, OutEdges<I, E>> entry,\n-      Map<I, OutEdges<I, E>> partitionEdges) {\n-    return partitionEdges.put(entry.getKey(), null);\n+  protected OutEdges<I, E> getPartitionEdges(\n+    Map.Entry<I, OutEdges<I, E>> entry) {\n+    return entry.getValue();\n   }\n \n   @Override", "filename": "giraph-core/src/main/java/org/apache/giraph/edge/SimpleEdgeStore.java"}, {"additions": 3, "raw_url": "https://github.com/apache/giraph/raw/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/primitives/IntEdgeStore.java", "blob_url": "https://github.com/apache/giraph/blob/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/primitives/IntEdgeStore.java", "sha": "b138f4964a53609f597234e6861e63ceda6e3f0f", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-core/src/main/java/org/apache/giraph/edge/primitives/IntEdgeStore.java?ref=64428a9d0f8bca0edb1ccf34d281e89747b295f7", "patch": "@@ -75,10 +75,9 @@ protected IntWritable createVertexId(\n   }\n \n   @Override\n-  protected OutEdges<IntWritable, E> removePartitionEdges(\n-    Int2ObjectMap.Entry<OutEdges<IntWritable, E>> entry,\n-    Map<Integer, OutEdges<IntWritable, E>> partitionEdges) {\n-    return partitionEdges.put(entry.getIntKey(), null);\n+  protected OutEdges<IntWritable, E> getPartitionEdges(\n+    Int2ObjectMap.Entry<OutEdges<IntWritable, E>> entry) {\n+    return entry.getValue();\n   }\n \n   @Override", "filename": "giraph-core/src/main/java/org/apache/giraph/edge/primitives/IntEdgeStore.java"}, {"additions": 3, "raw_url": "https://github.com/apache/giraph/raw/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/primitives/LongEdgeStore.java", "blob_url": "https://github.com/apache/giraph/blob/64428a9d0f8bca0edb1ccf34d281e89747b295f7/giraph-core/src/main/java/org/apache/giraph/edge/primitives/LongEdgeStore.java", "sha": "61f908a06e11adf8141184da46870c360c285515", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-core/src/main/java/org/apache/giraph/edge/primitives/LongEdgeStore.java?ref=64428a9d0f8bca0edb1ccf34d281e89747b295f7", "patch": "@@ -76,10 +76,9 @@ protected LongWritable createVertexId(\n \n \n   @Override\n-  protected OutEdges<LongWritable, E> removePartitionEdges(\n-      Long2ObjectMap.Entry<OutEdges<LongWritable, E>> entry,\n-      Map<Long, OutEdges<LongWritable, E>> partitionEdges) {\n-    return partitionEdges.put(entry.getLongKey(), null);\n+  protected OutEdges<LongWritable, E> getPartitionEdges(\n+    Long2ObjectMap.Entry<OutEdges<LongWritable, E>> entry) {\n+    return entry.getValue();\n   }\n \n   @Override", "filename": "giraph-core/src/main/java/org/apache/giraph/edge/primitives/LongEdgeStore.java"}], "repo": "giraph"}, {"commit": "https://github.com/apache/giraph/commit/a4d33303969c060e02b9bc76b90c3ba06e9ba9e3", "parent": "https://github.com/apache/giraph/commit/156682791504c2e433382551e1be301e1d9146cb", "message": "GIRAPH-580: NPE in HiveGiraphRunner when the vertex output format is\nnot defined (aching)", "bug_id": "giraph_2", "file": [{"additions": 3, "raw_url": "https://github.com/apache/giraph/raw/a4d33303969c060e02b9bc76b90c3ba06e9ba9e3/CHANGELOG", "blob_url": "https://github.com/apache/giraph/blob/a4d33303969c060e02b9bc76b90c3ba06e9ba9e3/CHANGELOG", "sha": "50ed932b2476bd3a5a2a44339caa20ad66de5853", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/giraph/contents/CHANGELOG?ref=a4d33303969c060e02b9bc76b90c3ba06e9ba9e3", "patch": "@@ -1,6 +1,9 @@\n Giraph Change Log\n \n Release 0.2.0 - unreleased\n+  GIRAPH-580: NPE in HiveGiraphRunner when the vertex output format is\n+  not defined (aching)\n+\n   GIRAPH-510: Remove HBase Cruft (kelarini via nitay)\n \n   GIRAPH-566: Make option for aggregators to be configurable (majakabiljo)", "filename": "CHANGELOG"}, {"additions": 4, "raw_url": "https://github.com/apache/giraph/raw/a4d33303969c060e02b9bc76b90c3ba06e9ba9e3/giraph-hive/src/main/java/org/apache/giraph/hive/HiveGiraphRunner.java", "blob_url": "https://github.com/apache/giraph/blob/a4d33303969c060e02b9bc76b90c3ba06e9ba9e3/giraph-hive/src/main/java/org/apache/giraph/hive/HiveGiraphRunner.java", "sha": "efc08d30d0832f25c5805531562b133a3f9d6cf1", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-hive/src/main/java/org/apache/giraph/hive/HiveGiraphRunner.java?ref=a4d33303969c060e02b9bc76b90c3ba06e9ba9e3", "patch": "@@ -680,8 +680,10 @@ private void logOptions(GiraphConfiguration giraphConf) {\n       LOG.info(LOG_PREFIX + \"-outputPartition=\\\"\" +\n           hiveOutputDescription.getPartitionValues() + \"\\\"\");\n     }\n-    LOG.info(LOG_PREFIX + \"-outputFormatClass=\" +\n-        classes.getVertexOutputFormatClass().getCanonicalName());\n+    if (classes.getVertexOutputFormatClass() != null) {\n+      LOG.info(LOG_PREFIX + \"-outputFormatClass=\" +\n+          classes.getVertexOutputFormatClass().getCanonicalName());\n+    }\n \n     LOG.info(LOG_PREFIX + \"-workers=\" + workers);\n   }", "filename": "giraph-hive/src/main/java/org/apache/giraph/hive/HiveGiraphRunner.java"}], "repo": "giraph"}, {"commit": "https://github.com/apache/giraph/commit/ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0", "parent": "https://github.com/apache/giraph/commit/d0bb2a9a377bd78990736f858d57504befc95421", "message": "GIRAPH-30: NPE in ZooKeeperManager if base directory cannot be\ncreated. apurtell via aching.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/giraph/trunk@1170427 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "giraph_3", "file": [{"additions": 3, "raw_url": "https://github.com/apache/giraph/raw/ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0/CHANGELOG", "blob_url": "https://github.com/apache/giraph/blob/ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0/CHANGELOG", "sha": "90c145d823259af90a0ecd36464672b9569d625a", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/giraph/contents/CHANGELOG?ref=ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0", "patch": "@@ -2,6 +2,9 @@ Giraph Change Log\n \n Release 0.70.0 - unreleased\n \n+  GIRAPH-30: NPE in ZooKeeperManager if base directory cannot be\n+  created. apurtell via aching.\n+\n   GIRAPH-27: Mutable static global state in Vertex.java should be\n   refactored. jake.mannix via aching.\n  ", "filename": "CHANGELOG"}, {"additions": 15, "raw_url": "https://github.com/apache/giraph/raw/ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java", "blob_url": "https://github.com/apache/giraph/blob/ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java", "sha": "dd13f5ba7995c6812f8dbf1991363435a11f0437", "changes": 15, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/giraph/contents/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java?ref=ea0c721e8dbdcf88e5e36103f7da7f69ab4a8da0", "patch": "@@ -229,6 +229,21 @@ public void createCandidateStamp() {\n             LOG.error(\"createCandidateStamp: Failed to mkdirs \" +\n                       baseDirectory);\n         }\n+        // Check that the base directory exists and is a directory\n+        try {\n+            if (!fs.getFileStatus(baseDirectory).isDir()) {\n+                throw new IllegalArgumentException(\n+                    \"createCandidateStamp: \" + baseDirectory +\n+                    \" is not a directory, but should be.\");\n+            }\n+        } catch (IOException e) {\n+            throw new IllegalArgumentException(\n+                \"createCandidateStamp: Couldn't get file status \" +\n+                \"for base directory \" + baseDirectory + \".  If there is an \" +\n+                \"issue with this directory, please set an accesible \" +\n+                \"base directory with the Hadoop configuration option \" +\n+                GiraphJob.ZOOKEEPER_MANAGER_DIRECTORY);\n+        }\n \n         Path myCandidacyPath = new Path(\n             taskDirectory, myHostname +", "filename": "src/main/java/org/apache/giraph/zk/ZooKeeperManager.java"}], "repo": "giraph"}, {"commit": "https://github.com/apache/giraph/commit/dfc210bf549d618124d4b9195bf7de37c4533c78", "parent": "https://github.com/apache/giraph/commit/96c0e3db0037c492d738a10b85db5bb894476ebe", "message": "GIRAPH-25 NPE in BspServiceMaster when failing a job (committed by\naching on behalf of dvryaboy).\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/giraph/trunk@1166854 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "giraph_4", "file": [{"additions": 12, "raw_url": "https://github.com/apache/giraph/raw/dfc210bf549d618124d4b9195bf7de37c4533c78/CHANGELOG", "blob_url": "https://github.com/apache/giraph/blob/dfc210bf549d618124d4b9195bf7de37c4533c78/CHANGELOG", "sha": "b4c83945c42abf4e223e06fabf5955df511af865", "changes": 21, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/giraph/contents/CHANGELOG?ref=dfc210bf549d618124d4b9195bf7de37c4533c78", "patch": "@@ -1,25 +1,28 @@\n Giraph Change Log\n \n Release 0.70.0 - unreleased\n+ \n+  GIRAPH-25 NPE in BspServiceMaster when failing a job (aching on behalf \n+  of dvryaboy)\n \n-  GIRAPH-24. Job-level statistics reports one superstep greater than \n+  GIRAPH-24 Job-level statistics reports one superstep greater than \n   workers. (jghoman)\n   \n-  GIRAPH-18. Refactor BspServiceWorker::loadVertices(). (jghoman)\n+  GIRAPH-18 Refactor BspServiceWorker::loadVertices(). (jghoman)\n   \n-  GIRAPH-14. Support for the Facebook Hadoop branch. (aching)\n+  GIRAPH-14 Support for the Facebook Hadoop branch. (aching)\n \n-  GIRAPH-16. Add Apache RAT to the verify build step. (omalley)\n+  GIRAPH-16 Add Apache RAT to the verify build step. (omalley)\n \n-  GIRAPH-17 - Giraph doesn't give up properly after the maximum connect\n+  GIRAPH-17 Giraph doesn't give up properly after the maximum connect\n   attempts to ZooKeeper. (aching)\n \n-  GIRAPH-2: Make the project homepage. (jghoman)\n+  GIRAPH-2 Make the project homepage. (jghoman)\n \n-  GIRAPH-9: Change Yahoo License Header to Apache License Header (hyunsik)\n+  GIRAPH-9 Change Yahoo License Header to Apache License Header (hyunsik)\n \n-  GIRAPH-6. Remove Yahoo-specific code from pom.xml. (jghoman)\n+  GIRAPH-6 Remove Yahoo-specific code from pom.xml. (jghoman)\n \n   GIRAPH-5 Remove Yahoo directories after svn import from Yahoo! (aching)\n \n-  GIRAPH-3. Vertex:sentMsgToAllEdges should be sendMsg. (jghoman)\n\\ No newline at end of file\n+  GIRAPH-3 Vertex:sentMsgToAllEdges should be sendMsg. (jghoman)\n\\ No newline at end of file", "filename": "CHANGELOG"}, {"additions": 1, "raw_url": "https://github.com/apache/giraph/raw/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/bsp/CentralizedServiceMaster.java", "blob_url": "https://github.com/apache/giraph/blob/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/bsp/CentralizedServiceMaster.java", "sha": "f20510f4c31523eae457a8bc4cc83f48893295e2", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/giraph/contents/src/main/java/org/apache/giraph/bsp/CentralizedServiceMaster.java?ref=dfc210bf549d618124d4b9195bf7de37c4533c78", "patch": "@@ -46,7 +46,7 @@\n      * VertexInputFormat.  These InputSplits will be split further into\n      * partitions by the workers.\n      *\n-     * @return number of partitions\n+     * @return number of partitions. Returns -1 on failure to create valid input splits.\n      */\n     int createInputSplits();\n ", "filename": "src/main/java/org/apache/giraph/bsp/CentralizedServiceMaster.java"}, {"additions": 12, "raw_url": "https://github.com/apache/giraph/raw/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/graph/BspServiceMaster.java", "blob_url": "https://github.com/apache/giraph/blob/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/graph/BspServiceMaster.java", "sha": "66d1a14c054280947d1c993a0a2a997938dcff43", "changes": 17, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/giraph/contents/src/main/java/org/apache/giraph/graph/BspServiceMaster.java?ref=dfc210bf549d618124d4b9195bf7de37c4533c78", "patch": "@@ -408,15 +408,18 @@ private void getWorkers(long superstep,\n             ++pollAttempt;\n         }\n         if (failJob) {\n-            LOG.warn(\"checkWorkers: Did not receive enough processes in \" +\n-                     \"time (only \" + totalResponses + \" of \" +\n-                     minWorkers + \" required)\");\n+            LOG.error(\"checkWorkers: Did not receive enough processes in \" +\n+                      \"time (only \" + totalResponses + \" of \" +\n+                      minWorkers + \" required).  This occurs if you do not \" +\n+                      \"have enough map tasks available simultaneously on \" +\n+                      \"your Hadoop instance to fulfill the number of \" +\n+                      \"requested workers.\");\n             return null;\n         }\n \n         if (healthyWorkerList.size() < minWorkers) {\n-            LOG.warn(\"checkWorkers: Only \" + healthyWorkerList.size() +\n-                     \" available when \" + minWorkers + \" are required.\");\n+            LOG.error(\"checkWorkers: Only \" + healthyWorkerList.size() +\n+                      \" available when \" + minWorkers + \" are required.\");\n             return null;\n         }\n \n@@ -450,6 +453,7 @@ private void getWorkers(long superstep,\n         return workerHostnamePortMap;\n     }\n \n+    @Override\n     public int createInputSplits() {\n         // Only the 'master' should be doing this.  Wait until the number of\n         // processes that have reported health exceeds the minimum percentage.\n@@ -481,6 +485,7 @@ public int createInputSplits() {\n         Map<String, JSONArray> healthyWorkerHostnamePortMap = checkWorkers();\n         if (healthyWorkerHostnamePortMap == null) {\n             setJobState(ApplicationState.FAILED, -1, -1);\n+            return -1;\n         }\n \n         List<InputSplit> splitList =\n@@ -726,6 +731,7 @@ private void mapFilesToWorkers(long superstep,\n         }\n     }\n \n+    @Override\n     public void setup() {\n         // Might have to manually load a checkpoint.\n         // In that case, the input splits are not set, they will be faked by\n@@ -750,6 +756,7 @@ public void setup() {\n         }\n     }\n \n+    @Override\n     public boolean becomeMaster() {\n         // Create my bid to become the master, then try to become the worker\n         // or return false.", "filename": "src/main/java/org/apache/giraph/graph/BspServiceMaster.java"}, {"additions": 47, "raw_url": "https://github.com/apache/giraph/raw/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/graph/MasterThread.java", "blob_url": "https://github.com/apache/giraph/blob/dfc210bf549d618124d4b9195bf7de37c4533c78/src/main/java/org/apache/giraph/graph/MasterThread.java", "sha": "2bd2d964b3b74764036782b13d9eaf7cccff333e", "changes": 94, "status": "modified", "deletions": 47, "contents_url": "https://api.github.com/repos/apache/giraph/contents/src/main/java/org/apache/giraph/graph/MasterThread.java?ref=dfc210bf549d618124d4b9195bf7de37c4533c78", "patch": "@@ -89,61 +89,61 @@ public void run() {\n             long endMillis = 0;\n             bspServiceMaster.setup();\n             if (bspServiceMaster.becomeMaster() == true) {\n-                if (bspServiceMaster.getRestartedSuperstep() ==\n-                        BspService.UNSET_SUPERSTEP) {\n-                    bspServiceMaster.createInputSplits();\n-                }\n-                long setupMillis = (System.currentTimeMillis() - startMillis);\n-                context.getCounter(GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n-                                   \"Setup (milliseconds)\").\n-                                   increment(setupMillis);\n-                setupSecs = setupMillis / 1000.0d;\n-                SuperstepState superstepState = SuperstepState.INITIAL;\n-                long cachedSuperstep = BspService.UNSET_SUPERSTEP;\n-                while (superstepState != SuperstepState.ALL_SUPERSTEPS_DONE) {\n-                    long startSuperstepMillis = System.currentTimeMillis();\n-                    cachedSuperstep = bspServiceMaster.getSuperstep();\n-                    superstepState = bspServiceMaster.coordinateSuperstep();\n-                    long superstepMillis = System.currentTimeMillis() -\n-                        startSuperstepMillis;\n-                    superstepSecsMap.put(new Long(cachedSuperstep),\n-                                           superstepMillis / 1000.0d);\n-                    if (LOG.isInfoEnabled()) {\n-                        LOG.info(\"masterThread: Coordination of superstep \" +\n-                                 cachedSuperstep + \" took \" +\n-                                 superstepMillis / 1000.0d +\n-                                 \" seconds ended with state \" + superstepState +\n-                                 \" and is now on superstep \" +\n-                                 bspServiceMaster.getSuperstep());\n-                    }\n-                    if (superstepCounterOn) {\n-                        String counterPrefix;\n-                        if (cachedSuperstep == -1) {\n-                            counterPrefix = \"Vertex input superstep\";\n-                        } else {\n-                            counterPrefix = \"Superstep \" + cachedSuperstep;\n+                // Attempt to create InputSplits if necessary. Bail out if that fails.\n+                if (bspServiceMaster.getRestartedSuperstep() != BspService.UNSET_SUPERSTEP\n+                        || bspServiceMaster.createInputSplits() != -1) {\n+                    long setupMillis = (System.currentTimeMillis() - startMillis);\n+                    context.getCounter(GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n+                            \"Setup (milliseconds)\").\n+                            increment(setupMillis);\n+                    setupSecs = setupMillis / 1000.0d;\n+                    SuperstepState superstepState = SuperstepState.INITIAL;\n+                    long cachedSuperstep = BspService.UNSET_SUPERSTEP;\n+                    while (superstepState != SuperstepState.ALL_SUPERSTEPS_DONE) {\n+                        long startSuperstepMillis = System.currentTimeMillis();\n+                        cachedSuperstep = bspServiceMaster.getSuperstep();\n+                        superstepState = bspServiceMaster.coordinateSuperstep();\n+                        long superstepMillis = System.currentTimeMillis() -\n+                                startSuperstepMillis;\n+                        superstepSecsMap.put(new Long(cachedSuperstep),\n+                                superstepMillis / 1000.0d);\n+                        if (LOG.isInfoEnabled()) {\n+                            LOG.info(\"masterThread: Coordination of superstep \" +\n+                                    cachedSuperstep + \" took \" +\n+                                    superstepMillis / 1000.0d +\n+                                    \" seconds ended with state \" + superstepState +\n+                                    \" and is now on superstep \" +\n+                                    bspServiceMaster.getSuperstep());\n+                        }\n+                        if (superstepCounterOn) {\n+                            String counterPrefix;\n+                            if (cachedSuperstep == -1) {\n+                                counterPrefix = \"Vertex input superstep\";\n+                            } else {\n+                                counterPrefix = \"Superstep \" + cachedSuperstep;\n+                            }\n+                            context.getCounter(GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n+                                    counterPrefix +\n+                                    \" (milliseconds)\").\n+                                    increment(superstepMillis);\n                         }\n-                        context.getCounter(GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n-                                           counterPrefix +\n-                                           \" (milliseconds)\").\n-                                           increment(superstepMillis);\n-                    }\n \n-                    // If a worker failed, restart from a known good superstep\n-                    if (superstepState == SuperstepState.WORKER_FAILURE) {\n-                        bspServiceMaster.restartFromCheckpoint(\n-                            bspServiceMaster.getLastGoodCheckpoint());\n+                        // If a worker failed, restart from a known good superstep\n+                        if (superstepState == SuperstepState.WORKER_FAILURE) {\n+                            bspServiceMaster.restartFromCheckpoint(\n+                                    bspServiceMaster.getLastGoodCheckpoint());\n+                        }\n+                        endMillis = System.currentTimeMillis();\n                     }\n-                    endMillis = System.currentTimeMillis();\n+                    bspServiceMaster.setJobState(ApplicationState.FINISHED, -1, -1);\n                 }\n-                bspServiceMaster.setJobState(ApplicationState.FINISHED, -1, -1);\n             }\n             bspServiceMaster.cleanup();\n             if (!superstepSecsMap.isEmpty()) {\n                 context.getCounter(\n-                    GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n-                    \"Shutdown (milliseconds)\").\n-                    increment(System.currentTimeMillis() - endMillis);\n+                        GIRAPH_TIMERS_COUNTER_GROUP_NAME,\n+                        \"Shutdown (milliseconds)\").\n+                        increment(System.currentTimeMillis() - endMillis);\n                 if (LOG.isInfoEnabled()) {\n                     LOG.info(\"setup: Took \" + setupSecs + \" seconds.\");\n                 }", "filename": "src/main/java/org/apache/giraph/graph/MasterThread.java"}, {"additions": 81, "raw_url": "https://github.com/apache/giraph/raw/dfc210bf549d618124d4b9195bf7de37c4533c78/src/test/java/org/apache/giraph/TestNotEnoughMapTasks.java", "blob_url": "https://github.com/apache/giraph/blob/dfc210bf549d618124d4b9195bf7de37c4533c78/src/test/java/org/apache/giraph/TestNotEnoughMapTasks.java", "sha": "16f2ab2a86f476311dda8c31cb80f9f36ddda8f7", "changes": 81, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/giraph/contents/src/test/java/org/apache/giraph/TestNotEnoughMapTasks.java?ref=dfc210bf549d618124d4b9195bf7de37c4533c78", "patch": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.giraph;\n+\n+import java.io.IOException;\n+\n+import org.apache.giraph.examples.SimpleCheckpointVertex;\n+import org.apache.giraph.examples.SimpleSuperstepVertex.SimpleSuperstepVertexOutputFormat;\n+import org.apache.giraph.examples.SimpleSuperstepVertex.SimpleSuperstepVertexInputFormat;\n+import org.apache.giraph.graph.GiraphJob;\n+import org.apache.hadoop.fs.Path;\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+/**\n+ * Unit test for not enough map tasks\n+ */\n+public class TestNotEnoughMapTasks extends BspCase {\n+    /**\n+     * Create the test case\n+     *\n+     * @param testName name of the test case\n+     */\n+    public TestNotEnoughMapTasks(String testName) {\n+        super(testName);\n+    }\n+\n+    /**\n+     * @return the suite of tests being tested\n+     */\n+    public static Test suite() {\n+        return new TestSuite(TestNotEnoughMapTasks.class);\n+    }\n+\n+    /**\n+     * This job should always fail gracefully with not enough map tasks.\n+     *\n+     * @throws IOException\n+     * @throws ClassNotFoundException\n+     * @throws InterruptedException\n+     */\n+    public void testNotEnoughMapTasks()\n+            throws IOException, InterruptedException, ClassNotFoundException {\n+        if (getJobTracker() == null) {\n+            System.out.println(\n+                \"testNotEnoughMapTasks: Ignore this test in local mode.\");\n+            return;\n+        }\n+        GiraphJob job = new GiraphJob(getCallingMethodName());\n+        setupConfiguration(job);\n+        // An unlikely impossible number of workers to achieve\n+        final int unlikelyWorkers = Short.MAX_VALUE;\n+        job.setWorkerConfiguration(\n+            unlikelyWorkers, unlikelyWorkers, 100.0f);\n+        // Only one poll attempt of one second to make failure faster\n+        job.getConfiguration().setInt(GiraphJob.POLL_ATTEMPTS, 1);\n+        job.getConfiguration().setInt(GiraphJob.POLL_MSECS, 1);\n+        job.setVertexClass(SimpleCheckpointVertex.class);\n+        job.setVertexInputFormatClass(SimpleSuperstepVertexInputFormat.class);\n+        job.setVertexOutputFormatClass(SimpleSuperstepVertexOutputFormat.class);\n+        Path outputPath = new Path(\"/tmp/\" + getCallingMethodName());\n+        removeAndSetOutput(job, outputPath);\n+        assertFalse(job.run(false));\n+    }\n+}", "filename": "src/test/java/org/apache/giraph/TestNotEnoughMapTasks.java"}], "repo": "giraph"}, {"commit": "https://github.com/apache/giraph/commit/daf6bd54af7149e06961607f36e3034aec1e70ef", "parent": "https://github.com/apache/giraph/commit/b7c533baf4ce8f0fd3d3e7d521cc355e71bca797", "message": "GIRAPH-1097 Fix TestOutOfCore.testOutOfCoreLocalDiskAccessor\n\nSummary:\nOn my laptop it failed because of an NPE in WorkerSuperstepMetrics.\nI tracked it down and found that it is triggered from the branch of code that prints out metrics. We don't normally print out metrics in unit tests, so I'd expect this feature doesn't exist or not functional in hadoop_1. I'll try to disable it, to see how jenkins reacts.\n\nTest Plan:  mvn test -pl giraph-examples -am -Dtest=TestOutOfCore -DfailIfNoTests=false -Phadoop_1\n\nReviewers: maja.kabiljo, dionysis.logothetis, heslami\n\nReviewed By: heslami\n\nDifferential Revision: https://reviews.facebook.net/D60873", "bug_id": "giraph_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/giraph/raw/daf6bd54af7149e06961607f36e3034aec1e70ef/giraph-examples/src/test/java/org/apache/giraph/TestOutOfCore.java", "blob_url": "https://github.com/apache/giraph/blob/daf6bd54af7149e06961607f36e3034aec1e70ef/giraph-examples/src/test/java/org/apache/giraph/TestOutOfCore.java", "sha": "a9d6a65d7e3f71517e7aebb0ecf45a27508af083", "changes": 4, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/giraph/contents/giraph-examples/src/test/java/org/apache/giraph/TestOutOfCore.java?ref=daf6bd54af7149e06961607f36e3034aec1e70ef", "patch": "@@ -18,7 +18,6 @@\n \n package org.apache.giraph;\n \n-import org.apache.giraph.comm.netty.NettyClient;\n import org.apache.giraph.conf.GiraphConfiguration;\n import org.apache.giraph.conf.GiraphConstants;\n import org.apache.giraph.examples.GeneratedVertexReader;\n@@ -59,7 +58,6 @@ public void prepareTest() {\n         SimplePageRankComputation.SimplePageRankWorkerContext.class);\n     conf.setMasterComputeClass(\n         SimplePageRankComputation.SimplePageRankMasterCompute.class);\n-    GiraphConstants.METRICS_ENABLE.set(conf, true);\n     GiraphConstants.USER_PARTITION_COUNT.set(conf, NUM_PARTITIONS);\n     GiraphConstants.USE_OUT_OF_CORE_GRAPH.set(conf, true);\n     GiraphConstants.MAX_PARTITIONS_IN_MEMORY.set(conf, NUM_PARTITIONS_IN_MEMORY);\n@@ -97,7 +95,7 @@ private void runTest()\n         getTempPath(getCallingMethodName()));\n     // Overwrite the number of vertices set in BspCase\n     GeneratedVertexReader.READER_VERTICES.set(conf, 200);\n-    assertTrue(job.run(true));\n+    assertTrue(job.run(false));\n     if (!runningInDistributedMode()) {\n       double maxPageRank =\n           SimplePageRankComputation.SimplePageRankWorkerContext.getFinalMax();", "filename": "giraph-examples/src/test/java/org/apache/giraph/TestOutOfCore.java"}], "repo": "giraph"}]
