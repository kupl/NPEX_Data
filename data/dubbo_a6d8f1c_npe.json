[
    {
        "repo": "dubbo",
        "commit": "https://github.com/apache/dubbo/commit/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282",
        "bug_id": "dubbo_a6d8f1c",
        "message": "    #1597: CacheFilter,when value is null,it will throw NPE(if use ehcache for jcache),why not check null here (#1828)",
        "parent": "https://github.com/apache/dubbo/commit/d03ff27bd0c2e77689bfe11f16f5e9276dc62081",
        "patched_files": [
            "CacheFilter.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/dubbo/raw/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java?ref=a6d8f1c5b20d30b3fe3206332d56bc6de1baa282",
                "filename": "dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java",
                "deletions": 1,
                "sha": "e034cbbc96d5479d77b7aafa8d4fe021a606ac55",
                "blob_url": "https://github.com/apache/dubbo/blob/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java",
                "patch": "@@ -52,7 +52,7 @@ public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcExcept\n                     return new RpcResult(value);\r\n                 }\r\n                 Result result = invoker.invoke(invocation);\r\n-                if (!result.hasException()) {\r\n+                if (!result.hasException() && result.getValue() != null) {\r\n                     cache.put(key, result.getValue());\r\n                 }\r\n                 return result;\r",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 33,
                "raw_url": "https://github.com/apache/dubbo/raw/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java?ref=a6d8f1c5b20d30b3fe3206332d56bc6de1baa282",
                "filename": "dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java",
                "deletions": 0,
                "sha": "760605c9ab60495e77125bcb2dab6d0ca040b700",
                "blob_url": "https://github.com/apache/dubbo/blob/a6d8f1c5b20d30b3fe3206332d56bc6de1baa282/dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java",
                "patch": "@@ -44,6 +44,8 @@\n     private Invoker<?> invoker = mock(Invoker.class);\n     private Invoker<?> invoker1 = mock(Invoker.class);\n     private Invoker<?> invoker2 = mock(Invoker.class);\n+    private Invoker<?> invoker3 = mock(Invoker.class);\n+    private Invoker<?> invoker4 = mock(Invoker.class);\n     private String cacheType;\n     private CacheFactory cacheFactory;\n \n@@ -77,6 +79,11 @@ public void setUp() throws Exception {\n         given(invoker2.invoke(invocation)).willReturn(new RpcResult(\"value2\"));\n         given(invoker2.getUrl()).willReturn(url);\n \n+        given(invoker3.invoke(invocation)).willReturn(new RpcResult(new RuntimeException()));\n+        given(invoker3.getUrl()).willReturn(url);\n+\n+        given(invoker4.invoke(invocation)).willReturn(new RpcResult());\n+        given(invoker4.getUrl()).willReturn(url);\n     }\n \n     @Test\n@@ -89,6 +96,7 @@ public void testNonArgsMethod() {\n         RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n         RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n         Assert.assertEquals(rpcResult1.getValue(), rpcResult2.getValue());\n+        Assert.assertEquals(rpcResult1.getValue(), \"value\");\n     }\n \n     @Test\n@@ -101,5 +109,30 @@ public void testMethodWithArgs() {\n         RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n         RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n         Assert.assertEquals(rpcResult1.getValue(), rpcResult2.getValue());\n+        Assert.assertEquals(rpcResult1.getValue(), \"value\");\n+    }\n+\n+    @Test\n+    public void testException() {\n+        invocation.setMethodName(\"echo1\");\n+        invocation.setParameterTypes(new Class<?>[]{String.class});\n+        invocation.setArguments(new Object[]{\"arg2\"});\n+\n+        cacheFilter.invoke(invoker3, invocation);\n+        RpcResult rpcResult = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n+        Assert.assertEquals(rpcResult.getValue(), \"value2\");\n+    }\n+\n+    @Test\n+    public void testNull() {\n+        invocation.setMethodName(\"echo1\");\n+        invocation.setParameterTypes(new Class<?>[]{String.class});\n+        invocation.setArguments(new Object[]{\"arg3\"});\n+\n+        cacheFilter.invoke(invoker4, invocation);\n+        RpcResult rpcResult1 = (RpcResult) cacheFilter.invoke(invoker1, invocation);\n+        RpcResult rpcResult2 = (RpcResult) cacheFilter.invoke(invoker2, invocation);\n+        Assert.assertEquals(rpcResult1.getValue(), \"value1\");\n+        Assert.assertEquals(rpcResult2.getValue(), \"value1\");\n     }\n }",
                "changes": 33
            }
        ],
        "unit_tests": [
            "CacheFilterTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "dubbo-filter/dubbo-filter-cache/src/test/java/com/alibaba/dubbo/cache/filter/CacheFilterTest.java",
        "buggy_files": [
            "dubbo-filter/dubbo-filter-cache/src/main/java/com/alibaba/dubbo/cache/filter/CacheFilter.java"
        ],
        "fixed": true
    }
]