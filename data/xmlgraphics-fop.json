{
    "xmlgraphics-fop_068f78c": {
        "bug_id": "xmlgraphics-fop_068f78c",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/068f78cf23e72c8f596c982eda4f295e7e7d5aed",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/KEYS",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/KEYS?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "KEYS",
                "patch": "@@ -19,7 +19,8 @@ pub  1024D/5F298824 2006-09-30 Simon Pepping <spepping@leverkruid.eu>\n sub  2048g/40F32100 2006-09-30\n pub  1024D/4358C584 2006-12-08 Vincent Hennebert <vhennebert@apache.org>\n sub  2048g/0BD6AC9B 2006-12-08\n-\n+pub   1024D/CC31AE97 2008-03-27 [expires: 2011-01-01]\n+uid                  Maximilian Berger <maxberger@apache.org>\n \n -----BEGIN PGP PUBLIC KEY BLOCK-----\n Version: GnuPG v1.0.6 (GNU/Linux)\n@@ -167,3 +168,24 @@ SQQYEQIACQUCRXmZwgIbDAAKCRCgctTQQ1jFhBc3AKCQ1X7oIVR8g7GvSGEUw6DE\n HgEaUgCgkl30lcl9gGa9hqk4cuGYn1OTyks=\n =XphF\n -----END PGP PUBLIC KEY BLOCK-----\n+\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.7 (OpenBSD)\n+\n+mQGiBEfrX/ARBADulGs9V7StbfK8CFfClihdh4lRpw2tktMuYiQJ/rIsNq4zghkT\n+UGxFU0eUC2ZVPYvwG6sXgZ5SSm6i8Ii79YdIIxUG7oNwXaY/e9rK+xX193xqmDgl\n+Vh5vm4LUtncHi9TZDSF+g1YU1DVHbSjTd2oQEHxbBppL0CLfaLv3U1qr2wCgxeGw\n+ZIwb6KD6yesRLx6vGDkDzAMEAL99p0m4sNnjZdKC25Rrt6NZ7CROXWs89/+dkewg\n+JCZiVEoAcdSa0z5d8+XaSzmqR8BJWM1PBPjG48eEdqOevwypd0F/U1mwZ42MvQEw\n+oBayUY+7/pptW7C5L3Fjk18drE0a8lIzt9VBGX5fe3GoXtZKuOzDv0hEuHyzR9q9\n+JLXsA/sELFfrHf0tBfXAdE7pj/Mahalu17/GAyb0RHSvuOfoUvXSXZA91cFg8ycB\n+4x265NtYZk52M32wi5ePrYeSJIZ6vWRvPuWVAXDg5S6HCMjcXc6ElkgLcUt1NoPI\n+DmRXe4FIDZkGSYSXdLTUByu7+8fCuWQHCFG2sALdOyVlucij2LQoTWF4aW1pbGlh\n+biBCZXJnZXIgPG1heGJlcmdlckBhcGFjaGUub3JnPohmBBMRAgAmBQJH61/wAhsD\n+BQkFM4sABgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQ4+RAT8wxrpcs1wCeIAoI\n+B0MwZfWLV+wD3pt1wDkPXbsAnjuOsyZ7EeNOcpoqSteB17aPRGeLiEYEEBECAAYF\n+Akfrb00ACgkQByq3OugVkrx76ACgqJ8W64IhBYgBvp3dTDLS825gCQQAnjB6X5+4\n+eW/0pQUpJcvolxbT9xvF\n+=bbQO\n+-----END PGP PUBLIC KEY BLOCK-----\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/KEYS",
                "sha": "c11ca63c310106f8e502de61c129a450b44edb5f",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/README",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/README?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "README",
                "patch": "@@ -90,6 +90,46 @@ http://xmlgraphics.apache.org/fop/stable/running.html\n   RELEASE NOTES\n ==============================================================================\n \n+Version 0.95beta\n+================\n+\n+This is a pre-version of the third production grade release of the new FOP\n+codebase. It contains many bug fixes and new features. See below for details.\n+\n+Compliance\n+----------\n+\n+This release implements the XSL 1.0 and 1.1 recommendations to a high\n+degree of compliance. See the compliance page\n+http://xmlgraphics.apache.org/fop/compliance.html for a detailed\n+overview.\n+\n+Known issues\n+------------\n+\n+The known issues of this release are listed at\n+http://xmlgraphics.apache.org/fop/0.95/knownissues_overview.html.\n+\n+Major Changes in Version 0.95\n+-----------------------------\n+\n+* Add new fox:external-document extension element that allows to insert whole\n+  documents into a page-sequence (JM)\n+* Add support for background on fo:table-column and fo:table-header/footer/body\n+  elements (VH)\n+* Add support for conditional borders in tables (VH)\n+* Add support for scale-down-to-fit and scale-up-to-fit (JM)\n+* Fix various bugs and performance problems with external graphics by\n+  introducing a new image loading framework (JM)\n+\n+The long list of changes in this release is available at\n+http://xmlgraphics.apache.org/fop/0.95/changes_0.95.html.\n+\n+The long list of changes in this and earlier releases is available at\n+http://xmlgraphics.apache.org/fop/changes.html.\n+\n+\n+\n Version 0.94\n ============\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/README",
                "sha": "133232276b97017aa251c676321fce56df29ed7c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/build.properties",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.properties?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "build.properties",
                "patch": "@@ -24,8 +24,8 @@\n # javac.debug = on\n # javac.optimize = off\n # javac.deprecation = on\n-# javac.source = 1.3\n-# javac.target = 1.3\n+# javac.source = 1.4\n+# javac.target = 1.4\n # javac.fork = on\n \n ## JUnit task switches",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/build.properties",
                "sha": "2a8b4c80c010367e5d52a789acc4c1b01bbe526d",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/build.xml",
                "changes": 80,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 65,
                "filename": "build.xml",
                "patch": "@@ -131,10 +131,6 @@ list of possible build targets.\n     </fileset>\n   </path>\n \n-  <patternset id=\"exclude-jimi\">\n-    <exclude name=\"org/apache/fop/image/JimiImage.java\" unless=\"jimi.present\"/>\n-  </patternset>\n-\n   <patternset id=\"exclude-jai\">\n     <exclude name=\"org/apache/fop/image/JAIImage.java\" unless=\"jai.present\"/>\n     <exclude name=\"org/apache/fop/render/pcl/JAIMonochromeBitmapConverter.java\" unless=\"jai.present\"/>\n@@ -148,7 +144,7 @@ list of possible build targets.\n   <property name=\"name\" value=\"fop\"/>\n   <property name=\"NAME\" value=\"FOP\"/>\n   <property name=\"version\" value=\"svn-trunk\"/>\n-  <property name=\"year\" value=\"1999-2007\"/>\n+  <property name=\"year\" value=\"1999-2008\"/>\n \n   <property name=\"javac.debug\" value=\"on\"/>\n   <property name=\"javac.optimize\" value=\"off\"/>\n@@ -214,7 +210,7 @@ list of possible build targets.\n   <!-- =================================================================== -->\n   <!-- Initialization target                                               -->\n   <!-- =================================================================== -->\n-  <target name=\"init\" depends=\"init-avail, init-filters-jdk14, init-filters-jdk13\">\n+  <target name=\"init\" depends=\"init-avail\">\n   </target>\n \n   <target name=\"init-avail\">\n@@ -224,18 +220,6 @@ list of possible build targets.\n     <echo message=\"VM: ${java.vm.version}, ${java.vm.vendor}\"/>\n     <echo message=\"JAVA_HOME: ${env.JAVA_HOME}\"/>\n \n-    <available property=\"jimi.present\" classname=\"com.sun.jimi.core.Jimi\"\n-        classpathref=\"libs-build-classpath\"/>\n-    <condition property=\"jimi.message\" value=\"Jimi Support PRESENT\">\n-      <equals arg1=\"${jimi.present}\" arg2=\"true\"/>\n-    </condition>\n-    <condition property=\"jimi.message\" value=\"Jimi Support NOT Present\">\n-      <not>\n-        <equals arg1=\"${jimi.present}\" arg2=\"true\"/>\n-      </not>\n-    </condition>\n-    <echo message=\"${jimi.message}\"/>\n-\n     <available property=\"jai.present\" classname=\"javax.media.jai.JAI\"\n         classpathref=\"libs-build-classpath\"/>\n     <condition property=\"jai.message\" value=\"JAI Support PRESENT\">\n@@ -261,7 +245,8 @@ list of possible build targets.\n     <echo message=\"${jce.message}\"/>\n \n     <available property=\"jdk14.present\" classname=\"java.lang.CharSequence\"/>\n-\n+    <fail message=\"${Name} requires at least Java 1.4!\" unless=\"jdk14.present\"/>\n+    \n     <available property=\"junit.present\" classname=\"junit.framework.TestCase\"\n         classpathref=\"libs-build-classpath\"/>\n     <condition property=\"junit.message\" value=\"JUnit Support PRESENT\">\n@@ -292,22 +277,6 @@ list of possible build targets.\n    \n   </target>\n \n-  <target name=\"init-filters-jdk13\" depends=\"init-avail\" unless=\"jdk14.present\">\n-    <echo message=\"Use GraphicsConfiguration adapter for JDK 1.3 or earlier.\"/>\n-    <path id=\"graphics-configuration-adapter\">\n-      <pathelement location=\"src/java-1.3\"/>\n-    </path>\n-    <property name=\"src.java.version.dir\" value=\"${basedir}/src/java-1.3\"/>\n-  </target>\n-\n-  <target name=\"init-filters-jdk14\" depends=\"init-avail\" if=\"jdk14.present\">\n-    <echo message=\"Use GraphicsConfiguration adapter for JDK 1.4.\"/>\n-    <path id=\"graphics-configuration-adapter\">\n-      <pathelement location=\"src/java-1.4\"/>\n-    </path>\n-    <property name=\"src.java.version.dir\" value=\"${basedir}/src/java-1.4\"/>\n-  </target>\n-\n   <!-- =================================================================== -->\n   <!-- Help on usage                                                       -->\n   <!-- =================================================================== -->\n@@ -401,12 +370,9 @@ list of possible build targets.\n            source=\"${javac.source}\" target=\"${javac.target}\">\n       <src path=\"${build.gensrc.dir}\"/>\n       <src path=\"${src.java.dir}\"/>\n-      <src refid=\"graphics-configuration-adapter\"/>\n       <patternset includes=\"**/*.java\"/>\n-      <!--patternset includes=\"org/apache/fop/svg/GraphicsConfiguration.java\"/-->\n       <patternset refid=\"exclude-jce-dependencies\"/>\n       <patternset refid=\"exclude-jai\"/>\n-      <patternset refid=\"exclude-jimi\"/>\n       <classpath refid=\"libs-build-classpath\"/>\n     </javac>\n     <copy todir=\"${build.classes.dir}\">\n@@ -543,7 +509,6 @@ list of possible build targets.\n     <uptodate property=\"jar.sources.uptodate\" targetfile=\"${build.dir}/fop-sources.jar\">\n       <srcfiles dir=\"${build.gensrc.dir}\"/>\n       <srcfiles dir=\"${src.java.dir}\"/>\n-      <srcfiles refid=\"graphics-configuration-adapter\"/>\n     </uptodate>\n   </target>\n \n@@ -1032,7 +997,6 @@ NOTE:\n         <pathelement path=\"${src.java.dir}\"/>\n         <pathelement path=\"${src.sandbox.dir}\"/>\n         <pathelement path=\"${build.gensrc.dir}\"/>\n-        <path refid=\"graphics-configuration-adapter\"/>\n       </sourcepath>\n       <tag name=\"todo\" scope=\"all\" description=\"To do:\"/>\n       <group title=\"Control and Startup\">\n@@ -1206,37 +1170,24 @@ NOTE:\n     -->\n     <echo message=\"Make sure you have a proper Forrest installation (see http://forrest.apache.org/)\"/>\n \n-    <!--<antcall target=\"site\"/>-->\n-    \n-    <!-- You can provide a JDK 1.4 for a JDK 1.3 build by adding \"javahome.jdk14\" to build-local.properties -->\n-    <condition property=\"javahome.jdk14.override\" value=\"${javahome.jdk14}\">\n-      <isset property=\"javahome.jdk14\"/>\n-    </condition>\n-    <echo message=\"java home: ${javahome.jdk14.override}\"/>\n-    <condition property=\"javahome.jdk14.override\" value=\"${env.JAVA_HOME}\">\n-      <not>\n-        <isset property=\"javahome.jdk14.override\"/>\n-      </not>\n-    </condition>\n-    <echo message=\"java home: ${javahome.jdk14.override}\"/>\n     <condition property=\"forrest.call\" value=\"forrest.bat\" else=\"forrest\">\n       <os family=\"windows\"/>\n     </condition>\n-    <exec executable=\"${forrest.call}\">\n-      <env key=\"JAVA_HOME\" value=\"${javahome.jdk14.override}\"/>\n-    </exec>\n+    <exec executable=\"${forrest.call}\"/>\n   </target>\n   \n   <!-- =================================================================== -->\n   <!-- Creates the distribution                                            -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"dist-src,dist-bin\" description=\"Generates the distribution package\"/>\n+  <target name=\"dist\" depends=\"dist-prereq,dist-src,dist-bin\" description=\"Generates the distribution package\"/>\n \n-  <target name=\"dist-bin\" depends=\"all,javadocs,docs\">\n-    <echo message=\"Building the binary distribution files (zip,tar)\"/>\n-    <fail message=\"A complete binary build requires Jimi\" unless=\"jimi.present\"/>\n+  <target name=\"dist-prereq\" depends=\"init\">\n     <fail message=\"A complete binary build requires JAI\" unless=\"jai.present\"/>\n     <fail message=\"A complete binary build requires JCE\" unless=\"jce.present\"/>\n+  </target>\n+\n+  <target name=\"dist-bin\" depends=\"all,javadocs,docs\">\n+    <echo message=\"Building the binary distribution files (zip,tar)\"/>\n     <mkdir dir=\"${dist.bin.result.dir}\"/>\n     <copy todir=\"${dist.bin.result.dir}\">\n       <fileset refid=\"dist.bin\"/>\n@@ -1252,10 +1203,9 @@ NOTE:\n     <copy todir=\"${dist.bin.result.dir}/build\" file=\"build/fop.jar\"/>\n     <chmod file=\"${dist.bin.result.dir}/fop\" perm=\"ugo+rx\"/>\n \n-    <property name=\"bin.suffix\" value=\"bin-jdk${java.specification.version}\"/>\n-    <zip zipfile=\"${name}-${version}-${bin.suffix}.zip\" basedir=\"${dist.bin.dir}\" includes=\"**\"/>\n+    <zip zipfile=\"${name}-${version}-bin.zip\" basedir=\"${dist.bin.dir}\" includes=\"**\"/>\n     <tar longfile=\"gnu\"\n-         destfile=\"${name}-${version}-${bin.suffix}.tar\">\n+         destfile=\"${name}-${version}-bin.tar\">\n       <tarfileset dir=\"${dist.bin.dir}\" mode=\"755\">\n         <include name=\"${name}-${version}/fop\"/>\n       </tarfileset>\n@@ -1264,8 +1214,8 @@ NOTE:\n         <exclude name=\"${name}-${version}/fop\"/>\n       </tarfileset>\n     </tar>\n-    <gzip zipfile=\"${name}-${version}-${bin.suffix}.tar.gz\" src=\"${name}-${version}-${bin.suffix}.tar\"/>\n-    <delete file=\"${name}-${version}-${bin.suffix}.tar\"/>\n+    <gzip zipfile=\"${name}-${version}-bin.tar.gz\" src=\"${name}-${version}-bin.tar\"/>\n+    <delete file=\"${name}-${version}-bin.tar\"/>\n   </target>\n \n   <target name=\"dist-src\" depends=\"all\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/build.xml",
                "sha": "2169003f81342c5ae96564e3004329c8cf4f2003",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/fop.bat",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/fop.bat?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "fop.bat",
                "patch": "@@ -61,7 +61,7 @@ set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xercesImpl-2.7.1.jar\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xalan-2.7.0.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\serializer-2.7.0.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\batik-all-1.7.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xmlgraphics-commons-1.3svn.jar\r\n+set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xmlgraphics-commons-1.4svn.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\avalon-framework-4.2.0.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\commons-io-1.3.1.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\commons-logging-1.0.4.jar\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/fop.bat",
                "sha": "c2444a083b762c68a8d6417141394976fb52efce",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/forrest.properties",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/forrest.properties?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "forrest.properties",
                "patch": "@@ -56,7 +56,7 @@ project.skin=pelt\n #project.images-dir=${project.resources-dir}/images\n #project.schema-dir=${project.resources-dir}/schema\n #project.skins-dir=${project.content-dir}/skins\n-#project.skinconf=${project.content-dir}/skinconf.xml\n+project.skinconf=${project.content-dir}/skinconf.xml\n #project.lib-dir=${project.content-dir}/lib\n #project.classes-dir=${project.content-dir}/classes\n #project.translations-dir=${project.content-dir}/translations\n@@ -97,7 +97,8 @@ forrest.validate.skins.stylesheets=${forrest.validate.skins}\n # server, set to -Djava.awt.headless=true\n #forrest.jvmargs=\n # The bugtracking URL - the issue number will be appended\n-#project.bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n+project.bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n+bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n #project.bugtracking-url=http://issues.apache.org/jira/browse/\n # The issues list as rss\n #project.issues-rss-url=\n@@ -106,4 +107,4 @@ forrest.validate.skins.stylesheets=${forrest.validate.skins}\n # The names of plugins that are required to build the project\n # comma separated list (no spaces)\n # project.required.plugins=\n-project.required.plugins=org.apache.forrest.plugin.output.pdf-0.1\n+project.required.plugins=org.apache.forrest.plugin.input.projectInfo,org.apache.forrest.plugin.output.pdf",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/forrest.properties",
                "sha": "add0807831ad1e71753749494f1bbe51a751d1dd",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/forrest.properties.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/forrest.properties.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 8,
                "filename": "forrest.properties.xml",
                "patch": "@@ -1,3 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!--\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n@@ -6,18 +7,16 @@\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n \n-       http://www.apache.org/licenses/LICENSE-2.0\n+      http://www.apache.org/licenses/LICENSE-2.0\n \n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<!-- $Id$ -->\n-<HTML>\n-<TITLE>org.apache.fop.image.analyser Package</TITLE>\n-<BODY>\n-<P>Image analyzers for determining the format of an image and to preload its intrinsic size.</P>\n-</BODY>\n-</HTML>\n\\ No newline at end of file\n+<properties>\n+<!-- Project identity -->\n+  <property name=\"projectInfo.project.fullname\" value=\"Apache FOP\"/>\n+  <property name=\"projectInfo.project.url\" value=\"http://xmlgraphics.apache.org/fop/\"/>\n+</properties>",
                "previous_filename": "src/java/org/apache/fop/image/analyser/package.html",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/forrest.properties.xml",
                "sha": "d0c01bf4ad0e16e517dbfc7c7397c9bc5d29a674",
                "status": "renamed"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/lib/README.txt",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/README.txt?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "lib/README.txt",
                "patch": "@@ -142,8 +142,16 @@ Please make sure you've read the license of each package.\n     https://jai-imageio.dev.java.net/\n     BSD license\n     \n-    Note: Not the whole JAI is needed, only the ImageIO-compatible codecs\n-    packaged as \"Image I/O Tools\". The name may be misleading.\n+    Note: This is not the same as JAI! Only the ImageIO-compatible codecs\n+    are packaged as \"Image I/O Tools\". The name may be misleading.\n+\n+ - JAI (Java Advanced Imaging API) \n+\n+    http://java.sun.com/products/java-media/jai \t \n+    Java Research License and Java Distribution License (Check which one applies to you!)\n+    \n+    Currently used for:\n+    - Grayscale error diffusion dithering in the PCL Renderer\n \n - JEuclid (MathML implementation, for the MathML extension)\n \n@@ -182,4 +190,4 @@ Additional development-time dependencies\n \n     (not bundled, to be added to your Apache Ant installation)\n     http://xmlunit.sourceforge.net/\n-    BSD style license\n\\ No newline at end of file\n+    BSD style license",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/lib/README.txt",
                "sha": "db0c2cdcfac273d242a48b455046f90ffa4a300b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/lib/xmlgraphics-commons-1.4svn.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/xmlgraphics-commons-1.4svn.jar?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "lib/xmlgraphics-commons-1.4svn.jar",
                "previous_filename": "lib/xmlgraphics-commons-1.3svn.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/lib/xmlgraphics-commons-1.4svn.jar",
                "sha": "cb386bd597945af7413766ac7127532b166fa8d8",
                "status": "renamed"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/codegen/fonts/font-file.xsl",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/fonts/font-file.xsl?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/codegen/fonts/font-file.xsl",
                "patch": "@@ -40,10 +40,10 @@ import java.util.Map;\n </xsl:if>\n import java.util.Set;\n import org.apache.fop.fonts.FontType;\n-import org.apache.fop.fonts.Typeface;\n+import org.apache.fop.fonts.Base14Font;\n import org.apache.fop.fonts.CodePointMapping;\n \n-public class <xsl:value-of select=\"class-name\"/> extends Typeface {\n+public class <xsl:value-of select=\"class-name\"/> extends Base14Font {\n     private final static String fontName = \"<xsl:value-of select=\"font-name\"/>\";\n     private final static String fullName = \"<xsl:value-of select=\"full-name\"/>\";\n     private final static Set familyNames;\n@@ -84,7 +84,7 @@ public class <xsl:value-of select=\"class-name\"/> extends Typeface {\n         this.enableKerning = enableKerning;\n     }\n \n-    public String getEncoding() {\n+    public String getEncodingName() {\n         return encoding;\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/codegen/fonts/font-file.xsl",
                "sha": "21a6507b8df1463533434aab06052b4cc030d42a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/.htaccess",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/.htaccess?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/documentation/content/.htaccess",
                "patch": "@@ -18,8 +18,8 @@ RedirectMatch Permanent ^/fop/upgrading(.*) http://xmlgraphics.apache.org/fop/0.\n \n # redirect to versioned documentation\n Redirect Temp /fop/stable http://xmlgraphics.apache.org/fop/0.94\n-Redirect Temp /fop/current http://xmlgraphics.apache.org/fop/0.94\n-Redirect Temp /fop/unstable http://xmlgraphics.apache.org/fop/trunk\n+Redirect Temp /fop/current http://xmlgraphics.apache.org/fop/0.95\n+Redirect Temp /fop/unstable http://xmlgraphics.apache.org/fop/0.95\n Redirect Temp /fop/latest http://xmlgraphics.apache.org/fop/trunk\n Redirect Temp /fop/maintenance http://xmlgraphics.apache.org/fop/0.93\n Redirect Temp /fop/previous http://xmlgraphics.apache.org/fop/0.93",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/.htaccess",
                "sha": "561900fdee7fa6669da4fb0efa5c524efd42bbc7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/doap.rdf",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/doap.rdf?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/documentation/content/doap.rdf",
                "patch": "@@ -77,15 +77,15 @@\n     <release>\n       <Version>\n         <name>Previous release</name>\n-        <created>2003-07-16</created>\n-        <revision>0.20.5</revision>\n+        <created>2007-01-02</created>\n+        <revision>0.93</revision>\n       </Version>\n     </release>\n     <release>\n       <Version>\n         <name>Latest stable release</name>\n-        <created>2007-01-02</created>\n-        <revision>0.93</revision>\n+        <created>2007-08-23</created>\n+        <revision>0.94</revision>\n       </Version>\n     </release>\n     <repository>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/doap.rdf",
                "sha": "1c4253cea2485e440a42fbb463ff32f5e5bd6aa5",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/extensions.xml",
                "changes": 125,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/extensions.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 125,
                "filename": "src/documentation/content/xdocs/0.93/extensions.xml",
                "patch": "@@ -1,125 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Standard FOP Extensions</title>\n-    <version>$Revision$</version>\n-  </header>\n-  <body>\n-    <p>\n-      By \"extension\", we mean any data that can be placed in the input XML document that \n-      is not addressed by the XSL-FO standard.\n-      By having a mechanism for supporting extensions, FOP is able to add features that \n-      are not covered in the specification.\n-    </p>\n-    <p>\n-      The extensions documented here are included with FOP, and are automatically available \n-      to you. If you wish to add an extension of your own to FOP, please see the \n-      <a href=\"../dev/extensions.html\">Developers' Extension Page</a>.\n-    </p>\n-    <note>All extensions required the correct use of an appropriate namespace in your input document.</note>\n-    <section id=\"svg\">\n-      <title>SVG</title>\n-      <p>\n-        Please see the <a href=\"graphics.html#svg\">SVG documentation</a> for more details.\n-      </p>\n-    </section>\n-    <section id=\"fo-extensions\">\n-      <title>FO Extensions</title>\n-      <section id=\"fox-namespace\">\n-        <title>Namespace</title>\n-        <p>\n-          By convention, FO extensions in FOP use the \"fox\" namespace prefix.\n-          To use any of the FO extensions, add a namespace entry for \n-          <code>http://xml.apache.org/fop/extensions</code> to the root element:\n-        </p>\n-        <source><![CDATA[<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n-               xmlns:fox=\"http://xmlgraphics.apache.org/fop/extensions\">]]></source>\n-        <note>\n-          Currently, no extension elements are implemented in FOP Trunk which use the \n-          FOP extension namespace.\n-        </note>\n-      </section>\n-      <section id=\"bookmarks\">\n-        <title>PDF Bookmarks</title>\n-        <p>\n-          In previous versions of Apache FOP there was a <code>fox:outline</code> element\n-          which was used to create outlines in PDF files. The redesigned code makes use\n-          of the new <a href=\"http://www.w3.org/TR/xsl11/#fo_bookmark-tree\">bookmark feature defined in the latest XSL 1.1 working draft</a>.\n-        </p>\n-      </section>\n-      <section id=\"named-destinations\">\n-        <title>Anchors or Named Destinations</title>\n-        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n-        <!--p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n-These are useful as fragment identifiers, e.g. \"http://server/document.pdf#anchor-name\".\n-fox:destination elements can be placed almost anywhere in the fo document, including a child of\n-root, a block-level element, or an inline-level element.\n-For the destination to actually work, it must correspond to an \"id\" attribute on some fo element\n-within the document. In other words, the \"id\" attribute actually creates the \"view\" within the\n-PDF document. The fox:destination simply gives that view an independent name.\n-</p>\n-        <source><![CDATA[<fox:destination internal-destination=\"table-of-contents\"/>\n-...\n-<fo:block id=\"table-of-contents\">Table of Contents</fo:block>]]></source>\n-        <warning>It is possible that in some future release of FOP, <em>all </em>elements with\n-\"id\" attributes will generate named-destinations, which will eliminate the need for\n-fox:destination.</warning-->\n-      </section>\n-      <section id=\"table-continue-label\">\n-        <title>Table Continuation Label</title>\n-        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n-        <!--p>Use the fox:continued-label element to create content in table-header and\n-table-footer cells that will appear only on pages after the first page that the table\n-appears. fox:continued-label is itself inline content, and is a container of fo:inline\n-content. This content will be laid out only if the table does not fit on a single page and flows\n-to following pages. Here is an example of FO code creating such a table-header:</p>\n-<source><![CDATA[<fo:table-header>\n-  <fo:table-row>\n-    <fo:table-cell>\n-      <fo:block>Header column 1 with continued label\n-          <fox:continued-label><fo:inline> (cont.)</fo:inline></fox:continued-label>\n-      </fo:block>\n-    </fo:table-cell>\n-    <fo:table-cell>\n-      <fo:block>Header column 2 with no continued label</fo:block>\n-    </fo:table-cell>\n-  </fo:table-row>\n-</fo:table-header>]]></source-->\n-      </section>\n-      <section id=\"widow-orphan-content-limit\">\n-        <title>fox:orphan-content-limit and fox:widow-content-limit</title>\n-        <p>\n-          The two proprietary extension properties, fox:orphan-content-limit and\n-          fox:widow-content-limit, are used to improve the layout of list-blocks and tables.\n-          If you have a table with many entries, you don't want a single row to be left over\n-          on a page. You will want to make sure that at least two or three lines are kept\n-          together. The properties take an absolute length which specifies the area at the\n-          beginning (fox:widow-content-limit) or at the end (fox:orphan-content-limit) of a\n-          table or list-block. The properties are inherited and only have an effect on fo:table\n-          and fo:list-block. An example: fox:widow-content-limit=\"3 * 1.2em\" would make sure\n-          the you'll have at least three lines (assuming line-height=\"1.2\") together on a table\n-          or list-block.\n-        </p>\n-      </section>\n-    </section>\n-  </body>\n-</document>\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/extensions.xml",
                "sha": "0c22ca12375e656293ec65382f36b9bfcd704e9e",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/fonts.xml",
                "changes": 298,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/fonts.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 298,
                "filename": "src/documentation/content/xdocs/0.93/fonts.xml",
                "patch": "@@ -1,298 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Apache FOP: Fonts</title>\n-    <version>$Revision$</version>\n-    <authors>\n-      <person name=\"Jeremias M\u00e4rki\" email=\"\"/>\n-      <person name=\"Tore Engvig\" email=\"\"/>\n-    </authors>\n-  </header>\n-  <body>\n-    <section id=\"intro\">\n-      <title>Summary</title>\n-      <note>The FOP Font subsystem is currently undergoing a significant change.\n-        The details provided here especially related to the generation of FOP Font\n-        Metrics files and the FOP Font configuration are likely to change substantially\n-        in the future.\n-      </note>\n-      <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n-      <table>\n-        <tr>\n-          <th>Renderer</th>\n-          <th>Base-14</th>\n-          <th>AWT/OS</th>\n-          <th>Custom</th>\n-          <th>Custom Embedding</th>\n-        </tr>\n-        <tr>\n-          <td>PDF</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-        </tr>\n-        <tr>\n-          <td>PostScript</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-        </tr>\n-        <!--tr> NOT AVAILABLE YET!!!\n-          <td>PCL</td>\n-          <td>yes (modified)</td>\n-          <td>no</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr-->\n-        <tr>\n-          <td>TXT</td>\n-          <td>yes (used for layout but not for output)</td>\n-          <td>no</td>\n-          <td>yes (used for layout but not for output)</td>\n-          <td>no</td>\n-        </tr>\n-        <tr>\n-          <td>AWT</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-          <td>n/a (display only)</td>\n-        </tr>\n-        <tr>\n-          <td>Print</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-          <td>controlled by OS printer driver</td>\n-        </tr>\n-        <tr>\n-          <td>RTF</td>\n-          <td>n/a (font metrics not needed)</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-        </tr>\n-        <tr>\n-          <td>MIF</td>\n-          <td>n/a (font metrics not needed)</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-        </tr>\n-        <tr>\n-          <td>SVG</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr>\n-        <tr>\n-          <td>XML</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>n/a</td>\n-        </tr>\n-      </table>\n-    </section>\n-    <section>\n-      <title>Base-14 Fonts</title>\n-      <p>The Adobe PDF Specification specifies a set of 14 fonts that must be available to every PDF reader: Helvetica (normal, bold, italic, bold italic), Times (normal, bold, italic, bold italic), Courier (normal, bold, italic, bold italic), Symbol and ZapfDingbats.</p>\n-    </section>\n-    <section id=\"awt\">\n-      <title>AWT/Operating System Fonts</title>\n-      <p>The AWT family of renderers (AWT, Print, SVG), use the Java AWT libraries for font metric information. Through operating system registration, the AWT libraries know what fonts are available on the system, and the font metrics for each one.</p>\n-    </section>\n-    <section id=\"custom\">\n-      <title>Custom Fonts</title>\n-      <p>Support for custom fonts is added by creating font metric files (written in XML) from the actual font files, and registering them with FOP. Currently only Type 1 and TrueType fonts can be added.\n-More information about fonts can be found at:</p>\n-      <ul>\n-        <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n-        <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a>\n-</li>\n-      </ul>\n-      <section id=\"type1-metrics\">\n-        <title>Type 1 Font Metrics</title>\n-        <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n-To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n-        <p>Windows (on JDK 1.4 and later):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Windows (on JDK 1.3.x):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar;lib\\xml-apis.jar;\n-         lib\\xercesImpl.jar;lib\\xalan.jar;lib\\serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.4 and later):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.3.1):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar:lib/xml-apis.jar:\n-         lib/xercesImpl.jar:lib/xalan.jar:lib/serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>PFMReader [options]:</p>\n-        <ul>\n-          <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n-.pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n-chosen. This may be useful in some cases to ensure that applications using the output document\n-(Acrobat Reader for example) use the embedded font instead of a local font with the same\n-name.</li>\n-        </ul>\n-        <note>The classpath in the above example has been simplified for readability.\n-You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n-xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n-        <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n-FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n-The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n-The constructed values however appear to have no visible influence.</note>\n-      </section>\n-      <section id=\"truetype-metrics\">\n-        <title>TrueType Font Metrics</title>\n-        <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n-Use it in a similar manner to PFMReader.\n-For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader [options]\n-             C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n-        <p>TTFReader [options]:</p>\n-        <ul>\n-          <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n-INFO).</li>\n-          <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n-          <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n-TrueType Collection (.ttc file) you must specify which font from the collection you will read\n-metrics from.\n-If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n-          <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n-Without this option, a CID-keyed font metrics file is created.\n-The table below summarizes the differences between these two encoding options as currently\n-used within FOP.\n-Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n-        </ul>\n-        <table id=\"ttf-encoding\">\n-          <tr>\n-            <th>Issue</th>\n-            <th>WinAnsi</th>\n-            <th>CID-keyed</th>\n-          </tr>\n-          <tr>\n-            <td>Usable Character Set</td>\n-            <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n-            <td>Limited only by the characters in the font itself.</td>\n-          </tr>\n-          <tr>\n-            <td>Embedding the Font</td>\n-            <td>Optional.</td>\n-            <td>Mandatory. Not embedding the font produces invalid PDF documents.</td>\n-          </tr>\n-        </table>\n-        <warning>\n-          You may experience failures with certain TrueType fonts, especially if they don't contain \n-          the so-called Unicode \"cmap\" table. TTFReader can currently not deal with font like this.\n-        </warning>\n-      </section>\n-      <section id=\"truetype-collections-metrics\">\n-        <title>TrueType Collections Font Metrics</title>\n-        <p>TrueType collections (.ttc files) contain more than one font.\n-To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n-        <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n-It will display all of the font names and exit with an Exception.</p>\n-        <p>Here is an example of generating a metrics file for a .ttc file:</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n-             msmincho.ttc msminch.xml</source>\n-      </section>\n-      <section id=\"register\">\n-        <title>Register Fonts with FOP</title>\n-        <p>You must tell FOP how to find and use the font metrics files by registering them in the <a href=\"configuration.html\">FOP Configuration</a>. Add entries for your custom fonts, regardless of font type, to the configuration file in a manner similar to the following:</p>\n-        <source><![CDATA[<font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\"\n-      embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n-  <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n-</font>]]></source>\n-        <note>Review the documentation for <a href=\"configuration.html\">FOP Configuration</a> for instructions on making the FOP configuration available to FOP when it runs. Otherwise, FOP has no way of finding your custom font information.</note>\n-        <ul>\n-          <li>\n-            URLs are used to access the font metric and font files.\n-            Relative URLs are resolved relative to the font-base property (or base) if available.\n-            See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n-          </li>\n-          <li>The \"kerning\" and \"embed-url\" attributes are optional. Kerning is currently not used at all. If embedding is off, the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n-          <li>When setting the embed-url attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n-          <li>\n-            If relative URLs are specified, they are evaluated relative to the value of the \n-            \"font-base\" setting. If there is no \"font-base\" setting, the fonts are evaluated \n-            relative to the base directory.\n-          </li>\n-        </ul>\n-        <!--note>Cocoon users will need to setup the config, see FOPSerializer for more information.</note-->\n-      </section>\n-      <section id=\"embedding\">\n-        <title>Embedding</title>\n-        <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n-        <note>The font is simply embedded into the PDF file, it is not converted.</note>\n-        <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n-If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n-        <warning>\n-          Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n-          PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n-          the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n-        </warning>\n-        <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n-This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n-        <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n-        <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the original font, containing only the glyphs used, is embedded in the output document.\n-Currently, this embedded font contains only the minimum data needed to be embedded in a pdf document, and does not contain any codepage information.\n-The PDF document contains indexes to the glyphs in the font instead of to encoded characters.\n-While the document will be displayed correctly, the net effect of this is that searching, indexing, and cut-and-paste will not work properly.</p>\n-        <p>One workaround for this behavior is to use the \"-enc ansi\" option when generating metrics with TTFReader.\n-This will cause the whole font to be embedded in the pdf document.\n-Characters will be WinAnsi encoded (as specified in the PDF spec), so you lose the ability to use characters from other character sets.\n-See <a href=\"#ttf-encoding\">Table of TTF Encoding Options</a> for more details.</p>\n-      </section>\n-      <section id=\"embedding-base14\">\n-        <title>Explicitely embedding the base 14 fonts</title>\n-        <p>\n-          There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n-          can normally be considered available on the target platform (viewer, printer). One of these cases is\n-          PDF/A which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n-          Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n-          problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n-          the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n-          PFMReader application writes \"UnknownEncoding\" to the generated XML file. In order to embed \"Symbol\"\n-          and \"ZapfDingbats\" you have to manually change the XML font metrics file and specify \"SymbolEncoding\"\n-          or \"ZapfdingbatsEncoding\" encoding respectively as the value for the \"encoding\" element.\n-        </p>\n-        <p>Example:</p>\n-        <source><![CDATA[\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<font-metrics type=\"TYPE1\">\n-  <font-name>Symbol</font-name>\n-  <embed/>\n-  <encoding>SymbolEncoding</encoding>\n-  <cap-height>673</cap-height>\n-  <x-height>766</x-height>\n-  [..]]]></source>\n-      </section>\n-    </section>\n-  </body>\n-</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/fonts.xml",
                "sha": "53d4bd97fe2894ae700fca64d3e49825741039b0",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/graphics.xml",
                "changes": 338,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/graphics.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 338,
                "filename": "src/documentation/content/xdocs/0.93/graphics.xml",
                "patch": "@@ -1,338 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Apache FOP: Graphics Formats</title>\n-    <version>$Revision$</version>\n-  </header>\n-  <body>\n-    <section id=\"support-overview\">\n-      <title>Overview of Graphics Support</title>\n-      <p>\n-        The table below summarizes the <em>theoretical</em> support for graphical formats within FOP. In other words, within the constraints of the limitations listed here, these formats <em>should</em> work. However, many of them have not been tested, and there may be limitations that have not yet been discovered or documented. The packages needed to support some formats are not included in the FOP distribution and must be installed separately. Follow the links in the \"Support Thru\" column for more details.\n-      </p>\n-      <table>\n-        <tr>\n-          <th>Format</th>\n-          <th>Type</th>\n-          <th><a href=\"#native\">FOP native support</a></th>\n-          <th><a href=\"#batik\">Batik SVG</a></th>\n-          <th><a href=\"#batik-codecs\">Batik codecs</a></th>\n-          <th><a href=\"#imageio\">Image I/O</a></th>\n-          <th><a href=\"#jai\">JAI</a></th>\n-          <th><a href=\"#jimi\">JIMI</a></th>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n-          <td>bitmap</td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n-          <td>metafile (both bitmap and vector), probably most frequently used for vector drawings</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td>GIF (Graphics Interchange Format)</td>\n-          <td>bitmap</td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td>X</td>\n-          <td>X</td>\n-          <td>X</td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n-          <td>bitmap</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n-          <td>bitmap</td>\n-          <td></td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n-          <td>vector (with embedded bitmaps)</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n-          <td>bitmap</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <!--td><a href=\"#native\">FOP native</a> or <a href=\"#jai\">JAI</a>, depending on the subformat. See <a href=\"#tiff\">TIFF</a> for more details.(JIMI also supports TIFF, but this has not been implemented within FOP).</td-->\n-        </tr>\n-      </table>\n-      <note>\"(X)\" means restricted support. Please see the details below.</note>\n-    </section>\n-    <section id=\"packages\">\n-      <title>Graphics Packages</title>\n-      <section id=\"native\">\n-        <title>FOP Native</title>\n-        <p>\n-          FOP has native ability to handle some graphic file formats.\n-        </p>\n-      </section>\n-      <section id=\"batik-codecs\">\n-        <title>Batik codecs</title>\n-        <p>\n-          Apache Batik contains codecs for PNG and TIFF access. FOP can use these.\n-        </p>\n-      </section>\n-      <section id=\"imageio\">\n-        <title>Image I/O (JDK 1.4 or higher)</title>\n-        <p>\n-          For JDKs 1.4 or higher, FOP provides a wrapper to load images through the \n-          <a class=\"fork\" href=\"http://java.sun.com/j2se/1.4.2/docs/guide/imageio/index.html\">JDK's Image I/O API</a> (JSR 015).\n-          Image I/O allows to dynamically add additional image codecs. An example of such an add-on library are the\n-          <a class=\"fork\" href=\"http://java.sun.com/products/java-media/jai/\">JAI Image I/O Tools</a> available from Sun.\n-        </p>\n-      </section>\n-      <section id=\"jimi\">\n-        <title>JIMI</title>\n-        <p>\n-          Because of licensing issues, the JIMI image library is not included in the FOP distribution. First, <a class=\"fork\" href=\"http://java.sun.com/products/jimi\">download</a> and install it.\n-Then, copy the file \"JimiProClasses.zip\" from the archive to {fop-install-dir}/lib/jimi-1.0.jar. Please note that FOP binary distributions are compiled with JIMI support, so there is no need for you to build FOP to add the support. If jimi-1.0.jar is installed in the right place, it will automatically be used by FOP, otherwise it will not.\n-        </p>\n-      </section>\n-      <section id=\"jai\">\n-        <title>JAI (Java Advanced Imaging API)</title>\n-        <warning>JAI support is available for Release 0.20.5 and later. The comments in this section do not apply to releases earlier than 0.20.5.</warning>\n-        <p>\n-          FOP has been compiled with JAI support, but JAI is not included in the FOP distribution.\n-To use it, install <a href=\"http://java.sun.com/products/java-media/jai\">JAI</a>, then copy the jai_core.jar and the jai_codec.jar files to {fop-install-dir}/lib.\n-JAI is much faster than JIMI, but is not available for all platforms. See <a href=\"http://java.sun.com/products/java-media/jai/forDevelopers/jaifaq.html#platforms\">What platforms are supported?</a> on the JAI FAQ page for more details.\n-        </p>\n-      </section>\n-      <section id=\"batik\">\n-        <title>Batik</title>\n-        <p>Current FOP distributions include a distribution of the Apache <a class=\"fork\" href=\"ext:batik\">Batik</a> version 1.6.\n-It is automatically installed with FOP.\n-Because Batik's API changes frequently, it is highly recommended that you use the version that ships with FOP, at least when running FOP.</p>\n-        <warning>Batik must be run in a graphical environment.</warning>\n-        <p>Batik must be run in a graphical environment.\n-It uses AWT classes for rendering SVG, which in turn require an X server on Unixish systems.\n-If you run a server without X, or if you can't connect to the X server due to security restrictions or policies (a so-called \"headless\" environment), SVG rendering will fail.</p>\n-        <p>Here are some workarounds:</p>\n-        <ul>\n-          <li>If you are using JDK 1.4, start it with the <code>-Djava.awt.headless=true</code> command line option.</li>\n-          <li>Install an X server which provides an in-memory framebuffer without actually using a screen device or any display hardware. One example is Xvfb.</li>\n-          <li>Install a toolkit which emulates AWT without the need for an underlying X server. One example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free and comes with detailed installation instructions.</li>\n-        </ul>\n-      </section>\n-    </section>\n-    <section id=\"bmp\">\n-      <title>BMP</title>\n-      <p>FOP native support for BMP images is limited to the RGB color-space.</p>\n-    </section>\n-    <section id=\"eps\">\n-      <title>EPS</title>\n-      <p>FOP provides support for two output targets:</p>\n-      <ul>\n-        <li>PostScript (full support).</li>\n-        <li>\n-          PDF (partial support). Due to the lack of a built-in PostScript interpreter, FOP \n-          can only embed the EPS file into the PDF. Acrobat Reader will not currently display \n-          the EPS (it doesn't have a PostScript interpreter, either) but it will be shown \n-          correctly when you print the PDF on a PostScript-capable printer. PostScript devices \n-          (including GhostScript) will render the EPS correctly.\n-        </li>\n-      </ul>\n-      <p>\n-        Other output targets can't be supported at the moment because\n-        FOP lacks a PostScript interpreter. Furthermore, FOP is not able\n-        to parse the preview bitmaps sometimes contained in EPS files.\n-      </p>\n-    </section>\n-    <section id=\"jpeg\">\n-      <title>JPEG</title>\n-      <p>FOP native support of JPEG does not include all variants, especially those containing unusual color lookup tables and color profiles.\n-If you have trouble with a JPEG image in FOP, try opening it with an image processing program (such as Photoshop or Gimp) and then saving it.\n-Specifying 24-bit color output may also help.\n-For the PDF and PostScript renderers most JPEG images can be passed through without decompression.\n-User reports indicate that grayscale, RGB, and CMYK color-spaces are all rendered properly.\n-      </p>\n-    </section>\n-    <section id=\"png\">\n-      <title>PNG</title>\n-      <p>If using JAI for PNG support, only RGB and RGBA color-spaces are supported for FOP rendering.</p>\n-    </section>\n-    <section id=\"svg\">\n-      <title>SVG</title>\n-      <section id=\"svg-intro\">\n-        <title>Introduction</title>\n-        <p>FOP uses <a href=\"#batik\">Batik</a> for SVG support.\n-This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n-file referenced with <code>fo:external-graphic</code>.</p>\n-      <note>   \n-Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n-documents into PDF.  For more information please see the\n-<a href=\"http://xml.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n-on the Batik site.\n-      </note>\n-      </section>\n-      <section id=\"svg-pdf-graphics\">\n-        <title>Placing SVG Graphics into PDF</title>\n-        <p>\n-The SVG is rendered into PDF by using PDF commands to draw and fill\n-lines and curves. This means that the graphical objects created with\n-this remain as vector graphics.\n-        </p>\n-        <p>\n-There are a number of SVG things that cannot be converted directly into\n-PDF. Parts of the graphic such as effects, patterns and images are inserted\n-into the PDF as a raster graphic. The resolution of this graphic may not\n-be ideal depending on the FOP dpi (72dpi) and the scaling for that graphic.\n-We hope to improve this in the future.</p>\n-        <p>\n-Currently transparency is not supported in PDF so many svg images that\n-contain effects or graphics with transparent areas will not be displayed\n-correctly.\n-        </p>\n-      </section>\n-      <section id=\"svg-pdf-text\">\n-        <title>Placing SVG Text into PDF</title>\n-        <p>If possible, Batik will use normal PDF text when inserting text. It does\n-this by checking if the text can be drawn normally and the font is\n-supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n-<!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n-shows how various types and effects with text are handled.\n-Note that tspan and outlined text are not yet implemented.</p>\n-        <p>\n-Otherwise, text is converted and drawn as a set of shapes by batik, using the stroking text painter.\n-This means that a typical character will\n-have about 10 curves (each curve consists of at least 20 characters).\n-This can make the pdf files large and when the pdf is viewed the\n-viewer does not normally draw those fine curves very well (turning on\n-Smooth Line Art in the Acrobat preferences will fix this).\n-If the text is inserted into the PDF using the inbuilt text commands\n-for PDF it will use a single character.\n-        </p>\n-        <p>Note that because SVG text can be rendered as either text or a vector graphic, you may need to consider settings in your viewer for both.\n-The Acrobat viewer has both \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images to be displayed nicely on your screen (see Edit / Preferences / Display).\n-This setting will not affect the printing of your document, which should be OK in any case, but will only affect the quality of the screen display.</p>\n-      </section>\n-      <section id=\"svg-scaling\">\n-        <title>Scaling</title>\n-        <p>Currently, SVG images are rendered with the dimensions specified <em>in the SVG file</em>, within the viewport specified in the fo:external-graphic element.\n-For everything to work properly, the two should be equal.\n-The SVG standard leaves this issue as an implementation detail.\n-FOP will probably implement a scaling mechanism in the future.</p>\n-      </section>\n-      <section id=\"svg-problems\">\n-        <title>Known Problems</title>\n-        <ul>\n-          <li>\n-soft mask transparency is combined with white so that it looks better\n-on pdf 1.3 viewers but this causes the soft mask to be slightly lighter\n-or darker on pdf 1.4 viewers\n-          </li>\n-          <li>\n-there is some problem with a gradient inside a pattern causing a pdf\n-error when viewed in acrobat 5\n-          </li>\n-          <li>\n-text is not always handled correctly, it may select the wrong font\n-especially if characters have multiple fonts in the font list\n-          </li>\n-          <li>\n-more pdf text handling could be implemented\n-It could draw the string using the attributed character iterator\n-to handle tspans and other simple changes of text.\n-          </li>\n-          <li>\n-JPEG images are not inserted directly into the pdf document\n-This area has not been implemented yet since the appropriate\n-method in batik is static\n-          </li>\n-          <li>\n-Uniform transparency for images and other svg elements that are converted\n-into a raster graphic are not drawn properly in PDF. The image is opaque.\n-          </li>\n-        </ul>\n-      </section>\n-    </section>\n-    <section id=\"tiff\">\n-      <title>TIFF</title>\n-      <p>FOP-native TIFF support is limited to PDF and PostScript output only. Also, according to user reports, FOP's native support for TIFF is limited to images with the following characteristics (all must be true for successful rendering):</p>\n-      <ul>\n-        <li>single channel images (i.e., bi-level and grayscale only)</li>\n-        <li>uncompressed images, or images using CCITT T.4, CCITT T.6, or JPEG compression</li>\n-        <li>images using white-is-zero encoding in the TIFF PhotometricInterpretation tag</li>\n-      </ul>\n-      <p><em>JAI:</em> Supports RGB and RGBA only for FOP rendering.</p>\n-    </section>\n-    <section id=\"resolution\">\n-      <title>Graphics Resolution</title>\n-      <p>Some bitmapped image file formats store a dots-per-inch (dpi) or other resolution value. Since PDF and most output formats do not have a concept of resolution, but only of absolute image units (i.e. pixels) FOP ignores the resolution values as well. Instead, FOP uses the dimensions of the image as specified in the fo:external-graphic element to render the image:</p>\n-      <ul>\n-        <li>If no dimensions are given, FOP uses a default value of 72 dpi to compute the graphic's dimensions. For example, suppose a graphic 300 pixels wide and 400 pixels high. FOP will render the graphic at 4.167 inches wide, 5.555 inches high, with an apparent resolution of 72 dpi.</li>\n-        <li>If only one dimension is given, FOP by default uses the same aspect ratio to compute the other dimension (to avoid the appearance of stretching). For example, suppose a graphic 300 pixels wide and 400 pixels high, for which content-width = \".5in\". FOP will compute the content-height = .667 inches, and will render the graphic at that size, with an apparent resolution of 600 dpi.</li>\n-        <li>If both dimensions are given, FOP simply renders the image in that space. For example, suppose a graphic 300 pixels wide and 400 pixels high, for which content-width = \"3in\" and content-height = \"4in\". FOP will render the graphic at that size, with an apparent resolution of 100 dpi.</li>\n-      </ul>\n-      <p>If you need a higher apparent output resolution for bitmapped images, first make sure that at least one dimension of the image is defined in your XSL-FO input. Apart from that, resolution problems are in the image file itself, and must be corrected there: use or create a higher-resolution image file.</p>\n-      <note>The explanation above describes only the basic default behavior. There are other attributes of the fo:external-graphic element that can affect the behavior described above.</note>\n-    </section>\n-    <section id=\"caching\">\n-      <title>Image caching</title>\n-      <p>\n-        FOP caches images between runs. The URL is used as a key to identify images which means that when\n-        a particular URL appears again, the image is taken from the cache. If you have a servlet that\n-        generates a different image each time it is called with the same URL you need to use a constantly \n-        changing dummy parameter on the URL to avoid caching.\n-      </p>\n-      <p>\n-        The image cache has been improved considerably in the redesigned code. Therefore, a resetCache() method\n-        has become unnecessary. If you still experience OutOfMemoryErrors, please notify us.\n-      </p>\n-    </section>\n-  </body>\n-</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/content/xdocs/0.93/graphics.xml",
                "sha": "beb86022362d4cd0b6c64e5edaa686ed1c8ff93c",
                "status": "removed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.94/index.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.94/index.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.94/index.xml",
                "patch": "@@ -32,7 +32,7 @@\n       </p>\n       <p>\n         This fifth release contains many bug fix release and new features compared\n-        to 0.92beta. To see what has changed since the last release, please visit the \n+        to 0.93. To see what has changed since the last release, please visit the \n         <a href=\"changes_0.94.html\">Changes Page</a> and the <a href=\"releaseNotes_0.94.html\">Release Notes</a>.\n       </p>\n     </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.94/index.xml",
                "sha": "9bf46ccf5c4a71a11e77e52ca336c293095ee0ba",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/anttask.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/anttask.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/anttask.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/anttask.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/anttask.xml",
                "sha": "44550c3d7e9d4d1dc3769ff181c1766c63135234",
                "status": "renamed"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/compiling.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/compiling.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/0.95/compiling.xml",
                "patch": "@@ -41,7 +41,7 @@\n       <section id=\"env-jdk\">\n         <title>JDK</title>\n         <p>\n-          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.3\n+          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.4\n           (A Java Runtime Environment is not sufficient).\n         </p>\n       </section>\n@@ -59,7 +59,7 @@\n         <p>\n           The build script uses <a href=\"ext:ant\">Apache Ant</a>, a popular \n           Java-based build tool, which usually requires that the environment variable JAVA_HOME point to \n-          your local JDK root directory. This is true even if you use JDK 1.2 or above, which normally \n+          your local JDK root directory. This is true even if you use JDK 1.4 or above, which normally \n           does not need this setting.\n         </p>\n       </section>\n@@ -103,7 +103,8 @@\n           needed, but may be helpful if you are having problems with the build process itself.\n         </li>\n         <li>\n-          <strong>javadocs</strong>: Generates javadocs. This creates the FOP API documentation.\n+          <strong>javadocs</strong>: Creates the FOP API documentation.\n+          <note>A minimum JDK version of 1.4.2 is required for generating the javadocs.</note>\n         </li>\n       </ul>\n       <p>To run the build:</p>",
                "previous_filename": "src/documentation/content/xdocs/0.93/compiling.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/compiling.xml",
                "sha": "57761429f6e42ce5642968013acf3f88accc1054",
                "status": "renamed"
            },
            {
                "additions": 72,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/configuration.xml",
                "changes": 85,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/configuration.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 13,
                "filename": "src/documentation/content/xdocs/0.95/configuration.xml",
                "patch": "@@ -64,19 +64,21 @@\n       <tr>\n         <th>Element</th>\n         <th>Data Type (for the value)</th>\n+        <th>Description</th>\n         <th>Default Value</th>\n       </tr>\n       <tr>\n         <td>base</td>\n         <td>URL or directory</td>\n         <td>Specifies the base URL based on which relative URL will be resolved.</td>\n+        <td>current directory</td>\n       </tr>\n       <tr>\n         <td>font-base</td>\n         <td>URL or directory</td>\n         <td>Specifies the base URL based on which relative font URLs will be resolved.\n-        If not specified defaults to the base URL above.\n         </td>\n+        <td>base URL/directory (above)</td>\n       </tr>\n       <tr>\n         <td>hyphenation-base</td>\n@@ -85,6 +87,7 @@\n         files will be resolved. If not specified, support for user-supplied hyphenation \n         patterns remains disabled.\n         </td>\n+        <td>disabled</td>\n       </tr>\n       <tr>\n         <td>source-resolution</td>\n@@ -93,6 +96,7 @@\n           Resolution in dpi (dots per inch) which is used internally to determine the pixel \n           size for SVG images and bitmap images without resolution information.\n         </td>\n+        <td>72 dpi</td>\n       </tr>\n       <tr>\n         <td>target-resolution</td>\n@@ -102,6 +106,17 @@\n           images generated by bitmap renderers (such as the TIFF renderer) and by bitmaps\n           generated by Apache Batik for filter effects and such.\n         </td>\n+        <td>72 dpi</td>\n+      </tr>\n+      <tr>\n+        <td>strict-configuration</td>\n+        <td>Boolean (true, false)</td>\n+        <td>\n+          Setting this option to 'true' will cause FOP to strictly verify the contents of the\n+          FOP configuration file to ensure that defined resources (such as fonts and base\n+          URLs/directories) are valid and available to FOP.  Any errors found will cause FOP to\n+          immediately raise an exception.</td>\n+        <td>false</td>\n       </tr>\n       <tr>\n         <td>strict-validation</td>\n@@ -111,6 +126,7 @@\n           for example, you're allowed to specify a border on a region-body which is supported \n           by some FO implementations but is non-standard. Note that such a border would \n           currently have no effect in Apache FOP.</td>\n+        <td>true</td>\n       </tr>\n       <tr>\n         <td>break-indent-inheritance</td>\n@@ -124,6 +140,7 @@\n           the desired behaviour and because the behaviour among the commercial implementations\n           varies. The default for this option (i.e. false) is to behave exactly like the \n           specification describes.</td>\n+        <td>false</td>\n       </tr>\n       <tr>\n         <td>default-page-settings</td>\n@@ -132,11 +149,31 @@\n           Specifies the default width and height of a page if \"auto\" is specified \n           for either or both values. Use \"height\" and \"width\" attributes on the \n           default-page-settings element to specify the two values.</td>\n+        <td>\"height\" 11 inches, \"width\" 8.26 inches</td>\n+      </tr>\n+      <tr>\n+        <td>use-cache</td>\n+        <td>boolean (true, false)</td>\n+        <td>All fonts information that has been gathered as a result of \"directory\"\n+        or \"auto-detect\" font configurations will be cached for future rendering runs.\n+        This setting should improve performance on systems where\n+        fonts have been configured using the \"directory\" or \"auto-detect\" tag mechanisms.\n+        By default this option is switched on.</td>\n+        <td>true</td>\n+      </tr>\n+      <tr>\n+        <td>cache-file</td>\n+        <td>String</td>\n+        <td>This options specifies the file/directory path of the fop cache file.\n+        This option can also be specified on the command-line using the -cache option.\n+        This file is currently only used to cache font triplet information for future reference.</td>\n+        <td>${base}/conf/fop.cache</td>\n       </tr>\n       <tr>\n         <td>renderers</td>\n         <td>(see text below)</td>\n         <td>Contains the configuration for each renderer. See below.</td>\n+        <td>N/A</td>\n       </tr>\n     </table>\n     <p>\n@@ -145,6 +182,12 @@\n     <source><![CDATA[\n <fop version=\"1.0\">\n \n+  <!-- Strict user configuration -->\n+  <strict-configuration>true</strict-configuration>\n+\n+  <!-- Strict FO validation -->\n+  <strict-validation>true</strict-validation>\n+\n   <!-- Base URL for resolving relative URLs -->\n   <base>./</base>\n \n@@ -234,7 +277,23 @@\n       <output-profile>C:\\FOP\\Color\\EuropeISOCoatedFOGRA27.icc</output-profile>\n       \n       <fonts....\n-    </renderer>]]></source>\n+      </renderer>]]></source>\n+      <p>\n+        Some people don't have high requirements on color fidelity but instead want the smallest\n+        PDF file sizes possible. In this case it's possible to disable the default sRGB color space\n+        which XSL-FO requires. This will cause RGB colors to be generated as device-specific RGB.\n+        Please note that this option is unavailable (and will cause an error) if you enable\n+        PDF/A or PDF/X functionality or if you specify an output profile. This setting will make the\n+        PDF about 4KB smaller. To disable the sRGB color space add the following setting:\n+      </p>\n+      <source><![CDATA[\n+    <renderer mime=\"application/pdf\">\n+      <filterList...\n+      \n+      <disable-srgb-colorspace>true</disable-srgb-colorspace>\n+      \n+      <fonts....\n+      </renderer>]]></source>\n     </section>\n     <section id=\"ps-renderer\">\n       <title>Special Settings for the PostScript Renderer</title>\n@@ -268,7 +327,7 @@\n         offered by Java.\n       </p>\n       <p>\n-        Additionally, there are certain settings that control who the renderer handles various elements.\n+        Additionally, there are certain settings that control how the renderer handles various elements.\n       </p>\n <source><![CDATA[<renderer mime=\"application/vnd.hp-PCL\">\n   <rendering>quality</rendering>\n@@ -290,25 +349,25 @@\n     </section>\n   </section>\n \n-  <section>\n-    <title>When it does not work</title>\n+        <section>\n+          <title>When it does not work</title>\n \n-    <p>FOP searches the configuration file for the information it\n+          <p>FOP searches the configuration file for the information it\n expects, at the position it expects. When that information is not\n present, FOP will not complain, it will just continue. When there is\n other information in the file, FOP will not complain, it will just\n ignore it. That means that when your configuration information is in\n the file but in a different XML element, or in a different XML path,\n than FOP expects, it will be silently ignored.</p>\n \n-    <p>Check the following possibilities:</p>\n+          <p>Check the following possibilities:</p>\n \n-    <ul>\n-    <li>The format of the configuration file has changed\n+          <ul>\n+            <li>The format of the configuration file has changed\n considerably between FOP 0.20.5 and FOP 1.0 and its beta versions. Did\n you convert your file to the new format?</li>\n \n-    <li>The FOP distribution contains a schema for configuration\n+            <li>The FOP distribution contains a schema for configuration\n files, at src/foschema/fop-configuration.xsd. Did you validate your\n configuration file against it? Add the following schema location to\n the <code>schema</code> element:\n@@ -323,13 +382,13 @@ and run the configuration file through a validating schema\n parser. Note that the schema cannot detect all errors, and that it is\n stricter about the order of some elements than FOP itself is.</li>\n \n-    <li>Run FOP in debug mode (command line option\n+            <li>Run FOP in debug mode (command line option\n <code>-d</code>). This makes FOP report which configuration\n information it finds. Check if FOP finds what you expect.</li>\n \n-    </ul>\n+          </ul>\n \n-  </section>\n+        </section>\n   </body>\n </document>\n ",
                "previous_filename": "src/documentation/content/xdocs/0.93/configuration.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/configuration.xml",
                "sha": "e82a6e862c9557b9630c87083c8bcca54271a307",
                "status": "renamed"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/embedding.xml",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/embedding.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/0.95/embedding.xml",
                "patch": "@@ -166,7 +166,7 @@ try {\n       <title>Logging</title>\n       <p>\n         Logging is now a little different than it was in FOP 0.20.5. We've switched from\n-        Avalon Logging to <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a>.\n+        Avalon Logging to <a href=\"ext:commons-logging\">Jakarta Commons Logging</a>.\n         While with Avalon Logging the loggers were directly given to FOP, FOP now retrieves\n         its logger(s) through a statically available LogFactory. This is similar to the\n         general pattern that you use when you work with Apache Log4J directly, for example.\n@@ -187,10 +187,10 @@ try {\n         which documents what we're going to build.\n       </note>\n       <p>\n-        By default, <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a> uses\n+        By default, <a href=\"ext:commons-logging\">Jakarta Commons Logging</a> uses\n         JDK logging (available in JDKs 1.4 or higher) as its backend. You can configure Commons\n         Logging to use an alternative backend, for example Log4J. Please consult the\n-        <a href=\"ext:jakarta/commons/logging\">documentation for Jakarta Commons Logging</a> on\n+        <a href=\"ext:commons-logging\">documentation for Jakarta Commons Logging</a> on\n         how to configure alternative backends.\n       </p>\n     </section>\n@@ -291,6 +291,13 @@ try {\n           </p>\n           <source>fopFactory.setFontBaseURL(\"file:///C:/Temp/fonts\");</source>\n         </li>\n+        <li>\n+          <p>\n+            The <strong>hyphenation base URL</strong> to use when resolving relative URLs for \n+            hyphenation patterns. Example:\n+          </p>\n+          <source>fopFactory.setHyphenBaseURL(\"file:///C:/Temp/hyph\");</source>\n+        </li>\n         <li>\n           <p>\n             Disable <strong>strict validation</strong>. When disabled FOP is less strict about the rules ",
                "previous_filename": "src/documentation/content/xdocs/0.93/embedding.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/embedding.xml",
                "sha": "b2c802db7c88941a8f1e3bd4891f4d7b8ae11be3",
                "status": "renamed"
            },
            {
                "additions": 234,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/extensions.xml",
                "changes": 234,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/extensions.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/extensions.xml",
                "patch": "@@ -0,0 +1,234 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Standard FOP Extensions</title>\n+    <version>$Revision$</version>\n+  </header>\n+  <body>\n+    <p>\n+      By \"extension\", we mean any data that can be placed in the input XML document that \n+      is not addressed by the XSL-FO standard.\n+      By having a mechanism for supporting extensions, FOP is able to add features that \n+      are not covered in the specification.\n+    </p>\n+    <p>\n+      The extensions documented here are included with FOP, and are automatically available \n+      to you. If you wish to add an extension of your own to FOP, please see the \n+      <a href=\"../dev/extensions.html\">Developers' Extension Page</a>.\n+    </p>\n+    <note>All extensions require the correct use of an appropriate namespace in your input document.</note>\n+    <section id=\"svg\">\n+      <title>SVG</title>\n+      <p>\n+        Please see the <a href=\"graphics.html#svg\">SVG documentation</a> for more details.\n+      </p>\n+    </section>\n+    <section id=\"fo-extensions\">\n+      <title>FO Extensions</title>\n+      <section id=\"fox-namespace\">\n+        <title>Namespace</title>\n+        <p>\n+          By convention, FO extensions in FOP use the \"fox\" namespace prefix.\n+          To use any of the FO extensions, add a namespace entry for \n+          <code>http://xml.apache.org/fop/extensions</code> to the root element:\n+        </p>\n+        <source><![CDATA[<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+               xmlns:fox=\"http://xmlgraphics.apache.org/fop/extensions\">]]></source>\n+      </section>\n+      <section id=\"bookmarks\">\n+        <title>PDF Bookmarks</title>\n+        <p>\n+          In previous versions of Apache FOP there was a <code>fox:outline</code> element\n+          which was used to create outlines in PDF files. The redesigned code makes use\n+          of the new <a href=\"http://www.w3.org/TR/xsl11/#fo_bookmark-tree\">bookmark feature defined in the latest XSL 1.1 working draft</a>.\n+        </p>\n+      </section>\n+      <section id=\"named-destinations\">\n+        <title>Anchors or Named Destinations</title>\n+        <p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n+These are useful as fragment identifiers, e.g. \"http://server/document.pdf#anchor-name\".\n+fox:destination elements can be placed almost anywhere in the fo document, including a child of\n+root, a block-level element, or an inline-level element.\n+For the destination to actually work, it must correspond to an \"id\" attribute on some fo element\n+within the document. In other words, the \"id\" attribute actually creates the \"view\" within the\n+PDF document. The fox:destination simply gives that view an independent name.\n+</p>\n+        <source><![CDATA[<fox:destination internal-destination=\"table-of-contents\"/>\n+...\n+<fo:block id=\"table-of-contents\">Table of Contents</fo:block>]]></source>\n+        <warning>It is possible that in some future release of FOP, <em>all </em>elements with\n+\"id\" attributes will generate named-destinations, which will eliminate the need for\n+fox:destination.</warning>\n+      </section>\n+      <section id=\"table-continue-label\">\n+        <title>Table Continuation Label</title>\n+        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n+        <!--p>Use the fox:continued-label element to create content in table-header and\n+table-footer cells that will appear only on pages after the first page that the table\n+appears. fox:continued-label is itself inline content, and is a container of fo:inline\n+content. This content will be laid out only if the table does not fit on a single page and flows\n+to following pages. Here is an example of FO code creating such a table-header:</p>\n+<source><![CDATA[<fo:table-header>\n+  <fo:table-row>\n+    <fo:table-cell>\n+      <fo:block>Header column 1 with continued label\n+          <fox:continued-label><fo:inline> (cont.)</fo:inline></fox:continued-label>\n+      </fo:block>\n+    </fo:table-cell>\n+    <fo:table-cell>\n+      <fo:block>Header column 2 with no continued label</fo:block>\n+    </fo:table-cell>\n+  </fo:table-row>\n+</fo:table-header>]]></source-->\n+      </section>\n+      <section id=\"widow-orphan-content-limit\">\n+        <title>fox:orphan-content-limit and fox:widow-content-limit</title>\n+        <p>\n+          The two proprietary extension properties, fox:orphan-content-limit and\n+          fox:widow-content-limit, are used to improve the layout of list-blocks and tables.\n+          If you have a table with many entries, you don't want a single row to be left over\n+          on a page. You will want to make sure that at least two or three lines are kept\n+          together. The properties take an absolute length which specifies the area at the\n+          beginning (fox:widow-content-limit) or at the end (fox:orphan-content-limit) of a\n+          table or list-block. The properties are inherited and only have an effect on fo:table\n+          and fo:list-block. An example: fox:widow-content-limit=\"3 * 1.2em\" would make sure\n+          the you'll have at least three lines (assuming line-height=\"1.2\") together on a table\n+          or list-block.\n+        </p>\n+      </section>\n+      <section id=\"external-document\">\n+        <title>fox:external-document</title>\n+        <note>\n+          This feature is incomplete. Support for multi-page documents will be added shortly.\n+          At the moment, only single-page images will work. And this will not work with RTF output.\n+        </note>\n+        <p>\n+          This is a proprietary extension element which allows to add whole images as pages to\n+          an FO document. For example, if you have a scanned document or a fax as multi-page TIFF\n+          file, you can append or insert this document using the <code>fox:external-document</code>\n+          element. Each page of the external document will create one full page in the target\n+          format.\n+        </p>\n+        <p>\n+          The <code>fox:external-document</code> element is structurally a peer to\n+          <code>fo:page-sequence</code>, so wherever you can put an <code>fo:page-sequence</code>\n+          you could also place a <code>fox:external-document</code>.\n+          Therefore, the specified contents for <code>fo:root</code> change to: \n+        </p>\n+        <p>\n+          <code>\n+            (layout-master-set, declarations?, bookmark-tree?, (page-sequence|page-sequence-wrapper|fox:external-document|fox:destination)+)\n+          </code>\n+        </p>\n+        <section>\n+          <title>Specification</title>\n+          <p>\n+            The <code>fox:external-document</code> extension formatting object is used to specify\n+            how to create a (sub-)sequence of pages within a document. The content of these pages\n+            comes from the individual subimages/pages of an image or paged document (for example:\n+            multi-page TIFF in the form of faxes or scanned documents, or PDF files). The\n+            formatting object creates the necessary areas to display one image per page.\n+          </p>\n+          <p>\n+            In terms of page numbers, the behaviour is the same as for\n+            <code>fo:page-sequence</code>. The placement of the image inside the page is similar\n+            to that of <code>fo:external-graphic</code> or <code>fo:instream-foreign-object</code>,\n+            i.e. the viewport (and therefore the page size) is defined by either the intrinsic\n+            size of the image or by the size properties that apply to this formatting object.\n+          </p>\n+          <p>Content: EMPTY</p>\n+          <p>The following properties apply to this formatting object:</p>\n+          <ul>\n+            <li>(Common Accessibility Properties) (not implemented, yet)</li>\n+            <li>(Common Aural Properties) (not implemented, yet)</li>\n+            <li>block-progression-dimension</li>\n+            <li>content-height</li>\n+            <li>content-type</li>\n+            <li>content-width</li>\n+            <li>display-align</li>\n+            <li>height</li>\n+            <li>id</li>\n+            <li>inline-progression-dimension</li>\n+            <li>overflow</li>\n+            <li>pages: &lt;page-set&gt; (see below) (not implemented, yet)</li>\n+            <li>reference-orientation</li>\n+            <li>scaling</li>\n+            <li>scaling-method</li>\n+            <li>src</li>\n+            <li>text-align</li>\n+            <li>width</li>\n+          </ul>\n+          <p>\n+            Datatype \"page-set\": Value: auto | &lt;integer-range&gt;,\n+            Default: \"auto\" which means all pages/subimages of the document.\n+            &lt;integer-range&gt; allows values such as \"7\" or \"1-3\"\n+          </p>\n+          <note>\n+            <code>fox:external-document</code> is not suitable for concatenating FO documents.\n+            For this, XInclude is recommended.\n+          </note>\n+        </section>\n+      </section>\n+      <section id=\"transform\">\n+        <title>Free-form Transformation for fo:block-container</title>\n+        <p>\n+          For <code>fo:block-container</code> elements whose <code>absolute-position</code> set to\n+          \"absolute\" or \"fixed\" you can use the extension attribute <code>fox:transform</code>\n+          to apply a free-form transformation to the whole block-container. The content of the\n+          <code>fox:transform</code> attribute is the same as for\n+          <a href=\"http://www.w3.org/TR/SVG/coords.html#TransformAttribute\">SVG's transform attribute</a>.\n+          The transformation specified here is performed in addition to other implicit\n+          transformations of the block-container (resulting from top, left and other properties)\n+          and after them.\n+        </p>\n+        <p>\n+          Examples: <code>fox:transform=\"rotate(45)\"</code> would rotate the block-container\n+          by 45 degrees clock-wise around its upper-left corner.\n+          <code>fox:transform=\"translate(10000,0)\"</code> would move the block-container to the\n+          right by 10 points (=10000 millipoints, FOP uses millipoints internally!).\n+        </p>\n+        <note>\n+          This extension attribute doesn't work for all output formats! It's currently only\n+          supported for PDF, PS and Java2D-based renderers.\n+        </note>\n+      </section>\n+      <section id=\"color-functions\">\n+        <title>Color functions</title>\n+        <p>\n+          XSL-FO supports specifying color using the rgb(), rgb-icc() and system-color() functions.\n+          Apache FOP provides additional color functions for special use cases. Please note that\n+          using these functions compromises the interoperability of an FO document.\n+        </p>\n+        <section id=\"color-function-cmyk\">\n+          <title>cmyk()</title>\n+          <p><code>color cmyk(numeric, numeric, numeric, numeric)</code></p>\n+          <p>\n+            This function will construct a color in device-specific CMYK color space. The numbers\n+            must be between 0.0 and 1.0. For output formats that don't support device-specific\n+            color space the CMYK value is converted to an sRGB value.\n+          </p>\n+        </section>\n+      </section>\n+      \n+    </section>\n+  </body>\n+</document>\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/extensions.xml",
                "sha": "483866e61d7895f12fa7ac485b0c76f90c047425",
                "status": "added"
            },
            {
                "additions": 410,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/fonts.xml",
                "changes": 410,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/fonts.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/fonts.xml",
                "patch": "@@ -0,0 +1,410 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Apache FOP: Fonts</title>\n+    <version>$Revision$</version>\n+    <authors>\n+      <person name=\"Jeremias M\u00e4rki\" email=\"\"/>\n+      <person name=\"Tore Engvig\" email=\"\"/>\n+      <person name=\"Adrian Cumiskey\" email=\"\"/>\n+      <person name=\"Max Berger\" email=\"\"/>\n+    </authors>\n+  </header>\n+  <body>\n+    <section id=\"intro\">\n+      <title>Summary</title>\n+      <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n+      <table>\n+        <tr>\n+          <th>Renderer</th>\n+          <th>Base-14</th>\n+          <th>AWT/OS</th>\n+          <th>Custom</th>\n+          <th>Custom Embedding</th>\n+        </tr>\n+        <tr>\n+          <td>PDF</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>PostScript</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>PCL</td>\n+          <td>yes (modified)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>no</td>\n+        </tr>\n+        <tr>\n+          <td>AFP</td>\n+          <td>no</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>Java2D/AWT/Bitmap</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+          <td>n/a (display only)</td>\n+        </tr>\n+        <tr>\n+          <td>Print</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+          <td>controlled by OS printer driver</td>\n+        </tr>\n+        <tr>\n+          <td>RTF</td>\n+          <td>n/a (font metrics not needed)</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+        </tr>\n+        <tr>\n+          <td>TXT</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+        </tr>\n+        <!--tr> NOT AVAILABLE\n+          <td>MIF</td>\n+          <td>n/a (font metrics not needed)</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+        </tr-->\n+        <!--tr> NOT AVAILABLE\n+          <td>SVG</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>no</td>\n+        </tr-->\n+        <tr>\n+          <td>XML</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>n/a</td>\n+        </tr>\n+      </table>\n+    </section>\n+    <section>\n+      <title>Base-14 Fonts</title>\n+      <p>\n+        The Adobe PostScript and PDF Specification specify a set of 14 fonts that must be\n+        available to every PostScript interpreter and PDF reader:\n+        Helvetica (normal, bold, italic, bold italic),\n+        Times (normal, bold, italic, bold italic),\n+        Courier (normal, bold, italic, bold italic),\n+        Symbol and ZapfDingbats.\n+      </p>\n+      <p>\n+        Please note that recent versions of Adobe Acrobat Reader replace\n+        \"Helvetica\" with \"Arial\" and \"Times\" with \"Times New Roman\" internally.\n+        GhostScript replaces \"Helvetica\" with \"Nimbus Sans L\" and \"Times\" with \n+        \"Nimbus Roman No9 L\". Other document viewers may do similar font\n+        substitutions. If you need to make sure that there are no such\n+        substitutions, you need to specify an explicit font and embed it in\n+        the target document.\n+      </p>\n+    </section>\n+    <section>\n+      <title>Missing Fonts</title>\n+      <p>\n+        When FOP does not have a specific font at its disposal (because it's \n+        not installed in the operating system or set up in FOP's configuration),\n+        the font is replaced with \"any\". \"any\" is internally mapped to the\n+        Base-14 font \"Times\" (see above).\n+      </p>\n+    </section>\n+    <section id=\"awt\">\n+      <title>Java2D/AWT/Operating System Fonts</title>\n+      <p>\n+        The Java2D family of renderers (Java2D, AWT, Print, TIFF, PNG), use the\n+        Java AWT subsystem for font metric information. Through operating system\n+        registration, the AWT subsystem knows what fonts are available on the system,\n+        and the font metrics for each one.\n+      </p>\n+      <p>\n+        When working with one of these output formats and you're missing a font, just\n+        install it in your operating system and they should be available for these\n+        renderers. Please note that this is not true for other output formats such as\n+        PDF or PostScript.\n+      </p>\n+    </section>\n+    \n+    <section id=\"custom\">\n+      <title>Custom Fonts</title>\n+      <p>\n+        Support for custom fonts is highly output format dependent (see above table).\n+        This section shows how to add Type 1 and TrueType fonts to the PDF, PostScript and\n+        Java2D-based renderers. Other renderers (like AFP) support other font formats. Details\n+        in this case can be found on the page about <a href=\"output.html\">output formats</a>.\n+      </p>\n+      <p>\n+        Prior to FOP version 0.94, it was always necessary to create an XML font metrics file\n+        if you wanted to add a custom font. This unconvenient step has been removed and in\n+        addition to that, FOP supports auto-registration of fonts, i.e. FOP can find fonts\n+        installed in your operating system or can scan user-specified directories for fonts.\n+        Font registration via XML font metrics file is still supported and is still necessary\n+        if you want to use a TrueType Collection (*.ttc). Direct support for TrueType\n+        collections may be added later. Furthermore, the XML font metrics files are still\n+        required if you don't want to embed, but only reference a font.\n+      </p>\n+      <p>\n+        Basic information about fonts can be found at:\n+      </p>\n+      <ul>\n+        <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n+        <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a></li>\n+      </ul>\n+    </section>\n+    \n+    <section id=\"basics\">\n+      <title>Basic font configuration</title>\n+      <p>\n+        If you want FOP to use custom fonts, you need to tell it where to find them. This\n+        is done in the configuration file and once per renderer (because each output format\n+        is a little different). In the basic form, you can either tell FOP to find your\n+        operating system fonts or you can specify directories that it will search for\n+        support fonts. These fonts will then automatically be registered.\n+      </p>\n+      <source><![CDATA[\n+<fonts>\n+  <!-- register all the fonts found in a directory -->\n+  <directory>C:\\MyFonts1</directory>\n+  \n+  <!-- register all the fonts found in a directory\n+       and all of its sub directories (use with care) -->\n+  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+  <!-- automatically detect operating system installed fonts -->\n+  <auto-detect/>  \n+</fonts>]]></source>\n+      <note>\n+        Review the documentation for <a href=\"configuration.html\">FOP Configuration</a>\n+        for instructions on making the FOP configuration available to FOP when it runs.\n+        Otherwise, FOP has no way of finding your custom font information. It is currently\n+        not possible to easily configure fonts from Java code.\n+      </note>\n+    </section>\n+    \n+    <section id=\"advanced\">\n+      <title>Advanced font configuration</title>\n+      <p>\n+        The instructions found above should be sufficient for most users. Below are some\n+        additional instructions in case the basic font configuration doesn't lead to\n+        the desired results.\n+      </p>\n+      <section id=\"type1-metrics\">\n+        <title>Type 1 Font Metrics</title>\n+        <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n+          To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n+        <p>Windows:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>Unix:</p>\n+        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>PFMReader [options]:</p>\n+        <ul>\n+          <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n+            .pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n+            chosen. This may be useful in some cases to ensure that applications using the output document\n+            (Acrobat Reader for example) use the embedded font instead of a local font with the same\n+            name.</li>\n+        </ul>\n+        <note>The classpath in the above example has been simplified for readability.\n+          You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n+          xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n+        <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n+          FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n+          The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n+          The constructed values however appear to have no visible influence.</note>\n+      </section>\n+      <section id=\"truetype-metrics\">\n+        <title>TrueType Font Metrics</title>\n+        <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n+          Use it in a similar manner to PFMReader.\n+          For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.TTFReader [options]\n+          C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n+        <p>TTFReader [options]:</p>\n+        <ul>\n+          <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n+            INFO).</li>\n+          <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n+          <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n+            TrueType Collection (.ttc file) you must specify which font from the collection you will read\n+            metrics from.\n+            If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n+          <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n+            Without this option, a CID-keyed font metrics file is created.\n+            The table below summarizes the differences between these two encoding options as currently\n+            used within FOP.\n+            Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n+        </ul>\n+        <table id=\"ttf-encoding\">\n+          <tr>\n+            <th>Issue</th>\n+            <th>WinAnsi</th>\n+            <th>CID-keyed</th>\n+          </tr>\n+          <tr>\n+            <td>Usable Character Set</td>\n+            <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n+            <td>Limited only by the characters in the font itself.</td>\n+          </tr>\n+          <tr>\n+            <td>Embedding the Font</td>\n+            <td>Optional.</td>\n+            <td>Mandatory. Not embedding the font produces invalid PDF documents.</td>\n+          </tr>\n+        </table>\n+        <warning>\n+          You may experience failures with certain TrueType fonts, especially if they don't contain \n+          the so-called Unicode \"cmap\" table. TTFReader can currently not deal with font like this.\n+        </warning>\n+      </section>\n+      <section id=\"truetype-collections-metrics\">\n+        <title>TrueType Collections Font Metrics</title>\n+        <p>TrueType collections (.ttc files) contain more than one font.\n+          To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n+        <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n+          It will display all of the font names and exit with an Exception.</p>\n+        <p>Here is an example of generating a metrics file for a .ttc file:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n+          msmincho.ttc msminch.xml</source>\n+      </section>\n+      <section id=\"register\">\n+        <title>Register Fonts with FOP</title>\n+        <p>You must tell FOP how to find and use the font metrics files by registering them in the <a href=\"configuration.html\">FOP Configuration</a>. Add entries for your custom fonts, regardless of font type, to the configuration file in a manner similar to the following:</p>\n+        <source><![CDATA[\n+<fonts>\n+  <!-- register a particular font -->\n+  <font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\"\n+      embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n+     <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n+  </font>\n+  \n+  <!-- register all the fonts found in a directory -->\n+  <directory>C:\\MyFonts1</directory>\n+  \n+  <!-- register all the fonts found in a directory\n+       and all of its sub directories (use with care) -->\n+  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+  <!-- automatically detect operating system installed fonts -->\n+  <auto-detect/>  \n+</fonts>]]></source>\n+        <ul>\n+          <li>\n+            URLs are used to access the font metric and font files.\n+            Relative URLs are resolved relative to the font-base property (or base) if available.\n+            See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n+          </li>\n+          <li>The \"metrics-url\" attribute is generally not necessary except if you run into problems with certain fonts.</li>\n+          <li>Either an \"embed-url\" or a \"metrics-url\" must be specified for font tag configurations.</li>\n+          <li>The font \"kerning\" attribute is optional. Default is \"true\".</li>\n+          <li>If embedding is off (i.e. embed-url is not set), the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n+          <li>When setting the \"embed-url\" attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n+          <li>The fonts \"directory\" tag can be used to register fonts contained within a single or list of directory paths.  The \"recursive\" attribute can be specified to recursively add fonts from all sub directories.</li>\n+          <li>The fonts \"auto-detect\" tag can be used to automatically register fonts that are found to be installed on the native operating system.</li>\n+          <li>Fonts registered with \"font\" tag configurations override fonts found by means of \"directory\" tag definitions.</li>\n+          <li>Fonts found as a result of a \"directory\" tag configuration override fonts found as a result of the \"auto-detect\" tag being specified.</li>\n+          <li>\n+            If relative URLs are specified, they are evaluated relative to the value of the \n+            \"font-base\" setting. If there is no \"font-base\" setting, the fonts are evaluated \n+            relative to the base directory.\n+          </li>\n+        </ul>\n+        <!--note>Cocoon users will need to setup the config, see FOPSerializer for more information.</note-->\n+      </section>\n+      <section id=\"autodetect\">\n+        <title>Auto-Detect and auto-embedd feature</title>\n+        <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n+        <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n+        <source>Manifest-Version: 1.0\n+          \n+          Name: font/myfont.ttf\n+          Content-Type: application/x-font</source>\n+        <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n+      </section>\n+      <section id=\"embedding\">\n+        <title>Embedding</title>\n+        <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n+        <note>The font is simply embedded into the PDF file, it is not converted.</note>\n+        <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n+          If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n+        <warning>\n+          Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n+          PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n+          the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n+        </warning>\n+        <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n+          This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n+        <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n+        <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the\n+          original font, containing only the glyphs used, is embedded in the output document.</p>\n+      </section>\n+      <!-- The following section should no longer be required\n+      <section id=\"embedding-base14\">\n+        <title>Explicitly embedding the base 14 fonts</title>\n+        <p>\n+          There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n+          can normally be considered available on the target platform (viewer, printer). One of these cases is\n+          <a href=\"pdfa.html\">PDF/A</a> which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n+          Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n+          problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n+          the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n+          PFMReader application writes \"UnknownEncoding\" to the generated XML file. In order to embed \"Symbol\"\n+          and \"ZapfDingbats\" you have to manually change the XML font metrics file and specify \"SymbolEncoding\"\n+          or \"ZapfdingbatsEncoding\" encoding respectively as the value for the \"encoding\" element.\n+        </p>\n+        <p>Example:</p>\n+        <source><![CDATA[\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<font-metrics type=\"TYPE1\">\n+  <font-name>Symbol</font-name>\n+  <embed/>\n+  <encoding>SymbolEncoding</encoding>\n+  <cap-height>673</cap-height>\n+  <x-height>766</x-height>\n+  [..]]]></source>\n+      </section-->\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/fonts.xml",
                "sha": "423eaad11b229fcb9fc5a3b13f36d9fd368663d9",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "patch": "@@ -17,11 +17,6 @@\n -->\n <!-- $Id$ -->\n <disabled-testcases>\n-  <testcase>\n-    <name>demo test failure</name>\n-    <file>demo-test-failure.fo</file>\n-    <description></description>\n-  </testcase>\n   <testcase>\n     <name>Markers and core function evaluation</name>\n     <file>from-table-column_marker.fo</file>",
                "previous_filename": "src/documentation/content/xdocs/0.93/fotree/disabled-testcases.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "sha": "f6f78dcf769046bdf4d3f6a02889e0a1a376009e",
                "status": "renamed"
            },
            {
                "additions": 551,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/graphics.xml",
                "changes": 551,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/graphics.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/graphics.xml",
                "patch": "@@ -0,0 +1,551 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Apache FOP: Graphics Formats</title>\n+    <version>$Revision$</version>\n+  </header>\n+  <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        After the Apache FOP 0.94 release, the image handling subsystem has been rewritten in\n+        order to improve the range of supported images and image subtypes, to lower the\n+        overall memory consumption when handling images, to produce smaller output files and to\n+        increase the performance in certain areas. Of course, this causes a few changes most of\n+        which the user will probably not notice. The most important changes are:\n+      </p>\n+      <ul>\n+        <li>\n+          The image libraries Jimi and JAI are no longer supported. Instead, Apache FOP uses the\n+          Image I/O API that was introduced with Java 1.4 for all bitmap codecs.\n+        </li>\n+        <li>\n+          Some bitmap images are no longer converted to a standardized 24 bit RGB image but are\n+          instead handled in their native format.\n+        </li>\n+        <li>\n+          A plug-in mechanism offers a possibility to add support for new formats without changing\n+          the FOP's source code.\n+        </li>\n+      </ul>\n+      <p>\n+        The actual <a href=\"http://xmlgraphics.apache.org/commons/image-loader.html\">image loading framework</a>\n+        no longer resides in Apache FOP, but was instead placed in\n+        <a href=\"ext:xmlgraphics.apache.org/commons/\">XML Graphics Commons</a>.\n+      </p>\n+    </section>\n+    <section id=\"support-overview\">\n+      <title>Overview of Graphics Support</title>\n+      <p>\n+        The table below summarizes the <em>theoretical</em> support for graphical formats\n+        within FOP. In other words, within the constraints of the limitations listed here,\n+        these formats <em>should</em> work. However, many of them have not been tested,\n+        and there may be limitations that have not yet been discovered or documented.\n+        The packages needed to support some formats are not included in the FOP distribution\n+        and must be installed separately. Follow the links in the \"Support Through\" columns\n+        for more details.\n+      </p>\n+      <table>\n+        <tr>\n+          <th rowspan=\"2\">Format</th>\n+          <th rowspan=\"2\">Type</th>\n+          <th colspan=\"3\">Support Through</th>\n+        </tr>\n+        <tr>\n+          <th><a href=\"#native\">Apache FOP (native)</a></th>\n+          <th><a href=\"#batik\">Apache Batik</a></th>\n+          <th><a href=\"#imageio\">Image I/O</a></th>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X [1]</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n+          <td>metafile (both bitmap and vector), most frequently used for vector drawings</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td>GIF (Graphics Interchange Format)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n+          <td>bitmap</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td></td>\n+          <td>X</td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n+          <td>bitmap</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td>X [1]</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td></td>\n+          <td>(X)</td>\n+          <td></td>\n+        </tr>\n+      </table>\n+      <p>\n+        Legend:\n+      </p>\n+      <ul>\n+        <li>\"(X)\" means restricted support. Please see the details below.</li>\n+        <li>\n+          [1]: Requires the presence of <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a>\n+          (or an equivalent Image I/O compatible codec) in the classpath. JAI Image I/O Tools also\n+          adds support for JPEG 2000, WBMP, RAW and PNM. Other Image I/O codecs may provide\n+          support for additional formats.\n+        </li>\n+      </ul>\n+      <note>\n+        <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a> is not the same as the\n+        <a href=\"http://java.sun.com/javase/technologies/desktop/media/jai/\">JAI library</a>! The\n+        former simply exposes JAI's codecs using the Image&nbsp;I/O API but does not include all\n+        the image manipulation functionality.\n+      </note>\n+      <section id=\"format-map\">\n+        <title>Map of supported image formats by output format</title>\n+        <p>\n+          Not all image formats are supported for all output formats! For example, while you can\n+          use EPS (Encapsulated PostScript) files when you generate PostScript output, this format\n+          will not be supported by any other output format. Here's an overview of which image\n+          formats are supported by which output format:\n+        </p>\n+        <table>\n+          <tr>\n+            <th>Image Format</th>\n+            <th>PDF</th>\n+            <th>PostScript</th>\n+            <th>Java2D, PNG, TIFF, AWT</th>\n+            <th>PCL</th>\n+            <th>AFP</th>\n+            <th>RTF</th>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td>X [1]</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n+            <td></td>\n+            <td>X [1]</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+          </tr>\n+          <tr>\n+            <td>GIF (Graphics Interchange Format)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n+            <td>X [1]</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n+            <td>X [2]</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+        </table>\n+        <p>\n+          Legend:\n+        </p>\n+        <ul>\n+          <li>\n+            [1]: Supported without the need to decode the image.\n+          </li>\n+          <li>\n+            [2]: Supported without the need to decode the image, but only for certain subtypes.\n+          </li>\n+        </ul>\n+      </section>\n+    </section>\n+    <section id=\"packages\">\n+      <title>Graphics Packages</title>\n+      <section id=\"native\">\n+        <title>XML Graphics Commons Native</title>\n+        <p>\n+          <a href=\"ext:xmlgraphics.apache.org/commons\">XML Graphics Commons</a> supports a number\n+          of graphic file formats natively as basic functionality: all bitmap formats for which\n+          there are Image I/O codecs available (JPEG, PNG, GIF, TIFF, etc.), EPS and EMF.\n+        </p>\n+      </section>\n+      <section id=\"fop-native\">\n+        <title>FOP Native</title>\n+        <p>\n+          FOP has no native image plug-ins for the image loading framework of its own but currently\n+          hosts the Batik-dependent SVG and WMF plug-ins until they can be moved to\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n+        </p>\n+      </section>\n+      <section id=\"batik\">\n+        <title>Apache Batik</title>\n+        <p>\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a> will later receive the\n+          SVG and WMF plug-ins for the image loading framework that are currently hosted inside\n+          FOP.\n+        </p>\n+        <p>\n+          Current FOP distributions include a distribution of the\n+          <a class=\"fork\" href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n+          Because Batik's API changes frequently, it is highly recommended that you use the\n+          version that ships with FOP, at least when running FOP.\n+        </p>\n+        <warning>Batik must be run in a graphical environment.</warning>\n+        <p>\n+          Batik must be run in a graphical environment.\n+          It uses AWT classes for rendering SVG, which in turn require an X server on Unixish\n+          systems. If you run a server without X, or if you can't connect to the X server due to\n+          security restrictions or policies (a so-called \"headless\" environment), SVG rendering\n+          will fail.\n+        </p>\n+        <p>Here are some workarounds:</p>\n+        <ul>\n+          <li>\n+            Start Java with the <code>-Djava.awt.headless=true</code> command line option.\n+          </li>\n+          <li>\n+            Install an X server which provides an in-memory framebuffer without actually using a\n+            screen device or any display hardware. One example is Xvfb.\n+          </li>\n+          <li>\n+            Install a toolkit which emulates AWT without the need for an underlying X server. One\n+            example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free\n+            and comes with detailed installation instructions.\n+          </li>\n+        </ul>\n+      </section>\n+    </section>\n+    <section id=\"image-formats\">\n+      <title>Details on image formats</title>\n+      <section id=\"bmp\">\n+        <title>BMP</title>\n+        <p>\n+          BMP images are supported through an Image I/O codec. There may be limitations of the\n+          codec which are outside the control of Apache FOP.\n+        </p>\n+      </section>\n+      <section id=\"emf\">\n+        <title>EMF</title>\n+        <p>\n+          Windows Enhanced Metafiles (EMF) are only supported in RTF output where they are\n+          embedded without decoding.\n+        </p>\n+      </section>\n+      <section id=\"eps\">\n+        <title>EPS</title>\n+        <p>Apache FOP allows to use EPS files when generating PostScript output only.</p>\n+        <p>\n+          Other output targets can't be supported at the moment because\n+          FOP lacks a PostScript interpreter. Furthermore, FOP is currently not able\n+          to parse the preview bitmaps sometimes contained in EPS files.\n+        </p>\n+      </section>\n+      <section id=\"gif\">\n+        <title>GIF</title>\n+        <p>\n+          GIF images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n+        </p>\n+      </section>\n+      <section id=\"jpeg\">\n+        <title>JPEG</title>\n+        <p>\n+          FOP native support (i.e. the handling of undecoded images) of JPEG does not include all\n+          variants, especially those containing unusual color lookup tables and color profiles.\n+          If you have trouble with a JPEG image in FOP, try opening it with an image processing \n+          program (such as Photoshop or Gimp) and then saving it. Specifying 24-bit color output \n+          may also help. For the PDF and PostScript renderers most JPEG images can be passed \n+          through without decompression. User reports indicate that grayscale, RGB, and \n+          CMYK color spaces are all rendered properly. However, for other output formats, the\n+          JPEG images have to be decompressed. Tests have shown that there are some limitation\n+          in some Image&nbsp;I/O codecs concerning images in the CMYK color space. Work-arounds are\n+          in place but may not always work as expected.\n+        </p>\n+      </section>\n+      <section id=\"png\">\n+        <title>PNG</title>\n+        <p>\n+          PNG images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n+        </p>\n+      </section>\n+      <section id=\"svg\">\n+        <title>SVG</title>\n+        <section id=\"svg-intro\">\n+          <title>Introduction</title>\n+          <p>FOP uses <a href=\"#batik\"> Apache Batik</a> for SVG support.\n+            This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n+            file referenced with <code>fo:external-graphic</code>.</p>\n+          <note>   \n+            Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n+            documents into PDF.  For more information please see the\n+            <a href=\"http://xmlgraphics.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n+            on the Batik site.\n+          </note>\n+        </section>\n+        <section id=\"svg-pdf-graphics\">\n+          <title>Placing SVG Graphics into PDF</title>\n+          <p>\n+            The SVG is rendered into PDF by using PDF commands to draw and fill\n+            lines and curves. This means that the graphical objects created with\n+            this remain as vector graphics. The same applies to PostScript output.\n+            For other output formats the SVG graphic may be converted to a bitmap\n+            image.\n+          </p>\n+          <p>\n+            There are a number of SVG things that cannot be converted directly into\n+            PDF. Parts of the graphic such as effects, patterns and images are inserted\n+            into the PDF as a raster graphic. The resolution of these raster images can\n+            be controlled through the \"target resolution\" setting in the \n+            <a href=\"configuration.html\">configuration</a>.</p>\n+          <p>\n+            Currently transparency is limited in PDF so many SVG images that\n+            contain effects or graphics with transparent areas may not be displayed\n+            correctly.\n+          </p>\n+        </section>\n+        <section id=\"svg-pdf-text\">\n+          <title>Placing SVG Text into PDF and PostScript</title>\n+          <p>If possible, Batik will use normal PDF or PostScript text when inserting text. It does\n+            this by checking if the text can be drawn normally and the font is\n+            supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n+            <!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n+            shows how various types and effects with text are handled.\n+            Note that tspan and outlined text are not yet implemented.</p>\n+          <p>\n+            Otherwise, text is converted and drawn as a set of shapes by Batik, using the\n+            stroking text painter. This means that a typical character will\n+            have about 10 curves (each curve consists of at least 20 characters).\n+            This can make the output files large and when it is viewed the\n+            viewer may not normally draw those fine curves very well (In Adobe Acrobat, turning on\n+            \"Smooth Line Art\" in the preferences will fix this). Copy/paste functionality\n+            will not be supported in this case.\n+            If the text is inserted into the output file using the inbuilt text commands\n+            it will use a single character.\n+          </p>\n+          <p>\n+            Note that because SVG text can be rendered as either text or a vector graphic, you \n+            may need to consider settings in your viewer for both. The Acrobat viewer has both \n+            \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images \n+            to be displayed nicely on your screen (see Edit / Preferences / Display).\n+            This setting will not affect the printing of your document, which should be OK in \n+            any case, but will only affect the quality of the screen display.</p>\n+        </section>\n+        <section id=\"svg-scaling\">\n+          <title>Scaling</title>\n+          <p>\n+            Currently, SVG images are rendered with the dimensions specified <em>in the SVG \n+              file</em>, within the viewport specified in the fo:external-graphic element.\n+            For everything to work properly, the two should be equal. The SVG standard leaves \n+            this issue as an implementation detail. Additional scaling options are available\n+            through XSL-FO means.\n+          </p>\n+          <p>\n+            If you use pixels to specify the size of an SVG graphic the \"source resolution\" setting\n+            in the <a href=\"configuration.html\">configuration</a> will be used to determine the\n+            size of a pixel. The use of pixels to specify sizes is discouraged as they may\n+            be interpreted differently in different environments.\n+          </p>\n+        </section>\n+        <section id=\"svg-problems\">\n+          <title>Known Problems</title>\n+          <ul>\n+            <li>\n+              Soft mask transparency is combined with white so that it looks better\n+              on PDF 1.3 viewers but this causes the soft mask to be slightly lighter\n+              or darker on PDF 1.4 viewers.\n+            </li>\n+            <li>\n+              There is some problem with a gradient inside a pattern which may cause a PDF\n+              error when viewed in Acrobat 5.\n+            </li>\n+            <li>\n+              Text is not always handled correctly, it may select the wrong font\n+              especially if characters have multiple fonts in the font list.\n+            </li>\n+            <li>\n+              Uniform transparency for images and other SVG elements that are converted\n+              into a raster graphic are not drawn properly in PDF. The image is opaque.\n+            </li>\n+          </ul>\n+        </section>\n+      </section>\n+      <section id=\"tiff\">\n+        <title>TIFF</title>\n+        <p>\n+          FOP can embed TIFF images without decompression into PDF, PostScript and AFP if they\n+          have either CCITT T.4, CCITT T.6, or JPEG compression. Otherwise, a TIFF-capable\n+          Image&nbsp;I/O codec is necessary for decoding the image.\n+        </p>\n+        <p>\n+          There may be some limitation concerning images in the CMYK color space.\n+        </p>\n+      </section>\n+      <section id=\"wmf\">\n+        <title>WMF</title>\n+        <p>\n+          Windows Metafiles (WMF) are supported through classes in \n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>. At the moment, support\n+          for this format is experimental and may not always work as expected.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"resolution\">\n+      <title>Graphics Resolution</title>\n+      <p>\n+        Some bitmapped image file formats store a dots-per-inch (dpi) or other resolution \n+        values. FOP tries to use this resolution information whenever possible to determine\n+        the image's intrinsic size. This size is used during the layout process when it is not\n+        superseded by an explicit size on fo:external-graphic (content-width and content-height \n+        properties).\n+      </p>\n+      <p>\n+        Please note that not all images contain resolution information. If it's not available\n+        the source resolution set on the FopFactory (or through the user configuration XML) is used.\n+        The default here is 72 dpi.\n+      </p>\n+      <p>\n+        Bitmap images are generally embedded into the output format at their original resolution\n+        (as is). No resampling of the image is performed. Explicit resampling is on our wishlist, \n+        but hasn't been implemented, yet. Bitmaps included in SVG graphics may be resampled to \n+        the resolution specified in the \"target resolution\" setting in the \n+        <a href=\"configuration.html\">configuration</a> if SVG filters are applied. This can be\n+        used as a work-around to resample images in FO documents. \n+      </p>\n+    </section>\n+    <section id=\"page-selection\">\n+      <title>Page selection for multi-page formats</title>\n+      <p>\n+        Some image formats such as TIFF support multiple pages/sub-images per file. You can\n+        select a particular page using a special URI fragment in the form:\n+        &lt;uri&gt;#page=&lt;nr&gt;\n+        (for example: <code>http://localhost/images/myimage.tiff#page=3</code>)\n+      </p>\n+    </section>\n+    <section id=\"caching\">\n+      <title>Image caching</title>\n+      <p>\n+        FOP caches images between runs. There is one cache per FopFactory instance. The URI is \n+        used as a key to identify images which means that when a particular URI appears again, \n+        the image is taken from the cache. If you have a servlet that generates a different \n+        image each time it is called with the same URI you need to use a constantly \n+        changing dummy parameter on the URI to avoid caching.\n+      </p>\n+      <p>\n+        The image cache has been improved considerably in the redesigned code. Therefore, a \n+        resetCache() method like in earlier versions of FOP has become unnecessary. If you \n+        still experience OutOfMemoryErrors, please notify us.\n+      </p>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/graphics.xml",
                "sha": "31e54d8fdb8712a57857c04ca7525a33cbfbc721",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/hyphenation.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/hyphenation.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/hyphenation.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/hyphenation.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/hyphenation.xml",
                "sha": "ed97c68685e4b47be98d678faf93a417562006b7",
                "status": "renamed"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/index.xml",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/index.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/documentation/content/xdocs/0.95/index.xml",
                "patch": "@@ -19,22 +19,22 @@\n <!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n <document>\n   <header>\n-    <title>Apache FOP Version 0.93</title>\n+    <title>Apache FOP Version 0.95</title>\n     <version>$Revision$</version>\n   </header>\n   <body>\n     <section id=\"intro\">\n       <title>Introduction</title>\n       <p>\n-        The Apache FOP team is proud to present to you this production quality release. It has taken\n-        over three years to get this far and over two years without a new release from the FOP\n-        project. We're still in the process of adding new features. We welcome any feedback you\n+        The Apache FOP team is proud to present to you this production quality release.\n+        We're still in the process of adding new features. We welcome any feedback you\n         might have and even more, any other form of help to get the project forward.\n       </p>\n       <p>\n-        This fourth release contains many bug fix release and new features compared\n-        to 0.92beta. To see what has changed since the last release, please visit the \n-        <a href=\"changes_0.93.html\">Changes Page</a> and the <a href=\"releaseNotes_0.93.html\">Release Notes</a>.\n+        This sixth release contains many bug fix release and new features compared\n+        to 0.94. To see what has changed since the last release, please visit the \n+        <a href=\"changes_0.95.html\">Changes Page</a> and the\n+        <a href=\"releaseNotes_0.95.html\">Release Notes</a>.\n       </p>\n     </section>\n     <section id=\"upgrading\">",
                "previous_filename": "src/documentation/content/xdocs/0.93/index.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/index.xml",
                "sha": "3bc718b34d1133a97eed3d67dd01307af6a91cde",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/intermediate.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/intermediate.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/intermediate.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/intermediate.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/intermediate.xml",
                "sha": "4744185aa9fbb05ffa1db95419ffd6f2951cbdde",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/known-issues.xml",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/known-issues.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 32,
                "filename": "src/documentation/content/xdocs/0.95/known-issues.xml",
                "patch": "@@ -20,17 +20,9 @@\n       <known-issue>\n         MIF and SVG output support have not been restored, yet.\n       </known-issue>\n-      <known-issue>\n-        Java2D/AWT support has been improved, but some problems remain,\n-        for example with block-containers.\n-      </known-issue>\n       <known-issue>\n         Auto table layout is not implemented, yet.\n       </known-issue>\n-      <known-issue>\n-        The collapsing border model on tables is not implemented, yet. Please \n-        use border-collapse=\"separate\" for now.\n-      </known-issue>\n       <known-issue>\n         Footnotes may overlap with text of the region-body in multi-column \n         documents.\n@@ -56,22 +48,9 @@\n       <known-issue>\n         There are several small problems around white space handling.\n       </known-issue>\n-      <known-issue>\n-        Images currently don't shrink so they fit on a page when they are \n-        too big and shrinking is allowed to happen.\n-      </known-issue>\n-      <known-issue>\n-        inline-container may not work as expected.\n-      </known-issue>\n-      <known-issue>\n-        letter-spacing and word-spacing properties may not work as expected.\n-      </known-issue>\n       <known-issue>\n         leaders with leader-pattern=\"use-content\" may not work as expected.\n       </known-issue>\n-      <known-issue>\n-        keep-with-previous doesn't work inside tables and lists, yet.\n-      </known-issue>\n       <known-issue>\n         If two consecutive pages don't have the same available width, the \n         content currently isn't properly fit into the available space on\n@@ -84,19 +63,8 @@\n         Not all FO elements can be referenced by their \"id\", most notably:\n         table-body, table-header, table-footer and table-row.\n       </known-issue>\n-      <known-issue>\n-        The backgrounds of table-body, table-header, table-footer and \n-        table-column are not painted, yet.\n-      </known-issue>\n-      <known-issue>\n-        Border and padding conditionality are not supported on table-cells, yet.\n-      </known-issue>\n       <known-issue>\n         Column balancing in multi-column documents may not work as expected\n         (<a href=\"http://issues.apache.org/bugzilla/show_bug.cgi?id=36356\">Bugzilla #36356</a>)\n       </known-issue>\n-      <known-issue>\n-        Internal basic-links don't point to the exact location on a page, yet, as they\n-        did in 0.20.5. Currently you land in the upper left corner of the page.\n-      </known-issue>\n </known-issues>",
                "previous_filename": "src/documentation/content/xdocs/0.93/known-issues.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/known-issues.xml",
                "sha": "6e28e3fb788e71c038b3f2086e63e23f383579e5",
                "status": "renamed"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/knownissues_overview.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 9,
                "filename": "src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "patch": "@@ -46,25 +46,23 @@\n   <section>\n     <title>FO Tree</title>\n     <p>\n-      This section lists currently disabled test cases in the test suite for the FO tree tests.\n-      The data for this section comes from \n-      <a href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/test/fotree/disabled-testcases.xml\">test/fotree/disabled-testcases.xml</a>.\n+      This section lists disabled test cases in the test suite for the FO tree tests, at the time\n+      of the release.\n     </p>\n-    <xi:include href=\"cocoon://knownissues-raw-fotree_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-fotree_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n   <section>\n     <title>Layout Engine</title>\n     <p>\n-      This section lists currently disabled test cases in the test suite for the layout engine tests.\n-      The data for this section comes from \n-      <a href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/test/layoutengine/disabled-testcases.xml\">test/layoutengine/disabled-testcases.xml</a>.\n+      This section lists disabled test cases in the test suite for the layout engine tests, at the\n+      time of the release.\n     </p>\n-    <xi:include href=\"cocoon://knownissues-raw-layoutengine_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-layoutengine_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n   <section>\n     <title>Other known issues</title>\n     <p>This section lists other known issues.</p>\n-    <xi:include href=\"cocoon://knownissues-raw-static_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-static_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n </section>\n </body>",
                "previous_filename": "src/documentation/content/xdocs/0.93/knownissues_overview.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "sha": "7247e6b79e85243774639f43ae3ba32f4ea335a3",
                "status": "renamed"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "changes": 88,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 78,
                "filename": "src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "patch": "@@ -26,13 +26,6 @@\n     is not sized correctly if it wraps an image that is higher than the \n     nominal line.</description>\n   </testcase>\n-  <testcase>\n-    <name>Bugzilla #36391: reference-orientation</name>\n-    <file>block-container_reference-orientation_bug36391.xml</file>\n-    <description>There's a problem involving nested block-containers\n-    and reference-orientation 180/-180.</description>\n-    <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=36391</reference>\n-  </testcase>\n   <testcase>\n     <name>Auto-height block-containers produce fences</name>\n     <file>block-container_space-before_space-after_3.xml</file>\n@@ -48,8 +41,8 @@\n   <testcase>\n     <name>Hyphenation with preserved linefeeds</name>\n     <file>block_hyphenation_linefeed_preserve.xml</file>\n-    <description>When hyphenation is enabled and linefeeds are preserved linefeeds \n-    are painted as '#' and the text is output multiple times.</description>\n+    <description>When hyphenation is enabled and linefeeds are preserved,\n+    the text is output multiple times.</description>\n   </testcase>\n   <testcase>\n     <name>linefeed-treatment</name>\n@@ -104,12 +97,6 @@\n     <description>Space resolution does not work between footnote\n     regions.</description>\n   </testcase>\n-  <testcase>\n-    <name>Footnotes swallowed in hyphenated fo:inlines</name>\n-    <file>footnote_in_inline.xml</file>\n-    <description>getChangedKnuthElements probably loses the footnote \n-    layout manager somewhere along the way.</description>\n-  </testcase>\n   <testcase>\n     <name>Footnotes swallowed in lists</name>\n     <file>footnote_in_list.xml</file>\n@@ -128,11 +115,6 @@\n     element list.</description>\n     <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=37579</reference>\n   </testcase>\n-  <testcase>\n-    <name>keeps on inlines NYI</name>\n-    <file>inline_keep-together.xml</file>\n-    <description>Keeps are not implemented in inline-level elements, yet.</description>\n-  </testcase>\n   <testcase>\n     <name>NPE for table inside an inline</name>\n     <file>inline_block_nested_3.xml</file>\n@@ -250,54 +232,6 @@\n     <file>region-body_column-count_bug36356.xml</file>\n     <description>Column balancing doesn't work as expected.</description>\n   </testcase>\n-  <testcase>\n-    <name>No background-images on table-body</name>\n-    <file>table-body_background-image.xml</file>\n-    <description>The backgrounds of table-body, table-header,\n-    table-footer and table-column are not painted, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Collapsing Border Model NYI</name>\n-    <file>table_border-collapse_collapse_1.xml</file>\n-    <description>Border-collapse=\"collapse\" is not yet\n-    implemented.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Collapsing Border Model NYI</name>\n-    <file>table_border-collapse_collapse_2.xml</file>\n-    <description>Border-collapse=\"collapse\" is not yet\n-    implemented.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Problems with border and padding on tables</name>\n-    <file>table_border_padding.xml</file>\n-    <description>The element list seems to not be fully correct, yet, causing\n-    the layout to look odd.</description>\n-  </testcase>\n-  <testcase>\n-    <name>keep-with-previous doesn't work inside tables</name>\n-    <file>table-cell_block_keep-with-previous.xml</file>\n-    <description>Keep-with-previous doesn't work inside tables and\n-    lists, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Border and padding conditionality is NYI on table-cells</name>\n-    <file>table-cell_border_padding_conditionality.xml</file>\n-    <description>Border and padding conditionality are not supported\n-    on table-cells, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>No background-images on table-header</name>\n-    <file>table-header_background-image.xml</file>\n-    <description>The backgrounds of table-body, table-header,\n-    table-footer and table-column are not painted, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>keep-with-previous doesn't work on table-rows</name>\n-    <file>table-row_keep-with-previous.xml</file>\n-    <description>Keep-with-previous doesn't work inside tables and\n-    lists, yet.</description>\n-  </testcase>\n   <testcase>\n     <name>table-cell empty area with marker.xml</name>\n     <file>table-cell_empty_area_with_marker.xml</file>\n@@ -312,17 +246,15 @@\n     case should be revisited.</description>\n   </testcase>\n   <testcase>\n-    <name>fo:wrapper around block-level content</name>\n-    <file>wrapper_block.xml</file>\n-    <description>A ClassCastException occurs when fo:wrapper directly surrounds a \n-    block-level element because its layout manager is written to handle only \n-    inline content.</description>\n+    <name>fo:wrapper around block-level content (with id)</name>\n+    <file>wrapper_block_id.xml</file>\n+    <description>\"id\" attributes on fo:wrapper around block-level content don't get\n+    added to the area tree.</description>\n   </testcase>\n   <testcase>\n-    <name>Bugzilla #40230: invalid extra page break</name>\n-    <file>block_break-after_bug40230.xml</file>\n-    <description>Currently an extra page is created even if there is nothing\n-      after a block with break-after=\"page\"</description>\n-    <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=40230</reference>\n+    <name>Soft hyphen with normal hyphenation enabled</name>\n+    <file>block_shy_linebreaking_hyph.xml</file>\n+    <description>A soft hyphen should be a preferred as break compared to a\n+    normal hyphenation point but is not.</description>\n   </testcase>\n </disabled-testcases>",
                "previous_filename": "src/documentation/content/xdocs/0.93/layoutengine/disabled-testcases.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "sha": "b4de16ef4a2b423739d40ff2d6801f0ce22660ee",
                "status": "renamed"
            },
            {
                "additions": 124,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/output.xml",
                "changes": 132,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/output.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 8,
                "filename": "src/documentation/content/xdocs/0.95/output.xml",
                "patch": "@@ -48,6 +48,35 @@\n           The net effect is that the layout of a given FO document can be quite different between \n           renderers that do not use the same font information.\n         </p>\n+        <p>\n+          Theoretically, there's some potential to make the output of the PDF/PS renderers match\n+          the output of the Java2D-based renderers. If FOP used the font metrics from its own\n+          font subsystem but still used Java2D for text painting in the Java2D-based renderers,\n+          this could probably be achieved. However, this approach hasn't been implemented, yet.\n+        </p>\n+        <p>\n+          With a work-around, it is possible to match the PDF/PS output in a Java2D-based\n+          renderer pretty closely. The clue is to use the\n+          <a href=\"intermediate.html\">intermediate format</a>. The trick is to layout the\n+          document using FOP's own font subsystem but then render the document using Java2D.\n+          Here are the necessary steps (using the command-line):\n+        </p>\n+        <ol>\n+          <li>\n+            Produce an IF file: <code>fop -fo myfile.fo -at application/pdf myfile.at.xml</code><br/>\n+            Specifying \"application/pdf\" for the \"-at\" parameter causes FOP to use FOP's own\n+            font subsystem (which is used by the PDF renderer). Note that no PDF file is created\n+            in this step.\n+          </li>\n+          <li>Render to a PDF file: <code>fop -atin myfile.at.xml -pdf myfile.pdf</code></li>\n+          <li>Render to a Java2D-based renderer:\n+            <ul>\n+              <li><code>fop -atin myfile.at.xml -print</code></li>\n+              <li><code>fop -atin myfile.at.xml -awt</code></li>\n+              <li><code>fop -atin myfile.at.xml -tiff myfile.tiff</code></li>\n+            </ul>\n+          </li>\n+        </ol>\n       </section>\n       <section id=\"general-direct-output\">\n         <title>Output to a Printer or Other Device</title>\n@@ -105,7 +134,7 @@ out = proc.getOutputStream();]]></source>\n       <section id=\"pdf-postprocess\">\n         <title>Post-processing</title>\n         <p>\n-          FOP does not currently support several desirable PDF features: XMP metadata and watermarks. \n+          FOP does not currently support several desirable PDF features: watermarks and signatures. \n           One workaround is to use Adobe Acrobat (the full version, not the Reader) to process \n           the file manually or with scripting that it supports.\n         </p>\n@@ -199,8 +228,54 @@ out = proc.getOutputStream();]]></source>\n     support for most text and layout.\n     Images and SVG are not fully supported, yet. Currently, the PostScript\n     renderer generates PostScript Level 3 with most DSC comments. Actually,\n-    the only Level 3 feature used is FlateDecode, everything else is Level 2.\n+    the only Level 3 features used are the FlateDecode and DCTDecode \n+    filter (the latter is used for 1:1 embedding of JPEG images), everything \n+    else is Level 2.\n   </p>\n+    <section id=\"ps-configuration\">\n+      <title>Configuration</title>\n+      <p>\n+        The PostScript renderer configuration currently allows the following settings:\n+      </p>\n+<source><![CDATA[<renderer mime=\"application/postscript\">\n+  <auto-rotate-landscape>false</auto-rotate-landscape>\n+  <language-level>3</language-level>\n+  <optimize-resources>false</optimize-resources>\n+  <safe-set-page-device>false</safe-set-page-device>\n+  <dsc-compliant>true</dsc-compliant>\n+</renderer>]]></source>\n+      <p>\n+        The default value for the \"auto-rotate-landscape\" setting is \"false\". Setting it\n+        to \"true\" will automatically rotate landscape pages and will mark them as landscape.\n+      </p>\n+      <p>\n+        The default value for the \"language-level\" setting is \"3\". This setting specifies\n+        the PostScript language level which should be used by FOP. Set this to \"2\"\n+        only if you don't have a Level 3 capable interpreter.\n+      </p>\n+      <p>\n+        The default value for the \"optimize-resources\" setting is \"false\". Setting it\n+        to \"true\" will produce the PostScript file in two steps. A temporary file will be\n+        written first which will then be processed to add only the fonts which were really\n+        used and images are added to the stream only once as PostScript forms. This will\n+        reduce file size but can potentially increase the memory needed in the interpreter\n+        to process.\n+      </p>\n+      <p>\n+        The default value for the \"safe-set-page-device\" setting is \"false\". Setting it\n+        to \"true\" will cause the renderer to invoke a postscript macro which guards against\n+        the possibility of invalid/unsupported postscript key/values being issued to the\n+        implementing postscript page device. \n+      </p>\n+      <p>\n+        The default value for the \"dsc-compliant\" setting is \"true\". Setting it\n+        to \"false\" will break DSC compliance by minimizing the number of setpagedevice\n+        calls in the postscript document output.  This feature may be useful when unwanted\n+        blank pages are experienced in your postscript output.  This problem is caused by\n+        the particular postscript implementation issuing unwanted postscript subsystem\n+        initgraphics/erasepage calls on each setpagedevice call.\n+      </p>\n+    </section>\n   <section id=\"ps-limitations\">\n     <title>Limitations</title>\n     <ul>\n@@ -283,6 +358,7 @@ out = proc.getOutputStream();]]></source>\n <source><![CDATA[<renderer mime=\"application/vnd.hp-PCL\">\n   <rendering>quality</rendering>\n   <text-rendering>bitmap</text-rendering>\n+  <disable-pjl>false</disable-pjl>\n </renderer>]]></source>\n       <p>\n         The default value for the \"rendering\" setting is \"speed\" which causes borders \n@@ -297,6 +373,12 @@ out = proc.getOutputStream();]]></source>\n         If the mix of painting methods results in unwelcome output, you can set this\n         to \"bitmap\" which causes all text to be rendered as bitmaps.\n       </p>\n+      <p>\n+        The default value for the \"disable-pjl\" setting is \"false\". This means that\n+        the PCL renderer usually generates PJL commands before and after the document\n+        in order to switch a printer into PCL language. PJL commands can be disabled\n+        if you set this value to \"true\".\n+      </p>\n       <p>\n         You can control the output resolution for the PCL using the \"target resolution\" \n         setting on the FOUserAgent. The actual value will be rounded up to the next\n@@ -498,6 +580,13 @@ out = proc.getOutputStream();]]></source>\n         <font-triplet name=\"Courier\" style=\"normal\" weight=\"bold\"/>\n       </font>]]></source>\n       </section>\n+      <section id=\"afp-renderer-resolution-config\">\n+        <title>Output Resolution</title>\n+        <p>By default the AFP Renderer creates output with a resolution of 240 dpi.\n+          This can be overridden by the &lt;renderer-resolution/&gt; configuration element. Example:</p>\n+      <source><![CDATA[\n+      <renderer-resolution>240</renderer-resolution>]]></source>\n+      </section>\n       <section id=\"afp-image-config\">\n         <title>Images</title>\n         <p>By default the AFP Renderer converts all images to 8 bit grey level.\n@@ -560,8 +649,7 @@ out = proc.getOutputStream();]]></source>\n       </section>\n       <section id=\"afp-tag-logical-element\">\n         <title>Tag Logical Element Extension</title>\n-        <p>The tag-logical-element extension element allows to injects TLEs into the AFP output stream. Example: \n-          Example:</p>\n+        <p>The tag-logical-element extension element allows to injects TLEs into the AFP output stream. Example:</p>\n       <source><![CDATA[\n     <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n      xmlns:afp=\"http://xmlgraphics.apache.org/fop/extensions/afp\">\n@@ -577,17 +665,44 @@ out = proc.getOutputStream();]]></source>\n         The name and value attributes are mandatory.\n         </p>\n       </section>\n+      <section id=\"afp-no-operation\">\n+        <title>No Operation Extension</title>\n+        <p>The no-operation extension provides the ability to carry up to 32K of comments or any other type\n+        of unarchitected data into the AFP output stream. Example:</p>\n+      <source><![CDATA[\n+    <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+     xmlns:afp=\"http://xmlgraphics.apache.org/fop/extensions/afp\">\n+      <fo:layout-master-set>\n+        <fo:simple-page-master master-name=\"simple\">\n+          <afp:no-operation name=\"My NOP\">insert up to 32k of character data here!</afp:no-operation>\n+        </fo:simple-page-master>\n+      </fo:layout-master-set>\n+]]></source>\n+        <p>The no-operation extension element can only occur within a simple-page-master.\n+        Multiple no-operation extension elements within a simple-page-master are allowed.\n+        The name attribute is mandatory.\n+        </p>\n+      </section>\n     </section>\n   </section>\n <section id=\"rtf\">\n   <title>RTF</title>\n   <p>\n     JFOR, an open source XSL-FO to RTF converter has been integrated into Apache FOP.\n     This will create an RTF (rich text format) document that will\n-    attempt to contain as much information from the fo document as\n-    possible. The RTF output follows Microsoft's RTF specifications\n+    attempt to contain as much information from the XSL-FO document as\n+    possible. It should be noted that is not possible (due to RTF's limitations) to map all\n+    XSL-FO features to RTF. For complex documents, the RTF output will never reach the feature\n+    level from PDF, for example. Thus, using RTF output is only recommended for simple documents\n+    such as letters.\n+  </p>\n+  <p>\n+    The RTF output follows Microsoft's RTF specifications\n     and produces best results on Microsoft Word.\n   </p>\n+  <note>RTF output is currently unmaintained and lacks many features compared to other output\n+    formats. Using other editable formats like Open Document Format, instead of producing XSL-FO\n+    then RTF through FOP, might give better results.</note>\n </section>\n <section id=\"xml\">\n   <title>XML (Area Tree XML)</title>\n@@ -662,8 +777,8 @@ out = proc.getOutputStream();]]></source>\n   <fonts><!-- described elsewhere --></fonts>\n </renderer>]]></source>\n       <p>\n-        The default value for the \"compression\" setting is \"PackBits\" which is a \n-        widely supported RLE compression scheme for TIFF. The set of compression\n+        The default value for the \"compression\" setting is \"PackBits\" which \n+        which is a widely supported RLE compression scheme for TIFF. The set of compression\n         names to be used here matches the set that the Image I/O API uses. Note that\n         not all compression schemes may be available during runtime. This depends on the\n         actual codecs being available. Here is a list of possible values:\n@@ -770,3 +885,4 @@ out = proc.getOutputStream();]]></source>\n   </body>\n </document>\n \n+",
                "previous_filename": "src/documentation/content/xdocs/0.93/output.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/output.xml",
                "sha": "628df12480b556dcd406303b7b146c40975ce43d",
                "status": "renamed"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfa.xml",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfa.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/pdfa.xml",
                "patch": "@@ -129,5 +129,31 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n         activated at the same time.\n       </p>\n     </section>\n+    <section id=\"interoperability\">\n+      <title>Interoperability</title>\n+      <p>\n+        There has been some confusion about the namespace for the PDF/A indicator in the XMP\n+        metadata. At least three variants have been seen in the wild:\n+      </p>\n+      <table>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id.html</td>\n+          <td><strong>obsolete</strong>, from an early draft of ISO-19005-1, used by Adobe Acrobat 7.x</td>\n+        </tr>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id</td>\n+          <td><strong>obsolete</strong>, found in the original ISO 19005-1:2005 document</td>\n+        </tr>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id/</td>\n+          <td><strong>correct</strong>, found in the technical corrigendum 1 of ISO 19005-1:2005</td>\n+        </tr>\n+      </table>\n+      <p>\n+        If you get an error validating a PDF/A file in Adobe Acrobat 7.x it doesn't mean that\n+        FOP did something wrong. It's Acrobat that is at fault. This is fixed in Adobe Acrobat 8.x\n+        which uses the correct namespace as described in the technical corrigendum 1.\n+      </p>\n+    </section>\n   </body>\n </document>",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfa.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfa.xml",
                "sha": "1b3b75561c397c94f7c805819443b90e83397673",
                "status": "renamed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfencryption.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 10,
                "filename": "src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "patch": "@@ -29,10 +29,6 @@\n   <body>\n     <section>\n       <title>Overview</title>\n-      <warning>\n-        PDF Encryption is available in Release 0.20.5 and later. The comments on this page do \n-        not apply to releases earlier than 0.20.5.\n-      </warning>\n       <p>\n         FOP supports encryption of PDF output, thanks to Patrick\n         C. Lankswert. This feature is commonly used to prevent\n@@ -207,16 +203,11 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n         install.\n       </p>\n       <ol>\n-        <li>\n-          Download the binary distribution for your JDK version. If you have JDK\n-          1.3 or earlier you must also download a JCE from the same page.\n-        </li>\n         <li>\n           Unpack the distribution. Add the jar file to your classpath. A\n           convenient way to use the jar on Linux is to simply drop it into the\n           FOP lib directory, it will be automatically picked up by\n-          <code>fop.sh</code>.  If you have JDK 1.3 or earlier don't forget to\n-          install the JCE as well.\n+          <code>fop.sh</code>.\n         </li>\n         <li>\n           Open the <code>java.security</code> file and add<br/>",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfencryption.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "sha": "cda301aabf08893b697451c1f0d0842e95a9bb9b",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfx.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfx.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/pdfx.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfx.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/pdfx.xml",
                "sha": "cf796c74dbf3c150c9bffc0e8e1ce16ce981fa2d",
                "status": "renamed"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/running.xml",
                "changes": 65,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/running.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 32,
                "filename": "src/documentation/content/xdocs/0.95/running.xml",
                "patch": "@@ -28,29 +28,33 @@\n       <title>System Requirements</title>\n       <p>The following software must be installed:</p>\n       <ul>\n-        <li>Java 1.3.x or later Runtime Environment.</li>\n+        <li>\n+          Java 1.4.x or later Runtime Environment.\n+          <ul>\n+            <li>\n+              Many JREs >=1.4 contain older JAXP implementations (which often contain bugs). It's\n+              usually a good idea to replace them with a current implementation.\n+            </li>\n+          </ul>\n+        </li>\n         <li>\n           Apache FOP. The <a href=\"../download.html\">FOP distribution</a> includes all libraries that you will \n           need to run a basic FOP installation. These can be found in the [fop-root]/lib directory. These \n           libraries include the following:\n           <ul>\n-            <li>\n-              A JAXP-compatible XML Parser (FOP comes with <a class=\"fork\" href=\"ext:xerces\">Apache Xerces-J</a>).\n-            </li>\n-            <li>\n-              A JAXP-compatible XSLT Processor (FOP comes with <a class=\"fork\" href=\"ext:xalan\">Apache Xalan-J</a>).\n-            </li>\n+            <li><a class=\"fork\" href=\"ext:xmlgraphics.apache.org/commons\">Apache XML Graphics Commons</a>, an shared library for Batik and FOP.</li>\n             <li><a class=\"fork\" href=\"ext:batik\">Apache Batik</a>, an SVG library.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/logging\">Apache Jakarta Commons Logging</a>, a logger abstraction kit.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/io\">Apache Jakarta Commons IO</a>, a library with I/O utilities.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-logging\">Apache Commons Logging</a>, a logger abstraction kit.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-io\">Apache Commons IO</a>, a library with I/O utilities.</li>\n             <li><a class=\"fork\" href=\"ext:excalibur/framework\">Apache Excalibur/Avalon Framework</a>, for XML configuration handling.</li>\n           </ul>\n         </li>\n       </ul>\n       <p>The following software is optional, depending on your needs:</p>\n       <ul>\n         <li>\n-          Graphics libraries. Support for some graphics formats requires additional packages. See \n+          Graphics libraries. Generally, FOP contains direct support for the most important\n+          bitmap image formats (including PNG, JPEG and GIF). See \n           <a href=\"graphics.html\">FOP: Graphics Formats</a> for details.\n         </li>\n         <li>\n@@ -178,7 +182,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n   Fop foo.fo -awt]]></source>\n       <p>\n         PDF encryption is only available if FOP was compiled with encryption support \n-        <strong>and</strong> if compatible encryption support is availabe at run time. \n+        <strong>and</strong> if compatible encryption support is available at run time. \n         Currently, only the JCE is supported. Check the <a href=\"pdfencryption.html\">Details</a>.\n       </p>\n       </section>\n@@ -220,25 +224,27 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n         <title>FOP's dynamical classpath construction</title>\n \n         <p>If FOP is started without a proper classpath, it tries to\n-        add its dependencies dynamically. FOP uses the current working\n-        directory as the base directory for its search. If the base\n-        directory is called <code>build</code>, then its parent\n-        directory becomes the base directory.</p>\n+          add its dependencies dynamically. If the system property\n+          <code>fop.home</code> contains the name of a directory, then\n+          FOP uses that directory as the base directory for its\n+          search. Otherwise the current working directory is the base\n+          directory. If the base directory is called <code>build</code>,\n+          then its parent directory becomes the base directory.</p>\n \n         <p>FOP expects to find <code>fop.jar</code> in the\n-        <code>build</code> subdirectory of the base directory, and\n-        adds it to the classpath. Subsequently FOP adds all\n-        <code>jar</code> files in the lib directory to the\n-        classpath. The lib directory is either the <code>lib</code>\n-        subdirectory of the base directory, or, if that does not\n-        exist, the base directory itself.</p>\n+          <code>build</code> subdirectory of the base directory, and\n+          adds it to the classpath. Subsequently FOP adds all\n+          <code>jar</code> files in the lib directory to the\n+          classpath. The lib directory is either the <code>lib</code>\n+          subdirectory of the base directory, or, if that does not\n+          exist, the base directory itself.</p>\n \n         <p>If the system property <code>fop.optional.lib</code>\n-        contains the name of a directory, then all <code>jar</code>\n-        files in that directory are also added to the classpath. See\n-        the methods <code>getJARList</code> and\n-        <code>checkDependencies</code> in\n-        <code>org.apache.fop.cli.Main</code>.</p>\n+          contains the name of a directory, then all <code>jar</code>\n+          files in that directory are also added to the classpath. See\n+          the methods <code>getJARList</code> and\n+          <code>checkDependencies</code> in\n+          <code>org.apache.fop.cli.Main</code>.</p>\n \n       </section>\n     </section>\n@@ -299,7 +305,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n       <ul>\n         <li>\n           Increase memory available to the JVM. See \n-          <a href=\"http://java.sun.com/j2se/1.3/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n+          <a href=\"http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n           for more information.\n           <warning>\n             It is usually unwise to increase the memory allocated to the JVM beyond the amount of \n@@ -335,11 +341,6 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n           This can be substantial if the page sequence contains lots of FO elements.\n         </li>\n       </ul>\n-      <p>\n-        One of FOP's stated design goals is to be able to process input of arbitrary size.\n-        Addressing this goal is one of the prime motivations behind the \n-        <a href=\"../dev/index.html\">FOP Redesign</a>.\n-      </p>\n     </section>\n     <section id=\"problems\">\n       <title>Problems</title>",
                "previous_filename": "src/documentation/content/xdocs/0.93/running.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/running.xml",
                "sha": "38e31cc6c288cee6755a9ea3b35905eeefcff563",
                "status": "renamed"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/servlets.xml",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/servlets.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.95/servlets.xml",
                "patch": "@@ -161,7 +161,7 @@ public void init() throws ServletException {\n         <ul>\n           <li>\n             Instead of java.io.ByteArrayOutputStream consider using the ByteArrayOutputStream\n-            implementation from the <a href=\"ext:jakarta/commons/io\">Jakarta Commons IO project</a> which allocates less memory.\n+            implementation from the <a href=\"ext:commons-io\">Jakarta Commons IO project</a> which allocates less memory.\n             The full class name is: <code>org.apache.commons.io.output.ByteArrayOutputStream</code>\n           </li>\n           <li>\n@@ -177,6 +177,71 @@ public void init() throws ServletException {\n           apply here, too.\n         </p>\n       </section>\n+      <section id=\"uriresolver\">\n+        <title>Accessing resources in your web application</title>\n+        <p>\n+          Often, you will want to use resources (stylesheets, images etc.) which are bundled with\n+          your web application. FOP provides a URIResolver implementation that lets you access\n+          files via the Servlet's ServletContext. The class is called \n+          <code>org.apache.fop.servlet.ServletContextURIResolver</code>.\n+        </p>\n+        <p>\n+          Here's how to set it up in your servlet. Instantiate a new instance in the servlet's \n+          init() method:\n+        </p>\n+        <source><![CDATA[\n+    /** URIResolver for use by this servlet */\n+    protected URIResolver uriResolver; \n+\n+    public void init() throws ServletException {\n+        this.uriResolver = new ServletContextURIResolver(getServletContext());\n+        [..]\n+    }]]></source>\n+        <p>\n+          The ServletContextURIResolver reacts on URIs beginning with \"servlet-context:\". If you\n+          want to access an image in a subdirectory of your web application, you could, for\n+          example, use: \"servlet-context:/images/myimage.png\". Don't forget the leading slash\n+          after the colon!\n+        </p>\n+        <p>\n+          Further down, you can use the URIResolver for various things:\n+        </p>\n+        <ul>\n+          <li>\n+            With the Transformer (JAXP/XSLT) so things like document() functions can resolver \n+            \"servlet-context:\" URIs.\n+          </li>\n+          <li>\n+            With the FopFactory so every resource FOP loads can be loaded using a \"servlet-context:\"\n+            URI.\n+          </li>\n+          <li>\n+            You can the ServletContextURIResolver yourself in your servlet code to access\n+            stylesheets or XML files bundled with your web application.\n+          </li>\n+        </ul>\n+        <p>\n+          Here are some example snippets:\n+        </p>\n+        <source><![CDATA[\n+//Setting up the JAXP TransformerFactory\n+this.transFactory = TransformerFactory.newInstance();\n+this.transFactory.setURIResolver(this.uriResolver);\n+\n+[..]\n+\n+//Setting up the FOP factory\n+this.fopFactory = FopFactory.newInstance();\n+this.fopFactory.setURIResolver(this.uriResolver);\n+\n+[..]\n+\n+//The stylesheet for the JAXP Transfomer\n+Source xsltSrc = this.uriResolver.resolve(\n+    \"servlet-context:/xslt/mystylesheet.xsl\", null);\n+Transformer transformer = this.transFactory.newTransformer(xsltSrc);\n+transformer.setURIResolver(this.uriResolver);]]></source>\n+      </section>\n     </section>\n     <section id=\"ie\">\n       <title>Notes on Microsoft Internet Explorer</title>",
                "previous_filename": "src/documentation/content/xdocs/0.93/servlets.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/servlets.xml",
                "sha": "07c22312dec61fe9fa14270a1629288805c1d488",
                "status": "renamed"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/upgrading.xml",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/upgrading.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 26,
                "filename": "src/documentation/content/xdocs/0.95/upgrading.xml",
                "patch": "@@ -31,7 +31,10 @@\n       </p>\n       <ul>\n         <li>\n-          More than half of the codebase has been rewritten over the last three years. With version 0.93 the code has reached <strong>production level</strong>.\n+          More than half of the codebase has been rewritten over the\n+          last four years. With version 0.93 the code has reached\n+          <strong>production level</strong>, and continues to improve with\n+          version 0.94 and 0.95.\n         </li>\n         <li>\n           The API of FOP has changed considerably and is not\n@@ -52,13 +55,12 @@\n           src/foschema/fop-configuration.xsd.\n         </li>\n         <li>\n-          If you are using font metrics files for version 0.20.5 or\n-          0.92 or earlier, you have to regenerate them in the new\n-          format. The new format is characterized by a version\n-          attribute on the top-level font-metrics element, whose value\n-          is 2.0. The absence of a version attribute will be\n-          interpreted as version 1.0, and such metrics files will no\n-          longer be parsed.\n+          Beginning with version 0.94 you can skip the generation of\n+          font metric files and remove the \"font-metrics\" attribute\n+          in the font configuration. The font metrics files are, for\n+          the moment, still required if you use a TrueType Collection (*.ttc)\n+          and in that case you need to regenerate the font metrics file\n+          if yours are from a FOP version before 0.93.\n         </li>\n         <li>\n           <p>\n@@ -76,36 +78,28 @@\n         </li>\n         <li>\n           Extensions and Renderers written for version 0.20.5 will not work with the new code! The new FOP \n-          extension for <a href=\"http://barcode4j.krysalis.org\">Barcode4J</a> will be available in \n+          extension for <a href=\"http://barcode4j.krysalis.org\">Barcode4J</a> is available since \n           January 2007.\n         </li>\n         <li>\n-          The PCL Renderer and the MIF Handler have not been resurrected, yet! They are currently non-functional\n+          The SVG Renderer and the MIF Handler have not been resurrected, yet! They are currently non-functional\n           and hope for someone to step up and reimplement them.\n         </li>\n-        <li>\n-          By looking at the <a href=\"../compliance.html\">Compliance page</a> you might get the impression\n-          that the new code is much more advanced than version 0.20.5. That's true but there may still\n-          be a few things that may not be handled as gracefully by the new code as by version 0.20.5.\n-        </li>\n       </ul>\n     </section>\n     <section id=\"issues\">\n       <title>What you need to know when you upgrade!</title>\n       <p>\n         When you use your existing FO files or XML/XSL files which work fine with FOP version\n         0.20.5 against this FOP version some things may not work as expected. The following\n-        list will hopefully help you to identify and correct those problems.\n+        list will hopefully help you to identify and correct those problems. This does not mean\n+        that the new FOP is at fault. Quite the opposite actually! See below:\n       </p>\n       <ul>\n         <li>\n           Check the <a href=\"../compliance.html\">Compliance page</a> for the feature causing\n           trouble. It may contain the necessary information to understand and resolve the problem.\n         </li>\n-        <li>\n-          Not all 0.20.5 output formats are supported. PDF and Postscript should be fully supported.\n-          See <a href=\"output.html\">Output Targets</a> for a more complete description.\n-        </li>\n         <li>\n           As stated above empty table cells <code>&lt;fo:table-cell&gt;&lt;/fo:table-cell&gt;</code>\n           are not allowed by the specification. The same applies to empty <code>static-content</code>\n@@ -123,12 +117,8 @@\n         </li>\n         <li>\n           The <code>fox:outline</code> extension is not implemented in this version anymore. \n-          It has been superseded by the new bookmark elements from XSL-FO 1.1.\n-        </li>\n-        <li>\n-          The <code>fox:destination</code> extension is also not implemented in this version\n-          although it may be added in the future. See also\n-          <a href=\"http://issues.apache.org/bugzilla/show_bug.cgi?id=37157\">Bug 37157</a>.\n+          It has been superseded by the new bookmark elements from XSL-FO 1.1. So please\n+          update your stylesheets accordingly.\n         </li>\n       </ul>\n     </section>",
                "previous_filename": "src/documentation/content/xdocs/0.93/upgrading.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/0.95/upgrading.xml",
                "sha": "77925fbf886a8db4abc91aa9535bd83e7c3a50d2",
                "status": "renamed"
            },
            {
                "additions": 7161,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/compliance.ihtml",
                "changes": 12770,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/compliance.ihtml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5609,
                "filename": "src/documentation/content/xdocs/compliance.ihtml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/compliance.ihtml",
                "sha": "2b25b89d7b323d323b728ce58a030a368f3448b8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/dev/doc.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/dev/doc.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/documentation/content/xdocs/dev/doc.xml",
                "patch": "@@ -97,9 +97,9 @@ Maintenance branch releases either copy the trunk content to the maintenance bra\n           Step-by-step instructions for the deployment process again:\n         </p>\n         <note>\n-          Please make sure you use Forrest from the 0.7 branch for the time being. You will need\n+          Please make sure you use Forrest from the Trunk (revision 632959 or later) for the time being. You will need\n           to download it directly from SVN:\n-          <link href=\"http://svn.apache.org/repos/asf/forrest/branches/forrest_07_branch\">http://svn.apache.org/repos/asf/forrest/branches/forrest_07_branch</link>\n+          <link href=\"http://svn.apache.org/repos/asf/forrest/trunk\">http://svn.apache.org/repos/asf/forrest/trunk</link>\n         </note>\n         <ul>\n           <li>Modify the sources of the website and check locally with Forrest (run \"forrest run\" or just \"forrest\").</li>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/dev/doc.xml",
                "sha": "4fd6bce78b62e20e8568626a14d1d55f9616c295",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/dev/release.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/dev/release.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/dev/release.xml",
                "patch": "@@ -73,7 +73,7 @@ The purpose of documenting it here is to facilitate consistency, ensure that the\n         <code>fop-hyph.jar</code> to lib/ (e.g. from\n         <code>http://sourceforge.net/projects/offo</code></li>\n         <li>Alternatively, create a build-local.properties file that points to the above libs.</li>\n-        <li>Run build[.sh] dist. Do this once using Sun JDK 1.3.1_15 or later and once with Sun JDK 1.4.2_08 or later. A Forrest installation is needed.</li>\n+        <li>Run build[.sh] dist. Do this using Sun JDK 1.4.2_08 or later. A Forrest installation is needed.</li>\n         <li>Create signatures. Don't forget to upload your KEY:\n           <code>gpg -a -b --force-v3-sigs fop-0.94-src.tar.gz</code> etc.</li>\n         <li>Upload the dist and signature files to your web directory",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/dev/release.xml",
                "sha": "641758d781475846da6ce592f515929eada3b9dd",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/download.xml",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/download.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/download.xml",
                "patch": "@@ -84,7 +84,7 @@\n       <p/>\n       <table>\n         <tr>\n-          <th colspan=\"2\">Latest Release</th>\n+          <th colspan=\"2\">Latest Stable Release</th>\n         </tr>\n         <tr>\n           <td>Repository URL</td>\n@@ -102,6 +102,25 @@\n             </link>\n           </td>\n         </tr>\n+        <tr>\n+          <th colspan=\"2\">Latest Release</th>\n+        </tr>\n+        <tr>\n+          <td>Repository URL</td>\n+          <td>\n+            <link href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-0_95beta/\">\n+              <code>http://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-0_95beta/</code>\n+            </link>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td>Web view</td>\n+          <td>\n+            <link href=\"http://svn.apache.org/viewvc/xmlgraphics/fop/tags/fop-0_95beta/\">\n+              <code>http://svn.apache.org/viewvc/xmlgraphics/fop/tags/fop-0_95beta/</code>\n+            </link>\n+          </td>\n+        </tr>\n         <tr>\n           <th colspan=\"2\">Trunk</th>\n         </tr>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/download.xml",
                "sha": "f0a2a0a61ed618b58ce066ca6b8bceb0e26a4730",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/faq.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/faq.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/faq.xml",
                "patch": "@@ -645,6 +645,21 @@ Check the following:</p>\n         </p>\n       </answer>\n     </faq>\n+    <faq id=\"pdf-ps-java2d-differences\">\n+      <question>Why is the output of Java2D/AWT-based renderers different than, for example, PDF or PS?</question>\n+      <answer>\n+        <p>\n+          If you render the same document once to a PNG or TIFF and once into a PDF, the output\n+          may not be the same, i.e. line breaks are different or lines may have different heights.\n+          The reason for this: The Java2D-based renderers use the font subsystem of Java2D/AWT. The\n+          PDF and PS renderers use FOP's own font subsystem which provides much better font metrics\n+          than Java2D. These can lead to different layout decisions when the same document is\n+          rendered with different renderers. An alternative approach to fix this problem might be\n+          available but it hasn't been tested, yet. See also the\n+          <link href=\"0.95/output.html#general-fonts\">notes on fonts in the various output formats</link>.\n+        </p>\n+      </answer>\n+    </faq>\n   </part>\n   <part id=\"part-embedding\">\n     <title>Embedding FOP. Using FOP in a servlet.</title>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/faq.xml",
                "sha": "a75cd41e05cc77f86e5195122a2d68e3bacc77cf",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/index.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/index.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/index.xml",
                "patch": "@@ -29,14 +29,15 @@\n       <p>Apache FOP (Formatting Objects Processor) is a print formatter driven by XSL\n         formatting objects (XSL-FO) and an output independent formatter. It is a Java\n         application that reads a formatting object (FO) tree and renders the resulting\n-        pages to a specified output. <link href=\"0.94/output.html\">Output formats</link>\n+        pages to a specified output. <link href=\"0.95/output.html\">Output formats</link>\n         currently supported include PDF, PS, PCL, AFP, XML (area tree representation),\n         Print, AWT and PNG, and to a lesser extent, RTF and TXT. The primary output target is PDF.\n       </p>\n         <figure width=\"480\" height=\"260\" src=\"images/document.jpg\" alt=\"Render Diagram\" />\n     <p>\n-      The latest stable version of FOP (<link href=\"0.94/\">0.94</link>) is the second\n-      stable release after a large redesign effort and implements a large subset of the\n+      A beta release of the latest version of FOP (<link href=\"0.95/\">0.95</link>) is now\n+      available. After a short testing period it will become the third\n+      stable release after the large redesign effort and will implement a large subset of the\n       <link href=\"http://www.w3.org/TR/xsl11/\">XSL-FO Version 1.1 W3C\n         Recommendation</link>.\n     </p>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/index.xml",
                "sha": "9ed040184f7038bc61270f8463647f4a5e2fa0d3",
                "status": "modified"
            },
            {
                "additions": 124,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/quickstartguide.xml",
                "changes": 124,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/quickstartguide.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/quickstartguide.xml",
                "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id: gethelp.xml 627324 2008-02-13 09:35:01Z maxberger $ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V1.3//EN\" \"http://forrest.apache.org/dtd/document-v13.dtd\">\n+<document>\n+  <header>\n+    <title>FOP: Quick Start Guide</title>\n+    <subtitle>Everything you need to start using and appreciating Apache FOP quickly.</subtitle>\n+    <version>$Revision: 627324 $</version>\n+  </header>\n+  <body>\n+    <section id=\"essentials\">\n+      <title>FOP Essentials</title>\n+      <p>The goal of this <strong>Quick Start Guide</strong> is to help novice users get Apache FOP up and running quickly. Typically, you'll need to:</p>\n+      <ol>\n+        <li><link href=\"download.html\">Download FOP</link></li>\n+        <li><link href=\"0.95/compiling.html\">Build FOP</link> (you can skip this step if you download the binary distribution!)</li>\n+        <li><link href=\"0.95/configuration.html\">Configure FOP</link></li>\n+        <li><link href=\"0.95/running.html\">Run FOP</link></li>\n+      </ol>\n+      <p>Here are some links to help you find out what FOP can do, as well as how and where to get help:</p>\n+      <ul>\n+        <li><link href=\"0.95/embedding.html\">Calling FOP from a Java Application</link></li>\n+        <li><link href=\"0.95/servlets.html\">Using FOP in Servlets</link></li>\n+        <li><link href=\"0.95/anttask.html\">Using FOP in an 'Ant' Build Script</link></li>\n+        <li><link href=\"compliance.html\" title=\"FOP Compliance\">XSL-FO Compliance</link> (what FOP supports and what it doesn't)</li>\n+        <li><link href=\"faq.html\">FAQs</link></li>\n+        <li><link href=\"gethelp.html\">Getting Help</link></li>\n+        <li><link href=\"maillist.html\">Mailing Lists</link></li>\n+      </ul>\n+      <p>\n+        Once you've familiarized yourself with the basics, you can get more detailed information,\n+        in the detailed FOP <link href=\"0.95/index.html\">product documentation</link>.\n+      </p>\n+    </section>\n+    \n+    <section id=\"hello-world\">\n+      <title>Hello World with FOP</title>\n+      <p>\n+        This section walks you through a \"Hello World!\" page with Apache FOP. We're assuming you\n+        download the binary distribution and that you have a Java Runtime Environment (version 1.4\n+        or later) installed.\n+      </p>\n+      <ol>\n+        <li>\n+          Unpack the downloaded binary distribution to a directory of your choice (for example,\n+          <code>C:\\FOP</code> if you're on Windows). Let's call that\n+          directory &lt;fop-home&gt;.\n+        </li>\n+        <li>\n+          Get a command prompt in the &lt;fop-home&gt; directory and write:<br/>\n+          Windows: <code>fop -fo examples/fo/basic/readme.fo -awt</code><br/>\n+          Unix: <code>./fop.sh -fo examples/fo/basic/readme.fo -awt</code><br/>\n+        </li>\n+        <li>\n+          If all went well, this should open a window showing you a \"readme\"-style document.\n+          This is just to verify that FOP runs correctly.\n+        </li>\n+        <li>\n+          Now, take your favorite XML editor and create a small XML file like the following. Replace\n+          \"Frank\" with your own first name to make it a bit more personal and save it as\n+          <code>name.xml</code>:<br/>\n+          <source><![CDATA[<name>Frank</name>]]></source>\n+        </li>\n+        <li>\n+          To produce a PDF file from this XML file, we need an XSLT stylesheet that converts the\n+          XML to XSL-FO. This is the first step in the processing chain. The second step will be\n+          done by FOP when it reads the generated XSL-FO document and formats it to a PDF document.\n+          You can copy the following minimal XSLT stylesheet, which takes your first name and\n+          produces a \"Hello World!\"-style document (save it as <code>name2fo.xsl</code>):<br/>\n+          <source><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<xsl:stylesheet version=\"1.0\"\n+      xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+      xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n+  <xsl:output method=\"xml\" indent=\"yes\"/>\n+  <xsl:template match=\"/\">\n+    <fo:root>\n+      <fo:layout-master-set>\n+        <fo:simple-page-master master-name=\"A4-portrait\"\n+              page-height=\"29.7cm\" page-width=\"21.0cm\" margin=\"2cm\">\n+          <fo:region-body/>\n+        </fo:simple-page-master>\n+      </fo:layout-master-set>\n+      <fo:page-sequence master-reference=\"A4-portrait\">\n+        <fo:flow flow-name=\"xsl-region-body\">\n+          <fo:block>\n+            Hello, <xsl:value-of select=\"name\"/>!\n+          </fo:block>\n+        </fo:flow>\n+      </fo:page-sequence>\n+    </fo:root>\n+  </xsl:template>\n+</xsl:stylesheet>]]></source>\n+          \n+        </li>\n+        <li>\n+          Finally, let's put the previous two steps together: Go back to the command prompt and\n+          enter the following command:<br/>\n+          Windows: <code>fop -xml name.xml -xsl name2fo.xsl -pdf name.pdf</code><br/>\n+          Unix: <code>./fop.sh -xml name.xml -xsl name2fo.xsl -pdf name.pdf</code><br/>\n+        </li>\n+        <li>\n+          You've produced your first PDF with Apache FOP! Please open <code>name.pdf</code>\n+          in your favorite PDF viewer.\n+        </li>\n+      </ol>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/quickstartguide.xml",
                "sha": "ca205f5a243a80c01459ba3c37c40b33614c2a2b",
                "status": "added"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/site.xml",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/site.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 12,
                "filename": "src/documentation/content/xdocs/site.xml",
                "patch": "@@ -15,13 +15,15 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n+<!-- $Id$ -->\n <site label=\"FOP\" href=\"\" xmlns=\"http://apache.org/forrest/linkmap/1.0\" tab=\"home\">\n   <!--\n   BEGIN Home tab\n   -->\n   <about label=\"About\">\n     <index label=\"Introduction\" href=\"index.html\"/>\n     <download label=\"Download\" href=\"download.html\"/>\n+    <quickstartguide label=\"Quick Start Guide\" href=\"quickstartguide.html\"/>\n     <compliance label=\"Compliance\" href=\"compliance.html\" description=\"FOP Compliance\"/>\n     <help label=\"Getting Help\" href=\"gethelp.html\"/>\n     <faqs label=\"FAQs\" href=\"faq.html\"/>\n@@ -34,7 +36,6 @@\n     <all_sitePDF label=\"Full PDF\" href=\"wholesite.pdf\"/>\n     -->\n   </about>\n-   \n \n   <resources label=\"Resources\">\n     <xsl-fo label=\"XSL-FO\" href=\"fo.html\"/>\n@@ -57,12 +58,12 @@\n   -->\n \n   <!--\n-  BEGIN Version 0.93 documentation tab\n+  BEGIN Version 0.94 documentation tab\n   -->\n-  <trunk label=\"FOP 0.93\" href=\"0.93/\" tab=\"oldstableversion\">\n+  <trunk label=\"FOP 0.94\" href=\"0.94/\" tab=\"previousversion\">\n     <about label=\"About\" href=\"index.html\"/>\n-    <release label=\"Release Notes\" href=\"releaseNotes_0.93.html\"/>\n-    <changes label=\"Changes\" href=\"changes_0.93.html\"/>\n+    <release label=\"Release Notes\" href=\"releaseNotes_0.94.html\"/>\n+    <changes label=\"Changes\" href=\"changes_0.94.html\"/>\n     <knownissues label=\"Known Issues\" href=\"knownissues_overview.html\"/>\n     <upgrading label=\"Upgrading\" href=\"upgrading.html\"/>\n     \n@@ -89,16 +90,16 @@\n     \n   </trunk>\n   <!--\n-  END Version 0.93 documentation tab\n+  END Version 0.94 documentation tab\n   -->\n   \n   <!--\n-  BEGIN Version 0.94 documentation tab\n+  BEGIN Version 0.95 documentation tab\n   -->\n-  <trunk label=\"FOP 0.94\" href=\"0.94/\" tab=\"stableversion\">\n+  <trunk label=\"FOP 0.95beta\" href=\"0.95/\" tab=\"stableversion\">\n     <about label=\"About\" href=\"index.html\"/>\n-    <release label=\"Release Notes\" href=\"releaseNotes_0.94.html\"/>\n-    <changes label=\"Changes\" href=\"changes_0.94.html\"/>\n+    <release label=\"Release Notes\" href=\"releaseNotes_0.95beta.html\"/>\n+    <changes label=\"Changes\" href=\"changes_0.95beta.html\"/>\n     <knownissues label=\"Known Issues\" href=\"knownissues_overview.html\"/>\n     <upgrading label=\"Upgrading\" href=\"upgrading.html\"/>\n     \n@@ -125,9 +126,9 @@\n     \n   </trunk>\n   <!--\n-  END Version 0.94 documentation tab\n+  END Version 0.95 documentation tab\n   -->\n-  \n+\n   <!--\n   BEGIN Trunk documentation tab\n   -->",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/site.xml",
                "sha": "18716903c33f7c61c6dede520b718b511f9994db",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/status.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/status.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/documentation/content/xdocs/status.xml",
                "patch": "@@ -27,13 +27,13 @@\n   <body>\n     <section>\n       <title>Status</title>\n-      <p>[last updated 9 January 2007]</p>\n+      <p>[last updated 4 March 2008]</p>\n       <figure width=\"585\" height=\"175\" src=\"images/track.png\" alt=\"Planning and branches of FOP development\"/>\n       <p>\n         This is the development status of Apache FOP. Development on\n         the maintenance branch where FOP 0.20.5 came from has been\n         halted. The code base has been largely redesigned. The new\n-        code base has reached release 0.94.\n+        code base has reached release 0.95.\n       </p>\n     </section>\n     <section>\n@@ -44,7 +44,7 @@\n         handle large documents.</p>\n       <p>The redesign of the code base has largely been completed. The\n         new code reached production quality with release 0.93. In the\n-        course of 2007 we plan to release version 1.0.</p>\n+        course of 2008 or 2009 we hope to release version 1.0.</p>\n       <p>\n         If you're looking for a long-term road-map we have to disappoint you. This is Open\n         Source and we're mostly volunteers working in their free time. What we have\n@@ -122,7 +122,7 @@\n           </tr>\n           <tr>\n             <td>Image Support</td>\n-            <td>stable, but in need of a redesign</td>\n+            <td>beta (recently rewritten)</td>\n           </tr>\n           <tr>\n             <td>Hyphenation Subsystem</td>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/status.xml",
                "sha": "fa3e2e6439e8edd2a3dc7ed468fef0be5af868f1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/tabs.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/tabs.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/documentation/content/xdocs/tabs.xml",
                "patch": "@@ -21,14 +21,8 @@\n     \n <tabs software=\"FOP\" title=\"FOP\" copyright=\"@year@ The Apache Software Foundation\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n   <tab label=\"Home\" dir=\"\"/>\n-  <tab label=\"Version 0.93\" dir=\"0.93/\"/>\n   <tab label=\"Version 0.94\" dir=\"0.94/\"/>\n+  <tab label=\"Version 0.95beta\" dir=\"0.95/\"/>\n   <tab label=\"FOP Trunk\" dir=\"trunk/\"/>\n   <tab label=\"Development\" dir=\"dev/\"/>\n-  <!--\n-  <tab label=\"Design\" dir=\"design/\"/>\n-  -->\n-  <!--\n-  <tab label=\"Alt Design\" dir=\"design/alt.design/\"/>\n-  -->\n </tabs>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/tabs.xml",
                "sha": "a42fc9bd715cfd755ca8f7cc3d9b1216f542e945",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/team.xml",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/team.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/documentation/content/xdocs/team.xml",
                "patch": "@@ -31,7 +31,6 @@\n       <title>Active Committers</title>\n       <note label=\"Important\">Please don't write to any developer directly if you need help on using FOP. Only if you submit questions to the <link href=\"maillist.html#fop-user\">FOP User Mailing List</link> will other FOP users be able to profit from answers given to your question. Another point is that a developer may have gone inactive or is on holidays in which case you may not get an answer in time.</note>\n       <ul>\n-        <li id=\"fb\"><link href=\"mailto:bckfnn@worldonline.dk\">Finn Bock</link> (FB)</li>\n         <li id=\"cb\"><link href=\"mailto:bowditch_chris@hotmail.com\">Chris Bowditch</link> (CB)\n             is a Java/VB Programmer from England.</li>\n         <li id=\"jb\"><link href=\"mailto:jay@bryantcs.com\">Jay Bryant</link> (JB) is a\n@@ -51,10 +50,6 @@\n         <li id=\"vh\"><link href=\"mailto:vhennebert@apache.org\">Vincent Hennebert</link>\n           (VH), a Java developer from France; with an interest in typography, and in using\n           Fop as a pdf renderer for book-like documents.</li>\n-        <li id=\"ph\"><link href=\"mailto:pherweg@web.de\">Peter Herweg</link> (PH) is helping to \n-            integrate the jfor project's RTF support into the upcoming FOP 1.0 version.\n-            Born in 1978, he has been serving as an application developer for a small \n-            industrial company in Germany since 1999.</li>\n         <li id=\"cl\"><link href=\"mailto:clay@apache.org\">Clay Leeds</link> (CL)\n           is a web/WAP/Palm developer from Laguna Beach, California, USA. A \n           recent XML/XSL-FO convert, he has been nit-picking FAQs &amp; assorted web \n@@ -78,7 +73,11 @@\n             from the TeX/LaTeX world. See his <fork href=\"http://www.leverkruid.eu\">home\n             page</fork> for some of his private projects.</li>\n         <li id=\"jp\"><link href=\"mailto:pietsch@apache.org\">J&#x00F6;rg Pietschmann</link> (JP)</li>\n-        <li id=\"ot\"><link href=\"mailto:olegt@apache.org\">Oleg Tkachenko</link> (OT)</li>\n+        <li id=\"mb\"><link href=\"mailto:max AT berger DOT name\">Max Berger</link> (MB) is currently a\n+          PostDoc pursuing an academic career in computer science. His main interest in FOP is to\n+          improve the DocBook to PDF tool-chain to produce high quality output, while still\n+          conforming to given style-guides. See his <link href=\"http://max.berger.name\">home\n+            page</link> for more information.</li>\n         <li id=\"mb\"><link href=\"mailto:max AT berger DOT name\">Max Berger</link> (MB) is currently a\n           PostDoc pursuing an academic career in computer science. His main interest in FOP is to\n           improve the DocBook to PDF tool-chain to produce high quality output, while still\n@@ -109,11 +108,16 @@\n     <section id=\"commit-inactive\">\n       <title>Inactive Committers</title>\n       <ul>\n+        <li id=\"fb\"><link href=\"mailto:bckfnn@worldonline.dk\">Finn Bock</link> (FB)</li>\n         <li id=\"kc\"><link href=\"mailto:kellyc@apache.org\">Kelly Campbell</link></li>\n         <li id=\"sc\"><link href=\"mailto:gears@apache.org\">Steven Coffman</link></li>\n         <li id=\"bd\"><link href=\"mailto:bdelacretaz@apache.org\">Bertrand Delacretaz</link></li>\n         <li id=\"te\"><link href=\"mailto:tore@apache.org\">Tore Engvig</link></li>\n         <li id=\"sg\"><link href=\"mailto:stanislav@apache.org\">Stanislav Gorkhover</link></li>\n+        <li id=\"ph\"><link href=\"mailto:pherweg@web.de\">Peter Herweg</link> (PH)<!-- is helping to \n+          integrate the jfor project's RTF support into the upcoming FOP 1.0 version.\n+          Born in 1978, he has been serving as an application developer for a small \n+          industrial company in Germany since 1999.--></li>\n         <li id=\"fj\"><link href=\"mailto:fotis@apache.org\">Fotis Jannidis</link></li>\n         <li id=\"kl\"><link href=\"mailto:klease@apache.org\">Karen Lease</link></li>\n         <li id=\"kll\"><link href=\"mailto:keiron@apache.org\">Keiron Liddle</link></li>\n@@ -122,6 +126,7 @@\n         <li id=\"jn\"><link href=\"mailto:jordan@apache.org\">Jordan Naftolin</link></li>\n         <li id=\"as\"><link href=\"mailto:arved@apache.org\">Arved Sandstrom</link></li>\n         <li id=\"es\"><link href=\"mailto:eschaeffer@apache.org\">Eric Schaeffer</link></li>\n+        <li id=\"ot\"><link href=\"mailto:olegt@apache.org\">Oleg Tkachenko</link> (OT)</li>\n         <li id=\"aw\"><link href=\"mailto:artw@apache.org\">Art Welch</link></li>\n         <li id=\"pbw\"><link href=\"mailto:pbwest@apache.org\">Peter B. West</link></li>\n       </ul>\n@@ -264,7 +269,7 @@\n           <td/>\n           <td/>\n           <td/>\n-          <td/>\n+          <td>X</td>\n           <td/>\n           <td/>\n           <td/>\n@@ -298,6 +303,19 @@\n           <td/>\n           <td/>\n         </tr>\n+        <tr>\n+          <td>AFP</td>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+        </tr>\n         <tr>\n           <td>Forrest</td>\n           <td/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/team.xml",
                "sha": "bd9f72fdeb41867fcbd74fcc74b07eb78e8a39a8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/compiling.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/compiling.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/documentation/content/xdocs/trunk/compiling.xml",
                "patch": "@@ -41,7 +41,7 @@\n       <section id=\"env-jdk\">\n         <title>JDK</title>\n         <p>\n-          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.3\n+          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.4\n           (A Java Runtime Environment is not sufficient).\n         </p>\n       </section>\n@@ -59,7 +59,7 @@\n         <p>\n           The build script uses <a href=\"ext:ant\">Apache Ant</a>, a popular \n           Java-based build tool, which usually requires that the environment variable JAVA_HOME point to \n-          your local JDK root directory. This is true even if you use JDK 1.3 or above, which normally \n+          your local JDK root directory. This is true even if you use JDK 1.4 or above, which normally \n           does not need this setting.\n         </p>\n       </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/compiling.xml",
                "sha": "57761429f6e42ce5642968013acf3f88accc1054",
                "status": "modified"
            },
            {
                "additions": 136,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/fonts.xml",
                "changes": 210,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/fonts.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 74,
                "filename": "src/documentation/content/xdocs/trunk/fonts.xml",
                "patch": "@@ -31,11 +31,6 @@\n   <body>\n     <section id=\"intro\">\n       <title>Summary</title>\n-      <note>The FOP Font subsystem is currently undergoing a significant change.\n-        The details provided here especially related to the generation of FOP Font\n-        Metrics files and the FOP Font configuration are likely to change substantially\n-        in the future.\n-      </note>\n       <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n       <table>\n         <tr>\n@@ -59,22 +54,22 @@\n           <td>yes</td>\n           <td>yes</td>\n         </tr>\n-        <!--tr> NOT AVAILABLE YET!!!\n+        <tr>\n           <td>PCL</td>\n           <td>yes (modified)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>yes (painted as bitmaps)</td>\n           <td>no</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr-->\n+        </tr>\n         <tr>\n-          <td>TXT</td>\n-          <td>yes (used for layout but not for output)</td>\n+          <td>AFP</td>\n           <td>no</td>\n-          <td>yes (used for layout but not for output)</td>\n           <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n         </tr>\n         <tr>\n-          <td>AWT</td>\n+          <td>Java2D/AWT/Bitmap</td>\n           <td>if available from OS</td>\n           <td>yes</td>\n           <td>yes</td>\n@@ -95,19 +90,26 @@\n           <td>n/a</td>\n         </tr>\n         <tr>\n+          <td>TXT</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+        </tr>\n+        <!--tr> NOT AVAILABLE\n           <td>MIF</td>\n           <td>n/a (font metrics not needed)</td>\n           <td>n/a</td>\n           <td>n/a</td>\n           <td>n/a</td>\n-        </tr>\n-        <tr>\n+        </tr-->\n+        <!--tr> NOT AVAILABLE\n           <td>SVG</td>\n           <td>if available from OS</td>\n           <td>yes</td>\n           <td>no</td>\n           <td>no</td>\n-        </tr>\n+        </tr-->\n         <tr>\n           <td>XML</td>\n           <td>yes</td>\n@@ -120,8 +122,8 @@\n     <section>\n       <title>Base-14 Fonts</title>\n       <p>\n-        The Adobe PDF Specification specifies a set of 14 fonts that must be\n-        available to every PDF reader:\n+        The Adobe PostScript and PDF Specification specify a set of 14 fonts that must be\n+        available to every PostScript interpreter and PDF reader:\n         Helvetica (normal, bold, italic, bold italic),\n         Times (normal, bold, italic, bold italic),\n         Courier (normal, bold, italic, bold italic),\n@@ -147,73 +149,132 @@\n       </p>\n     </section>\n     <section id=\"awt\">\n-      <title>AWT/Operating System Fonts</title>\n-      <p>The AWT family of renderers (AWT, Print, SVG), use the Java AWT libraries for font metric information. Through operating system registration, the AWT libraries know what fonts are available on the system, and the font metrics for each one.</p>\n+      <title>Java2D/AWT/Operating System Fonts</title>\n+      <p>\n+        The Java2D family of renderers (Java2D, AWT, Print, TIFF, PNG), use the\n+        Java AWT subsystem for font metric information. Through operating system\n+        registration, the AWT subsystem knows what fonts are available on the system,\n+        and the font metrics for each one.\n+      </p>\n+      <p>\n+        When working with one of these output formats and you're missing a font, just\n+        install it in your operating system and they should be available for these\n+        renderers. Please note that this is not true for other output formats such as\n+        PDF or PostScript.\n+      </p>\n     </section>\n+    \n     <section id=\"custom\">\n       <title>Custom Fonts</title>\n-      <p>Support for custom fonts is added by creating font metric files (written in XML) from the actual font files, and registering them with FOP. Currently only Type 1 and TrueType fonts can be added.\n-More information about fonts can be found at:</p>\n+      <p>\n+        Support for custom fonts is highly output format dependent (see above table).\n+        This section shows how to add Type 1 and TrueType fonts to the PDF, PostScript and\n+        Java2D-based renderers. Other renderers (like AFP) support other font formats. Details\n+        in this case can be found on the page about <a href=\"output.html\">output formats</a>.\n+      </p>\n+      <p>\n+        Prior to FOP version 0.94, it was always necessary to create an XML font metrics file\n+        if you wanted to add a custom font. This unconvenient step has been removed and in\n+        addition to that, FOP supports auto-registration of fonts, i.e. FOP can find fonts\n+        installed in your operating system or can scan user-specified directories for fonts.\n+        Font registration via XML font metrics file is still supported and is still necessary\n+        if you want to use a TrueType Collection (*.ttc). Direct support for TrueType\n+        collections may be added later. Furthermore, the XML font metrics files are still\n+        required if you don't want to embed, but only reference a font.\n+      </p>\n+      <p>\n+        Basic information about fonts can be found at:\n+      </p>\n       <ul>\n         <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n         <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a></li>\n       </ul>\n+    </section>\n+    \n+    <section id=\"basics\">\n+      <title>Basic font configuration</title>\n+      <p>\n+        If you want FOP to use custom fonts, you need to tell it where to find them. This\n+        is done in the configuration file and once per renderer (because each output format\n+        is a little different). In the basic form, you can either tell FOP to find your\n+        operating system fonts or you can specify directories that it will search for\n+        support fonts. These fonts will then automatically be registered.\n+      </p>\n+      <source><![CDATA[\n+<fonts>\n+  <!-- register all the fonts found in a directory -->\n+  <directory>C:\\MyFonts1</directory>\n+  \n+  <!-- register all the fonts found in a directory\n+       and all of its sub directories (use with care) -->\n+  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+  <!-- automatically detect operating system installed fonts -->\n+  <auto-detect/>  \n+</fonts>]]></source>\n+      <note>\n+        Review the documentation for <a href=\"configuration.html\">FOP Configuration</a>\n+        for instructions on making the FOP configuration available to FOP when it runs.\n+        Otherwise, FOP has no way of finding your custom font information. It is currently\n+        not possible to easily configure fonts from Java code.\n+      </note>\n+    </section>\n+    \n+    <section id=\"advanced\">\n+      <title>Advanced font configuration</title>\n+      <p>\n+        The instructions found above should be sufficient for most users. Below are some\n+        additional instructions in case the basic font configuration doesn't lead to\n+        the desired results.\n+      </p>\n       <section id=\"type1-metrics\">\n         <title>Type 1 Font Metrics</title>\n         <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n-To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n-        <p>Windows (on JDK 1.4 and later):</p>\n+          To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n+        <p>Windows:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Windows (on JDK 1.3.x):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar;lib\\xml-apis.jar;\n-         lib\\xercesImpl.jar;lib\\xalan.jar;lib\\serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.4 and later):</p>\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>Unix:</p>\n         <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.3.1):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar:lib/xml-apis.jar:\n-         lib/xercesImpl.jar:lib/xalan.jar:lib/serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n         <p>PFMReader [options]:</p>\n         <ul>\n           <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n-.pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n-chosen. This may be useful in some cases to ensure that applications using the output document\n-(Acrobat Reader for example) use the embedded font instead of a local font with the same\n-name.</li>\n+            .pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n+            chosen. This may be useful in some cases to ensure that applications using the output document\n+            (Acrobat Reader for example) use the embedded font instead of a local font with the same\n+            name.</li>\n         </ul>\n         <note>The classpath in the above example has been simplified for readability.\n-You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n-xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n+          You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n+          xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n         <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n-FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n-The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n-The constructed values however appear to have no visible influence.</note>\n+          FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n+          The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n+          The constructed values however appear to have no visible influence.</note>\n       </section>\n       <section id=\"truetype-metrics\">\n         <title>TrueType Font Metrics</title>\n         <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n-Use it in a similar manner to PFMReader.\n-For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n+          Use it in a similar manner to PFMReader.\n+          For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader [options]\n-             C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n+          org.apache.fop.fonts.apps.TTFReader [options]\n+          C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n         <p>TTFReader [options]:</p>\n         <ul>\n           <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n-INFO).</li>\n+            INFO).</li>\n           <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n           <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n-TrueType Collection (.ttc file) you must specify which font from the collection you will read\n-metrics from.\n-If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n+            TrueType Collection (.ttc file) you must specify which font from the collection you will read\n+            metrics from.\n+            If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n           <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n-Without this option, a CID-keyed font metrics file is created.\n-The table below summarizes the differences between these two encoding options as currently\n-used within FOP.\n-Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n+            Without this option, a CID-keyed font metrics file is created.\n+            The table below summarizes the differences between these two encoding options as currently\n+            used within FOP.\n+            Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n         </ul>\n         <table id=\"ttf-encoding\">\n           <tr>\n@@ -240,13 +301,13 @@ Please note that this information only applies to TrueType fonts and TrueType co\n       <section id=\"truetype-collections-metrics\">\n         <title>TrueType Collections Font Metrics</title>\n         <p>TrueType collections (.ttc files) contain more than one font.\n-To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n+          To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n         <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n-It will display all of the font names and exit with an Exception.</p>\n+          It will display all of the font names and exit with an Exception.</p>\n         <p>Here is an example of generating a metrics file for a .ttc file:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n-             msmincho.ttc msminch.xml</source>\n+          org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n+          msmincho.ttc msminch.xml</source>\n       </section>\n       <section id=\"register\">\n         <title>Register Fonts with FOP</title>\n@@ -269,16 +330,16 @@ It will display all of the font names and exit with an Exception.</p>\n   <!-- automatically detect operating system installed fonts -->\n   <auto-detect/>  \n </fonts>]]></source>\n-        <note>Review the documentation for <a href=\"configuration.html\">FOP Configuration</a> for instructions on making the FOP configuration available to FOP when it runs. Otherwise, FOP has no way of finding your custom font information.</note>\n         <ul>\n           <li>\n             URLs are used to access the font metric and font files.\n             Relative URLs are resolved relative to the font-base property (or base) if available.\n             See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n           </li>\n+          <li>The \"metrics-url\" attribute is generally not necessary except if you run into problems with certain fonts.</li>\n           <li>Either an \"embed-url\" or a \"metrics-url\" must be specified for font tag configurations.</li>\n-          <li>The font \"kerning\" attribute is optional.</li>\n-          <li>If embedding is off, the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n+          <li>The font \"kerning\" attribute is optional. Default is \"true\".</li>\n+          <li>If embedding is off (i.e. embed-url is not set), the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n           <li>When setting the \"embed-url\" attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n           <li>The fonts \"directory\" tag can be used to register fonts contained within a single or list of directory paths.  The \"recursive\" attribute can be specified to recursively add fonts from all sub directories.</li>\n           <li>The fonts \"auto-detect\" tag can be used to automatically register fonts that are found to be installed on the native operating system.</li>\n@@ -294,37 +355,38 @@ It will display all of the font names and exit with an Exception.</p>\n       </section>\n       <section id=\"autodetect\">\n         <title>Auto-Detect and auto-embedd feature</title>\n-      <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n-      <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n-      <source>Manifest-Version: 1.0\n-\n-Name: font/myfont.ttf\n-Content-Type: application/x-font</source>\n-      <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n+        <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n+        <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n+        <source>Manifest-Version: 1.0\n+          \n+          Name: font/myfont.ttf\n+          Content-Type: application/x-font</source>\n+        <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n       </section>\n       <section id=\"embedding\">\n         <title>Embedding</title>\n         <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n         <note>The font is simply embedded into the PDF file, it is not converted.</note>\n         <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n-If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n+          If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n         <warning>\n           Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n           PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n           the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n         </warning>\n         <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n-This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n+          This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n         <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n         <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the\n           original font, containing only the glyphs used, is embedded in the output document.</p>\n       </section>\n+      <!-- The following section should no longer be required\n       <section id=\"embedding-base14\">\n         <title>Explicitly embedding the base 14 fonts</title>\n         <p>\n           There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n           can normally be considered available on the target platform (viewer, printer). One of these cases is\n-          PDF/A which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n+          <a href=\"pdfa.html\">PDF/A</a> which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n           Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n           problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n           the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n@@ -342,7 +404,7 @@ This is helpful with older versions of Acrobat Reader that preferred installed f\n   <cap-height>673</cap-height>\n   <x-height>766</x-height>\n   [..]]]></source>\n-      </section>\n+      </section-->\n     </section>\n   </body>\n </document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/fonts.xml",
                "sha": "423eaad11b229fcb9fc5a3b13f36d9fd368663d9",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/output.xml",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/output.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/trunk/output.xml",
                "patch": "@@ -48,6 +48,35 @@\n           The net effect is that the layout of a given FO document can be quite different between \n           renderers that do not use the same font information.\n         </p>\n+        <p>\n+          Theoretically, there's some potential to make the output of the PDF/PS renderers match\n+          the output of the Java2D-based renderers. If FOP used the font metrics from its own\n+          font subsystem but still used Java2D for text painting in the Java2D-based renderers,\n+          this could probably be achieved. However, this approach hasn't been implemented, yet.\n+        </p>\n+        <p>\n+          With a work-around, it is possible to match the PDF/PS output in a Java2D-based\n+          renderer pretty closely. The clue is to use the\n+          <a href=\"intermediate.html\">intermediate format</a>. The trick is to layout the\n+          document using FOP's own font subsystem but then render the document using Java2D.\n+          Here are the necessary steps (using the command-line):\n+        </p>\n+        <ol>\n+          <li>\n+            Produce an IF file: <code>fop -fo myfile.fo -at application/pdf myfile.at.xml</code><br/>\n+            Specifying \"application/pdf\" for the \"-at\" parameter causes FOP to use FOP's own\n+            font subsystem (which is used by the PDF renderer). Note that no PDF file is created\n+            in this step.\n+          </li>\n+          <li>Render to a PDF file: <code>fop -atin myfile.at.xml -pdf myfile.pdf</code></li>\n+          <li>Render to a Java2D-based renderer:\n+            <ul>\n+              <li><code>fop -atin myfile.at.xml -print</code></li>\n+              <li><code>fop -atin myfile.at.xml -awt</code></li>\n+              <li><code>fop -atin myfile.at.xml -tiff myfile.tiff</code></li>\n+            </ul>\n+          </li>\n+        </ol>\n       </section>\n       <section id=\"general-direct-output\">\n         <title>Output to a Printer or Other Device</title>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/output.xml",
                "sha": "628df12480b556dcd406303b7b146c40975ce43d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/pdfencryption.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "patch": "@@ -204,15 +204,13 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n       </p>\n       <ol>\n         <li>\n-          Download the binary distribution for your JDK version. If you have JDK\n-          1.3 or earlier you must also download a JCE from the same page.\n+          Download the binary distribution for your JDK version.\n         </li>\n         <li>\n           Unpack the distribution. Add the jar file to your classpath. A\n           convenient way to use the jar on Linux is to simply drop it into the\n           FOP lib directory, it will be automatically picked up by\n-          <code>fop.sh</code>.  If you have JDK 1.3 or earlier don't forget to\n-          install the JCE as well.\n+          <code>fop.sh</code>.\n         </li>\n         <li>\n           Open the <code>java.security</code> file and add<br/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "sha": "22d96505777b1a920e847a3dd9d1812b2ae7a8bd",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/running.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/running.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/running.xml",
                "patch": "@@ -305,7 +305,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n       <ul>\n         <li>\n           Increase memory available to the JVM. See \n-          <a href=\"http://java.sun.com/j2se/1.3/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n+          <a href=\"http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n           for more information.\n           <warning>\n             It is usually unwise to increase the memory allocated to the JVM beyond the amount of ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/content/xdocs/trunk/running.xml",
                "sha": "38e31cc6c288cee6755a9ea3b35905eeefcff563",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/README.txt",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/README.txt?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/documentation/poster/README.txt",
                "patch": "@@ -5,7 +5,8 @@ created for OpenExpo '06 (http://www.openexpo.ch).\n \n To create the PDF just call go.bat.\n \n-The fully reconstruct the PDF you need to copy some fonts into \n-the cfg directory. Please see the README.txt there for details.\n+The fully reconstruct the PDF you need some fonts installed in\n+your operating system: Verdana and Lucida Console which are\n+available in every Windows installation.\n \n You will also need English hyphenation patterns.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/README.txt",
                "sha": "d5ef2c0a2710151b2f8793008c650a2f93a1bedc",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/README.txt",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/README.txt?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 7,
                "filename": "src/documentation/poster/cfg/README.txt",
                "patch": "@@ -1,7 +0,0 @@\n-The following files are missing here for license reasons:\n-\n-lucon.ttf - Lucida Console Font\n-verdana.ttf - Verdana Font\n-verdanab.ttf - Verdana Bold Font\n-\n-They can be found in every MS Windows installation.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/README.txt",
                "sha": "b63dc83dd38911b48071c21146cbc902cff43df7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/VERDANA.ttf.xml",
                "changes": 1817,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/VERDANA.ttf.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 1817,
                "filename": "src/documentation/poster/cfg/VERDANA.ttf.xml",
                "patch": "@@ -1,1817 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>Verdana</font-name>\n-  <embed/>\n-  <cap-height>727</cap-height>\n-  <x-height>545</x-height>\n-  <ascender>764</ascender>\n-  <descender>-206</descender>\n-  <bbox>\n-    <left>-49</left>\n-    <bottom>-206</bottom>\n-    <right>1446</right>\n-    <top>1000</top>\n-  </bbox>\n-  <flags>33</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"3\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"892\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"16\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"256\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"257\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"172\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"173\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"174\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"183\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"185\"/>\n-      <bf us=\"256\" ue=\"257\" gi=\"324\"/>\n-      <bf us=\"258\" ue=\"261\" gi=\"258\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"326\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"262\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"279\" gi=\"330\"/>\n-      <bf us=\"280\" ue=\"283\" gi=\"265\"/>\n-      <bf us=\"284\" ue=\"285\" gi=\"336\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"338\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"307\" gi=\"312\"/>\n-      <bf us=\"308\" ue=\"312\" gi=\"354\"/>\n-      <bf us=\"313\" ue=\"314\" gi=\"269\"/>\n-      <bf us=\"315\" ue=\"316\" gi=\"359\"/>\n-      <bf us=\"317\" ue=\"320\" gi=\"271\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"324\" gi=\"275\"/>\n-      <bf us=\"325\" ue=\"326\" gi=\"361\"/>\n-      <bf us=\"327\" ue=\"328\" gi=\"277\"/>\n-      <bf us=\"329\" ue=\"329\" gi=\"314\"/>\n-      <bf us=\"330\" ue=\"335\" gi=\"363\"/>\n-      <bf us=\"336\" ue=\"337\" gi=\"279\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"175\"/>\n-      <bf us=\"340\" ue=\"341\" gi=\"281\"/>\n-      <bf us=\"342\" ue=\"343\" gi=\"369\"/>\n-      <bf us=\"344\" ue=\"347\" gi=\"283\"/>\n-      <bf us=\"348\" ue=\"349\" gi=\"371\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"357\" gi=\"287\"/>\n-      <bf us=\"358\" ue=\"365\" gi=\"373\"/>\n-      <bf us=\"366\" ue=\"369\" gi=\"291\"/>\n-      <bf us=\"370\" ue=\"375\" gi=\"381\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"186\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"295\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"387\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"416\" ue=\"417\" gi=\"582\"/>\n-      <bf us=\"431\" ue=\"432\" gi=\"584\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"388\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"768\" ue=\"769\" gi=\"588\"/>\n-      <bf us=\"771\" ue=\"771\" gi=\"891\"/>\n-      <bf us=\"777\" ue=\"777\" gi=\"586\"/>\n-      <bf us=\"803\" ue=\"803\" gi=\"587\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"30\"/>\n-      <bf us=\"900\" ue=\"902\" gi=\"413\"/>\n-      <bf us=\"903\" ue=\"903\" gi=\"394\"/>\n-      <bf us=\"904\" ue=\"906\" gi=\"416\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"419\"/>\n-      <bf us=\"910\" ue=\"914\" gi=\"420\"/>\n-      <bf us=\"915\" ue=\"915\" gi=\"299\"/>\n-      <bf us=\"916\" ue=\"919\" gi=\"425\"/>\n-      <bf us=\"920\" ue=\"920\" gi=\"300\"/>\n-      <bf us=\"921\" ue=\"929\" gi=\"429\"/>\n-      <bf us=\"931\" ue=\"933\" gi=\"438\"/>\n-      <bf us=\"934\" ue=\"934\" gi=\"301\"/>\n-      <bf us=\"935\" ue=\"944\" gi=\"441\"/>\n-      <bf us=\"945\" ue=\"945\" gi=\"302\"/>\n-      <bf us=\"946\" ue=\"947\" gi=\"451\"/>\n-      <bf us=\"948\" ue=\"949\" gi=\"303\"/>\n-      <bf us=\"950\" ue=\"959\" gi=\"453\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"570\"/>\n-      <bf us=\"961\" ue=\"962\" gi=\"463\"/>\n-      <bf us=\"963\" ue=\"964\" gi=\"305\"/>\n-      <bf us=\"965\" ue=\"965\" gi=\"465\"/>\n-      <bf us=\"966\" ue=\"966\" gi=\"307\"/>\n-      <bf us=\"967\" ue=\"974\" gi=\"466\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"474\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"486\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"552\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"564\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"566\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"395\"/>\n-      <bf us=\"7840\" ue=\"7883\" gi=\"605\"/>\n-      <bf us=\"7884\" ue=\"7921\" gi=\"844\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"401\"/>\n-      <bf us=\"7924\" ue=\"7929\" gi=\"884\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"177\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"568\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"308\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"181\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8219\" ue=\"8219\" gi=\"403\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"179\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8242\" ue=\"8243\" gi=\"315\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"309\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"404\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"187\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"310\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"405\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"311\"/>\n-      <bf us=\"8363\" ue=\"8363\" gi=\"890\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"188\"/>\n-      <bf us=\"8453\" ue=\"8453\" gi=\"317\"/>\n-      <bf us=\"8467\" ue=\"8467\" gi=\"318\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"569\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8494\" ue=\"8494\" gi=\"406\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"407\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8725\" ue=\"8725\" gi=\"187\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"9633\" ue=\"9633\" gi=\"319\"/>\n-      <bf us=\"9642\" ue=\"9643\" gi=\"320\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"184\"/>\n-      <bf us=\"9679\" ue=\"9679\" gi=\"322\"/>\n-      <bf us=\"9702\" ue=\"9702\" gi=\"323\"/>\n-      <bf us=\"61441\" ue=\"61442\" gi=\"191\"/>\n-      <bf us=\"61444\" ue=\"61445\" gi=\"411\"/>\n-      <bf us=\"61446\" ue=\"61453\" gi=\"571\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"1000\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"393\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"1076\"/>\n-      <wx w=\"726\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"574\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"972\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"634\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"634\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"976\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"984\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"641\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"707\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"955\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"393\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1069\"/>\n-      <wx w=\"981\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"1521\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"561\"/>\n-      <wx w=\"284\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"611\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"647\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"295\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"607\"/>\n-      <wx w=\"512\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"496\"/>\n-      <wx w=\"790\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"624\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"1163\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"613\"/>\n-      <wx w=\"730\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"557\"/>\n-      <wx w=\"1076\"/>\n-      <wx w=\"323\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"300\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"984\"/>\n-      <wx w=\"955\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"717\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"210\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"539\"/>\n-      <wx w=\"880\"/>\n-      <wx w=\"753\"/>\n-      <wx w=\"907\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"703\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"648\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"672\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"512\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"457\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"624\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"639\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"502\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"507\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"589\"/>\n-      <wx w=\"821\"/>\n-      <wx w=\"813\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"813\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"792\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"700\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"1118\"/>\n-      <wx w=\"1103\"/>\n-      <wx w=\"817\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"745\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"973\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"734\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"711\"/>\n-      <wx w=\"1030\"/>\n-      <wx w=\"1044\"/>\n-      <wx w=\"783\"/>\n-      <wx w=\"920\"/>\n-      <wx w=\"680\"/>\n-      <wx w=\"701\"/>\n-      <wx w=\"1034\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"614\"/>\n-      <wx w=\"594\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"621\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"797\"/>\n-      <wx w=\"524\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"696\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"534\"/>\n-      <wx w=\"496\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"840\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"875\"/>\n-      <wx w=\"887\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"794\"/>\n-      <wx w=\"570\"/>\n-      <wx w=\"546\"/>\n-      <wx w=\"838\"/>\n-      <wx w=\"599\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"546\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1171\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"635\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-  <kerning kpx1=\"93\">\n-    <pair kpx2=\"111\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"84\" kern=\"-4\"/>\n-    <pair kpx2=\"82\" kern=\"-5\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-5\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-4\"/>\n-    <pair kpx2=\"161\" kern=\"-5\"/>\n-  </kerning>\n-  <kerning kpx1=\"92\">\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"111\" kern=\"-8\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"17\" kern=\"-92\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"176\" kern=\"-7\"/>\n-    <pair kpx2=\"84\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-92\"/>\n-    <pair kpx2=\"82\" kern=\"-8\"/>\n-    <pair kpx2=\"171\" kern=\"-87\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-8\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-8\"/>\n-    <pair kpx2=\"161\" kern=\"-8\"/>\n-  </kerning>\n-  <kerning kpx1=\"91\">\n-    <pair kpx2=\"111\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"176\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-11\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-11\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-9\"/>\n-    <pair kpx2=\"161\" kern=\"-11\"/>\n-  </kerning>\n-  <kerning kpx1=\"90\">\n-    <pair kpx2=\"171\" kern=\"-34\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-34\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-34\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"89\">\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"17\" kern=\"-87\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"176\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-87\"/>\n-    <pair kpx2=\"82\" kern=\"-8\"/>\n-    <pair kpx2=\"171\" kern=\"-87\"/>\n-    <pair kpx2=\"72\" kern=\"-8\"/>\n-    <pair kpx2=\"161\" kern=\"-8\"/>\n-  </kerning>\n-  <kerning kpx1=\"182\">\n-    <pair kpx2=\"87\" kern=\"19\"/>\n-    <pair kpx2=\"17\" kern=\"-102\"/>\n-    <pair kpx2=\"86\" kern=\"-34\"/>\n-    <pair kpx2=\"15\" kern=\"-102\"/>\n-    <pair kpx2=\"60\" kern=\"53\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"58\" kern=\"29\"/>\n-    <pair kpx2=\"57\" kern=\"48\"/>\n-    <pair kpx2=\"171\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"53\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"87\">\n-    <pair kpx2=\"182\" kern=\"9\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"180\" kern=\"9\"/>\n-    <pair kpx2=\"92\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-  </kerning>\n-  <kerning kpx1=\"181\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"180\">\n-    <pair kpx2=\"87\" kern=\"19\"/>\n-    <pair kpx2=\"17\" kern=\"-102\"/>\n-    <pair kpx2=\"86\" kern=\"-34\"/>\n-    <pair kpx2=\"15\" kern=\"-102\"/>\n-    <pair kpx2=\"60\" kern=\"53\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"58\" kern=\"29\"/>\n-    <pair kpx2=\"57\" kern=\"48\"/>\n-    <pair kpx2=\"171\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"53\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"85\">\n-    <pair kpx2=\"68\" kern=\"-17\"/>\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"182\" kern=\"14\"/>\n-    <pair kpx2=\"180\" kern=\"14\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-  </kerning>\n-  <kerning kpx1=\"179\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"178\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"83\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-2\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"177\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"82\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"81\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"80\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"78\">\n-    <pair kpx2=\"161\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-48\"/>\n-    <pair kpx2=\"178\" kern=\"-48\"/>\n-    <pair kpx2=\"177\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"171\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"75\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"73\">\n-    <pair kpx2=\"182\" kern=\"24\"/>\n-    <pair kpx2=\"180\" kern=\"24\"/>\n-    <pair kpx2=\"64\" kern=\"48\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"63\" kern=\"48\"/>\n-    <pair kpx2=\"17\" kern=\"-58\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-63\"/>\n-    <pair kpx2=\"13\" kern=\"24\"/>\n-    <pair kpx2=\"12\" kern=\"48\"/>\n-    <pair kpx2=\"34\" kern=\"53\"/>\n-    <pair kpx2=\"171\" kern=\"-58\"/>\n-    <pair kpx2=\"10\" kern=\"29\"/>\n-    <pair kpx2=\"5\" kern=\"29\"/>\n-    <pair kpx2=\"96\" kern=\"48\"/>\n-    <pair kpx2=\"92\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"72\">\n-    <pair kpx2=\"55\" kern=\"-68\"/>\n-  </kerning>\n-  <kerning kpx1=\"70\">\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"69\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-2\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"68\">\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"161\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"61\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"90\" kern=\"-19\"/>\n-    <pair kpx2=\"42\" kern=\"-9\"/>\n-    <pair kpx2=\"38\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-29\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-29\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-29\"/>\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-29\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"100\" kern=\"-9\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"60\">\n-    <pair kpx2=\"89\" kern=\"-48\"/>\n-    <pair kpx2=\"88\" kern=\"-53\"/>\n-    <pair kpx2=\"86\" kern=\"-53\"/>\n-    <pair kpx2=\"85\" kern=\"-48\"/>\n-    <pair kpx2=\"178\" kern=\"-68\"/>\n-    <pair kpx2=\"84\" kern=\"-63\"/>\n-    <pair kpx2=\"177\" kern=\"-68\"/>\n-    <pair kpx2=\"36\" kern=\"-39\"/>\n-    <pair kpx2=\"83\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-63\"/>\n-    <pair kpx2=\"82\" kern=\"-63\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"81\" kern=\"-48\"/>\n-    <pair kpx2=\"80\" kern=\"-48\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"30\" kern=\"-97\"/>\n-    <pair kpx2=\"29\" kern=\"-97\"/>\n-    <pair kpx2=\"74\" kern=\"-63\"/>\n-    <pair kpx2=\"72\" kern=\"-63\"/>\n-    <pair kpx2=\"71\" kern=\"-58\"/>\n-    <pair kpx2=\"68\" kern=\"-68\"/>\n-    <pair kpx2=\"161\" kern=\"-63\"/>\n-    <pair kpx2=\"160\" kern=\"-68\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-68\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-39\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"59\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"88\" kern=\"-14\"/>\n-    <pair kpx2=\"42\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-39\"/>\n-    <pair kpx2=\"177\" kern=\"-39\"/>\n-    <pair kpx2=\"16\" kern=\"-39\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"38\" kern=\"-4\"/>\n-    <pair kpx2=\"175\" kern=\"-4\"/>\n-    <pair kpx2=\"82\" kern=\"-29\"/>\n-    <pair kpx2=\"100\" kern=\"-4\"/>\n-    <pair kpx2=\"145\" kern=\"-4\"/>\n-    <pair kpx2=\"50\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-29\"/>\n-    <pair kpx2=\"161\" kern=\"-29\"/>\n-    <pair kpx2=\"92\" kern=\"-39\"/>\n-  </kerning>\n-  <kerning kpx1=\"58\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"88\" kern=\"-29\"/>\n-    <pair kpx2=\"85\" kern=\"-29\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-48\"/>\n-    <pair kpx2=\"30\" kern=\"-39\"/>\n-    <pair kpx2=\"171\" kern=\"-107\"/>\n-    <pair kpx2=\"29\" kern=\"-39\"/>\n-    <pair kpx2=\"72\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"161\" kern=\"-48\"/>\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-107\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"144\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"57\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"88\" kern=\"-29\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-29\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-48\"/>\n-    <pair kpx2=\"30\" kern=\"-39\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"29\" kern=\"-39\"/>\n-    <pair kpx2=\"72\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"161\" kern=\"-48\"/>\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"144\" kern=\"-34\"/>\n-  </kerning>\n-  <kerning kpx1=\"56\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-4\"/>\n-    <pair kpx2=\"144\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"55\">\n-    <pair kpx2=\"93\" kern=\"-83\"/>\n-    <pair kpx2=\"92\" kern=\"-97\"/>\n-    <pair kpx2=\"90\" kern=\"-97\"/>\n-    <pair kpx2=\"89\" kern=\"-97\"/>\n-    <pair kpx2=\"42\" kern=\"-19\"/>\n-    <pair kpx2=\"88\" kern=\"-97\"/>\n-    <pair kpx2=\"86\" kern=\"-87\"/>\n-    <pair kpx2=\"85\" kern=\"-97\"/>\n-    <pair kpx2=\"38\" kern=\"-19\"/>\n-    <pair kpx2=\"178\" kern=\"-73\"/>\n-    <pair kpx2=\"177\" kern=\"-73\"/>\n-    <pair kpx2=\"36\" kern=\"-58\"/>\n-    <pair kpx2=\"176\" kern=\"-107\"/>\n-    <pair kpx2=\"82\" kern=\"-107\"/>\n-    <pair kpx2=\"175\" kern=\"-24\"/>\n-    <pair kpx2=\"34\" kern=\"29\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"30\" kern=\"-97\"/>\n-    <pair kpx2=\"29\" kern=\"-97\"/>\n-    <pair kpx2=\"74\" kern=\"-102\"/>\n-    <pair kpx2=\"72\" kern=\"-107\"/>\n-    <pair kpx2=\"70\" kern=\"-107\"/>\n-    <pair kpx2=\"68\" kern=\"-117\"/>\n-    <pair kpx2=\"161\" kern=\"-107\"/>\n-    <pair kpx2=\"160\" kern=\"-117\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-73\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"55\" kern=\"-34\"/>\n-    <pair kpx2=\"54\" kern=\"-5\"/>\n-    <pair kpx2=\"100\" kern=\"-19\"/>\n-    <pair kpx2=\"145\" kern=\"-24\"/>\n-    <pair kpx2=\"144\" kern=\"-63\"/>\n-    <pair kpx2=\"50\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"54\">\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-14\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-9\"/>\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"54\" kern=\"-10\"/>\n-    <pair kpx2=\"144\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"53\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"182\" kern=\"-34\"/>\n-    <pair kpx2=\"180\" kern=\"-34\"/>\n-    <pair kpx2=\"88\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-48\"/>\n-    <pair kpx2=\"177\" kern=\"-48\"/>\n-    <pair kpx2=\"16\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-    <pair kpx2=\"92\" kern=\"-26\"/>\n-  </kerning>\n-  <kerning kpx1=\"52\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"51\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"17\" kern=\"-146\"/>\n-    <pair kpx2=\"176\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-146\"/>\n-    <pair kpx2=\"60\" kern=\"9\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"171\" kern=\"-146\"/>\n-    <pair kpx2=\"144\" kern=\"-34\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"145\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"50\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"47\">\n-    <pair kpx2=\"92\" kern=\"-53\"/>\n-    <pair kpx2=\"45\" kern=\"48\"/>\n-    <pair kpx2=\"42\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-53\"/>\n-    <pair kpx2=\"182\" kern=\"-78\"/>\n-    <pair kpx2=\"180\" kern=\"-78\"/>\n-    <pair kpx2=\"38\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-78\"/>\n-    <pair kpx2=\"177\" kern=\"-78\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-78\"/>\n-    <pair kpx2=\"60\" kern=\"-78\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"10\" kern=\"-58\"/>\n-    <pair kpx2=\"57\" kern=\"-53\"/>\n-    <pair kpx2=\"55\" kern=\"-83\"/>\n-    <pair kpx2=\"100\" kern=\"-9\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"46\">\n-    <pair kpx2=\"160\" kern=\"-29\"/>\n-    <pair kpx2=\"68\" kern=\"-29\"/>\n-    <pair kpx2=\"90\" kern=\"-34\"/>\n-    <pair kpx2=\"89\" kern=\"-39\"/>\n-    <pair kpx2=\"88\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-53\"/>\n-    <pair kpx2=\"177\" kern=\"-53\"/>\n-    <pair kpx2=\"16\" kern=\"-53\"/>\n-    <pair kpx2=\"176\" kern=\"-34\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-34\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-34\"/>\n-    <pair kpx2=\"161\" kern=\"-34\"/>\n-    <pair kpx2=\"92\" kern=\"-39\"/>\n-  </kerning>\n-  <kerning kpx1=\"45\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-4\"/>\n-    <pair kpx2=\"144\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"44\">\n-    <pair kpx2=\"16\" kern=\"-14\"/>\n-    <pair kpx2=\"178\" kern=\"-14\"/>\n-    <pair kpx2=\"177\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"41\">\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-146\"/>\n-    <pair kpx2=\"176\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-146\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"34\" kern=\"29\"/>\n-    <pair kpx2=\"171\" kern=\"-146\"/>\n-    <pair kpx2=\"55\" kern=\"14\"/>\n-    <pair kpx2=\"30\" kern=\"-29\"/>\n-    <pair kpx2=\"144\" kern=\"-53\"/>\n-    <pair kpx2=\"29\" kern=\"-29\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"39\">\n-    <pair kpx2=\"171\" kern=\"-24\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-24\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-24\"/>\n-    <pair kpx2=\"58\" kern=\"-9\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"38\">\n-    <pair kpx2=\"175\" kern=\"-12\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"37\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"4\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"4\"/>\n-    <pair kpx2=\"177\" kern=\"4\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"36\">\n-    <pair kpx2=\"92\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-14\"/>\n-    <pair kpx2=\"89\" kern=\"-24\"/>\n-    <pair kpx2=\"182\" kern=\"-58\"/>\n-    <pair kpx2=\"88\" kern=\"-4\"/>\n-    <pair kpx2=\"87\" kern=\"-9\"/>\n-    <pair kpx2=\"181\" kern=\"-24\"/>\n-    <pair kpx2=\"180\" kern=\"-58\"/>\n-    <pair kpx2=\"179\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"60\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-29\"/>\n-    <pair kpx2=\"56\" kern=\"-4\"/>\n-    <pair kpx2=\"55\" kern=\"-58\"/>\n-    <pair kpx2=\"54\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"29\">\n-    <pair kpx2=\"178\" kern=\"-68\"/>\n-  </kerning>\n-  <kerning kpx1=\"17\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"16\" kern=\"-78\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-    <pair kpx2=\"15\" kern=\"-63\"/>\n-    <pair kpx2=\"178\" kern=\"-58\"/>\n-    <pair kpx2=\"177\" kern=\"-58\"/>\n-  </kerning>\n-  <kerning kpx1=\"111\">\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"16\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"15\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"10\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"196\">\n-    <pair kpx2=\"60\" kern=\"-102\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"57\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"195\">\n-    <pair kpx2=\"60\" kern=\"-102\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"57\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"100\">\n-    <pair kpx2=\"175\" kern=\"-12\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"4\">\n-    <pair kpx2=\"182\" kern=\"-48\"/>\n-    <pair kpx2=\"180\" kern=\"-48\"/>\n-  </kerning>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/VERDANA.ttf.xml",
                "sha": "1c113be9d7c0265337e06365d06bd936d4aa397b",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "changes": 1167,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/VERDANAB.ttf.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 1167,
                "filename": "src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "patch": "@@ -1,1167 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>Verdana,Bold</font-name>\n-  <embed/>\n-  <cap-height>727</cap-height>\n-  <x-height>548</x-height>\n-  <ascender>764</ascender>\n-  <descender>-206</descender>\n-  <bbox>\n-    <left>-73</left>\n-    <bottom>-207</bottom>\n-    <right>1707</right>\n-    <top>1000</top>\n-  </bbox>\n-  <flags>33</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"3\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"892\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"16\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"256\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"257\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"172\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"173\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"174\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"183\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"185\"/>\n-      <bf us=\"256\" ue=\"257\" gi=\"324\"/>\n-      <bf us=\"258\" ue=\"261\" gi=\"258\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"326\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"262\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"279\" gi=\"330\"/>\n-      <bf us=\"280\" ue=\"283\" gi=\"265\"/>\n-      <bf us=\"284\" ue=\"285\" gi=\"336\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"338\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"307\" gi=\"312\"/>\n-      <bf us=\"308\" ue=\"312\" gi=\"354\"/>\n-      <bf us=\"313\" ue=\"314\" gi=\"269\"/>\n-      <bf us=\"315\" ue=\"316\" gi=\"359\"/>\n-      <bf us=\"317\" ue=\"320\" gi=\"271\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"324\" gi=\"275\"/>\n-      <bf us=\"325\" ue=\"326\" gi=\"361\"/>\n-      <bf us=\"327\" ue=\"328\" gi=\"277\"/>\n-      <bf us=\"329\" ue=\"329\" gi=\"314\"/>\n-      <bf us=\"330\" ue=\"335\" gi=\"363\"/>\n-      <bf us=\"336\" ue=\"337\" gi=\"279\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"175\"/>\n-      <bf us=\"340\" ue=\"341\" gi=\"281\"/>\n-      <bf us=\"342\" ue=\"343\" gi=\"369\"/>\n-      <bf us=\"344\" ue=\"347\" gi=\"283\"/>\n-      <bf us=\"348\" ue=\"349\" gi=\"371\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"357\" gi=\"287\"/>\n-      <bf us=\"358\" ue=\"365\" gi=\"373\"/>\n-      <bf us=\"366\" ue=\"369\" gi=\"291\"/>\n-      <bf us=\"370\" ue=\"375\" gi=\"381\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"186\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"295\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"387\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"416\" ue=\"417\" gi=\"582\"/>\n-      <bf us=\"431\" ue=\"432\" gi=\"584\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"388\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"768\" ue=\"769\" gi=\"588\"/>\n-      <bf us=\"771\" ue=\"771\" gi=\"891\"/>\n-      <bf us=\"777\" ue=\"777\" gi=\"586\"/>\n-      <bf us=\"803\" ue=\"803\" gi=\"587\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"30\"/>\n-      <bf us=\"900\" ue=\"902\" gi=\"413\"/>\n-      <bf us=\"903\" ue=\"903\" gi=\"394\"/>\n-      <bf us=\"904\" ue=\"906\" gi=\"416\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"419\"/>\n-      <bf us=\"910\" ue=\"914\" gi=\"420\"/>\n-      <bf us=\"915\" ue=\"915\" gi=\"299\"/>\n-      <bf us=\"916\" ue=\"919\" gi=\"425\"/>\n-      <bf us=\"920\" ue=\"920\" gi=\"300\"/>\n-      <bf us=\"921\" ue=\"929\" gi=\"429\"/>\n-      <bf us=\"931\" ue=\"933\" gi=\"438\"/>\n-      <bf us=\"934\" ue=\"934\" gi=\"301\"/>\n-      <bf us=\"935\" ue=\"944\" gi=\"441\"/>\n-      <bf us=\"945\" ue=\"945\" gi=\"302\"/>\n-      <bf us=\"946\" ue=\"947\" gi=\"451\"/>\n-      <bf us=\"948\" ue=\"949\" gi=\"303\"/>\n-      <bf us=\"950\" ue=\"959\" gi=\"453\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"570\"/>\n-      <bf us=\"961\" ue=\"962\" gi=\"463\"/>\n-      <bf us=\"963\" ue=\"964\" gi=\"305\"/>\n-      <bf us=\"965\" ue=\"965\" gi=\"465\"/>\n-      <bf us=\"966\" ue=\"966\" gi=\"307\"/>\n-      <bf us=\"967\" ue=\"974\" gi=\"466\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"474\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"486\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"552\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"564\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"566\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"395\"/>\n-      <bf us=\"7840\" ue=\"7883\" gi=\"605\"/>\n-      <bf us=\"7884\" ue=\"7921\" gi=\"844\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"401\"/>\n-      <bf us=\"7924\" ue=\"7929\" gi=\"884\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"177\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"568\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"308\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"181\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8219\" ue=\"8219\" gi=\"403\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"179\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8242\" ue=\"8243\" gi=\"315\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"309\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"404\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"187\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"310\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"405\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"311\"/>\n-      <bf us=\"8363\" ue=\"8363\" gi=\"890\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"188\"/>\n-      <bf us=\"8453\" ue=\"8453\" gi=\"317\"/>\n-      <bf us=\"8467\" ue=\"8467\" gi=\"318\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"569\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8494\" ue=\"8494\" gi=\"406\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"407\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8725\" ue=\"8725\" gi=\"187\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"9633\" ue=\"9633\" gi=\"319\"/>\n-      <bf us=\"9642\" ue=\"9643\" gi=\"320\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"184\"/>\n-      <bf us=\"9679\" ue=\"9679\" gi=\"322\"/>\n-      <bf us=\"9702\" ue=\"9702\" gi=\"323\"/>\n-      <bf us=\"61441\" ue=\"61442\" gi=\"191\"/>\n-      <bf us=\"61444\" ue=\"61445\" gi=\"411\"/>\n-      <bf us=\"61446\" ue=\"61450\" gi=\"571\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"1000\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"1271\"/>\n-      <wx w=\"862\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"479\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"689\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"689\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"422\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"1058\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"668\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"1093\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"1058\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"721\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"869\"/>\n-      <wx w=\"708\"/>\n-      <wx w=\"538\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"843\"/>\n-      <wx w=\"1018\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"805\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"1048\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"1135\"/>\n-      <wx w=\"1067\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"439\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"730\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"1777\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"642\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"679\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"734\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"879\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"522\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"465\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"952\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"584\"/>\n-      <wx w=\"725\"/>\n-      <wx w=\"535\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"703\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"1343\"/>\n-      <wx w=\"1007\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"825\"/>\n-      <wx w=\"352\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"1271\"/>\n-      <wx w=\"414\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"1093\"/>\n-      <wx w=\"1018\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"797\"/>\n-      <wx w=\"847\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"705\"/>\n-      <wx w=\"968\"/>\n-      <wx w=\"939\"/>\n-      <wx w=\"970\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"805\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"714\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"976\"/>\n-      <wx w=\"843\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"584\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"716\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"549\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"700\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"721\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"580\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"562\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"941\"/>\n-      <wx w=\"894\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"894\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"910\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"1222\"/>\n-      <wx w=\"1214\"/>\n-      <wx w=\"936\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"757\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"841\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"1115\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"952\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1163\"/>\n-      <wx w=\"1177\"/>\n-      <wx w=\"907\"/>\n-      <wx w=\"1062\"/>\n-      <wx w=\"757\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"1195\"/>\n-      <wx w=\"794\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"696\"/>\n-      <wx w=\"677\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"999\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"720\"/>\n-      <wx w=\"720\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"709\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"598\"/>\n-      <wx w=\"535\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"965\"/>\n-      <wx w=\"668\"/>\n-      <wx w=\"729\"/>\n-      <wx w=\"684\"/>\n-      <wx w=\"1002\"/>\n-      <wx w=\"1012\"/>\n-      <wx w=\"743\"/>\n-      <wx w=\"937\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"994\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"1012\"/>\n-      <wx w=\"1019\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1293\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"710\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "sha": "0666d19b2fd17ee1b500be53921d674a6e308fdd",
                "status": "removed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/cfg/fop.xconf",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/fop.xconf?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 11,
                "filename": "src/documentation/poster/cfg/fop.xconf",
                "patch": "@@ -17,23 +17,13 @@\n -->\n <!-- $Id$ -->\n <fop>\n-  <base>.</base>\n   <source-resolution>72</source-resolution>\n   <target-resolution>300</target-resolution>\n-  <default-page-settings height=\"11in\" width=\"8.26in\"/>\n   <renderers>\n     <renderer mime=\"application/pdf\">\n       <!--output-profile>cfg/ISOuncoated.icc</output-profile-->\n       <fonts>\n-        <font metrics-url=\"cfg\\VERDANA.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\VERDANA.ttf\">\n-          <font-triplet name=\"Verdana\" style=\"normal\" weight=\"normal\"/>\n-        </font>\n-        <font metrics-url=\"cfg\\VERDANAB.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\VERDANAB.ttf\">\n-          <font-triplet name=\"Verdana\" style=\"normal\" weight=\"bold\"/>\n-        </font>\n-        <font metrics-url=\"cfg\\LUCON.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\LUCON.ttf\">\n-          <font-triplet name=\"Lucida Console\" style=\"normal\" weight=\"normal\"/>\n-        </font>\n+        <auto-detect/>\n       </fonts>\n     </renderer>\n   </renderers>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/cfg/fop.xconf",
                "sha": "788d589208a5d0e2b3eec224e0c212a4487a5eae",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/lucon.ttf.xml",
                "changes": 925,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/lucon.ttf.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 925,
                "filename": "src/documentation/poster/cfg/lucon.ttf.xml",
                "patch": "@@ -1,925 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>LucidaConsole</font-name>\n-  <embed/>\n-  <cap-height>626</cap-height>\n-  <x-height>530</x-height>\n-  <ascender>783</ascender>\n-  <descender>-205</descender>\n-  <bbox>\n-    <left>0</left>\n-    <bottom>-210</bottom>\n-    <right>602</right>\n-    <top>789</top>\n-  </bbox>\n-  <flags>35</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"172\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"188\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"256\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"257\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"258\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"173\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"174\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"175\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"184\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"186\"/>\n-      <bf us=\"256\" ue=\"261\" gi=\"259\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"265\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"269\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"285\" gi=\"272\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"284\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"320\" gi=\"300\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"337\" gi=\"315\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"176\"/>\n-      <bf us=\"340\" ue=\"349\" gi=\"330\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"375\" gi=\"340\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"187\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"362\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"366\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"367\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"373\"/>\n-      <bf us=\"900\" ue=\"906\" gi=\"374\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"381\"/>\n-      <bf us=\"910\" ue=\"929\" gi=\"382\"/>\n-      <bf us=\"931\" ue=\"959\" gi=\"402\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"155\"/>\n-      <bf us=\"961\" ue=\"974\" gi=\"431\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"445\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"457\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"523\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"535\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"537\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"539\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"545\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"178\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"547\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"548\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"182\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"180\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"549\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"550\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"551\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"552\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"553\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"554\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"665\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"555\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"556\"/>\n-      <bf us=\"8592\" ue=\"8597\" gi=\"560\"/>\n-      <bf us=\"8616\" ue=\"8616\" gi=\"566\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8735\" ue=\"8735\" gi=\"567\"/>\n-      <bf us=\"8745\" ue=\"8745\" gi=\"568\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8801\" ue=\"8801\" gi=\"569\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"8962\" ue=\"8962\" gi=\"570\"/>\n-      <bf us=\"8976\" ue=\"8976\" gi=\"571\"/>\n-      <bf us=\"8992\" ue=\"8993\" gi=\"572\"/>\n-      <bf us=\"9472\" ue=\"9472\" gi=\"574\"/>\n-      <bf us=\"9474\" ue=\"9474\" gi=\"575\"/>\n-      <bf us=\"9484\" ue=\"9484\" gi=\"576\"/>\n-      <bf us=\"9488\" ue=\"9488\" gi=\"577\"/>\n-      <bf us=\"9492\" ue=\"9492\" gi=\"578\"/>\n-      <bf us=\"9496\" ue=\"9496\" gi=\"579\"/>\n-      <bf us=\"9500\" ue=\"9500\" gi=\"580\"/>\n-      <bf us=\"9508\" ue=\"9508\" gi=\"581\"/>\n-      <bf us=\"9516\" ue=\"9516\" gi=\"582\"/>\n-      <bf us=\"9524\" ue=\"9524\" gi=\"583\"/>\n-      <bf us=\"9532\" ue=\"9532\" gi=\"584\"/>\n-      <bf us=\"9552\" ue=\"9580\" gi=\"585\"/>\n-      <bf us=\"9600\" ue=\"9600\" gi=\"614\"/>\n-      <bf us=\"9604\" ue=\"9604\" gi=\"615\"/>\n-      <bf us=\"9608\" ue=\"9608\" gi=\"616\"/>\n-      <bf us=\"9612\" ue=\"9612\" gi=\"617\"/>\n-      <bf us=\"9616\" ue=\"9619\" gi=\"618\"/>\n-      <bf us=\"9632\" ue=\"9632\" gi=\"622\"/>\n-      <bf us=\"9644\" ue=\"9644\" gi=\"623\"/>\n-      <bf us=\"9650\" ue=\"9650\" gi=\"624\"/>\n-      <bf us=\"9658\" ue=\"9658\" gi=\"625\"/>\n-      <bf us=\"9660\" ue=\"9660\" gi=\"626\"/>\n-      <bf us=\"9668\" ue=\"9668\" gi=\"627\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"185\"/>\n-      <bf us=\"9675\" ue=\"9675\" gi=\"628\"/>\n-      <bf us=\"9688\" ue=\"9689\" gi=\"629\"/>\n-      <bf us=\"9786\" ue=\"9788\" gi=\"631\"/>\n-      <bf us=\"9792\" ue=\"9792\" gi=\"634\"/>\n-      <bf us=\"9794\" ue=\"9794\" gi=\"635\"/>\n-      <bf us=\"9824\" ue=\"9824\" gi=\"636\"/>\n-      <bf us=\"9827\" ue=\"9827\" gi=\"637\"/>\n-      <bf us=\"9829\" ue=\"9830\" gi=\"638\"/>\n-      <bf us=\"9834\" ue=\"9835\" gi=\"640\"/>\n-      <bf us=\"61443\" ue=\"61453\" gi=\"642\"/>\n-      <bf us=\"63512\" ue=\"63523\" gi=\"653\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"603\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/documentation/poster/cfg/lucon.ttf.xml",
                "sha": "27daebf6ceae0271328875ab53def0833e47b642",
                "status": "removed"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/svg/pepe-business-card.svg",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/svg/pepe-business-card.svg?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/poster/svg/pepe-business-card.svg",
                "patch": "@@ -16,7 +16,8 @@\n   limitations under the License.\n -->\n <!-- $Id$ -->\n-<svg xml:space=\"preserve\" x=\"-3.05102in\" y=\"-2.2459in\" width=\"3.31009in\" height=\"2.08961in\" \n+<svg xmlns=\"http://www.w3.org/2000/svg\"\n+    xml:space=\"preserve\" x=\"-3.05102in\" y=\"-2.2459in\" width=\"3.31009in\" height=\"2.08961in\" \n     style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality\" viewBox=\"-30510 0 33101 20896\">\n   <g>\n     <g>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/svg/pepe-business-card.svg",
                "sha": "559c87abe78caf50f975bea118d2c1b804124f3e",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/business-card-demo.xml",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/business-card-demo.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 9,
                "filename": "src/documentation/poster/xml/business-card-demo.xml",
                "patch": "@@ -37,13 +37,13 @@\n     <fo:instream-foreign-object xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n       <svg:svg width=\"150mm\" height=\"70mm\" viewBox=\"0 0 150 70\">\n         <svg:g transform=\"rotate(-7)\">\n-          <svg:image x=\"0\" y=\"12\" width=\"84\" height=\"53\" xlink:href=\"svg/pepe-business-card.svg\"/>\n+          <svg:image x=\"0\" y=\"12\" width=\"84\" height=\"53\" xlink:href=\"../svg/pepe-business-card.svg\"/>\n         </svg:g>\n       </svg:svg>\n     </fo:instream-foreign-object>\n   </p>\n-  <fo:block-container absolute-position=\"absolute\" left=\"80mm\" top=\"20mm\" width=\"2cm\" height=\"10cm\">\n-    <fo:block>\n+  <fo:block-container absolute-position=\"absolute\" left=\"80mm\" top=\"20mm\" width=\"3cm\" height=\"10cm\">\n+    <fo:block font-size=\"0\" line-height=\"0\">\n       <fo:instream-foreign-object xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n         <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"1.8cm\" height=\"10cm\" viewBox=\"0 0 20 100\">\n           <defs>\n@@ -65,19 +65,20 @@\n       </fo:instream-foreign-object>\n     </fo:block>\n   </fo:block-container>\n-  <fo:block-container absolute-position=\"absolute\" width=\"100%\" height=\"100%\">\n-  <fo:block start-indent=\"112mm\">\n-  <p>The XSLT stylesheet which contains the rules to convert the business card XML to XSL-FO:</p>\n-  <fo:block text-align=\"start\" font-family=\"'Lucida Console'\" font-size=\"10pt\" white-space=\"pre\"\n-  ><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+  <fo:block-container absolute-position=\"absolute\" width=\"100%\">\n+    <fo:block start-indent=\"112mm\">\n+      <p>The XSLT stylesheet which contains the rules to convert the business card XML to XSL-FO:</p>\n+      <fo:block text-align=\"start\" font-family=\"'Lucida Console'\" font-size=\"10pt\" white-space=\"pre\"\n+        ><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <xsl:stylesheet version=\"1.0\"\n     xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n     xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <xsl:output method=\"xml\" indent=\"yes\"/>\n   <xsl:template match=\"/\">\n     <fo:root font-family=\"Helvetica\" font-size=\"10pt\">\n       <fo:layout-master-set>\n-        <fo:simple-page-master master-name=\"bc\" page-height=\"53mm\" page-width=\"84mm\" margin=\"3mm\">\n+        <fo:simple-page-master master-name=\"bc\"\n+              page-height=\"53mm\" page-width=\"84mm\" margin=\"3mm\">\n           <fo:region-body/>\n         </fo:simple-page-master>\n       </fo:layout-master-set>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/business-card-demo.xml",
                "sha": "9b7f80029849f7be271517231ce4ca60e3849c9e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-history.xml",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-history.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 6,
                "filename": "src/documentation/poster/xml/fop-history.xml",
                "patch": "@@ -39,13 +39,12 @@\n   </p>\n   <p>\n     In 2005, the redesign finally took a leap forward, which resulted in the first release from\n-    the new codebase (FOP&#160;0.90alpha). Shortly thereafter, FOP&#160;0.91beta was released in December\n-    2005 and FOP&#160;0.92beta in April&#160;2006. Although 0.92beta still carries the beta tag,\n-    it has many advantages over the old version 0.20.5.\n+    the new codebase (FOP&#160;0.90alpha). The project team has published a number of releases\n+    since then. FOP made big steps forward.\n   </p>\n   <p>\n-    The next version, to be released shortly, will be 0.93. This version should be the last release \n-    before the long-awaited version 1.0, for which the team only has to implement a handful of \n-    additional features.\n+    The next version, to be released in March&#160;2008, will be 0.95. Although FOP still carries\n+    pre&#160;1.0 version numbers it is production-ready. Some features are still missing before\n+    version&#160;1.0 can be released.\n   </p>\n </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-history.xml",
                "sha": "0baa6340f474c8d4cbc588047d5febae044c4647",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-poster.xml",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-poster.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/documentation/poster/xml/fop-poster.xml",
                "patch": "@@ -21,11 +21,11 @@\n   <section href=\"fop-overview.xml\" width=\"165\" height=\"118\"/>\n   <section href=\"fop-output-formats.xml\" width=\"165\" height=\"103\"/>\n   <section href=\"fop-foreign-xml-support.xml\" width=\"165\" height=\"55\"/>\n-  <section href=\"fop-image-support.xml\" width=\"165\" height=\"65\"/>\n-  <section href=\"fop-use-cases.xml\" width=\"165\" height=\"96\"/>\n-  <section href=\"fop-history.xml\" width=\"165\" height=\"181\"/>\n+  <section href=\"fop-image-support.xml\" width=\"165\" height=\"66\"/>\n+  <section href=\"fop-use-cases.xml\" width=\"165\" height=\"98\"/>\n+  <section href=\"fop-history.xml\" width=\"165\" height=\"180\"/>\n   <section href=\"fop-getting-help.xml\" width=\"165\" height=\"67\"/>\n-  <section href=\"fop-transformation-chain.xml\" width=\"335\" height=\"167\"/>\n+  <section href=\"fop-transformation-chain.xml\" width=\"335\" height=\"166\"/>\n   <!-- section href=\"hello-world-in-fo.xml\" width=\"165\" height=\"115\"/-->\n-  <section href=\"business-card-demo.xml\" width=\"335\" height=\"181\"/>\n+  <section href=\"business-card-demo.xml\" width=\"335\" height=\"185\"/>\n </poster>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-poster.xml",
                "sha": "419378b271c0aeedad8e50e0db7021a8df49fc0e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-transformation-chain.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-transformation-chain.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/documentation/poster/xml/fop-transformation-chain.xml",
                "patch": "@@ -19,7 +19,7 @@\n <section xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <title tab-width=\"80\">Transformation Chain</title>\n   <fo:block space-before=\"10pt\" space-before.conditionality=\"retain\" space-after=\"10pt\" text-align=\"center\">\n-    <fo:external-graphic src=\"svg/fop-transformation-chain.svg\" width=\"70%\" content-width=\"scale-to-fit\"/>\n+    <fo:external-graphic src=\"../svg/fop-transformation-chain.svg\" width=\"70%\" content-width=\"scale-to-fit\"/>\n   </fo:block>\n   <p>\n     This diagram shows a complete transformation chain (exemplary). It begins with your data source,",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-transformation-chain.xml",
                "sha": "58c8de856432aafde55fb9ee5ae7c79100f30607",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-use-cases.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-use-cases.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/documentation/poster/xml/fop-use-cases.xml",
                "patch": "@@ -19,8 +19,7 @@\n <section xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <title tab-width=\"50\">Use Cases</title>\n   <fo:table table-layout=\"fixed\" width=\"100%\" border-collapse=\"separate\">\n-    <fo:table-column/>\n-    <fo:table-column/>\n+    <fo:table-column column-width=\"proportional-column-width(1)\" number-columns-repeated=\"2\"/>\n     <fo:table-header>\n       <fo:table-row font-weight=\"bold\">\n         <fo:table-cell border-bottom=\"solid 0.5mm black\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xml/fop-use-cases.xml",
                "sha": "d2f4878a5b5aaf2b895795af73b7dd508743bcba",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xslt/common.xsl",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xslt/common.xsl?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/documentation/poster/xslt/common.xsl",
                "patch": "@@ -37,14 +37,14 @@\n     <xsl:choose>\n       <xsl:when test=\"ancestor::li and not(preceding-sibling::*)\">\n         <fo:block\n-          space-after=\"4pt\">\n+          space-after.optimum=\"0.3em\" space-after.maximum=\"1em\">\n           <xsl:apply-templates/>\n         </fo:block>\n       </xsl:when>\n       <xsl:otherwise>\n         <fo:block\n-          space-before=\"4pt\"\n-          space-after=\"4pt\">\n+          space-before.optimum=\"0.3em\" space-before.maximum=\"1em\"\n+          space-after.optimum=\"0.3em\" space-after.maximum=\"1em\">\n           <xsl:apply-templates/>\n         </fo:block>\n       </xsl:otherwise>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xslt/common.xsl",
                "sha": "5b02f52fd85c881861b66a7ab7c6d2cf2f2c3988",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xslt/fop-poster.xsl",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xslt/fop-poster.xsl?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/documentation/poster/xslt/fop-poster.xsl",
                "patch": "@@ -60,9 +60,6 @@\n               </fo:static-content>\n \t\t\t  <fo:flow flow-name=\"xsl-region-body\">\n                 <xsl:apply-templates select=\"section\"/>\n-                <fo:block-container width=\"1cm\" height=\"5cm\">\n-                  <fo:block/>\n-                </fo:block-container>\n \t\t\t  </fo:flow>\n \t\t\t</fo:page-sequence>\n \t\t</fo:root>\n@@ -84,14 +81,14 @@\n               <path\n                  d=\"M 840,575 L 280,575 c -40,0 -60,-50 -100,-50 L 0,525\"\n                  style=\"fill:none; stroke:blue; stroke-width:5;\" />\n-              <image x=\"680\" y=\"7\" width=\"140\" height=\"60\" xlink:href=\"svg/fop-logo-reconstructed.svg\"/>\n+              <image x=\"680\" y=\"7\" width=\"140\" height=\"60\" xlink:href=\"../svg/fop-logo-reconstructed.svg\"/>\n               <text x=\"15\" y=\"35\" style=\"fill:black; font-weight:bold; font-size:17\">\n                 Apache FOP - The leading open source XSL-FO formatter\n               </text>\n               <text x=\"685\" y=\"74\" style=\"fill:black; font-size:5.5\">\n                 A product of the Apache XML Graphics Project\n               </text>\n-              <image x=\"15\" y=\"530\" width=\"160\" height=\"60\" xlink:href=\"svg/asf-logo.svg\"/>\n+              <image x=\"15\" y=\"530\" width=\"160\" height=\"60\" xlink:href=\"../svg/asf-logo.svg\"/>\n               <text x=\"360\" y=\"560\" style=\"fill:blue; font-size:12\">\n                 For more details, please visit: <a xlink:href=\"http://xmlgraphics.apache.org/fop/\">http://xmlgraphics.apache.org/fop/</a>\n               </text>\n@@ -111,7 +108,7 @@\n \t</xsl:template>\n \t\n \t<xsl:template match=\"section\">\n-\t  <xsl:variable name=\"section-content\" select=\"exslt:node-set(document(@href))\"/>\n+\t  <xsl:variable name=\"section-content\" select=\"exslt:node-set(document(@href, .))\"/>\n       <fo:block \n           space-before.minimum=\"2mm\" space-before.optimum=\"5mm\" space-before.maximum=\"30mm\" \n           space-before.conditionality=\"discard\" space-after.conditionality=\"discard\"\n@@ -129,7 +126,9 @@\n \t        </fo:instream-foreign-object>\n \t    </fo:block>\n \t  </fo:block-container>\n-\t  <fo:block-container width=\"{@width}mm - 8mm\" height=\"{@height}mm - 20mm\" padding=\"4mm\" padding-top=\"16mm\" margin=\"0pt\">\n+\t  <fo:block-container width=\"{@width}mm - 8mm\" height=\"{@height}mm - 24mm\"\n+\t    padding=\"4mm\" padding-top=\"16mm\" padding-bottom=\"8mm\" margin=\"0pt\"\n+\t      display-align=\"distribute\" id=\"section{position()}\">\n \t    <fo:block>\n \t      <xsl:apply-templates select=\"$section-content/section/*[local-name() != 'title']\"/>\n \t    </fo:block>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/poster/xslt/fop-poster.xsl",
                "sha": "dca0f6cfce92a1c768576d923aca98cc83e84cbf",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/sitemap.xmap",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/sitemap.xmap?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 37,
                "filename": "src/documentation/sitemap.xmap",
                "patch": "@@ -20,58 +20,27 @@\n   </map:components>\n \n   <map:pipelines>\n-    <map:pipeline>\n-    \n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)changes.xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/changes2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-    \n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)changes_(.*).xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/changes2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-          <map:parameter name=\"versionNumber\" value=\"{3}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-\n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)releaseNotes_(.*).xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/releaseNotes2document.xsl\">\n-          <map:parameter name=\"versionNumber\" value=\"{3}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-\n-    </map:pipeline>\n     \n     <!-- This is used by xinclude statements in knownissues.xml -->\n     <map:pipeline internal-only=\"true\">\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-layoutengine.xml$\">\n         <map:generate type=\"file\" src=\"../../test/layoutengine/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-fotree.xml$\">\n         <map:generate type=\"file\" src=\"../../test/fotree/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-static.xml$\">\n-        <!--<map:generate type=\"file\" src=\"{project:knownissues}\"/>-->\n+        <!--<map:generate type=\"file\" src=\"{properties:knownissues}\"/>-->\n         <map:generate type=\"file\" src=\"../../known-issues.xml\"/>\n         <map:transform src=\"resources/stylesheets/known-issues2document.xsl\"/>\n         <map:serialize type=\"xml-document\"/>\n@@ -80,21 +49,21 @@\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-layoutengine_(.*).xml$\">\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/layoutengine/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-fotree_(.*).xml$\">\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/fotree/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-static_(.*).xml$\">\n-        <!--<map:generate type=\"file\" src=\"{project:knownissues}\"/>-->\n+        <!--<map:generate type=\"file\" src=\"{properties:knownissues}\"/>-->\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/known-issues.xml\"/>\n         <map:transform src=\"resources/stylesheets/known-issues2document.xsl\"/>\n         <map:serialize type=\"xml-document\"/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/sitemap.xmap",
                "sha": "470db0b7b3a67d8d10722bf0ace1b3745b0e2fbd",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/skinconf.xml",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/skinconf.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 6,
                "filename": "src/documentation/skinconf.xml",
                "patch": "@@ -91,7 +91,7 @@ which will be used to configure the chosen Forrest skin.\n   <favicon-url></favicon-url>\n \n   <!-- The following used to construct a copyright statement -->\n-  <year>1999-2007</year>\n+  <year>1999-2008</year>\n   <vendor>The Apache Software Foundation.</vendor>\n   <copyright-link>http://www.apache.org/licenses/</copyright-link>\n   \n@@ -164,6 +164,7 @@ which will be used to configure the chosen Forrest skin.\n     .ForrestTable td.partial    { background-color: #FFFFCC; text-align: center; }\n     .ForrestTable td.category   { /*background-color: #CFDCED;*/\n                                        font-size: 1.2em }\n+    .menuitemgroup{ display: block;}\n \n   </extra-css>\n \n@@ -311,8 +312,8 @@ which will be used to configure the chosen Forrest skin.\n        portrait).\n        Supported text alignments are left, right, justify (default left).\n     -->\n-    <page size=\"letter\" orientation=\"portrait\" text-align=\"left\"/>\n-\n+    <page size=\"letter\" orientation=\"portrait\" text-align=\"justify\"/>\n+    <page-numbering-format>1</page-numbering-format>\n     <!--\n        Margins can be specified for top, bottom, inner, and outer\n        edges. If double-sided=\"false\", the inner edge is always left\n@@ -322,10 +323,10 @@ which will be used to configure the chosen Forrest skin.\n        Specified below are the default settings.\n     -->\n     <margins double-sided=\"false\">\n-      <top>1in</top>\n-      <bottom>1in</bottom>\n+      <top>0.5in</top>\n+      <bottom>0.5in</bottom>\n       <inner>1in</inner>\n-      <outer>1in</outer>\n+      <outer>0.5in</outer>\n     </margins>\n \n     <!--\n@@ -375,6 +376,13 @@ which will be used to configure the chosen Forrest skin.\n       <width>125</width>\n       <height>125</height>\n     </credit>\n+    <credit box-location=\"alt2\">\n+      <name>ApacheCon US 2008</name>\n+      <url>http://us.apachecon.com/</url>\n+      <image>http://apache.org/ads/ApacheCon/2008-usa-125x125.png</image>\n+      <width>125</width>\n+      <height>125</height>\n+    </credit>\n     \n     <credit role=\"pdf\">\n       <name>PDF created by Apache FOP</name>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/documentation/skinconf.xml",
                "sha": "e87baab34bd844e9682ead3d59a5fad3147de833",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "changes": 237,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java-1.4/org/apache/fop/image/ImageIOImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 237,
                "filename": "src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "patch": "@@ -1,237 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// AWT\n-import java.awt.Color;\n-import java.awt.color.ColorSpace;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.BufferedImage;\n-import java.util.Iterator;\n-\n-// ImageIO\n-import javax.imageio.ImageIO;\n-import javax.imageio.ImageReadParam;\n-import javax.imageio.ImageReader;\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.stream.ImageInputStream;\n-\n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.util.UnitConv;\n-import org.w3c.dom.Element;\n-import org.w3c.dom.NodeList;\n-\n-/**\n- * FopImage object using ImageIO.\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class ImageIOImage extends AbstractFopImage {\n-\n-    private byte[] softMask = null;\n-\n-    /**\n-     * Creates a new ImageIOImage.\n-     * @param info the image info from the ImageReader\n-     */\n-    public ImageIOImage(FopImage.ImageInfo info) {\n-        super(info);\n-        if (\"image/png\".equals(info.mimeType)\n-                || \"image/tiff\".equals(info.mimeType)) {\n-            this.loaded = 0; //TODO The PNG and TIFF Readers cannot read the resolution, yet. \n-        }\n-    }\n-\n-    /**\n-     * @see org.apache.fop.image.AbstractFopImage#loadDimensions()\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            return loadBitmap();\n-        }\n-        return true;\n-    }\n-    \n-    private Element getChild(Element el, String name) {\n-        NodeList nodes = el.getElementsByTagName(name);\n-        if (nodes.getLength() > 0) {\n-            return (Element)nodes.item(0);\n-        } else {\n-            return null;\n-        }\n-    }\n-    \n-    /** @see org.apache.fop.image.AbstractFopImage#loadBitmap() */\n-    protected boolean loadBitmap() {\n-        if (this.bitmaps != null) {\n-            return true;\n-        }\n-        try {\n-            inputStream.reset();\n-            ImageInputStream imgStream = ImageIO.createImageInputStream(inputStream);\n-            Iterator iter = ImageIO.getImageReaders(imgStream);\n-            if (!iter.hasNext()) {\n-                log.error(\"No ImageReader found.\");\n-                return false;\n-            }\n-            ImageReader reader = (ImageReader)iter.next();\n-            ImageReadParam param = reader.getDefaultReadParam();\n-            reader.setInput(imgStream, true, false);\n-            BufferedImage imageData = reader.read(0, param);\n-            \n-            //Read image resolution\n-            IIOMetadata iiometa = reader.getImageMetadata(0);\n-            if (iiometa != null && iiometa.isStandardMetadataFormatSupported()) {\n-                Element metanode = (Element)iiometa.getAsTree(\"javax_imageio_1.0\");\n-                Element dim = getChild(metanode, \"Dimension\");\n-                if (dim != null) {\n-                    Element child;\n-                    child = getChild(dim, \"HorizontalPixelSize\");\n-                    if (child != null) {\n-                        this.dpiHorizontal = UnitConv.IN2MM\n-                                / Float.parseFloat(child.getAttribute(\"value\"));\n-                    }\n-                    child = getChild(dim, \"VerticalPixelSize\");\n-                    if (child != null) {\n-                        this.dpiVertical = UnitConv.IN2MM\n-                                / Float.parseFloat(child.getAttribute(\"value\"));\n-                    }\n-                }\n-            }\n-            imgStream.close();\n-            reader.dispose();\n-            \n-            this.height = imageData.getHeight();\n-            this.width = imageData.getWidth();\n-\n-            ColorModel cm = imageData.getColorModel();\n-            this.bitsPerPixel = cm.getComponentSize(0); //only use first, we assume all are equal\n-            //this.colorSpace = cm.getColorSpace();\n-            //We currently force the image to sRGB\n-            this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_sRGB);\n-\n-            int[] tmpMap = imageData.getRGB(0, 0, this.width,\n-                                            this.height, null, 0, this.width);\n-\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-                \n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        //TODO Is there another case?\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    // TRANSLUCENT\n-                    this.softMask = new byte[width * height];\n-                    imageData.getAlphaRaster().getDataElements(\n-                            0, 0, width, height, this.softMask);\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-\n-            // Should take care of the ColorSpace and bitsPerPixel\n-            this.bitmaps = new byte[this.width * this.height * 3];\n-            for (int i = 0; i < this.height; i++) {\n-                for (int j = 0; j < this.width; j++) {\n-                    int p = tmpMap[i * this.width + j];\n-                    int r = (p >> 16) & 0xFF;\n-                    int g = (p >> 8) & 0xFF;\n-                    int b = (p) & 0xFF;\n-                    this.bitmaps[3 * (i * this.width + j)] \n-                        = (byte)(r & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 1] \n-                        = (byte)(g & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 2] \n-                        = (byte)(b & 0xFF);\n-                }\n-            }\n-\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image: \" + ex.getMessage(), ex);\n-            return false; \n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-        return true;\n-    }\n-\n-    /** @see org.apache.fop.image.AbstractFopImage#loadOriginalData() */\n-    protected boolean loadOriginalData() {\n-        if (inputStream == null && getBitmaps() != null) {\n-            return false;\n-        } else {\n-            return loadDefaultOriginalData();\n-        }\n-    }\n-    \n-    /** @see org.apache.fop.image.FopImage#hasSoftMask() */\n-    public boolean hasSoftMask() {\n-        if (this.bitmaps == null && this.raw == null) {\n-            loadBitmap();\n-        }\n-\n-        return (this.softMask != null);\n-    }\n-\n-    /** @see org.apache.fop.image.FopImage#getSoftMask() */\n-    public byte[] getSoftMask() {\n-        if (this.bitmaps == null) {\n-            loadBitmap();\n-        }\n-\n-        return this.softMask;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "sha": "7ec6b90048ec9a9bbd716f7a416a41286c847ff7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "changes": 161,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 161,
                "filename": "src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "patch": "@@ -1,161 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// AWT\n-import java.awt.Color;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.BufferedImage;\n-\n-// ImageIO\n-import javax.imageio.ImageIO;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * FopImage object using ImageIO.\n- * Special class to allow the use of JpegImage for those\n- * renderers which can embed Jpeg directly but for renderers\n- * which require the decoded data this class delivers it.\n- * @see AbstractFopImage\n- * @see JpegImage\n- */\n-public class JpegImageIOImage extends JpegImage {\n-\n-    /**\n-     * Creates a new JpegImageIOImage.\n-     * @param info the image info from the ImageReader\n-     */\n-    public JpegImageIOImage(FopImage.ImageInfo info) {\n-        super(info);\n-    }\n-\n-    /**\n-     * @see org.apache.fop.image.AbstractFopImage#loadDimensions()\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            return loadBitmap();\n-        }\n-        return true;\n-    }\n-    \n-    /** @see org.apache.fop.image.AbstractFopImage#loadBitmap() */\n-    protected boolean loadBitmap() {\n-        try {\n-            inputStream.reset();\n-            BufferedImage imageData = ImageIO.read(inputStream);\n-\n-            this.height = imageData.getHeight();\n-            this.width = imageData.getWidth();\n-\n-            ColorModel cm = imageData.getColorModel();\n-            this.bitsPerPixel = cm.getComponentSize(0); //only use first, we assume all are equal\n-            this.colorSpace = cm.getColorSpace();\n-\n-            int[] tmpMap = imageData.getRGB(0, 0, this.width,\n-                                            this.height, null, 0, this.width);\n-\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-                \n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        // TRANSLUCENT\n-                        /*\n-                         * this.isTransparent = false;\n-                         * for (int i = 0; i < this.width * this.height; i++) {\n-                         * if (cm.getAlpha(tmpMap[i]) == 0) {\n-                         * this.isTransparent = true;\n-                         * this.transparentColor = new PDFColor(cm.getRed(tmpMap[i]), \n-                         * cm.getGreen(tmpMap[i]), cm.getBlue(tmpMap[i]));\n-                         * break;\n-                         * }\n-                         * }\n-                         * // or use special API...\n-                         */\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-\n-            // Should take care of the ColorSpace and bitsPerPixel\n-            this.bitmaps = new byte[this.width * this.height * 3];\n-            for (int i = 0; i < this.height; i++) {\n-                for (int j = 0; j < this.width; j++) {\n-                    int p = tmpMap[i * this.width + j];\n-                    int r = (p >> 16) & 0xFF;\n-                    int g = (p >> 8) & 0xFF;\n-                    int b = (p) & 0xFF;\n-                    this.bitmaps[3 * (i * this.width + j)] \n-                        = (byte)(r & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 1] \n-                        = (byte)(g & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 2] \n-                        = (byte)(b & 0xFF);\n-                }\n-            }\n-\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image: \" + ex.getMessage(), ex);\n-            return false; \n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-        return true;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "sha": "86d78f66615418b4398dad65f86cd30ef50c7c8c",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/apps/FopFactory.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FopFactory.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/apps/FopFactory.java",
                "patch": "@@ -46,7 +46,6 @@\n import org.apache.fop.fo.ElementMappingRegistry;\n import org.apache.fop.fonts.FontCache;\n import org.apache.fop.hyphenation.HyphenationTreeResolver;\n-import org.apache.fop.image.ImageFactory;\n import org.apache.fop.layoutmgr.LayoutManagerMaker;\n import org.apache.fop.render.RendererFactory;\n import org.apache.fop.render.XMLHandlerRegistry;\n@@ -82,9 +81,6 @@\n \n     private ColorSpaceCache colorSpaceCache = null;\n     \n-    /** Image factory for creating fop image objects */\n-    private ImageFactory imageFactory;\n-\n     /** Image manager for loading and caching image objects */\n     private ImageManager imageManager;\n \n@@ -155,7 +151,6 @@ protected FopFactory() {\n         this.elementMappingRegistry = new ElementMappingRegistry(this);\n         this.foURIResolver = new FOURIResolver(validateUserConfigStrictly());\n         this.colorSpaceCache = new ColorSpaceCache(foURIResolver);\n-        this.imageFactory = new ImageFactory();\n         this.imageManager = new ImageManager(this);\n         this.rendererFactory = new RendererFactory();\n         this.xmlHandlers = new XMLHandlerRegistry();\n@@ -290,11 +285,6 @@ public ContentHandlerFactoryRegistry getContentHandlerFactoryRegistry() {\n         return this.contentHandlerFactoryRegistry;\n     }\n \n-    /** @return the image factory */\n-    public ImageFactory getImageFactory() {\n-        return this.imageFactory;\n-    }\n-\n     /**\n      * Returns the image manager.\n      * @return the image manager",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/apps/FopFactory.java",
                "sha": "ce77d9040bee733c87f0f56a30e69fe1fde92fb1",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/cli/InputHandler.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/InputHandler.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/cli/InputHandler.java",
                "patch": "@@ -39,8 +39,13 @@\n import javax.xml.transform.stream.StreamResult;\n import javax.xml.transform.stream.StreamSource;\n \n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.XMLReader;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.apps.Fop;\n@@ -150,6 +155,7 @@ protected Source createMainSource() {\n         try {\n             InputSource is = new InputSource(new FileInputStream(\n                     this.sourcefile));\n+            is.setSystemId(this.sourcefile.toURI().toASCIIString());\n             SAXParserFactory spf = SAXParserFactory.newInstance();\n             spf.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n             spf.setFeature(\"http://apache.org/xml/features/xinclude\", true);\n@@ -221,7 +227,7 @@ protected void transformTo(Result result) throws FOPException {\n      * {@inheritDoc}\n      */\n     public void warning(TransformerException exc) {\n-        log.warn(exc.toString());\n+        log.warn(exc.getLocalizedMessage());\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/cli/InputHandler.java",
                "sha": "4c38fa5c762640d7c1966f38201c80f061cd2ca2",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/ElementMapping.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMapping.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/ElementMapping.java",
                "patch": "@@ -19,7 +19,7 @@\n \n package org.apache.fop.fo;\n \n-import java.util.HashMap;\n+import java.util.Map;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n@@ -37,7 +37,7 @@\n     public static final String DEFAULT = \"<default>\";\n \n     /** The HashMap table of formatting objects defined by the ElementMapping */\n-    protected HashMap foObjs = null;\n+    protected Map foObjs = null;\n \n     /** The namespace for the ElementMapping */\n     protected String namespaceURI = null;\n@@ -47,7 +47,7 @@\n      *\n      * @return Table of Maker objects for this ElementMapping\n      */\n-    public HashMap getTable() {\n+    public Map getTable() {\n         if (foObjs == null) {\n             initialize();\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/ElementMapping.java",
                "sha": "495983750d54518b46dbbb90d10c11eb9420b3d4",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOPropertyMapping.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "patch": "@@ -412,27 +412,31 @@ private void createAbsolutePositionProperties() {\n         l.setInherited(false);\n         l.addEnum(\"auto\", getEnumProperty(EN_AUTO, \"AUTO\"));\n         l.setDefault(\"auto\");\n+        l.setPercentBase(LengthBase.CONTAINING_BLOCK_HEIGHT);\n         addPropertyMaker(\"top\", l);\n \n         // right\n         l  = new LengthProperty.Maker(PR_RIGHT);\n         l.setInherited(false);\n         l.addEnum(\"auto\", getEnumProperty(EN_AUTO, \"AUTO\"));\n         l.setDefault(\"auto\");\n+        l.setPercentBase(LengthBase.CONTAINING_BLOCK_WIDTH);\n         addPropertyMaker(\"right\", l);\n \n         // bottom\n         l  = new LengthProperty.Maker(PR_BOTTOM);\n         l.setInherited(false);\n         l.addEnum(\"auto\", getEnumProperty(EN_AUTO, \"AUTO\"));\n         l.setDefault(\"auto\");\n+        l.setPercentBase(LengthBase.CONTAINING_BLOCK_HEIGHT);\n         addPropertyMaker(\"bottom\", l);\n \n         // left\n         l  = new LengthProperty.Maker(PR_LEFT);\n         l.setInherited(false);\n         l.addEnum(\"auto\", getEnumProperty(EN_AUTO, \"AUTO\"));\n         l.setDefault(\"auto\");\n+        l.setPercentBase(LengthBase.CONTAINING_BLOCK_WIDTH);\n         addPropertyMaker(\"left\", l);\n     }\n \n@@ -1161,6 +1165,7 @@ private void createMarginBlockProperties() {\n         m = new LengthProperty.Maker(PR_START_INDENT);\n         m.setInherited(true);\n         m.setDefault(\"0pt\");\n+        m.setPercentBase(LengthBase.CONTAINING_REFAREA_WIDTH);\n         IndentPropertyMaker sCorr = new IndentPropertyMaker(m);\n         sCorr.setCorresponding(PR_MARGIN_LEFT, PR_MARGIN_RIGHT, PR_MARGIN_TOP);\n         sCorr.setUseParent(false);\n@@ -1177,6 +1182,7 @@ private void createMarginBlockProperties() {\n         m = new LengthProperty.Maker(PR_END_INDENT);\n         m.setInherited(true);\n         m.setDefault(\"0pt\");\n+        m.setPercentBase(LengthBase.CONTAINING_REFAREA_WIDTH);\n         IndentPropertyMaker eCorr = new IndentPropertyMaker(m);\n         eCorr.setCorresponding(PR_MARGIN_RIGHT, PR_MARGIN_LEFT, PR_MARGIN_BOTTOM);\n         eCorr.setUseParent(false);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "sha": "539648f5a2ea3fdaa0248773d8c0ee5751208615",
                "status": "modified"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "changes": 104,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOTreeBuilder.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 69,
                "filename": "src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "patch": "@@ -38,7 +38,6 @@\n import org.apache.fop.fo.ElementMapping.Maker;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fo.pagination.Root;\n-import org.apache.fop.image.ImageFactory;\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactory.ObjectBuiltListener;\n import org.apache.fop.util.ContentHandlerFactory.ObjectSource;\n@@ -57,9 +56,7 @@\n     /** The registry for ElementMapping instances */\n     protected ElementMappingRegistry elementMappingRegistry;\n \n-    /**\n-     * The root of the formatting object tree\n-     */\n+    /** The root of the formatting object tree */\n     protected Root rootFObj = null;\n \n     /** Main DefaultHandler that handles the FO namespace. */\n@@ -68,10 +65,7 @@\n     /** Current delegate ContentHandler to receive the SAX events */\n     protected ContentHandler delegate;\n     \n-    /**\n-     * The class that handles formatting and rendering to a stream\n-     * (mark-fop@inomial.com)\n-     */\n+    /** The object that handles formatting and rendering to a stream */\n     private FOEventHandler foEventHandler;\n \n     /** The SAX locator object managing the line and column counters */\n@@ -86,14 +80,18 @@\n     private int depth;\n     \n     /**\n-     * FOTreeBuilder constructor\n+     * <code>FOTreeBuilder</code> constructor\n+     * \n      * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n-     * @param foUserAgent in effect for this process\n-     * @param stream OutputStream to direct results\n-     * @throws FOPException if the FOTreeBuilder cannot be properly created\n+     * @param foUserAgent   the {@link FOUserAgent} in effect for this process\n+     * @param stream    the <code>OutputStream</code> to direct the results to\n+     * @throws FOPException if the <code>FOTreeBuilder</code> cannot be properly created\n      */\n-    public FOTreeBuilder(String outputFormat, FOUserAgent foUserAgent, \n-        OutputStream stream) throws FOPException {\n+    public FOTreeBuilder(\n+                String outputFormat, \n+                FOUserAgent foUserAgent,\n+                OutputStream stream) \n+            throws FOPException {\n \n         this.userAgent = foUserAgent;\n         this.elementMappingRegistry = userAgent.getFactory().getElementMappingRegistry();        \n@@ -108,40 +106,25 @@ public PropertyList make(FObj fobj, PropertyList parentPropertyList) {\n         });\n     }\n \n-    /**\n-     * This method enables to reduce memory consumption of the FO tree slightly. When it returns\n-     * true no Locator is passed to the FO tree nodes which would copy the information into\n-     * a SAX LocatorImpl instance.\n-     * @return true if no context information should be stored on each node in the FO tree.\n-     * @deprecated Use FOUserAgent.isLocatorEnabled() instead.\n-     */\n-    protected boolean isLocatorDisabled() {\n-        return !userAgent.isLocatorEnabled();\n-    }\n-    \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void setDocumentLocator(Locator locator) {\n         this.locator = locator;\n     }\n     \n-    /** @return a Locator instance if it is available and not disabled */\n+    /** \n+     * @return a {@link Locator} instance if it is available and not disabled\n+     */\n     protected Locator getEffectiveLocator() {\n         return (userAgent.isLocatorEnabled() ? this.locator : null);\n     }\n     \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public void characters(char[] data, int start, int length) \n                 throws SAXException {\n         delegate.characters(data, start, length);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void startDocument() throws SAXException {\n         if (used) {\n             throw new IllegalStateException(\"FOTreeBuilder (and the Fop class) cannot be reused.\"\n@@ -159,9 +142,7 @@ public void startDocument() throws SAXException {\n         this.delegate = this.mainFOHandler;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void endDocument() throws SAXException {\n         this.delegate.endDocument();\n         if (this.rootFObj == null && empty) {\n@@ -173,24 +154,16 @@ public void endDocument() throws SAXException {\n             log.debug(\"Parsing of document complete\");\n         }\n         foEventHandler.endDocument();\n-        \n-        //Notify the image factory that this user agent has expired.\n-        ImageFactory imageFactory = userAgent.getFactory().getImageFactory();\n-        imageFactory.removeContext(this.userAgent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public void startElement(String namespaceURI, String localName, String rawName,\n                              Attributes attlist) throws SAXException {\n         this.depth++;\n         delegate.startElement(namespaceURI, localName, rawName, attlist);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public void endElement(String uri, String localName, String rawName)\n                 throws SAXException {\n         this.delegate.endElement(uri, localName, rawName);\n@@ -206,7 +179,8 @@ public void endElement(String uri, String localName, String rawName)\n     }\n \n     /**\n-     * Finds the Maker used to create node objects of a particular type\n+     * Finds the {@link Maker} used to create {@link FONode} objects of a particular type\n+     * \n      * @param namespaceURI URI for the namespace of the element\n      * @param localName name of the Element\n      * @return the ElementMapping.Maker that can create an FO object for this element\n@@ -218,7 +192,7 @@ private Maker findFOMaker(String namespaceURI, String localName) throws FOPExcep\n \n     /** {@inheritDoc} */\n     public void warning(SAXParseException e) {\n-        log.warn(e.toString());\n+        log.warn(e.getLocalizedMessage());\n     }\n \n     /** {@inheritDoc} */\n@@ -233,7 +207,8 @@ public void fatalError(SAXParseException e) throws SAXException {\n     }\n \n     /**\n-     * Provides access to the underlying FOEventHandler object.\n+     * Provides access to the underlying {@link FOEventHandler} object.\n+     * \n      * @return the FOEventHandler object\n      */\n     public FOEventHandler getEventHandler() {\n@@ -244,6 +219,7 @@ public FOEventHandler getEventHandler() {\n      * Returns the results of the rendering process. Information includes\n      * the total number of pages generated and the number of pages per\n      * page-sequence.\n+     * \n      * @return the results of the rendering process.\n      */\n     public FormattingResults getResults() {\n@@ -257,23 +233,17 @@ public FormattingResults getResults() {\n     }\n     \n     /**\n-     * Main DefaultHandler implementation which builds the FO tree.\n+     * Main <code>DefaultHandler</code> implementation which builds the FO tree.\n      */\n     private class MainFOHandler extends DefaultHandler {\n         \n-        /**\n-         * Current formatting object being handled\n-         */\n+        /** Current formatting object being handled */\n         protected FONode currentFObj = null;\n \n-        /**\n-         * Current propertyList for the node being handled.\n-         */\n+        /** Current propertyList for the node being handled */\n         protected PropertyList currentPropertyList;\n         \n-        /**\n-         * Current marker nesting-depth\n-         */\n+        /** Current marker nesting-depth */\n         private int nestedMarkerDepth = 0;\n \n         /** {@inheritDoc} */\n@@ -298,11 +268,7 @@ public void startElement(String namespaceURI, String localName, String rawName,\n             } else { // check that incoming node is valid for currentFObj\n                 if (namespaceURI.equals(FOElementMapping.URI)\n                     || namespaceURI.equals(ExtensionElementMapping.URI)) {\n-                    try {\n-                        currentFObj.validateChildNode(locator, namespaceURI, localName);\n-                    } catch (ValidationException e) {\n-                        throw e;\n-                    }\n+                    currentFObj.validateChildNode(locator, namespaceURI, localName);\n                 }\n             }\n             \n@@ -391,12 +357,11 @@ public void endElement(String uri, String localName, String rawName)\n             if (currentFObj.getParent() == null) {\n                 log.debug(\"endElement for top-level \" + currentFObj.getName());\n             }\n+            \n             currentFObj = currentFObj.getParent();\n         }\n \n-        /**\n-         * {@inheritDoc} \n-         */\n+        /** {@inheritDoc} */\n         public void characters(char[] data, int start, int length) \n             throws FOPException {\n             if (currentFObj != null) {\n@@ -405,6 +370,7 @@ public void characters(char[] data, int start, int length)\n             }\n         }\n \n+        /** {@inheritDoc} */\n         public void endDocument() throws SAXException {\n             currentFObj = null;\n         }        ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "sha": "d02a058fe8039e01d33d07c4c7df9a22f3ad06aa",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "patch": "@@ -25,8 +25,6 @@\n  */\n public class EmptyGridUnit extends GridUnit {\n \n-    private TableBody body;\n-\n     /**\n      * @param table the containing table\n      * @param row the table-row element this grid unit belongs to (if any)\n@@ -56,11 +54,6 @@ public boolean isPrimary() {\n         return false;\n     }\n \n-    /** {@inheritDoc} */\n-    public TableBody getBody() {\n-        return this.body;\n-    }\n-\n     /** {@inheritDoc} */\n     public boolean isLastGridUnitColSpan() {\n         return true;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "sha": "2c910d3f8184e4165c9b123d20525a6381a8d09c",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/GridUnit.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "patch": "@@ -19,7 +19,6 @@\n \n package org.apache.fop.fo.flow.table;\n \n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground.BorderInfo;\n import org.apache.fop.layoutmgr.table.CollapsingBorderModel;\n@@ -165,14 +164,6 @@ void setRow(TableRow row) {\n         this.row = row;\n     }\n \n-    public TableBody getBody() {\n-        FONode node = getCell();\n-        while (node != null && !(node instanceof TableBody)) {\n-            node = node.getParent();\n-        }\n-        return (TableBody) node;\n-    }\n-\n     /**\n      * Returns the before-start grid unit of the cell containing this grid unit.\n      * ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "sha": "b9394ff3102d01a115a926b282c26a5b2b33fde1",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "patch": "@@ -23,6 +23,7 @@\n import java.util.List;\n \n import org.apache.fop.fo.Constants;\n+import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.layoutmgr.ElementListUtils;\n import org.apache.fop.layoutmgr.table.TableCellLayoutManager;\n@@ -71,6 +72,19 @@\n                 .getValue() / 2;  // TODO\n     }\n \n+    /**\n+     * Returns the fo:table-header/footer/body element containing this cell.\n+     * \n+     * @return the enclosing table part\n+     */\n+    public TableBody getTableBody() {\n+        FONode node = cell.getParent();\n+        if (node instanceof TableRow) {\n+            node = node.getParent();\n+        }\n+        return (TableBody) node;\n+    }\n+\n     public TableCellLayoutManager getCellLM() {\n         assert cellLM != null;\n         return cellLM;\n@@ -224,18 +238,6 @@ public int getContentLength() {\n         return contentLength;\n     }\n \n-    /** @return true if cell/row has an explicit BPD/height */\n-    public boolean hasBPD() {\n-        if (!getCell().getBlockProgressionDimension().getOptimum(null).isAuto()) {\n-            return true;\n-        }\n-        if (getRow() != null\n-                && !getRow().getBlockProgressionDimension().getOptimum(null).isAuto()) {\n-            return true;\n-        }\n-        return false;\n-    }\n-\n     /**\n      * Returns the grid units belonging to the same span as this one.\n      *",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "sha": "8af896fa21884badf097c55a99b5161a6d743f25",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/properties/CommonHyphenation.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/properties/CommonHyphenation.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/properties/CommonHyphenation.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.expr.PropertyException;\n@@ -142,7 +143,7 @@ public char getHyphChar(org.apache.fop.fonts.Font font) {\n             FontMetrics metrics = font.getFontMetrics();\n             if (metrics instanceof Typeface) {\n                 Typeface typeface = (Typeface)metrics;\n-                if (\"SymbolEncoding\".equals(typeface.getEncoding())) {\n+                if (\"SymbolEncoding\".equals(typeface.getEncodingName())) {\n                     //SymbolEncoding doesn't have HYPHEN_MINUS, so replace by MINUS_SIGN\n                 } else {\n                     //only warn if the encoding is not SymbolEncoding\n@@ -154,7 +155,7 @@ public char getHyphChar(org.apache.fop.fonts.Font font) {\n             FontMetrics metrics = font.getFontMetrics();\n             if (metrics instanceof Typeface) {\n                 Typeface typeface = (Typeface)metrics;\n-                if (\"ZapfDingbatsEncoding\".equals(typeface.getEncoding())) {\n+                if (\"ZapfDingbatsEncoding\".equals(typeface.getEncodingName())) {\n                     //ZapfDingbatsEncoding doesn't have HYPHEN_MINUS, so replace by ' '\n                 } else {\n                     //only warn if the encoding is not ZapfDingbatsEncoding",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/properties/CommonHyphenation.java",
                "sha": "f47ddbe0c75a12e321f7afcbe6238a900e6accaf",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "patch": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  *\n-/* $Id:$ */\n+/* $Id$ */\n \n package org.apache.fop.fo.properties;\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "sha": "5a5cf95c5aaba3ba4f200827eca3b62266662628",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/AbstractCodePointMapping.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/AbstractCodePointMapping.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/fonts/AbstractCodePointMapping.java",
                "patch": "@@ -29,7 +29,7 @@\n /**\n  * Abstract base class for code point mapping classes (1-byte character encodings).\n  */\n-public class AbstractCodePointMapping {\n+public class AbstractCodePointMapping implements SingleByteEncoding {\n \n     private String name;\n     private char[] latin1Map;\n@@ -114,19 +114,12 @@ protected void buildFromTable(int[] table) {\n         }\n     }\n \n-    /**\n-     * Returns the encoding's name.\n-     * @return the name of the encoding\n-     */\n+    /** {@inheritDoc} */\n     public String getName() {\n         return this.name;\n     }\n \n-    /**\n-     * Maps a Unicode character to a code point in the encoding.\n-     * @param c the Unicode character to map\n-     * @return the coid point in the encoding or 0 (=.notdef) if not found\n-     */\n+    /** {@inheritDoc} */\n     public final char mapChar(char c) {\n         if (c < 256) {\n             char latin1 = latin1Map[c];\n@@ -172,8 +165,8 @@ public final char mapChar(char c) {\n             }\n         }\n         \n-        putFallbackCharacter(c, '\\0');\n-        return 0;\n+        putFallbackCharacter(c, NOT_FOUND_CODE_POINT);\n+        return NOT_FOUND_CODE_POINT;\n     }\n \n     private void putFallbackCharacter(char c, char mapTo) {\n@@ -227,11 +220,7 @@ public short getCodePointForGlyph(String charName) {\n         return -1;\n     }\n     \n-    /**\n-     * Returns the array of character names for this encoding.\n-     * @return the array of character names\n-     *                  (unmapped code points are represented by a \".notdef\" value)\n-     */\n+    /** {@inheritDoc} */\n     public String[] getCharNameMap() {\n         if (this.charNameMap != null) {\n             String[] copy = new String[this.charNameMap.length];",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/AbstractCodePointMapping.java",
                "sha": "3a2ac50220db96d75f174781bc0b572127f91713",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Base14Font.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/Base14Font.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fonts/Base14Font.java",
                "patch": "@@ -17,15 +17,11 @@\n \n /* $Id$ */\n  \n+package org.apache.fop.fonts;\n \n-package org.apache.fop.svg;\n /**\n- * Adapter to allow subclassing java.awt.GraphicsConfiguration without\n- * compilation errors.\n- * The version for JDK 1.3 is just empty. \n- * \n+ * Base class for all Base 14 fonts.\n  */\n-abstract public class GraphicsConfiguration extends java.awt.GraphicsConfiguration {\n-\n+public abstract class Base14Font extends Typeface {\n \n }",
                "previous_filename": "src/java-1.3/org/apache/fop/svg/GraphicsConfiguration.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Base14Font.java",
                "sha": "26c11e72b0f16238311347dc4a723c5b16e926a0",
                "status": "renamed"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/CIDFont.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/CIDFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 25,
                "filename": "src/java/org/apache/fop/fonts/CIDFont.java",
                "patch": "@@ -20,31 +20,14 @@\n package org.apache.fop.fonts;\n \n //Java\n-import java.util.Map;\n \n /**\n  * Abstract base class for CID fonts.\n  */\n public abstract class CIDFont extends CustomFont {\n \n-    /**\n-     * usedGlyphs contains orginal, new glyph index\n-     */\n-    public Map usedGlyphs = new java.util.HashMap();\n-\n-    /**\n-     * usedGlyphsIndex contains new glyph, original index\n-     */\n-    public Map usedGlyphsIndex = new java.util.HashMap();\n-    public int usedGlyphsCount = 0;\n-\n-    /**\n-     * usedCharsIndex contains new glyph, original char\n-     */\n-    public Map usedCharsIndex = new java.util.HashMap();\n-\n-    //private PDFWArray warray = new PDFWArray();\n-    public int width[] = null;\n+    /** Contains the character widths for all characters in the font */\n+    protected int[] width = null;\n \n     // ---- Required ----\n     /**\n@@ -73,6 +56,11 @@\n      */\n     public abstract int getSupplement();\n \n+    /**\n+     * Returns the subset information for this font.\n+     * @return the subset information\n+     */\n+    public abstract CIDSubset getCIDSubset();\n \n     // ---- Optional ----\n     /**\n@@ -88,9 +76,4 @@ public boolean isMultiByte() {\n         return true;\n     }\n \n-    /**\n-     * Returns a char array containing all Unicode characters that have been accessed.\n-     * @return a char array with all used Unicode characters\n-     */\n-    public abstract char[] getCharsUsed();\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/CIDFont.java",
                "sha": "7216c8f15d5332639e69ea4e23d53f5aa0fdd9e5",
                "status": "modified"
            },
            {
                "additions": 177,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/CIDSubset.java",
                "changes": 177,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/CIDSubset.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/CIDSubset.java",
                "patch": "@@ -0,0 +1,177 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fonts;\n+\n+import java.util.BitSet;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.apache.fop.util.CharUtilities;\n+\n+//Naming:\n+//glyph index: original index of the glyph in the non-subset font (!= unicode index)\n+//character selector: index into a set of glyphs. For subset CID fonts, this starts at 0. For\n+//  non-subset fonts, this is the same as the glyph index.\n+//Unicode index: The Unicode codepoint of a character.\n+//Glyph name: the Adobe glyph name (as found in Glyphs.java)\n+\n+/**\n+ * Keeps track of the glyphs used in a document. This information is later used to build\n+ * a subset of a font.\n+ */\n+public class CIDSubset {\n+\n+    /**\n+     * usedGlyphs contains orginal, new glyph index (glyph index -> char selector)\n+     */\n+    private Map/*<Integer, Integer>*/ usedGlyphs = new java.util.HashMap();\n+\n+    /**\n+     * usedGlyphsIndex contains new glyph, original index (char selector -> glyph index)\n+     */\n+    private Map/*<Integer, Integer>*/ usedGlyphsIndex = new java.util.HashMap();\n+    private int usedGlyphsCount = 0;\n+\n+    /**\n+     * usedCharsIndex contains new glyph, original char (char selector -> Unicode)\n+     */\n+    private Map/*<Integer, Character>*/ usedCharsIndex = new java.util.HashMap();\n+    \n+    public CIDSubset() {\n+    }\n+    \n+    /**\n+     * Adds the initial 3 glyphs which are the same for all CID subsets.\n+     */\n+    public void setupFirstThreeGlyphs() {\n+        // Make sure that the 3 first glyphs are included\n+        usedGlyphs.put(new Integer(0), new Integer(0));\n+        usedGlyphsIndex.put(new Integer(0), new Integer(0));\n+        usedGlyphsCount++;\n+        usedGlyphs.put(new Integer(1), new Integer(1));\n+        usedGlyphsIndex.put(new Integer(1), new Integer(1));\n+        usedGlyphsCount++;\n+        usedGlyphs.put(new Integer(2), new Integer(2));\n+        usedGlyphsIndex.put(new Integer(2), new Integer(2));\n+        usedGlyphsCount++;\n+    }\n+    \n+    /**\n+     * Returns the original index of the glyph inside the (non-subset) font's glyph list. This\n+     * index can be used to access the character width information, for example.\n+     * @param subsetIndex the subset index (character selector) to access the glyph\n+     * @return the original index (or -1 if no glyph index is available for the subset index)\n+     */\n+    public int getGlyphIndexForSubsetIndex(int subsetIndex) {\n+        Integer glyphIndex = (Integer)usedGlyphsIndex.get(new Integer(subsetIndex));\n+        if (glyphIndex != null) {\n+            return glyphIndex.intValue();\n+        } else {\n+            return -1;\n+        }\n+    }\n+    \n+    /**\n+     * Returns the Unicode value for a subset index (character selector). If there's no such\n+     * Unicode value, the \"NOT A CHARACTER\" (0xFFFF) is returned.\n+     * @param subsetIndex the subset index (character selector)\n+     * @return the Unicode value or \"NOT A CHARACTER\" (0xFFFF)\n+     */\n+    public char getUnicodeForSubsetIndex(int subsetIndex) {\n+        Character mapValue = (Character)usedCharsIndex.get(new Integer(subsetIndex));\n+        if (mapValue != null) {\n+            return mapValue.charValue();\n+        } else {\n+            return CharUtilities.NOT_A_CHARACTER;\n+        }\n+    }\n+    \n+    /**\n+     * Maps a character to a character selector for a font subset. If the character isn't in the\n+     * subset, yet, it is added and a new character selector returned. Otherwise, the already\n+     * allocated character selector is returned from the existing map/subset.\n+     * @param glyphIndex the glyph index of the character\n+     * @param unicode the Unicode index of the character\n+     * @return the subset index\n+     */\n+    public int mapSubsetChar(int glyphIndex, char unicode) {\n+        // Reencode to a new subset font or get the reencoded value\n+        // IOW, accumulate the accessed characters and build a character map for them\n+        Integer subsetCharSelector = (Integer)usedGlyphs.get(new Integer(glyphIndex));\n+        if (subsetCharSelector == null) {\n+            int selector = usedGlyphsCount;\n+            usedGlyphs.put(new Integer(glyphIndex),\n+                           new Integer(selector));\n+            usedGlyphsIndex.put(new Integer(selector),\n+                                new Integer(glyphIndex));\n+            usedCharsIndex.put(new Integer(selector),\n+                                new Character(unicode));\n+            usedGlyphsCount++;\n+            return selector;\n+        } else {\n+            return subsetCharSelector.intValue();\n+        }\n+    }\n+\n+    /**\n+     * Returns an unmodifiable Map of the font subset. It maps from glyph index to\n+     * character selector (i.e. the subset index in this case).\n+     * @return Map Map&lt;Integer, Integer&gt; of the font subset\n+     */\n+    public Map/*<Integer, Integer>*/ getSubsetGlyphs() {\n+        return Collections.unmodifiableMap(this.usedGlyphs);\n+    }\n+    \n+    /**\n+     * Returns a char array containing all Unicode characters that are in the subset.\n+     * @return a char array with all used Unicode characters\n+     */\n+    public char[] getSubsetChars() {\n+        char[] charArray = new char[usedGlyphsCount];\n+        for (int i = 0; i < usedGlyphsCount; i++) {\n+            charArray[i] = getUnicodeForSubsetIndex(i);\n+        }\n+        return charArray;\n+    }\n+\n+    /**\n+     * Returns the number of glyphs in the subset.\n+     * @return the number of glyphs in the subset\n+     */\n+    public int getSubsetSize() {\n+        return this.usedGlyphsCount;\n+    }\n+    \n+    /**\n+     * Returns a BitSet with bits set for each available glyph index.\n+     * @return a BitSet indicating available glyph indices\n+     */\n+    public BitSet getGlyphIndexBitSet() {\n+        BitSet bitset = new BitSet();\n+        Iterator iter = usedGlyphs.keySet().iterator();\n+        while (iter.hasNext()) {\n+            Integer cid = (Integer)iter.next();\n+            bitset.set(cid.intValue());\n+        }\n+        return bitset;\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/CIDSubset.java",
                "sha": "6bcfc0b71bf4625e4f7f7bf4d4a4ddd8bae5b541",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Font.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/Font.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fonts/Font.java",
                "patch": "@@ -199,7 +199,7 @@ public char mapChar(char c) {\n \n         // Use default CodePointMapping\n         char d = CodePointMapping.getMapping(\"WinAnsiEncoding\").mapChar(c);\n-        if (d != 0) {\n+        if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {\n             c = d;\n         } else {\n             log.warn(\"Glyph \" + (int) c + \" not available in font \" + fontName);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Font.java",
                "sha": "ff71434c6034693c9b322c4880a21bd9c7b1d0a3",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/LazyFont.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/LazyFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 13,
                "filename": "src/java/org/apache/fop/fonts/LazyFont.java",
                "patch": "@@ -64,11 +64,10 @@ public LazyFont(EmbedFontInfo fontInfo, FontResolver resolver) {\n         this.resolver = resolver;\n     }\n \n-    /**\n-     * String representation of LazyFont\n-     */\n+    /** {@inheritDoc} */\n     public String toString() {\n-        return ( \"metrics-url=\" + metricsFileName + \", embed-url=\" + fontEmbedPath + \", kerning=\" + useKerning );\n+        return ( \"metrics-url=\" + metricsFileName + \", embed-url=\" + fontEmbedPath\n+                + \", kerning=\" + useKerning );\n     }\n         \n     private void load(boolean fail) {\n@@ -80,8 +79,9 @@ private void load(boolean fail) {\n                     if (resolver != null) {\n                         Source source = resolver.resolve(metricsFileName);\n                         if (source == null) {\n-                            String err = \"Cannot load font: failed to create Source from metrics file \" \n-                                + metricsFileName; \n+                            String err\n+                                = \"Cannot load font: failed to create Source from metrics file \" \n+                                    + metricsFileName; \n                             if (fail) {\n                                 throw new RuntimeException(err);\n                             } else {\n@@ -112,8 +112,8 @@ private void load(boolean fail) {\n                         src.setSystemId(source.getSystemId()); \n                         reader = new FontReader(src);\n                     } else {\n-                        reader \n-                            = new FontReader(new InputSource(new URL(metricsFileName).openStream()));\n+                        reader = new FontReader(new InputSource(\n+                                    new URL(metricsFileName).openStream()));\n                     }\n                     reader.setKerningEnabled(useKerning);\n                     reader.setFontEmbedPath(fontEmbedPath);\n@@ -153,12 +153,10 @@ public Typeface getRealFont() {\n     }\n \n     // ---- Font ----\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public String getEncoding() {\n+    /** {@inheritDoc} */\n+    public String getEncodingName() {\n         load(true);\n-        return realFont.getEncoding();\n+        return realFont.getEncodingName();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/LazyFont.java",
                "sha": "8997069d4ed380c93d6279327a74068a161acbe0",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/MultiByteFont.java",
                "changes": 156,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/MultiByteFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 118,
                "filename": "src/java/org/apache/fop/fonts/MultiByteFont.java",
                "patch": "@@ -39,22 +39,17 @@\n \n     private String namePrefix = null;    // Quasi unique prefix\n \n+    private CIDSubset subset = new CIDSubset();\n+    \n+    /** A map from Unicode indices to glyph indices */\n     private BFEntry[] bfentries = null;\n \n     /**\n      * Default constructor\n      */\n     public MultiByteFont() {\n         // Make sure that the 3 first glyphs are included\n-        usedGlyphs.put(new Integer(0), new Integer(0));\n-        usedGlyphsIndex.put(new Integer(0), new Integer(0));\n-        usedGlyphsCount++;\n-        usedGlyphs.put(new Integer(1), new Integer(1));\n-        usedGlyphsIndex.put(new Integer(1), new Integer(1));\n-        usedGlyphsCount++;\n-        usedGlyphs.put(new Integer(2), new Integer(2));\n-        usedGlyphsIndex.put(new Integer(2), new Integer(2));\n-        usedGlyphsCount++;\n+        subset.setupFirstThreeGlyphs();\n         \n         // Create a quasiunique prefix for fontname\n         synchronized (this.getClass()) {\n@@ -77,37 +72,27 @@ public MultiByteFont() {\n         setFontType(FontType.TYPE0);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getDefaultWidth() {\n         return defaultWidth;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getRegistry() {\n         return \"Adobe\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getOrdering() {\n         return \"UCS\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getSupplement() {\n         return 0;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public CIDFontType getCIDType() {\n         return cidType;\n     }\n@@ -133,68 +118,47 @@ public String getEmbedFontName() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean isEmbeddable() {\n         return !(getEmbedFileName() == null && getEmbedResourceName() == null);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    public String getEncoding() {\n+    /** {@inheritDoc} */\n+    public CIDSubset getCIDSubset() {\n+        return this.subset;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String getEncodingName() {\n         return encoding;\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public int getWidth(int i, int size) {\n         if (isEmbeddable()) {\n-            Integer idx = (Integer)usedGlyphsIndex.get(new Integer(i));\n-            return size * width[idx.intValue()];\n+            int glyphIndex = subset.getGlyphIndexForSubsetIndex(i);\n+            return size * width[glyphIndex];\n         } else {\n             return size * width[i];\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int[] getWidths() {\n         int[] arr = new int[width.length];\n         System.arraycopy(width, 0, arr, 0, width.length - 1);\n-        /*\n-        for (int i = 0; i < arr.length; i++)\n-            arr[i] *= size;\n-        */\n         return arr;\n     }\n \n     /**\n-     * Remaps a codepoint based.\n-     * @param i codepoint to remap\n-     * @return new codepoint\n+     * Returns the glyph index for a Unicode character. The method returns 0 if there's no\n+     * such glyph in the character map.\n+     * @param c the Unicode character index\n+     * @return the glyph index (or 0 if the glyph is not available)\n      */\n-/* unused\n-    public Integer reMap(Integer i) {\n-        if (isEmbeddable()) {\n-            Integer ret = (Integer)usedGlyphsIndex.get(i);\n-            if (ret == null) {\n-                ret = i;\n-            }\n-            return ret;\n-        } else {\n-            return i;\n-        }\n-\n-    }\n-*/\n-\n     private int findGlyphIndex(char c) {\n         int idx = (int)c;\n-        int retIdx = 0;\n+        int retIdx = 0; //.notdef\n \n         for (int i = 0; (i < bfentries.length) && retIdx == 0; i++) {\n             if (bfentries[i].getUnicodeStart() <= idx\n@@ -208,48 +172,30 @@ private int findGlyphIndex(char c) {\n         return retIdx;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public char mapChar(char c) {\n         notifyMapOperation();\n-        int retIdx = findGlyphIndex(c);\n+        int glyphIndex = findGlyphIndex(c);\n \n         if (isEmbeddable()) {\n-            // Reencode to a new subset font or get\n-            // the reencoded value\n-            Integer newIdx = (Integer)usedGlyphs.get(new Integer(retIdx));\n-            if (newIdx == null) {\n-                usedGlyphs.put(new Integer(retIdx),\n-                               new Integer(usedGlyphsCount));\n-                usedGlyphsIndex.put(new Integer(usedGlyphsCount),\n-                                    new Integer(retIdx));\n-                usedCharsIndex.put(new Integer(usedGlyphsCount),\n-                                    new Integer((int) c));\n-                retIdx = usedGlyphsCount;\n-                usedGlyphsCount++;\n-            } else {\n-                retIdx = newIdx.intValue();\n-            }\n+            glyphIndex = subset.mapSubsetChar(glyphIndex, c);\n         }\n \n-        return (char)retIdx;\n+        return (char)glyphIndex;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean hasChar(char c) {\n         return (findGlyphIndex(c) > 0);\n     }\n \n-\n     /**\n-     * Sets the bfentries.\n-     * @param bfentries The bfentries to set\n+     * Sets the array of BFEntry instances which constitutes the Unicode to glyph index map for\n+     * a font. (\"BF\" means \"base font\")\n+     * @param entries the Unicode to glyph index map\n      */\n-    public void setBFEntries(BFEntry[] bfentries) {\n-        this.bfentries = bfentries;\n+    public void setBFEntries(BFEntry[] entries) {\n+        this.bfentries = entries;\n     }\n \n     /**\n@@ -276,17 +222,6 @@ public void setTTCName(String ttcName) {\n         this.ttcName = ttcName;\n     }\n \n-    /**\n-     * Adds a new CID width entry to the font.\n-     * @param cidWidthIndex index\n-     * @param wds array of widths\n-     */\n-    /*\n-    public void addCIDWidthEntry(int cidWidthIndex, int[] wds) {\n-        this.warray.addEntry(cidWidthIndex, wds);\n-    }*/\n-\n-\n     /**\n      * Sets the width array.\n      * @param wds array of widths.\n@@ -300,30 +235,15 @@ public void setWidthArray(int[] wds) {\n      * @return Map Map of used Glyphs\n      */\n     public Map getUsedGlyphs() {\n-        return usedGlyphs;\n+        return subset.getSubsetGlyphs();\n     }\n \n-    /** The invalid Unicode character, suitable as a return value in methods\n-     * that need to return an invalid character. */\n-    public static final char INVALID_UNICODE_CHAR = 0xFFFF;\n-\n     /** {@inheritDoc} */\n     public char[] getCharsUsed() {\n         if (!isEmbeddable()) {\n             return null;\n         }\n-        char[] charArray = new char[usedGlyphsCount];\n-        for (int i = 0; i < usedGlyphsCount; i++) {\n-            Integer mapValue = (Integer)usedCharsIndex.get(new Integer(i));\n-            if (mapValue != null) {\n-                char arrayItem = (char) mapValue.intValue();\n-                charArray[i] = arrayItem;\n-            }\n-            else {\n-                charArray[i] = INVALID_UNICODE_CHAR;\n-            }\n-        }\n-        return charArray;\n+        return subset.getSubsetChars();\n     }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/MultiByteFont.java",
                "sha": "5849379bd869fbce14d1b7683f70f88950575b06",
                "status": "modified"
            },
            {
                "additions": 142,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/NamedCharacter.java",
                "changes": 142,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/NamedCharacter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/NamedCharacter.java",
                "patch": "@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fonts;\n+\n+import org.apache.xmlgraphics.fonts.Glyphs;\n+\n+import org.apache.fop.util.CharUtilities;\n+\n+/**\n+ * Represents an named character with character name (from the Adobe glyph list) and a Unicode\n+ * sequence that this character represents.\n+ */\n+public class NamedCharacter {\n+    \n+    private String charName;\n+    private String unicodeSequence;\n+    \n+    /**\n+     * Main constructor.\n+     * @param charName the character name\n+     * @param unicodeSequence the Unicode sequence associated with this character\n+     */\n+    public NamedCharacter(String charName, String unicodeSequence) {\n+        if (charName == null) {\n+            throw new NullPointerException(\"charName must not be null\");\n+        }\n+        this.charName = charName;\n+        if (unicodeSequence != null) {\n+            this.unicodeSequence = unicodeSequence;\n+        } else {\n+            this.unicodeSequence = Glyphs.getUnicodeSequenceForGlyphName(charName);\n+        }\n+    }\n+    \n+    /**\n+     * Simple constructor.\n+     * @param charName the character name\n+     */\n+    public NamedCharacter(String charName) {\n+        this(charName, null);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((charName == null) ? 0 : charName.hashCode());\n+        return result;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final NamedCharacter other = (NamedCharacter)obj;\n+        return charName.equals(other.charName);\n+    }\n+\n+    /**\n+     * Returns the character name (as defined by the Adobe glyph list).\n+     * @return the character name\n+     */\n+    public String getName() {\n+        return this.charName;\n+    }\n+    \n+    /**\n+     * Returns the Unicode sequence associated with this character.\n+     * @return the Unicode sequence (or null if no Unicode sequence is associated)\n+     */\n+    public String getUnicodeSequence() {\n+        return this.unicodeSequence;\n+    }\n+    \n+    /**\n+     * Indicates whether a single Unicode value is associated with this character.\n+     * @return true if exactly one Unicode value is associated with this character, false otherwise\n+     */\n+    public boolean hasSingleUnicodeValue() {\n+        return (this.unicodeSequence != null && this.unicodeSequence.length() == 1);\n+    }\n+    \n+    /**\n+     * Returns the single Unicode value associated with this named character. Check\n+     * {@link #hasSingleUnicodeValue()} before you call this method because an\n+     * IllegalStateException is thrown is a Unicode sequence with more than one character is\n+     * associated with this character.\n+     * @return the single Unicode value (or FFFF (\"NOT A CHARACTER\") if no Unicode value is\n+     *             available)\n+     * @throws IllegalStateException if a Unicode sequence with more than one value is associated\n+     *             with the named character\n+     */\n+    public char getSingleUnicodeValue() throws IllegalStateException {\n+        if (this.unicodeSequence == null) {\n+            return CharUtilities.NOT_A_CHARACTER;\n+        }\n+        if (this.unicodeSequence.length() > 1) {\n+            throw new IllegalStateException(\"getSingleUnicodeValue() may not be called for a\"\n+                    + \" named character that has more than one Unicode value (a sequence)\"\n+                    + \" associated with the named character!\");\n+        }\n+        return this.unicodeSequence.charAt(0);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        StringBuffer sb = new StringBuffer(this.unicodeSequence);\n+        sb.append(\" (\");\n+        if (this.unicodeSequence != null) {\n+            for (int i = 0, c = this.unicodeSequence.length(); i < c; i++) {\n+                sb.append(\"0x\").append(Integer.toHexString(this.unicodeSequence.charAt(0)));\n+            }\n+            sb.append(\", \");\n+        }\n+        sb.append(getName()).append(')');\n+        return sb.toString();\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/NamedCharacter.java",
                "sha": "2c8007ba1b950ac6633724640f6412f087a44187",
                "status": "added"
            },
            {
                "additions": 145,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SimpleSingleByteEncoding.java",
                "changes": 145,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/SimpleSingleByteEncoding.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/SimpleSingleByteEncoding.java",
                "patch": "@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fonts;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.fonts.Glyphs;\n+\n+/**\n+ * A simple implementation of the OneByteEncoding mostly used for encodings that are constructed\n+ * on-the-fly.\n+ */\n+public class SimpleSingleByteEncoding implements SingleByteEncoding {\n+\n+    private String name;\n+    private List mapping = new java.util.ArrayList();\n+    //List<NamedCharacter>\n+    private Map charMap = new java.util.HashMap();\n+    //Map<Character(Unicode), Character(code point)>\n+    \n+    /**\n+     * Main constructor.\n+     * @param name the encoding's name\n+     */\n+    public SimpleSingleByteEncoding(String name) {\n+        this.name = name;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public char mapChar(char c) {\n+        Character nc = (Character)charMap.get(new Character(c));\n+        if (nc != null) {\n+            return nc.charValue();\n+        }\n+        return NOT_FOUND_CODE_POINT;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String[] getCharNameMap() {\n+        String[] map = new String[getSize()];\n+        Arrays.fill(map, Glyphs.NOTDEF);\n+        for (int i = getFirstChar(); i <= getLastChar(); i++) {\n+            NamedCharacter ch = (NamedCharacter)this.mapping.get(i - 1);\n+            map[i] = ch.getName(); \n+        }\n+        return map;\n+    }\n+    \n+    /**\n+     * Returns the index of the first defined character.\n+     * @return the index of the first defined character (always 1 for this class)\n+     */\n+    public int getFirstChar() {\n+        return 1;\n+    }\n+    \n+    /**\n+     * Returns the index of the last defined character.\n+     * @return the index of the last defined character\n+     */\n+    public int getLastChar() {\n+        return this.mapping.size();\n+    }\n+    \n+    /**\n+     * Returns the number of characters defined by this encoding.\n+     * @return the number of characters\n+     */\n+    public int getSize() {\n+        return this.mapping.size() + 1;\n+    }\n+    \n+    /**\n+     * Indicates whether the encoding is full (with 256 code points).\n+     * @return true if the encoding is full\n+     */\n+    public boolean isFull() {\n+        return (getSize() == 256);\n+    }\n+    \n+    /**\n+     * Adds a new character to the encoding.\n+     * @param ch the named character\n+     * @return the code point assigned to the character\n+     */\n+    public char addCharacter(NamedCharacter ch) {\n+        if (!ch.hasSingleUnicodeValue()) {\n+            throw new IllegalArgumentException(\"Only NamedCharacters with a single Unicode value\"\n+                    + \" are currently supported!\");\n+        }\n+        if (isFull()) {\n+            throw new IllegalStateException(\"Encoding is full!\");\n+        }\n+        char newSlot = (char)(getLastChar() + 1);\n+        this.mapping.add(ch);\n+        this.charMap.put(new Character(ch.getSingleUnicodeValue()), new Character(newSlot));\n+        return newSlot;\n+    }\n+\n+    /**\n+     * Returns the named character at a given code point in the encoding.\n+     * @param codePoint the code point of the character\n+     * @return the NamedCharacter (or null if no character is at this position)\n+     */\n+    public NamedCharacter getCharacterForIndex(int codePoint) {\n+        if (codePoint < 0 || codePoint > 255) {\n+            throw new IllegalArgumentException(\"codePoint must be between 0 and 255\");\n+        }\n+        if (codePoint <= getLastChar()) {\n+            return (NamedCharacter)this.mapping.get(codePoint - 1);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return getName() + \" (\" + getSize() + \" chars)\";\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SimpleSingleByteEncoding.java",
                "sha": "a5ba1a33b66d35fcaf73eb48e3ee087e7553cca7",
                "status": "added"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SingleByteEncoding.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/SingleByteEncoding.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 20,
                "filename": "src/java/org/apache/fop/fonts/SingleByteEncoding.java",
                "patch": "@@ -16,34 +16,35 @@\n  */\n \n /* $Id$ */\n- \n-package org.apache.fop.image;\n+\n+package org.apache.fop.fonts;\n \n /**\n- * This interface is used to dynamically register FopImage implementations.\n- * <p>\n- * NOTE: Please don't rely on this interface too much. It is a temporary measure\n- * until the whole image package can be redesigned. The redesign will likely\n- * provide a different mechanism to dynamically register new implementations. \n+ * The interface defines a 1-byte character encoding (with 256 characters).\n  */\n-public interface RegisterableImageProvider {\n+public interface SingleByteEncoding {\n+\n+    /** Code point that is used if no code point for a specific character has been found. */\n+    char NOT_FOUND_CODE_POINT = '\\0';\n \n     /**\n-     * Returns the MIME type the implementation supports.\n-     * @return the MIME type\n-     */\n-    String getSupportedMimeType();\n-    \n-    /**\n-     * Returns the name of the implementation.\n-     * @return the name\n+     * Returns the encoding's name.\n+     * @return the name of the encoding\n      */\n     String getName();\n-    \n+\n     /**\n-     * Returns the fully qualified class name for the implementing class.\n-     * @return the class name\n+     * Maps a Unicode character to a code point in the encoding.\n+     * @param c the Unicode character to map\n+     * @return the code point in the encoding or 0 (=.notdef) if not found\n      */\n-    String getClassName();\n+    char mapChar(char c);\n \n+    /**\n+     * Returns the array of character names for this encoding.\n+     * @return the array of character names\n+     *                  (unmapped code points are represented by a \".notdef\" value)\n+     */\n+    String[] getCharNameMap();\n+    \n }",
                "previous_filename": "src/java/org/apache/fop/image/RegisterableImageProvider.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SingleByteEncoding.java",
                "sha": "ac7241e24c2dd91b62309086bd2bce86965905d8",
                "status": "renamed"
            },
            {
                "additions": 188,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "changes": 214,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/SingleByteFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 26,
                "filename": "src/java/org/apache/fop/fonts/SingleByteFont.java",
                "patch": "@@ -19,6 +19,8 @@\n \n package org.apache.fop.fonts;\n \n+import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.logging.Log;\n@@ -31,14 +33,21 @@\n  */\n public class SingleByteFont extends CustomFont {\n \n+    /** Code point that is used if no code point for a specific character has been found. */\n+    public static final char NOT_FOUND = '#';\n+\n     /** logger */\n     private  static Log log = LogFactory.getLog(SingleByteFont.class);\n \n-    private CodePointMapping mapping;\n+    private SingleByteEncoding mapping;\n \n     private int[] width = null;\n \n     private Set warnedChars;\n+\n+    private Map unencodedCharacters;\n+    //Map<Character, UnencodedCharacter>\n+    private List additionalEncodings;\n     \n     /**\n      * Main constructor.\n@@ -54,26 +63,36 @@ public boolean isEmbeddable() {\n     }\n \n     /** {@inheritDoc} */\n-    public String getEncoding() {\n+    public String getEncodingName() {\n         return this.mapping.getName();\n     }\n \n     /**\n      * Returns the code point mapping (encoding) of this font.\n      * @return the code point mapping\n      */\n-    public CodePointMapping getCodePointMapping() {\n+    public SingleByteEncoding getEncoding() {\n         return this.mapping;\n     }\n     \n     /** {@inheritDoc} */\n     public int getWidth(int i, int size) {\n-        int idx = i - getFirstChar();\n-        if (idx >= 0 && idx < width.length) {\n-            return size * width[i - getFirstChar()];\n-        } else {\n-            return 0;\n+        if (i < 256) {\n+            int idx = i - getFirstChar();\n+            if (idx >= 0 && idx < width.length) {\n+                return size * width[i - getFirstChar()];\n+            }\n+        } else if (this.additionalEncodings != null) {\n+            int encodingIndex = (i / 256) - 1;\n+            SimpleSingleByteEncoding encoding = getAdditionalEncoding(encodingIndex);\n+            int codePoint = i % 256;\n+            NamedCharacter nc = encoding.getCharacterForIndex(codePoint);\n+            UnencodedCharacter uc\n+                = (UnencodedCharacter)this.unencodedCharacters.get(\n+                        new Character(nc.getSingleUnicodeValue()));\n+            return size * uc.getWidth();\n         }\n+        return 0;\n     }\n \n     /** {@inheritDoc} */\n@@ -87,30 +106,80 @@ public int getWidth(int i, int size) {\n     public char mapChar(char c) {\n         notifyMapOperation();\n         char d = mapping.mapChar(c);\n-        if (d != 0) {\n+        if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {\n             return d;\n-        } else {\n-            Character ch = new Character(c);\n-            if (warnedChars == null) {\n-                warnedChars = new java.util.HashSet();\n+        }\n+        \n+        //Check unencoded characters which are available in the font by character name\n+        d = mapUnencodedChar(c);\n+        if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {\n+            return d;\n+        }\n+        \n+        //Give up, character is not available\n+        Character ch = new Character(c);\n+        if (warnedChars == null) {\n+            warnedChars = new java.util.HashSet();\n+        }\n+        if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n+            warnedChars.add(ch);\n+            if (warnedChars.size() == 8) {\n+                log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n+            } else {\n+                log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n+                        + \", \" + Glyphs.charToGlyphName(c)\n+                        + \") not available in font \" + getFontName());\n             }\n-            if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n-                warnedChars.add(ch);\n-                if (warnedChars.size() == 8) {\n-                    log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n-                } else {\n-                    log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n-                            + \", \" + Glyphs.charToGlyphName(c)\n-                            + \") not available in font \" + getFontName());\n+        }\n+        return NOT_FOUND;\n+    }\n+\n+    private char mapUnencodedChar(char ch) {\n+        if (this.unencodedCharacters != null) {\n+            UnencodedCharacter unencoded\n+                = (UnencodedCharacter)this.unencodedCharacters.get(new Character(ch));\n+            if (unencoded != null) {\n+                if (this.additionalEncodings == null) {\n+                    this.additionalEncodings = new java.util.ArrayList();\n+                }\n+                SimpleSingleByteEncoding encoding = null;\n+                char mappedStart = 0;\n+                int additionalsCount = this.additionalEncodings.size(); \n+                for (int i = 0; i < additionalsCount; i++) {\n+                    mappedStart += 256;\n+                    encoding = getAdditionalEncoding(i);\n+                    char alt = encoding.mapChar(ch);\n+                    if (alt != 0) {\n+                        return (char)(mappedStart + alt);\n+                    }\n+                }\n+                if (encoding != null && encoding.isFull()) {\n+                    encoding = null;\n                 }\n+                if (encoding == null) {\n+                    encoding = new SimpleSingleByteEncoding(\n+                            getFontName() + \"EncodingSupp\" + (additionalsCount + 1));\n+                    this.additionalEncodings.add(encoding);\n+                    mappedStart += 256;\n+                }\n+                return (char)(mappedStart + encoding.addCharacter(unencoded.getCharacter()));\n             }\n-            return '#';\n         }\n+        return 0;\n     }\n \n     /** {@inheritDoc} */\n     public boolean hasChar(char c) {\n-        return (mapping.mapChar(c) > 0);\n+        char d = mapping.mapChar(c);\n+        if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {\n+            return true;\n+        }\n+        //Check unencoded characters which are available in the font by character name\n+        d = mapUnencodedChar(c);\n+        if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {\n+            return true;\n+        }\n+        return false;\n     }\n \n     /* ---- single byte font specific setters --- */\n@@ -146,13 +215,106 @@ public void setEncoding(CodePointMapping encoding) {\n     /**\n      * Sets a width for a character.\n      * @param index index of the character\n-     * @param width the width of the character\n+     * @param w the width of the character\n      */\n-    public void setWidth(int index, int width) {\n+    public void setWidth(int index, int w) {\n         if (this.width == null) {\n             this.width = new int[getLastChar() - getFirstChar() + 1];\n         }\n-        this.width[index - getFirstChar()] = width;\n+        this.width[index - getFirstChar()] = w;\n+    }\n+\n+    /**\n+     * Adds an unencoded character (one that is not supported by the primary encoding).\n+     * @param ch the named character\n+     * @param width the width of the character\n+     */\n+    public void addUnencodedCharacter(NamedCharacter ch, int width) {\n+        if (this.unencodedCharacters == null) {\n+            this.unencodedCharacters = new java.util.HashMap();\n+        }\n+        if (ch.hasSingleUnicodeValue()) {\n+            UnencodedCharacter uc = new UnencodedCharacter(ch, width);\n+            this.unencodedCharacters.put(new Character(ch.getSingleUnicodeValue()), uc);\n+        } else {\n+            //Cannot deal with unicode sequences, so ignore this character\n+        }\n+    }\n+\n+    /**\n+     * Indicates whether the encoding has additional encodings besides the primary encoding.\n+     * @return true if there are additional encodings.\n+     */\n+    public boolean hasAdditionalEncodings() {\n+        return (this.additionalEncodings != null) && (this.additionalEncodings.size() > 0);\n+    }\n+    \n+    /**\n+     * Returns the number of additional encodings this single-byte font maintains.\n+     * @return the number of additional encodings\n+     */\n+    public int getAdditionalEncodingCount() {\n+        if (hasAdditionalEncodings()) {\n+            return this.additionalEncodings.size();\n+        } else {\n+            return 0;\n+        }\n+    }\n+    \n+    /**\n+     * Returns an additional encoding.\n+     * @param index the index of the additional encoding\n+     * @return the additional encoding\n+     * @throws IndexOutOfBoundsException if the index is out of bounds\n+     */\n+    public SimpleSingleByteEncoding getAdditionalEncoding(int index)\n+            throws IndexOutOfBoundsException {\n+        if (hasAdditionalEncodings()) {\n+            return (SimpleSingleByteEncoding)this.additionalEncodings.get(index);\n+        } else {\n+            throw new IndexOutOfBoundsException(\"No additional encodings available\");\n+        }\n+    }\n+    \n+    /**\n+     * Returns an array with the widths for an additional encoding.\n+     * @param index the index of the additional encoding\n+     * @return the width array\n+     */\n+    public int[] getAdditionalWidths(int index) {\n+        SimpleSingleByteEncoding enc = getAdditionalEncoding(index);\n+        int[] arr = new int[enc.getLastChar() - enc.getFirstChar() + 1];\n+        for (int i = 0, c = arr.length; i < c; i++) {\n+            NamedCharacter nc = enc.getCharacterForIndex(enc.getFirstChar() + i);\n+            UnencodedCharacter uc = (UnencodedCharacter)this.unencodedCharacters.get(\n+                    new Character(nc.getSingleUnicodeValue()));\n+            arr[i] = uc.getWidth();\n+        }\n+        return arr;\n+    }\n+    \n+    private static final class UnencodedCharacter {\n+        \n+        private NamedCharacter character;\n+        private int width;\n+        \n+        public UnencodedCharacter(NamedCharacter character, int width) {\n+            this.character = character;\n+            this.width = width;\n+        }\n+        \n+        public NamedCharacter getCharacter() {\n+            return this.character;\n+        }\n+        \n+        public int getWidth() {\n+            return this.width;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return getCharacter().toString();\n+        }\n     }\n \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "sha": "ac12b761514e0e2709005f7e99132b08194bcb14",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Typeface.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/Typeface.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fonts/Typeface.java",
                "patch": "@@ -19,11 +19,8 @@\n  \n package org.apache.fop.fonts;\n \n-// FOP\n-\n-\n /**\n- * Base class for PDF font classes\n+ * Base class for font classes\n  */\n public abstract class Typeface implements FontMetrics {\n \n@@ -37,7 +34,7 @@\n      * Get the encoding of the font.\n      * @return the encoding\n      */\n-    public abstract String getEncoding();\n+    public abstract String getEncodingName();\n \n     /**\n      * Map a Unicode character to a code point in the font.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/Typeface.java",
                "sha": "173d2e8a31c0e3faed660b0928ddd7173299f0d8",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/truetype/TTFSubSetFile.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/truetype/TTFSubSetFile.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fonts/truetype/TTFSubSetFile.java",
                "patch": "@@ -592,8 +592,8 @@ private void scanGlyphs(FontFileReader in,\n                                         + mtxTab[origIndex.intValue()].getOffset()) < 0) {\n                         // origIndex is a composite glyph\n                         allComposites.put(origIndex, glyphs.get(origIndex));\n-                        List composites =\n-                            getIncludedGlyphs(in, (int)entry.getOffset(),\n+                        List composites\n+                            = getIncludedGlyphs(in, (int)entry.getOffset(),\n                                               origIndex);\n \n                         // Iterate through all composites pointed to\n@@ -651,6 +651,9 @@ private void scanGlyphs(FontFileReader in,\n         if (!checkTTC(in, name)) {\n             throw new IOException(\"Failed to read font\");\n         }\n+        \n+        //Copy the Map as we're going to modify it\n+        Map subsetGlyphs = new java.util.HashMap(glyphs);\n \n         output = new byte[in.getFileSize()];\n \n@@ -661,14 +664,14 @@ private void scanGlyphs(FontFileReader in,\n         readHorizontalMetrics(in);\n         readIndexToLocation(in);\n \n-        scanGlyphs(in, glyphs);\n+        scanGlyphs(in, subsetGlyphs);\n \n         createDirectory();                // Create the TrueType header and directory\n \n         createHead(in);\n-        createHhea(in, glyphs.size());    // Create the hhea table\n-        createHmtx(in, glyphs);           // Create hmtx table\n-        createMaxp(in, glyphs.size());    // copy the maxp table\n+        createHhea(in, subsetGlyphs.size());    // Create the hhea table\n+        createHmtx(in, subsetGlyphs);           // Create hmtx table\n+        createMaxp(in, subsetGlyphs.size());    // copy the maxp table\n \n         boolean optionalTableFound;\n         optionalTableFound = createCvt(in);    // copy the cvt table\n@@ -689,8 +692,8 @@ private void scanGlyphs(FontFileReader in,\n             log.debug(\"TrueType: prep table not present. Skipped.\");\n         }\n \n-        createLoca(glyphs.size());    // create empty loca table\n-        createGlyf(in, glyphs);       //create glyf table and update loca table\n+        createLoca(subsetGlyphs.size());    // create empty loca table\n+        createGlyf(in, subsetGlyphs);       //create glyf table and update loca table\n \n         pad4();\n         createCheckSumAdjustment();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/truetype/TTFSubSetFile.java",
                "sha": "d593c45449132e2cd943e162b77159b15eb24476",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMCharMetrics.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/type1/AFMCharMetrics.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fonts/type1/AFMCharMetrics.java",
                "patch": "@@ -21,15 +21,16 @@\n \n import java.awt.geom.RectangularShape;\n \n+import org.apache.fop.fonts.NamedCharacter;\n+\n \n /**\n  * Holds the metrics of a single character from an AFM file.\n  */\n public class AFMCharMetrics {\n \n     private int charCode = -1;\n-    private String unicodeSequence;\n-    private String charName;\n+    private NamedCharacter character;\n     private double widthX;\n     private double widthY;\n     private RectangularShape bBox;\n@@ -59,36 +60,45 @@ public void setCharCode(int charCode) {\n     }\n     \n     /**\n-     * Returns the Unicode sequence for this character.\n-     * @return the Unicode characters\n-     *                  (or null if no such Unicode sequence exists for this character)\n+     * Returns the named character represented by this instance.\n+     * @return the named character (or null if no named character is associated)\n      */\n-    public String getUnicodeSequence() {\n-        return this.unicodeSequence;\n+    public NamedCharacter getCharacter() {\n+        return this.character;\n+    }\n+    \n+    /**\n+     * Sets the named character represented by this instance.\n+     * @param ch the named character\n+     */\n+    public void setCharacter(NamedCharacter ch) {\n+        this.character = ch;\n     }\n     \n     /**\n-     * Sets the Unicode sequence for this character.\n+     * Sets the named character represented by this instance.\n+     * @param charName the character name (as defined in the Adobe glyph list)\n      * @param unicodeSequence the Unicode sequence\n      */\n-    public void setUnicodeSequence(String unicodeSequence) {\n-        this.unicodeSequence = unicodeSequence;\n+    public void setCharacter(String charName, String unicodeSequence) {\n+        setCharacter(new NamedCharacter(charName, unicodeSequence));\n     }\n     \n     /**\n-     * Returns the PostScript character name.\n-     * @return the charName\n+     * Returns the Unicode sequence for this character.\n+     * @return the Unicode characters\n+     *                  (or null if no such Unicode sequence exists for this character)\n      */\n-    public String getCharName() {\n-        return charName;\n+    public String getUnicodeSequence() {\n+        return (getCharacter() != null ? getCharacter().getUnicodeSequence() : null);\n     }\n     \n     /**\n-     * Sets the PostScript character name.\n-     * @param charName the charName to set\n+     * Returns the PostScript character name.\n+     * @return the charName (or null if no character name is associated)\n      */\n-    public void setCharName(String charName) {\n-        this.charName = charName;\n+    public String getCharName() {\n+        return (getCharacter() != null ? getCharacter().getName() : null);\n     }\n     \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMCharMetrics.java",
                "sha": "758078af46c9657bc7dd6f07019110342fcdc1fb",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMFile.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/type1/AFMFile.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fonts/type1/AFMFile.java",
                "patch": "@@ -26,7 +26,6 @@\n import java.util.List;\n import java.util.Map;\n \n-import org.apache.xmlgraphics.fonts.Glyphs;\n import org.apache.xmlgraphics.java2d.Dimension2DDouble;\n \n /**\n@@ -315,15 +314,8 @@ public void setWritingDirectionMetrics(int index, AFMWritingDirectionMetrics met\n     public void addCharMetrics(AFMCharMetrics metrics) {\n         String name = metrics.getCharName();\n         if (metrics.getUnicodeSequence() == null) {\n-            if (name != null) {\n-                String u = Glyphs.getUnicodeSequenceForGlyphName(metrics.getCharName());\n-                if (u != null) {\n-                    metrics.setUnicodeSequence(u);\n-                }\n-            } else {\n-                //Ignore as no Unicode assignment is possible\n-                return;\n-            }\n+            //Ignore as no Unicode assignment is possible\n+            return;\n         }\n         this.charMetrics.add(metrics);\n         if (name != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMFile.java",
                "sha": "6a1973843f287b9fb349fceb7a090124e84f3858",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMParser.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/type1/AFMParser.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fonts/type1/AFMParser.java",
                "patch": "@@ -31,6 +31,8 @@\n \n import org.apache.commons.io.IOUtils;\n \n+import org.apache.fop.fonts.NamedCharacter;\n+\n /**\n  * Parses the contents of a Type 1 AFM font metrics file into an object structure ({@link AFMFile}).\n  */\n@@ -126,7 +128,7 @@\n         VALUE_PARSERS.put(W, new NotImplementedYet(W));\n         VALUE_PARSERS.put(W0, new NotImplementedYet(W0));\n         VALUE_PARSERS.put(W1, new NotImplementedYet(W1));\n-        VALUE_PARSERS.put(N, new StringSetter(\"CharName\"));\n+        VALUE_PARSERS.put(N, new NamedCharacterSetter(\"Character\"));\n         VALUE_PARSERS.put(B, new CharBBox());\n         VALUE_PARSERS.put(START_TRACK_KERN, new NotImplementedYet(START_TRACK_KERN));\n         VALUE_PARSERS.put(END_TRACK_KERN, new NotImplementedYet(END_TRACK_KERN));\n@@ -379,6 +381,19 @@ public void parse(String line, int startpos, Stack stack) throws IOException {\n         }\n     }\n     \n+    private static class NamedCharacterSetter extends BeanSetter {\n+        \n+        public NamedCharacterSetter(String variable) {\n+            super(variable);\n+        }\n+        \n+        public void parse(String line, int startpos, Stack stack) throws IOException {\n+            NamedCharacter ch = new NamedCharacter(getStringValue(line, startpos));\n+            Object obj = stack.peek();\n+            setValue(obj, ch);\n+        }\n+    }\n+    \n     private static class NumberSetter extends BeanSetter {\n         public NumberSetter(String variable) {\n             super(variable);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/AFMParser.java",
                "sha": "2e63ea72943fc9be5997099e8643ad1aa270a305",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/Type1FontLoader.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/type1/Type1FontLoader.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fonts/type1/Type1FontLoader.java",
                "patch": "@@ -108,6 +108,11 @@ protected void read() throws IOException {\n             throw new java.io.FileNotFoundException(\n                     \"Neither an AFM nor a PFM file was found for \" + this.fontFileURI);\n         }\n+        if (pfm == null) {      \n+            //Cannot do without the PFM for now         \n+            throw new java.io.FileNotFoundException(    \n+                    \"No PFM file was found for \" + this.fontFileURI);   \n+        }\n         buildFont(afm, pfm);\n         this.loaded = true;\n     }\n@@ -122,12 +127,17 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n         singleFont.setEmbedFileName(this.fontFileURI);\n         returnFont = singleFont;\n         \n+        handleEncoding(afm, pfm);\n+        handleFontName(afm, pfm);\n+        handleMetrics(afm, pfm);\n+    }\n+\n+    private void handleEncoding(AFMFile afm, PFMFile pfm) {\n         //Encoding\n         if (afm != null) {\n             String encoding = afm.getEncodingScheme();\n             if (\"AdobeStandardEncoding\".equals(encoding)) {\n-                //Use WinAnsi in this case as it better fits the usual character set people need\n-                singleFont.setEncoding(CodePointMapping.WIN_ANSI_ENCODING);\n+                singleFont.setEncoding(CodePointMapping.STANDARD_ENCODING);\n             } else {\n                 String effEncodingName;\n                 if (\"FontSpecific\".equals(encoding)) {\n@@ -142,6 +152,14 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n                 CodePointMapping mapping = buildCustomEncoding(effEncodingName, afm);\n                 singleFont.setEncoding(mapping);\n             }\n+            List charMetrics = afm.getCharMetrics();\n+            for (int i = 0, c = afm.getCharCount(); i < c; i++) {\n+                AFMCharMetrics metrics = (AFMCharMetrics)charMetrics.get(i);\n+                if (!metrics.hasCharCode() && metrics.getCharacter() != null) {\n+                    singleFont.addUnencodedCharacter(metrics.getCharacter(),\n+                            (int)Math.round(metrics.getWidthX()));\n+                }\n+            }\n         } else {\n             if (pfm.getCharSet() >= 0 && pfm.getCharSet() <= 2) {\n                 singleFont.setEncoding(pfm.getCharSetName() + \"Encoding\");\n@@ -151,7 +169,9 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n                 singleFont.setEncoding(\"WinAnsiEncoding\"); //Try fallback, no guarantees!\n             }\n         }\n-        \n+    }\n+\n+    private void handleFontName(AFMFile afm, PFMFile pfm) {\n         //Font name\n         if (afm != null) {\n             returnFont.setFontName(afm.getFontName()); //PostScript font name\n@@ -168,7 +188,9 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n             names.add(pfm.getWindowsName()); //emulate afm.getFamilyName()\n             returnFont.setFamilyNames(names);\n         }\n-        \n+    }\n+\n+    private void handleMetrics(AFMFile afm, PFMFile pfm) {\n         //Basic metrics\n         if (afm != null) {\n             if (afm.getCapHeight() != null) {\n@@ -268,6 +290,7 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n         \n         if (afm != null) {\n             //TODO returnFont.setFlags(flags);\n+             \n             returnFont.setFirstChar(afm.getFirstChar());\n             returnFont.setLastChar(afm.getLastChar());\n             Iterator iter = afm.getCharMetrics().iterator();\n@@ -279,14 +302,14 @@ private void buildFont(AFMFile afm, PFMFile pfm) {\n             }\n             returnFont.replaceKerningMap(afm.createXKerningMapEncoded());\n         } else {\n-            returnFont.setFlags(pfm.getFlags());\n             returnFont.setFirstChar(pfm.getFirstChar());\n             returnFont.setLastChar(pfm.getLastChar());\n             for (short i = pfm.getFirstChar(); i <= pfm.getLastChar(); i++) {\n                 singleFont.setWidth(i, pfm.getCharWidth(i));\n             }\n             returnFont.replaceKerningMap(pfm.getKerning());\n         }\n+        returnFont.setFlags(pfm.getFlags());\n     }\n \n     private CodePointMapping buildCustomEncoding(String encodingName, AFMFile afm) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/fonts/type1/Type1FontLoader.java",
                "sha": "8cf6f237195c356bb4e05b22c8aec565ec9294a5",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/AbstractFopImage.java",
                "changes": 376,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/AbstractFopImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 376,
                "filename": "src/java/org/apache/fop/image/AbstractFopImage.java",
                "patch": "@@ -1,376 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// Java\n-import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_ColorSpace;\n-import java.awt.color.ICC_Profile;\n-import java.io.InputStream;\n-import java.awt.Color;\n-\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.datatypes.Length;\n-\n-/**\n- * Base class to implement the FopImage interface.\n- * \n- * @see FopImage\n- */\n-public abstract class AbstractFopImage implements FopImage {\n-\n-    /**\n-     * logging instance\n-     */\n-    protected static Log log = LogFactory.getLog(AbstractFopImage.class);\n-\n-    /**\n-     * Keeps track of what has been loaded.\n-     */\n-    protected int loaded = 0;\n-\n-    /**\n-     * Image width (in pixel).\n-     */\n-    protected int width = 0;\n-\n-    /**\n-     * Image height (in pixel).\n-     */\n-    protected int height = 0;\n-    \n-    /** Horizontal bitmap resolution (in dpi) */\n-    protected double dpiHorizontal = 72.0f;\n-\n-    /** Vertical bitmap resolution (in dpi) */\n-    protected double dpiVertical = 72.0f;\n-\n-    /**\n-     * Image input stream.\n-     */\n-    protected InputStream inputStream = null;\n-\n-    /**\n-     * ImageReader object (to obtain image header informations).\n-     */\n-    protected FopImage.ImageInfo imageInfo = null;\n-\n-    /**\n-     * Image color space (java.awt.color.ColorSpace).\n-     */\n-    protected ColorSpace colorSpace = null;\n-\n-    /**\n-     * Bits per pixel.\n-     */\n-    protected int bitsPerPixel = 0;\n-\n-    /**\n-     * Image data (pixels, uncompressed).\n-     */\n-    protected byte[] bitmaps = null;\n-\n-    /**\n-     * Image data (undecoded, compressed, for image formats that can be embedded without decoding.\n-     */\n-    protected byte[] raw = null;\n-\n-    /**\n-     * Image transparency.\n-     */\n-    protected boolean isTransparent = false;\n-\n-    /**\n-     * Transparent color (java.awt.Color).\n-     */\n-    protected Color transparentColor = null;\n-\n-    /**\n-     * Photoshop generated CMYK JPEGs are inverted.\n-     */\n-     protected boolean invertImage = false;\n-    \n-    /**\n-     * Constructor.\n-     * Construct a new FopImage object and initialize its default properties:\n-     * <UL>\n-     * <LI>image width\n-     * <LI>image height\n-     * </UL>\n-     * The image data isn't kept in memory.\n-     * @param info image information\n-     */\n-    public AbstractFopImage(FopImage.ImageInfo info) {\n-        this.inputStream = info.inputStream;\n-        this.imageInfo = info;\n-        if (this.imageInfo.width != -1) {\n-            width = imageInfo.width;\n-            height = imageInfo.height;\n-            dpiHorizontal = imageInfo.dpiHorizontal;\n-            dpiVertical = imageInfo.dpiVertical;\n-            loaded = loaded | DIMENSIONS;\n-        }\n-    }\n-\n-    /**\n-     * Get the mime type for this image.\n-     *\n-     * @return the mime type for the image\n-     */\n-    public String getMimeType() {\n-        return imageInfo.mimeType;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public String getOriginalURI() {\n-        return this.imageInfo.originalURI;\n-    }\n-    \n-    /**\n-     * Load image data and initialize its properties.\n-     *\n-     * @param type the type of loading to do\n-     * @return true if the loading was successful\n-     */\n-    public synchronized boolean load(int type) {\n-        if ((loaded & type) != 0) {\n-            return true;\n-        }\n-        boolean success = true;\n-        if (((type & DIMENSIONS) != 0) && ((loaded & DIMENSIONS) == 0)) {\n-            success = success && loadDimensions();\n-\n-            if (!success) {\n-                return false;\n-            }\n-            loaded = loaded | DIMENSIONS;\n-        }\n-        if (((type & BITMAP) != 0) && ((loaded & BITMAP) == 0)) {\n-            success = success && loadBitmap();\n-            if (success) {\n-                loaded = loaded | BITMAP;\n-            }\n-        }\n-        if (((type & ORIGINAL_DATA) != 0) && ((loaded & ORIGINAL_DATA) == 0)) {\n-            success = success && loadOriginalData();\n-            if (success) {\n-                loaded = loaded | ORIGINAL_DATA;\n-            }\n-        }\n-        return success;\n-    }\n-\n-    /**\n-     * Load the dimensions of the image.\n-     * All implementations should override this to get and\n-     * return the dimensions.\n-     *\n-     * @return true if the loading was successful\n-     */\n-    protected boolean loadDimensions() {\n-        return false;\n-    }\n-\n-    /**\n-     * Load a bitmap array of the image.\n-     * If the renderer requires a bitmap image then the\n-     * implementations should override this to load the bitmap.\n-     *\n-     * @return true if the loading was successful\n-     */\n-    protected boolean loadBitmap() {\n-        return false;\n-    }\n-\n-    /**\n-     * Load the original image data.\n-     * In some cases the original data can be used by the renderer.\n-     * This should load the data and any other associated information.\n-     *\n-     * @return true if the loading was successful\n-     */\n-    protected boolean loadOriginalData() {\n-        return false;\n-    }\n-\n-    /**\n-     * Load the original image data. This is generic code for use by any\n-     * subclass that wants to use this from a loadOriginalData() implementation.\n-     *\n-     * @return true if the loading was successful\n-     */\n-    protected boolean loadDefaultOriginalData() {\n-        if (inputStream == null) {\n-            throw new IllegalStateException(\"inputStream is already null or was never set\");\n-        }\n-        try {\n-            this.raw = IOUtils.toByteArray(inputStream);\n-        } catch (java.io.IOException ex) {\n-            log.error(\"Error while reading raw image: \" + ex.getMessage(), ex);\n-            return false;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-        return true;\n-    }\n-    \n-    /**\n-     * @return the image width (in pixels)\n-     */\n-    public int getWidth() {\n-        return this.width;\n-    }\n-    \n-    /**\n-     * @return the image height (in pixels)\n-     */\n-    public int getHeight() {\n-        return this.height;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public int getIntrinsicWidth() {\n-        return (int)(getWidth() * 72000 / getHorizontalResolution());\n-    }\n-\n-    /** {@inheritDoc} */\n-    public int getIntrinsicHeight() {\n-        return (int)(getHeight() * 72000 / getVerticalResolution());\n-    }\n-    \n-    /** {@inheritDoc} */\n-    public Length getIntrinsicAlignmentAdjust() {\n-        return this.imageInfo.alignmentAdjust;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public double getHorizontalResolution() {\n-        return this.dpiHorizontal;\n-    }\n-    \n-    /** {@inheritDoc} */\n-    public double getVerticalResolution() {\n-        return this.dpiVertical;\n-    }\n-    \n-    /**\n-     * Return the image color space.\n-     * @return the image color space (java.awt.color.ColorSpace)\n-     */\n-    public ColorSpace getColorSpace() {\n-        return this.colorSpace;\n-    }\n-\n-    /**\n-     * Get ICC profile for this image.\n-     * @return the icc profile or null if not applicable\n-     */\n-    public ICC_Profile getICCProfile() {\n-        if (this.colorSpace != null && this.colorSpace instanceof ICC_ColorSpace) {\n-            return ((ICC_ColorSpace)this.colorSpace).getProfile();\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * Return the number of bits per pixel.\n-     * @return number of bits per pixel\n-     */\n-    public int getBitsPerPixel() {\n-        return this.bitsPerPixel;\n-    }\n-\n-    /**\n-     * Return the image transparency.\n-     * @return true if the image is transparent\n-     */\n-    public boolean isTransparent() {\n-        return this.isTransparent;\n-    }\n-\n-    /**\n-     * Check if this image has a soft mask.\n-     *\n-     * @return true if the image also has a soft transparency mask\n-     */\n-    public boolean hasSoftMask() {\n-        return false;\n-    }\n-\n-    /**\n-     * Get the soft mask.\n-     * The soft mask should have the same bitdepth as the image data.\n-     *\n-     * @return the data array of soft mask values\n-     */\n-    public byte[] getSoftMask() {\n-        return null;\n-    }\n-\n-    /**\n-     * Return the transparent color.\n-     * @return the transparent color (java.awt.Color)\n-     */\n-    public Color getTransparentColor() {\n-        return this.transparentColor;\n-    }\n-\n-    /** @return true for CMYK images generated by Adobe Photoshop */\n-    public boolean isInverted() {\n-        return this.invertImage;\n-    }\n-    \n-    /**\n-     * Return the image data (pixels, uncompressed).\n-     * @return the image data\n-     */\n-    public byte[] getBitmaps() {\n-        return this.bitmaps;\n-    }\n-\n-    /**\n-     * Return the image data size (number of bytes taken up by the uncompressed pixels).\n-     * @return the image data size\n-     */\n-    public int getBitmapsSize() {\n-        return (bitmaps != null ? bitmaps.length : 0);\n-    }\n-\n-    /**\n-     * Return the original image data (compressed).\n-     * @return the original image data\n-     */\n-    public byte[] getResourceBytes() {\n-        return raw;\n-    }\n-\n-    /**\n-     * Return the original image data size (compressed).\n-     * @return the original image data size\n-     */\n-    public int getResourceBytesSize() {\n-        return (raw != null ? raw.length : 0);\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/AbstractFopImage.java",
                "sha": "68949b9c918a22ad1b9ee0074eff9099529579e6",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/BmpImage.java",
                "changes": 220,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/BmpImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 220,
                "filename": "src/java/org/apache/fop/image/BmpImage.java",
                "patch": "@@ -1,220 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-// Java\n-import java.io.IOException;\n-import java.awt.color.ColorSpace;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * Bitmap image.\n- * This supports loading a bitmap image into bitmap data.\n- *\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class BmpImage extends AbstractFopImage {\n-    /**\n-     * Create a bitmap image with the image data.\n-     *\n-     * @param imgInfo the image information\n-     */\n-    public BmpImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * Load the bitmap.\n-     * This laods the bitmap data from the bitmap image.\n-     *\n-     * @return true if it was loaded successfully\n-     */\n-    protected boolean loadBitmap() {\n-        int wpos = 18;\n-        int hpos = 22; // offset positioning for w and height in  bmp files\n-        int[] headermap = new int[54];\n-        int filepos = 0;\n-        byte[] palette = null;\n-        try {\n-            boolean eof = false;\n-            while ((!eof) && (filepos < 54)) {\n-                int input = inputStream.read();\n-                if (input == -1) {\n-                    eof = true;\n-                } else {\n-                    headermap[filepos++] = input;\n-                }\n-            }\n-\n-            if (headermap[28] == 4 || headermap[28] == 8) {\n-                int palettesize = 1 << headermap[28];\n-                palette = new byte[palettesize * 3];\n-                int countr = 0;\n-                while (!eof && countr < palettesize) {\n-                    int count2 = 2;\n-                    while (!eof && count2 >= -1) {\n-                        int input = inputStream.read();\n-                        if (input == -1) {\n-                            eof = true;\n-                        } else if (count2 >= 0) {\n-                            palette[countr * 3 + count2] = (byte)(input & 0xFF);\n-                        }\n-                        count2--;\n-                        filepos++;\n-                    }\n-                    countr++;\n-                }\n-            }\n-        } catch (IOException ex) {\n-            log.error(\"Error while loading image (Bmp): \" + ex.getMessage(), ex);\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-            return false;\n-        }\n-            // gets h & w from headermap\n-        this.width = headermap[wpos] \n-                + headermap[wpos + 1] * 256\n-                + headermap[wpos + 2] * 256 * 256\n-                + headermap[wpos + 3] * 256 * 256 * 256;\n-        this.height = headermap[hpos] \n-                + headermap[hpos + 1] * 256\n-                + headermap[hpos + 2] * 256 * 256\n-                + headermap[hpos + 3] * 256 * 256 * 256;\n-\n-        int imagestart = headermap[10] \n-                + headermap[11] * 256\n-                + headermap[12] * 256 * 256\n-                + headermap[13] * 256 * 256 * 256;\n-        this.bitsPerPixel = headermap[28];\n-        this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n-        int bytes = 0;\n-        if (this.bitsPerPixel == 1) {\n-            bytes = (this.width + 7) / 8;\n-        } else if (this.bitsPerPixel == 24) {\n-            bytes = this.width * 3;\n-        } else if (this.bitsPerPixel == 4 || this.bitsPerPixel == 8) {\n-            bytes = this.width / (8 / this.bitsPerPixel);\n-        } else {\n-            log.error(\"Image (\" + \"\"\n-                          + \") has \" + this.bitsPerPixel\n-                          + \" which is not a supported BMP format.\");\n-            return false;\n-        }\n-        if ((bytes & 0x03) != 0) {\n-            bytes |= 0x03;\n-            bytes++;\n-        }\n-\n-        // Should take care of the ColorSpace and bitsPerPixel\n-        this.bitmaps = new byte[this.width * this.height * 3];\n-\n-        int[] temp = new int[bytes * this.height];\n-        try {\n-            int input;\n-            int count = 0;\n-            inputStream.skip((long)(imagestart - filepos));\n-            while ((input = inputStream.read()) != -1) {\n-                if (count >= temp.length) {\n-                    log.warn(\"Data longer than expected while loading image\");\n-                    break;\n-                } else {\n-                    temp[count++] = input;\n-                }\n-            }\n-        } catch (IOException ex) {\n-            log.error(\"Error while loading image (Bmp): \" + ex.getMessage(), ex);\n-            return false;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-\n-        for (int i = 0; i < this.height; i++) {\n-            int x = 0;\n-            int j = 0;\n-            while (j < bytes) {\n-                int p = temp[(this.height - i - 1) * bytes + j];\n-\n-                if (this.bitsPerPixel == 24 && x < this.width) {\n-                    int countr = 2;\n-                    do {\n-                        this.bitmaps[3 * (i * this.width + x) + countr] \n-                            = (byte)(temp[(this.height - i - 1) * bytes + j] & 0xFF);\n-                        j++;\n-                    } while (--countr >= 0)\n-                        ;\n-                    x++;\n-                } else if (this.bitsPerPixel == 1) {\n-                    for (int countr = 0;\n-                            countr < 8 && x < this.width; countr++) {\n-                        if ((p & 0x80) != 0) {\n-                            this.bitmaps[3 * (i * this.width + x)] = (byte) 0xFF;\n-                            this.bitmaps[3 * (i * this.width + x) + 1] = (byte) 0xFF;\n-                            this.bitmaps[3 * (i * this.width + x) + 2] = (byte) 0xFF;\n-                        } else {\n-                            this.bitmaps[3 * (i * this.width + x)] = (byte) 0;\n-                            this.bitmaps[3 * (i * this.width + x) + 1] = (byte) 0;\n-                            this.bitmaps[3 * (i * this.width + x) + 2] = (byte) 0;\n-                        }\n-                        p <<= 1;\n-                        x++;\n-                    }\n-                    j++;\n-                } else if (this.bitsPerPixel == 4) {\n-                    for (int countr = 0;\n-                            countr < 2 && x < this.width; countr++) {\n-                        int pal = ((p & 0xF0) >> 4) * 3;\n-                        this.bitmaps[3 * (i * this.width + x)] = palette[pal];\n-                        this.bitmaps[3 * (i * this.width + x) + 1] = palette[pal + 1];\n-                        this.bitmaps[3 * (i * this.width + x) + 2] = palette[pal + 2];\n-                        p <<= 4;\n-                        x++;\n-                    }\n-                    j++;\n-                } else if (this.bitsPerPixel == 8) {\n-                    if (x < this.width) {\n-                        p *= 3;\n-                        this.bitmaps[3 * (i * this.width + x)] = palette[p];\n-                        this.bitmaps[3 * (i * this.width + x) + 1] = palette[p + 1];\n-                        this.bitmaps[3 * (i * this.width + x) + 2] = palette[p + 2];\n-                        j++;\n-                        x++;\n-                    } else {\n-                        j = bytes;\n-                    }\n-                } else {\n-                    j++;\n-                }\n-            }\n-        }\n-\n-        // This seems really strange to me, but I noticed that\n-        // JimiImage hardcodes bitsPerPixel to 8. If I do not\n-        // do this Acrobat is unable to read the resultant PDF,\n-        // so we will hardcode this...\n-        this.bitsPerPixel = 8;\n-\n-        return true;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/BmpImage.java",
                "sha": "5ebf522e9e625035b33df65b6c2198b99cb95380",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/EPSImage.java",
                "changes": 122,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/EPSImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 122,
                "filename": "src/java/org/apache/fop/image/EPSImage.java",
                "patch": "@@ -1,122 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-\n-/**\n- * EPS image handler.\n- * This handles the Encapulated PostScript images.\n- * It gets the dimensions and original data from the analyser.\n- *\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class EPSImage extends AbstractFopImage {\n-    \n-    private String docName;\n-    private int[] bbox;\n-\n-    private EPSData epsData = null;\n-\n-    /**\n-     * Create an EPS image with the image information.\n-     *\n-     * @param imgInfo the information containing the data and bounding box\n-     */\n-    public EPSImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-        init(\"\");\n-        if (imgInfo.data instanceof EPSData) {\n-            epsData = (EPSData) imgInfo.data;\n-            bbox = new int[4];\n-            bbox[0] = (int) epsData.bbox[0];\n-            bbox[1] = (int) epsData.bbox[1];\n-            bbox[2] = (int) epsData.bbox[2];\n-            bbox[3] = (int) epsData.bbox[3];\n-\n-            loaded = loaded | ORIGINAL_DATA;\n-        }\n-    }\n-\n-    /**\n-     * Initialize docName and bounding box.\n-     * @param name the document name\n-     */\n-    private void init(String name) {\n-        bbox = new int[4];\n-        bbox[0] = 0;\n-        bbox[1] = 0;\n-        bbox[2] = 0;\n-        bbox[3] = 0;\n-\n-        docName = name;\n-    }\n-\n-    /**\n-     * Return the name of the eps\n-     * @return the name of the eps\n-     */\n-    public String getDocName() {\n-        return docName;\n-    }\n-\n-    /**\n-     * Return the bounding box\n-     * @return an int array containing the bounding box\n-     */\n-    public int[] getBBox() {\n-        return bbox;\n-    }\n-\n-    /**\n-     * Get the eps image.\n-     *\n-     * @return the original eps image data\n-     */\n-    public byte[] getEPSImage() {\n-        if (epsData.epsFile == null) {\n-            //log.error(\"ERROR LOADING EXTERNAL EPS\");\n-        }\n-        return epsData.epsFile;\n-    }\n-\n-    /**\n-     * Data for EPS image.\n-     */\n-    public static class EPSData {\n-        public long[] bbox;\n-        public boolean isAscii; // True if plain ascii eps file\n-\n-        // offsets if not ascii\n-        public long psStart = 0;\n-        public long psLength = 0;\n-        public long wmfStart = 0;\n-        public long wmfLength = 0;\n-        public long tiffStart = 0;\n-        public long tiffLength = 0;\n-\n-        /** raw eps file */\n-        public byte[] rawEps;\n-        /** eps part */\n-        public byte[] epsFile;\n-        public byte[] preview = null;\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/EPSImage.java",
                "sha": "ab708f2a43793a8bb1d706c4d910bf9237c9d4af",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/EmfImage.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/EmfImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 51,
                "filename": "src/java/org/apache/fop/image/EmfImage.java",
                "patch": "@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-/**\n- * Enhanced metafile image.\n- * This supports loading a EMF image.\n- *\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class EmfImage extends AbstractFopImage {\n-    \n-    /**\n-     * Create a bitmap image with the image data.\n-     *\n-     * @param imgInfo the image information\n-     */\n-    public EmfImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * Load the original EMF data.\n-     * This loads the original EMF data and reads the color space,\n-     * and icc profile if any.\n-     *\n-     * @return true if loaded false for any error\n-     */\n-    protected boolean loadOriginalData() {\n-        return loadDefaultOriginalData();\n-    }\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/EmfImage.java",
                "sha": "73bbad2321b2cd4fed601bcf86b62755bedd9991",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/FopImage.java",
                "changes": 207,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/FopImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 207,
                "filename": "src/java/org/apache/fop/image/FopImage.java",
                "patch": "@@ -1,207 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-import java.io.InputStream;\n-import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_Profile;\n-import java.awt.Color;\n-\n-import org.apache.fop.datatypes.Length;\n-\n-/**\n- * Fop image interface for loading images.\n- */\n-public interface FopImage {\n-    /**\n-     * Flag for loading dimensions.\n-     */\n-    int DIMENSIONS = 1;\n-\n-    /**\n-     * Flag for loading original data.\n-     */\n-    int ORIGINAL_DATA = 2;\n-\n-    /**\n-     * Flag for loading bitmap data.\n-     */\n-    int BITMAP = 4;\n-\n-    /**\n-     * Get the mime type of this image.\n-     * This is used so that when reading from the image it knows\n-     * what type of image it is.\n-     *\n-     * @return the mime type string\n-     */\n-    String getMimeType();\n-\n-    /** @return the original URI used to access this image. */\n-    String getOriginalURI();\n-    \n-    /**\n-     * Load particular inforamtion for this image\n-     * This must be called before attempting to get\n-     * the information.\n-     *\n-     * @param type the type of loading required\n-     * @return boolean true if the information could be loaded\n-     */\n-    boolean load(int type);\n-\n-    /**\n-     * Returns the image width.\n-     * @return the width in pixels\n-     */\n-    int getWidth();\n-\n-    /**\n-     * Returns the image height.\n-     * @return the height in pixels\n-     */\n-    int getHeight();\n-    \n-    /** \n-     * @return the intrinsic image width (in millipoints) \n-     */\n-    int getIntrinsicWidth();\n-\n-    /**\n-     *  @return the intrinsic image width (in millipoints) \n-     */\n-    int getIntrinsicHeight();\n-\n-    /**\n-     * @return the intrinsic alignment-adjust value or NULL if the image does\n-     *         not have one.\n-     */\n-    Length getIntrinsicAlignmentAdjust();\n-    \n-    /**\n-     * @return the horizontal bitmap resolution (in dpi)\n-     */\n-    double getHorizontalResolution();\n-    \n-    /**\n-     * @return the vertical bitmap resolution (in dpi)\n-     */\n-    double getVerticalResolution();\n-\n-    /**\n-     * Returns the color space of the image.\n-     * @return the color space\n-     */\n-    ColorSpace getColorSpace();\n-\n-    /**\n-     * Returns the ICC profile.\n-     * @return the ICC profile, null if none is available\n-     */\n-    ICC_Profile getICCProfile();\n-\n-    /**\n-     * Returns the number of bits per pixel for the image.\n-     * @return the number of bits per pixel\n-     */\n-    int getBitsPerPixel();\n-\n-    /**\n-     * Indicates whether the image is transparent.\n-     * @return True if it is transparent\n-     */\n-    boolean isTransparent();\n-\n-    /**\n-     * For transparent images. Returns the transparent color.\n-     * @return the transparent color\n-     */\n-    Color getTransparentColor();\n-\n-    /**\n-     * Indicates whether the image has a Soft Mask (See section 7.5.4 in the\n-     * PDF specs)\n-     * @return True if a Soft Mask exists\n-     */\n-    boolean hasSoftMask();\n-\n-    /**\n-     * For images with a Soft Mask. Returns the Soft Mask as an array.\n-     * @return the Soft Mask\n-     */\n-    byte[] getSoftMask();\n-\n-    /** @return true for CMYK images generated by Adobe Photoshop */\n-    boolean isInverted();\n-    \n-    /**\n-     * Returns the decoded and uncompressed image as a array of\n-     * width * height * [colorspace-multiplicator] pixels.\n-     * @return the bitmap\n-     */\n-    byte[] getBitmaps();\n-    /**\n-     * Returns the size of the image.\n-     * width * (bitsPerPixel / 8) * height, no ?\n-     * @return the size\n-     */\n-    int getBitmapsSize();\n-\n-    /**\n-     * Returns the encoded/compressed image as an array of bytes.\n-     * @return the raw image\n-     */\n-    byte[] getResourceBytes();\n-\n-    /**\n-     * Returns the number of bytes of the raw image.\n-     * @return the size in bytes\n-     */\n-    int getResourceBytesSize();\n-\n-    /**\n-     * Image info class.\n-     * Information loaded from analyser and passed to image object.\n-     */\n-    public static class ImageInfo {\n-        /** InputStream to load the image from */\n-        public InputStream inputStream;\n-        /** Original URI the image was accessed with */\n-        public String originalURI;\n-        /** image width (in pixels) */\n-        public int width;\n-        /** image height (in pixels) */\n-        public int height;\n-        /** horizontal bitmap resolution (in dpi) */\n-        public double dpiHorizontal = 72.0f;\n-        /** vertical bitmap resolution (in dpi) */\n-        public double dpiVertical = 72.0f;\n-        /** implementation-specific data object (ex. a SVG DOM for SVG images) */\n-        public Object data;\n-        /** MIME type of the image */\n-        public String mimeType;\n-        /** implementation-specific String (ex. the namespace for XML-based images) */\n-        public String str;\n-        /** intrinsic alignment-adjust or null if there is none */\n-        public Length alignmentAdjust;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/FopImage.java",
                "sha": "abe11ef2567cd2a905d7a82ecd9de74b16991774",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/FopImageConsumer.java",
                "changes": 211,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/FopImageConsumer.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 211,
                "filename": "src/java/org/apache/fop/image/FopImageConsumer.java",
                "patch": "@@ -1,211 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-// Java\n-import java.util.Hashtable;\n-import java.awt.image.ColorModel;\n-import java.awt.image.ImageConsumer;\n-import java.awt.image.ImageProducer;\n-import java.awt.image.PixelGrabber;\n-\n-/**\n- * ImageConsumer implementation for FopImage classes.\n- */\n-public class FopImageConsumer implements ImageConsumer {\n-    \n-    /** Image width in pixels */\n-    protected int width = -1;\n-    /** Image height in pixels */\n-    protected int height = -1;\n-    /** Image status */\n-    protected Integer imageStatus = new Integer(-1);\n-    /** hints */\n-    protected int hints = 0;\n-    /** Image properties */\n-    protected Hashtable properties = null;\n-    /** Color model */\n-    protected ColorModel cm = null;\n-    /** Image producer */\n-    protected ImageProducer ip = null;\n-\n-    /**\n-     * Main constructor\n-     * @param iprod ImageProducer to use\n-     */\n-    public FopImageConsumer(ImageProducer iprod) {\n-        this.ip = iprod;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public void imageComplete(int status) {\n-        /*\n-         * log.error(\"Status \");\n-         * if (status == ImageConsumer.COMPLETESCANLINES) {\n-         * log.error(\"CompleteScanLines\");\n-         * } else if (status == ImageConsumer.IMAGEABORTED) {\n-         * log.error(\"ImageAborted\");\n-         * } else if (status == ImageConsumer.IMAGEERROR) {\n-         * log.error(\"ImageError\");\n-         * } else if (status == ImageConsumer.RANDOMPIXELORDER) {\n-         * log.error(\"RandomPixelOrder\");\n-         * } else if (status == ImageConsumer.SINGLEFRAME) {\n-         * log.error(\"SingleFrame\");\n-         * } else if (status == ImageConsumer.SINGLEFRAMEDONE) {\n-         * log.error(\"SingleFrameDone\");\n-         * } else if (status == ImageConsumer.SINGLEPASS) {\n-         * log.error(\"SinglePass\");\n-         * } else if (status == ImageConsumer.STATICIMAGEDONE) {\n-         * log.error(\"StaticImageDone\");\n-         * } else if (status == ImageConsumer.TOPDOWNLEFTRIGHT) {\n-         * log.error(\"TopDownLeftRight\");\n-         * }\n-         */\n-        synchronized (this.imageStatus) {\n-            // Need to stop status if image done\n-            if (imageStatus.intValue() != ImageConsumer.STATICIMAGEDONE\n-                    && imageStatus.intValue() != ImageConsumer.SINGLEFRAMEDONE) {\n-                this.imageStatus = new Integer(status);\n-            }\n-        }\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public void setColorModel(ColorModel model) {\n-        // log.error(\"setColorModel: \" + model);\n-        this.cm = model;\n-    }\n-\n-    /**\n-     * {@inheritDoc} \n-     */\n-    public void setDimensions(int width, int height) {\n-        // log.error(\"setDimension: w=\" + width + \" h=\" + height);\n-        this.width = width;\n-        this.height = height;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public void setHints(int hintflags) {\n-        // log.error(\"setHints: \" + hintflags);\n-        this.hints = hintflags;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public void setProperties(Hashtable props) {\n-        // log.error(\"setProperties: \" + props);\n-        this.properties = props;\n-    }\n-\n-    /**\n-     * {@inheritDoc} \n-     */\n-    public void setPixels(int x, int y, int w, int h, ColorModel model,\n-                          byte[] pixels, int off, int scansize) {\n-    }\n-\n-    /**\n-     * {@inheritDoc} \n-     */\n-    public void setPixels(int x, int y, int w, int h, ColorModel model,\n-                          int[] pixels, int off, int scansize) {\n-    }\n-\n-    /**\n-     * Indicates whether the image is ready.\n-     * @return boolean True if the image is ready, false if it's still loading\n-     * @throws Exception If an error happened while loading the image\n-     */\n-    public boolean isImageReady() throws Exception {\n-        /**@todo Use a better exception than Exception */\n-        synchronized (this.imageStatus) {\n-            if (this.imageStatus.intValue() == ImageConsumer.IMAGEABORTED) {\n-                throw new Exception(\"Image aborted\");\n-            }\n-            if (this.imageStatus.intValue() == ImageConsumer.IMAGEERROR) {\n-                throw new Exception(\"Image error\");\n-            }\n-\n-            if (imageStatus.intValue() == ImageConsumer.STATICIMAGEDONE\n-                    || imageStatus.intValue() == ImageConsumer.SINGLEFRAMEDONE) {\n-                return true;\n-            } \n-\n-            return false;\n-        }\n-    }\n-\n-    /**\n-     * Returns the image width\n-     * @return the width in pixels\n-     */\n-    public int getWidth() {\n-        return this.width;\n-    }\n-\n-    /**\n-     * Returns the image height\n-     * @return the height in pixels\n-     */\n-    public int getHeight() {\n-        return this.height;\n-    }\n-\n-    /**\n-     * Returns the color model of the image\n-     * @return the color model\n-     */\n-    public ColorModel getColorModel() {\n-        return this.cm;\n-    }\n-\n-    /**\n-     * Returns the bitmap as an array.\n-     * @return the bitmap as an array.\n-     * @throws Exception if an error occured while generating the array\n-     */\n-    public int[] getImage() throws Exception {\n-        int tmpMap[] = new int[this.width * this.height];\n-        PixelGrabber pg = new PixelGrabber(this.ip, 0, 0, this.width,\n-                                           this.height, tmpMap, 0, this.width);\n-        pg.setDimensions(this.width, this.height);\n-        pg.setColorModel(this.cm);\n-        pg.setHints(this.hints);\n-        pg.setProperties(this.properties);\n-        try {\n-            pg.grabPixels();\n-        } catch (InterruptedException intex) {\n-            /**@todo Use a better exception than Exception */\n-            throw new Exception(\"Image grabbing interrupted : \"\n-                                + intex.getMessage());\n-        }\n-        return tmpMap;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/FopImageConsumer.java",
                "sha": "4e4d7be483c667acc23eca26978c692719af791b",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/GifImage.java",
                "changes": 218,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/GifImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 218,
                "filename": "src/java/org/apache/fop/image/GifImage.java",
                "patch": "@@ -1,218 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// Java\n-import java.awt.image.ImageProducer;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.color.ColorSpace;\n-import java.awt.Color;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.net.URLConnection;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * FopImage object for GIF images, using Java native classes.\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class GifImage extends AbstractFopImage {\n-\n-    /**\n-     * Create a new gif image.\n-     *\n-     * @param imgInfo the image info for this gif image\n-     */\n-    public GifImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * Load the bitmap for this gif image.\n-     * This loads the data and creates a bitmap byte array\n-     * of the image data.\n-     * To decode the image a dummy URLConnection is used that\n-     * will do the conversion.\n-     *\n-     * @return True if the load process succeeded\n-     */\n-    protected boolean loadBitmap() {\n-        int[] tmpMap = null;\n-        try {\n-            URLConnection con = new DummyConnection(inputStream);\n-\n-            ImageProducer ip = (ImageProducer) con.getContent();\n-            if (ip == null) {\n-                return false;\n-            }\n-            FopImageConsumer consumer = new FopImageConsumer(ip);\n-            ip.startProduction(consumer);\n-\n-            //Load the image into memory\n-            while (!consumer.isImageReady()) {\n-                Thread.sleep(500);\n-            }\n-\n-            this.height = consumer.getHeight();\n-            this.width = consumer.getWidth();\n-\n-            try {\n-                tmpMap = consumer.getImage();\n-            } catch (Exception ex) {\n-                log.error(\"Image grabbing interrupted : \"\n-                              + ex.getMessage(), ex);\n-                return false;\n-            }\n-\n-            ColorModel cm = consumer.getColorModel();\n-            this.bitsPerPixel = 8;\n-            // this.bitsPerPixel = cm.getPixelSize();\n-            this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-\n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        IndexColorModel indexcm = (IndexColorModel) cm;\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[indexcm.getMapSize()];\n-                        byte[] reds = new byte[indexcm.getMapSize()];\n-                        byte[] greens = new byte[indexcm.getMapSize()];\n-                        byte[] blues = new byte[indexcm.getMapSize()];\n-                        indexcm.getAlphas(alphas);\n-                        indexcm.getReds(reds);\n-                        indexcm.getGreens(greens);\n-                        indexcm.getBlues(blues);\n-                        for (int i = 0;\n-                                i < indexcm.getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        // TRANSLUCENT\n-                        /*\n-                         * this.isTransparent = false;\n-                         * for (int i = 0; i < this.width * this.height; i++) {\n-                         * if (cm.getAlpha(tmpMap[i]) == 0) {\n-                         * this.isTransparent = true;\n-                         * this.transparentColor = new PDFColor(cm.getRed(tmpMap[i]),\n-                         *       cm.getGreen(tmpMap[i]), cm.getBlue(tmpMap[i]));\n-                         * break;\n-                         * }\n-                         * }\n-                         */\n-                        // use special API...\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image (Gif): \" + ex.getMessage(), ex);\n-            return false;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-\n-        // Should take care of the ColorSpace and bitsPerPixel\n-        this.bitmaps = new byte[this.width * this.height * 3];\n-        for (int i = 0; i < this.height; i++) {\n-            for (int j = 0; j < this.width; j++) {\n-                int p = tmpMap[i * this.width + j];\n-                int r = (p >> 16) & 0xFF;\n-                int g = (p >> 8) & 0xFF;\n-                int b = (p) & 0xFF;\n-                this.bitmaps[3 * (i * this.width + j)] = (byte)(r & 0xFF);\n-                this.bitmaps[3 * (i * this.width + j) + 1] = (byte)(g & 0xFF);\n-                this.bitmaps[3 * (i * this.width + j) + 2] = (byte)(b & 0xFF);\n-            }\n-        }\n-        return true;\n-    }\n-\n-    /** {@inheritDoc} */\n-    protected boolean loadOriginalData() {\n-        return loadDefaultOriginalData();\n-    }\n-    \n-    /**\n-     * A dummy url connection for a gif image in an input stream.\n-     */\n-    protected static class DummyConnection extends URLConnection {\n-        private InputStream inputStream;\n-\n-        DummyConnection(InputStream is) {\n-            super(null);\n-            inputStream = is;\n-        }\n-\n-        /**\n-         * {@inheritDoc}\n-         */\n-        public InputStream getInputStream() throws IOException {\n-            return inputStream;\n-        }\n-\n-        /**\n-         * {@inheritDoc}\n-         */\n-        public void connect() throws IOException {\n-            // do nothing\n-        }\n-\n-        /**\n-         * {@inheritDoc}\n-         */\n-        public String getContentType() {\n-            return \"image/gif\";\n-        }\n-\n-        /**\n-         * {@inheritDoc}\n-         */\n-        public int getContentLength() {\n-            try {\n-                return inputStream.available();\n-            } catch (IOException e) {\n-                return -1;\n-            }\n-        }\n-\n-    }\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/GifImage.java",
                "sha": "27e81c4fc19b4350a5f95778aeaf9a301d7638b5",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageCache.java",
                "changes": 72,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/ImageCache.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 72,
                "filename": "src/java/org/apache/fop/image/ImageCache.java",
                "patch": "@@ -1,72 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-// FOP\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * Image cache holder.\n- * This interface is used for caching images.\n- */\n-public interface ImageCache {\n-    \n-    /**\n-     * Get an image from the cache.\n-     *\n-     * @param url the url and key for the image\n-     * @param context the user agent context\n-     * @return the requested image\n-     */\n-    FopImage getImage(String url, FOUserAgent context);\n-\n-    /**\n-     * Release an image in the current context.\n-     *\n-     * @param url the url and key for the image\n-     * @param context the user agent context\n-     */\n-    void releaseImage(String url, FOUserAgent context);\n-\n-    /**\n-     * Invalidate image.\n-     * If during loading this image is found to be invalid\n-     * it will be invalidated to prevent further attempts at\n-     * loading the image.\n-     *\n-     * @param url the url and key for the image\n-     * @param context the user agent context\n-     */\n-    void invalidateImage(String url, FOUserAgent context);\n-\n-    /**\n-     * Remove a context and handle all images in the context.\n-     *\n-     * @param context the user agent context\n-     */\n-    void removeContext(FOUserAgent context);\n-    \n-    /**\n-     * Forces the cache to fully cleared.\n-     */\n-    void clearAll();\n-    \n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageCache.java",
                "sha": "3dd63982337e6e50e39ad347c68241b36f40ebe2",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageFactory.java",
                "changes": 708,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/ImageFactory.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 708,
                "filename": "src/java/org/apache/fop/image/ImageFactory.java",
                "patch": "@@ -1,708 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// Java\n-import java.io.InputStream;\n-import java.lang.ref.Reference;\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.SoftReference;\n-import java.lang.reflect.Constructor;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.Map.Entry;\n-\n-import javax.xml.transform.Source;\n-import javax.xml.transform.stream.StreamSource;\n-\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.datatypes.URISpecification;\n-import org.apache.fop.image.analyser.ImageReaderFactory;\n-import org.apache.xmlgraphics.util.Service;\n-\n-/**\n- * Create FopImage objects (with a configuration file - not yet implemented).\n- * @author Eric SCHAEFFER\n- */\n-public final class ImageFactory {\n-\n-    /**\n-     * logging instance\n-     */\n-    protected static Log log = LogFactory.getLog(FopImage.class);\n-    \n-    private HashMap imageMimeTypes = new HashMap();\n-    \n-    private ImageCache cache = new ContextImageCache(true);\n-\n-    /**\n-     * Main constructor for the ImageFactory.\n-     */\n-    public ImageFactory() {\n-        /* @todo The mappings set up below of image mime types to implementing\n-         * classes should be made externally configurable\n-         */\n-        ImageProvider jaiImage = new ImageProvider(\"JAIImage\", \"org.apache.fop.image.JAIImage\");\n-        ImageProvider jimiImage = new ImageProvider(\"JIMIImage\", \"org.apache.fop.image.JimiImage\");\n-        ImageProvider imageIoImage = new ImageProvider(\n-                \"ImageIOImage\", \"org.apache.fop.image.ImageIOImage\");\n-        ImageProvider gifImage = new ImageProvider(\"GIFImage\", \"org.apache.fop.image.GifImage\");\n-        ImageProvider jpegImage = new ImageProvider(\"JPEGImage\", \"org.apache.fop.image.JpegImage\");\n-        ImageProvider jpegImageIOImage = new ImageProvider(\n-                \"JPEGImage\", \"org.apache.fop.image.JpegImageIOImage\");\n-        ImageProvider bmpImage = new ImageProvider(\"BMPImage\", \"org.apache.fop.image.BmpImage\");\n-        ImageProvider epsImage = new ImageProvider(\"EPSImage\", \"org.apache.fop.image.EPSImage\");\n-        ImageProvider pngImage = new ImageProvider(\"PNGImage\", \"org.apache.fop.image.PNGImage\");\n-        ImageProvider tiffImage = new ImageProvider(\"TIFFImage\", \"org.apache.fop.image.TIFFImage\");\n-        ImageProvider xmlImage = new ImageProvider(\"XMLImage\", \"org.apache.fop.image.XMLImage\");\n-        ImageProvider emfImage = new ImageProvider(\"EMFImage\", \"org.apache.fop.image.EmfImage\");\n-        \n-        ImageMimeType imt = new ImageMimeType(\"image/gif\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(imageIoImage);\n-        imt.addProvider(jaiImage);\n-        imt.addProvider(jimiImage);\n-        imt.addProvider(gifImage);\n-\n-        imt = new ImageMimeType(\"image/jpeg\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(jpegImageIOImage);\n-        imt.addProvider(jpegImage);\n-\n-        imt = new ImageMimeType(\"image/bmp\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(bmpImage);\n-\n-        imt = new ImageMimeType(\"image/eps\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(epsImage);\n-\n-        imt = new ImageMimeType(\"image/png\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        //Image I/O is faster and more memory-efficient than own codec for PNG\n-        imt.addProvider(imageIoImage);\n-        imt.addProvider(pngImage);\n-\n-        imt = new ImageMimeType(\"image/tga\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(jaiImage);\n-        imt.addProvider(imageIoImage);\n-        imt.addProvider(jimiImage);\n-\n-        imt = new ImageMimeType(\"image/tiff\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(tiffImage); //Slower but supports CCITT embedding\n-        imt.addProvider(imageIoImage); //Fast but doesn't support CCITT embedding\n-        imt.addProvider(jaiImage); //Fast but doesn't support CCITT embedding\n-\n-        imt = new ImageMimeType(\"image/svg+xml\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(xmlImage);\n-\n-        imt = new ImageMimeType(\"text/xml\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(xmlImage);\n-        \n-        imt = new ImageMimeType(\"image/emf\");\n-        imageMimeTypes.put(imt.getMimeType(), imt);\n-        imt.addProvider(emfImage);\n-\n-        Iterator iter = Service.providers(RegisterableImageProvider.class, true);\n-        while (iter.hasNext()) {\n-            RegisterableImageProvider impl = (RegisterableImageProvider)iter.next();\n-            imt = new ImageMimeType(impl.getSupportedMimeType());\n-            imageMimeTypes.put(imt.getMimeType(), imt);\n-            imt.addProvider(new ImageProvider(impl.getName(), impl.getClassName()));\n-        }\n-    }\n-\n-    /**\n-     * Get the url string from a wrapped url.\n-     *\n-     * @param href the input wrapped url\n-     * @return the raw url\n-     */\n-    public static String getURL(String href) {\n-        return URISpecification.getURL(href);\n-    }\n-\n-    /**\n-     * Get the image from the cache or load.\n-     * If this returns null then the image could not be loaded\n-     * due to an error. Messages should be logged.\n-     * Before calling this the getURL(url) must be used.\n-     *\n-     * @param url the url for the image\n-     * @param context the user agent context\n-     * @return the fop image instance\n-     */\n-    public FopImage getImage(String url, FOUserAgent context) {\n-        return cache.getImage(url, context);\n-    }\n-\n-    /**\n-     * Release an image from the cache.\n-     * This can be used if the renderer has its own cache of\n-     * the image.\n-     * The image should then be put into the weak cache.\n-     *\n-     * @param url the url for the image\n-     * @param context the user agent context\n-     */\n-    public void releaseImage(String url, FOUserAgent context) {\n-        cache.releaseImage(url, context);\n-    }\n-\n-    /**\n-     * Release the context and all images in the context.\n-     *\n-     * @param context the context to remove\n-     */\n-    public void removeContext(FOUserAgent context) {\n-        cache.removeContext(context);\n-    }\n-\n-    /**\n-     * Create an FopImage objects.\n-     * @param href the url for the image\n-     * @param ua the user agent context\n-     * @return the fop image instance\n-     */\n-    public FopImage loadImage(String href, FOUserAgent ua) {\n-\n-        Source source = ua.resolveURI(href);\n-        if (source == null) {\n-            return null;\n-        }\n-        \n-        // Got a valid source, obtain an InputStream from it\n-        InputStream in = null;\n-        if (source instanceof StreamSource) {\n-            in = ((StreamSource)source).getInputStream();\n-        }\n-        if (in == null) {\n-            try {\n-                in = new java.net.URL(source.getSystemId()).openStream();\n-            } catch (Exception ex) {\n-                log.error(\"Unable to obtain stream from id '\" \n-                    + source.getSystemId() + \"'\");\n-            }\n-        }\n-        if (in == null) {\n-            return null;\n-        }\n-\n-        //Make sure the InputStream is decorated with a BufferedInputStream\n-        if (!(in instanceof java.io.BufferedInputStream)) {\n-            in = new java.io.BufferedInputStream(in);\n-        }\n-\n-        // Check image type\n-        FopImage.ImageInfo imgInfo = null;\n-        try {\n-            imgInfo = ImageReaderFactory.make(source.getSystemId(), in, ua);\n-        } catch (Exception e) {\n-            log.error(\"Error while recovering image information (\"\n-                    + href + \") : \" + e.getMessage(), e);\n-            return null;\n-        }\n-        if (imgInfo == null) {\n-            try {\n-                in.close();\n-                in = null;\n-            } catch (Exception e) {\n-                log.debug(\"Error closing the InputStream for the image\", e);\n-            }\n-            log.error(\"No ImageReader for this type of image (\" + href + \")\");\n-            return null;\n-        }\n-        // Associate mime-type to FopImage class\n-        String imgMimeType = imgInfo.mimeType;\n-        Class imageClass = getImageClass(imgMimeType);\n-        if (imageClass == null) {\n-            log.error(\"Unsupported image type (\" + href + \"): \" + imgMimeType);\n-            return null;\n-        } else {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Loading \" + imgMimeType + \" with \" + imageClass.getName() \n-                        + \": \" + href);\n-            }\n-        }\n-\n-        // load the right image class\n-        // return new <FopImage implementing class>\n-        Object imageInstance = null;\n-        try {\n-            Class[] imageConstructorParameters = new Class[1];\n-            imageConstructorParameters[0] = org.apache.fop.image.FopImage.ImageInfo.class;\n-            Constructor imageConstructor = imageClass.getDeclaredConstructor(\n-                    imageConstructorParameters);\n-            Object[] initArgs = new Object[1];\n-            initArgs[0] = imgInfo;\n-            imageInstance = imageConstructor.newInstance(initArgs);\n-        } catch (java.lang.reflect.InvocationTargetException ex) {\n-            Throwable t = ex.getTargetException();\n-            String msg;\n-            if (t != null) {\n-                msg = t.getMessage();\n-            } else {\n-                msg = ex.getMessage();\n-            }\n-            log.error(\"Error creating FopImage object (\"\n-                    + href + \"): \" + msg, (t == null) ? ex : t);\n-            return null;\n-        } catch (InstantiationException ie) {\n-            log.error(\"Error creating FopImage object (\"\n-                    + href + \"): Could not instantiate \" + imageClass.getName() + \" instance\");\n-            return null;\n-        } catch (Exception ex) {\n-            log.error(\"Error creating FopImage object (\"\n-                    + href + \"): \" + ex.getMessage(), ex);\n-            return null;\n-        }\n-        if (!(imageInstance instanceof org.apache.fop.image.FopImage)) {\n-            log.error(\"Error creating FopImage object (\" + href + \"): \" + \"class \"\n-                    + imageClass.getName()\n-                    + \" doesn't implement org.apache.fop.image.FopImage interface\");\n-            return null;\n-        }\n-        return (FopImage) imageInstance;\n-    }\n-\n-    private Class getImageClass(String imgMimeType) {\n-        ImageMimeType imt = (ImageMimeType)imageMimeTypes.get(imgMimeType);\n-        if (imt == null) {\n-            return null;\n-        }\n-        return imt.getFirstImplementingClass();\n-    }\n-    \n-    /**\n-     * Forces all the image caches to be cleared. This should normally only be used in\n-     * testing environments. If you happen to think that you need to call this yourself \n-     * in a production environment, please notify the development team so we can look \n-     * into the issue. A call like this shouldn't be necessary anymore like it may have \n-     * been with FOP 0.20.5.\n-     */\n-    public void clearCaches() {\n-        cache.clearAll();\n-    }\n-}\n-\n-/**\n- * Basic image cache.\n- * This keeps track of invalid images.\n- */\n-class BasicImageCache implements ImageCache {\n-\n-    private Set invalid = Collections.synchronizedSet(new java.util.HashSet());\n-    //private Map contextStore = Collections.synchronizedMap(new java.util.HashMap());\n-\n-    public FopImage getImage(String url, FOUserAgent context) {\n-        if (invalid.contains(url)) {\n-            return null;\n-        }\n-        //TODO Doesn't seem to be fully implemented. Do we need it at all? Not referenced.\n-        return null;\n-    }\n-\n-    public void releaseImage(String url, FOUserAgent context) {\n-        // do nothing\n-    }\n-\n-    public void invalidateImage(String url, FOUserAgent context) {\n-        // cap size of invalid list\n-        if (invalid.size() > 100) {\n-            invalid.clear();\n-        }\n-        invalid.add(url);\n-    }\n-\n-    public void removeContext(FOUserAgent context) {\n-        // do nothing\n-    }\n-\n-    /** {@inheritDoc} */\n-    public void clearAll() {\n-        invalid.clear();\n-    }\n-    \n-}\n-\n-/**\n- * This is the context image cache.\n- * This caches images on the basis of the given context.\n- * Common images in different contexts are currently not handled.\n- * There are two possiblities, each context handles its own images\n- * and renderers can cache information or images are shared and\n- * all information is retained.\n- * Once a context is removed then all images are placed into a\n- * weak hashmap so they may be garbage collected.\n- */\n-class ContextImageCache implements ImageCache {\n-\n-    // if this cache is collective then images can be shared\n-    // among contexts, this implies that the base directory\n-    // is either the same or does not effect the images being\n-    // loaded\n-    private boolean collective;\n-    private Map contextStore = Collections.synchronizedMap(new java.util.HashMap());\n-    private Set invalid = null;\n-    private Map refStore = null;\n-    private ReferenceQueue refQueue = new ReferenceQueue();\n-\n-    public ContextImageCache(boolean col) {\n-        collective = col;\n-        if (collective) {\n-            refStore = Collections.synchronizedMap(new java.util.HashMap());\n-            invalid = Collections.synchronizedSet(new java.util.HashSet());\n-        }\n-    }\n-\n-    // sync around lookups and puts\n-    // another sync around load for a particular image\n-    public FopImage getImage(String url, FOUserAgent context) {\n-        ImageLoader im = null;\n-        // this protects the finding or creating of a new\n-        // ImageLoader for multi threads\n-        synchronized (this) {\n-            if (collective && invalid.contains(url)) {\n-                return null;\n-            }\n-            Context con = (Context) contextStore.get(context);\n-            if (con == null) {\n-                con = new Context(context, collective);\n-                contextStore.put(context, con);\n-            } else {\n-                if (con.invalid(url)) {\n-                    return null;\n-                }\n-                im = con.getImage(url);\n-            }\n-            if (im == null && collective) {\n-                Iterator i = contextStore.values().iterator();\n-                while (i.hasNext()) {\n-                    Context c = (Context)i.next();\n-                    if (c != con) {\n-                        im = c.getImage(url);\n-                        if (im != null) {\n-                            break;\n-                        }\n-                    }\n-                }\n-                if (im == null) {\n-                    Reference ref = (Reference)refStore.get(url);\n-                    if (ref != null) {\n-                        im = (ImageLoader) ref.get();\n-                        if (im == null) {\n-                            //Remove key if its value has been garbage collected\n-                            refStore.remove(url);\n-                        }\n-                    }\n-                }\n-            }\n-\n-            if (im != null) {\n-                con.putImage(url, im);\n-            } else {\n-                im = con.getImage(url, this);\n-            }\n-        }\n-\n-        // the ImageLoader is synchronized so images with the\n-        // same url will not be loaded at the same time\n-        if (im != null) {\n-            return im.loadImage();\n-        }\n-        return null;\n-    }\n-\n-    public void releaseImage(String url, FOUserAgent context) {\n-        Context con = (Context) contextStore.get(context);\n-        if (con != null) {\n-            if (collective) {\n-                ImageLoader im = con.getImage(url);\n-                refStore.put(url, wrapInReference(im, url));\n-            }\n-            con.releaseImage(url);\n-        }\n-    }\n-\n-    public void invalidateImage(String url, FOUserAgent context) {\n-        if (collective) {\n-            // cap size of invalid list\n-            if (invalid.size() > 100) {\n-                invalid.clear();\n-            }\n-            invalid.add(url);\n-        }\n-        Context con = (Context) contextStore.get(context);\n-        if (con != null) {\n-            con.invalidateImage(url);\n-        }\n-    }\n-\n-    private Reference wrapInReference(Object obj, Object key) {\n-        return new SoftReferenceWithKey(obj, key, refQueue);\n-    }\n-    \n-    private static class SoftReferenceWithKey extends SoftReference {\n-        \n-        private Object key;\n-        \n-        public SoftReferenceWithKey(Object referent, Object key, ReferenceQueue q) {\n-            super(referent, q);\n-            this.key = key;\n-        }\n-    }\n-    \n-    public void removeContext(FOUserAgent context) {\n-        Context con = (Context) contextStore.get(context);\n-        if (con != null) {\n-            if (collective) {\n-                Map images = con.getImages();\n-                Iterator iter = images.entrySet().iterator();\n-                while (iter.hasNext()) {\n-                    Entry entry = (Entry)iter.next();\n-                    refStore.put(entry.getKey(), \n-                            wrapInReference(entry.getValue(), entry.getKey()));\n-                }\n-            }\n-            contextStore.remove(context);\n-        }\n-        //House-keeping (remove cleared references)\n-        checkReferenceQueue();\n-    }\n-    \n-    /**\n-     * Checks the reference queue if any references have been cleared and removes them from the\n-     * cache.\n-     */\n-    private void checkReferenceQueue() {\n-        SoftReferenceWithKey ref;\n-        while ((ref = (SoftReferenceWithKey)refQueue.poll()) != null) {\n-            refStore.remove(ref.key);\n-        }\n-    }\n-\n-    class Context {\n-        private Map images = Collections.synchronizedMap(new java.util.HashMap());\n-        private Set invalid = null;\n-        private FOUserAgent userAgent;\n-\n-        public Context(FOUserAgent ua, boolean inv) {\n-            userAgent = ua;\n-            if (inv) {\n-                invalid = Collections.synchronizedSet(new java.util.HashSet());\n-            }\n-        }\n-\n-        public ImageLoader getImage(String url, ImageCache c) {\n-            if (images.containsKey(url)) {\n-                return (ImageLoader) images.get(url);\n-            }\n-            ImageLoader loader = new ImageLoader(url, c, userAgent);\n-            images.put(url, loader);\n-            return loader;\n-        }\n-\n-        public void putImage(String url, ImageLoader image) {\n-            images.put(url, image);\n-        }\n-\n-        public ImageLoader getImage(String url) {\n-            return (ImageLoader) images.get(url);\n-        }\n-\n-        public void releaseImage(String url) {\n-            images.remove(url);\n-        }\n-\n-        public Map getImages() {\n-            return images;\n-        }\n-\n-        public void invalidateImage(String url) {\n-            invalid.add(url);\n-        }\n-\n-        public boolean invalid(String url) {\n-            return invalid.contains(url);\n-        }\n-\n-    }\n-\n-    /** {@inheritDoc} */\n-    public void clearAll() {\n-        this.refStore.clear();\n-        this.invalid.clear();\n-        //The context-sensitive caches are not cleared so there are no negative side-effects\n-        //in a multi-threaded environment. Not that it's a good idea to use this method at\n-        //all except in testing environments. If such a calls is necessary in normal environments\n-        //we need to check on memory leaks!\n-    }\n-\n-}\n-\n-/**\n- * Encapsulates a class of type FopImage by holding its class name.\n- * This allows dynamic loading of the class at runtime.\n- */\n-class ImageProvider {\n-\n-    private String name = null;\n-\n-    private String className = null;\n-\n-    private boolean checked = false;\n-\n-    private Class clazz = null;\n-\n-    /**\n-     * Creates an ImageProvider with a given name and implementing class.\n-     * The class name should refer to a class of type {@link FopImage}.\n-     * However, this is not checked on construction.\n-     * @param name The name of the provider\n-     * @param className The full class name of the class implementing this provider\n-     */\n-    public ImageProvider(String name, String className) {\n-        setName(name);\n-        setClassName(className);\n-    }\n-\n-    /**\n-     * Returns the provider name.\n-     * @return The provider name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n-\n-    private void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    /**\n-     * Returns the implementing class name.\n-     * @return The implementing class name\n-     */\n-    public String getClassName() {\n-        return className;\n-    }\n-\n-    private void setClassName(String className) {\n-        this.className = className;\n-    }\n-\n-    /**\n-     * Returns the implementing class as a {@link Class} object.\n-     * @return The implementing class or null if it couldn't be loaded.\n-     */\n-    public Class getImplementingClass() {\n-        if (!checked) {\n-            try {\n-                clazz = Class.forName(getClassName());\n-            } catch (ClassNotFoundException cnfe) {\n-                //nop\n-            } catch (LinkageError le) {\n-                // This can happen if fop was build with support for a\n-                // particular provider (e.g. a binary fop distribution)\n-                // but the required support files (e.g. jai, jimi) are not\n-                // available in the current runtime environment.\n-                ImageFactory.log.debug(\"Image support provider \" + getName() \n-                    + \" could not be loaded. If \" + getName() + \" should be\" \n-                    + \" available please make sure all required external libraries\" \n-                    + \" are on the classpath.\");\n-            }\n-            checked = true;\n-        }\n-        return clazz;\n-    }\n-}\n-\n-/**\n- * Holds a mime type for a particular image format plus a list of\n- * {@link ImageProvider} objects which support the particular image format.\n- */\n-class ImageMimeType {\n-\n-    private String mimeType = null;\n-\n-    private List providers = null;\n-\n-    /**\n-     * Constructor for a particular mime type.\n-     * @param mimeType The mime type\n-     */\n-    public ImageMimeType(String mimeType) {\n-        setMimeType(mimeType);\n-    }\n-\n-    /**\n-     * Returns the mime type.\n-     * @return The mime type\n-     */\n-    public String getMimeType() {\n-        return mimeType;\n-    }\n-\n-    private void setMimeType(String mimeType) {\n-        this.mimeType = mimeType;\n-    }\n-\n-    /**\n-     * Returns the class from the first available provider.\n-     * @return The first available class or null if none can be found\n-     */\n-    public Class getFirstImplementingClass() {\n-        if (providers == null) {\n-            return null;\n-        }\n-        for (Iterator it = providers.iterator(); it.hasNext();) {\n-            ImageProvider ip = (ImageProvider)it.next();\n-            Class clazz = ip.getImplementingClass();\n-            if (clazz != null) {\n-                return clazz;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * Adds a new provider.\n-     * The provider is added to the end of the current provider list.\n-     * @param The new provider to add\n-     */\n-    public void addProvider(ImageProvider provider) {\n-        if (providers == null) {\n-            providers = new ArrayList(4); // Assume we only have a few providers\n-        }\n-        if (!providers.contains(provider)) {\n-            providers.add(provider);\n-        }\n-    }\n-}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageFactory.java",
                "sha": "5c9f198e83c356f0b978a9d24397ec45ababca2e",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageLoader.java",
                "changes": 64,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/ImageLoader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 64,
                "filename": "src/java/org/apache/fop/image/ImageLoader.java",
                "patch": "@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * Class to load images.\n- */\n-class ImageLoader {\n-    \n-    private String url;\n-    private ImageCache cache;\n-    private boolean valid = true;\n-    private FOUserAgent userAgent;\n-    private FopImage image = null;\n-\n-    /**\n-     * Main constructor.\n-     * @param url URL to the image\n-     * @param cache Image cache\n-     * @param ua User agent\n-     */\n-    public ImageLoader(String url, ImageCache cache, FOUserAgent ua) {\n-        this.url = url;\n-        this.cache = cache;\n-        this.userAgent = ua;\n-    }\n-\n-    /**\n-     * Loads the image.\n-     * @return the loaded image\n-     */\n-    public synchronized FopImage loadImage() {\n-        if (!valid || image != null) {\n-            return image;\n-        }\n-        ImageFactory imageFactory = userAgent.getFactory().getImageFactory();\n-        image = imageFactory.loadImage(url, userAgent);\n-        if (image == null) {\n-            cache.invalidateImage(url, userAgent);\n-            valid = false;\n-        }\n-        return image;\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/ImageLoader.java",
                "sha": "111ef919f931bfa314bb6fd8f66f1ac89716f238",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JAIImage.java",
                "changes": 194,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/JAIImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 194,
                "filename": "src/java/org/apache/fop/image/JAIImage.java",
                "patch": "@@ -1,194 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// AWT\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.BufferedImage;\n-import java.awt.Color;\n-\n-// JAI\n-import javax.media.jai.JAI;\n-import javax.media.jai.RenderedOp;\n-\n-import org.apache.commons.io.IOUtils;\n-// Sun codec\n-import com.sun.media.jai.codec.FileCacheSeekableStream;\n-\n-/**\n- * FopImage object using JAI.\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class JAIImage extends AbstractFopImage {\n-\n-    /**\n-     * Create a new JAI image.\n-     *\n-     * @param imgInfo the image info for this JAI image\n-     */\n-    public JAIImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-        return this.bitmaps != null;\n-    }\n-    \n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadBitmap() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-\n-        return this.bitmaps != null;\n-    }\n-\n-    /**\n-     * Loads the image from the inputstream\n-     */\n-    protected void loadImage() {\n-        com.sun.media.jai.codec.FileCacheSeekableStream seekableInput = null;\n-        RenderedOp imageOp = null;\n-        try {\n-            seekableInput = new FileCacheSeekableStream(inputStream);\n-            imageOp = JAI.create(\"stream\", seekableInput);\n-\n-            this.height = imageOp.getHeight();\n-            this.width = imageOp.getWidth();\n-\n-            ColorModel cm = imageOp.getColorModel();\n-            //this.bitsPerPixel = 8;\n-            this.bitsPerPixel = cm.getPixelSize();\n-            \n-            // TODO: the getRGB() function converts the image into the RGB\n-            // colorspace. However, here we assume the image colorspace is kept.\n-            // It should be either one of them, but not both. Unfortunately\n-            // there are other hacks for images in the CMYK colorspace (e.g. in\n-            // the PDF output) that would need to be changed as well.\n-            \n-            //this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n-            this.colorSpace = cm.getColorSpace();\n-            \n-            BufferedImage imageData = imageOp.getAsBufferedImage();\n-            int[] tmpMap = imageData.getRGB(0, 0, this.width,\n-                                            this.height, null, 0, this.width);\n-\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-\n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        // TRANSLUCENT\n-                        /*\n-                         * this.isTransparent = false;\n-                         * for (int i = 0; i < this.width * this.height; i++) {\n-                         * if (cm.getAlpha(tmpMap[i]) == 0) {\n-                         * this.isTransparent = true;\n-                         * this.transparentColor = new PDFColor(cm.getRed(tmpMap[i]),\n-                         * cm.getGreen(tmpMap[i]), cm.getBlue(tmpMap[i]));\n-                         * break;\n-                         * }\n-                         * }\n-                         * // or use special API...\n-                         */\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-\n-            // Should take care of the ColorSpace and bitsPerPixel\n-            this.bitmaps = new byte[this.width * this.height * 3];\n-            for (int i = 0; i < this.height; i++) {\n-                for (int j = 0; j < this.width; j++) {\n-                    int p = tmpMap[i * this.width + j];\n-                    int r = (p >> 16) & 0xFF;\n-                    int g = (p >> 8) & 0xFF;\n-                    int b = (p) & 0xFF;\n-                    this.bitmaps[3 * (i * this.width + j)] = (byte)(r & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 1] = (byte)(g & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 2] = (byte)(b & 0xFF);\n-                }\n-            }\n-\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image (JAI): \" + ex.getMessage(), ex);\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-            if (imageOp != null) {\n-                imageOp.dispose();\n-            }\n-            if (seekableInput != null) {\n-                IOUtils.closeQuietly(seekableInput);\n-            }\n-        }\n-    }\n-\n-    /** {@inheritDoc} */\n-    protected boolean loadOriginalData() {\n-        return loadDefaultOriginalData();\n-    }\n-    \n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JAIImage.java",
                "sha": "8b3074052435244b307ecdf9ba8dc38bdffe60e3",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JimiImage.java",
                "changes": 186,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/JimiImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 186,
                "filename": "src/java/org/apache/fop/image/JimiImage.java",
                "patch": "@@ -1,186 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// Java\n-import java.awt.image.ImageProducer;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.color.ColorSpace;\n-import java.awt.Color;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-// Jimi\n-import com.sun.jimi.core.Jimi;\n-\n-/**\n- * FopImage object for several images types, using Jimi.\n- * See Jimi documentation for supported image types.\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class JimiImage extends AbstractFopImage {\n-\n-    /**\n-     * Create a new Jimi image.\n-     *\n-     * @param imgInfo the image info for this Jimi image\n-     */\n-    public JimiImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-\n-        return this.bitmaps != null;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadBitmap() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-\n-        return this.bitmaps != null;\n-    }\n-\n-    /**\n-     * Loads the image from the inputstream\n-     */\n-    protected void loadImage() {\n-        int[] tmpMap = null;\n-        try {\n-            ImageProducer ip = Jimi.getImageProducer(inputStream,\n-                                    Jimi.SYNCHRONOUS | Jimi.IN_MEMORY);\n-            FopImageConsumer consumer = new FopImageConsumer(ip);\n-            ip.startProduction(consumer);\n-\n-            while (!consumer.isImageReady()) {\n-                Thread.sleep(500);\n-            }\n-            this.height = consumer.getHeight();\n-            this.width = consumer.getWidth();\n-\n-            try {\n-                tmpMap = consumer.getImage();\n-            } catch (Exception ex) {\n-                log.error(\"Image grabbing interrupted\", ex);\n-                return;\n-            }\n-\n-            ColorModel cm = consumer.getColorModel();\n-            this.bitsPerPixel = 8;\n-            // this.bitsPerPixel = cm.getPixelSize();\n-            this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        // TRANSLUCENT\n-                        /*\n-                         * this.isTransparent = false;\n-                         * for (int i = 0; i < this.width * this.height; i++) {\n-                         * if (cm.getAlpha(tmpMap[i]) == 0) {\n-                         * this.isTransparent = true;\n-                         * this.transparentColor = new PDFColor(cm.getRed(tmpMap[i]),\n-                         *      cm.getGreen(tmpMap[i]), cm.getBlue(tmpMap[i]));\n-                         * break;\n-                         * }\n-                         * }\n-                         */\n-                        // use special API...\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-        } catch (Throwable ex) {\n-            log.error(\"Error while loading image (Jimi): \" + ex.getMessage(), ex);\n-            return;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-\n-\n-        // Should take care of the ColorSpace and bitsPerPixel\n-        this.bitmaps = new byte[this.width * this.height * 3];\n-        for (int i = 0; i < this.height; i++) {\n-            for (int j = 0; j < this.width; j++) {\n-                int p = tmpMap[i * this.width + j];\n-                int r = (p >> 16) & 0xFF;\n-                int g = (p >> 8) & 0xFF;\n-                int b = (p) & 0xFF;\n-                this.bitmaps[3 * (i * this.width + j)] = (byte)(r & 0xFF);\n-                this.bitmaps[3 * (i * this.width + j) + 1] = (byte)(g & 0xFF);\n-                this.bitmaps[3 * (i * this.width + j) + 2] = (byte)(b & 0xFF);\n-            }\n-        }\n-    }\n-\n-    /** {@inheritDoc} */\n-    protected boolean loadOriginalData() {\n-        return loadDefaultOriginalData();\n-    }\n-    \n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JimiImage.java",
                "sha": "49fb0b2e031f06d49dbdc8466d755a0bc137362f",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JpegImage.java",
                "changes": 239,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/JpegImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 239,
                "filename": "src/java/org/apache/fop/image/JpegImage.java",
                "patch": "@@ -1,239 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image;\n-\n-import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_Profile;\n-\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.io.output.ByteArrayOutputStream;\n-import org.apache.fop.util.CMYKColorSpace;\n-\n-/**\n- * FopImage object for JPEG images, Using Java native classes.\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class JpegImage extends AbstractFopImage {\n-    private ICC_Profile iccProfile = null;\n-    private boolean foundICCProfile = false;\n-    private boolean hasAPPEMarker = false;\n-\n-    /**\n-     * Create a jpeg image with the info.\n-     *\n-     * @param imgInfo the image info for this jpeg\n-     */\n-    public JpegImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-    }\n-\n-    /**\n-     * Load the original jpeg data.\n-     * This loads the original jpeg data and reads the color space,\n-     * and icc profile if any.\n-     *\n-     * @return true if loaded false for any error\n-     */\n-    protected boolean loadOriginalData() {\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        ByteArrayOutputStream iccStream = null;\n-        int index = 0;\n-        boolean cont = true;\n-\n-        try {\n-            byte[] readBuf = new byte[4096];\n-            int bytesRead;\n-            while ((bytesRead = inputStream.read(readBuf)) != -1) {\n-                baos.write(readBuf, 0, bytesRead);\n-            }\n-        } catch (java.io.IOException ex) {\n-            log.error(\"Error while loading image (Jpeg): \" + ex.getMessage(), ex);\n-            return false;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-\n-        this.raw = baos.toByteArray();\n-        this.bitsPerPixel = 8;\n-        this.isTransparent = false;\n-\n-        //Check for SOI (Start of image) marker (FFD8)\n-        if (this.raw.length > (index + 2)\n-                && uByte(this.raw[index]) == 255 /*0xFF*/\n-                && uByte(this.raw[index + 1]) == 216 /*0xD8*/) {\n-            index += 2;\n-\n-            while (index < this.raw.length && cont) {\n-                //check to be sure this is the begining of a header\n-                if (this.raw.length > (index + 2)\n-                        && uByte(this.raw[index]) == 255 /*0xFF*/) {\n-\n-                    //192 or 194 are the header bytes that contain\n-                    // the jpeg width height and color depth.\n-                    if (uByte(this.raw[index + 1]) == 192 /*0xC0*/\n-                            || uByte(this.raw[index + 1]) == 194 /*0xC2*/) {\n-\n-                        this.height = calcBytes(this.raw[index + 5],\n-                                                  this.raw[index + 6]);\n-                        this.width = calcBytes(this.raw[index + 7],\n-                                                 this.raw[index + 8]);\n-\n-                        int numComponents = this.raw[index + 9];\n-                        if (numComponents == 1) {\n-                            this.colorSpace = ColorSpace.getInstance(\n-                              ColorSpace.CS_GRAY);\n-                        } else if (numComponents == 3) {\n-                            this.colorSpace = ColorSpace.getInstance(\n-                              ColorSpace.CS_LINEAR_RGB);\n-                        } else if (numComponents == 4) {\n-                            // howto create CMYK color space\n-                            /*\n-                            this.colorSpace = ColorSpace.getInstance(\n-                              ColorSpace.CS_CIEXYZ);\n-                            */\n-                            this.colorSpace = CMYKColorSpace.getInstance();\n-                        } else {\n-                            log.error(\"Unknown ColorSpace for image: \"\n-                                                   + \"\");\n-                            return false;\n-                        }\n-\n-                        if (foundICCProfile) {\n-                            cont = false;\n-                            break;\n-                        }\n-                        index += calcBytes(this.raw[index + 2],\n-                                           this.raw[index + 3]) + 2;\n-\n-                    } else if (uByte(this.raw[index + 1]) == 226 /*0xE2*/\n-                                   && this.raw.length > (index + 60)) {\n-                        // Check if ICC profile\n-                        byte[] iccString = new byte[11];\n-                        System.arraycopy(this.raw, index + 4,\n-                                         iccString, 0, 11);\n-\n-                        if (\"ICC_PROFILE\".equals(new String(iccString))) {\n-                            int chunkSize = calcBytes(\n-                                              this.raw[index + 2],\n-                                              this.raw[index + 3]) + 2;\n-\n-                            if (iccStream == null) {\n-                                iccStream = new ByteArrayOutputStream();\n-                            }\n-                            iccStream.write(this.raw,\n-                                            index + 18, chunkSize - 18);\n-\n-                        }\n-\n-                        index += calcBytes(this.raw[index + 2],\n-                                           this.raw[index + 3]) + 2;\n-                    // Check for Adobe APPE Marker\n-                    } else if ((uByte(this.raw[index]) == 0xff\n-                                && uByte(this.raw[index + 1]) == 0xee\n-                                && uByte(this.raw[index + 2]) == 0\n-                                && uByte(this.raw[index + 3]) == 14\n-                                && \"Adobe\".equals(new String(this.raw, index + 4, 5)))) {\n-                        // The reason for reading the APPE marker is that Adobe Photoshop\n-                        // generates CMYK JPEGs with inverted values. The correct thing\n-                        // to do would be to interpret the values in the marker, but for now\n-                        // only assume that if APPE marker is present and colorspace is CMYK,\n-                        // the image is inverted.\n-                        hasAPPEMarker = true;\n-\n-                        index += calcBytes(this.raw[index + 2],\n-                                           this.raw[index + 3]) + 2;\n-                    } else {\n-                        index += calcBytes(this.raw[index + 2],\n-                                           this.raw[index + 3]) + 2;\n-                    }\n-\n-                } else {\n-                    cont = false;\n-                }\n-            }\n-        } else {\n-            log.error(\"Error while loading \"\n-                         + \"JpegImage - Invalid JPEG Header.\");\n-            return false;\n-        }\n-        if (iccStream != null && iccStream.size() > 0) {\n-            int padding = (8 - (iccStream.size() % 8)) % 8;\n-            if (padding != 0) {\n-                try {\n-                    iccStream.write(new byte[padding]);\n-                } catch (Exception ex) {\n-                    log.error(\"Error while aligning ICC stream: \" + ex.getMessage(), ex);\n-                    return false;\n-                }\n-            }\n-            try {\n-                iccProfile = ICC_Profile.getInstance(iccStream.toByteArray());\n-            } catch (IllegalArgumentException iae) {\n-                log.warn(\"An ICC profile is present but it is invalid (\" \n-                        + iae.getMessage() + \"). The color profile will be ignored. (\" \n-                        + this.getOriginalURI() + \")\");\n-            }\n-            if (iccProfile.getNumComponents() != this.colorSpace.getNumComponents()) {\n-                log.warn(\"The number of components of the ICC profile (\"\n-                        + iccProfile.getNumComponents() \n-                        + \") doesn't match the image (\"\n-                        + this.colorSpace.getNumComponents()\n-                        + \"). Ignoring the ICC color profile.\");\n-                this.iccProfile = null;\n-            }\n-        } else if (this.colorSpace == null) {\n-            log.error(\"ColorSpace not specified for JPEG image\");\n-            return false;\n-        }\n-        if (hasAPPEMarker && this.colorSpace.getType() == ColorSpace.TYPE_CMYK) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"JPEG has an Adobe APPE marker. Note: CMYK Image will be inverted. (\"\n-                        + this.getOriginalURI() + \")\");\n-            }\n-            this.invertImage = true;\n-        }\n-        return true;\n-    }\n-\n-    /**\n-     * Get the ICC profile for this Jpeg image.\n-     *\n-     * @return the icc profile or null if not found\n-     */\n-    public ICC_Profile getICCProfile() {\n-        return iccProfile;\n-    }\n-\n-    private int calcBytes(byte bOne, byte bTwo) {\n-        return (uByte(bOne) * 256) + uByte(bTwo);\n-    }\n-\n-    private int uByte(byte bIn) {\n-        if (bIn < 0) {\n-            return 256 + bIn;\n-        } else {\n-            return bIn;\n-        }\n-    }\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/JpegImage.java",
                "sha": "1de6b0d481266a6879a47a1e23fea06762ac6fdf",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/PNGImage.java",
                "changes": 87,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/PNGImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 87,
                "filename": "src/java/org/apache/fop/image/PNGImage.java",
                "patch": "@@ -1,87 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-import java.io.IOException;\n-\n-import org.apache.xmlgraphics.image.codec.png.PNGRed;\n-import org.apache.xmlgraphics.image.codec.png.PNGDecodeParam;\n-import org.apache.xmlgraphics.image.codec.util.SeekableStream;\n-import org.apache.xmlgraphics.image.rendered.CachableRed;\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * FopImage object using PNG\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class PNGImage extends XmlGraphicsCommonsImage {\n-\n-    /**\n-     * Constructs a new PNGImage instance.\n-     * @param imgReader basic metadata for the image\n-     */\n-    public PNGImage(FopImage.ImageInfo imgReader) {\n-        super(imgReader);\n-        this.loaded = 0; //TODO The PNGReader cannot read the resolution, yet. \n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected CachableRed decodeImage(SeekableStream stream) throws IOException {\n-        PNGDecodeParam param = new PNGDecodeParam();\n-        param.setPerformGammaCorrection(true);\n-        param.setDisplayExponent(2.2f); // sRGB gamma\n-        PNGRed red = new PNGRed(stream, param); \n-        String unit = (String)red.getProperty(\"pixel_units\");\n-        if (\"Meters\".equals(unit)) {\n-            this.dpiHorizontal = ((Integer)red.getProperty(\"x_pixels_per_unit\")).intValue() \n-                * 25.4f / 1000f;\n-            this.dpiVertical = ((Integer)red.getProperty(\"y_pixels_per_unit\")).intValue()\n-                * 25.4f / 1000f;\n-        }\n-        return red;\n-    }\n-    \n-    /**\n-     * Load the original PNG data.\n-     * This loads the original PNG data as is into memory.\n-     *\n-     * @return true if loaded false for any error\n-     */\n-    protected boolean loadOriginalData() {\n-        try {\n-            seekableInput.seek(0);\n-            this.raw = IOUtils.toByteArray(seekableInput);\n-        \n-        } catch (java.io.IOException ex) {\n-            log.error(\"Error while loading raw image: \" + ex.getMessage(), ex);\n-            return false;\n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-\n-        return true;\n-    }\n-    \n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/PNGImage.java",
                "sha": "c83d491f0cbdae753db2b8ea8df73241d7759e5c",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/TIFFImage.java",
                "changes": 207,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/TIFFImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 207,
                "filename": "src/java/org/apache/fop/image/TIFFImage.java",
                "patch": "@@ -1,207 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-import java.awt.color.ColorSpace;\n-import java.io.IOException;\n-\n-import org.apache.xmlgraphics.image.codec.util.SeekableStream;\n-import org.apache.xmlgraphics.image.codec.tiff.TIFFDirectory;\n-import org.apache.xmlgraphics.image.codec.tiff.TIFFField;\n-import org.apache.xmlgraphics.image.codec.tiff.TIFFImageDecoder;\n-import org.apache.xmlgraphics.image.rendered.CachableRed;\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * TIFF implementation using the Batik codecs.\n- */\n-public class TIFFImage extends XmlGraphicsCommonsImage {\n-\n-    private int compression = 0;\n-    private int stripCount = 0;\n-    private long stripOffset = 0;\n-    private long stripLength = 0;\n-    private int fillOrder = 1;\n-\n-    /**\n-     * Constructs a new BatikImage instance.\n-     * @param imgReader basic metadata for the image\n-     */\n-    public TIFFImage(FopImage.ImageInfo imgReader) {\n-        super(imgReader);\n-    }\n-\n-    /**\n-     * The compression type set in the TIFF directory\n-     * @return the TIFF compression type\n-     */\n-    public int getCompression() {\n-        return compression;\n-    }\n-\n-    /**\n-     * The number of strips in the image\n-     * @return the number of strips in the image\n-     */\n-    public int getStripCount() {\n-        return stripCount;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     *          org.apache.xmlgraphics.image.codec.util.SeekableStream)\n-     */\n-    protected CachableRed decodeImage(SeekableStream stream) throws IOException {\n-        org.apache.xmlgraphics.image.codec.tiff.TIFFImage img\n-            = new org.apache.xmlgraphics.image.codec.tiff.TIFFImage\n-                (stream, null, 0);\n-        TIFFDirectory dir = (TIFFDirectory)img.getProperty(\"tiff_directory\");\n-        TIFFField fld = dir.getField(TIFFImageDecoder.TIFF_RESOLUTION_UNIT);\n-        int resUnit = fld.getAsInt(0);\n-        fld = dir.getField(TIFFImageDecoder.TIFF_X_RESOLUTION);\n-        double xRes = fld.getAsDouble(0);\n-        fld = dir.getField(TIFFImageDecoder.TIFF_Y_RESOLUTION);\n-        double yRes = fld.getAsDouble(0);\n-        switch (resUnit) {\n-        case 2: //inch\n-            this.dpiHorizontal = xRes;\n-            this.dpiVertical = yRes;\n-            break;\n-        case 3: //cm\n-            this.dpiHorizontal = xRes * 2.54f;\n-            this.dpiVertical = yRes * 2.54f;\n-            break;\n-        default:\n-            //ignored\n-            log.warn(\"Cannot determine bitmap resolution.\"\n-                    + \" Unimplemented resolution unit: \" + resUnit);\n-        }\n-        fld = dir.getField(TIFFImageDecoder.TIFF_COMPRESSION);\n-        if (fld != null) {\n-            compression = fld.getAsInt(0);\n-        }\n-        fld = dir.getField(TIFFImageDecoder.TIFF_BITS_PER_SAMPLE);\n-        if (fld != null) {\n-            bitsPerPixel = fld.getAsInt(0);\n-        }\n-        fld = dir.getField(TIFFImageDecoder.TIFF_ROWS_PER_STRIP);\n-        if (fld == null) {\n-            stripCount = 1;\n-        } else {\n-            stripCount = (int)(dir.getFieldAsLong(TIFFImageDecoder.TIFF_IMAGE_LENGTH)\n-                                / fld.getAsLong(0));\n-        }\n-\n-        fld = dir.getField(TIFFImageDecoder.TIFF_FILL_ORDER);\n-        if (fld != null) {\n-            fillOrder = fld.getAsInt(0);\n-        }\n-\n-        stripOffset = dir.getField(TIFFImageDecoder.TIFF_STRIP_OFFSETS).getAsLong(0);\n-        stripLength = dir.getField(TIFFImageDecoder.TIFF_STRIP_BYTE_COUNTS).getAsLong(0);\n-        \n-        if (this.bitsPerPixel == 1) {\n-            this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_GRAY);\n-        }\n-        return img;\n-    }\n-\n-    /**\n-     * Load the original TIFF data.\n-     * This loads only strip 1 of the original TIFF data.\n-     *\n-     * @return true if loaded false for any error\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadOriginalData() {\n-        if (loadDimensions()) {\n-            byte[] readBuf = new byte[(int)stripLength];\n-            int bytesRead;\n-\n-            try {\n-                this.seekableInput.reset();\n-                this.seekableInput.skip(stripOffset);\n-                bytesRead = seekableInput.read(readBuf);\n-                if (bytesRead != stripLength) {\n-                    log.error(\"Error while loading image: length mismatch on read\");\n-                    return false;\n-                }\n-\n-                // need to invert bytes if fill order = 2\n-                if (fillOrder == 2) {\n-                    for (int i = 0; i < (int)stripLength; i++) {\n-                        readBuf[i] = flipTable[readBuf[i] & 0xff];\n-                    }\n-                }\n-                this.raw = readBuf;\n-\n-                return true;\n-            } catch (IOException ioe) {\n-                log.error(\"Error while loading image strip 1 (TIFF): \", ioe);\n-                return false;\n-            } finally {\n-                IOUtils.closeQuietly(seekableInput);\n-                IOUtils.closeQuietly(inputStream);\n-                this.seekableInput = null;\n-                this.inputStream = null;\n-                this.cr = null;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    // Table to be used when fillOrder = 2, for flipping bytes.\n-    // Copied from XML Graphics Commons' TIFFFaxDecoder class\n-    private static byte[] flipTable = {\n-     0,  -128,    64,   -64,    32,   -96,    96,   -32,\n-    16,  -112,    80,   -48,    48,   -80,   112,   -16,\n-     8,  -120,    72,   -56,    40,   -88,   104,   -24,\n-    24,  -104,    88,   -40,    56,   -72,   120,    -8,\n-     4,  -124,    68,   -60,    36,   -92,   100,   -28,\n-    20,  -108,    84,   -44,    52,   -76,   116,   -12,\n-    12,  -116,    76,   -52,    44,   -84,   108,   -20,\n-    28,  -100,    92,   -36,    60,   -68,   124,    -4,\n-     2,  -126,    66,   -62,    34,   -94,    98,   -30,\n-    18,  -110,    82,   -46,    50,   -78,   114,   -14,\n-    10,  -118,    74,   -54,    42,   -86,   106,   -22,\n-    26,  -102,    90,   -38,    58,   -70,   122,    -6,\n-     6,  -122,    70,   -58,    38,   -90,   102,   -26,\n-    22,  -106,    86,   -42,    54,   -74,   118,   -10,\n-    14,  -114,    78,   -50,    46,   -82,   110,   -18,\n-    30,   -98,    94,   -34,    62,   -66,   126,    -2,\n-     1,  -127,    65,   -63,    33,   -95,    97,   -31,\n-    17,  -111,    81,   -47,    49,   -79,   113,   -15,\n-     9,  -119,    73,   -55,    41,   -87,   105,   -23,\n-    25,  -103,    89,   -39,    57,   -71,   121,    -7,\n-     5,  -123,    69,   -59,    37,   -91,   101,   -27,\n-    21,  -107,    85,   -43,    53,   -75,   117,   -11,\n-    13,  -115,    77,   -51,    45,   -83,   109,   -19,\n-    29,   -99,    93,   -35,    61,   -67,   125,    -3,\n-     3,  -125,    67,   -61,    35,   -93,    99,   -29,\n-    19,  -109,    83,   -45,    51,   -77,   115,   -13,\n-    11,  -117,    75,   -53,    43,   -85,   107,   -21,\n-    27,  -101,    91,   -37,    59,   -69,   123,    -5,\n-     7,  -121,    71,   -57,    39,   -89,   103,   -25,\n-    23,  -105,    87,   -41,    55,   -73,   119,    -9,\n-    15,  -113,    79,   -49,    47,   -81,   111,   -17,\n-    31,   -97,    95,   -33,    63,   -65,   127,    -1,\n-    };\n-    // end\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/TIFFImage.java",
                "sha": "d9a9fc0220431349d4b78b614bd8715270517757",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/XMLImage.java",
                "changes": 78,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/XMLImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 78,
                "filename": "src/java/org/apache/fop/image/XMLImage.java",
                "patch": "@@ -1,78 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// Java\n-import org.w3c.dom.Document;\n-import javax.xml.parsers.SAXParserFactory;\n-\n-/**\n- * This is an implementation for XML-based images such as SVG.\n- *\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class XMLImage extends AbstractFopImage {\n-\n-    private Document doc;\n-    private String namespace = \"\";\n-\n-    /**\n-     * @see org.apache.fop.image.AbstractFopImage#AbstractFopImage(FopImage.ImageInfo)\n-     */\n-    public XMLImage(FopImage.ImageInfo imgInfo) {\n-        super(imgInfo);\n-        if (imgInfo.data instanceof Document) {\n-            doc = (Document)imgInfo.data;\n-            loaded = loaded | ORIGINAL_DATA;\n-        }\n-        namespace = imgInfo.str;\n-    }\n-\n-    /**\n-     * Returns the fully qualified classname of an XML parser for\n-     * Batik classes that apparently need it (error messages, perhaps)\n-     * @return an XML parser classname\n-     */\n-    public static String getParserName() {\n-        try {\n-            SAXParserFactory factory = SAXParserFactory.newInstance();\n-            return factory.newSAXParser().getXMLReader().getClass().getName();\n-        } catch (Exception e) {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the XML document as a DOM document.\n-     * @return the DOM document\n-     */\n-    public Document getDocument() {\n-        return this.doc;\n-    }\n-\n-    /**\n-     * Returns the namespace of the XML document.\n-     * @return the namespace\n-     */\n-    public String getNameSpace() {\n-        return this.namespace;\n-    }\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/XMLImage.java",
                "sha": "261dc8494b5b58fcc205891a23d6c69c96be3f07",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/XmlGraphicsCommonsImage.java",
                "changes": 239,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/XmlGraphicsCommonsImage.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 239,
                "filename": "src/java/org/apache/fop/image/XmlGraphicsCommonsImage.java",
                "patch": "@@ -1,239 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-import java.awt.Color;\n-import java.awt.Transparency;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.RenderedImage;\n-import java.awt.image.WritableRaster;\n-import java.awt.image.BufferedImage;\n-import java.io.IOException;\n-\n-import org.apache.xmlgraphics.image.GraphicsUtil;\n-import org.apache.xmlgraphics.image.codec.util.SeekableStream;\n-import org.apache.xmlgraphics.image.codec.util.MemoryCacheSeekableStream;\n-import org.apache.xmlgraphics.image.codec.util.FileCacheSeekableStream;\n-import org.apache.xmlgraphics.image.rendered.CachableRed;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * Abstract FopImage implementation which uses the internal codecs from XML Graphics Commons.\n- * \n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public abstract class XmlGraphicsCommonsImage extends AbstractFopImage {\n-\n-    private byte[] softMask = null;\n-\n-    /**\n-     * The InputStream wrapped into a SeekableStream for decoding.\n-     */\n-    protected SeekableStream seekableInput = null;\n-\n-    /**\n-     * The Batik representation of the image\n-     */\n-    protected CachableRed cr = null;\n-    \n-    /**\n-     * Constructs a new BatikImage instance.\n-     * @param imgReader basic metadata for the image\n-     */\n-    public XmlGraphicsCommonsImage(FopImage.ImageInfo imgReader) {\n-        super(imgReader);\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadDimensions() {\n-        if (seekableInput == null && inputStream != null) {\n-            try { \n-                seekableInput = new FileCacheSeekableStream(inputStream);\n-            } catch (IOException ioe) {\n-                seekableInput = new MemoryCacheSeekableStream(inputStream);\n-            }\n-            try {\n-                this.bitsPerPixel = 8;\n-                cr = decodeImage(seekableInput);\n-                this.height = cr.getHeight();\n-                this.width  = cr.getWidth();\n-                this.isTransparent = false;\n-                this.softMask = null;\n-                ColorModel cm = cr.getColorModel();\n-\n-                this.height = cr.getHeight();\n-                this.width  = cr.getWidth();\n-                this.isTransparent = false;\n-                this.softMask = null;\n-\n-                int transparencyType = cm.getTransparency();\n-                if (cm instanceof IndexColorModel)  {\n-                    if (transparencyType == Transparency.BITMASK) {\n-                        // Use 'transparent color'.\n-                        IndexColorModel icm = (IndexColorModel)cm;\n-                        int numColor = icm.getMapSize();\n-                        byte [] alpha = new byte[numColor];\n-                        icm.getAlphas(alpha);\n-                        for (int i = 0; i < numColor; i++) {\n-                            if ((alpha[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                int red = (icm.getRed  (i)) & 0xFF;\n-                                int grn = (icm.getGreen(i)) & 0xFF;\n-                                int blu = (icm.getBlue (i)) & 0xFF;\n-                                this.transparentColor = new Color(red, grn, blu);\n-                                break;\n-                            }\n-                        }\n-                    }\n-                } else {\n-                    cr = GraphicsUtil.convertTosRGB(cr);\n-                }\n-\n-                // Get our current ColorModel\n-                cm = cr.getColorModel();\n-                if (this.colorSpace == null) {\n-                    this.colorSpace = cm.getColorSpace();\n-                }\n-            } catch (IOException ioe) {\n-                log.error(\"Error while loading image (Batik): \" + ioe.getMessage(), ioe);\n-                IOUtils.closeQuietly(seekableInput);\n-                IOUtils.closeQuietly(inputStream);\n-                seekableInput = null;\n-                inputStream = null;\n-                return false;\n-            }\n-        }\n-        return this.height != -1;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected boolean loadBitmap() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-\n-        return this.bitmaps != null;\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public boolean hasSoftMask() {\n-        if (this.bitmaps == null && this.raw == null) {\n-            loadImage();\n-        }\n-\n-        return (this.softMask != null);\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    public byte[] getSoftMask() {\n-        if (this.bitmaps == null) {\n-            loadImage();\n-        }\n-\n-        return this.softMask;\n-    }\n-\n-    /**\n-     * Decodes the image from the stream.\n-     * @param stream the stream to read the image from\n-     * @return the decoded image\n-     * @throws IOException in case an I/O problem occurs\n-     */\n-    protected abstract CachableRed decodeImage(SeekableStream stream) throws IOException;\n-    \n-    /**\n-     * Loads the image from the InputStream.\n-     */\n-    protected void loadImage() {\n-        if (loadDimensions()) {\n-            try {\n-                if (cr == null) {\n-                    throw new IllegalStateException(\n-                            \"Can't load the bitmaps data without the CachableRed instance\");\n-                }\n-                \n-                // Get our current ColorModel\n-                ColorModel cm = cr.getColorModel();\n-\n-                // It has an alpha channel so generate a soft mask.\n-                if (!this.isTransparent && cm.hasAlpha()) {\n-                    this.softMask = new byte[this.width * this.height];\n-                }\n-\n-                this.bitmaps = new byte[this.width * this.height * 3];\n-\n-                constructBitmaps(cr, this.bitmaps, this.softMask);\n-            } catch (Exception ex) {\n-                log.error(\"Error while loading image (Batik): \" + ex.getMessage(), ex);\n-            } finally {\n-                // Make sure we clean up\n-                IOUtils.closeQuietly(seekableInput);\n-                IOUtils.closeQuietly(inputStream);\n-                seekableInput = null;\n-                inputStream = null;\n-                cr = null;\n-            }\n-        }\n-    }\n-\n-    private static void constructBitmaps(RenderedImage red, byte[] bitmaps, byte[] softMask) {\n-        WritableRaster wr = (WritableRaster)red.getData();\n-        ColorModel cm = red.getColorModel();\n-        BufferedImage bi = new BufferedImage\n-            (cm, wr.createWritableTranslatedChild(0, 0), \n-             cm.isAlphaPremultiplied(), null);\n-        int width = red.getWidth();\n-        int height = red.getHeight();\n-        int [] tmpMap = new int[width];\n-        int idx = 0;\n-        int sfIdx = 0;\n-        for (int y = 0; y < height; y++) {\n-            tmpMap = bi.getRGB(0, y, width, 1, tmpMap, 0, width);\n-            if (softMask != null) {\n-                for (int x = 0; x < width; x++) {\n-                    int pix = tmpMap[x];\n-                    softMask[sfIdx++] = (byte)(pix >>> 24);\n-                    bitmaps[idx++]    = (byte)((pix >>> 16) & 0xFF);\n-                    bitmaps[idx++]    = (byte)((pix >>> 8)  & 0xFF);\n-                    bitmaps[idx++]    = (byte)((pix)        & 0xFF);\n-                }\n-            } else {\n-                for (int x = 0; x < width; x++) {\n-                    int pix = tmpMap[x];\n-                    bitmaps[idx++] = (byte)((pix >> 16) & 0xFF);\n-                    bitmaps[idx++] = (byte)((pix >> 8)  & 0xFF);\n-                    bitmaps[idx++] = (byte)((pix)       & 0xFF);\n-                }\n-            }\n-        }\n-    }\n-    \n-}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/XmlGraphicsCommonsImage.java",
                "sha": "6626737267fa9ba425c67d30593e18ea9569fcb7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/BMPReader.java",
                "changes": 134,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/BMPReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 134,
                "filename": "src/java/org/apache/fop/image/analyser/BMPReader.java",
                "patch": "@@ -1,134 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for BMP image type.\n- *\n- * @author    Pankaj Narula\n- * @version   $Id$\n- */\n-public class BMPReader implements ImageReader {\n-\n-    /** Length of the BMP header */\n-    protected static final int BMP_SIG_LENGTH = 46;\n-    \n-    /** offset to width */\n-    private static final int WIDTH_OFFSET = 18;\n-    /** offset to height */\n-    private static final int HEIGHT_OFFSET = 22;\n-    /** offset to horizontal res */\n-    private static final int HRES_OFFSET = 38;\n-    /** offset to vertical res */\n-    private static final int VRES_OFFSET = 42;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(bis);\n-        boolean supported = ((header[0] == (byte) 0x42)\n-                && (header[1] == (byte) 0x4d));\n-        if (supported) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.dpiHorizontal = ua.getFactory().getSourceResolution();\n-            info.dpiVertical = info.dpiHorizontal;\n-\n-            getDimension(header, info);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = bis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/bmp\";\n-    }\n-\n-    private void getDimension(byte[] header, FopImage.ImageInfo info) {\n-        // little endian notation\n-        int byte1 = header[WIDTH_OFFSET] & 0xff;\n-        int byte2 = header[WIDTH_OFFSET + 1] & 0xff;\n-        int byte3 = header[WIDTH_OFFSET + 2] & 0xff;\n-        int byte4 = header[WIDTH_OFFSET + 3] & 0xff;\n-        long l = (long) ((byte4 << 24) | (byte3 << 16)\n-                | (byte2 << 8) | byte1);\n-        info.width = (int) (l & 0xffffffff);\n-\n-        byte1 = header[HEIGHT_OFFSET] & 0xff;\n-        byte2 = header[HEIGHT_OFFSET + 1] & 0xff;\n-        byte3 = header[HEIGHT_OFFSET + 2] & 0xff;\n-        byte4 = header[HEIGHT_OFFSET + 3] & 0xff;\n-        l = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        info.height = (int) (l & 0xffffffff);\n-\n-        byte1 = header[HRES_OFFSET] & 0xff;\n-        byte2 = header[HRES_OFFSET + 1] & 0xff;\n-        byte3 = header[HRES_OFFSET + 2] & 0xff;\n-        byte4 = header[HRES_OFFSET + 3] & 0xff;\n-        l = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        if (l > 0) {\n-            info.dpiHorizontal = l / 39.37d;\n-        }\n-\n-        byte1 = header[VRES_OFFSET] & 0xff;\n-        byte2 = header[VRES_OFFSET + 1] & 0xff;\n-        byte3 = header[VRES_OFFSET + 2] & 0xff;\n-        byte4 = header[VRES_OFFSET + 3] & 0xff;\n-        l = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        if (l > 0) {\n-            info.dpiVertical = l / 39.37d;\n-        }\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream)\n-                throws IOException {\n-        byte[] header = new byte[BMP_SIG_LENGTH];\n-        try {\n-            imageStream.mark(BMP_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/BMPReader.java",
                "sha": "caca6f3dd772a7d90c38db6d195fa7fa0c95fc81",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/EMFReader.java",
                "changes": 162,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/EMFReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 162,
                "filename": "src/java/org/apache/fop/image/analyser/EMFReader.java",
                "patch": "@@ -1,162 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for EMF image type.\n- *\n- * @author    Peter Herweg\n- */\n-public class EMFReader implements ImageReader {\n-\n-    /** Length of the EMF header */\n-    protected static final int EMF_SIG_LENGTH = 88;\n-    \n-    /** offset to signature */\n-    private static final int SIGNATURE_OFFSET = 40;\n-    /** offset to width */\n-    private static final int WIDTH_OFFSET = 32;\n-    /** offset to height */\n-    private static final int HEIGHT_OFFSET = 36;\n-    /** offset to horizontal resolution in pixel */\n-    private static final int HRES_PIXEL_OFFSET = 72;\n-    /** offset to vertical resolution in pixel */\n-    private static final int VRES_PIXEL_OFFSET = 76;\n-    /** offset to horizontal resolution in mm */\n-    private static final int HRES_MM_OFFSET = 80;\n-    /** offset to vertical resolution in mm */\n-    private static final int VRES_MM_OFFSET = 84;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(bis);\n-        boolean supported \n-                = ( (header[SIGNATURE_OFFSET + 0] == (byte) 0x20)\n-                && (header[SIGNATURE_OFFSET + 1] == (byte) 0x45)\n-                && (header[SIGNATURE_OFFSET + 2] == (byte) 0x4D)\n-                && (header[SIGNATURE_OFFSET + 3] == (byte) 0x46) );\n-        \n-        if (supported) {\n-            FopImage.ImageInfo info = getDimension(header);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = bis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/emf\";\n-    }\n-\n-    private FopImage.ImageInfo getDimension(byte[] header) {\n-        FopImage.ImageInfo info = new FopImage.ImageInfo();\n-        long value = 0;\n-        int byte1;\n-        int byte2;\n-        int byte3;\n-        int byte4;\n-        \n-        // little endian notation\n-\n-        //resolution        \n-        byte1 = header[HRES_MM_OFFSET] & 0xff;\n-        byte2 = header[HRES_MM_OFFSET + 1] & 0xff;\n-        byte3 = header[HRES_MM_OFFSET + 2] & 0xff;\n-        byte4 = header[HRES_MM_OFFSET + 3] & 0xff;\n-        long hresMM = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        \n-        byte1 = header[VRES_MM_OFFSET] & 0xff;\n-        byte2 = header[VRES_MM_OFFSET + 1] & 0xff;\n-        byte3 = header[VRES_MM_OFFSET + 2] & 0xff;\n-        byte4 = header[VRES_MM_OFFSET + 3] & 0xff;\n-        long vresMM = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        \n-        byte1 = header[HRES_PIXEL_OFFSET] & 0xff;\n-        byte2 = header[HRES_PIXEL_OFFSET + 1] & 0xff;\n-        byte3 = header[HRES_PIXEL_OFFSET + 2] & 0xff;\n-        byte4 = header[HRES_PIXEL_OFFSET + 3] & 0xff;\n-        long hresPixel = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        \n-        byte1 = header[VRES_PIXEL_OFFSET] & 0xff;\n-        byte2 = header[VRES_PIXEL_OFFSET + 1] & 0xff;\n-        byte3 = header[VRES_PIXEL_OFFSET + 2] & 0xff;\n-        byte4 = header[VRES_PIXEL_OFFSET + 3] & 0xff;\n-        long vresPixel = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        \n-        info.dpiHorizontal = hresPixel / (hresMM / 25.4f);\n-        info.dpiVertical   = vresPixel / (vresMM / 25.4f);\n-        \n-        //width\n-        byte1 = header[WIDTH_OFFSET] & 0xff;\n-        byte2 = header[WIDTH_OFFSET + 1] & 0xff;\n-        byte3 = header[WIDTH_OFFSET + 2] & 0xff;\n-        byte4 = header[WIDTH_OFFSET + 3] & 0xff;\n-        value = (long) ((byte4 << 24) | (byte3 << 16)\n-                | (byte2 << 8) | byte1);\n-        value = Math.round(value / 100f / 25.4f * info.dpiHorizontal);\n-        info.width = (int) (value & 0xffffffff);\n-\n-        //height\n-        byte1 = header[HEIGHT_OFFSET] & 0xff;\n-        byte2 = header[HEIGHT_OFFSET + 1] & 0xff;\n-        byte3 = header[HEIGHT_OFFSET + 2] & 0xff;\n-        byte4 = header[HEIGHT_OFFSET + 3] & 0xff;\n-        value = (long) ((byte4 << 24) | (byte3 << 16) | (byte2 << 8) | byte1);\n-        value = Math.round(value / 100f / 25.4f * info.dpiVertical);\n-        info.height = (int) (value & 0xffffffff);\n-\n-        return info;\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream)\n-                throws IOException {\n-        byte[] header = new byte[EMF_SIG_LENGTH];\n-        try {\n-            imageStream.mark(EMF_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/EMFReader.java",
                "sha": "d6e2f29752dd0b0a36d9bc8e10ac8e63ce87baa9",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/EPSReader.java",
                "changes": 253,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/EPSReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 253,
                "filename": "src/java/org/apache/fop/image/analyser/EPSReader.java",
                "patch": "@@ -1,253 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.image.EPSImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for EPS document image type.\n- *\n- * @version   $Id$\n- */\n-public class EPSReader implements ImageReader {\n-\n-    private static final byte[] EPS_HEADER_ASCII = \"%!PS\".getBytes();\n-    private static final byte[] BOUNDINGBOX = \"%%BoundingBox: \".getBytes();\n-    //private static final byte[] HIRESBOUNDINGBOX = \"%%HiResBoundingBox: \".getBytes();\n-    //TODO Implement HiResBoundingBox, ImageInfo probably needs some changes for that\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-\n-        boolean isEPS = false;\n-\n-        bis.mark(32);\n-        byte[] header = new byte[30];\n-        bis.read(header, 0, 30);\n-        bis.reset();\n-\n-        EPSImage.EPSData data = new EPSImage.EPSData();\n-\n-        // Check if binary header\n-        if (getLong(header, 0) == 0xC6D3D0C5) {\n-            data.isAscii = false;\n-            isEPS = true;\n-\n-            data.psStart = getLong(header, 4);\n-            data.psLength = getLong(header, 8);\n-            data.wmfStart = getLong(header, 12);\n-            data.wmfLength = getLong(header, 16);\n-            data.tiffStart = getLong(header, 20);\n-            data.tiffLength = getLong(header, 24);\n-\n-        } else {\n-            // Check if plain ascii\n-            byte[] epsh = \"%!PS\".getBytes();\n-            if (EPS_HEADER_ASCII[0] == header[0]\n-                    && EPS_HEADER_ASCII[1] == header[1]\n-                    && EPS_HEADER_ASCII[2] == header[2]\n-                    && EPS_HEADER_ASCII[3] == header[3]) {\n-                data.isAscii = true;\n-                isEPS = true;\n-            }\n-        }\n-\n-        if (isEPS) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.data = data;\n-            readEPSImage(bis, data);\n-            data.bbox = readBBox(data);\n-\n-            if (data.bbox != null) {\n-                info.width = (int) (data.bbox[2] - data.bbox[0]);\n-                info.height = (int) (data.bbox[3] - data.bbox[1]);\n-\n-                // image data read\n-                IOUtils.closeQuietly(bis);\n-                info.inputStream = null;\n-\n-                return info;\n-            } else {\n-                // Ain't eps if no BoundingBox\n-                isEPS = false;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/eps\";\n-    }\n-\n-    private long getLong(byte[] buf, int idx) {\n-        int b1 = buf[idx] & 0xff;\n-        int b2 = buf[idx + 1] & 0xff;\n-        int b3 = buf[idx + 2] & 0xff;\n-        int b4 = buf[idx + 3] & 0xff;\n-\n-        return (long) ((b4 << 24) | (b3 << 16) | (b2 << 8) | b1);\n-    }\n-\n-    /**\n-     * Read the eps file and extract eps part.\n-     *\n-     * @param bis              The InputStream\n-     * @param data             EPSData object to write the results to\n-     * @exception IOException  If an I/O error occurs\n-     */\n-    private void readEPSImage(InputStream bis, EPSImage.EPSData data)\n-                throws IOException {\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        byte[] file;\n-        byte[] readBuf = new byte[20480];\n-        int bytesRead;\n-        int index = 0;\n-        boolean cont = true;\n-\n-        try {\n-            while ((bytesRead = bis.read(readBuf)) != -1) {\n-                baos.write(readBuf, 0, bytesRead);\n-            }\n-        } catch (java.io.IOException ex) {\n-            throw new IOException(\"Error while loading EPS image: \"\n-                    + ex.getMessage());\n-        }\n-\n-        file = baos.toByteArray();\n-\n-        if (data.isAscii) {\n-            data.rawEps = null;\n-            data.epsFile = new byte[file.length];\n-            System.arraycopy(file, 0, data.epsFile, 0, data.epsFile.length);\n-        } else {\n-            data.rawEps = new byte[file.length];\n-            data.epsFile = new byte[(int) data.psLength];\n-            System.arraycopy(file, 0, data.rawEps, 0, data.rawEps.length);\n-            System.arraycopy(data.rawEps, (int) data.psStart, data.epsFile, 0,\n-                    (int) data.psLength);\n-        }\n-    }\n-\n-    /**\n-     * Get embedded TIFF preview or null.\n-     *\n-     * @param data  The EPS payload\n-     * @return      The embedded preview\n-     */\n-    public byte[] getPreview(EPSImage.EPSData data) {\n-        if (data.preview == null) {\n-            if (data.tiffLength > 0) {\n-                data.preview = new byte[(int) data.tiffLength];\n-                System.arraycopy(data.rawEps, (int) data.tiffStart, data.preview, 0,\n-                        (int) data.tiffLength);\n-            }\n-        }\n-        return data.preview;\n-    }\n-\n-    /**\n-     * Extract bounding box from eps part.\n-     *\n-     * @param data  The EPS payload\n-     * @return      An Array of four coordinates making up the bounding box\n-     */\n-    private long[] readBBox(EPSImage.EPSData data) {\n-        long[] mbbox = null;\n-        int idx = 0;\n-        boolean found = false;\n-\n-        while (!found && (data.epsFile.length > (idx + BOUNDINGBOX.length))) {\n-            boolean sfound = true;\n-            int i = idx;\n-            for (i = idx; sfound && (i - idx) < BOUNDINGBOX.length; i++) {\n-                if (BOUNDINGBOX[i - idx] != data.epsFile[i]) {\n-                    sfound = false;\n-                }\n-            }\n-            if (sfound) {\n-                found = true;\n-                idx = i;\n-            } else {\n-                idx++;\n-            }\n-        }\n-\n-        if (!found) {\n-            return mbbox;\n-        }\n-\n-        mbbox = new long[4];\n-        idx += readLongString(data, mbbox, 0, idx);\n-        idx += readLongString(data, mbbox, 1, idx);\n-        idx += readLongString(data, mbbox, 2, idx);\n-        idx += readLongString(data, mbbox, 3, idx);\n-\n-        return mbbox;\n-    }\n-\n-    private int readLongString(EPSImage.EPSData data, long[] mbbox, int i, int idx) {\n-        while (idx < data.epsFile.length && (data.epsFile[idx] == 32)) {\n-            idx++;\n-        }\n-\n-        int nidx = idx;\n-\n-        // check also for ANSI46(\".\") to identify floating point values\n-        while (nidx < data.epsFile.length\n-                && ((data.epsFile[nidx] >= 48 && data.epsFile[nidx] <= 57)\n-                || (data.epsFile[nidx] == 45)\n-                || (data.epsFile[nidx] == 46))) {\n-            nidx++;\n-        }\n-\n-        byte[] num = new byte[nidx - idx];\n-        System.arraycopy(data.epsFile, idx, num, 0, nidx - idx);\n-        String ns = new String(num);\n-\n-        //if( ns.indexOf(\".\") != -1 ) {\n-        // do something like logging a warning\n-        //}\n-\n-        // then parse the double and round off to the next math. Integer\n-        mbbox[i] = (long) Math.ceil(Double.parseDouble(ns));\n-\n-        return (1 + nidx - idx);\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/EPSReader.java",
                "sha": "92260d1ab476b0a4c1b3241da02fd022496e36fe",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/GIFReader.java",
                "changes": 104,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/GIFReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 104,
                "filename": "src/java/org/apache/fop/image/analyser/GIFReader.java",
                "patch": "@@ -1,104 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for GIF image type.\n- *\n- * @author    Pankaj Narula\n- * @version   $Id$\n- */\n-public class GIFReader implements ImageReader {\n-\n-    private static final int GIF_SIG_LENGTH = 10;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(bis);\n-        boolean supported = ((header[0] == 'G')\n-                && (header[1] == 'I')\n-                && (header[2] == 'F')\n-                && (header[3] == '8')\n-                && (header[4] == '7' || header[4] == '9')\n-                && (header[5] == 'a'));\n-        if (supported) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.dpiHorizontal = ua.getFactory().getSourceResolution();\n-            info.dpiVertical = info.dpiHorizontal;\n-\n-            getDimension(header, info);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = bis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/gif\";\n-    }\n-\n-    private void getDimension(byte[] header, FopImage.ImageInfo info) {\n-        // little endian notation\n-        int byte1 = header[6] & 0xff;\n-        int byte2 = header[7] & 0xff;\n-        info.width = ((byte2 << 8) | byte1) & 0xffff;\n-\n-        byte1 = header[8] & 0xff;\n-        byte2 = header[9] & 0xff;\n-        info.height = ((byte2 << 8) | byte1) & 0xffff;\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream)\n-                throws IOException {\n-        byte[] header = new byte[GIF_SIG_LENGTH];\n-        try {\n-            imageStream.mark(GIF_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/GIFReader.java",
                "sha": "d8da896071d419a2ff56e913bc6f5abee30d01f4",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/ImageReader.java",
                "changes": 56,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/ImageReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 56,
                "filename": "src/java/org/apache/fop/image/analyser/ImageReader.java",
                "patch": "@@ -1,56 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader objects read image headers to determine the image size.\n- *\n- * @author    Pankaj Narula\n- * @version   $Id$\n- */\n-public interface ImageReader {\n-\n-    /**\n-     * Verify image type. If the stream does not contain image data expected by\n-     * the reader it must reset the stream to the start. This is so that the\n-     * next reader can start reading from the start. The reader must not close\n-     * the stream unless it can handle the image and it has read the\n-     * information.\n-     *\n-     * @param bis              Image buffered input stream\n-     * @param uri              URI to the image\n-     * @param ua               The user agent\n-     * @return                 <code>true</code> if image type is the handled one\n-     * @exception IOException  if an I/O error occurs\n-     */\n-    FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-            FOUserAgent ua)\n-        throws IOException;\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/ImageReader.java",
                "sha": "980d1e48986f998eb828b2b664b7663e6e8bb872",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/ImageReaderFactory.java",
                "changes": 108,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/ImageReaderFactory.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 108,
                "filename": "src/java/org/apache/fop/image/analyser/ImageReaderFactory.java",
                "patch": "@@ -1,108 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.Iterator;\n-import java.util.List;\n-\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.image.FopImage;\n-import org.apache.xmlgraphics.util.Service;\n-\n-/**\n- * Factory for ImageReader objects.\n- *\n- * @author    Pankaj Narula\n- * @version   $Id$\n- */\n-public class ImageReaderFactory {\n-\n-    private static List formats = new java.util.ArrayList();\n-\n-    /** logger */\n-    protected static Log log = LogFactory.getLog(ImageReaderFactory.class);\n-\n-    static {\n-        registerFormat(new JPEGReader());\n-        registerFormat(new BMPReader());\n-        registerFormat(new GIFReader());\n-        registerFormat(new PNGReader());\n-        registerFormat(new TIFFReader());\n-        registerFormat(new EPSReader());\n-        registerFormat(new EMFReader());\n-\n-        //Dynamic registration of ImageReaders\n-        Iterator iter = Service.providers(ImageReader.class, true);\n-        while (iter.hasNext()) {\n-            registerFormat((ImageReader)iter.next());\n-        }\n-        \n-        // the xml parser through batik closes the stream when finished\n-        // so there is a workaround in the SVGReader\n-        registerFormat(new SVGReader());\n-        registerFormat(new SVGZReader());\n-        registerFormat(new XMLReader());\n-    }\n-\n-    /**\n-     * Registers a new ImageReader.\n-     *\n-     * @param reader  An ImageReader instance\n-     */\n-    public static void registerFormat(ImageReader reader) {\n-        formats.add(reader);\n-    }\n-\n-    /**\n-     * ImageReader maker.\n-     *\n-     * @param uri  URI to the image\n-     * @param in   image input stream\n-     * @param ua   user agent\n-     * @return     An ImageInfo object describing the image\n-     */\n-    public static FopImage.ImageInfo make(String uri, InputStream in,\n-            FOUserAgent ua) {\n-\n-        ImageReader reader;\n-        try {\n-            for (int count = 0; count < formats.size(); count++) {\n-                reader = (ImageReader) formats.get(count);\n-                FopImage.ImageInfo info = reader.verifySignature(uri, in, ua);\n-                if (info != null) {\n-                    return info;\n-                }\n-            }\n-            log.warn(\"No ImageReader found for \" + uri);\n-            in.close();\n-        } catch (IOException ex) {\n-            log.error(\"Error while recovering Image Informations (\"\n-                + uri + \")\", ex);\n-        }\n-        return null;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/ImageReaderFactory.java",
                "sha": "c07d68d3934d91f08833b448bee498726864616f",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/JPEGReader.java",
                "changes": 264,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/JPEGReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 264,
                "filename": "src/java/org/apache/fop/image/analyser/JPEGReader.java",
                "patch": "@@ -1,264 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for JPEG image type.\n- *\n- * @author Pankaj Narula\n- * @version $Id$\n- */\n-public class JPEGReader implements ImageReader {\n-\n-    /**\n-     * Only SOFn and APPn markers are defined as SOFn is needed for the height and\n-     * width search. APPn is also defined because if the JPEG contains thumbnails\n-     * the dimensions of the thumnail would also be after the SOFn marker enclosed\n-     * inside the APPn marker. And we don't want to confuse those dimensions with\n-     * the image dimensions.\n-     */\n-    private static final int MARK = 0xff; // Beginning of a Marker\n-    private static final int NULL = 0x00; // Special case for 0xff00\n-    private static final int SOF1 = 0xc0; // Baseline DCT\n-    private static final int SOF2 = 0xc1; // Extended Sequential DCT\n-    private static final int SOF3 = 0xc2; // Progrssive DCT only PDF 1.3\n-    private static final int SOFA = 0xca; // Progressice DCT only PDF 1.3\n-    private static final int APP0 = 0xe0; // Application marker, JFIF\n-    private static final int APPF = 0xef; // Application marker\n-    private static final int SOS = 0xda; // Start of Scan\n-    private static final int SOI = 0xd8; // start of Image\n-    private static final int JPG_SIG_LENGTH = 2;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream fis,\n-                                   FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(fis);\n-        boolean supported = ((header[0] == (byte) 0xff)\n-                    && (header[1] == (byte) 0xd8));\n-        if (supported) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.dpiHorizontal = ua.getFactory().getSourceResolution();\n-            info.dpiVertical = info.dpiHorizontal;\n-\n-            getDimension(fis, info);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = fis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/jpeg\";\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream) throws IOException {\n-        byte[] header = new byte[JPG_SIG_LENGTH];\n-        try {\n-            imageStream.mark(JPG_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-\n-    private void getDimension(InputStream imageStream,\n-                              FopImage.ImageInfo info)\n-        throws IOException {\n-        try {\n-            int pos=0, avail = imageStream.available();\n-            imageStream.mark(avail);\n-            int marker = NULL;\n-            long length, skipped;\n-outer:\n-            while (true) {\n-                do {\n-                    if (avail == 0) {\n-                        imageStream.reset();\n-                        avail = 2*pos;\n-                        imageStream.mark(avail);\n-                        pos = (int)this.skip(imageStream, pos);\n-                        avail -= pos;\n-                    }\n-                    //Marker first byte (FF)\n-                    marker = imageStream.read();\n-                    pos++; avail--;\n-                } while (marker != MARK);\n-\n-                do {\n-                    if (avail == 0) {\n-                        imageStream.reset();\n-                        avail = 2*pos;\n-                        imageStream.mark(avail);\n-                        pos = (int)this.skip(imageStream, pos);\n-                        avail -= pos;\n-                    }\n-                    //Marker second byte\n-                    marker = imageStream.read();\n-                    pos++; avail--;\n-                } while (marker == MARK);\n-\n-                switch (marker) {\n-                    case SOI:\n-                        break;\n-                    case NULL:\n-                        break;\n-                    case APP0:\n-                        if (avail < 14) {\n-                            imageStream.reset();\n-                            avail = 2 * pos;\n-                            imageStream.mark(avail);\n-                            pos = (int)this.skip(imageStream, pos);\n-                            avail -= pos;\n-                        }\n-                        int reclen = this.read2bytes(imageStream);\n-                        pos += 2; avail -= 2;\n-                        this.skip(imageStream, 7);\n-                        pos += 7; avail -= 7;\n-                        int densityUnits = imageStream.read();\n-                        pos++; avail--;\n-                        int xdensity = this.read2bytes(imageStream);\n-                        pos += 2; avail -= 2;\n-                        int ydensity = this.read2bytes(imageStream);\n-                        pos += 2; avail -= 2;\n-                        \n-                        if (densityUnits == 2) {\n-                            info.dpiHorizontal = xdensity * 28.3464567 / 72; //dpi\n-                            info.dpiVertical = ydensity * 28.3464567 / 72; //dpi\n-                        } else if (densityUnits == 1) {\n-                            info.dpiHorizontal = xdensity;\n-                            info.dpiVertical = ydensity;\n-                        } else {\n-                            // Use resolution specified in\n-                            // FOUserAgent.getFactory() (default 72dpi).\n-                        }\n-                        \n-                        int restlen = reclen - 12;\n-                        if (avail < restlen) {\n-                            imageStream.reset();\n-                            avail = 2 * pos;\n-                            if (avail < pos + restlen + 10) {\n-                                avail = (int)(pos + restlen + 10);\n-                            }\n-                            imageStream.mark(avail);\n-                            pos = (int)this.skip(imageStream, pos);\n-                            avail -= pos;\n-                        }\n-                        skipped = this.skip(imageStream, restlen - 2);\n-                        pos += skipped; avail -= skipped;\n-                        if (skipped != restlen - 2) {\n-                            throw new IOException(\"Skipping Error\");\n-                        }\n-                        break;\n-                    case SOF1:\n-                    case SOF2:\n-                    case SOF3: // SOF3 and SOFA are only supported by PDF 1.3\n-                    case SOFA:\n-                        while (avail < 7) {\n-                            imageStream.reset();\n-                            avail = 2*pos;\n-                            imageStream.mark(avail);\n-                            pos = (int)this.skip(imageStream, pos);\n-                            avail -= pos;\n-                        }\n-                        this.skip(imageStream, 3);\n-                        pos+=3; avail-=3;\n-                        info.height = this.read2bytes(imageStream);\n-                        pos+=2; avail-=2;\n-                        info.width = this.read2bytes(imageStream);\n-                        pos+=2; avail-=2;\n-                        break outer;\n-                    default:\n-                        while (avail < 2) {\n-                            imageStream.reset();\n-                            avail = 2*pos;\n-                            imageStream.mark(avail);\n-                            pos = (int)this.skip(imageStream, pos);\n-                            avail -= pos;\n-                        }\n-                        length = this.read2bytes(imageStream);\n-                        pos+=2; avail-=2;\n-                        if (avail < length) {\n-                            imageStream.reset();\n-                            avail = 2*pos;\n-                            if (avail < pos+length+10) {\n-                                avail = (int)(pos+length+10);\n-                            }\n-                            imageStream.mark(avail);\n-                            pos = (int)this.skip(imageStream, pos);\n-                            avail -= pos;\n-                        }\n-                        skipped = this.skip(imageStream, length - 2);\n-                        pos += skipped; avail -= skipped;\n-                        if (skipped != length - 2) {\n-                            throw new IOException(\"Skipping Error\");\n-                        }\n-                }\n-            }\n-            imageStream.reset();\n-        } catch (IOException ioe) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ioe;\n-        }\n-    }\n-\n-    private int read2bytes(InputStream imageStream) throws IOException {\n-        int byte1 = imageStream.read();\n-        int byte2 = imageStream.read();\n-        return (int) ((byte1 << 8) | byte2);\n-    }\n-\n-    private long skip(InputStream imageStream, long n) throws IOException {\n-        long discarded = 0;\n-        while (discarded != n) {\n-            imageStream.read();\n-            discarded++;\n-        }\n-        return discarded; // scope for exception\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/JPEGReader.java",
                "sha": "c90f6b000ca9a75f4853666062b75a85bf747ca8",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/PNGReader.java",
                "changes": 115,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/PNGReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 115,
                "filename": "src/java/org/apache/fop/image/analyser/PNGReader.java",
                "patch": "@@ -1,115 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for PNG image type.\n- *\n- * @author    Pankaj Narula\n- * @version   $Id$\n- */\n-public class PNGReader implements ImageReader {\n-\n-    private static final int PNG_SIG_LENGTH = 24;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(bis);\n-        boolean supported = ((header[0] == (byte) 0x89)\n-                && (header[1] == (byte) 0x50)\n-                && (header[2] == (byte) 0x4e)\n-                && (header[3] == (byte) 0x47)\n-                && (header[4] == (byte) 0x0d)\n-                && (header[5] == (byte) 0x0a)\n-                && (header[6] == (byte) 0x1a)\n-                && (header[7] == (byte) 0x0a));\n-\n-        if (supported) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.dpiHorizontal = ua.getFactory().getSourceResolution();\n-            info.dpiVertical = info.dpiHorizontal;\n-\n-            getDimension(header, info);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = bis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/png\";\n-    }\n-\n-    private void getDimension(byte[] header, FopImage.ImageInfo info) {\n-        // png is always big endian\n-        int byte1 = header[16] & 0xff;\n-        int byte2 = header[17] & 0xff;\n-        int byte3 = header[18] & 0xff;\n-        int byte4 = header[19] & 0xff;\n-        long l = (long) ((byte1 << 24)\n-                | (byte2 << 16)\n-                | (byte3 << 8)\n-                | (byte4));\n-        info.width = (int) l;\n-\n-        byte1 = header[20] & 0xff;\n-        byte2 = header[21] & 0xff;\n-        byte3 = header[22] & 0xff;\n-        byte4 = header[23] & 0xff;\n-        l = (long) ((byte1 << 24) | (byte2 << 16) | (byte3 << 8) | byte4);\n-        info.height = (int) l;\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream)\n-                throws IOException {\n-        byte[] header = new byte[PNG_SIG_LENGTH];\n-        try {\n-            imageStream.mark(PNG_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/PNGReader.java",
                "sha": "ab6c647752ac1a61b0bebde3a5ba2c13f3dc1c57",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/SVGReader.java",
                "changes": 188,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/SVGReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 188,
                "filename": "src/java/org/apache/fop/image/analyser/SVGReader.java",
                "patch": "@@ -1,188 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.awt.geom.AffineTransform;\n-\n-// XML\n-import org.w3c.dom.Element;\n-import org.w3c.dom.svg.SVGDocument;\n-\n-// Batik\n-import org.apache.batik.dom.svg.SAXSVGDocumentFactory;\n-import org.apache.batik.dom.svg.SVGOMDocument;\n-import org.apache.batik.bridge.BridgeContext;\n-import org.apache.batik.bridge.UnitProcessor;\n-import org.apache.batik.dom.svg.SVGDOMImplementation;\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-\n-// FOP\n-import org.apache.fop.image.XMLImage;\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.svg.SVGUserAgent;\n-import org.apache.fop.util.UnclosableInputStream;\n-\n-/** \n- * ImageReader object for SVG document image type.\n- */\n-public class SVGReader implements ImageReader {\n-\n-    /** Logger instance */\n-    protected static Log log = LogFactory.getLog(SVGReader.class);\n-    \n-    /** SVG's MIME type */\n-    public static final String SVG_MIME_TYPE = \"image/svg+xml\";\n-\n-    private boolean batik = true;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream fis,\n-            FOUserAgent ua) throws IOException {\n-        FopImage.ImageInfo info = loadImage(uri, fis, ua);\n-        if (info != null) {\n-            IOUtils.closeQuietly(fis);\n-        }\n-        return info;\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return SVG_MIME_TYPE;\n-    }\n-\n-    /**\n-     * This means the external svg document will be loaded twice. Possibly need\n-     * a slightly different design for the image stuff.\n-     *\n-     * @param uri  @todo Description of the Parameter\n-     * @param fis  @todo Description of the Parameter\n-     * @param ua   @todo Description of the Parameter\n-     * @return     @todo Description of the Return Value\n-     */\n-    private FopImage.ImageInfo loadImage(String uri, InputStream bis,\n-            FOUserAgent ua) {\n-        if (batik) {\n-            try {\n-                Loader loader = new Loader();\n-                return loader.getImage(uri, bis, \n-                    ua.getSourcePixelUnitToMillimeter());\n-            } catch (NoClassDefFoundError e) {\n-                batik = false;\n-                log.warn(\"Batik not in class path\", e);\n-                return null;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * This method is put in another class so that the classloader does not\n-     * attempt to load batik related classes when constructing the SVGReader\n-     * class.\n-     */\n-    class Loader {\n-        private FopImage.ImageInfo getImage(String uri, InputStream fis,\n-                float pixelUnitToMM) {\n-            // parse document and get the size attributes of the svg element\n-\n-            try {\n-                fis = new UnclosableInputStream(fis);\n-\n-                FopImage.ImageInfo info = new FopImage.ImageInfo();\n-\n-                //Set the resolution to that of the FOUserAgent\n-                info.dpiHorizontal = 25.4f / pixelUnitToMM;\n-                info.dpiVertical = info.dpiHorizontal;\n-                \n-                info.originalURI = uri;\n-                info.mimeType = getMimeType();\n-                info.str = SVGDOMImplementation.SVG_NAMESPACE_URI;\n-\n-                int length = fis.available();\n-                fis.mark(length + 1);\n-                SAXSVGDocumentFactory factory = new SAXSVGDocumentFactory(\n-                        XMLImage.getParserName());\n-                SVGDocument doc = (SVGDocument) factory.createSVGDocument(uri, fis);\n-                info.data = doc;\n-\n-                Element e = doc.getRootElement();\n-                String s;\n-                SVGUserAgent userAg = new SVGUserAgent(pixelUnitToMM,\n-                            new AffineTransform());\n-                BridgeContext ctx = new BridgeContext(userAg);\n-                UnitProcessor.Context uctx = UnitProcessor.createContext(ctx, e);\n-\n-                // 'width' attribute - default is 100%\n-                s = e.getAttributeNS(null,\n-                        SVGOMDocument.SVG_WIDTH_ATTRIBUTE);\n-                if (s.length() == 0) {\n-                    s = SVGOMDocument.SVG_SVG_WIDTH_DEFAULT_VALUE;\n-                }\n-                info.width = Math.round(UnitProcessor.svgHorizontalLengthToUserSpace(\n-                        s, SVGOMDocument.SVG_WIDTH_ATTRIBUTE, uctx));\n-\n-                // 'height' attribute - default is 100%\n-                s = e.getAttributeNS(null,\n-                        SVGOMDocument.SVG_HEIGHT_ATTRIBUTE);\n-                if (s.length() == 0) {\n-                    s = SVGOMDocument.SVG_SVG_HEIGHT_DEFAULT_VALUE;\n-                }\n-                info.height = Math.round(UnitProcessor.svgVerticalLengthToUserSpace(\n-                        s, SVGOMDocument.SVG_HEIGHT_ATTRIBUTE, uctx));\n-\n-                return info;\n-            } catch (NoClassDefFoundError ncdfe) {\n-                try {\n-                    fis.reset();\n-                } catch (IOException ioe) {\n-                    // we're more interested in the original exception\n-                }\n-                batik = false;\n-                log.warn(\"Batik not in class path\", ncdfe);\n-                return null;\n-            } catch (IOException e) {\n-                // If the svg is invalid then it throws an IOException\n-                // so there is no way of knowing if it is an svg document\n-\n-                log.debug(\"Error while trying to load stream as an SVG file: \"\n-                                       + e.getMessage());\n-                // assuming any exception means this document is not svg\n-                // or could not be loaded for some reason\n-                try {\n-                    fis.reset();\n-                } catch (IOException ioe) {\n-                    // we're more interested in the original exception\n-                }\n-                return null;\n-            }\n-        }\n-    }\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/SVGReader.java",
                "sha": "cffaa365ca5ba22b5780f5d93d349950b9a525bf",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/SVGZReader.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/SVGZReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 53,
                "filename": "src/java/org/apache/fop/image/analyser/SVGZReader.java",
                "patch": "@@ -1,53 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image.analyser;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.zip.GZIPInputStream;\n-\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.image.FopImage;\n-\n-/**\n- * Implements a reader for gzipped XMLFiles.\n- * \n- * <p>\n- * The current implementation is limited to SVG files only.\n- */\n-public class SVGZReader extends XMLReader {\n-    /**\n-     * Default constructor.\n-     */\n-    public SVGZReader() {\n-    }\n-\n-    /** {@inheritDoc} */\n-    protected FopImage.ImageInfo loadImage(final String uri,\n-            final InputStream bis, final FOUserAgent ua) {\n-        try {\n-            return new SVGReader().verifySignature(uri,\n-                    new GZIPInputStream(bis), ua);\n-        } catch (final IOException e) {\n-            // ignore\n-        }\n-        return null;\n-    }\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/SVGZReader.java",
                "sha": "14fde1cb68a7d3ad324fee71ac7287b60fb39f21",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/TIFFReader.java",
                "changes": 117,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/TIFFReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 117,
                "filename": "src/java/org/apache/fop/image/analyser/TIFFReader.java",
                "patch": "@@ -1,117 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n- \n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-/**\n- * ImageReader object for TIFF image type.\n- *\n- * @author    Pankaj Narula, Michael Lee\n- * @version   $Id$\n- */\n-public class TIFFReader implements ImageReader {\n-\n-    private static final int TIFF_SIG_LENGTH = 8;\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream bis,\n-                FOUserAgent ua) throws IOException {\n-        byte[] header = getDefaultHeader(bis);\n-        boolean supported = false;\n-\n-        // first 2 bytes = II (little endian encoding)\n-        if (header[0] == (byte) 0x49 && header[1] == (byte) 0x49) {\n-\n-            // look for '42' in byte 3 and '0' in byte 4\n-            if (header[2] == 42 && header[3] == 0) {\n-                supported = true;\n-            }\n-        }\n-\n-        // first 2 bytes == MM (big endian encoding)\n-        if (header[0] == (byte) 0x4D && header[1] == (byte) 0x4D) {\n-\n-            // look for '42' in byte 4 and '0' in byte 3\n-            if (header[2] == 0 && header[3] == 42) {\n-                supported = true;\n-            }\n-        }\n-\n-        if (supported) {\n-            FopImage.ImageInfo info = new FopImage.ImageInfo();\n-            info.dpiHorizontal = ua.getFactory().getSourceResolution();\n-            info.dpiVertical = info.dpiHorizontal;\n-\n-            getDimension(header, info);\n-            info.originalURI = uri;\n-            info.mimeType = getMimeType();\n-            info.inputStream = bis;\n-            return info;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"image/tiff\";\n-    }\n-\n-    private void getDimension(byte[] header, FopImage.ImageInfo info) {\n-        // currently not setting the width and height\n-        // these are set again by the Jimi image reader.\n-        // I suppose I'll do it one day to be complete.  Or\n-        // someone else will.\n-        // Note: bytes 4,5,6,7 contain the byte offset in the stream of the first IFD block\n-        info.width = -1;\n-        info.height = -1;\n-    }\n-\n-    private byte[] getDefaultHeader(InputStream imageStream)\n-        throws IOException {\n-        byte[] header = new byte[TIFF_SIG_LENGTH];\n-        try {\n-            imageStream.mark(TIFF_SIG_LENGTH + 1);\n-            imageStream.read(header);\n-            imageStream.reset();\n-        } catch (IOException ex) {\n-            try {\n-                imageStream.reset();\n-            } catch (IOException exbis) {\n-                // throw the original exception, not this one\n-            }\n-            throw ex;\n-        }\n-        return header;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/TIFFReader.java",
                "sha": "08d70278058e19e8be80fe61447d9f93e8b9cb6c",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/XMLReader.java",
                "changes": 167,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/analyser/XMLReader.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 167,
                "filename": "src/java/org/apache/fop/image/analyser/XMLReader.java",
                "patch": "@@ -1,167 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image.analyser;\n-\n-// Java\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.util.Map;\n-\n-// XML\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import org.w3c.dom.Document;\n-import org.w3c.dom.Element;\n-\n-// FOP\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.util.UnclosableInputStream;\n-import org.apache.fop.apps.FOUserAgent;\n-\n-// Commons-Logging\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-\n-/** ImageReader object for XML document image type. */\n-public class XMLReader implements ImageReader {\n-\n-    /**\n-     * logging instance\n-     */\n-    private Log log = LogFactory.getLog(XMLReader.class);\n-\n-    private static Map converters = new java.util.HashMap();\n-\n-    /**\n-     * Registers a Converter implementation with XMLReader.\n-     *\n-     * @param ns    The namespace to associate with this converter\n-     * @param conv  The actual Converter implementation\n-     */\n-    public static void setConverter(String ns, Converter conv) {\n-        converters.put(ns, conv);\n-    }\n-\n-    /** {@inheritDoc} */\n-    public FopImage.ImageInfo verifySignature(String uri, InputStream fis,\n-            FOUserAgent ua)\n-        throws IOException {\n-        FopImage.ImageInfo info = loadImage(uri, fis, ua);\n-        if (info != null) {\n-            info.originalURI = uri;\n-            IOUtils.closeQuietly(fis);\n-        }\n-        return info;\n-    }\n-\n-    /**\n-     * Returns the MIME type supported by this implementation.\n-     *\n-     * @return   The MIME type\n-     */\n-    public String getMimeType() {\n-        return \"text/xml\";\n-    }\n-\n-    /**\n-     * Creates an ImageInfo object from an XML image read from a stream.\n-     *\n-     * (todo) This means the external svg document will be loaded twice. Possibly need\n-     * a slightly different design for the image stuff.\n-     *\n-     * @param uri  The URI to the image\n-     * @param bis  The InputStream\n-     * @param ua   The user agent\n-     * @return     An ImageInfo object describing the image\n-     */\n-    protected FopImage.ImageInfo loadImage(String uri, InputStream bis,\n-            FOUserAgent ua) {\n-        return createDocument(bis, ua);\n-    }\n-\n-    /**\n-     * Creates an ImageInfo object from an XML image read from a stream.\n-     *\n-     * @param input  The InputStream\n-     * @param ua  The user agent\n-     * @return    An ImageInfo object describing the image\n-     */\n-    public FopImage.ImageInfo createDocument(final InputStream input, final FOUserAgent ua) {\n-        Document doc = null;\n-        FopImage.ImageInfo info = new FopImage.ImageInfo();\n-        info.mimeType = getMimeType();\n-\n-        try {\n-            final InputStream is = new UnclosableInputStream(input);\n-            int length = is.available();\n-            is.mark(length);\n-\n-            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n-            doc = dbf.newDocumentBuilder().parse(is);\n-            info.data = doc;\n-\n-            Element root = doc.getDocumentElement();\n-            log.debug(\"XML image namespace: \" + root.getAttribute(\"xmlns\"));\n-            String ns = root.getAttribute(\"xmlns\");\n-            info.str = ns;\n-\n-            Converter conv = (Converter) converters.get(ns);\n-            if (conv != null) {\n-                FopImage.ImageInfo i = conv.convert(doc);\n-                if (i != null) {\n-                    info = i;\n-                }\n-            }\n-        } catch (Exception e) {\n-            log.debug(\"Error while constructing image from XML\", e);\n-            try {\n-                input.reset();\n-            } catch (IOException ioe) {\n-                // throw the original exception, not this one\n-            }\n-            return null;\n-        }\n-        if (info != null) {\n-            try {\n-                input.close();\n-            } catch (IOException io) {\n-                // ignore\n-            }\n-        }\n-        return info;\n-    }\n-\n-    /**\n-     * This interface is to be implemented for XML to image converters.\n-     */\n-    public static interface Converter {\n-\n-        /**\n-         * This method is called for a DOM document to be converted into an\n-         * ImageInfo object.\n-         *\n-         * @param doc   The DOM document to convert\n-         * @return      An ImageInfo object describing the image\n-         */\n-        FopImage.ImageInfo convert(Document doc);\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/image/analyser/XMLReader.java",
                "sha": "4d0145eed5f848857451818309a4d6b28a935bf0",
                "status": "removed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/image/package.html",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/package.html?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/image/package.html",
                "patch": "@@ -18,6 +18,6 @@\n <HTML>\n <TITLE>org.apache.fop.image Package</TITLE>\n <BODY>\n-<P>Contains image loading adapters for various image sources and the image cache.</P>\n+<P>Contains image loading adapters for various image sources.</P>\n </BODY>\n </HTML>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/image/package.html",
                "sha": "cbd2d7c5e9aabd01b568f39c263d68066eb3333d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "patch": "@@ -272,7 +272,7 @@ public void doLayout(int flowBPD) {\n      */\n     public void doLayout(int flowBPD, boolean autoHeight) {\n         LayoutContext childLC = createLayoutContext();\n-        childLC.setStackLimit(new MinOptMax(flowBPD));\n+        childLC.setStackLimitBP(new MinOptMax(flowBPD));\n \n         if (getCurrentDisplayAlign() == Constants.EN_X_FILL) {\n             //EN_X_FILL is non-standard (by LF)\n@@ -495,7 +495,7 @@ protected void addAreas(PageBreakingAlgorithm alg, int startPart, int partCount,\n                     int averageLineLength = optimizeLineLength(effectiveList, \n                             startElementIndex, endElementIndex);\n                     if (averageLineLength != 0) {\n-                        childLC.setStackLimit(new MinOptMax(averageLineLength));\n+                        childLC.setStackLimitBP(new MinOptMax(averageLineLength));\n                     }\n                 }\n                 /* *** *** non-standard extension *** *** */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "sha": "65d537bcd4a76195cb363b615d09bc9e3b70c45f",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AbstractLayoutManager.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/AbstractLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/layoutmgr/AbstractLayoutManager.java",
                "patch": "@@ -113,7 +113,7 @@ protected LayoutManager getChildLM() {\n         if (curChildLM != null && !curChildLM.isFinished()) {\n             return curChildLM;\n         }\n-        while (childLMiter.hasNext()) {\n+        if (childLMiter.hasNext()) {\n             curChildLM = (LayoutManager) childLMiter.next();\n             curChildLM.initialize();\n             return curChildLM;\n@@ -350,6 +350,10 @@ protected void transferForeignAttributes(Area targetArea) {\n     \n     /**\n      * Registers the FO's markers on the current PageViewport\n+     *\n+     * @param isStarting    boolean indicating whether the markers qualify as 'starting'\n+     * @param isFirst   boolean indicating whether the markers qualify as 'first'\n+     * @param isLast    boolean indicating whether the markers qualify as 'last'\n      */\n     protected void addMarkersToPage(boolean isStarting, boolean isFirst, boolean isLast) {\n         if (this.markers != null) {\n@@ -361,10 +365,18 @@ protected void addMarkersToPage(boolean isStarting, boolean isFirst, boolean isL\n         }\n     }\n \n+    /**\n+     * Registers the FO's id on the current PageViewport\n+     */\n+    protected void addId() {\n+        if (fobj != null) {\n+            getPSLM().addIDToPage(fobj.getId());\n+        }\n+    }\n+    \n     /** {@inheritDoc} */\n     public String toString() {\n         return (super.toString() + (fobj != null ? \"[fobj=\" + fobj.toString() + \"]\" : \"\"));\n     }\n     \n-    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AbstractLayoutManager.java",
                "sha": "656b5e2df5eb71329fddb6c4b502166da26d4eb5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AreaAdditionUtil.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/AreaAdditionUtil.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/AreaAdditionUtil.java",
                "patch": "@@ -117,7 +117,7 @@ public static void addAreas(BlockStackingLayoutManager bslm,\n             // set space after for each LM, in order to implement\n             // display-align = distribute\n             lc.setSpaceAfter(layoutContext.getSpaceAfter());\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitsFrom(layoutContext);\n             childLM.addAreas(childPosIter, lc);\n         }\n         ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/AreaAdditionUtil.java",
                "sha": "1b0d02639fe13f7154f1b01f9c6433781aca73ba",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 33,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "patch": "@@ -38,7 +38,6 @@\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.BlockContainer;\n import org.apache.fop.fo.properties.CommonAbsolutePosition;\n-import org.apache.fop.layoutmgr.inline.InlineLayoutManager;\n import org.apache.fop.traits.MinOptMax;\n import org.apache.fop.traits.SpaceVal;\n \n@@ -201,7 +200,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             = (getBlockContainerFO().getReferenceOrientation() % 180 != 0);\n         autoHeight = false;\n         //boolean rotated = (getBlockContainerFO().getReferenceOrientation() % 180 != 0);\n-        int maxbpd = context.getStackLimit().opt;\n+        int maxbpd = context.getStackLimitBP().opt;\n         int allocBPD;\n         if (height.getEnum() == EN_AUTO \n                 || (!height.isAbsolute() && getAncestorBlockAreaBPD() <= 0)) {\n@@ -249,7 +248,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         \n         MinOptMax stackLimit = new MinOptMax(relDims.bpd);\n \n-        LinkedList returnedList = null;\n+        LinkedList returnedList;\n         LinkedList contentList = new LinkedList();\n         LinkedList returnList = new LinkedList();\n         \n@@ -280,8 +279,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n                 LayoutContext childLC = new LayoutContext(0);\n                 childLC.copyPendingMarksFrom(context);\n                 // curLM is a ?\n-                childLC.setStackLimit(MinOptMax.subtract(context\n-                        .getStackLimit(), stackLimit));\n+                childLC.setStackLimitBP(MinOptMax.subtract(context.getStackLimitBP(), stackLimit));\n                 childLC.setRefIPD(relDims.ipd);\n                 childLC.setWritingMode(getBlockContainerFO().getWritingMode());\n \n@@ -388,6 +386,9 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         }\n         addKnuthElementsForBorderPaddingAfter(returnList, true);\n         addKnuthElementsForSpaceAfter(returnList, alignment);\n+\n+        //All child content is processed. Only break-after can occur now, so...        \n+        context.clearPendingMarks();\n         addKnuthElementsForBreakAfter(returnList, context);\n \n         setFinished(true);\n@@ -411,7 +412,7 @@ private LinkedList getNextKnuthElementsAbsolute(LayoutContext context, int align\n                 if (isFixed()) {\n                     availHeight = (int)getCurrentPV().getViewArea().getHeight();\n                 } else {\n-                    availHeight = context.getStackLimit().opt; \n+                    availHeight = context.getStackLimitBP().opt; \n                 }\n                 allocBPD = availHeight;\n                 allocBPD -= offset.y;\n@@ -444,7 +445,7 @@ private LinkedList getNextKnuthElementsAbsolute(LayoutContext context, int align\n                     }\n                 }\n             } else {\n-                int maxbpd = context.getStackLimit().opt;\n+                int maxbpd = context.getStackLimitBP().opt;\n                 allocBPD = maxbpd;\n                 if (!switchedProgressionDirection) {\n                     autoHeight = true;\n@@ -601,11 +602,7 @@ public int getDifferenceOfFirstPart() {\n         }\n         \n         public boolean isOverflow() {\n-            if (isEmpty()) {\n-                return false;\n-            } else {\n-                return (deferredAlg.getPageBreaks().size() > 1);\n-            }\n+            return !isEmpty() && (deferredAlg.getPageBreaks().size() > 1);\n         }\n         \n         protected LayoutManager getTopLevelLM() {\n@@ -625,7 +622,7 @@ protected LinkedList getNextKnuthElements(LayoutContext context, int alignment)\n \n             while ((curLM = getChildLM()) != null) {\n                 LayoutContext childLC = new LayoutContext(0);\n-                childLC.setStackLimit(context.getStackLimit());\n+                childLC.setStackLimitBP(context.getStackLimitBP());\n                 childLC.setRefIPD(context.getRefIPD());\n                 childLC.setWritingMode(getBlockContainerFO().getWritingMode());\n                 \n@@ -707,7 +704,7 @@ public void addAreas(PositionIterator parentIter,\n             addBlockSpacing(0.0, new MinOptMax(layoutContext.getSpaceBefore()));\n         }\n \n-        LayoutManager childLM = null;\n+        LayoutManager childLM;\n         LayoutManager lastLM = null;\n         LayoutContext lc = new LayoutContext(0);\n         lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n@@ -736,7 +733,7 @@ public void addAreas(PositionIterator parentIter,\n             }\n             Position innerPosition = pos;\n             if (pos instanceof NonLeafPosition) {\n-                innerPosition = ((NonLeafPosition)pos).getPosition();\n+                innerPosition = pos.getPosition();\n             }\n             if (pos instanceof BlockContainerPosition) {\n                 if (bcpos != null) {\n@@ -772,7 +769,7 @@ public void addAreas(PositionIterator parentIter,\n             }\n         }\n \n-        getPSLM().addIDToPage(getBlockContainerFO().getId());\n+        addId();\n         \n         addMarkersToPage(true, isFirst(firstPos), isLast(lastPos));\n         \n@@ -854,7 +851,7 @@ public void addAreas(PositionIterator parentIter,\n                 // set last area flag\n                 lc.setFlags(LayoutContext.LAST_AREA,\n                         (layoutContext.isLastArea() && childLM == lastLM));\n-                /*LF*/lc.setStackLimit(layoutContext.getStackLimit());\n+                /*LF*/lc.setStackLimitBP(layoutContext.getStackLimitBP());\n                 // Add the line areas to Area\n                 childLM.addAreas(childPosIter, lc);\n             }\n@@ -873,7 +870,7 @@ public void addAreas(PositionIterator parentIter,\n         referenceArea = null;\n         resetSpaces();\n         \n-        getPSLM().notifyEndOfLayout(((BlockContainer)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n     }\n     \n     /**\n@@ -992,30 +989,21 @@ public void discardSpace(KnuthGlue spaceGlue) {\n         \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean mustKeepTogether() {\n         //TODO Keeps will have to be more sophisticated sooner or later\n-        return (!getBlockContainerFO().getKeepTogether().getWithinPage().isAuto()\n-                || !getBlockContainerFO().getKeepTogether().getWithinColumn().isAuto()\n-                || (getParent() instanceof BlockLevelLayoutManager\n-                    && ((BlockLevelLayoutManager) getParent()).mustKeepTogether())\n-                || (getParent() instanceof InlineLayoutManager\n-                    && ((InlineLayoutManager) getParent()).mustKeepTogether()));\n+        return super.mustKeepTogether()\n+                || !getBlockContainerFO().getKeepTogether().getWithinPage().isAuto()\n+                || !getBlockContainerFO().getKeepTogether().getWithinColumn().isAuto();\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean mustKeepWithPrevious() {\n         return !getBlockContainerFO().getKeepWithPrevious().getWithinPage().isAuto()\n                 || !getBlockContainerFO().getKeepWithPrevious().getWithinColumn().isAuto();\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean mustKeepWithNext() {\n         return !getBlockContainerFO().getKeepWithNext().getWithinPage().isAuto()\n                 || !getBlockContainerFO().getKeepWithNext().getWithinColumn().isAuto();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "sha": "e8ca88c1cf5eb1bba26f1997e78ae4ef5bcf5074",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockLayoutManager.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockLayoutManager.java",
                "patch": "@@ -25,6 +25,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.area.LineArea;\n@@ -146,7 +147,7 @@ public ProxyLMiter() {\n          * @return true if there are more child lms\n          */\n         public boolean hasNext() {\n-            return (curPos < listLMs.size()) ? true : createNextChildLMs(curPos);\n+            return (curPos < listLMs.size()) || createNextChildLMs(curPos);\n         }\n \n         /**\n@@ -249,7 +250,7 @@ public void addAreas(PositionIterator parentIter,\n             addBlockSpacing(0.0, new MinOptMax(layoutContext.getSpaceBefore()));\n         }\n \n-        LayoutManager childLM = null;\n+        LayoutManager childLM;\n         LayoutManager lastLM = null;\n         LayoutContext lc = new LayoutContext(0);\n         lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n@@ -279,7 +280,7 @@ public void addAreas(PositionIterator parentIter,\n             Position innerPosition = pos;\n             if (pos instanceof NonLeafPosition) {\n                 //Not all elements are wrapped\n-                innerPosition = ((NonLeafPosition) pos).getPosition();\n+                innerPosition = pos.getPosition();\n             }\n             if (innerPosition == null) {\n                 // pos was created by this BlockLM and was inside an element\n@@ -308,7 +309,7 @@ public void addAreas(PositionIterator parentIter,\n             }\n         }\n \n-        getPSLM().addIDToPage(getBlockFO().getId());\n+        addId();\n         \n         addMarkersToPage(true, isFirst(firstPos), isLast(lastPos));\n \n@@ -389,7 +390,7 @@ public void addAreas(PositionIterator parentIter,\n             // set last area flag\n             lc.setFlags(LayoutContext.LAST_AREA,\n                     (layoutContext.isLastArea() && childLM == lastLM));\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitBP(layoutContext.getStackLimitBP());\n             // Add the line areas to Area\n             childLM.addAreas(childPosIter, lc);\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockLayoutManager.java",
                "sha": "f5270107cb190b0398fb93d23ce0365837495d62",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "patch": "@@ -274,13 +274,14 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             if (curLM instanceof LineLayoutManager) {\n                 // curLM is a LineLayoutManager\n                 // set stackLimit for lines (stack limit is now i-p-direction, not b-p-direction!)\n-                childLC.setStackLimit(new MinOptMax(getContentAreaIPD()));\n+                childLC.setStackLimitBP(context.getStackLimitBP());\n+                childLC.setStackLimitIP(new MinOptMax(getContentAreaIPD()));\n                 childLC.setRefIPD(getContentAreaIPD());\n             } else {\n                 // curLM is a ?\n                 //childLC.setStackLimit(MinOptMax.subtract(context\n                 //        .getStackLimit(), stackSize));\n-                childLC.setStackLimit(context.getStackLimit());\n+                childLC.setStackLimitBP(context.getStackLimitBP());\n                 childLC.setRefIPD(referenceIPD);\n             }\n \n@@ -293,15 +294,22 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             if (returnedList != null\n                     && returnedList.size() == 1\n                     && ((ListElement) returnedList.getFirst()).isForcedBreak()) {\n-                // a descendant of this block has break-before\n-                contentList.addAll(returnedList);\n \n                 if (curLM.isFinished() && !hasNextChildLM()) {\n-                    forcedBreakAfterLast = (BreakElement)contentList.removeLast();\n+                    // a descendant of this block has break-before\n+                    forcedBreakAfterLast = (BreakElement) returnedList.getFirst();\n                     context.clearPendingMarks();\n                     break;\n                 }\n \n+                if (contentList.size() == 0) {\n+                    // Empty fo:block, zero-length box makes sure the IDs and/or markers \n+                    // are registered and borders/padding are painted.\n+                    returnList.add(new KnuthBox(0, notifyPos(new Position(this)), false));\n+                }\n+                // a descendant of this block has break-before\n+                contentList.addAll(returnedList);\n+                \n                 /* extension: conversione di tutta la sequenza fin'ora ottenuta */\n                 if (bpUnit > 0) {\n                     storedList = contentList;\n@@ -392,6 +400,9 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n \n         addKnuthElementsForBorderPaddingAfter(returnList, true);\n         addKnuthElementsForSpaceAfter(returnList, alignment);\n+        \n+        //All child content is processed. Only break-after can occur now, so...        \n+        context.clearPendingMarks();\n         if (forcedBreakAfterLast == null) {\n             addKnuthElementsForBreakAfter(returnList, context);\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "sha": "67ed1de9f41202e533531ccb6ad874d5d437bb28",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/FlowLayoutManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/FlowLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/FlowLayoutManager.java",
                "patch": "@@ -99,7 +99,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             //MinOptMax bpd = context.getStackLimit();\n \n             LayoutContext childLC = new LayoutContext(0);\n-            childLC.setStackLimit(context.getStackLimit());\n+            childLC.setStackLimitBP(context.getStackLimitBP());\n             childLC.setRefIPD(context.getRefIPD());\n             childLC.setWritingMode(getCurrentPage().getSimplePageMaster().getWritingMode());\n             ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/FlowLayoutManager.java",
                "sha": "115532cf12f97da475975200188df111d899f699",
                "status": "modified"
            },
            {
                "additions": 77,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/LayoutContext.java",
                "changes": 108,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/LayoutContext.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 31,
                "filename": "src/java/org/apache/fop/layoutmgr/LayoutContext.java",
                "patch": "@@ -74,18 +74,29 @@\n     private int flags; // Contains some set of flags defined above\n     /**\n      * Total available stacking dimension for a \"galley-level\" layout\n-     * manager (Line or Flow). It is passed by the parent LM. For LineLM,\n-     * the block LM determines this based on indent properties.\n+     * manager in block-progression-direction. It is passed by the\n+     * parent LM.\n      * These LM <b>may</b> wish to pass this information down to lower\n      * level LM to allow them to optimize returned break possibilities.\n      */\n-    private MinOptMax stackLimit;\n+    private MinOptMax stackLimitBP;\n+    /**\n+     * Total available stacking dimension for a \"galley-level\" layout\n+     * manager in inline-progression-direction. It is passed by the\n+     * parent LM. For LineLM, the block LM determines this based on\n+     * indent properties.\n+     * These LM <b>may</b> wish to pass this information down to lower\n+     * level LM to allow them to optimize returned break possibilities.\n+     */\n+    private MinOptMax stackLimitIP;\n \n     /** True if current element list is spanning in multi-column layout. */\n     private int nextSpan = Constants.NOT_SET;\n \n     /** inline-progression-dimension of nearest ancestor reference area */\n     private int refIPD;\n+    //TODO After the split of stackLimit into stackLimitBP and stackLimitIP there's now some\n+    //overlap with refIPD. Need to investigate how best to refactor that.\n \n     /** the writing mode established by the nearest ancestor reference area */\n     private int writingMode = Constants.EN_LR_TB;\n@@ -145,7 +156,7 @@ public LayoutContext(LayoutContext parentLC) {\n         this.flags = parentLC.flags;\n         this.refIPD = parentLC.refIPD;\n         this.writingMode = parentLC.writingMode;\n-        this.stackLimit = null; // Don't reference parent MinOptMax!\n+        setStackLimitsFrom(parentLC);\n         this.leadingSpace = parentLC.leadingSpace; //???\n         this.trailingSpace = parentLC.trailingSpace; //???\n         this.hyphContext = parentLC.hyphContext;\n@@ -166,7 +177,8 @@ public LayoutContext(LayoutContext parentLC) {\n     public LayoutContext(int flags) {\n         this.flags = flags;\n         this.refIPD = 0;\n-        stackLimit = new MinOptMax(0);\n+        stackLimitBP = new MinOptMax(0);\n+        stackLimitIP = new MinOptMax(0);\n         leadingSpace = null;\n         trailingSpace = null;\n     }\n@@ -273,12 +285,8 @@ public List getPendingAfterMarks() {\n      * Clears all pending marks on the LayoutContext.\n      */\n     public void clearPendingMarks() {\n-        if (this.pendingBeforeMarks != null) {\n-            this.pendingBeforeMarks.clear();\n-        }\n-        if (this.pendingAfterMarks != null) {\n-            this.pendingAfterMarks.clear();\n-        }\n+        this.pendingBeforeMarks = null;\n+        this.pendingAfterMarks = null;\n     }\n     \n     /**\n@@ -306,14 +314,47 @@ public List getPendingBeforeMarks() {\n         }\n     }\n     \n-    public void setStackLimit(MinOptMax limit) {\n-        stackLimit = limit;\n+    /**\n+     * Sets the stack limit in block-progression-dimension.\n+     * @param limit the stack limit\n+     */\n+    public void setStackLimitBP(MinOptMax limit) {\n+        stackLimitBP = limit;\n     }\n \n-    public MinOptMax getStackLimit() {\n-        return stackLimit;\n+    /**\n+     * Returns the stack limit in block-progression-dimension.\n+     * @return the stack limit\n+     */\n+    public MinOptMax getStackLimitBP() {\n+        return stackLimitBP;\n     }\n \n+    /**\n+     * Sets the stack limit in inline-progression-dimension.\n+     * @param limit the stack limit\n+     */\n+    public void setStackLimitIP(MinOptMax limit) {\n+        stackLimitIP = limit;\n+    }\n+\n+    /**\n+     * Returns the stack limit in inline-progression-dimension.\n+     * @return the stack limit\n+     */\n+    public MinOptMax getStackLimitIP() {\n+        return stackLimitIP;\n+    }\n+\n+    /**\n+     * Sets (Copies) the stack limits in both directions from another layout context.\n+     * @param context the layout context to taje the values from\n+     */\n+    public void setStackLimitsFrom(LayoutContext context) {\n+        setStackLimitBP(context.getStackLimitBP());\n+        setStackLimitIP(context.getStackLimitIP());\n+    }\n+    \n     /**\n      * Sets the inline-progression-dimension of the nearest ancestor reference area.\n      */\n@@ -536,22 +577,27 @@ public void setBreakAfter(int breakAfter) {\n \n     /** {@inheritDoc} */\n     public String toString() {\n-        return \"Layout Context:\" +\n-        \"\\nStack Limit: \\t\" + (getStackLimit() == null ? \"null\" : getStackLimit().toString()) +\n-        \"\\nTrailing Space: \\t\" + (getTrailingSpace() == null ? \"null\" : getTrailingSpace().toString()) +\n-        \"\\nLeading Space: \\t\" + (getLeadingSpace() == null ? \"null\" : getLeadingSpace().toString()) + \n-        \"\\nReference IPD: \\t\" + getRefIPD() +\n-        \"\\nSpace Adjust: \\t\" + getSpaceAdjust() + \n-        \"\\nIPD Adjust: \\t\" + getIPDAdjust() +\n-        \"\\nResolve Leading Space: \\t\" + resolveLeadingSpace() +\n-        \"\\nSuppress Leading Space: \\t\" + suppressLeadingSpace() +\n-        \"\\nIs First Area: \\t\" + isFirstArea() + \n-        \"\\nStarts New Area: \\t\" + startsNewArea() + \n-        \"\\nIs Last Area: \\t\" + isLastArea() +\n-        \"\\nTry Hyphenate: \\t\" + tryHyphenate() + \n-        \"\\nKeeps: \\t[\" + (isKeepWithNextPending() ? \"keep-with-next\" : \"\") + \"][\" \n-            + (isKeepWithPreviousPending() ? \"keep-with-previous\" : \"\") + \"] pending\" +\n-        \"\\nBreaks: \\tforced [\" + (breakBefore != Constants.EN_AUTO ? \"break-before\" : \"\") + \"][\" \n+        return \"Layout Context:\"\n+        + \"\\nStack Limit BPD: \\t\"\n+            + (getStackLimitBP() == null ? \"null\" : getStackLimitBP().toString())\n+        + \"\\nStack Limit IPD: \\t\"\n+            + (getStackLimitIP() == null ? \"null\" : getStackLimitIP().toString())\n+        + \"\\nTrailing Space: \\t\"\n+            + (getTrailingSpace() == null ? \"null\" : getTrailingSpace().toString())\n+        + \"\\nLeading Space: \\t\"\n+            + (getLeadingSpace() == null ? \"null\" : getLeadingSpace().toString()) \n+        + \"\\nReference IPD: \\t\" + getRefIPD()\n+        + \"\\nSpace Adjust: \\t\" + getSpaceAdjust()\n+        + \"\\nIPD Adjust: \\t\" + getIPDAdjust()\n+        + \"\\nResolve Leading Space: \\t\" + resolveLeadingSpace()\n+        + \"\\nSuppress Leading Space: \\t\" + suppressLeadingSpace()\n+        + \"\\nIs First Area: \\t\" + isFirstArea()\n+        + \"\\nStarts New Area: \\t\" + startsNewArea()\n+        + \"\\nIs Last Area: \\t\" + isLastArea()\n+        + \"\\nTry Hyphenate: \\t\" + tryHyphenate()\n+        + \"\\nKeeps: \\t[\" + (isKeepWithNextPending() ? \"keep-with-next\" : \"\") + \"][\" \n+            + (isKeepWithPreviousPending() ? \"keep-with-previous\" : \"\") + \"] pending\"\n+        + \"\\nBreaks: \\tforced [\" + (breakBefore != Constants.EN_AUTO ? \"break-before\" : \"\") + \"][\" \n         + (breakAfter != Constants.EN_AUTO ? \"break-after\" : \"\") + \"]\";\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/LayoutContext.java",
                "sha": "79b5e232f87b50a28096335887e39554fee663cc",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/MinOptMaxUtil.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/MinOptMaxUtil.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/MinOptMaxUtil.java",
                "patch": "@@ -68,19 +68,16 @@ public static void restrict(MinOptMax mom, LengthRangeProperty lr,\n     }\n \n     /**\n-     * Extend the minimum length to the given length.\n+     * Extends the minimum length to the given length if necessary, and adjusts opt and\n+     * max accordingly.\n+     * \n      * @param mom the min/opt/max trait\n      * @param len the new minimum length\n-     * @param optToLen if set adjusts the optimum length to be the smaller of the\n-     * minimum length and the given length\n      */\n-    public static void extendMinimum(MinOptMax mom, int len, boolean optToLen) {\n+    public static void extendMinimum(MinOptMax mom, int len) {\n         if (mom.min < len) {\n             mom.min = len;\n             mom.opt = Math.max(mom.min, mom.opt);\n-            if (optToLen) {\n-                mom.opt = Math.min(mom.min, len);\n-            }\n             mom.max = Math.max(mom.opt, mom.max);\n         }\n     }\n@@ -111,7 +108,7 @@ public static MinOptMax toMinOptMax(LengthRangeProperty prop, PercentBaseContext\n                         ? 0 : prop.getMinimum(context).getLength().getValue(context)),\n                 (prop.getOptimum(context).isAuto() \n                         ? 0 : prop.getOptimum(context).getLength().getValue(context)),\n-                (prop.getMinimum(context).isAuto() \n+                (prop.getMaximum(context).isAuto() \n                         ? Integer.MAX_VALUE \n                         : prop.getMaximum(context).getLength().getValue(context)));\n         return mom;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/MinOptMaxUtil.java",
                "sha": "b58af1cfe438b330cb344605559f4a6c507cc029",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreaker.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "patch": "@@ -156,7 +156,7 @@ protected LinkedList getNextKnuthElements(LayoutContext context, int alignment)\n                     // element represents a line with footnote citations\n                     bFootnotesPresent = true;\n                     LayoutContext footnoteContext = new LayoutContext(context);\n-                    footnoteContext.setStackLimit(context.getStackLimit());\n+                    footnoteContext.setStackLimitBP(context.getStackLimitBP());\n                     footnoteContext.setRefIPD(pslm.getCurrentPV()\n                             .getRegionReference(Constants.FO_REGION_BODY).getIPD());\n                     LinkedList footnoteBodyLMs = ((KnuthBlockBox) element).getFootnoteBodyLMs();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "sha": "3e100cd50ea97d945390ec402b0c6e9a57857f68",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "patch": "@@ -364,7 +364,13 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n         } else {\n             // there are no footnotes\n         }\n-        return getLineWidth(activeNode.line) - actualWidth;\n+        int diff = getLineWidth(activeNode.line) - actualWidth;\n+        if (autoHeight && diff < 0) {\n+            //getLineWidth() for auto-height parts return 0 so the diff will be negative\n+            return 0; //...but we don't want to shrink in this case. Stick to optimum.\n+        } else {\n+            return diff;\n+        }\n     }\n \n     /** Checks whether footnotes from preceding pages may be deferred to the page after",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "sha": "d98d29b5ce917e62169e89de48eeff5b9c629382",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "patch": "@@ -93,7 +93,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         //TODO Empty this method?!?\n         // set layout dimensions\n         setContentAreaIPD(context.getRefIPD());\n-        setContentAreaBPD(context.getStackLimit().opt);\n+        setContentAreaBPD(context.getStackLimitBP().opt);\n \n         //TODO Copied from elsewhere. May be worthwhile to factor out the common parts. \n         // currently active LM\n@@ -111,10 +111,10 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             }\n \n             // Set up a LayoutContext\n-            MinOptMax bpd = context.getStackLimit();\n+            MinOptMax bpd = context.getStackLimitBP();\n \n             LayoutContext childLC = new LayoutContext(0);\n-            childLC.setStackLimit(MinOptMax.subtract(bpd, stackSize));\n+            childLC.setStackLimitBP(MinOptMax.subtract(bpd, stackSize));\n             childLC.setRefIPD(context.getRefIPD());\n \n             // get elements from curLM\n@@ -307,7 +307,7 @@ protected LinkedList getNextKnuthElements(LayoutContext context, int alignment)\n \n             while ((curLM = getChildLM()) != null) {\n                 LayoutContext childLC = new LayoutContext(0);\n-                childLC.setStackLimit(context.getStackLimit());\n+                childLC.setStackLimitBP(context.getStackLimitBP());\n                 childLC.setRefIPD(context.getRefIPD());\n                 childLC.setWritingMode(context.getWritingMode());\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "sha": "b1e41452793809d9f429c836b07cd06172013c1b",
                "status": "modified"
            },
            {
                "additions": 86,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/TraitSetter.java",
                "changes": 87,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/TraitSetter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/TraitSetter.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.CommonMarginBlock;\n+import org.apache.fop.fo.properties.CommonMarginBlock;\n import org.apache.fop.fo.properties.CommonTextDecoration;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground.BorderInfo;\n import org.apache.fop.fonts.Font;\n@@ -280,6 +281,90 @@ private static BorderProps getCollapsingBorderProps(BorderInfo borderInfo, boole\n         }\n     }\n \n+    /**\n+     * Add background to an area. This method is mainly used by table-related layout\n+     * managers to add background for column, body or row. Since the area corresponding to\n+     * border-separation must be filled with the table's background, for every cell an\n+     * additional area with the same dimensions is created to hold the background for the\n+     * corresponding column/body/row. An additional shift must then be added to\n+     * background-position-horizontal/vertical to ensure the background images are\n+     * correctly placed. Indeed the placement of images must be made WRT the\n+     * column/body/row and not the cell.\n+     * \n+     * <p>Note: The area's IPD and BPD must be set before calling this method.</p>\n+     * \n+     * <p>TODO the regular\n+     * {@link #addBackground(Area, CommonBorderPaddingBackground, PercentBaseContext)}\n+     * method should be used instead, and a means to retrieve the original area's\n+     * dimensions must be found.</p>\n+     * \n+     * <p>TODO the placement of images in the x- or y-direction will be incorrect if\n+     * background-repeat is set for that direction.</p>\n+     * \n+     * @param area the area to set the traits on\n+     * @param backProps the background properties\n+     * @param context Property evaluation context\n+     * @param ipdShift horizontal shift to affect to the background, in addition to the\n+     * value of the background-position-horizontal property\n+     * @param bpdShift vertical shift to affect to the background, in addition to the\n+     * value of the background-position-vertical property\n+     * @param referenceIPD value to use as a reference for percentage calculation\n+     * @param referenceBPD value to use as a reference for percentage calculation\n+     */\n+    public static void addBackground(Area area, \n+            CommonBorderPaddingBackground backProps,\n+            PercentBaseContext context,\n+            int ipdShift, int bpdShift, int referenceIPD, int referenceBPD) {\n+        if (!backProps.hasBackground()) {\n+            return;\n+        }\n+        Trait.Background back = new Trait.Background();\n+        back.setColor(backProps.backgroundColor);\n+\n+        if (backProps.getImageInfo() != null) {\n+            back.setURL(backProps.backgroundImage);\n+            back.setImageInfo(backProps.getImageInfo());\n+            back.setRepeat(backProps.backgroundRepeat);\n+            if (backProps.backgroundPositionHorizontal != null) {\n+                if (back.getRepeat() == Constants.EN_NOREPEAT \n+                        || back.getRepeat() == Constants.EN_REPEATY) {\n+                    if (area.getIPD() > 0) {\n+                        PercentBaseContext refContext = new SimplePercentBaseContext(context,\n+                                LengthBase.IMAGE_BACKGROUND_POSITION_HORIZONTAL,\n+                                (referenceIPD - back.getImageInfo().getSize().getWidthMpt()));\n+\n+                        back.setHoriz(ipdShift\n+                                + backProps.backgroundPositionHorizontal.getValue(refContext));\n+                    } else {\n+                        // TODO Area IPD has to be set for this to work\n+                        log.warn(\"Horizontal background image positioning ignored\"\n+                                + \" because the IPD was not set on the area.\"\n+                                + \" (Yes, it's a bug in FOP)\");\n+                    }\n+                }\n+            }\n+            if (backProps.backgroundPositionVertical != null) {\n+                if (back.getRepeat() == Constants.EN_NOREPEAT \n+                        || back.getRepeat() == Constants.EN_REPEATX) {\n+                    if (area.getBPD() > 0) {\n+                        PercentBaseContext refContext = new SimplePercentBaseContext(context,\n+                                LengthBase.IMAGE_BACKGROUND_POSITION_VERTICAL,\n+                                (referenceBPD - back.getImageInfo().getSize().getHeightMpt()));\n+                        back.setVertical(bpdShift\n+                                + backProps.backgroundPositionVertical.getValue(refContext));\n+                    } else {\n+                        // TODO Area BPD has to be set for this to work\n+                        log.warn(\"Vertical background image positioning ignored\"\n+                                + \" because the BPD was not set on the area.\"\n+                                + \" (Yes, it's a bug in FOP)\");\n+                    }\n+                }\n+            }\n+        }\n+\n+        area.addTrait(Trait.BACKGROUND, back);\n+    }\n+\n     /**\n      * Add background to an area.\n      * Layout managers that create areas with a background can use this to\n@@ -312,7 +397,7 @@ public static void addBackground(Area area,\n                         back.setHoriz(backProps.backgroundPositionHorizontal.getValue(\n                                 new SimplePercentBaseContext(context, \n                                     LengthBase.IMAGE_BACKGROUND_POSITION_HORIZONTAL,\n-                                    (width - back.getImageInfo().getSize().getHeightMpt())\n+                                    (width - back.getImageInfo().getSize().getWidthMpt())\n                                 )\n                             ));\n                     } else {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/TraitSetter.java",
                "sha": "dfc8c99f21f0a564898ed00b1f7f8b40ce24414f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/AbstractGraphicsLayoutManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/AbstractGraphicsLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/AbstractGraphicsLayoutManager.java",
                "patch": "@@ -123,13 +123,6 @@ protected AlignmentContext makeAlignmentContext(LayoutContext context) {\n             );\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n-\n     /**\n      * Returns the image of foreign object area to be put into\n      * the viewport.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/AbstractGraphicsLayoutManager.java",
                "sha": "38e0c35bc1af6af479720371e89a315c672cd974",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/AbstractPageNumberCitationLayoutManager.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/AbstractPageNumberCitationLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/AbstractPageNumberCitationLayoutManager.java",
                "patch": "@@ -51,7 +51,7 @@\n      * Constructor\n      *\n      * @param node the formatting object that creates this area\n-     * @todo better retrieval of font info\n+     * TODO better retrieval of font info\n      */\n     public AbstractPageNumberCitationLayoutManager(AbstractPageNumberCitation node) {\n         super(node);\n@@ -83,7 +83,7 @@ protected AlignmentContext makeAlignmentContext(LayoutContext context) {\n \n     /** {@inheritDoc} */\n     public InlineArea get(LayoutContext context) {\n-        curArea = getPageNumberCitationInlineArea(parentLM);\n+        curArea = getPageNumberCitationInlineArea();\n         return curArea;\n     }\n     \n@@ -99,12 +99,15 @@ public void addAreas(PositionIterator posIter, LayoutContext context) {\n     }\n     \n     /**\n-     * if id can be resolved then simply return a word, otherwise\n+     * If id can be resolved then simply return a word, otherwise\n      * return a resolvable area\n+     *\n+     * @param parentLM  the parent LayoutManager\n+     * @return a corresponding InlineArea\n      */\n-    private InlineArea getPageNumberCitationInlineArea(LayoutManager parentLM) {\n+    private InlineArea getPageNumberCitationInlineArea() {\n         PageViewport page = getPSLM().getFirstPVWithID(fobj.getRefId());\n-        TextArea text = null;\n+        TextArea text;\n         if (page != null) {\n             String str = page.getPageNumberString();\n             // get page string from parent, build area\n@@ -150,9 +153,5 @@ protected int getStringWidth(String str) {\n         return width;\n     }\n \n-    /** {@inheritDoc} */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/AbstractPageNumberCitationLayoutManager.java",
                "sha": "c92bdb6fc4233d2a00f838ef10690b0b879d91d7",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/CharacterLayoutManager.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/CharacterLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/CharacterLayoutManager.java",
                "patch": "@@ -45,7 +45,6 @@\n  * LayoutManager for the fo:character formatting object\n  */\n public class CharacterLayoutManager extends LeafNodeLayoutManager {\n-    private Character fobj;\n     private MinOptMax letterSpaceIPD;\n     private int hyphIPD;\n     private Font font;\n@@ -57,13 +56,13 @@\n      * @param node the fo:character formatting object\n      */\n     public CharacterLayoutManager(Character node) {\n-        // @todo better null checking of node\n         super(node);\n-        fobj = node;\n     }\n     \n     /** {@inheritDoc} */\n     public void initialize() {\n+        Character fobj = (Character)this.fobj;\n+        \n         FontInfo fi = fobj.getFOEventHandler().getFontInfo();\n         FontTriplet[] fontkeys = fobj.getCommonFont().getFontState(fi);\n         font = fi.getFontInstance(fontkeys[0], fobj.getCommonFont().fontSize.getValue(this));\n@@ -90,7 +89,7 @@ public void initialize() {\n             text.addWord(String.valueOf(ch), 0);\n         }\n         TraitSetter.setProducerID(text, node.getId());\n-        TraitSetter.addTextDecoration(text, fobj.getTextDecoration());\n+        TraitSetter.addTextDecoration(text, node.getTextDecoration());\n         return text;\n     }\n \n@@ -105,6 +104,8 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             return null;\n         }\n \n+        Character fobj = (Character)this.fobj;\n+        \n         ipd = new MinOptMax(font.getCharWidth(fobj.getCharacter()));\n \n         curArea.setIPD(ipd.opt);\n@@ -178,14 +179,7 @@ public void hyphenate(Position pos, HyphContext hc) {\n     /** {@inheritDoc} */\n     public boolean applyChanges(List oldList) {\n         setFinished(false);\n-        if (isSomethingChanged) {\n-            // there is nothing to do,\n-            // possible changes have already been applied\n-            // in the hyphenate() method\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return isSomethingChanged;\n     }\n \n     /** {@inheritDoc} */\n@@ -238,10 +232,5 @@ public LinkedList getChangedKnuthElements(List oldList, int alignment) {\n         return returnList;\n     }\n \n-    /** {@inheritDoc} */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n-\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/CharacterLayoutManager.java",
                "sha": "b53e442d443d7b3eeedf3e7a9e6da50ee1face51",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "patch": "@@ -19,9 +19,20 @@\n \n package org.apache.fop.layoutmgr.inline;\n \n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.ListIterator;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.area.Area;\n+import org.apache.fop.area.Block;\n+import org.apache.fop.area.LineArea;\n+import org.apache.fop.area.inline.InlineArea;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.pagination.Title;\n import org.apache.fop.layoutmgr.AbstractBaseLayoutManager;\n@@ -34,19 +45,8 @@\n import org.apache.fop.layoutmgr.Position;\n import org.apache.fop.layoutmgr.PositionIterator;\n import org.apache.fop.layoutmgr.SpaceSpecifier;\n-import org.apache.fop.area.Area;\n-import org.apache.fop.area.LineArea;\n-import org.apache.fop.area.inline.InlineArea;\n-\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n import org.apache.fop.traits.MinOptMax;\n \n-import org.apache.fop.area.Block;\n-\n /**\n  * Content Layout Manager.\n  * For use with objects that contain inline areas such as\n@@ -115,7 +115,7 @@ public void fillArea(LayoutManager curLM) {\n         childLC.setLeadingSpace(new SpaceSpecifier(false));\n         childLC.setTrailingSpace(new SpaceSpecifier(false));\n         // set stackLimit for lines\n-        childLC.setStackLimit(new MinOptMax(ipd));\n+        childLC.setStackLimitIP(new MinOptMax(ipd));\n         childLC.setRefIPD(ipd);\n \n         int lineHeight = 14000;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "sha": "ff7c5b3ced0ddf4c4ff55747b7311018f90aae9d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/ICLayoutManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/ICLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/ICLayoutManager.java",
                "patch": "@@ -31,20 +31,15 @@\n  * and id areas are maintained for later retrieval.\n  */\n public class ICLayoutManager extends LeafNodeLayoutManager {\n-    private InlineContainer fobj;\n     private List childrenLM;\n \n     public ICLayoutManager(InlineContainer node, List childLM) {\n         super(node);\n-        fobj = node;\n         childrenLM = childLM;\n     }\n \n     public InlineArea get(int index) {\n         return null;\n     }\n \n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/ICLayoutManager.java",
                "sha": "7ca9e0d5ee1200bfd9f862fe2d819c14d5ac8d74",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/InlineLayoutManager.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/InlineLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/InlineLayoutManager.java",
                "patch": "@@ -19,12 +19,13 @@\n \n package org.apache.fop.layoutmgr.inline;\n \n-import java.util.ListIterator;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.ListIterator;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.inline.InlineArea;\n import org.apache.fop.area.inline.InlineBlockParent;\n@@ -47,12 +48,12 @@\n import org.apache.fop.layoutmgr.KnuthBox;\n import org.apache.fop.layoutmgr.KnuthSequence;\n import org.apache.fop.layoutmgr.LayoutContext;\n-import org.apache.fop.layoutmgr.NonLeafPosition;\n-import org.apache.fop.layoutmgr.SpaceSpecifier;\n-import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.layoutmgr.LayoutManager;\n+import org.apache.fop.layoutmgr.NonLeafPosition;\n import org.apache.fop.layoutmgr.Position;\n import org.apache.fop.layoutmgr.PositionIterator;\n+import org.apache.fop.layoutmgr.SpaceSpecifier;\n+import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.traits.MinOptMax;\n import org.apache.fop.traits.SpaceVal;\n \n@@ -296,7 +297,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n              );\n         }\n         \n-        while ((curLM = (LayoutManager) getChildLM()) != null) {\n+        while ((curLM = getChildLM()) != null) {\n             \n             if (!(curLM instanceof InlineLevelLayoutManager)) {\n                 // A block LM\n@@ -435,7 +436,7 @@ public void addAreas(PositionIterator parentIter,\n         // layout context given to lastLM, but must be cleared in the\n         // layout context given to the other LMs.\n         LinkedList positionList = new LinkedList();\n-        NonLeafPosition pos = null;\n+        NonLeafPosition pos;\n         LayoutManager lastLM = null;// last child LM in this iterator\n         Position lastPos = null;\n         while (parentIter.hasNext()) {\n@@ -599,9 +600,4 @@ protected Position getAuxiliaryPosition() {\n         return this.auxiliaryPosition;\n     }\n     \n-    /** {@inheritDoc} */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n-    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/InlineLayoutManager.java",
                "sha": "e9919e02f7f8f3c523c6c52222b2521d2ab59539",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 20,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager.java",
                "patch": "@@ -75,15 +75,9 @@ protected Position getPos(Object nextObj) {\n \n     private Area currentArea; // LineArea or InlineParent\n \n-    //private BreakPoss prevBP;\n-    \n     /** The child layout context */\n     protected LayoutContext childLC;\n \n-    private boolean bAreaCreated = false;\n-\n-    //private LayoutManager currentLM = null;\n-\n     /** Used to store previous content IPD for each child LM. */\n     private HashMap hmPrevIPD = new HashMap();\n \n@@ -170,14 +164,6 @@ protected void clearPrevIPD() {\n         hmPrevIPD.clear();\n     }\n \n-    /**\n-     * This method is called by addAreas() so IDs can be added to a page for FOs that \n-     * support the 'id' property.\n-     */\n-    protected void addId() {\n-        // Do nothing here, overriden in subclasses that have an 'id' property.\n-    }\n-    \n     /**\n      * Returns the current area.\n      * @return the current area\n@@ -255,7 +241,7 @@ public List addALetterSpaceTo(List oldList) {\n         // \"unwrap\" the Position stored in each element of oldList\n         while (oldListIterator.hasNext()) {\n             element = (KnuthElement) oldListIterator.next();\n-            element.setPosition(((NonLeafPosition)element.getPosition()).getPosition());\n+            element.setPosition(element.getPosition().getPosition());\n         }\n \n         // The last element may not have a layout manager (its position == null);\n@@ -288,7 +274,7 @@ public void removeWordSpace(List oldList) {\n         // \"unwrap\" the Position stored in each element of oldList\n         while (oldListIterator.hasNext()) {\n             element = (KnuthElement) oldListIterator.next();\n-            element.setPosition(((NonLeafPosition)element.getPosition()).getPosition());\n+            element.setPosition(element.getPosition().getPosition());\n         }\n \n         ((InlineLevelLayoutManager)\n@@ -298,14 +284,14 @@ public void removeWordSpace(List oldList) {\n \n     /** {@inheritDoc} */\n     public void getWordChars(StringBuffer sbChars, Position pos) {\n-        Position newPos = ((NonLeafPosition) pos).getPosition();\n+        Position newPos = pos.getPosition();\n         ((InlineLevelLayoutManager)\n          newPos.getLM()).getWordChars(sbChars, newPos);\n     }\n \n     /** {@inheritDoc} */\n     public void hyphenate(Position pos, HyphContext hc) {\n-        Position newPos = ((NonLeafPosition) pos).getPosition();\n+        Position newPos = pos.getPosition();\n         ((InlineLevelLayoutManager)\n          newPos.getLM()).hyphenate(newPos, hc);\n     }\n@@ -318,7 +304,7 @@ public boolean applyChanges(List oldList) {\n         while (oldListIterator.hasNext()) {\n             oldElement = (KnuthElement) oldListIterator.next();\n             oldElement.setPosition\n-                (((NonLeafPosition) oldElement.getPosition()).getPosition());\n+                (oldElement.getPosition().getPosition());\n         }\n         // reset the iterator\n         oldListIterator = oldList.listIterator();\n@@ -385,7 +371,7 @@ public LinkedList getChangedKnuthElements(List oldList, int alignment) {\n         while (oldListIterator.hasNext()) {\n             oldElement = (KnuthElement) oldListIterator.next();\n             oldElement.setPosition\n-                (((NonLeafPosition) oldElement.getPosition()).getPosition());\n+                (oldElement.getPosition().getPosition());\n         }\n         // reset the iterator\n         oldListIterator = oldList.listIterator();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager.java",
                "sha": "bf1538a7cb0fba39ea1c8cccbe20cd9937d602a1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "patch": "@@ -339,11 +339,6 @@ public LinkedList getChangedKnuthElements(List oldList,\n         return returnList;\n     }\n \n-    /** {@inheritDoc} */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n-\n     /**\n      * {@inheritDoc} \n      */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "sha": "f4bcde96fe7c7165c974145576a0d86f0965e2e8",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LeafNodeLayoutManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LeafNodeLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LeafNodeLayoutManager.java",
                "patch": "@@ -65,8 +65,6 @@\n     /** The alignment context applying to this area */\n     protected AlignmentContext alignmentContext = null;\n     \n-    private MinOptMax ipd;\n-\n     /** Flag to indicate if something was changed as part of the getChangeKnuthElements sequence */\n     protected boolean isSomethingChanged = false;\n     /** Our area info for the Knuth elements */\n@@ -204,14 +202,6 @@ protected InlineArea getEffectiveArea() {\n         return curArea;\n     }\n     \n-    /**\n-     * This method is called by addAreas() so IDs can be added to a page for FOs that \n-     * support the 'id' property.\n-     */\n-    protected void addId() {\n-        // Do nothing here, overriden in subclasses that have an 'id' property.\n-    }\n-    \n     /**\n      * Offset this area.\n      * Offset the inline area in the bpd direction when adding the",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LeafNodeLayoutManager.java",
                "sha": "fb5e9ee4d4a86eeec56b3086eaa41815b37cf683",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "patch": "@@ -26,6 +26,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.LineArea;\n import org.apache.fop.area.Trait;\n@@ -582,9 +583,6 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         // Get a break from currently active child LM\n         // Set up constraints for inline level managers\n \n-        // IPD remaining in line\n-        MinOptMax availIPD = context.getStackLimit();\n-\n         clearPrevIPD();\n \n         //PHASE 1: Create Knuth elements\n@@ -646,7 +644,7 @@ private void collectInlineKnuthElements(LayoutContext context) {\n         \n         InlineLevelLayoutManager curLM;\n         LinkedList returnedList = null;\n-        iLineWidth = context.getStackLimit().opt;\n+        iLineWidth = context.getStackLimitIP().opt;\n             \n         // convert all the text in a sequence of paragraphs made\n         // of KnuthBox, KnuthGlue and KnuthPenalty objects\n@@ -1687,7 +1685,7 @@ private void addInlineArea(LayoutContext context, Position pos, boolean isLastPo\n              */\n             if (false && textAlignment == EN_JUSTIFY) {\n                 // re-compute space adjust ratio\n-                int updatedDifference = context.getStackLimit().opt\n+                int updatedDifference = context.getStackLimitIP().opt\n                                         - lbp.lineWidth + lbp.difference;\n                 double updatedRatio = 0.0;\n                 if (updatedDifference > 0) {\n@@ -1701,12 +1699,12 @@ private void addInlineArea(LayoutContext context, Position pos, boolean isLastPo\n             } else if (false && textAlignment == EN_CENTER) {\n                 // re-compute indent\n                 int updatedIndent = lbp.startIndent\n-                                    + (context.getStackLimit().opt - lbp.lineWidth) / 2;\n+                                    + (context.getStackLimitIP().opt - lbp.lineWidth) / 2;\n                 lineArea.addTrait(Trait.START_INDENT, new Integer(updatedIndent));\n             } else if (false && textAlignment == EN_END) {\n                 // re-compute indent\n                 int updatedIndent = lbp.startIndent \n-                                    + (context.getStackLimit().opt - lbp.lineWidth);\n+                                    + (context.getStackLimitIP().opt - lbp.lineWidth);\n                 lineArea.addTrait(Trait.START_INDENT, new Integer(updatedIndent));\n             }\n             \n@@ -1770,7 +1768,7 @@ private void addBlockArea(LayoutContext context, Position pos, boolean isLastPos\n             // set last area flag\n             blocklc.setFlags(LayoutContext.LAST_AREA,\n                              (context.isLastArea() && childLM == lastLM));\n-            blocklc.setStackLimit(context.getStackLimit());\n+            blocklc.setStackLimitsFrom(context);\n             // Add the line areas to Area\n             childLM.addAreas(childPosIter, blocklc);\n             blocklc.setLeadingSpace(blocklc.getTrailingSpace());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "sha": "9a818232c43f0f11f01b1ec79c1a73b8d430b995",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/PageNumberLayoutManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/PageNumberLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/PageNumberLayoutManager.java",
                "patch": "@@ -42,7 +42,7 @@\n      * Constructor\n      *\n      * @param node the fo:page-number formatting object that creates the area\n-     * @todo better null checking of node, font\n+     * TODO better null checking of node, font\n      */\n     public PageNumberLayoutManager(PageNumber node) {\n         super(node);\n@@ -131,9 +131,5 @@ private int getStringWidth(String str) {\n         return width;\n     }\n     \n-    /** {@inheritDoc} */\n-    protected void addId() {\n-        getPSLM().addIDToPage(fobj.getId());\n-    }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/inline/PageNumberLayoutManager.java",
                "sha": "1aaaaf52717fb379e78aa6ebea52a9b3e1f6b2b3",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListBlockLayoutManager.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/list/ListBlockLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/layoutmgr/list/ListBlockLayoutManager.java",
                "patch": "@@ -19,29 +19,29 @@\n  \n package org.apache.fop.layoutmgr.list;\n \n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.area.Area;\n+import org.apache.fop.area.Block;\n import org.apache.fop.fo.flow.ListBlock;\n-import org.apache.fop.layoutmgr.BlockLevelLayoutManager;\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n import org.apache.fop.layoutmgr.ConditionalElementListener;\n import org.apache.fop.layoutmgr.ElementListUtils;\n-import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.LayoutContext;\n-import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.NonLeafPosition;\n+import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.PositionIterator;\n import org.apache.fop.layoutmgr.RelSide;\n import org.apache.fop.layoutmgr.TraitSetter;\n-import org.apache.fop.area.Area;\n-import org.apache.fop.area.Block;\n import org.apache.fop.traits.MinOptMax;\n import org.apache.fop.traits.SpaceVal;\n \n-import java.util.Iterator;\n-import java.util.LinkedList;\n-import java.util.List;\n-\n /**\n  * LayoutManager for a list-block FO.\n  * A list block contains list items which are stacked within\n@@ -156,11 +156,11 @@ public void addAreas(PositionIterator parentIter,\n             addBlockSpacing(0.0, new MinOptMax(layoutContext.getSpaceBefore()));\n         }\n \n-        getPSLM().addIDToPage(getListBlockFO().getId());\n+        addId();\n \n         // the list block contains areas stacked from each list item\n \n-        LayoutManager childLM = null;\n+        LayoutManager childLM;\n         LayoutContext lc = new LayoutContext(0);\n         LayoutManager firstLM = null;\n         LayoutManager lastLM = null;\n@@ -181,10 +181,10 @@ public void addAreas(PositionIterator parentIter,\n             }\n             if (pos instanceof NonLeafPosition\n                     && (pos.getPosition() != null)\n-                    && ((NonLeafPosition) pos).getPosition().getLM() != this) {\n+                    && pos.getPosition().getLM() != this) {\n                 // pos was created by a child of this ListBlockLM\n-                positionList.add(((NonLeafPosition) pos).getPosition());\n-                lastLM = ((NonLeafPosition) pos).getPosition().getLM();\n+                positionList.add(pos.getPosition());\n+                lastLM = pos.getPosition().getLM();\n                 if (firstLM == null) {\n                     firstLM = lastLM;\n                 }\n@@ -200,7 +200,7 @@ public void addAreas(PositionIterator parentIter,\n             lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n             lc.setFlags(LayoutContext.FIRST_AREA, childLM == firstLM);\n             lc.setFlags(LayoutContext.LAST_AREA, childLM == lastLM);\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitBP(layoutContext.getStackLimitBP());\n             childLM.addAreas(childPosIter, lc);\n         }\n \n@@ -218,7 +218,7 @@ public void addAreas(PositionIterator parentIter,\n         curBlockArea = null;\n         resetSpaces();\n         \n-        getPSLM().notifyEndOfLayout(((ListBlock)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n     }\n \n     /**\n@@ -280,7 +280,7 @@ public void addChildArea(Area childArea) {\n     /** {@inheritDoc} */\n     public boolean mustKeepTogether() {\n         //TODO Keeps will have to be more sophisticated sooner or later\n-        return ((BlockLevelLayoutManager)getParent()).mustKeepTogether() \n+        return super.mustKeepTogether() \n                 || !getListBlockFO().getKeepTogether().getWithinPage().isAuto()\n                 || !getListBlockFO().getKeepTogether().getWithinColumn().isAuto();\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListBlockLayoutManager.java",
                "sha": "c17ddc7117777ba70b65d09a231463ae079e62ec",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListItemContentLayoutManager.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/list/ListItemContentLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/layoutmgr/list/ListItemContentLayoutManager.java",
                "patch": "@@ -19,24 +19,24 @@\n  \n package org.apache.fop.layoutmgr.list;\n \n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import org.apache.fop.area.Area;\n+import org.apache.fop.area.Block;\n import org.apache.fop.fo.flow.AbstractListItemPart;\n import org.apache.fop.fo.flow.ListItemBody;\n import org.apache.fop.fo.flow.ListItemLabel;\n import org.apache.fop.layoutmgr.BlockLevelLayoutManager;\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n-import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.LayoutContext;\n-import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.NonLeafPosition;\n+import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.PositionIterator;\n import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.layoutmgr.SpaceResolver.SpaceHandlingBreakPosition;\n-import org.apache.fop.area.Area;\n-import org.apache.fop.area.Block;\n-\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.LinkedList;\n \n /**\n  * LayoutManager for a list-item-label or list-item-body FO.\n@@ -115,9 +115,9 @@ public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext) {\n         getParentArea(null);\n         \n-        getPSLM().addIDToPage(getPartFO().getId());\n+        addId();\n \n-        LayoutManager childLM = null;\n+        LayoutManager childLM;\n         LayoutContext lc = new LayoutContext(0);\n         LayoutManager firstLM = null;\n         LayoutManager lastLM = null;\n@@ -141,8 +141,8 @@ public void addAreas(PositionIterator parentIter,\n             }\n             if (pos instanceof NonLeafPosition) {\n                 // pos was created by a child of this ListBlockLM\n-                positionList.add(((NonLeafPosition) pos).getPosition());\n-                lastLM = ((NonLeafPosition) pos).getPosition().getLM();\n+                positionList.add(pos.getPosition());\n+                lastLM = pos.getPosition().getLM();\n                 if (firstLM == null) {\n                     firstLM = lastLM;\n                 }\n@@ -162,7 +162,7 @@ public void addAreas(PositionIterator parentIter,\n             lc.setFlags(LayoutContext.LAST_AREA, childLM == lastLM);\n             // set the space adjustment ratio\n             lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitBP(layoutContext.getStackLimitBP());\n             childLM.addAreas(childPosIter, lc);\n         }\n \n@@ -172,7 +172,7 @@ public void addAreas(PositionIterator parentIter,\n \n         curBlockArea = null;\n         \n-        getPSLM().notifyEndOfLayout(((AbstractListItemPart)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListItemContentLayoutManager.java",
                "sha": "8b0028a8feb8239e9ff18f7093d98d01b9a13376",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListItemLayoutManager.java",
                "changes": 58,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/list/ListItemLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 26,
                "filename": "src/java/org/apache/fop/layoutmgr/list/ListItemLayoutManager.java",
                "patch": "@@ -19,8 +19,16 @@\n \n package org.apache.fop.layoutmgr.list;\n \n+import java.util.ArrayList;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.ListIterator;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.area.Area;\n+import org.apache.fop.area.Block;\n import org.apache.fop.fo.flow.ListItem;\n import org.apache.fop.fo.flow.ListItemBody;\n import org.apache.fop.fo.flow.ListItemLabel;\n@@ -30,28 +38,21 @@\n import org.apache.fop.layoutmgr.ConditionalElementListener;\n import org.apache.fop.layoutmgr.ElementListObserver;\n import org.apache.fop.layoutmgr.ElementListUtils;\n-import org.apache.fop.layoutmgr.LayoutManager;\n+import org.apache.fop.layoutmgr.KnuthBox;\n+import org.apache.fop.layoutmgr.KnuthElement;\n+import org.apache.fop.layoutmgr.KnuthPenalty;\n+import org.apache.fop.layoutmgr.KnuthPossPosIter;\n import org.apache.fop.layoutmgr.LayoutContext;\n-import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.NonLeafPosition;\n+import org.apache.fop.layoutmgr.Position;\n+import org.apache.fop.layoutmgr.PositionIterator;\n import org.apache.fop.layoutmgr.RelSide;\n import org.apache.fop.layoutmgr.SpaceResolver;\n import org.apache.fop.layoutmgr.TraitSetter;\n-import org.apache.fop.layoutmgr.KnuthElement;\n-import org.apache.fop.layoutmgr.KnuthBox;\n-import org.apache.fop.layoutmgr.KnuthPenalty;\n-import org.apache.fop.layoutmgr.KnuthPossPosIter;\n-import org.apache.fop.area.Area;\n-import org.apache.fop.area.Block;\n import org.apache.fop.traits.MinOptMax;\n import org.apache.fop.traits.SpaceVal;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.LinkedList;\n-import java.util.ListIterator;\n-\n /**\n  * LayoutManager for a list-item FO.\n  * The list item contains a list item label and a list item body.\n@@ -72,8 +73,6 @@\n     private LinkedList labelList = null;\n     private LinkedList bodyList = null;\n \n-    private int listItemHeight;\n-    \n     private boolean discardBorderBefore;\n     private boolean discardBorderAfter;\n     private boolean discardPaddingBefore;\n@@ -83,7 +82,9 @@\n     \n     private boolean keepWithNextPendingOnLabel;\n     private boolean keepWithNextPendingOnBody;\n-  \n+\n+    private int listItemHeight;\n+    \n     private class ListItemPosition extends Position {\n         private int iLabelFirstIndex;\n         private int iLabelLastIndex;\n@@ -115,6 +116,11 @@ public int getBodyLastIndex() {\n             return iBodyLastIndex;\n         }\n         \n+        /** {@inheritDoc} */\n+        public boolean generatesAreas() {\n+            return true;\n+        }\n+\n         /** {@inheritDoc} */\n         public String toString() {\n             StringBuffer sb = new StringBuffer(\"ListItemPosition:\");\n@@ -301,12 +307,12 @@ private LinkedList getCombinedKnuthElementsForListItem(LinkedList labelElements,\n             int additionalPenaltyHeight = 0;\n             KnuthElement endEl = (KnuthElement)elementLists[0].get(end[0]);\n             if (endEl instanceof KnuthPenalty) {\n-                additionalPenaltyHeight = ((KnuthPenalty)endEl).getW();\n+                additionalPenaltyHeight = endEl.getW();\n             }\n             endEl = (KnuthElement)elementLists[1].get(end[1]);\n             if (endEl instanceof KnuthPenalty) {\n                 additionalPenaltyHeight = Math.max(\n-                        additionalPenaltyHeight, ((KnuthPenalty)endEl).getW());\n+                        additionalPenaltyHeight, endEl.getW());\n             }\n             \n             int boxHeight = step - addedBoxHeight - penaltyHeight;\n@@ -413,10 +419,10 @@ public LinkedList getChangedKnuthElements(List oldList, int alignment) {\n         // body\n         // \"unwrap\" the Positions stored in the elements\n         ListIterator oldListIterator = oldList.listIterator();\n-        KnuthElement oldElement = null;\n+        KnuthElement oldElement;\n         while (oldListIterator.hasNext()) {\n             oldElement = (KnuthElement)oldListIterator.next();\n-            Position innerPosition = ((NonLeafPosition) oldElement.getPosition()).getPosition();\n+            Position innerPosition = oldElement.getPosition().getPosition();\n             //log.debug(\" BLM> unwrapping: \" + (oldElement.isBox() \n             //  ? \"box    \" : (oldElement.isGlue() ? \"glue   \" : \"penalty\")) \n             //  + \" creato da \" + oldElement.getLayoutManager().getClass().getName());\n@@ -459,7 +465,7 @@ public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext) {\n         getParentArea(null);\n \n-        getPSLM().addIDToPage(getListItemFO().getId());\n+        addId();\n \n         LayoutContext lc = new LayoutContext(0);\n         Position firstPos = null;\n@@ -478,7 +484,7 @@ public void addAreas(PositionIterator parentIter,\n             }\n             if (pos instanceof NonLeafPosition && pos.getPosition() != null) {\n                 // pos contains a ListItemPosition created by this ListBlockLM\n-                positionList.add(((NonLeafPosition) pos).getPosition());\n+                positionList.add(pos.getPosition());\n             }\n         }\n \n@@ -510,7 +516,7 @@ public void addAreas(PositionIterator parentIter,\n             // set the space adjustment ratio\n             lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n             // TO DO: use the right stack limit for the label\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitBP(layoutContext.getStackLimitBP());\n             label.addAreas(labelIter, lc);\n         }\n \n@@ -531,7 +537,7 @@ public void addAreas(PositionIterator parentIter,\n             // set the space adjustment ratio\n             lc.setSpaceAdjust(layoutContext.getSpaceAdjust());\n             // TO DO: use the right stack limit for the body\n-            lc.setStackLimit(layoutContext.getStackLimit());\n+            lc.setStackLimitBP(layoutContext.getStackLimitBP());\n             body.addAreas(bodyIter, lc);\n         }\n \n@@ -554,7 +560,7 @@ public void addAreas(PositionIterator parentIter,\n         curBlockArea = null;\n         resetSpaces();\n         \n-        getPSLM().notifyEndOfLayout(((ListItem)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/list/ListItemLayoutManager.java",
                "sha": "c6b5b8cf954a7e1849036fe1db0714560797a23a",
                "status": "modified"
            },
            {
                "additions": 105,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/ActiveCell.java",
                "changes": 144,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/ActiveCell.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 39,
                "filename": "src/java/org/apache/fop/layoutmgr/table/ActiveCell.java",
                "patch": "@@ -33,6 +33,8 @@\n import org.apache.fop.layoutmgr.KnuthBox;\n import org.apache.fop.layoutmgr.KnuthElement;\n import org.apache.fop.layoutmgr.KnuthPenalty;\n+import org.apache.fop.layoutmgr.MinOptMaxUtil;\n+import org.apache.fop.traits.MinOptMax;\n \n /**\n  * A cell playing in the construction of steps for a row-group.\n@@ -133,6 +135,49 @@ public String toString() {\n         }\n     }\n \n+    // TODO to be removed along with the RowPainter#computeContentLength method\n+    /** See {@link ActiveCell#handleExplicitHeight(MinOptMax, MinOptMax)}. */\n+    private static class FillerPenalty extends KnuthPenalty {\n+\n+        private int contentLength;\n+\n+        FillerPenalty(KnuthPenalty p, int length) {\n+            super(length, p.getP(), p.isFlagged(), p.getBreakClass(),\n+                    p.getPosition(), p.isAuxiliary());\n+            contentLength = p.getW();\n+        }\n+\n+        FillerPenalty(int length) {\n+            super(length, 0, false, null, true);\n+            contentLength = 0;\n+        }\n+    }\n+\n+    /** See {@link ActiveCell#handleExplicitHeight(MinOptMax, MinOptMax)}. */\n+    private static class FillerBox extends KnuthBox {\n+        FillerBox(int length) {\n+            super(length, null, true);\n+        }\n+    }\n+\n+    /**\n+     * Returns the actual length of the content represented by the given element. In the\n+     * case where this element is used as a filler to match a row's fixed height, the\n+     * value returned by the getW() method will be higher than the actual content.\n+     * \n+     * @param el an element\n+     * @return the actual content length corresponding to the element\n+     */\n+    static int getElementContentLength(KnuthElement el) {\n+        if (el instanceof FillerPenalty) {\n+            return ((FillerPenalty) el).contentLength;\n+        } else if (el instanceof FillerBox) {\n+            return 0;\n+        } else {\n+            return el.getW();\n+        }\n+    }\n+\n     ActiveCell(PrimaryGridUnit pgu, EffRow row, int rowIndex, int previousRowsLength,\n             TableLayoutManager tableLM) {\n         this.pgu = pgu;\n@@ -149,23 +194,10 @@ public String toString() {\n                 + pgu.getBeforeBorderWidth(0, ConditionalBorder.REST);\n         bpAfterNormal = paddingAfterNormal + pgu.getAfterBorderWidth(ConditionalBorder.NORMAL);\n         bpAfterTrailing = paddingAfterTrailing + pgu.getAfterBorderWidth(0, ConditionalBorder.REST);\n-        boolean makeBoxForWholeRow = false;\n-        if (row.getExplicitHeight().min > 0) {\n-            boolean contentsSmaller = ElementListUtils.removeLegalBreaks(\n-                    pgu.getElements(), row.getExplicitHeight());\n-            if (contentsSmaller) {\n-                makeBoxForWholeRow = true;\n-            }\n-        }\n-        if (makeBoxForWholeRow) {\n-            elementList = new java.util.ArrayList(1);\n-            int height = row.getHeight().opt;\n-            height -= 2 * tableLM.getHalfBorderSeparationBPD();\n-            height -= bpBeforeNormal + bpAfterNormal;\n-            elementList.add(new KnuthBoxCellWithBPD(height));\n-        } else {\n-            elementList = pgu.getElements();\n-        }\n+        elementList = pgu.getElements();\n+        handleExplicitHeight(\n+                MinOptMaxUtil.toMinOptMax(pgu.getCell().getBlockProgressionDimension(), tableLM),\n+                row.getExplicitHeight());\n         knuthIter = elementList.listIterator();\n         includedLength = -1;  // Avoid troubles with cells having content of zero length\n         totalLength = previousRowsLength + ElementListUtils.calcContentLength(elementList);\n@@ -182,6 +214,46 @@ public String toString() {\n         }\n     }\n \n+    /**\n+     * Modifies the cell's element list by putting filler elements, so that the cell's or\n+     * row's explicit height is always reached.\n+     * \n+     * TODO this will work properly only for the first break. Then the limitation\n+     * explained on http://wiki.apache.org/xmlgraphics-fop/TableLayout/KnownProblems\n+     * occurs. The list of elements needs to be re-adjusted after each break.\n+     */\n+    private void handleExplicitHeight(MinOptMax cellBPD, MinOptMax rowBPD) {\n+        int minBPD = Math.max(cellBPD.min, rowBPD.min);\n+        if (minBPD > 0) {\n+            ListIterator iter = elementList.listIterator();\n+            int cumulateLength = 0;\n+            boolean prevIsBox = false;\n+            while (iter.hasNext() && cumulateLength < minBPD) {\n+                KnuthElement el = (KnuthElement) iter.next();\n+                if (el.isBox()) {\n+                    prevIsBox = true;\n+                    cumulateLength += el.getW();\n+                } else if (el.isGlue()) {\n+                    if (prevIsBox) {\n+                        elementList.add(iter.nextIndex() - 1,\n+                                new FillerPenalty(minBPD - cumulateLength));\n+                    }\n+                    prevIsBox = false;\n+                    cumulateLength += el.getW();\n+                } else {\n+                    prevIsBox = false;\n+                    if (cumulateLength + el.getW() < minBPD) {\n+                        iter.set(new FillerPenalty((KnuthPenalty) el, minBPD - cumulateLength));\n+                    }\n+                }\n+            }\n+        }\n+        int optBPD = Math.max(minBPD, Math.max(cellBPD.opt, rowBPD.opt));\n+        if (pgu.getContentLength() < optBPD) {\n+            elementList.add(new FillerBox(optBPD - pgu.getContentLength()));\n+        }\n+    }\n+\n     PrimaryGridUnit getPrimaryGridUnit() {\n         return pgu;\n     }\n@@ -265,14 +337,22 @@ int getFirstStep() {\n     }\n \n     /**\n-     * Returns the last step for this cell.\n+     * Returns the last step for this cell. This includes the normal border- and\n+     * padding-before, the whole content, the normal padding-after, and the\n+     * <em>trailing</em> after border. Indeed, if the normal border is taken instead,\n+     * and appears to be smaller than the trailing one, the last step may be smaller than\n+     * the current step (see TableStepper#considerRowLastStep). This will produce a wrong\n+     * infinite penalty, plus the cell's content won't be taken into account since the\n+     * final step will be smaller than the current one (see {@link #signalNextStep(int)}).\n+     * This actually means that the content will be swallowed.\n      * \n-     * @return the step including all of the cell's content plus the normal borders and paddings\n+     * @return the length of last step\n      */\n     int getLastStep() {\n         assert nextStep.end == elementList.size() - 1;\n         assert nextStep.contentLength == totalLength && nextStep.penaltyLength == 0;\n-        int lastStep = bpBeforeNormal + totalLength + bpAfterNormal;\n+        int lastStep = bpBeforeNormal + totalLength + paddingAfterNormal\n+                + pgu.getAfterBorderWidth(ConditionalBorder.LEADING_TRAILING);\n         log.debug(this + \": last step = \" + lastStep);\n         return lastStep;\n     }\n@@ -394,8 +474,12 @@ void nextRowStarts() {\n      */\n     void endRow(int rowIndex) {\n         if (endsOnRow(rowIndex)) {\n+            // Subtract the old value of bpAfterTrailing...\n+            nextStep.totalLength -= bpAfterTrailing;\n             bpAfterTrailing = paddingAfterNormal\n                     + pgu.getAfterBorderWidth(ConditionalBorder.LEADING_TRAILING);\n+            // ... and add the new one\n+            nextStep.totalLength += bpAfterTrailing;\n             lastCellPart = true;\n         } else {\n             bpBeforeLeading = paddingBeforeLeading\n@@ -445,13 +529,6 @@ CellPart createCellPart() {\n             return new CellPart(pgu, nextStep.start, previousStep.end, lastCellPart,\n                     0, 0, previousStep.penaltyLength,\n                     bpBeforeNormal, bpBeforeFirst, bpAfterNormal, bpAfterTrailing);\n-        } else if (nextStep.start == 0 && nextStep.end == 0\n-                && elementList.size() == 1\n-                && elementList.get(0) instanceof KnuthBoxCellWithBPD) {\n-            //Special case: Cell with fixed BPD\n-            return new CellPart(pgu, 0, pgu.getElements().size() - 1, lastCellPart,\n-                    nextStep.condBeforeContentLength, length, nextStep.penaltyLength,\n-                    bpBeforeNormal, bpBeforeFirst, bpAfterNormal, bpAfterTrailing);\n         } else {\n             return new CellPart(pgu, nextStep.start, nextStep.end, lastCellPart,\n                     nextStep.condBeforeContentLength, length, nextStep.penaltyLength,\n@@ -463,20 +540,9 @@ boolean keepWithNextSignal() {\n         return keepWithNextSignal;\n     }\n \n-    \n+\n     /** {@inheritDoc} */\n     public String toString() {\n         return \"Cell \" + (pgu.getRowIndex() + 1) + \".\" + (pgu.getColIndex() + 1);\n     }\n-\n-\n-    /**\n-     * Marker class denoting table cells fitting in just one box (no legal break inside).\n-     */\n-    private static class KnuthBoxCellWithBPD extends KnuthBox {\n-\n-        public KnuthBoxCellWithBPD(int w) {\n-            super(w, null, true);\n-        }\n-    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/ActiveCell.java",
                "sha": "61d0f8e6f793e396838fb5934ab7d7b4a57dbd78",
                "status": "modified"
            },
            {
                "additions": 101,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "changes": 220,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 119,
                "filename": "src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "patch": "@@ -19,16 +19,16 @@\n \n package org.apache.fop.layoutmgr.table;\n \n+import java.util.Iterator;\n import java.util.LinkedList;\n-import java.util.List;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.table.EffRow;\n import org.apache.fop.fo.flow.table.GridUnit;\n import org.apache.fop.fo.flow.table.PrimaryGridUnit;\n+import org.apache.fop.fo.flow.table.TableColumn;\n import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n@@ -94,137 +94,119 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment, int\n     private void createElementsForRowGroup(LayoutContext context, int alignment, \n             int bodyType, LinkedList returnList) {\n         log.debug(\"Handling row group with \" + rowGroup.length + \" rows...\");\n+        EffRow row;\n+        for (int rgi = 0; rgi < rowGroup.length; rgi++) {\n+            row = rowGroup[rgi];\n+            for (Iterator iter = row.getGridUnits().iterator(); iter.hasNext();) {\n+                GridUnit gu = (GridUnit) iter.next();\n+                if (gu.isPrimary()) {\n+                    PrimaryGridUnit primary = gu.getPrimary();\n+                    // TODO a new LM must be created for every new static-content\n+                    primary.createCellLM();\n+                    primary.getCellLM().setParent(tableLM);\n+                    //Calculate width of cell\n+                    int spanWidth = 0;\n+                    Iterator colIter = tableLM.getTable().getColumns().listIterator(\n+                            primary.getColIndex());\n+                    for (int i = 0, c = primary.getCell().getNumberColumnsSpanned(); i < c; i++) {\n+                        spanWidth += ((TableColumn) colIter.next()).getColumnWidth().getValue(\n+                                tableLM);\n+                    }\n+                    LayoutContext childLC = new LayoutContext(0);\n+                    childLC.setStackLimitBP(context.getStackLimitBP()); //necessary?\n+                    childLC.setRefIPD(spanWidth);\n+                    \n+                    //Get the element list for the cell contents\n+                    LinkedList elems = primary.getCellLM().getNextKnuthElements(\n+                                            childLC, alignment);\n+                    ElementListObserver.observe(elems, \"table-cell\", primary.getCell().getId());\n+                    primary.setElements(elems);\n+                }\n+            }\n+        }\n+        computeRowHeights();\n+        LinkedList elements = tableStepper.getCombinedKnuthElementsForRowGroup(context,\n+                rowGroup, bodyType);\n+        returnList.addAll(elements);\n+    }\n+\n+    /**\n+     * Calculate the heights of the rows in the row group, see CSS21, 17.5.3 Table height\n+     * algorithms.\n+     * \n+     * TODO this method will need to be adapted once clarification has been made by the\n+     * W3C regarding whether borders or border-separation must be included or not\n+     */\n+    private void computeRowHeights() {\n+        log.debug(\"rowGroup:\");\n         MinOptMax[] rowHeights = new MinOptMax[rowGroup.length];\n-        MinOptMax[] explicitRowHeights = new MinOptMax[rowGroup.length];\n         EffRow row;\n-        List pgus = new java.util.ArrayList(); //holds a list of a row's primary grid units\n         for (int rgi = 0; rgi < rowGroup.length; rgi++) {\n             row = rowGroup[rgi];\n-            rowHeights[rgi] = new MinOptMax(0, 0, Integer.MAX_VALUE);\n-            explicitRowHeights[rgi] = new MinOptMax(0, 0, Integer.MAX_VALUE);\n-            \n-            pgus.clear();\n-            TableRow tableRow = null;\n-            // The row's minimum content height; 0 if the row's height is auto, otherwise\n-            // the .minimum component of the explicitly specified value\n-            int minRowBPD = 0;\n             // The BPD of the biggest cell in the row\n-            int maxCellBPD = 0;\n-            for (int j = 0; j < row.getGridUnits().size(); j++) {\n-                GridUnit gu = row.getGridUnit(j);\n-                if ((gu.isPrimary() || (gu.getColSpanIndex() == 0 && gu.isLastGridUnitRowSpan())) \n-                        && !gu.isEmpty()) {\n+//            int maxCellBPD = 0;\n+            MinOptMax explicitRowHeight;\n+            TableRow tableRowFO = rowGroup[rgi].getTableRow();\n+            if (tableRowFO == null) {\n+                rowHeights[rgi] = new MinOptMax(0, 0, Integer.MAX_VALUE);\n+                explicitRowHeight = new MinOptMax(0, 0, Integer.MAX_VALUE);\n+            } else {\n+                LengthRangeProperty rowBPD = tableRowFO.getBlockProgressionDimension();\n+                rowHeights[rgi] = MinOptMaxUtil.toMinOptMax(rowBPD, tableLM);\n+                explicitRowHeight = MinOptMaxUtil.toMinOptMax(rowBPD, tableLM);\n+            }\n+            for (Iterator iter = row.getGridUnits().iterator(); iter.hasNext();) {\n+                GridUnit gu = (GridUnit) iter.next();\n+                if (!gu.isEmpty() && gu.getColSpanIndex() == 0 && gu.isLastGridUnitRowSpan()) {\n                     PrimaryGridUnit primary = gu.getPrimary();\n-                    \n-                    if (gu.isPrimary()) {\n-                        // TODO a new LM must be created for every new static-content\n-                        primary.createCellLM();\n-                        primary.getCellLM().setParent(tableLM);\n-                     \n-                        //Determine the table-row if any\n-                        if (tableRow == null && primary.getRow() != null) {\n-                            tableRow = primary.getRow();\n-                            \n-                            //Check for bpd on row, see CSS21, 17.5.3 Table height algorithms\n-                            LengthRangeProperty rowBPD = tableRow.getBlockProgressionDimension();\n-                            if (!rowBPD.getMinimum(tableLM).isAuto()) {\n-                                minRowBPD = Math.max(minRowBPD,\n-                                        rowBPD.getMinimum(tableLM).getLength().getValue(tableLM));\n-                            }\n-                            MinOptMaxUtil.restrict(explicitRowHeights[rgi], rowBPD, tableLM);\n-                            \n-                        }\n-\n-                        //Calculate width of cell\n-                        int spanWidth = 0;\n-                        for (int i = primary.getColIndex(); \n-                                i < primary.getColIndex() \n-                                        + primary.getCell().getNumberColumnsSpanned();\n-                                i++) {\n-                            if (tableLM.getColumns().getColumn(i + 1) != null) {\n-                                spanWidth += tableLM.getColumns().getColumn(i + 1)\n-                                    .getColumnWidth().getValue(tableLM);\n-                            }\n-                        }\n-                        LayoutContext childLC = new LayoutContext(0);\n-                        childLC.setStackLimit(context.getStackLimit()); //necessary?\n-                        childLC.setRefIPD(spanWidth);\n-                        \n-                        //Get the element list for the cell contents\n-                        LinkedList elems = primary.getCellLM().getNextKnuthElements(\n-                                                childLC, alignment);\n-                        ElementListObserver.observe(elems, \"table-cell\", primary.getCell().getId());\n-                        primary.setElements(elems);\n+                    int effectiveCellBPD = 0;\n+                    LengthRangeProperty cellBPD = primary.getCell().getBlockProgressionDimension();\n+                    if (!cellBPD.getMinimum(tableLM).isAuto()) {\n+                        effectiveCellBPD = cellBPD.getMinimum(tableLM).getLength()\n+                                .getValue(tableLM);\n                     }\n-\n-                    //Calculate height of row, see CSS21, 17.5.3 Table height algorithms\n-                    if (gu.isLastGridUnitRowSpan()) {\n-                        // The effective cell's bpd, after taking into account bpd\n-                        // (possibly explicitly) set on the row or on the cell, and the\n-                        // cell's content length\n-                        int effectiveCellBPD = minRowBPD;\n-                        LengthRangeProperty cellBPD = primary.getCell()\n-                                .getBlockProgressionDimension();\n-                        if (!cellBPD.getMinimum(tableLM).isAuto()) {\n-                            effectiveCellBPD = Math.max(effectiveCellBPD,\n-                                    cellBPD.getMinimum(tableLM).getLength().getValue(tableLM));\n-                        }\n-                        if (!cellBPD.getOptimum(tableLM).isAuto()) {\n-                            effectiveCellBPD = Math.max(effectiveCellBPD,\n-                                    cellBPD.getOptimum(tableLM).getLength().getValue(tableLM));\n-                        }\n-                        if (gu.getRowSpanIndex() == 0) {\n-                            //TODO ATM only non-row-spanned cells are taken for this\n-                            MinOptMaxUtil.restrict(explicitRowHeights[rgi], cellBPD, tableLM);\n-                        }\n-                        effectiveCellBPD = Math.max(effectiveCellBPD, \n-                                primary.getContentLength());\n-                        \n-                        int borderWidths = primary.getBeforeAfterBorderWidth();\n-                        int padding = 0;\n-                        maxCellBPD = Math.max(maxCellBPD, effectiveCellBPD);\n-                        CommonBorderPaddingBackground cbpb \n-                            = primary.getCell().getCommonBorderPaddingBackground(); \n-                        padding += cbpb.getPaddingBefore(false, primary.getCellLM());\n-                        padding += cbpb.getPaddingAfter(false, primary.getCellLM());\n-                        int effRowHeight = effectiveCellBPD \n-                                + padding + borderWidths;\n-                        for (int previous = 0; previous < gu.getRowSpanIndex(); previous++) {\n-                            effRowHeight -= rowHeights[rgi - previous - 1].opt;\n-                        }\n-                        if (effRowHeight > rowHeights[rgi].min) {\n-                            //This is the new height of the (grid) row\n-                            MinOptMaxUtil.extendMinimum(rowHeights[rgi], effRowHeight, false);\n-                        }\n+                    if (!cellBPD.getOptimum(tableLM).isAuto()) {\n+                        effectiveCellBPD = cellBPD.getOptimum(tableLM).getLength()\n+                                .getValue(tableLM);\n                     }\n-                    \n-                    if (gu.isPrimary()) {\n-                        pgus.add(primary);\n+                    if (gu.getRowSpanIndex() == 0) {\n+                        effectiveCellBPD = Math.max(effectiveCellBPD, explicitRowHeight.opt);\n+                    }\n+                    effectiveCellBPD = Math.max(effectiveCellBPD, primary.getContentLength());\n+                    int borderWidths = primary.getBeforeAfterBorderWidth();\n+                    int padding = 0;\n+                    CommonBorderPaddingBackground cbpb = primary.getCell()\n+                            .getCommonBorderPaddingBackground(); \n+                    padding += cbpb.getPaddingBefore(false, primary.getCellLM());\n+                    padding += cbpb.getPaddingAfter(false, primary.getCellLM());\n+                    int effRowHeight = effectiveCellBPD + padding + borderWidths;\n+                    for (int prev = rgi - 1; prev >= rgi - gu.getRowSpanIndex(); prev--) {\n+                        effRowHeight -= rowHeights[prev].opt;\n+                    }\n+                    if (effRowHeight > rowHeights[rgi].min) {\n+                        // This is the new height of the (grid) row\n+                        MinOptMaxUtil.extendMinimum(rowHeights[rgi], effRowHeight);\n                     }\n                 }\n             }\n \n             row.setHeight(rowHeights[rgi]);\n-            row.setExplicitHeight(explicitRowHeights[rgi]);\n-            if (maxCellBPD > row.getExplicitHeight().max) {\n-                log.warn(FONode.decorateWithContextInfo(\n-                        \"The contents of row \" + (row.getIndex() + 1) \n-                        + \" are taller than they should be (there is a\"\n-                        + \" block-progression-dimension or height constraint on the indicated row).\"\n-                        + \" Due to its contents the row grows\"\n-                        + \" to \" + maxCellBPD + \" millipoints, but the row shouldn't get\"\n-                        + \" any taller than \" + row.getExplicitHeight() + \" millipoints.\", \n-                        row.getTableRow()));\n-            }\n-        }\n-        if (log.isDebugEnabled()) {\n-            log.debug(\"rowGroup:\");\n-            for (int i = 0; i < rowHeights.length; i++) {\n-                log.debug(\"  height=\" + rowHeights[i] + \" explicit=\" + explicitRowHeights[i]);\n+            row.setExplicitHeight(explicitRowHeight);\n+            // TODO re-enable and improve after clarification\n+//            if (maxCellBPD > row.getExplicitHeight().max) {\n+//                log.warn(FONode.decorateWithContextInfo(\n+//                        \"The contents of row \" + (row.getIndex() + 1) \n+//                        + \" are taller than they should be (there is a\"\n+//                        + \" block-progression-dimension or height constraint\n+//                        + \" on the indicated row).\"\n+//                        + \" Due to its contents the row grows\"\n+//                        + \" to \" + maxCellBPD + \" millipoints, but the row shouldn't get\"\n+//                        + \" any taller than \" + row.getExplicitHeight() + \" millipoints.\", \n+//                        row.getTableRow()));\n+//            }\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"  height=\" + rowHeights[rgi] + \" explicit=\" + explicitRowHeight);\n             }\n         }\n-        LinkedList elements = tableStepper.getCombinedKnuthElementsForRowGroup(context,\n-                rowGroup, bodyType);\n-        returnList.addAll(elements);\n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "sha": "9c97ca8270f945bc8945ca266ca0aa380ee39af4",
                "status": "modified"
            },
            {
                "additions": 98,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/RowPainter.java",
                "changes": 116,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/RowPainter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/layoutmgr/table/RowPainter.java",
                "patch": "@@ -23,25 +23,27 @@\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.ListIterator;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.fop.area.Block;\n import org.apache.fop.fo.flow.table.ConditionalBorder;\n import org.apache.fop.fo.flow.table.EffRow;\n import org.apache.fop.fo.flow.table.GridUnit;\n import org.apache.fop.fo.flow.table.PrimaryGridUnit;\n-import org.apache.fop.fo.flow.table.TableRow;\n+import org.apache.fop.fo.flow.table.TableBody;\n+import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.layoutmgr.ElementListUtils;\n import org.apache.fop.layoutmgr.KnuthElement;\n import org.apache.fop.layoutmgr.KnuthPossPosIter;\n import org.apache.fop.layoutmgr.LayoutContext;\n import org.apache.fop.layoutmgr.SpaceResolver;\n+import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.traits.BorderProps;\n \n class RowPainter {\n     private static Log log = LogFactory.getLog(RowPainter.class);\n-    /** The fo:table-row containing the currently handled grid rows. */\n-    private TableRow rowFO = null;\n     private int colCount;\n     private int currentRowOffset = 0;\n     /** Currently handled row (= last encountered row). */\n@@ -71,6 +73,13 @@\n     private CellPart[] firstCellParts;\n     private CellPart[] lastCellParts;\n \n+    /** y-offset of the current table part. */\n+    private int tablePartOffset = 0;\n+    /** See {@link RowPainter#registerPartBackgroundArea(Block)}. */\n+    private CommonBorderPaddingBackground tablePartBackground;\n+    /** See {@link RowPainter#registerPartBackgroundArea(Block)}. */\n+    private List tablePartBackgroundAreas;\n+\n     private TableContentLayoutManager tclm;\n \n     RowPainter(TableContentLayoutManager tclm, LayoutContext layoutContext) {\n@@ -85,6 +94,44 @@\n         this.firstRowOnPageIndex = -1;\n     }\n \n+    void startTablePart(TableBody tablePart) {\n+        CommonBorderPaddingBackground background = tablePart.getCommonBorderPaddingBackground();\n+        if (background.hasBackground()) {\n+            tablePartBackground = background;\n+            if (tablePartBackgroundAreas == null) {\n+                tablePartBackgroundAreas = new ArrayList();\n+            }\n+        }\n+        tablePartOffset = currentRowOffset;\n+    }\n+\n+    /**\n+     * Signals that the end of the current table part is reached.\n+     * \n+     * @param lastInBody true if the part is the last table-body element to be displayed\n+     * on the current page. In which case all the cells must be flushed even if they\n+     * aren't finished, plus the proper collapsed borders must be selected (trailing\n+     * instead of normal, or rest if the cell is unfinished)\n+     * @param lastOnPage true if the part is the last to be displayed on the current page.\n+     * In which case collapsed after borders for the cells on the last row must be drawn\n+     * in the outer mode\n+     */\n+    void endTablePart(boolean lastInBody, boolean lastOnPage) {\n+        addAreasAndFlushRow(lastInBody, lastOnPage);\n+    \n+        if (tablePartBackground != null) {\n+            TableLayoutManager tableLM = tclm.getTableLM();\n+            for (Iterator iter = tablePartBackgroundAreas.iterator(); iter.hasNext();) {\n+                Block backgroundArea = (Block) iter.next();\n+                TraitSetter.addBackground(backgroundArea, tablePartBackground, tableLM,\n+                        -backgroundArea.getXOffset(), tablePartOffset - backgroundArea.getYOffset(),\n+                        tableLM.getContentAreaIPD(), currentRowOffset - tablePartOffset);\n+            }\n+            tablePartBackground = null;\n+            tablePartBackgroundAreas.clear();\n+        }\n+    }\n+\n     int getAccumulatedBPD() {\n         return currentRowOffset;\n     }\n@@ -108,7 +155,6 @@ void handleTableContentPosition(TableContentPosition tcpos) {\n                 currentRow = row;\n             }\n         }\n-        rowFO = currentRow.getTableRow();\n         if (firstRowIndex < 0) {\n             firstRowIndex = currentRow.getIndex();\n             if (firstRowOnPageIndex < 0) {\n@@ -148,7 +194,7 @@ void handleTableContentPosition(TableContentPosition tcpos) {\n      * displayed on the current page. In which case collapsed after borders must be drawn\n      * in the outer mode\n      */\n-    void addAreasAndFlushRow(boolean lastInPart, boolean lastOnPage) {\n+    private void addAreasAndFlushRow(boolean lastInPart, boolean lastOnPage) {\n         if (log.isDebugEnabled()) {\n             log.debug(\"Remembering yoffset for row \" + currentRow.getIndex() + \": \"\n                     + currentRowOffset);\n@@ -182,8 +228,6 @@ void addAreasAndFlushRow(boolean lastInPart, boolean lastOnPage) {\n         }\n \n         // Then add areas for cells finishing on the current row\n-        tclm.addRowBackgroundArea(rowFO, actualRowHeight, layoutContext.getRefIPD(),\n-                currentRowOffset);\n         for (int i = 0; i < colCount; i++) {\n             GridUnit currentGU = currentRow.getGridUnit(i);            \n             if (!currentGU.isEmpty() && currentGU.getColSpanIndex() == 0\n@@ -255,18 +299,22 @@ private int computeContentLength(PrimaryGridUnit pgu, int startIndex, int endInd\n              // cell, in most cases)\n             return 0;\n         } else {\n-            int actualStart = startIndex;\n+            ListIterator iter = pgu.getElements().listIterator(startIndex);\n             // Skip from the content length calculation glues and penalties occurring at the\n             // beginning of the page\n-            while (actualStart <= endIndex\n-                    && !((KnuthElement) pgu.getElements().get(actualStart)).isBox()) {\n-                actualStart++;\n+            boolean nextIsBox = false;\n+            while (iter.nextIndex() <= endIndex && !nextIsBox) {\n+                nextIsBox = ((KnuthElement) iter.next()).isBox();\n             }\n-            int len = ElementListUtils.calcContentLength(\n-                    pgu.getElements(), actualStart, endIndex);\n-            KnuthElement el = (KnuthElement)pgu.getElements().get(endIndex);\n-            if (el.isPenalty()) {\n-                len += el.getW();\n+            int len = 0;\n+            if (((KnuthElement) iter.previous()).isBox()) {\n+                while (iter.nextIndex() < endIndex) {\n+                    KnuthElement el = (KnuthElement) iter.next();\n+                    if (el.isBox() || el.isGlue()) {\n+                        len += el.getW();\n+                    }\n+                }\n+                len += ActiveCell.getElementContentLength((KnuthElement) iter.next());\n             }\n             return len;\n         }\n@@ -278,8 +326,20 @@ private void addAreasForCell(PrimaryGridUnit pgu, int startPos, int endPos,\n          * Determine the index of the first row of this cell that will be displayed on the\n          * current page.\n          */\n-        int startRowIndex = Math.max(pgu.getRowIndex(), firstRowIndex);\n         int currentRowIndex = currentRow.getIndex();\n+        int startRowIndex;\n+        int firstRowHeight;\n+        if (pgu.getRowIndex() >= firstRowIndex) {\n+            startRowIndex = pgu.getRowIndex();\n+            if (startRowIndex < currentRowIndex) {\n+                firstRowHeight = getRowOffset(startRowIndex + 1) - getRowOffset(startRowIndex);\n+            } else {\n+                firstRowHeight = rowHeight;\n+            }\n+        } else {\n+            startRowIndex = firstRowIndex;\n+            firstRowHeight = 0;\n+        }\n \n         /*\n          * In collapsing-border model, if the cell spans over several columns/rows then\n@@ -319,7 +379,25 @@ private void addAreasForCell(PrimaryGridUnit pgu, int startPos, int endPos,\n         cellLM.addAreas(new KnuthPossPosIter(pgu.getElements(), startPos, endPos + 1),\n                 layoutContext, spannedGridRowHeights, startRowIndex - pgu.getRowIndex(),\n                 currentRowIndex - pgu.getRowIndex(), borderBeforeWhich, borderAfterWhich,\n-                startRowIndex == firstRowOnPageIndex, lastOnPage);\n+                startRowIndex == firstRowOnPageIndex, lastOnPage, this, firstRowHeight);\n+    }\n+\n+\n+    /**\n+     * Registers the given area, that will be used to render the part of\n+     * table-header/footer/body background covered by a table-cell. If percentages are\n+     * used to place the background image, the final bpd of the (fraction of) table part\n+     * that will be rendered on the current page must be known. The traits can't then be\n+     * set when the areas for the cell are created since at that moment this bpd is yet\n+     * unknown. So they will instead be set in\n+     * {@link #addAreasAndFlushRow(boolean, boolean)}.\n+     * \n+     * @param backgroundArea the block of the cell's dimensions that will hold the part\n+     * background\n+     */\n+    void registerPartBackgroundArea(Block backgroundArea) {\n+        tclm.getTableLM().addBackgroundArea(backgroundArea);\n+        tablePartBackgroundAreas.add(backgroundArea);\n     }\n \n     /**\n@@ -357,11 +435,13 @@ private int getRowOffset(int rowIndex) {\n     }\n \n     // TODO get rid of that\n+    /** Signals that the first table-body instance has started. */\n     void startBody() {\n         Arrays.fill(firstCellOnPage, true);\n     }\n \n     // TODO get rid of that\n+    /** Signals that the last table-body instance has ended. */\n     void endBody() {\n         Arrays.fill(firstCellOnPage, false);\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/RowPainter.java",
                "sha": "bed9c53ae659725b648da2c8668207e6fee7e2a0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableAndCaptionLayoutManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableAndCaptionLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableAndCaptionLayoutManager.java",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n import org.apache.fop.layoutmgr.LayoutContext;\n import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.Position;\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n \n@@ -36,8 +35,7 @@\n  * @todo Implement getNextKnuthElements()\n  */\n public class TableAndCaptionLayoutManager extends BlockStackingLayoutManager {\n-    private TableAndCaption fobj;\n-    \n+\n     private Block curBlockArea;\n \n     //private List childBreaks = new java.util.ArrayList();\n@@ -48,7 +46,6 @@\n      */\n     public TableAndCaptionLayoutManager(TableAndCaption node) {\n         super(node);\n-        fobj = node;\n     }\n \n     /**\n@@ -134,7 +131,7 @@ public BreakPoss getNextBreakPoss(LayoutContext context) {\n     public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext) {\n         getParentArea(null);\n-        getPSLM().addIDToPage(fobj.getId());\n+        addId();\n \n         /* TODO: Reimplement using Knuth approach\n         LayoutManager childLM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableAndCaptionLayoutManager.java",
                "sha": "2e5bbdf1fdc871ad7a6a5af975f7e19c3f3581a2",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableCaptionLayoutManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableCaptionLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableCaptionLayoutManager.java",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n import org.apache.fop.layoutmgr.LayoutContext;\n import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.Position;\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n \n@@ -34,7 +33,6 @@\n  * @todo Implement getNextKnuthElements()\n  */\n public class TableCaptionLayoutManager extends BlockStackingLayoutManager {\n-    private TableCaption fobj;\n \n     private Block curBlockArea;\n \n@@ -46,7 +44,6 @@\n      */\n     public TableCaptionLayoutManager(TableCaption node) {\n         super(node);\n-        fobj = node;\n     }\n \n     /**\n@@ -133,7 +130,7 @@ public BreakPoss getNextBreakPoss(LayoutContext context) {\n     public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext) {\n         getParentArea(null);\n-        getPSLM().addIDToPage(fobj.getId());\n+        addId();\n \n         /* TODO: Reimplement using Knuth approach\n         LayoutManager childLM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableCaptionLayoutManager.java",
                "sha": "674fd9a90f34187564420aa9aba6a19890402086",
                "status": "modified"
            },
            {
                "additions": 75,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableCellLayoutManager.java",
                "changes": 123,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableCellLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 48,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableCellLayoutManager.java",
                "patch": "@@ -23,16 +23,19 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.area.Trait;\n import org.apache.fop.datatypes.PercentBaseContext;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.table.ConditionalBorder;\n import org.apache.fop.fo.flow.table.GridUnit;\n import org.apache.fop.fo.flow.table.PrimaryGridUnit;\n import org.apache.fop.fo.flow.table.Table;\n+import org.apache.fop.fo.flow.table.TableBody;\n import org.apache.fop.fo.flow.table.TableCell;\n+import org.apache.fop.fo.flow.table.TableColumn;\n+import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground.BorderInfo;\n import org.apache.fop.layoutmgr.AreaAdditionUtil;\n@@ -71,9 +74,8 @@\n     private int xoffset;\n     private int yoffset;\n     private int cellIPD;\n-    private int rowHeight;\n+    private int totalHeight;\n     private int usedBPD;\n-    private int borderAndPaddingBPD;\n     private boolean emptyCell = true;\n \n     /**\n@@ -96,31 +98,11 @@ private boolean isSeparateBorderModel() {\n         return getTable().isSeparateBorderModel();\n     }\n \n-    /** {@inheritDoc} */\n-    public void initialize() {\n-        borderAndPaddingBPD = 0;\n-        borderAndPaddingBPD += getTableCell()\n-            .getCommonBorderPaddingBackground().getBorderBeforeWidth(false);\n-        borderAndPaddingBPD += getTableCell()\n-            .getCommonBorderPaddingBackground().getBorderAfterWidth(false);\n-        if (!isSeparateBorderModel()) {\n-            borderAndPaddingBPD /= 2;\n-        }\n-        borderAndPaddingBPD += getTableCell().getCommonBorderPaddingBackground()\n-                .getPaddingBefore(false, this);\n-        borderAndPaddingBPD += getTableCell().getCommonBorderPaddingBackground()\n-                .getPaddingAfter(false, this);\n-    }\n-\n     /**\n      * @return the table owning this cell\n      */\n     public Table getTable() {\n-        FONode node = fobj.getParent();\n-        while (!(node instanceof Table)) {\n-            node = node.getParent();\n-        }\n-        return (Table)node;\n+        return getTableCell().getTable();\n     }\n \n \n@@ -148,13 +130,13 @@ protected int getIPIndents() {\n      * {@inheritDoc}\n      */\n     public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n-        MinOptMax stackLimit = new MinOptMax(context.getStackLimit());\n+        MinOptMax stackLimit = new MinOptMax(context.getStackLimitBP());\n \n         referenceIPD = context.getRefIPD();\n         cellIPD = referenceIPD;\n         cellIPD -= getIPIndents();\n \n-        LinkedList returnedList = null;\n+        LinkedList returnedList;\n         LinkedList contentList = new LinkedList();\n         LinkedList returnList = new LinkedList();\n \n@@ -163,8 +145,8 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         while ((curLM = (BlockLevelLayoutManager) getChildLM()) != null) {\n             LayoutContext childLC = new LayoutContext(0);\n             // curLM is a ?\n-            childLC.setStackLimit(MinOptMax.subtract(context\n-                    .getStackLimit(), stackLimit));\n+            childLC.setStackLimitBP(MinOptMax.subtract(context\n+                    .getStackLimitBP(), stackLimit));\n             childLC.setRefIPD(cellIPD);\n \n             // get elements from curLM\n@@ -260,7 +242,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             p.setP(0);\n         }\n \n-        getPSLM().notifyEndOfLayout(((TableCell)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n \n         setFinished(true);\n         return returnList;\n@@ -303,7 +285,7 @@ public void setContentHeight(int h) {\n      * @param h the height of cell\n      */\n     public void setTotalHeight(int h) {\n-        rowHeight = h;\n+        totalHeight = h;\n     }\n \n     /**\n@@ -330,6 +312,10 @@ public void setTotalHeight(int h) {\n      * which case collapsed before borders must be drawn in the outer mode\n      * @param lastOnPage true if the cell will be the very last one on the page, in which\n      * case collapsed after borders must be drawn in the outer mode\n+     * @param painter painter\n+     * @param firstRowHeight height of the first row spanned by this cell (may be zero if\n+     * this row is placed on a previous page). Used to calculate the placement of the\n+     * row's background image if any\n      */\n     public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext,\n@@ -339,13 +325,25 @@ public void addAreas(PositionIterator parentIter,\n                          int borderBeforeWhich,\n                          int borderAfterWhich,\n                          boolean firstOnPage,\n-                         boolean lastOnPage) {\n+                         boolean lastOnPage,\n+                         RowPainter painter,\n+                         int firstRowHeight) {\n         getParentArea(null);\n \n-        getPSLM().addIDToPage(getTableCell().getId());\n+        addId();\n \n         int borderBeforeWidth = primaryGridUnit.getBeforeBorderWidth(startRow, borderBeforeWhich);\n         int borderAfterWidth = primaryGridUnit.getAfterBorderWidth(endRow, borderAfterWhich);\n+\n+        CommonBorderPaddingBackground padding = primaryGridUnit.getCell()\n+                .getCommonBorderPaddingBackground();\n+        int paddingRectBPD = totalHeight - borderBeforeWidth - borderAfterWidth; \n+        int cellBPD = paddingRectBPD;\n+        cellBPD -= padding.getPaddingBefore(borderBeforeWhich == ConditionalBorder.REST, this);\n+        cellBPD -= padding.getPaddingAfter(borderAfterWhich == ConditionalBorder.REST, this);\n+\n+        addBackgroundAreas(painter, firstRowHeight, borderBeforeWidth, paddingRectBPD);\n+\n         if (isSeparateBorderModel()) {\n             if (!emptyCell || getTableCell().showEmptyCells()) {\n                 if (borderBeforeWidth > 0) {\n@@ -421,7 +419,7 @@ public void addAreas(PositionIterator parentIter,\n                     int dx = xoffset;\n                     for (int x = 0; x < gridUnits.length; x++) {\n                         int ipd = getTable().getColumn(primaryGridUnit.getColIndex() + x)\n-                                .getColumnWidth().getValue((PercentBaseContext) getParent());\n+                                .getColumnWidth().getValue(getParent());\n                         if (blocks[y][x] != null) {\n                             Block block = blocks[y][x];\n                             adjustYOffset(block, dy);\n@@ -437,18 +435,12 @@ public void addAreas(PositionIterator parentIter,\n             }\n         }\n \n-        CommonBorderPaddingBackground padding = primaryGridUnit.getCell()\n-                .getCommonBorderPaddingBackground();\n         TraitSetter.addPadding(curBlockArea,\n                 padding,\n                 borderBeforeWhich == ConditionalBorder.REST,\n                 borderAfterWhich == ConditionalBorder.REST,\n                 false, false, this);\n \n-        int cellBPD = rowHeight - borderBeforeWidth - borderAfterWidth;\n-        cellBPD -= padding.getPaddingBefore(borderBeforeWhich == ConditionalBorder.REST, this);\n-        cellBPD -= padding.getPaddingAfter(borderAfterWhich == ConditionalBorder.REST, this);\n-\n         //Handle display-align\n         if (usedBPD < cellBPD) {\n             if (getTableCell().getDisplayAlign() == EN_CENTER) {\n@@ -468,23 +460,43 @@ public void addAreas(PositionIterator parentIter,\n         curBlockArea.setBPD(cellBPD);\n \n         // Add background after we know the BPD\n-        if (isSeparateBorderModel()) {\n-            if (!emptyCell || getTableCell().showEmptyCells()) {\n-                TraitSetter.addBackground(curBlockArea,\n-                        getTableCell().getCommonBorderPaddingBackground(),\n-                        this);\n-            }\n-        } else {\n+        if (!isSeparateBorderModel() || !emptyCell || getTableCell().showEmptyCells()) {\n             TraitSetter.addBackground(curBlockArea,\n-                    getTableCell().getCommonBorderPaddingBackground(),\n-                    this);\n+                    getTableCell().getCommonBorderPaddingBackground(), this);\n         }\n \n         flush();\n \n         curBlockArea = null;\n     }\n \n+    /** Adds background areas for the column, body and row, if any. */\n+    private void addBackgroundAreas(RowPainter painter, int firstRowHeight, int borderBeforeWidth,\n+            int paddingRectBPD) {\n+        TableColumn column = getTable().getColumn(primaryGridUnit.getColIndex());\n+        if (column.getCommonBorderPaddingBackground().hasBackground()) {\n+            Block colBackgroundArea = getBackgroundArea(paddingRectBPD, borderBeforeWidth);\n+            ((TableLayoutManager) parentLM).registerColumnBackgroundArea(column, colBackgroundArea,\n+                    -startIndent);\n+        }\n+\n+        TableBody body = primaryGridUnit.getTableBody();\n+        if (body.getCommonBorderPaddingBackground().hasBackground()) {\n+            painter.registerPartBackgroundArea(\n+                    getBackgroundArea(paddingRectBPD, borderBeforeWidth));\n+        }\n+\n+        TableRow row = primaryGridUnit.getRow();\n+        if (row != null && row.getCommonBorderPaddingBackground().hasBackground()) {\n+            Block rowBackgroundArea = getBackgroundArea(paddingRectBPD, borderBeforeWidth);\n+            ((TableLayoutManager) parentLM).addBackgroundArea(rowBackgroundArea);\n+            TraitSetter.addBackground(rowBackgroundArea, row.getCommonBorderPaddingBackground(),\n+                    parentLM,\n+                    -xoffset - startIndent, -borderBeforeWidth,\n+                    parentLM.getContentAreaIPD(), firstRowHeight);\n+        }\n+    }\n+\n     private void addBorder(Block[][] blocks, int i, int j, Integer side, BorderInfo border,\n             boolean outer) {\n         if (blocks[i][j] == null) {\n@@ -513,6 +525,21 @@ private static void adjustBPD(Block block, int amount) {\n         block.setBPD(block.getBPD() + amount);\n     }\n \n+    private Block getBackgroundArea(int bpd, int borderBeforeWidth) {\n+        CommonBorderPaddingBackground padding = getTableCell().getCommonBorderPaddingBackground();\n+        int paddingStart = padding.getPaddingStart(false, this);\n+        int paddingEnd = padding.getPaddingEnd(false, this);\n+        \n+        Block block = new Block();\n+        TraitSetter.setProducerID(block, getTable().getId());\n+        block.setPositioning(Block.ABSOLUTE);\n+        block.setIPD(cellIPD + paddingStart + paddingEnd);\n+        block.setBPD(bpd);\n+        block.setXOffset(xoffset + startIndent - paddingStart);\n+        block.setYOffset(yoffset + borderBeforeWidth);\n+        return block;\n+    }\n+\n     /**\n      * Return an Area which can contain the passed childArea. The childArea\n      * may not yet have any content, but it has essential traits set.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableCellLayoutManager.java",
                "sha": "8acfebca04927614382acdd575e56ad6d872c4c8",
                "status": "modified"
            },
            {
                "additions": 65,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableContentLayoutManager.java",
                "changes": 164,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableContentLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 99,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableContentLayoutManager.java",
                "patch": "@@ -27,16 +27,13 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.area.Block;\n-import org.apache.fop.area.Trait;\n import org.apache.fop.datatypes.PercentBaseContext;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.flow.table.EffRow;\n import org.apache.fop.fo.flow.table.PrimaryGridUnit;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableBody;\n-import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.layoutmgr.BreakElement;\n import org.apache.fop.layoutmgr.ElementListUtils;\n import org.apache.fop.layoutmgr.KnuthBox;\n@@ -46,7 +43,6 @@\n import org.apache.fop.layoutmgr.ListElement;\n import org.apache.fop.layoutmgr.Position;\n import org.apache.fop.layoutmgr.PositionIterator;\n-import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.layoutmgr.SpaceResolver.SpaceHandlingBreakPosition;\n import org.apache.fop.util.BreakUtil;\n \n@@ -293,7 +289,7 @@ void addAreas(PositionIterator parentIter, LayoutContext layoutContext) {\n         this.usedBPD = 0;\n         RowPainter painter = new RowPainter(this, layoutContext);\n \n-        List positions = new java.util.ArrayList();\n+        List tablePositions = new ArrayList();\n         List headerElements = null;\n         List footerElements = null;\n         Position firstPos = null;\n@@ -330,7 +326,7 @@ void addAreas(PositionIterator parentIter, LayoutContext layoutContext) {\n                 //ignore for now, see special handling below if break is at a penalty\n                 //Only if the last position in this part/page us such a position it will be used \n             } else if (pos instanceof TableContentPosition) {\n-                positions.add(pos);\n+                tablePositions.add(pos);\n             } else {\n                 if (log.isDebugEnabled()) {\n                     log.debug(\"Ignoring position: \" + pos);\n@@ -359,21 +355,23 @@ void addAreas(PositionIterator parentIter, LayoutContext layoutContext) {\n         if (headerElements != null) {\n             //header positions for the last part are the second-to-last element and need to\n             //be handled first before all other TableContentPositions\n-            PositionIterator nestedIter = new KnuthPossPosIter(headerElements);\n-            iterateAndPaintPositions(nestedIter, painter, false);\n+            addHeaderFooterAreas(headerElements, tableLM.getTable().getTableHeader(), painter,\n+                    false);\n         }\n         \n-        //Iterate over all steps\n-        Iterator posIter = positions.iterator();\n-        painter.startBody();\n-        // Here we are sure that posIter iterates only over TableContentPosition instances\n-        iterateAndPaintPositions(posIter, painter, footerElements == null);\n-        painter.endBody();\n+        if (tablePositions.isEmpty()) {\n+            // TODO make sure this actually never happens\n+            log.error(\"tablePositions empty.\"\n+                    + \" Please send your FO file to fop-users@xmlgraphics.apache.org\");\n+        } else {\n+            // Here we are sure that posIter iterates only over TableContentPosition instances\n+            addBodyAreas(tablePositions.iterator(), painter, footerElements == null);\n+        }\n \n         if (footerElements != null) {\n             //Positions for footers are simply added at the end\n-            PositionIterator nestedIter = new KnuthPossPosIter(footerElements);\n-            iterateAndPaintPositions(nestedIter, painter, true);\n+            addHeaderFooterAreas(footerElements, tableLM.getTable().getTableFooter(), painter,\n+                    true);\n         }\n         \n         this.usedBPD += painter.getAccumulatedBPD();\n@@ -384,105 +382,73 @@ void addAreas(PositionIterator parentIter, LayoutContext layoutContext) {\n         }\n     }\n \n+    private void addHeaderFooterAreas(List elements, TableBody part, RowPainter painter,\n+            boolean lastOnPage) {\n+        List lst = new ArrayList(elements.size());\n+        for (Iterator iter = new KnuthPossPosIter(elements); iter.hasNext();) {\n+            Position pos = (Position) iter.next();\n+            /*\n+             * Unlike for the body the Positions associated to the glues generated by\n+             * TableStepper haven't been removed yet.\n+             */\n+            if (pos instanceof TableContentPosition) {\n+                lst.add((TableContentPosition) pos);\n+            }\n+        }\n+        addTablePartAreas(lst, painter, part, true, true, true, lastOnPage);\n+    }\n+\n     /**\n-     * Iterates over a part of the table (header, footer, body) and paints the related\n-     * elements.\n+     * Iterates over the positions corresponding to the table's body (which may contain\n+     * several table-body elements!) and adds the corresponding areas.\n      * \n-     * @param iterator iterator over Position elements. Those positions correspond to the\n-     * elements of the table present on the current page\n+     * @param iterator iterator over TableContentPosition elements. Those positions\n+     * correspond to the elements of the body present on the current page\n      * @param painter\n-     * @param lastOnPage true if the corresponding part will be the last on the page\n-     * (either body or footer, obviously)\n+     * @param lastOnPage true if the table has no footer (then the last line of the table\n+     * that will be present on the page belongs to the body)\n      */\n-    private void iterateAndPaintPositions(Iterator iterator, RowPainter painter,\n+    private void addBodyAreas(Iterator iterator, RowPainter painter,\n             boolean lastOnPage) {\n+        painter.startBody();\n         List lst = new ArrayList();\n-        boolean firstPos = false;\n-        TableBody body = null;\n+        TableContentPosition pos = (TableContentPosition) iterator.next();\n+        boolean isFirstPos = pos.getFlag(TableContentPosition.FIRST_IN_ROWGROUP)\n+                && pos.getRow().getFlag(EffRow.FIRST_IN_PART);\n+        TableBody body = pos.getTableBody();\n+        lst.add(pos);\n         while (iterator.hasNext()) {\n-            Position pos = (Position)iterator.next();\n-            if (pos instanceof TableContentPosition) {\n-                TableContentPosition tcpos = (TableContentPosition)pos;\n-                lst.add(tcpos);\n-                CellPart part = (CellPart)tcpos.cellParts.get(0);\n-                if (body == null) {\n-                    body = part.pgu.getBody();\n-                }\n-                if (tcpos.getFlag(TableContentPosition.FIRST_IN_ROWGROUP)\n-                        && tcpos.getRow().getFlag(EffRow.FIRST_IN_PART)) {\n-                    firstPos = true;\n-\n-                }\n-                if (tcpos.getFlag(TableContentPosition.LAST_IN_ROWGROUP) \n-                        && tcpos.getRow().getFlag(EffRow.LAST_IN_PART)) {\n-                    log.trace(\"LAST_IN_ROWGROUP + LAST_IN_PART\");\n-                    handleMarkersAndPositions(lst, body, firstPos, true, painter);\n-                    //reset\n-                    firstPos = false;\n-                    body = null;\n-                    lst.clear();\n-                }\n+            pos = (TableContentPosition) iterator.next();\n+            if (pos.getTableBody() != body) {\n+                addTablePartAreas(lst, painter, body, isFirstPos, true, false, false);\n+                isFirstPos = true;\n+                lst.clear();\n+                body = pos.getTableBody();\n             }\n+            lst.add(pos);\n         }\n-        if (body != null) {\n-            // Entering this block means that the end of the current table-part hasn't\n-            // been reached (otherwise it would have been caught by the test above). So\n-            // lastPos is necessarily false\n-            handleMarkersAndPositions(lst, body, firstPos, false, painter);\n-        }\n-        painter.addAreasAndFlushRow(true, lastOnPage);\n-    }\n-\n-    private void handleMarkersAndPositions(List positions, TableBody body, boolean firstPos,\n-            boolean lastPos, RowPainter painter) {\n-        getTableLM().getCurrentPV().addMarkers(body.getMarkers(), \n-                true, firstPos, lastPos);\n-        int size = positions.size();\n-        for (int i = 0; i < size; i++) {\n-            painter.handleTableContentPosition((TableContentPosition)positions.get(i));\n-        }\n-        getTableLM().getCurrentPV().addMarkers(body.getMarkers(), \n-                false, firstPos, lastPos);\n+        boolean isLastPos = pos.getFlag(TableContentPosition.LAST_IN_ROWGROUP)\n+                && pos.getRow().getFlag(EffRow.LAST_IN_PART);\n+        addTablePartAreas(lst, painter, body, isFirstPos, isLastPos, true, lastOnPage);\n+        painter.endBody();\n     }\n \n     /**\n-     * Get the area for a row for background.\n-     * @param row the table-row object or null\n-     * @return the row area or null if there's no background to paint\n+     * Adds the areas corresponding to a single fo:table-header/footer/body element.\n      */\n-    Block getRowArea(TableRow row) {\n-        if (row == null || !row.getCommonBorderPaddingBackground().hasBackground()) {\n-            return null;\n-        } else {\n-            Block block = new Block();\n-            block.addTrait(Trait.IS_REFERENCE_AREA, Boolean.TRUE);\n-            block.setPositioning(Block.ABSOLUTE);\n-            return block;\n+    private void addTablePartAreas(List positions, RowPainter painter, TableBody body,\n+            boolean isFirstPos, boolean isLastPos, boolean lastInBody, boolean lastOnPage) {\n+        getTableLM().getCurrentPV().addMarkers(body.getMarkers(), \n+                true, isFirstPos, isLastPos);\n+        painter.startTablePart(body);\n+        for (Iterator iter = positions.iterator(); iter.hasNext();) {\n+            painter.handleTableContentPosition((TableContentPosition) iter.next());\n         }\n+        getTableLM().getCurrentPV().addMarkers(body.getMarkers(), \n+                false, isFirstPos, isLastPos);\n+        painter.endTablePart(lastInBody, lastOnPage);\n     }\n \n-    /**\n-     * Adds the area for the row background if any.\n-     * @param row row for which to generate the background\n-     * @param bpd block-progression-dimension of the row\n-     * @param ipd inline-progression-dimension of the row\n-     * @param yoffset Y offset at which to paint\n-     */\n-    void addRowBackgroundArea(TableRow row, int bpd, int ipd, int yoffset) {\n-        //Add row background if any\n-        Block rowBackground = getRowArea(row);\n-        if (rowBackground != null) {\n-            rowBackground.setBPD(bpd);\n-            rowBackground.setIPD(ipd);\n-            rowBackground.setXOffset(this.startXOffset);\n-            rowBackground.setYOffset(yoffset);\n-            getTableLM().addChildArea(rowBackground);\n-            TraitSetter.addBackground(rowBackground, \n-                    row.getCommonBorderPaddingBackground(), getTableLM());\n-        }\n-    }\n-    \n-    \n     /**\n      * Sets the overall starting x-offset. Used for proper placement of cells.\n      * @param startXOffset starting x-offset (table's start-indent)",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableContentLayoutManager.java",
                "sha": "7cdeb79d5569e197a556af606f894ad9167e2a3f",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableContentPosition.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableContentPosition.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableContentPosition.java",
                "patch": "@@ -22,6 +22,7 @@\n import java.util.List;\n \n import org.apache.fop.fo.flow.table.EffRow;\n+import org.apache.fop.fo.flow.table.TableBody;\n import org.apache.fop.layoutmgr.LayoutManager;\n import org.apache.fop.layoutmgr.Position;\n \n@@ -79,6 +80,10 @@ EffRow getRow() {\n         return row;\n     }\n \n+    TableBody getTableBody() {\n+        return ((CellPart) cellParts.get(0)).pgu.getTableBody();\n+    }\n+\n     /**\n      * Returns a flag for this GridUnit.\n      * @param which the requested flag\n@@ -101,10 +106,12 @@ public void setFlag(int which, boolean value) {\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean generatesAreas() {\n         return true;\n     }\n \n+    /** {@inheritDoc} */\n     public String toString() {\n         StringBuffer sb = new StringBuffer(\"TableContentPosition:\");\n         sb.append(getIndex());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableContentPosition.java",
                "sha": "260b8cfdf1a94f65b051fb9e7d00a1b76be3b54a",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableHFPenaltyPosition.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableHFPenaltyPosition.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableHFPenaltyPosition.java",
                "patch": "@@ -43,6 +43,11 @@ protected TableHFPenaltyPosition(LayoutManager lm) {\n         super(lm);\n     }\n \n+    /** {@inheritDoc} */\n+    public boolean generatesAreas() {\n+        return true;\n+    }\n+\n     public String toString() {\n         StringBuffer sb = new StringBuffer(\"TableHFPenaltyPosition:\");\n         sb.append(getIndex()).append(\"(\");",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableHFPenaltyPosition.java",
                "sha": "3e504a45c84c9f26729f83227ae4bdfd9db3b852",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableHeaderFooterPosition.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableHeaderFooterPosition.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableHeaderFooterPosition.java",
                "patch": "@@ -48,6 +48,11 @@ protected TableHeaderFooterPosition(LayoutManager lm,\n         this.nestedElements = nestedElements;\n     }\n \n+    /** {@inheritDoc} */\n+    public boolean generatesAreas() {\n+        return true;\n+    }\n+\n     public String toString() {\n         StringBuffer sb = new StringBuffer(\"Table\");\n         sb.append(header ? \"Header\" : \"Footer\");",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableHeaderFooterPosition.java",
                "sha": "8d3b993b2624c1c6a8c3902b7f0cc22535a897f6",
                "status": "modified"
            },
            {
                "additions": 70,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "changes": 75,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "patch": "@@ -19,8 +19,10 @@\n \n package org.apache.fop.layoutmgr.table;\n \n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.LinkedList;\n+import java.util.List;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -79,7 +81,27 @@\n     \n     private int halfBorderSeparationBPD;\n     private int halfBorderSeparationIPD;\n-    \n+\n+    /** See {@link TableLayoutManager#registerColumnBackgroundArea(TableColumn, Block, int)}. */\n+    private List columnBackgroundAreas;\n+\n+    /**\n+     * Temporary holder of column background informations for a table-cell's area.\n+     * \n+     * @see TableLayoutManager#registerColumnBackgroundArea(TableColumn, Block, int)\n+     */\n+    private static final class ColumnBackgroundInfo {\n+        private TableColumn column;\n+        private Block backgroundArea;\n+        private int xShift;\n+\n+        private ColumnBackgroundInfo(TableColumn column, Block backgroundArea, int xShift) {\n+            this.column = column;\n+            this.backgroundArea = backgroundArea;\n+            this.xShift = xShift;\n+        }\n+    }\n+\n     /**\n      * Create a new table layout manager.\n      * @param node the table FO\n@@ -211,7 +233,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n \n \n         // Elements for the table-header/footer/body\n-        LinkedList contentKnuthElements = null;\n+        LinkedList contentKnuthElements;\n         contentLM = new TableContentLayoutManager(this);\n         LayoutContext childLC = new LayoutContext(0);\n         /*\n@@ -263,7 +285,30 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         resetSpaces();\n         return returnList;\n     }\n-    \n+\n+    /**\n+     * Registers the given area, that will be used to render the part of column background\n+     * covered by a table-cell. If percentages are used to place the background image, the\n+     * final bpd of the (fraction of) table that will be rendered on the current page must\n+     * be known. The traits can't then be set when the areas for the cell are created\n+     * since at that moment this bpd is yet unknown. So they will instead be set in\n+     * TableLM's {@link #addAreas(PositionIterator, LayoutContext)} method.\n+     * \n+     * @param column the table-column element from which the cell gets background\n+     * informations\n+     * @param backgroundArea the block of the cell's dimensions that will hold the column\n+     * background\n+     * @param xShift additional amount by which the image must be shifted to be correctly\n+     * placed (to counterbalance the cell's start border)\n+     */\n+    void registerColumnBackgroundArea(TableColumn column, Block backgroundArea, int xShift) {\n+        addBackgroundArea(backgroundArea);\n+        if (columnBackgroundAreas == null) {\n+            columnBackgroundAreas = new ArrayList();\n+        }\n+        columnBackgroundAreas.add(new ColumnBackgroundInfo(column, backgroundArea, xShift));\n+    }\n+\n     /**\n      * The table area is a reference area that contains areas for\n      * columns, bodies, rows and the contents are in cells.\n@@ -274,7 +319,7 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n     public void addAreas(PositionIterator parentIter,\n                          LayoutContext layoutContext) {\n         getParentArea(null);\n-        getPSLM().addIDToPage(getTable().getId());\n+        addId();\n \n         // add space before, in order to implement display-align = \"center\" or \"after\"\n         if (layoutContext.getSpaceBefore() != 0) {\n@@ -298,6 +343,17 @@ public void addAreas(PositionIterator parentIter,\n \n         curBlockArea.setBPD(tableHeight);\n \n+        if (columnBackgroundAreas != null) {\n+            for (Iterator iter = columnBackgroundAreas.iterator(); iter.hasNext();) {\n+                ColumnBackgroundInfo b = (ColumnBackgroundInfo) iter.next();\n+                TraitSetter.addBackground(b.backgroundArea,\n+                        b.column.getCommonBorderPaddingBackground(), this,\n+                        b.xShift, -b.backgroundArea.getYOffset(),\n+                        b.column.getColumnWidth().getValue(this), tableHeight);\n+            }\n+            columnBackgroundAreas.clear();\n+        }\n+\n         if (getTable().isSeparateBorderModel()) {\n             TraitSetter.addBorders(curBlockArea, \n                     getTable().getCommonBorderPaddingBackground(), \n@@ -323,7 +379,7 @@ public void addAreas(PositionIterator parentIter,\n         resetSpaces();\n         curBlockArea = null;\n         \n-        getPSLM().notifyEndOfLayout(((Table)getFObj()).getId());\n+        getPSLM().notifyEndOfLayout(fobj.getId());\n     }\n \n     /**\n@@ -366,6 +422,15 @@ public void addChildArea(Area childArea) {\n         }\n     }\n \n+    /**\n+     * Adds the given area to this layout manager's area, without updating the used bpd.\n+     * \n+     * @param background an area\n+     */\n+    void addBackgroundArea(Block background) {\n+        curBlockArea.addChildArea(background);\n+    }\n+\n     /** {@inheritDoc} */\n     public int negotiateBPDAdjustment(int adj, KnuthElement lastElement) {\n         // TODO Auto-generated method stub",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "sha": "d6bba5cb528e79fb9bda39120c25d1e53f3fff90",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFCMap.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFCMap.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/pdf/PDFCMap.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import java.io.IOException;\n import java.io.OutputStream;\n-import java.io.StringWriter;\n import java.io.Writer;\n \n /**\n@@ -425,10 +424,8 @@ protected CMapBuilder createCMapBuilder(Writer writer) {\n     \n     /** {@inheritDoc} */\n     protected int output(OutputStream stream) throws IOException {\n-        StringWriter writer = new StringWriter();\n-        CMapBuilder builder = createCMapBuilder(writer);\n+        CMapBuilder builder = createCMapBuilder(getBufferWriter());\n         builder.writeCMap();\n-        add(writer.getBuffer().toString()); //TODO Could be optimized by not buffering\n         return super.output(stream);\n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFCMap.java",
                "sha": "1be5e9dc4a34b0c49e9beda049770999df38f06b",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFEncoding.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFEncoding.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/pdf/PDFEncoding.java",
                "patch": "@@ -131,6 +131,14 @@ public DifferencesBuilder addName(String name) {\n             return this;\n         }\n         \n+        /**\n+         * Indicates whether any differences have been recorded.\n+         * @return true if there are differences.\n+         */\n+        public boolean hasDifferences() {\n+            return (this.differences.length() > 0);\n+        }\n+        \n         /**\n          * Creates and returns the PDFArray representing the Differences entry.\n          * @return the Differences entry",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFEncoding.java",
                "sha": "6dc448b40e91f811a67c6787fd81ac7872fdda9e",
                "status": "modified"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFFactory.java",
                "changes": 133,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFFactory.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 41,
                "filename": "src/java/org/apache/fop/pdf/PDFFactory.java",
                "patch": "@@ -43,13 +43,16 @@\n import org.apache.xmlgraphics.xmp.Metadata;\n \n import org.apache.fop.fonts.CIDFont;\n+import org.apache.fop.fonts.CIDSubset;\n import org.apache.fop.fonts.CodePointMapping;\n import org.apache.fop.fonts.CustomFont;\n import org.apache.fop.fonts.FontDescriptor;\n import org.apache.fop.fonts.FontMetrics;\n import org.apache.fop.fonts.FontType;\n import org.apache.fop.fonts.LazyFont;\n import org.apache.fop.fonts.MultiByteFont;\n+import org.apache.fop.fonts.SimpleSingleByteEncoding;\n+import org.apache.fop.fonts.SingleByteEncoding;\n import org.apache.fop.fonts.SingleByteFont;\n import org.apache.fop.fonts.Typeface;\n import org.apache.fop.fonts.truetype.FontFileReader;\n@@ -1166,7 +1169,7 @@ public PDFEncoding makeEncoding(String encodingName) {\n     }\n \n     /**\n-     * make a Type1 /Font object\n+     * Make a Type1 /Font object.\n      *\n      * @param fontname internal name to use for this font (eg \"F1\")\n      * @param basefont name of the base font (eg \"Helvetica\")\n@@ -1217,10 +1220,12 @@ public PDFFont makeFont(String fontname, String basefont,\n                                    (PDFCIDFontDescriptor)pdfdesc);\n                 getDocument().registerObject(cidFont);\n \n-                PDFCMap cmap = new PDFToUnicodeCMap(cidMetrics.getCharsUsed(), \"fop-ucs-H\",\n-                    new PDFCIDSystemInfo(\"Adobe\",\n-                        \"Identity\",\n-                        0));\n+                PDFCMap cmap = new PDFToUnicodeCMap(\n+                        cidMetrics.getCIDSubset().getSubsetChars(),\n+                        \"fop-ucs-H\",\n+                        new PDFCIDSystemInfo(\"Adobe\",\n+                            \"Identity\",\n+                            0));\n                 getDocument().registerObject(cmap);\n                 ((PDFFontType0)font).setCMAP(cmap);\n                 ((PDFFontType0)font).setDescendantFonts(cidFont);\n@@ -1238,35 +1243,20 @@ public PDFFont makeFont(String fontname, String basefont,\n                 int lastChar = singleByteFont.getLastChar();\n                 nonBase14.setWidthMetrics(firstChar,\n                                      lastChar,\n-                                     makeArray(metrics.getWidths()));\n+                                     new PDFArray(null, metrics.getWidths()));\n                 \n                 //Handle encoding\n-                CodePointMapping mapping = singleByteFont.getCodePointMapping();\n+                SingleByteEncoding mapping = singleByteFont.getEncoding();\n                 if (PDFEncoding.isPredefinedEncoding(mapping.getName())) {\n                     font.setEncoding(mapping.getName());\n                 } else {\n-                    CodePointMapping winansi = CodePointMapping.getMapping(\n-                            CodePointMapping.WIN_ANSI_ENCODING);\n-                    PDFEncoding pdfEncoding = new PDFEncoding(winansi.getName());\n-                    PDFEncoding.DifferencesBuilder builder\n-                            = pdfEncoding.createDifferencesBuilder();\n-                    int start = -1;\n-                    String[] winansiNames = winansi.getCharNameMap();\n-                    String[] charNameMap = mapping.getCharNameMap();\n-                    for (int i = 0; i < 256; i++) {\n-                        String wac = winansiNames[i];\n-                        String c = charNameMap[i];\n-                        if (!wac.equals(c)) {\n-                            if (start != i) {\n-                                builder.addDifference(i);\n-                                start = i;\n-                            }\n-                            builder.addName(c);\n-                            start++;\n-                        }\n+                    Object pdfEncoding = createPDFEncoding(mapping,\n+                            singleByteFont.getFontName());\n+                    if (pdfEncoding instanceof PDFEncoding) {\n+                        font.setEncoding((PDFEncoding)pdfEncoding);\n+                    } else {\n+                        font.setEncoding((String)pdfEncoding);\n                     }\n-                    pdfEncoding.setDifferences(builder.toPDFArray());\n-                    font.setEncoding(pdfEncoding);\n                     \n                     /* JM: What I thought would be a necessity with custom encodings turned out to\n                      * be a bug in Adobe Acrobat 8. The following section just demonstrates how\n@@ -1278,21 +1268,88 @@ public PDFFont makeFont(String fontname, String basefont,\n                     nonBase14.setToUnicode(cmap);\n                     */\n                 }\n+                \n+                //Handle additional encodings (characters outside the primary encoding)\n+                if (singleByteFont.hasAdditionalEncodings()) {\n+                    for (int i = 0, c = singleByteFont.getAdditionalEncodingCount(); i < c; i++) {\n+                        SimpleSingleByteEncoding addEncoding\n+                            = singleByteFont.getAdditionalEncoding(i);\n+                        String name = fontname + \"_\" + (i + 1);\n+                        Object pdfenc = createPDFEncoding(addEncoding,\n+                                singleByteFont.getFontName());\n+                        PDFFontNonBase14 addFont = (PDFFontNonBase14)PDFFont.createFont(\n+                                name, fonttype,\n+                                basefont, pdfenc);\n+                        addFont.setDescriptor(pdfdesc);\n+                        addFont.setWidthMetrics(\n+                                addEncoding.getFirstChar(),\n+                                addEncoding.getLastChar(),\n+                                new PDFArray(null, singleByteFont.getAdditionalWidths(i)));\n+                        getDocument().registerObject(addFont);\n+                        getDocument().getResources().addFont(addFont);\n+                    }\n+                }\n             }\n \n             return font;\n         }\n     }\n \n+    /**\n+     * Creates a PDFEncoding instance from a CodePointMapping instance.\n+     * @param encoding the code point mapping (encoding)\n+     * @return the PDF Encoding dictionary (or a String with the predefined encoding)\n+     */\n+    public Object createPDFEncoding(SingleByteEncoding encoding, String fontNameHint) {\n+        SingleByteEncoding baseEncoding;\n+        if (fontNameHint.indexOf(\"Symbol\") >= 0) {\n+            baseEncoding = CodePointMapping.getMapping(\n+                    CodePointMapping.SYMBOL_ENCODING);\n+        } else {\n+            baseEncoding = CodePointMapping.getMapping(\n+                    CodePointMapping.STANDARD_ENCODING);\n+        }\n+        PDFEncoding pdfEncoding = new PDFEncoding(baseEncoding.getName());\n+        PDFEncoding.DifferencesBuilder builder\n+                = pdfEncoding.createDifferencesBuilder();\n+        int start = -1;\n+        String[] baseNames = baseEncoding.getCharNameMap();\n+        String[] charNameMap = encoding.getCharNameMap();\n+        for (int i = 0, ci = charNameMap.length; i < ci; i++) {\n+            String basec = baseNames[i];\n+            String c = charNameMap[i];\n+            if (!basec.equals(c)) {\n+                if (start != i) {\n+                    builder.addDifference(i);\n+                    start = i;\n+                }\n+                builder.addName(c);\n+                start++;\n+            }\n+        }\n+        if (builder.hasDifferences()) {\n+            pdfEncoding.setDifferences(builder.toPDFArray());\n+            return pdfEncoding;\n+        } else {\n+            return baseEncoding.getName();\n+        }\n+    }\n+\n+    /**\n+     * Creates and returns a width array with the widths of all the characters in the subset.\n+     * @param cidFont the font\n+     * @return the width array\n+     */\n     public PDFWArray getSubsetWidths(CIDFont cidFont) {\n         // Create widths for reencoded chars\n         PDFWArray warray = new PDFWArray();\n-        int[] tmpWidth = new int[cidFont.usedGlyphsCount];\n+        int[] widths = cidFont.getWidths();\n+        CIDSubset subset = cidFont.getCIDSubset();\n+        int[] tmpWidth = new int[subset.getSubsetSize()];\n \n-        for (int i = 0; i < cidFont.usedGlyphsCount; i++) {\n-            Integer nw = (Integer)cidFont.usedGlyphsIndex.get(new Integer(i));\n-            int nwx = (nw == null) ? 0 : nw.intValue();\n-            tmpWidth[i] = cidFont.width[nwx];\n+        for (int i = 0, c = subset.getSubsetSize(); i < c; i++) {\n+            int nwx = Math.max(0, subset.getGlyphIndexForSubsetIndex(i));\n+            tmpWidth[i] = widths[nwx];\n         }\n         warray.addEntry(0, tmpWidth);\n         return warray;\n@@ -1345,12 +1402,7 @@ public PDFFontDescriptor makeFontDescriptor(FontDescriptor desc) {\n     }\n \n     private void buildCIDSet(PDFFontDescriptor descriptor, CIDFont cidFont) {\n-        BitSet cidSubset = new BitSet();\n-        Iterator iter = cidFont.usedGlyphs.keySet().iterator();\n-        while (iter.hasNext()) {\n-            Integer cid = (Integer)iter.next();\n-            cidSubset.set(cid.intValue());\n-        }\n+        BitSet cidSubset = cidFont.getCIDSubset().getGlyphIndexBitSet();\n         PDFStream cidSet = makeStream(null, true);\n         ByteArrayOutputStream baout = new ByteArrayOutputStream(cidSubset.length() / 8 + 1);\n         int value = 0;\n@@ -1548,14 +1600,13 @@ public PDFICCBasedColorSpace makeICCBasedColorSpace(PDFResourceContext res,\n     }\n \n     /**\n-     * make an Array object (ex. Widths array for a font)\n+     * Make an Array object (ex. Widths array for a font).\n      *\n      * @param values the int array values\n      * @return the PDF Array with the int values\n      */\n     public PDFArray makeArray(int[] values) {\n         PDFArray array = new PDFArray(null, values);\n-\n         getDocument().registerObject(array);\n         return array;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFFactory.java",
                "sha": "f4474331f9eb13265c9af0318bf4b28ca3c6e776",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFResources.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFResources.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/pdf/PDFResources.java",
                "patch": "@@ -110,7 +110,7 @@ public void addFonts(PDFDocument doc, FontInfo fontInfo) {\n                     desc = (FontDescriptor)font;\n                 }\n                 addFont(doc.getFactory().makeFont(\n-                    f, font.getEmbedFontName(), font.getEncoding(), font, desc));\n+                    f, font.getEmbedFontName(), font.getEncodingName(), font, desc));\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFResources.java",
                "sha": "b0c0128e1368e2d71e41300e737b8754f4c48522",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFStream.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFStream.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/pdf/PDFStream.java",
                "patch": "@@ -19,8 +19,9 @@\n  \n package org.apache.fop.pdf;\n \n-import java.io.OutputStream;\n import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.Writer;\n \n /**\n  * Class representing a PDF stream.\n@@ -37,13 +38,19 @@\n      */\n     protected StreamCache data;\n \n+    private transient Writer streamWriter;\n+    \n     /**\n      * Create an empty stream object\n      */\n     public PDFStream() {\n         super();\n         try {\n             data = StreamCacheFactory.getInstance().createStreamCache();\n+            this.streamWriter = new java.io.OutputStreamWriter(\n+                    getBufferOutputStream(), PDFDocument.ENCODING);\n+            //Buffer to minimize calls to the converter\n+            this.streamWriter = new java.io.BufferedWriter(this.streamWriter);\n         } catch (IOException ex) {\n             //TODO throw the exception and catch it elsewhere\n             ex.printStackTrace();\n@@ -57,21 +64,35 @@ public PDFStream() {\n      */\n     public void add(String s) {\n         try {\n-            data.getOutputStream().write(PDFDocument.encode(s));\n+            this.streamWriter.write(s);\n         } catch (IOException ex) {\n             //TODO throw the exception and catch it elsewhere\n             ex.printStackTrace();\n         }\n-\n+    }\n+    \n+    private void flush() throws IOException {\n+        this.streamWriter.flush();\n     }\n     \n+    /**\n+     * Returns a Writer that writes to the OutputStream of the buffer.\n+     * @return the Writer\n+     */\n+    public Writer getBufferWriter() {\n+        return this.streamWriter;\n+    }\n+\n     /**\n      * Returns an OutputStream that can be used to write to the buffer which is used\n      * to build up the PDF stream.\n      * @return the OutputStream\n      * @throws IOException In case of an I/O problem\n      */\n     public OutputStream getBufferOutputStream() throws IOException {\n+        if (this.streamWriter != null) {\n+            flush(); //Just to be sure\n+        }\n         return this.data.getOutputStream();\n     }\n     \n@@ -91,6 +112,7 @@ public void setData(byte[] data) throws IOException {\n      */\n     public int getDataLength() {\n         try {\n+            flush();\n             return data.getSize();\n         } catch (Exception e) {\n             //TODO throw the exception and catch it elsewhere\n@@ -99,17 +121,15 @@ public int getDataLength() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected int getSizeHint() throws IOException {\n+        flush();\n         return data.getSize();\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void outputRawStreamData(OutputStream out) throws IOException {\n+        flush();\n         data.outputContents(out);\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFStream.java",
                "sha": "a213340e36c3c6adce3c3fb62aab488ef5e7062c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFTTFStream.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFTTFStream.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/pdf/PDFTTFStream.java",
                "patch": "@@ -67,7 +67,7 @@ protected void populateStreamDict(Object lengthEntry) {\n      */\n     public void setData(byte[] data, int size) throws IOException {\n         this.data.clear();\n-        this.data.getOutputStream().write(data, 0, size);\n+        getBufferOutputStream().write(data, 0, size);\n     }\n \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFTTFStream.java",
                "sha": "5570c62f3046e4f227baac48979d3f4952d5f4fa",
                "status": "modified"
            },
            {
                "additions": 295,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFTextUtil.java",
                "changes": 295,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/pdf/PDFTextUtil.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/pdf/PDFTextUtil.java",
                "patch": "@@ -0,0 +1,295 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.pdf;\n+\n+import java.awt.geom.AffineTransform;\n+\n+/**\n+ * Utility class for generating PDF text objects. It needs to be subclassed to add writing\n+ * functionality (see {@link #write(String)}).\n+ */\n+public abstract class PDFTextUtil {\n+\n+    /** The number of decimal places. */ \n+    private static final int DEC = 8;\n+    \n+    /** PDF text rendering mode: Fill text */\n+    public static final int TR_FILL = 0;\n+    /** PDF text rendering mode: Stroke text */\n+    public static final int TR_STROKE = 1;\n+    /** PDF text rendering mode: Fill, then stroke text */\n+    public static final int TR_FILL_STROKE = 2;\n+    /** PDF text rendering mode: Neither fill nor stroke text (invisible) */\n+    public static final int TR_INVISIBLE = 3;\n+    /** PDF text rendering mode: Fill text and add to path for clipping */\n+    public static final int TR_FILL_CLIP = 4;\n+    /** PDF text rendering mode: Stroke text and add to path for clipping */\n+    public static final int TR_STROKE_CLIP = 5;\n+    /** PDF text rendering mode: Fill, then stroke text and add to path for clipping */\n+    public static final int TR_FILL_STROKE_CLIP = 6;\n+    /** PDF text rendering mode: Add text to path for clipping */\n+    public static final int TR_CLIP = 7;\n+    \n+    private boolean inTextObject = false;\n+    private String startText;\n+    private String endText;\n+    private boolean useMultiByte;\n+    private StringBuffer bufTJ;\n+    private int textRenderingMode = TR_FILL;\n+    \n+    private String currentFontName;\n+    private double currentFontSize;\n+    \n+    /**\n+     * Main constructor.\n+     */\n+    public PDFTextUtil() {\n+        //nop\n+    }\n+    \n+    /**\n+     * Writes PDF code.\n+     * @param code the PDF code to write\n+     */\n+    protected abstract void write(String code);\n+    \n+    private void writeAffineTransform(AffineTransform at, StringBuffer sb) {\n+        double[] lt = new double[6];\n+        at.getMatrix(lt);\n+        sb.append(PDFNumber.doubleOut(lt[0], DEC)).append(\" \");\n+        sb.append(PDFNumber.doubleOut(lt[1], DEC)).append(\" \");\n+        sb.append(PDFNumber.doubleOut(lt[2], DEC)).append(\" \");\n+        sb.append(PDFNumber.doubleOut(lt[3], DEC)).append(\" \");\n+        sb.append(PDFNumber.doubleOut(lt[4], DEC)).append(\" \");\n+        sb.append(PDFNumber.doubleOut(lt[5], DEC));\n+    }\n+\n+    private void writeChar(char ch, StringBuffer sb) {\n+        if (!useMultiByte) {\n+            if (ch < 32 || ch > 127) {\n+                sb.append(\"\\\\\").append(Integer.toOctalString((int)ch));\n+            } else {\n+                switch (ch) {\n+                case '(':\n+                case ')':\n+                case '\\\\':\n+                    sb.append(\"\\\\\");\n+                    break;\n+                default:\n+                }\n+                sb.append(ch);\n+            }\n+        } else {\n+            sb.append(PDFText.toUnicodeHex(ch));\n+        }\n+    }\n+    \n+    private void checkInTextObject() {\n+        if (!inTextObject) {\n+            throw new IllegalStateException(\"Not in text object\");\n+        }\n+    }\n+    \n+    /**\n+     * Indicates whether we are in a text object or not.\n+     * @return true if we are in a text object\n+     */\n+    public boolean isInTextObject() {\n+        return inTextObject;\n+    }\n+    \n+    /**\n+     * Called when a new text object should be started. Be sure to call setFont() before\n+     * issuing any text painting commands.\n+     */\n+    public void beginTextObject() {\n+        if (inTextObject) {\n+            throw new IllegalStateException(\"Already in text object\");\n+        }\n+        write(\"BT\\n\");\n+        this.inTextObject = true;\n+    }\n+    \n+    /**\n+     * Called when a text object should be ended.\n+     */\n+    public void endTextObject() {\n+        checkInTextObject();\n+        write(\"ET\\n\");\n+        this.inTextObject = false;\n+        initValues();\n+    }\n+    \n+    /**\n+     * Resets the state fields.\n+     */\n+    protected void initValues() {\n+        this.currentFontName = null;\n+        this.currentFontSize = 0.0;\n+        this.textRenderingMode = TR_FILL;\n+    }\n+    \n+    /**\n+     * Creates a \"q\" command, pushing a copy of the entire graphics state onto the stack.\n+     */\n+    public void saveGraphicsState() {\n+        write(\"q\\n\");\n+    }\n+    \n+    /**\n+     * Creates a \"Q\" command, restoring the entire graphics state to its former value by popping\n+     * it from the stack.\n+     */\n+    public void restoreGraphicsState() {\n+        write(\"Q\\n\");\n+    }\n+    \n+    /**\n+     * Creates a \"cm\" command.\n+     * @param at the transformation matrix\n+     */\n+    public void concatMatrix(AffineTransform at) {\n+        if (!at.isIdentity()) {\n+            writeTJ();\n+            StringBuffer sb = new StringBuffer();\n+            writeAffineTransform(at, sb);\n+            sb.append(\" cm\\n\");\n+            write(sb.toString());\n+        }\n+    }\n+    \n+    /**\n+     * Writes a \"Tf\" command, setting a new current font.\n+     * @param fontName the name of the font to select\n+     * @param fontSize the font size (in points)\n+     */\n+    public void writeTf(String fontName, double fontSize) {\n+        checkInTextObject();\n+        write(\"/\" + fontName + \" \" + PDFNumber.doubleOut(fontSize) + \" Tf\\n\");\n+        \n+        this.startText = useMultiByte ? \"<\" : \"(\";\n+        this.endText = useMultiByte ? \">\" : \")\";\n+    }\n+\n+    /**\n+     * Updates the current font. This method only writes a \"Tf\" if the current font changes.\n+     * @param fontName the name of the font to select\n+     * @param fontSize the font size (in points)\n+     * @param multiByte true indicates the font is a multi-byte font, false means single-byte\n+     */\n+    public void updateTf(String fontName, double fontSize, boolean multiByte) {\n+        checkInTextObject();\n+        if (!fontName.equals(this.currentFontName) || (fontSize != this.currentFontSize)) {\n+            writeTJ();\n+            this.currentFontName = fontName;\n+            this.currentFontSize = fontSize;\n+            this.useMultiByte = multiByte;\n+            writeTf(fontName, fontSize);\n+        }\n+    }\n+\n+    /**\n+     * Sets the text rendering mode.\n+     * @param mode the rendering mode (value 0 to 7, see PDF Spec, constants: TR_*)\n+     */\n+    public void setTextRenderingMode(int mode) {\n+        if (mode < 0 || mode > 7) {\n+            throw new IllegalArgumentException(\n+                    \"Illegal value for text rendering mode. Expected: 0-7\");\n+        }\n+        if (mode != this.textRenderingMode) {\n+            writeTJ();\n+            this.textRenderingMode = mode;\n+            write(this.textRenderingMode + \" Tr\\n\");\n+        }\n+    }\n+    \n+    /**\n+     * Sets the text rendering mode.\n+     * @param fill true if the text should be filled\n+     * @param stroke true if the text should be stroked\n+     * @param addToClip true if the path should be added for clipping\n+     */\n+    public void setTextRenderingMode(boolean fill, boolean stroke, boolean addToClip) {\n+        int mode;\n+        if (fill) {\n+            mode = (stroke ? 2 : 0);\n+        } else {\n+            mode = (stroke ? 1 : 3);\n+        }\n+        if (addToClip) {\n+            mode += 4;\n+        }\n+        setTextRenderingMode(mode);\n+    }\n+    \n+    /**\n+     * Writes a \"Tm\" command, setting a new text transformation matrix.\n+     * @param localTransform the new text transformation matrix\n+     */\n+    public void writeTextMatrix(AffineTransform localTransform) {\n+        StringBuffer sb = new StringBuffer();\n+        writeAffineTransform(localTransform, sb);\n+        sb.append(\" Tm \");\n+        write(sb.toString());\n+    }\n+\n+    /**\n+     * Writes a char to the \"TJ-Buffer\".\n+     * @param codepoint the mapped character (code point/character code)\n+     */\n+    public void writeTJMappedChar(char codepoint) {\n+        if (bufTJ == null) {\n+            bufTJ = new StringBuffer();\n+        }\n+        if (bufTJ.length() == 0) {\n+            bufTJ.append(\"[\").append(startText);\n+        }\n+        writeChar(codepoint, bufTJ);\n+    }\n+\n+    /**\n+     * Writes a glyph adjust value to the \"TJ-Buffer\".\n+     * @param adjust the glyph adjust value in thousands of text unit space.\n+     */\n+    public void adjustGlyphTJ(double adjust) {\n+        bufTJ.append(endText).append(\" \");\n+        bufTJ.append(PDFNumber.doubleOut(adjust, DEC - 4));\n+        bufTJ.append(\" \");\n+        bufTJ.append(startText);\n+    }\n+\n+    /**\n+     * Writes a \"TJ\" command, writing out the accumulated buffer with the characters and glyph\n+     * positioning values. The buffer is reset afterwards.\n+     */\n+    public void writeTJ() {\n+        if (isInString()) {\n+            bufTJ.append(endText).append(\"] TJ\\n\");\n+            write(bufTJ.toString());\n+            bufTJ.setLength(0);\n+        }\n+    }\n+\n+    private boolean isInString() {\n+        return bufTJ != null && bufTJ.length() > 0;\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/pdf/PDFTextUtil.java",
                "sha": "224bb6a1d677d8f8d08f719e1132b7c3d98e438a",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "patch": "@@ -47,7 +47,7 @@\n public abstract class AbstractGenericSVGHandler implements XMLHandler, RendererContextConstants {\n \n     /** logging instance */\n-    private static Log log = LogFactory.getLog(AbstractGenericSVGHandler.class);\n+    protected static Log log = LogFactory.getLog(AbstractGenericSVGHandler.class);\n \n     /** {@inheritDoc} */\n     public void handleXML(RendererContext context, ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "sha": "c0c9ce88cdb6be582e6daaed549bd2d3f4874366",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPRenderer.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "patch": "@@ -940,10 +940,7 @@ public void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n         int x = origin.x + posInt.x;\n         int y = origin.y + posInt.y;\n \n-        String name = null;\n-        if (pageSegmentsMap != null) {\n-            name = (String) pageSegmentsMap.get(uri);\n-        }\n+        String name = (String)getPageSegments().get(uri);\n         if (name != null) {\n             afpDataStream.createIncludePageSegment(name, mpts2units(x), mpts2units(y));\n         } else {\n@@ -1543,6 +1540,13 @@ public String getMimeType() {\n         return MimeConstants.MIME_AFP;\n     }\n \n+    private Map getPageSegments() {\n+        if (pageSegmentsMap == null) {\n+            pageSegmentsMap = new java.util.HashMap();\n+        }\n+        return pageSegmentsMap;\n+    }\n+    \n     /**\n      * Method to render the page extension.\n      * <p>\n@@ -1571,25 +1575,19 @@ private void renderPageObjectExtensions(PageViewport pageViewport) {\n                             .equals(element)) {\n                         String name = aps.getName();\n                         String source = aps.getValue();\n-                        if (pageSegmentsMap == null) {\n-                            pageSegmentsMap = new java.util.HashMap();\n-                        }\n-                        pageSegmentsMap.put(source, name);\n+                        getPageSegments().put(source, name);\n                     } else if (AFPElementMapping.TAG_LOGICAL_ELEMENT\n                             .equals(element)) {\n                         String name = aps.getName();\n                         String value = aps.getValue();\n-                        if (pageSegmentsMap == null) {\n-                            pageSegmentsMap = new java.util.HashMap();\n-                        }\n                         afpDataStream.createTagLogicalElement(name, value);\n                     } else if (AFPElementMapping.NO_OPERATION.equals(element)) {\n                         String content = aps.getContent();\n                         if (content != null) {\n                             afpDataStream.createNoOperation(content);\n                         }\n                     } else if (AFPElementMapping.RESOURCE.equals(element)) {\n-                        System.out.println(\"resource: \" + attachment);\n+                        log.info(\"resource: \" + attachment);\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "sha": "cb3d3a433f02d0d5948a3c7ad4579d0076753a5e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPRendererConfigurator.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPRendererConfigurator.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/afp/AFPRendererConfigurator.java",
                "patch": "@@ -234,8 +234,7 @@ public void configure(Renderer renderer) throws FOPException {\n             \n             Configuration rendererResolutionCfg = cfg.getChild(\"renderer-resolution\", false);\n             if (rendererResolutionCfg != null) {\n-                afpRenderer.setResolution(rendererResolutionCfg.getValueAsInteger(\n-                        AFPRenderer.DPI_240_RESOLUTION));\n+                afpRenderer.setResolution(rendererResolutionCfg.getValueAsInteger(240));\n             }\n \n             Configuration gocaSupportCfg = cfg.getChild(\"goca-enabled\", false);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPRendererConfigurator.java",
                "sha": "cde464ba534623ae874a56276050585b96a6d4ac",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPSVGHandler.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "sha": "1d469ea94d9a2dd7dbc12145a02809b1e63f8cc6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPElement.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/extensions/AFPElement.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/extensions/AFPElement.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPElement.java",
                "sha": "659c79a8ed63c32e52a6fd4981b2ecb804119457",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPElementMapping.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/extensions/AFPElementMapping.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/extensions/AFPElementMapping.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPElementMapping.java",
                "sha": "ad80399e300ecff661cf3e1b52d72b61751ba2ea",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPExtensionHandler.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/extensions/AFPExtensionHandler.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/extensions/AFPExtensionHandler.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/extensions/AFPExtensionHandler.java",
                "sha": "fca4862792668b07662c637e09c9949f05c5c90a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/fonts/OutlineFont.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/fonts/OutlineFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/fonts/OutlineFont.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/fonts/OutlineFont.java",
                "sha": "f8dd9a1ed4c29c741b29cda6eda379c666f9307d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/fonts/RasterFont.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/fonts/RasterFont.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/fonts/RasterFont.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/fonts/RasterFont.java",
                "sha": "44dcd0e9fa1f5371e124ce7a8d9ed4916fbc6081",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractAFPObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/AbstractAFPObject.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/AbstractAFPObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractAFPObject.java",
                "sha": "106454ad6de1feed81138c540ae8d39c341b2f0e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractDescriptor.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/AbstractDescriptor.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/AbstractDescriptor.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractDescriptor.java",
                "sha": "6d827766e43f640f6a1c9fc5a68ef35d18b03a15",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractNamedAFPObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/AbstractNamedAFPObject.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/AbstractNamedAFPObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractNamedAFPObject.java",
                "sha": "09fa33f8fd2b91380a32c9b94d2c97e95286dfd1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractPageObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/AbstractPageObject.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/AbstractPageObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/AbstractPageObject.java",
                "sha": "984aa44c9f1a883447d1204771aef349c45ee15b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageContent.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/ImageContent.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/ImageContent.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageContent.java",
                "sha": "726c587623f2baed346929f006b9cd66e486e7b6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageDataDescriptor.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/ImageDataDescriptor.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/ImageDataDescriptor.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageDataDescriptor.java",
                "sha": "9250f0c7f9498fd2c6523e51ff5722da391b3cdc",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageSegment.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/ImageSegment.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/ImageSegment.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ImageSegment.java",
                "sha": "ea8eb334b9fb8f3b6696167af9389842bd9b7679",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ObjectAreaDescriptor.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/ObjectAreaDescriptor.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/ObjectAreaDescriptor.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/ObjectAreaDescriptor.java",
                "sha": "7c940148b6f00112a894b85f29c50f00195deee6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PageDescriptor.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/PageDescriptor.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/PageDescriptor.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PageDescriptor.java",
                "sha": "1cdec76164bb4050983caeb9d8438a4ce0ff726d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PageObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/PageObject.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/PageObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PageObject.java",
                "sha": "9a8646ba0fe41ab83666829b3b1e051f16f93662",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextData.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/PresentationTextData.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/PresentationTextData.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextData.java",
                "sha": "98beb96f7299526de477055389ab3be955f5da4b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextDescriptor.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/PresentationTextDescriptor.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/PresentationTextDescriptor.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextDescriptor.java",
                "sha": "3858f416929c46776b7d9f315dec2cd369c6bb88",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/PresentationTextObject.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/PresentationTextObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/PresentationTextObject.java",
                "sha": "5df9fdb4c940efea8247e71eb5c260a5c1c5f713",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/TagLogicalElementBean.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/modca/TagLogicalElementBean.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/modca/TagLogicalElementBean.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/afp/modca/TagLogicalElementBean.java",
                "sha": "29ac9eb5d3caefa8d9217ab8241ab30a5618e86f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/CustomFontMetricsMapper.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/CustomFontMetricsMapper.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/java2d/CustomFontMetricsMapper.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/CustomFontMetricsMapper.java",
                "sha": "3a773a2dba1788f885ae8331291a20969da8477a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/Java2DRenderer.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "sha": "583d2ad2f550c4b4a4d06851ada23c4117ad69eb",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/SystemFontMetricsMapper.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/SystemFontMetricsMapper.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/java2d/SystemFontMetricsMapper.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/java2d/SystemFontMetricsMapper.java",
                "sha": "19e9a4d1de669c0c05ec580e0da15f9e8f6fd61e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/AbstractImageAdapter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/AbstractImageAdapter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/AbstractImageAdapter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/AbstractImageAdapter.java",
                "sha": "caf8928ac9dbff73f743f5c40b462adc0459f10a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/ImageRawJPEGAdapter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/ImageRawJPEGAdapter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/ImageRawJPEGAdapter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/ImageRawJPEGAdapter.java",
                "sha": "1c8fceb5055f6748a86ef4cae28608272f312306",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/PDFGraphics2DAdapter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFGraphics2DAdapter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFGraphics2DAdapter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/PDFGraphics2DAdapter.java",
                "sha": "c47b944d0c8effaf21bb236d3738dbcc2eb6648b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFRenderer.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "sha": "55524534e182768e93cfe6361c1b1acec91d1b42",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/ps/PSFontUtils.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSFontUtils.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSFontUtils.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/ps/PSFontUtils.java",
                "sha": "1566ef7995a97a869663ccc840dd515cb7d4521a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/render/ps/PSImageUtils.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSImageUtils.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSImageUtils.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/render/ps/PSImageUtils.java",
                "sha": "004d5a22a91bc012ac245a2e4520dc01d66d1b77",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSRenderer.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSRenderer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "sha": "7e32977e6ad1fe34f5668800e0f4c8693f27e562",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/render/rtf/SVGConverter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/SVGConverter.java?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/rtf/SVGConverter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/src/java/org/apache/fop/render/rtf/SVGConverter.java",
                "sha": "11ba8dc8214f64afaa3811300c9330973346d14e",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/GraphicsConfiguration.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/GraphicsConfiguration.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/GraphicsConfiguration.java",
                "previous_filename": "src/java-1.4/org/apache/fop/svg/GraphicsConfiguration.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/GraphicsConfiguration.java",
                "sha": "a92baed2731d1fde3d4cede7444096b33cc8f462",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFGraphics2D.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/PDFGraphics2D.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/PDFGraphics2D.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFGraphics2D.java",
                "sha": "f6a7cbc3ba8cf09e66ded5e10b9cc06e003d9b85",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFTextPainter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/PDFTextPainter.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/PDFTextPainter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFTextPainter.java",
                "sha": "754b0794ba1358642052ea2b1b67d03f30c8a696",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFTextUtil.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/PDFTextUtil.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/PDFTextUtil.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/src/java/org/apache/fop/svg/PDFTextUtil.java",
                "sha": "f3c7f31a2fc81ca444bd145f5756309496685d38",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/status.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/status.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "status.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/status.xml",
                "sha": "a008177c11181388043d6d2193a9084177f96c82",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/java/org/apache/fop/URIResolutionTestCase.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/URIResolutionTestCase.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/URIResolutionTestCase.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/java/org/apache/fop/URIResolutionTestCase.java",
                "sha": "106ec0a2c682db3ef9f82d0bcf308dd1805bcf6d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/java/org/apache/fop/render/pdf/PDFEncodingTestCase.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/render/pdf/PDFEncodingTestCase.java?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/render/pdf/PDFEncodingTestCase.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/java/org/apache/fop/render/pdf/PDFEncodingTestCase.java",
                "sha": "c9fba08c7bf8c673438d836af874b43d95061ffb",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/disabled-testcases.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/disabled-testcases.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/disabled-testcases.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/disabled-testcases.xml",
                "sha": "b4de16ef4a2b423739d40ff2d6801f0ce22660ee",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block-container_absolute-position_no-height_3.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/block-container_absolute-position_no-height_3.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/block-container_absolute-position_no-height_3.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block-container_absolute-position_no-height_3.xml",
                "sha": "d2eba0d3c03c74db4f4ff6030190d87656d2e384",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block-level_break-after_bug44412.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/block-level_break-after_bug44412.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/block-level_break-after_bug44412.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block-level_break-after_bug44412.xml",
                "sha": "523d22c6f3c0361fba4babe25f363409bb2d4467",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block_break-before_bug44412.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/block_break-before_bug44412.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/block_break-before_bug44412.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/block_break-before_bug44412.xml",
                "sha": "9ef4150b5a520d3d118c8a92999ff31886dce951",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/inline_block-level_nested_1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/inline_block-level_nested_1.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/inline_block-level_nested_1.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/inline_block-level_nested_1.xml",
                "sha": "6b6761deea397589ca3a138c9cdfc384c2f99917",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-body_background-image.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-body_background-image.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-body_background-image.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-body_background-image.xml",
                "sha": "2a9aa93628b490afb947b5874471f55306d7bd86",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-cell_block_keep-with-previous.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-cell_block_keep-with-previous.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-cell_block_keep-with-previous.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-cell_block_keep-with-previous.xml",
                "sha": "00257a10a08c12388f708be18379c06af56c0d8f",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-cell_conditional-spaces_2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-cell_conditional-spaces_2.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-cell_conditional-spaces_2.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-cell_conditional-spaces_2.xml",
                "sha": "9a0920cf1d60554404324b1b0f032cb09e1d8bb4",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-footer_omit-footer-at-break.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-footer_omit-footer-at-break.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-footer_omit-footer-at-break.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-footer_omit-footer-at-break.xml",
                "sha": "59c60f72ee455bb4af132ecf202e425896a75309",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-header_background-image.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-header_background-image.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-header_background-image.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table-header_background-image.xml",
                "sha": "f74c13b0dff74ca148a30a0fccf805023a1f77fa",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_omit-header-at-break.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-header_omit-header-at-break.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-header_omit-header-at-break.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_omit-header-at-break.xml",
                "sha": "5ec211645d1f4b4cb615772183d797547e4e2ec7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_table-footer_1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-header_table-footer_1.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-header_table-footer_1.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_table-footer_1.xml",
                "sha": "00cbcde548bb8baf3273dc3e574fda57cb12a3c6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_table-footer_2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-header_table-footer_2.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-header_table-footer_2.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-header_table-footer_2.xml",
                "sha": "7716dfe584182e03a369736064d06a9ad52d009b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_background-image.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-row_background-image.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-row_background-image.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_background-image.xml",
                "sha": "f4dc65ae7bb08645060ea94c7bbfd4db68096d3a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_height.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-row_height.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-row_height.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_height.xml",
                "sha": "934afa69f384d4d21020073825eb1644c7746617",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_keep-with-previous.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table-row_keep-with-previous.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table-row_keep-with-previous.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table-row_keep-with-previous.xml",
                "sha": "e6131308a863b8ac55bb7c54585174ed9031c221",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_backgrounds.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_backgrounds.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_backgrounds.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_backgrounds.xml",
                "sha": "30564ecf7e7822de89a178c7b66343429da25ffd",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_backgrounds_2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_backgrounds_2.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_backgrounds_2.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_backgrounds_2.xml",
                "sha": "300d542347f85192b5bde85c9c7b3f9d67b90bef",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table_border-collapse_collapse_1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_border-collapse_collapse_1.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_border-collapse_collapse_1.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table_border-collapse_collapse_1.xml",
                "sha": "052eaa1c9d3d1d9fd68790be777a77404d37abda",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table_border-collapse_collapse_2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_border-collapse_collapse_2.xml?ref=8aea6dca9c87eceacace44a78534f23f45096162",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_border-collapse_collapse_2.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/8aea6dca9c87eceacace44a78534f23f45096162/test/layoutengine/standard-testcases/table_border-collapse_collapse_2.xml",
                "sha": "cd2575822aec0d3152453abcfc4935246271d2f7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_border-collapse_separate_1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_border-collapse_separate_1.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_border-collapse_separate_1.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_border-collapse_separate_1.xml",
                "sha": "8a9370a5c3204b9bee44b87f7da42e405db216b1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_border_padding.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_border_padding.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_border_padding.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_border_padding.xml",
                "sha": "3852429030bafaf962bb2a56527845157f81d9be",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_bug44621.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_bug44621.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_bug44621.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_bug44621.xml",
                "sha": "b4b9edbd037d14c335c618fe95c97985ddc4b29b",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_row-delay_fixed-row-height.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_row-delay_fixed-row-height.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_row-delay_fixed-row-height.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_row-delay_fixed-row-height.xml",
                "sha": "0c6ed10eb07bce7612b4043898bedd8a10e7e84e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_row-height_break.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/layoutengine/standard-testcases/table_row-height_break.xml?ref=068f78cf23e72c8f596c982eda4f295e7e7d5aed",
                "deletions": 0,
                "filename": "test/layoutengine/standard-testcases/table_row-height_break.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/068f78cf23e72c8f596c982eda4f295e7e7d5aed/test/layoutengine/standard-testcases/table_row-height_break.xml",
                "sha": "b6c7d8d374f5441ac5ccd23e159046c3c28f2792",
                "status": "added"
            }
        ],
        "message": "Merged revisions 611142,611175,611278,611285,611766-611768,612560,612785,612815-612816,612825,613144,613185,613828,613831,613835,613896,614156,614169-614170,614191,614201-614202,614566,614845,614920,614924,614964,614966,614993,615144,615164,615197,615251,615598,615604,615845,615906,615917,616080,616191,616260,616334,616485,616691,616694,616798,617126,617473,617512,617531,617550,617708,617716,617765,617812,617907,617909,617976,617989,618239,618470,618626-618627,618992,619417,619461,619670,619674,619790,619854,619856,619870,619923,619979,620272,620276-620278,620283,620285,620558-620559,620565,620567,620570,620723,620750,620761,627318,627324,627367,627495,627497,627553,627576,627679,627698,627702,627712,627719,627721,628140,628280,628652,628668,628775,628804,628816,628826,628829,629048,629093,629103,629129,629131,629169,629769,629902,630215,630772,630814,631178,631226,631276,631575,631609,631984,632121-632122,632321,632558,632716,632784,632938,632972,633389-633391,633396-633397,633437,633460,633470,633473,633525,633557,633559,633561,633961,634187,635508,635686,635701,635741,635884,635961,635967,636276,636293,636295,636405,636409,636471,637057,637076,638396,640089,640242,641742,641764,641827 via svnmerge from \nhttps://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n\n................\n  r611142 | jeremias | 2008-01-11 11:13:42 +0000 (Fri, 11 Jan 2008) | 3 lines\n  \n  Initialized merge tracking via \"svnmerge\" with revisions \"1-594557\" from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign\n................\n  r611175 | jeremias | 2008-01-11 13:41:54 +0000 (Fri, 11 Jan 2008) | 4 lines\n  \n  Removed merge tracking for \"svnmerge\" for \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign\n  \n  (I'm not happy with the result)\n................\n  r611278 | jeremias | 2008-01-11 19:50:53 +0000 (Fri, 11 Jan 2008) | 925 lines\n  \n  Merged branch https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign (revs 594558 to 611138) into Trunk:\n  A new image loading framework has been introduced to fix various problems with external graphics and improve performance.\n  \n  Switched to Batik 1.7.\n  Added xml-apis-ext.jar as needed by Batik 1.7.\n  Updated to latest XML Graphics Commons snapshot.\n  \n  Changelog of branch:\n  ------------------------------------------------------------------------\n  r594558 | jeremias | 2007-11-13 16:04:56 +0100 (Di, 13 Nov 2007) | 1 line\n  \n  Branch for image package redesign\n  ------------------------------------------------------------------------\n  r594560 | jeremias | 2007-11-13 16:10:35 +0100 (Di, 13 Nov 2007) | 1 line\n  \n  Implementation of Dijkstra's algorithm for finding the shortest path. Used in the new image package to find the best combination of image loaders and image converters to provide an image in the optimal form for a renderer.\n  ------------------------------------------------------------------------\n  r594848 | jeremias | 2007-11-14 13:12:50 +0100 (Mi, 14 Nov 2007) | 3 lines\n  \n  Initial upload of what I have already for the image package redesign.\n  For now, it's in a parallel package (image2). The final package name is TBD.\n  The code isn't hooked into the renderers, yet, and there's no image cache. This is still all work in progress.\n  ------------------------------------------------------------------------\n  r594851 | jeremias | 2007-11-14 13:20:12 +0100 (Mi, 14 Nov 2007) | 1 line\n  \n  Test cases and additional test files for the new image package.\n  ------------------------------------------------------------------------\n  r595305 | jeremias | 2007-11-15 15:01:37 +0100 (Do, 15 Nov 2007) | 1 line\n  \n  Small mistake while reimplementing JPEG.\n  ------------------------------------------------------------------------\n  r595308 | jeremias | 2007-11-15 15:13:36 +0100 (Do, 15 Nov 2007) | 5 lines\n  \n  Introduced a usage penalty for ImageLoaders so we can calculate an overall penalty for a pipeline.\n  Multiple image flavors can be passed to ImageManager.getImage() if the caller supports multiple formats. The image package chooses the best pipeline.\n  Implemented a converter from RenderedImage to PNG.\n  Implemented loaders for raw formats (EMF, JPEG and PNG).\n  Hooked the new image package into the RTF handler as first real proof-of-concept.\n  ------------------------------------------------------------------------\n  r596240 | jeremias | 2007-11-19 11:02:13 +0100 (Mo, 19 Nov 2007) | 1 line\n  \n  Fixed bug in pipeline selection.\n  ------------------------------------------------------------------------\n  r596242 | jeremias | 2007-11-19 11:03:06 +0100 (Mo, 19 Nov 2007) | 1 line\n  \n  MIME type in parentheses behind the URI makes more sense.\n  ------------------------------------------------------------------------\n  r599430 | jeremias | 2007-11-29 14:08:01 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Support for baseline information (needed by at least MathML).\n  ------------------------------------------------------------------------\n  r599433 | jeremias | 2007-11-29 14:09:04 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Bugfix: BMP don't all have resolution information.\n  ------------------------------------------------------------------------\n  r599434 | jeremias | 2007-11-29 14:10:54 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Change MIME type\n  ------------------------------------------------------------------------\n  r599436 | jeremias | 2007-11-29 14:17:14 +0100 (Do, 29 Nov 2007) | 3 lines\n  \n  Started integrating into Java2D and PostScript renderers and ExternalGraphic.\n  Added support for EPS graphics.\n  Added support for raw embedding of JPEG images (for PostScript).\n  ------------------------------------------------------------------------\n  r600821 | jeremias | 2007-12-04 08:51:06 +0100 (Di, 04 Dez 2007) | 5 lines\n  \n  Clean up\n  Javadocs\n  Generally make more useful.\n  Reuse FOProcessor instance for the whole run to actually feel the effect of an image cache attached to the FopFactory.\n  Add option to prompt the user before actually starting (in order to connect a VM monitor).\n  ------------------------------------------------------------------------\n  r600870 | jeremias | 2007-12-04 11:27:51 +0100 (Di, 04 Dez 2007) | 14 lines\n  \n  Note: The API of the new image package has changed a bit. (it became necessary when I introduced caching)\n  \n  The direct dependency on FOUserAgent has been removed to make the image package more universally usable. Instead an ImageContext (provided by FopFactory in FOP) and ImageSessionContext (provided by FOUserAgent in FOP) was introduced.\n  Introduced image caching with soft references (I didn't reintroduce the FOUserAgent lock, yet, because it doesn't help much)\n  ImageInfo doesn't carry the Source for the image anymore. The Source is provided by the new ImageSessionContext.java and only shared within the same thread to make things simpler and to avoid complex synchronization and cleanup.\n  Image instances now indicate whether they are cacheable (not all Image instances are cacheable, for example when they just carry an InputStream).\n  Moved the converter pipeline functionality into its own subpackage to keep \"spi\" clean.\n  Added checks in ImageSize to detect incomplete Preloaders.\n  ImageSource can now indicate whether its a fast source (loading from local file) or a slow source (loading over the network). (but this isn't used, yet)\n  Fixed a bug in WMF and SVG preloaders: they didn't close their Sources after fully loading the images.\n  Bugfix in ImageRawJPEG: it illegally reported being an EPS file\n  ImageRawStream got an \"InputStreamFactory\" so it is possible to reuse raw images if they have been loaded into memory (or to a local file which hasn't been implemented, yet).\n  The pipeline code now converts single-use raw images to reusable raw images when possible. But there's nothing built in to restrict the image size to a maximum, yet.\n  Improved JPEG preloader so it can stop early an deal with images that have to APP0 segment. Images from digicams are such an example. They carry the resolution info in the EXIF block which is currently not interpreted. Fallback is to the configured source resolution.\n  ------------------------------------------------------------------------\n  r600930 | jeremias | 2007-12-04 14:25:43 +0100 (Di, 04 Dez 2007) | 1 line\n  \n  Package HTML Files.\n  ------------------------------------------------------------------------\n  r600934 | jeremias | 2007-12-04 14:34:41 +0100 (Di, 04 Dez 2007) | 1 line\n  \n  Javadoc fixes\n  ------------------------------------------------------------------------\n  r602023 | jeremias | 2007-12-07 09:46:56 +0100 (Fr, 07 Dez 2007) | 2 lines\n  \n  Bugfix for bug in SVG preloader which didn't calculate the size of an SVG correctly when there's no explicit size.\n  \n  ------------------------------------------------------------------------\n  r602024 | jeremias | 2007-12-07 09:49:49 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Some small javadoc and logging improvements/refinements.\n  ------------------------------------------------------------------------\n  r602025 | jeremias | 2007-12-07 09:50:22 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Enable assert keyword for javadoc production.\n  ------------------------------------------------------------------------\n  r602032 | jeremias | 2007-12-07 09:59:10 +0100 (Fr, 07 Dez 2007) | 11 lines\n  \n  Added color space information and an optional ICC color profile to the basic Image interface.\n  Reimplemented transparency support (for now only for ImageIO loader and PDF output)\n  ImageIO preloader passes the already loaded metadata to the ImageIO loader through the \"custom objects\" so it doesn't have to load them again.\n  PDF library: Corrected the naming of the method indicating the \"bits per component\" (bits per component != bits per pixel)\n  PDF library: Added a method which lets a user override values in an XObject's dictionary after the major values have been set (useful not to make the PDFImage interface more complicated).\n  PDF library: Support for gray transparent colors.\n  PDF library: Added a convenience class for alpha channel bitmaps (AlphaRasterImage)\n  \n  Integration of the new image package into the PDFRenderer (currently supports all previous embedding methods except deprecated EPS embedding and CCITT embedding, now supports even more transparency options than before)\n  \n  \n  ------------------------------------------------------------------------\n  r602033 | jeremias | 2007-12-07 09:59:57 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Small optimization from my failed experiments to support native PNG embedding.\n  ------------------------------------------------------------------------\n  r602034 | jeremias | 2007-12-07 10:01:34 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Don't use \"content\" filter for ICC profiles. Instead compress using \"default\". \"content\" is for page content.\n  ------------------------------------------------------------------------\n  r602036 | jeremias | 2007-12-07 10:02:25 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Added general key for precompressed content of any kind.\n  ------------------------------------------------------------------------\n  r602037 | jeremias | 2007-12-07 10:03:39 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Various variants of the FOP logo for testing. Some of them have transparency info.\n  ------------------------------------------------------------------------\n  r602228 | jeremias | 2007-12-07 22:30:17 +0100 (Fr, 07 Dez 2007) | 4 lines\n  \n  Discarded PreloaderPNG in favor of PreloaderImageIO which now supports all formats supported by ImageIO (meaning that you can uses JPEG-2000 images if you have a suitable ImageIO codec installed).\n  ImagePreloader.getMimeType() removed because it isn't really used in the new setup.\n  ImagePreloader.getPriority() introduced which allows to prioritize preloaders and thus gives the opportunity to tweak the order in which the preloaders are checked when an image is inspected.\n  ImageLoaderImageIO can now use multiple Readers if one fails (one codec may not support all format variants, for example).\n  ------------------------------------------------------------------------\n  r602229 | jeremias | 2007-12-07 22:30:48 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Added a toString() impl for debugging.\n  ------------------------------------------------------------------------\n  r602442 | jeremias | 2007-12-08 11:36:32 +0100 (Sa, 08 Dez 2007) | 6 lines\n  \n  Support handling images with no associated URI (from instream-foreign-object). These images are not cached.\n  Add support for plain image conversion (i.e. with no loading) for instream-foreign-object.\n  Add convenience writeTo() methods in ImageRawStream to save a few lines of code.\n  \n  Support for instream-foreign-object in RTF output.\n  Teach RTF library to handle images without an associated URL.\n  ------------------------------------------------------------------------\n  r603191 | jeremias | 2007-12-11 11:03:32 +0100 (Di, 11 Dez 2007) | 2 lines\n  \n  Bugfix: Graphics2DAdapter didn't do the graphics state save correct so subsequent images may have been painted with the wrong transformation matrix.\n  Bugfix: bitmap images didn't scale correctly when the resolutions were changed.\n  ------------------------------------------------------------------------\n  r603207 | jeremias | 2007-12-11 12:08:36 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Convenience method for obtaining the image size in points.\n  ------------------------------------------------------------------------\n  r603208 | jeremias | 2007-12-11 12:12:50 +0100 (Di, 11 Dez 2007) | 3 lines\n  \n  Precisely define the expectations for the area parameter in Graphics2DImagePainter.\n  New ImageConverter: Bitmap -> Graphics2D\n  \n  ------------------------------------------------------------------------\n  r603209 | jeremias | 2007-12-11 12:15:49 +0100 (Di, 11 Dez 2007) | 3 lines\n  \n  Refine pipeline building:\n  Expose a method to allow the PS Renderer to predict what kind of pipeline will be selected (because it doesn't support all image types as PostScript forms)\n  If there are multiple candidate pipelines for one conversion type, choose the one with the lowest penalty, not just the one that happens to be first.\n  ------------------------------------------------------------------------\n  r603250 | jeremias | 2007-12-11 15:17:32 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Removing failed experiment: raw PNG embedding didn't work out.\n  ------------------------------------------------------------------------\n  r603254 | jeremias | 2007-12-11 15:29:48 +0100 (Di, 11 Dez 2007) | 2 lines\n  \n  Plugged new image package into form generation for PostScript.\n  XML images and EPS files are currently supported as forms. They are added inline.\n  ------------------------------------------------------------------------\n  r603256 | jeremias | 2007-12-11 15:34:52 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Embedding EPS in PDF is no longer implemented as it is a deprecated feature in PDF. Therefore, this test is not needed anymore. The PDF renderer will say: \"Cannot load image (no suitable loader/converter combination available) for myfile.eps (application/postscript)\"\n  ------------------------------------------------------------------------\n  r603266 | jeremias | 2007-12-11 16:16:22 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Size calculation for images can be slightly different after the redesign due to different rounding. Give a little tolerance.\n  ------------------------------------------------------------------------\n  r603271 | jeremias | 2007-12-11 16:24:08 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Bugfix: Only generate the FixedLength if there is baseline information.\n  ------------------------------------------------------------------------\n  r603358 | jeremias | 2007-12-11 22:13:22 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Switched background images to new image package.\n  ------------------------------------------------------------------------\n  r603632 | jeremias | 2007-12-12 15:52:09 +0100 (Mi, 12 Dez 2007) | 1 line\n  \n  Switch to new image package for PDF/SVG support.\n  ------------------------------------------------------------------------\n  r603642 | jeremias | 2007-12-12 16:30:16 +0100 (Mi, 12 Dez 2007) | 3 lines\n  \n  Initialized merge tracking via \"svnmerge\" with revisions \"1-594557\" from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ------------------------------------------------------------------------\n  r603656 | jeremias | 2007-12-12 17:13:06 +0100 (Mi, 12 Dez 2007) | 307 lines\n  \n  Merged revisions 594558-603642 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r594571 | vhennebert | 2007-11-13 17:24:32 +0100 (Di, 13 Nov 2007) | 7 lines\n    \n    Moved the creation of grid units to the FO tree building stage. Brought a few improvements along with the move:\n    - bugfix: border-resolution for border-end on row-spanning cells was wrong\n    - bugfix: in case of missing cells the border-end of the table was applied to an inner cell, instead of the cell in the last column (but missing cells aren't painted yet :-\\)\n    - bugfix: in collapsing-border model, border-before and -after specified on table-column were applied to every cell of the column, instead of only the first and the last ones\n    - border resolution is now made progressively when possible, and no longer triggers the fetching of all the rows of the table\n    Added testcases for the border conflict resolution (between the various elements of a table and not only the cells)\n  ........\n    r594578 | vhennebert | 2007-11-13 17:50:09 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Moved *GridUnit from layoutmgr/table to fo/flow/table\n  ........\n    r594579 | vhennebert | 2007-11-13 17:55:54 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Changed back visibility of fields from public to package-private, due to the move of *GridUnit in the fo.flow.table package\n  ........\n    r594584 | vhennebert | 2007-11-13 18:13:19 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Use a singleton for a default BorderInfo of style none, instead of every time a new instance\n  ........\n    r594592 | vhennebert | 2007-11-13 18:39:17 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Cleaned up RowGroupLayoutManager and TableRowIterator\n  ........\n    r594821 | vhennebert | 2007-11-14 11:18:45 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Moved EffRow to the fo.flow.table package\n  ........\n    r594829 | vhennebert | 2007-11-14 11:41:52 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Reduced visibility of some methods and constructors from public to package-private, as a consequence of the move of *GridUnit to the fo.flow.table package\n  ........\n    r594836 | vhennebert | 2007-11-14 12:14:03 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Restored the setting of the parent table-row element on grid units\n  ........\n    r594852 | vhennebert | 2007-11-14 13:21:53 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Restored the setting of rowIndex on primary grid units (although testcases were already working...)\n  ........\n    r595297 | jeremias | 2007-11-15 14:28:58 +0100 (Do, 15 Nov 2007) | 2 lines\n    \n    Bugzilla #43143:\n    Had to remove the Expert(Subset) Encoding detection as this caused problems with a barcode font that used dfCharset=2 but was not using ExpertSubset encoding. To detect Expert(Subset)Encoding, the AFM needs to be parsed. And since we don't support that encoding, yet, the fallback to WinAnsiEncoding should work well enough.\n  ........\n    r595637 | acumiskey | 2007-11-16 13:12:52 +0100 (Fr, 16 Nov 2007) | 3 lines\n    \n    This should improve the ability of the FontLoader when resolving PFM files\n    for Type 1 fonts on case sensitive Unix systems.\n  ........\n    r596072 | jeremias | 2007-11-18 11:48:53 +0100 (So, 18 Nov 2007) | 4 lines\n    \n    ApacheCon US is over.\n    OSSSummit was cancelled/postponed.\n    Added example for total page count using XSL 1.1\n    Adjusted total page count example to new FOP API. (Thanks to Miroslav Gregan for the hint)\n  ........\n    r596097 | jeremias | 2007-11-18 17:56:09 +0100 (So, 18 Nov 2007) | 6 lines\n    \n    Bugzilla #43605:\n    Added methods for page-number-citation and page-number-citation-last in FOEventHandler.java\n    Submitted by: V. Schappert <vschappert.at.bloomberg.net>\n    \n    Patch modified by Jeremias:\n    Bugfix: FOEventHandler.startPageNumberCitation() was also called in the case of a page-number-citation-last. Introduced abstract base classes to avoid this.\n  ........\n    r596100 | jeremias | 2007-11-18 18:17:24 +0100 (So, 18 Nov 2007) | 1 line\n    \n    Added sample as suggested by Kumar Puppala.\n  ........\n    r596390 | vhennebert | 2007-11-19 19:25:27 +0100 (Mo, 19 Nov 2007) | 2 lines\n    \n    Bugzilla #43766: breaks generated by the merging algorithm for table rows containing empty cells has always a penalty of 900\n  ........\n    r596554 | jeremias | 2007-11-20 08:14:33 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugzilla #43904:\n    Buffer the OutputStreams in our transcoders if the users forget.\n  ........\n    r596600 | jeremias | 2007-11-20 11:20:29 +0100 (Di, 20 Nov 2007) | 3 lines\n    \n    Bugzilla #43910:\n    Avoid a NullPointerException in AreaTreeHandler.endDocument().\n    Submitted by: David Delbecq <delbd.at.oma.be>\n  ........\n    r596724 | jeremias | 2007-11-20 16:56:33 +0100 (Di, 20 Nov 2007) | 3 lines\n    \n    Bugfix: Bugfix for URI resolution: Make StreamSources without system identifier work again.\n    Bugfix: Close streams opened by test font resolution in font configuration (the font URIs will be resolved again later anyway).\n    Better error message when the loading of font metric files doesn't work due to missing information in the returned Source instances.\n  ........\n    r596727 | vhennebert | 2007-11-20 17:07:32 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugfix in tables: wrong element generation by the merging algorithm when glues must be produced to cope with conditional spaces. The corresponding length was added twice: one in the glue itself and one in the following box.\n  ........\n    r596739 | cbowditch | 2007-11-20 17:49:13 +0100 (Di, 20 Nov 2007) | 1 line\n    \n    bug fix: memory leak in PropertyCache. Fix provided by Jeremias. There are still some thread synchronization issues to be addressed in the PropertyCache. See the following thread for details: http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-dev/200711.mbox/%3cBAY117-DAV109E36CC066889386AB917FB870@phx.gbl%3e\n  ........\n    r596742 | vhennebert | 2007-11-20 18:08:46 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Added a news entry about Max Berger becoming a committer. Welcome Max!\n  ........\n    r596776 | vhennebert | 2007-11-20 19:47:39 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugzilla #43803: table cells having no children are allowed in relaxed validation mode.\n  ........\n    r597052 | vhennebert | 2007-11-21 13:23:59 +0100 (Mi, 21 Nov 2007) | 2 lines\n    \n    Bugfix: the last element generated by the merging algorithm may now be a glue\n  ........\n    r597448 | jeremias | 2007-11-22 17:13:05 +0100 (Do, 22 Nov 2007) | 2 lines\n    \n    First draft of a possible new intermediate format for Apache FOP.\n    Details on: http://wiki.apache.org/xmlgraphics-fop/AreaTreeIntermediateXml/NewDesign\n  ........\n    r598558 | jeremias | 2007-11-27 09:36:23 +0100 (Di, 27 Nov 2007) | 6 lines\n    \n    Bugzilla #40230:\n    Bugfix: no empty page is generated anymore if there's no content after a break-after.\n    \n    Bugzilla #43917:\n    Bugfix for border-after painting and element list generation when a forced break is involved.\n  ........\n    r599536 | vhennebert | 2007-11-29 19:31:13 +0100 (Do, 29 Nov 2007) | 4 lines\n    \n    Added fixes-bug attributes for:\n    - wrong element generation in table when glues are produced\n    - border-resolution on row-spanning cells\n  ........\n    r599746 | jeremias | 2007-11-30 10:04:54 +0100 (Fr, 30 Nov 2007) | 2 lines\n    \n    Bugzilla #37993:\n    Bugfix: allow multiple bookmarks to point at the same destination.\n  ........\n    r600195 | adelmelle | 2007-12-01 22:11:53 +0100 (Sa, 01 Dez 2007) | 1 line\n    \n    Correction and simplification of the PropertyCache: subclass WeakReference and remove internal threading\n  ........\n    r600467 | jeremias | 2007-12-03 11:16:27 +0100 (Mo, 03 Dez 2007) | 2 lines\n    \n    Log RuntimeExceptions during rendering so that they are at least visible somewhere if someone doesn't set an ErrorListener on the XSLT processor (this could lead to exceptions being swallowed). This is a temporary measure until we have time to improve the exception handling in FOP.\n    The original problem that led to this change was: \"The number of this PDFNumber must not be empty\" while producing a PDF/A with customized filter entries in the PDF configuration. The exception was a follow-up exception after a PDFConformanceException that was swallowed by a default ErrorListener.\n  ........\n    r600521 | jeremias | 2007-12-03 14:21:06 +0100 (Mo, 03 Dez 2007) | 1 line\n    \n    Added a possibility to rerun the whole run a defined number of times to test for possible issues outside a single rendering run.\n  ........\n    r600529 | jeremias | 2007-12-03 14:32:04 +0100 (Mo, 03 Dez 2007) | 1 line\n    \n    Oops.\n  ........\n    r601413 | vhennebert | 2007-12-05 17:56:47 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Typo in property: svn:kewords -> svn:keywords\n  ........\n    r601415 | acumiskey | 2007-12-05 18:11:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadocs\n  ........\n    r601416 | acumiskey | 2007-12-05 18:12:54 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc\n  ........\n    r601417 | acumiskey | 2007-12-05 18:13:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc\n  ........\n    r601419 | acumiskey | 2007-12-05 18:15:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Improved use of logging\n  ........\n    r601423 | acumiskey | 2007-12-05 18:19:43 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc, fixed checkstyle issues, and now also correctly caters for negative number conversions\n  ........\n    r601424 | acumiskey | 2007-12-05 18:21:15 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Fixed checkstyle issues\n  ........\n    r601426 | acumiskey | 2007-12-05 18:24:15 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601427 | acumiskey | 2007-12-05 18:25:07 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601428 | acumiskey | 2007-12-05 18:25:58 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601429 | acumiskey | 2007-12-05 18:27:06 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601430 | acumiskey | 2007-12-05 18:28:03 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601431 | acumiskey | 2007-12-05 18:28:48 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601432 | acumiskey | 2007-12-05 18:29:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601433 | acumiskey | 2007-12-05 18:30:04 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601434 | acumiskey | 2007-12-05 18:31:20 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601435 | acumiskey | 2007-12-05 18:32:29 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601436 | acumiskey | 2007-12-05 18:34:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601437 | acumiskey | 2007-12-05 18:35:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601438 | acumiskey | 2007-12-05 18:36:12 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes and cleanup\n  ........\n    r601439 | acumiskey | 2007-12-05 18:37:40 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601440 | acumiskey | 2007-12-05 18:39:54 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601442 | acumiskey | 2007-12-05 18:42:13 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601443 | acumiskey | 2007-12-05 18:42:48 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601444 | acumiskey | 2007-12-05 18:43:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601445 | acumiskey | 2007-12-05 18:44:36 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601446 | acumiskey | 2007-12-05 18:45:20 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601447 | acumiskey | 2007-12-05 18:47:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601448 | acumiskey | 2007-12-05 18:48:56 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601449 | acumiskey | 2007-12-05 18:49:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601712 | acumiskey | 2007-12-06 12:57:14 +0100 (Do, 06 Dez 2007) | 2 lines\n    \n    Temporary fix to the build\n  ........\n    r602045 | jeremias | 2007-12-07 10:20:28 +0100 (Fr, 07 Dez 2007) | 1 line\n    \n    Avoid a NPE in toString().\n  ........\n    r602125 | maxberger | 2007-12-07 16:36:53 +0100 (Fr, 07 Dez 2007) | 6 lines\n    \n    Updated xmlgraphics from SVN\n    Added autodetection of fonts in jar files (x-font and x-font-truetype)\n    Added files needed for testcase\n    Please note: Actual testcase is still missing!\n  ........\n    r602898 | maxberger | 2007-12-10 14:35:33 +0100 (Mo, 10 Dez 2007) | 2 lines\n    \n    Added documentation for font-in-jar-files\n  ........\n    r603590 | acumiskey | 2007-12-12 13:24:10 +0100 (Mi, 12 Dez 2007) | 4 lines\n    \n    * Added an SVG handler and Graphics2D implementation for AFP which injects AFP GOCA structured fields into the AFPDataStream.\n    * Fixed many checkstyle problems.\n    * Updated xmlgraphics-commons-1.3svn.jar to include changes to TextHandler\n  ........\n    r603592 | acumiskey | 2007-12-12 13:26:39 +0100 (Mi, 12 Dez 2007) | 2 lines\n    \n    Updated status with SVG support for AFP.\n  ........\n  \n  ------------------------------------------------------------------------\n  r603661 | jeremias | 2007-12-12 17:20:09 +0100 (Mi, 12 Dez 2007) | 1 line\n  \n  Fix javadoc\n  ------------------------------------------------------------------------\n  r603886 | jeremias | 2007-12-13 12:15:48 +0100 (Do, 13 Dez 2007) | 1 line\n  \n  Copy/paste programming is dangerous. :-)\n  ------------------------------------------------------------------------\n  r603902 | jeremias | 2007-12-13 13:17:56 +0100 (Do, 13 Dez 2007) | 2 lines\n  \n  Factored out all image handling code in the PDFRenderer into PDFImageHandler classes. The interface was introduced to handle PDF-in-PDF images.\n  The PDFImageHandler interface changes in a backwards-incompatible way but since the PDF-in-PDF plug-in probably has the only implementation, that's not very problematic. I'll release a new version as soon as the image stuff is merged back into Trunk.\n  ------------------------------------------------------------------------\n  r603937 | jeremias | 2007-12-13 16:20:46 +0100 (Do, 13 Dez 2007) | 1 line\n  \n  Some cleanup\n  ------------------------------------------------------------------------\n  r603938 | jeremias | 2007-12-13 16:23:23 +0100 (Do, 13 Dez 2007) | 2 lines\n  \n  Switch PCL renderer to new image package.\n  Add an option to force a color canvas (RGB) instead of a gray canvas. Set this to true for all SVG graphics since Batik does not seem to support gradients on a grayscale canvas (IllegalArgumentException).\n  ------------------------------------------------------------------------\n  r604122 | jeremias | 2007-12-14 08:58:56 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Stupid copy/paste again.\n  ------------------------------------------------------------------------\n  r604135 | jeremias | 2007-12-14 10:04:43 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Preliminary changes to switch to the new image library. TIFF optimizations still missing. Untested.\n  ------------------------------------------------------------------------\n  r604144 | jeremias | 2007-12-14 11:12:41 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Switch to new image package. At some point we will probably want to remove this example as JEuclid has a better plug-in now.\n  ------------------------------------------------------------------------\n  r604150 | jeremias | 2007-12-14 11:27:39 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Old JEuclid doesn't notice itself if no MathML document is loaded.\n  ------------------------------------------------------------------------\n  r604155 | jeremias | 2007-12-14 11:48:07 +0100 (Fr, 14 Dez 2007) | 2 lines\n  \n  Switched to new image package.\n  The preloader simply loads the full document and converts it to SVG. That's the only way to determine the intrinsic size of the image.\n  ------------------------------------------------------------------------\n  r604157 | jeremias | 2007-12-14 11:51:21 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  No longer needed.\n  ------------------------------------------------------------------------\n  r604214 | jeremias | 2007-12-14 17:07:30 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Added work-around for decoding CMYK JPEGs with ImageIO (no guarantees for color fidelity but it's better than not being able to use CMYK images).\n  ------------------------------------------------------------------------\n  r604297 | jeremias | 2007-12-14 22:14:12 +0100 (Fr, 14 Dez 2007) | 68 lines\n  \n  Merged revisions 603643-604293 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r603890 | vhennebert | 2007-12-13 12:35:17 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Fixed @throws statements in javadoc\n  ........\n    r603926 | adelmelle | 2007-12-13 15:43:08 +0100 (Do, 13 Dez 2007) | 4 lines\n    \n    Minor tweaks:\n    * only add text to a fo:wrapper if it is not a direct flow-descendant\n    * error if an fo:wrapper that is a direct flow-descendant contains inline-level children\n  ........\n    r603943 | vhennebert | 2007-12-13 16:55:29 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed calls to removeLegalBreaks since they aren't necessary (the whole content is put in a single box anyway) and the method is buggy.\n  ........\n    r603945 | vhennebert | 2007-12-13 17:10:32 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Implemented the resolution of collapsing borders in the FO tree, for every situation (normal, cell at the top of a page, cell broken), taking conditionality, headers and footers into account.\n  ........\n    r603959 | vhennebert | 2007-12-13 18:21:24 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Reverted change accidentally introduced in the previous commit. A proper fix needs to be found for this one.\n  ........\n    r603961 | vhennebert | 2007-12-13 18:31:26 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Ok, now /really/ revert the previous commit :-\\\n  ........\n    r603962 | vhennebert | 2007-12-13 18:32:43 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Style only: removed trailing white spaces\n  ........\n    r603968 | vhennebert | 2007-12-13 19:28:56 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Fixed the handling of columns in the border resolution, especially in case of column-spanning cells\n  ........\n    r603975 | vhennebert | 2007-12-13 19:52:48 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed parameter from the endPart method, since the part is already passed as a parameter of the previously called startPart method\n  ........\n    r603979 | vhennebert | 2007-12-13 19:57:25 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed parameter from the endTablePart method, as the part is already passed as as a parameter of the previously called startTablePart method\n  ........\n    r603990 | vhennebert | 2007-12-13 20:17:12 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Throw a ValidationException if table-footer is put after table-body and the table uses the collapsing border model. The footer must be known to properly resolve borders.\n  ........\n    r604171 | vhennebert | 2007-12-14 12:32:51 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Clean up: removed all reset and resetPosition methods, which pre-date the Knuth era and are no longer needed\n  ........\n    r604180 | vhennebert | 2007-12-14 13:23:10 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Reduced visibility of methods from public to package-private\n  ........\n    r604185 | acumiskey | 2007-12-14 14:16:06 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Fixed copy constructor\n  ........\n    r604293 | jeremias | 2007-12-14 21:58:53 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Bugfix: DecodeParms -> DecodeParams (introduced when I changed to generic PDF structures)\n    (fixes CCITT encoded images)\n  ........\n  \n  ------------------------------------------------------------------------\n  r604301 | jeremias | 2007-12-14 22:26:27 +0100 (Fr, 14 Dez 2007) | 9 lines\n  \n  Merged revisions 604294-604299 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r604299 | jeremias | 2007-12-14 22:24:14 +0100 (Fr, 14 Dez 2007) | 1 line\n    \n    Don't hack when you're tired! Reverting r604293 and instead fixing the right value. It's DecodeParams -> DecodeParms!\n  ........\n  \n  ------------------------------------------------------------------------\n  r604930 | jeremias | 2007-12-17 18:05:47 +0100 (Mo, 17 Dez 2007) | 2 lines\n  \n  Dispose ImageReader when done reading.\n  Don't close streams as some codecs appear to do \"late reading\" of the image, i.e. only when the rasters are accessed, at which point they still seek on the stream. For this, the streams must remain open. I hope the codecs all properly close the streams once they don't need them anymore. The javadocs are not clear enough in this regards, IMO.\n  ------------------------------------------------------------------------\n  r604968 | jeremias | 2007-12-17 20:03:45 +0100 (Mo, 17 Dez 2007) | 3 lines\n  \n  Added an isSupported() method to ImageLoaderFactory so we can check early if an ImageLoader may or may not support a particular subformat. This is used to allow optimized loading of CCITT compressed TIFF images.\n  Support for undecoded embedding of single-strip CCITT compressed images for PDF, PostScript and AFP.\n  Added a fallback mechanism for ImageLoaders: if one ImageLoader cannot load a particular image, try equivalent others registered for the same format.\n  ------------------------------------------------------------------------\n  r604972 | jeremias | 2007-12-17 20:07:43 +0100 (Mo, 17 Dez 2007) | 1 line\n  \n  Update Commons\n  ------------------------------------------------------------------------\n  r605138 | jeremias | 2007-12-18 09:42:41 +0100 (Di, 18 Dez 2007) | 2 lines\n  \n  Support for specifying a particular page number of a multi-page image (such as TIFF).\n  Format: http://localhost/images/scan1.tif#page=3\n  ------------------------------------------------------------------------\n  r605479 | jeremias | 2007-12-19 10:18:33 +0100 (Mi, 19 Dez 2007) | 3 lines\n  \n  Removed new image package after the copying it to XML Graphics Commons.\n  Adjusted to use the Commons' version.\n  Batik-dependent plugins remain but will eventually need a different resting place.\n  ------------------------------------------------------------------------\n  r605486 | jeremias | 2007-12-19 10:39:33 +0100 (Mi, 19 Dez 2007) | 1 line\n  \n  Adjust the (pre)loader registration for the demo extensions.\n  ------------------------------------------------------------------------\n  r605567 | jeremias | 2007-12-19 16:03:25 +0100 (Mi, 19 Dez 2007) | 1 line\n  \n  Fixed scaling and translation (didn't work correctly in certain situations)\n  ------------------------------------------------------------------------\n  r607034 | jeremias | 2007-12-27 11:47:12 +0100 (Do, 27 Dez 2007) | 71 lines\n  \n  Merged revisions 604300-607033 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r604475 | vhennebert | 2007-12-15 19:16:01 +0100 (Sa, 15 Dez 2007) | 2 lines\n    \n    Testcase for the resolution of collapsed and conditional borders in the FO tree\n  ........\n    r604678 | adelmelle | 2007-12-16 20:54:00 +0100 (So, 16 Dez 2007) | 8 lines\n    \n    Streamlining/Correction of the changes made in r603926\n    - delegate validation of the fo:wrapper's children to the parent: added static FONode.validateChildNode()\n    - narrow the condition for processing text-childnodes: \n      this is not only constrained to fo:flow and fo:static-content, but the same goes \n      for a fo:wrapper that is a direct descendant of a fo:block-container or fo:inline-container, \n      which only allow block-level content (interpretation)\n    - minor javadoc fixups/improvements\n  ........\n    r604814 | vhennebert | 2007-12-17 11:21:04 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Organized imports\n  ........\n    r604965 | vhennebert | 2007-12-17 19:56:46 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Renaming GridUnitPart into the more accurate CellPart. Moreover I was always making the confusion between gup and pgu\n  ........\n    r604970 | vhennebert | 2007-12-17 20:05:27 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Simplified addAreasAndFlushRow: there can no longer be null GridUnits, every hole in the grid is now filled with an EmptyGridUnit\n  ........\n    r605195 | vhennebert | 2007-12-18 12:56:38 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Reset previousRowsLength before a new row-group is handled\n  ........\n    r605246 | vhennebert | 2007-12-18 17:48:03 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Simplification in RowPainter: avoid the use of an array to store rowOffsets and firstRow index for each part of the table (header, footer, body). One at a time is enough.\n  ........\n    r605253 | vhennebert | 2007-12-18 18:01:45 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Renamed firstRow into firstRowIndex and moved its initialization into handeTableContentPosition\n  ........\n    r605295 | vhennebert | 2007-12-18 19:58:29 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Streamlined the recording of row offsets, by replacing Map with a List. Fixed bug #43633 in the same time.\n  ........\n    r605297 | vhennebert | 2007-12-18 20:02:02 +0100 (Di, 18 Dez 2007) | 3 lines\n    \n    SVG support for AFP is an important addition IMO.\n    IIUC it will have to be advertised in the next release as \"Support for SVG images using primitive AFP graphics commands instead of bitmap images\", or something like that?\n  ........\n    r605517 | vhennebert | 2007-12-19 12:47:38 +0100 (Mi, 19 Dez 2007) | 2 lines\n    \n    I said currentGU can no longer be null\n  ........\n    r605978 | jeremias | 2007-12-20 18:00:46 +0100 (Do, 20 Dez 2007) | 1 line\n    \n    Remove commented code.\n  ........\n    r606004 | jeremias | 2007-12-20 20:19:19 +0100 (Do, 20 Dez 2007) | 1 line\n    \n    Added support for scale-down-to-fit and scale-up-to-fit.\n  ........\n    r607032 | jeremias | 2007-12-27 11:34:15 +0100 (Do, 27 Dez 2007) | 4 lines\n    \n    Added new extension element: fox:external-document. It allows to add whole documents such as multi-page TIFF images to be inserted as peers to a page-sequence. Each image will make up an entire page. See the documentation for details. ATM, only single pages are possible. Multi-page images will be supported with the new image package.\n    \n    Some preparations for page-position=\"only\" but the implementation is incomplete and \"only\" has no effect, yet. (Just uploaded some stuff I once started)\n    Some javadoc cleanups.\n  ........\n  \n  ------------------------------------------------------------------------\n  r607091 | jeremias | 2007-12-27 18:13:45 +0100 (Do, 27 Dez 2007) | 1 line\n  \n  Avoid cutting away the URI fragment when building URLs from filenames.\n  ------------------------------------------------------------------------\n  r607092 | jeremias | 2007-12-27 18:15:49 +0100 (Do, 27 Dez 2007) | 3 lines\n  \n  Switched fox:external-document to new image package.\n  Added multi-page support for fox:external-document.\n  Changed multi-page.tiff: page 4 is now bigger than all other pages. (to make sure that individually sized pages are handled properly)\n  ------------------------------------------------------------------------\n  r607188 | jeremias | 2007-12-28 09:38:26 +0100 (Fr, 28 Dez 2007) | 2 lines\n  \n  Throwing IllegalStateException causes a prior exception to be swallowed by Xalan-J. Need to throw a SAXException instead.\n  Instead of logging an error about the element mismatch throw a SAXException because the logging only confuses the user as it's practically always a follow-up exception of an exception happening earlier in the respective startElement() event.\n  ------------------------------------------------------------------------\n  r607249 | jeremias | 2007-12-28 15:27:39 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Metadata didn't get transported to the renderer when only fox:external-document is used.\n  ------------------------------------------------------------------------\n  r607256 | jeremias | 2007-12-28 16:06:35 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Corrected content model.\n  ------------------------------------------------------------------------\n  r607261 | jeremias | 2007-12-28 16:11:56 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Added -imagein to command-line so (multi-page) images such as TIFF files can be converted to PDF and other formats supported by FOP. The default stylesheet can be overwritten (with -xslt) if desired.\n  ------------------------------------------------------------------------\n  r609530 | jeremias | 2008-01-07 09:16:09 +0100 (Mo, 07 Jan 2008) | 1 line\n  \n  Fixed copy/paste mistake. Thanks for spotting it, Vincent.\n  ------------------------------------------------------------------------\n  r609600 | jeremias | 2008-01-07 14:28:53 +0100 (Mo, 07 Jan 2008) | 1 line\n  \n  Removed \"image2\" package again and moved the Batik-dependent implementations under the old \"image\" package. In this form, the deprecated code doesn't conflict with the new implementations anymore.\n  ------------------------------------------------------------------------\n  r610029 | jeremias | 2008-01-08 16:48:53 +0100 (Di, 08 Jan 2008) | 3 lines\n  \n  Added minimal support for the .minimum/.maximum components of block/inline-progression-dimension on fo:external-graphic and fo:instream-foreign-object. This will only constrain the image itself but not allow the layout engine itself to resize the image as seen fit.\n  Added missing Javadocs in ImageLayout.java.\n  \n  ------------------------------------------------------------------------\n  r611120 | jeremias | 2008-01-11 10:20:57 +0100 (Fr, 11 Jan 2008) | 100 lines\n  \n  Merged revisions 607034-611115 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r607036 | jeremias | 2007-12-27 11:51:11 +0100 (Do, 27 Dez 2007) | 1 line\n    \n    Don't just exit with no error message if the document contains no content. Pretty irritating if it does so.\n  ........\n    r608812 | acumiskey | 2008-01-04 13:14:33 +0100 (Fr, 04 Jan 2008) | 3 lines\n    \n    The fonts variable would have always had an empty Configuration node (non-null value) even if a <fonts/> wasn't present\n    in the fop configuration.\n  ........\n    r609567 | jeremias | 2008-01-07 11:52:09 +0100 (Mo, 07 Jan 2008) | 4 lines\n    \n    Reenabled documentation for fox:destination.\n    Enabled intermediate format functionality for fox:destination.\n    Added a test case to check fox:destination.\n    Deprecated FOP's XMLizable in favor of the XML Graphics Commons variant (and extend that variant).\n  ........\n    r609627 | jeremias | 2008-01-07 16:06:24 +0100 (Mo, 07 Jan 2008) | 5 lines\n    \n    Bugzilla #44176:\n    Support for custom fonts in Java2DRenderer and derived renderers.\n    Submitted by: Patrick Jaromin <patrick.at.jgsullivan.dot.com>\n    \n    Patch modified slightly by jeremias.\n  ........\n    r610020 | acumiskey | 2008-01-08 16:27:02 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    cleaned up\n  ........\n    r610021 | acumiskey | 2008-01-08 16:28:56 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    Appears to be unused/referenced and superceeded by PageGroup\n  ........\n    r610022 | acumiskey | 2008-01-08 16:34:07 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    cleaned up\n  ........\n    r610023 | acumiskey | 2008-01-08 16:35:18 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    fixed javadoc\n  ........\n    r610337 | vhennebert | 2008-01-09 12:02:08 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    Fixed checkstyle issues: tabs and trailing spaces\n  ........\n    r610355 | vhennebert | 2008-01-09 13:01:21 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    keep-together is an inherited property\n  ........\n    r610420 | acumiskey | 2008-01-09 16:40:25 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    cleanup\n  ........\n    r610704 | jeremias | 2008-01-10 08:38:47 +0100 (Do, 10 Jan 2008) | 1 line\n    \n    Added basic support for PDF page labels.\n  ........\n    r610739 | jeremias | 2008-01-10 11:13:21 +0100 (Do, 10 Jan 2008) | 1 line\n    \n    PostScript output now generates the bounding box DSC comments for the whole document.\n  ........\n    r610821 | vhennebert | 2008-01-10 16:53:20 +0100 (Do, 10 Jan 2008) | 4 lines\n    \n    - renamed variables for clarity\n    - moved the computation of a cell's content length in PrimaryGridUnit\n    - better javadoc for getHeight method in EffRow\n  ........\n    r610848 | vhennebert | 2008-01-10 18:41:52 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    No need to check if the end of the cell is reached when creating the areas for a row\n  ........\n    r610853 | vhennebert | 2008-01-10 18:54:16 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Simplified addAreasAndFlushRow\n  ........\n    r610886 | vhennebert | 2008-01-10 20:23:56 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Removed endPart() method and moved its content into addAreasAndFlushRow()\n  ........\n    r610891 | vhennebert | 2008-01-10 20:34:13 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Removed accumulatedBPD which is redundant with yoffset\n  ........\n    r610893 | vhennebert | 2008-01-10 20:35:24 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    The return value of addAreasAndFlushRow is never used, changed it to void\n  ........\n    r610905 | vhennebert | 2008-01-10 20:57:29 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Renamed lastRow into currentRow and yoffset into currentRowOffset\n  ........\n    r611114 | jeremias | 2008-01-11 10:04:28 +0100 (Fr, 11 Jan 2008) | 2 lines\n    \n    Bugfix: Some string objects were not encrypted (for example in named destinations)\n    I had to refactor the PDF library a little bit but since it only affects the inner API it shouldn't be a problem that I removed some methods which caused trouble because a didn't think about encryption when I worked on the PDF library last year.\n  ........\n  \n  ------------------------------------------------------------------------\n  r611133 | jeremias | 2008-01-11 11:45:01 +0100 (Fr, 11 Jan 2008) | 4 lines\n  \n  Fixed merge problems.\n  Fixed a NPE when a mask is null in BitmapImage.java\n  Add support for properly encoding binary data as a hexadecimal string object (including encryption).\n  Adjust palette generation for indexed bitmaps to work correctly with encryption.\n  ------------------------------------------------------------------------\n  r611138 | jeremias | 2008-01-11 11:59:27 +0100 (Fr, 11 Jan 2008) | 1 line\n  \n  Removed empty package.\n  ------------------------------------------------------------------------\n................\n  r611285 | jeremias | 2008-01-11 20:03:36 +0000 (Fri, 11 Jan 2008) | 1 line\n  \n  Removed stray reference to ImageFactory.\n................\n  r611766 | jeremias | 2008-01-14 11:01:11 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  java.net.URI doesn't eat non-escaped URIs so I added an escaping method to URISpecification that should cover most cases. Usually, it's just about a space in a filename.\n................\n  r611767 | jeremias | 2008-01-14 11:02:34 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  Restore default constructor for PDFArray.\n................\n  r611768 | jeremias | 2008-01-14 11:02:54 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  Clear parent if later on an object number is assigned to a PDFObject which means it is a top-level object.\n................\n  r612560 | jeremias | 2008-01-16 20:14:56 +0000 (Wed, 16 Jan 2008) | 1 line\n  \n  Fixed dead link.\n................\n  r612785 | acumiskey | 2008-01-17 10:36:36 +0000 (Thu, 17 Jan 2008) | 1 line\n  \n  added serial version id\n................\n  r612815 | jeremias | 2008-01-17 13:37:04 +0000 (Thu, 17 Jan 2008) | 6 lines\n  \n  Fixed logic error setting the transformation matrix for block-container viewports (applies to absolute and fixed block-containers only). The CTM now only rotates and shifts the content as necessary for reference-orientation and writing-mode. All the rest of the transformation is done by the renderer which allows to add additional transformations as made possible by fox:transform (see below).\n  Important: External renderer implementations need to adjust for the change and implement the new method concatenateTransformationMatrix(AffineTransform) if the renderer is derived from AbstractPathOrientedRenderer.\n  \n  New extension attribute fox:transform on fo:block-container allows free-form transformation (rotation, scaling etc.) of absolute and fixed block-containers. Supported only for PDF, PS and Java2D-based renderers.\n  \n  Added missing region background painting for PCL renderer.\n................\n  r612816 | jeremias | 2008-01-17 13:43:33 +0000 (Thu, 17 Jan 2008) | 1 line\n  \n  Slight performance improvement on multi-core CPUs using a cheap trick.\n................\n  r612825 | jeremias | 2008-01-17 14:23:13 +0000 (Thu, 17 Jan 2008) | 2 lines\n  \n  Fixed layout problem in two of the changes.\n  Categorized the individual changes a bit.\n................\n  r613144 | jeremias | 2008-01-18 12:44:56 +0000 (Fri, 18 Jan 2008) | 1 line\n  \n  Forgot to adjust the JAR name when updating to Batik 1.7\n................\n  r613185 | jeremias | 2008-01-18 15:25:26 +0000 (Fri, 18 Jan 2008) | 1 line\n  \n  Copy/Paste problem with TTF has long been fixed.\n................\n  r613828 | jeremias | 2008-01-21 10:21:25 +0000 (Mon, 21 Jan 2008) | 1 line\n  \n  Removed stray System.out\n................\n  r613831 | jeremias | 2008-01-21 10:33:10 +0000 (Mon, 21 Jan 2008) | 1 line\n  \n  A name object can be encoded as a stand-along PDF object with object number and all, so extend from PDFObject. Fixes a possible ClassCastException with the PDF-in-PDF extension.\n................\n  r613835 | jeremias | 2008-01-21 10:40:38 +0000 (Mon, 21 Jan 2008) | 1 line\n  \n  Correct inline writing when object has an object number.\n................\n  r613896 | jeremias | 2008-01-21 14:13:29 +0000 (Mon, 21 Jan 2008) | 1 line\n  \n  A note about the internal coordinate system when using fox:transform.\n................\n  r614156 | jeremias | 2008-01-22 09:26:05 +0000 (Tue, 22 Jan 2008) | 2 lines\n  \n  Complete overhaul of the \"Graphics\" page after the new image loading framework has been introduced.\n  Some updates on external links and about Java 1.4.\n................\n  r614169 | vhennebert | 2008-01-22 10:48:43 +0000 (Tue, 22 Jan 2008) | 2 lines\n  \n  Fixed minor typos\n................\n  r614170 | vhennebert | 2008-01-22 10:50:24 +0000 (Tue, 22 Jan 2008) | 2 lines\n  \n  Updated text to reflect the upgrading of the minimum Java requirement to 1.4\n................\n  r614191 | jeremias | 2008-01-22 12:31:11 +0000 (Tue, 22 Jan 2008) | 1 line\n  \n  A note on the difference between JAI Image I/O Tools, the codec package, and JAI, the image library.\n................\n  r614201 | jeremias | 2008-01-22 14:02:27 +0000 (Tue, 22 Jan 2008) | 2 lines\n  \n  Bugzilla #44160:\n  Fixed a possible IndexOutOfBoundsException that could happen with certain constellations when footnotes are used. Note: I haven't been able to come up with a scaled-down testcase for regression testing. Maybe someone more intimate with the footnote handling can.\n................\n  r614202 | jeremias | 2008-01-22 14:13:22 +0000 (Tue, 22 Jan 2008) | 1 line\n  \n  We need JAI Image I/O Tools now rather than Jimi or JAI.\n................\n  r614566 | vhennebert | 2008-01-23 15:22:05 +0000 (Wed, 23 Jan 2008) | 3 lines\n  \n  Added support for conditional borders (and paddings) in tables.\n  The proper borders are not selected yet between the header/footer and the body. There might still be a few glitches in some cases\n................\n  r614845 | vhennebert | 2008-01-24 11:32:07 +0000 (Thu, 24 Jan 2008) | 2 lines\n  \n  Removed the no longer needed maxColumnCount parameter\n................\n  r614920 | vhennebert | 2008-01-24 16:40:46 +0000 (Thu, 24 Jan 2008) | 6 lines\n  \n  Cleanup:\n  - renamed startRow/startCol into rowIndex/colIndex\n  - improved javadoc of PrimaryGridUnit.getRowIndex()\n  - moved colIndex from GridUnit into PrimaryGridUnit since it's only needed there\n  - simplified EmptyGridUnit constructor\n................\n  r614924 | vhennebert | 2008-01-24 16:51:53 +0000 (Thu, 24 Jan 2008) | 2 lines\n  \n  Removed no longer needed reference to TableColumn in GridUnit\n................\n  r614964 | vhennebert | 2008-01-24 19:56:05 +0000 (Thu, 24 Jan 2008) | 2 lines\n  \n  Replaced 'non-lead' with 'normal'\n................\n  r614966 | vhennebert | 2008-01-24 19:59:20 +0000 (Thu, 24 Jan 2008) | 2 lines\n  \n  Added license header\n................\n  r614993 | vhennebert | 2008-01-24 21:10:22 +0000 (Thu, 24 Jan 2008) | 2 lines\n  \n  Bugzilla #44289: Wrong border resolution when header/footer omitted at break\n................\n  r615144 | jeremias | 2008-01-25 08:26:54 +0000 (Fri, 25 Jan 2008) | 1 line\n  \n  Added support for DOMSource to Preloader SVG so a URI Resolver can be written that provides the SVG as a W3C SVG DOM.\n................\n  r615164 | jeremias | 2008-01-25 09:59:29 +0000 (Fri, 25 Jan 2008) | 1 line\n  \n  Fix exception when closing Source that doesn't have any streams.\n................\n  r615197 | jeremias | 2008-01-25 12:14:52 +0000 (Fri, 25 Jan 2008) | 1 line\n  \n  Improved error tolerance: an enum property value with leading or trailing spaces is still recognized. Example: content-width=\"scale-to-fit \"\n................\n  r615251 | vhennebert | 2008-01-25 15:52:53 +0000 (Fri, 25 Jan 2008) | 2 lines\n  \n  Fixed a bug in computeContentLength when there are empty cells\n................\n  r615598 | adelmelle | 2008-01-27 13:35:39 +0000 (Sun, 27 Jan 2008) | 4 lines\n  \n  Bugzilla #44286:\n  Fixed a memory-leak in XMLWhiteSpaceHandler.\n  Submitted by: Stefan Ziel <stefan.ziel.at.claninfo.ch>\n................\n  r615604 | vhennebert | 2008-01-27 14:09:12 +0000 (Sun, 27 Jan 2008) | 2 lines\n  \n  Of course startIndex == endIndex means there is one element whose length must be computed... Changed >= into >\n................\n  r615845 | jeremias | 2008-01-28 10:32:46 +0000 (Mon, 28 Jan 2008) | 1 line\n  \n  Improve breaking for block-container and static-content so there are no more \"breaking artifacts\" (like additional border lines) in the overflowing part of the content anymore. This is done by removing all breaks from the result list prior to constructing the area tree. The presence of breaks simply indicates that there is an overflow.\n................\n  r615906 | jeremias | 2008-01-28 15:04:39 +0000 (Mon, 28 Jan 2008) | 2 lines\n  \n  Added support for the natural language indentifier (\"Lang\" in the document catalog) for PDF documents based on the language/country values on fo:page-sequence. This required a few changes in the AreaTreeModel and the Renderer interface because it didn't support passing through the PageSequence object, only its title. Now, we can put other values on the PageSequence and transport them to the renderers.\n................\n  r615917 | jeremias | 2008-01-28 15:45:10 +0000 (Mon, 28 Jan 2008) | 1 line\n  \n  A note on country/language.\n................\n  r616080 | jeremias | 2008-01-28 22:05:39 +0000 (Mon, 28 Jan 2008) | 1 line\n  \n  Bugfix for invalid numTables entry in subset TrueType fonts if there was no \"fpgm\" table (Example: FreeSerif).\n................\n  r616191 | jeremias | 2008-01-29 07:30:08 +0000 (Tue, 29 Jan 2008) | 1 line\n  \n  A more detailed comment on RTF output explaining that RTF has limitations besides the incomplete implementation on the FOP side.\n................\n  r616260 | vhennebert | 2008-01-29 11:15:29 +0000 (Tue, 29 Jan 2008) | 2 lines\n  \n  Added more tests to ensure no weird things occurs when keep-with-previous/next is set on table. Runs ok\n................\n  r616334 | vhennebert | 2008-01-29 14:15:52 +0000 (Tue, 29 Jan 2008) | 2 lines\n  \n  Renamed testcase for clarity\n................\n  r616485 | vhennebert | 2008-01-29 19:12:58 +0000 (Tue, 29 Jan 2008) | 2 lines\n  \n  Replaced testcases for forced break on table-row with more complete ones. Tests failing because of bug #44320 have been commented out and will need to be re-enabled once the bug is fixed\n................\n  r616691 | jeremias | 2008-01-30 08:53:48 +0000 (Wed, 30 Jan 2008) | 1 line\n  \n  \"cvt \", \"fpgm\" and \"prep\" are all optional tables in TrueType. Some PDF viewers fail because FOP didn't handle those correctly.\n................\n  r616694 | jeremias | 2008-01-30 09:05:30 +0000 (Wed, 30 Jan 2008) | 1 line\n  \n  Removing the previous entry because the new one basically covers the other, too.\n................\n  r616798 | jeremias | 2008-01-30 16:03:00 +0000 (Wed, 30 Jan 2008) | 1 line\n  \n  Removed the Dijkstra stuff as it was moved to Commons.\n................\n  r617126 | jeremias | 2008-01-31 13:44:46 +0000 (Thu, 31 Jan 2008) | 1 line\n  \n  Update lib README based on recent findings.\n................\n  r617473 | jeremias | 2008-02-01 11:11:02 +0000 (Fri, 01 Feb 2008) | 1 line\n  \n  Implemented drawRenderedImage() which fixes painting of PNG images embedded inside SVG images.\n................\n  r617512 | jeremias | 2008-02-01 14:58:30 +0000 (Fri, 01 Feb 2008) | 4 lines\n  \n  AlphaRasterImage now knows how to deal with TYPE_INT Rasters.\n  Streamlined image handling in Graphics2D.\n  Support natively handling CCITT images in SVG images.\n  Add fallback to device RGB if sRGB isn't set up as the default color space in PDF.\n................\n  r617531 | jeremias | 2008-02-01 16:02:33 +0000 (Fri, 01 Feb 2008) | 2 lines\n  \n  Move sRGB installation into the PDF library. That way it can be used in PDFDocumentGraphics2D, too (via AbstractImageAdapter).\n  Ensures correct handling of sRGB images in PDFTranscoder.\n................\n  r617550 | jeremias | 2008-02-01 16:31:24 +0000 (Fri, 01 Feb 2008) | 1 line\n  \n  Add a note about color space overrides which currently aren't supported for natively handled images, yet.\n................\n  r617708 | adelmelle | 2008-02-01 23:30:13 +0000 (Fri, 01 Feb 2008) | 5 lines\n  \n  Bugzilla 44343:\n  Fixed a bug when using relative (smaller/larger) font-sizes in combination with percentages.\n  Percentages now resolved as per the spec (XSL-FO 1.1 7.9.4):\n  \"A percentage value specifies an absolute font size relative to the parent element's font-size.\"\n................\n  r617716 | adelmelle | 2008-02-02 00:06:29 +0000 (Sat, 02 Feb 2008) | 4 lines\n  \n  Minor cleanup/improvement:\n  - FontSizePropertyMaker: remove redundant casts (FixedLength already casts the doubles internally)\n  - FixedLength: reduce visibility of 'fishy' convert() method (not used anywhere else)\n................\n  r617765 | jeremias | 2008-02-02 06:45:39 +0000 (Sat, 02 Feb 2008) | 1 line\n  \n  Fixed transcoder test after yesterday's changes.\n................\n  r617812 | adelmelle | 2008-02-02 15:13:40 +0000 (Sat, 02 Feb 2008) | 6 lines\n  \n  Further cleanup/refinement of FixedLength:\n  * improve consistency in use of the PropertyCache\n    remove public constructor ->  replaced by getInstance() in a handful of classes\n  * added a sourceResolution parameter to getInstance() and the private\n    constructor to allow better handling of device-dependent units (px)\n................\n  r617907 | adelmelle | 2008-02-02 22:11:12 +0000 (Sat, 02 Feb 2008) | 4 lines\n  \n  Further improvement in FixedLength:\n  * added a special ZERO_FIXED_LENGTH instance\n  * store only non-zero values in the PropertyCache\n................\n  r617909 | adelmelle | 2008-02-02 22:18:30 +0000 (Sat, 02 Feb 2008) | 2 lines\n  \n  Slight correction for pixel-values: pass the ratio of pixels-per-point into FixedLength.getInstance()\n................\n  r617976 | adelmelle | 2008-02-03 12:05:49 +0000 (Sun, 03 Feb 2008) | 5 lines\n  \n  Added very basic parsing for the xml:lang shorthand.\n  No validation of the specified value, but the language and country\n  properties now do take the shorthand into account to determine their\n  value.\n................\n  r617989 | adelmelle | 2008-02-03 14:11:40 +0000 (Sun, 03 Feb 2008) | 5 lines\n  \n  Bugzilla 43705:\n  Fixed a bug when the rgb-icc() function was used before the fo:declarations,\n  or in documents without fo:declarations. Function now correctly (?) reverts\n  to the sRGB fallback in those cases.\n................\n  r618239 | vhennebert | 2008-02-04 11:25:13 +0000 (Mon, 04 Feb 2008) | 2 lines\n  \n  Fixed minor typo I stumbled upon while doing something completely unrelated\n................\n  r618470 | adelmelle | 2008-02-04 22:26:53 +0000 (Mon, 04 Feb 2008) | 1 line\n  \n  Added testcase for Bugzilla 44343\n................\n  r618626 | jeremias | 2008-02-05 12:34:56 +0000 (Tue, 05 Feb 2008) | 1 line\n  \n  Change PDFPage to use PDFDictionary in order to make it possible to better set MediaBox/TrimBox/BleedBox.\n................\n  r618627 | jeremias | 2008-02-05 12:35:42 +0\u2026",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/8aea6dca9c87eceacace44a78534f23f45096162",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestElementMapping.java",
            "AbstractAFPObjectTest.java",
            "AbstractNamedAFPObjectTest.java"
        ]
    },
    "xmlgraphics-fop_239320b": {
        "bug_id": "xmlgraphics-fop_239320b",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/239320b99c8ba834d186fd4fa0c59ada5e66a633",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/apps/Document.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/Document.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/apps/Document.java",
                "patch": "@@ -25,7 +25,6 @@\n \n // FOP\n import org.apache.fop.area.AreaTree;\n-import org.apache.fop.area.AreaTreeControl;\n import org.apache.fop.area.AreaTreeModel;\n \n import org.apache.fop.fo.FOInputHandler;\n@@ -42,7 +41,7 @@\n  * Class storing information for the FOP Document being processed, and managing\n  * the processing of it.\n  */\n-public class Document implements FOTreeControl, AreaTreeControl {\n+public class Document implements FOTreeControl {\n             \n     /** The parent Driver object */\n     private Driver driver;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/apps/Document.java",
                "sha": "73792076421759f6d64a55fb32f79de5b3ab51b3",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/area/AreaTree.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTree.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/area/AreaTree.java",
                "patch": "@@ -18,6 +18,7 @@\n \n package org.apache.fop.area;\n \n+import org.apache.fop.apps.Document;\n import org.apache.fop.area.extensions.BookmarkData;\n import org.apache.fop.fo.extensions.Outline;\n \n@@ -50,7 +51,7 @@\n     // allows for different models to deal with adding/rendering\n     // in different situations\n     private AreaTreeModel model;\n-    private AreaTreeControl atControl;\n+    private Document document;\n \n     // hashmap of arraylists containing pages with id area\n     private Map idLocations = new HashMap();\n@@ -60,10 +61,10 @@\n \n     /**\n      * Constructor.\n-     * @param atControl the AreaTreeControl object controlling this AreaTree\n+     * @param document the apps.Document object controlling this AreaTree\n      */\n-    public AreaTree (AreaTreeControl atControl) {\n-        this.atControl = atControl;\n+    public AreaTree (Document document) {\n+        this.document = document;\n     }\n \n \n@@ -219,13 +220,13 @@ public void endDocument() {\n      * Create the bookmark data in the area tree.\n      */\n     public void addBookmarksToAreaTree() {\n-        if (atControl.getBookmarks() == null) {\n+        if (document.getBookmarks() == null) {\n             return;\n         }\n-        atControl.getDriver().getLogger().debug(\"adding bookmarks to area tree\");\n+        document.getDriver().getLogger().debug(\"adding bookmarks to area tree\");\n         BookmarkData data = new BookmarkData();\n-        for (int count = 0; count < atControl.getBookmarks().getOutlines().size(); count++) {\n-            Outline out = (Outline)(atControl.getBookmarks().getOutlines()).get(count);\n+        for (int count = 0; count < document.getBookmarks().getOutlines().size(); count++) {\n+            Outline out = (Outline)(document.getBookmarks().getOutlines()).get(count);\n             data.addSubData(createBookmarkData(out));\n         }\n         addTreeExtension(data);\n@@ -251,8 +252,8 @@ public BookmarkData createBookmarkData(Outline outline) {\n         return data;\n     }\n \n-    public AreaTreeControl getAreaTreeControl() {\n-        return atControl;\n+    public Document getDocument() {\n+        return document;\n     }\n \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/area/AreaTree.java",
                "sha": "8f441f2e6d4ba2e3d40f40098a4895f53672c035",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/b56039a254c45b778bbb916b7cae796dc5ab16ea/src/java/org/apache/fop/area/AreaTreeControl.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeControl.java?ref=b56039a254c45b778bbb916b7cae796dc5ab16ea",
                "deletions": 54,
                "filename": "src/java/org/apache/fop/area/AreaTreeControl.java",
                "patch": "@@ -1,54 +0,0 @@\n-/*\n- * Copyright 1999-2004 The Apache Software Foundation.\n- * \n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-\n-package org.apache.fop.area;\n-\n-// FOP\n-import org.apache.fop.fo.extensions.Bookmarks;\n-import org.apache.fop.apps.Driver;\n-\n-// Java\n-import java.util.Set;\n-\n-/**\n- * An interface for classes that are conceptually the parent class of the\n- * area.AreaTree object. The purpose of the interface is to keep the AreaTree\n- * isolated from apps, but to acknowledge that a higher-level object is needed\n- * to control the Area Tree, to provide it with information about the\n- * environment, and to keep track of meta information.\n- */\n-public interface AreaTreeControl {\n-\n-    /**\n-     * @return the Bookmark object encapsulating the bookmarks for the FO Tree.\n-     */\n-    Bookmarks getBookmarks();\n-\n-    /**\n-     * @return the Driver instance being used with this FO Tree\n-     */\n-    Driver getDriver();\n-\n-    /**\n-     * The current set of IDs in the document.\n-     * @return the Set of IDReferences in the document.\n-     */\n-    Set getIDReferences();\n-\n-}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/b56039a254c45b778bbb916b7cae796dc5ab16ea/src/java/org/apache/fop/area/AreaTreeControl.java",
                "sha": "13ad510ba15d3e0f8606d3965eeaa8c8a5e0c718",
                "status": "removed"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/FONode.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FONode.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FONode.java",
                "patch": "@@ -195,5 +195,16 @@ public void acceptVisitor(FOTreeVisitor fotv) {\n         fotv.serveFONode(this);\n     }\n \n+    /**\n+     * Helper function to standardize the names of all namespace URI - local\n+     * name pairs in text messages.\n+     * @param namespaceURI URI of node found \n+     *         (e.g., \"http://www.w3.org/1999/XSL/Format\")\n+     * @param localName local name of node, (e.g., \"root\" for \"fo:root\")\n+     * @return a string combining the two values\n+     */\n+    public static String getNodeString(String namespaceURI, String localName) {\n+        return \"(Namespace URI: \\\"\" + namespaceURI + \"\\\", Local Name: \\\"\" + localName + \"\\\")\";\n+    }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/FONode.java",
                "sha": "2a6b5663a83c9afa327e2620a0f8e4e2b9a700b2",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/FOTreeHandler.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOTreeHandler.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/FOTreeHandler.java",
                "patch": "@@ -69,7 +69,8 @@\n     // TODO: Collecting of statistics should be configurable\n     private final boolean collectStatistics = true;\n     private static final boolean MEM_PROFILE_WITH_GC = false;\n-\n+    private boolean pageSequenceFound = false;\n+    \n     /**\n      * Somewhere to get our stats from.\n      */\n@@ -135,6 +136,10 @@ public void startDocument() throws SAXException {\n      */\n     public void endDocument() throws SAXException {\n         try {\n+            if (pageSequenceFound == false) {\n+                throw new SAXException(\"Error: No fo:page-sequence child \" +\n+                    \"found within fo:root element.\");\n+            }\n             getAreaTree().endDocument();\n             getDriver().getRenderer().stopRenderer();\n         } catch (IOException ex) {\n@@ -174,6 +179,7 @@ public void endDocument() throws SAXException {\n      * @param pageSeq the page sequence starting\n      */\n     public void startPageSequence(PageSequence pageSeq) {\n+        pageSequenceFound = true;\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/FOTreeHandler.java",
                "sha": "9cd10fe1d1fdb799d5ca4dc9e91c396c542f4209",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Declarations.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 21,
                "filename": "src/java/org/apache/fop/fo/pagination/Declarations.java",
                "patch": "@@ -47,37 +47,40 @@\n      */\n     public Declarations(FONode parent) {\n         super(parent);\n+        ((Root) parent).setDeclarations(this);\n     }\n \n     /**\n-     * At then end of this element sort out the child into\n+     * At the end of this element sort out the child into\n      * a hashmap of color profiles and a list of external xml.\n      */\n     public void end() {\n-        for (Iterator iter = children.iterator(); iter.hasNext();) {\n-            FONode node = (FONode)iter.next();\n-            if (node.getName().equals(\"fo:color-profile\")) {\n-                ColorProfile cp = (ColorProfile)node;\n-                if (!\"\".equals(cp.getProfileName())) {\n-                    if (colorProfiles == null) {\n-                        colorProfiles = new java.util.HashMap();\n+        if (children != null) {\n+            for (Iterator iter = children.iterator(); iter.hasNext();) {\n+                FONode node = (FONode)iter.next();\n+                if (node.getName().equals(\"fo:color-profile\")) {\n+                    ColorProfile cp = (ColorProfile)node;\n+                    if (!\"\".equals(cp.getProfileName())) {\n+                        if (colorProfiles == null) {\n+                            colorProfiles = new java.util.HashMap();\n+                        }\n+                        if (colorProfiles.get(cp.getProfileName()) != null) {\n+                            // duplicate names\n+                            getLogger().warn(\"Duplicate fo:color-profile profile name : \"\n+                                    + cp.getProfileName());\n+                        }\n+                        colorProfiles.put(cp.getProfileName(), cp);\n+                    } else {\n+                        getLogger().warn(\"color-profile-name required for color profile\");\n                     }\n-                    if (colorProfiles.get(cp.getProfileName()) != null) {\n-                        // duplicate names\n-                        getLogger().warn(\"Duplicate fo:color-profile profile name : \"\n-                                + cp.getProfileName());\n+                } else if (node instanceof XMLObj) {\n+                    if (external == null) {\n+                        external = new java.util.ArrayList();\n                     }\n-                    colorProfiles.put(cp.getProfileName(), cp);\n+                    external.add(node);\n                 } else {\n-                    getLogger().warn(\"color-profile-name required for color profile\");\n+                    getLogger().warn(\"invalid element \" + node.getName() + \"inside declarations\");\n                 }\n-            } else if (node instanceof XMLObj) {\n-                if (external == null) {\n-                    external = new java.util.ArrayList();\n-                }\n-                external.add(node);\n-            } else {\n-                getLogger().warn(\"invalid element \" + node.getName() + \"inside declarations\");\n             }\n         }\n         children = null;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "sha": "21cca9935e537b7d1042438c49f6ec35de2712c6",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/pagination/Root.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Root.java?ref=239320b99c8ba834d186fd4fa0c59ada5e66a633",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/Root.java",
                "patch": "@@ -34,6 +34,8 @@\n     private LayoutMasterSet layoutMasterSet;\n     private Declarations declarations;\n     private List pageSequences;\n+    // temporary until above list populated\n+    private boolean pageSequenceFound = false;\n \n     /**\n      * Keeps count of page number from over PageSequence instances\n@@ -72,21 +74,23 @@ protected void validateChildNode(String namespaceURI, String localName) {\n                 } else if (declarations != null) { // only one fo:declarations\n                     throw new IllegalArgumentException(\"Error: Only one\" +\n                         \" fo:declarations may be defined per fo:root\");\n-                } else if (!pageSequences.isEmpty()) { // no page-seqs yet\n+                } else if (pageSequenceFound) { // no page-seqs yet\n                     throw new IllegalArgumentException(\"Error: fo:declarations\" +\n                         \" must be defined before fo:page-sequence declarations\");\n                 }\n             } else if (localName.equals(\"page-sequence\")) { \n                 if (layoutMasterSet == null) { // must already have a l-m-s\n                     throw new IllegalArgumentException(\"Error:\" +\n                     \" fo:layout-master-set must be first child of fo:root\");\n+                } else {\n+                    pageSequenceFound = true;\n                 }\n             } else\n                 throw new IllegalArgumentException(\"Error: Invalid child\" +\n                     \" node \\\"fo:\" + localName + \"\\\" of fo:root\");\n         } else {\n-            throw new IllegalArgumentException(\"Error: Invalid child node (\" \n-                + namespaceURI + \") \\\"\" + localName + \"\\\" of fo:root\");\n+            throw new IllegalArgumentException(\"Error: Invalid child node \" +\n+                FONode.getNodeString(namespaceURI, localName) + \" of fo:root\");\n         }\n     }\n \n@@ -148,6 +152,22 @@ public void setLayoutMasterSet(LayoutMasterSet layoutMasterSet) {\n         this.layoutMasterSet = layoutMasterSet;\n     }\n \n+    /**\n+     * Returns the associated Declarations.\n+     * @return the Declarations instance\n+     */\n+    public Declarations getDeclarations() {\n+        return this.declarations;\n+    }\n+\n+    /**\n+     * Sets the associated Declarations.\n+     * @param Declarations the Declarations to use\n+     */\n+    public void setDeclarations(Declarations declarations) {\n+        this.declarations = declarations;\n+    }\n+\n     /**\n      * Sets the FOTreeControl that this Root is attached to\n      * @param foTreeControl the FOTreeControl implementation to which this Root",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/239320b99c8ba834d186fd4fa0c59ada5e66a633/src/java/org/apache/fop/fo/pagination/Root.java",
                "sha": "8fc8648eb3754a1d41b6d03d8adfb72a263b48d6",
                "status": "modified"
            }
        ],
        "message": "1.) App now returns an error if no page-sequence declared within fo:root.\n2.) Standardized node names via a new static FONode.getNodeName() method\n3.) Declarations object now tied to Root object, will no longer return NPE\n    if empty (bug fixed).\n4.) AreaTreeControl removed in favor of direct connection between Document\n    and the Area Tree.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk@197708 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/b56039a254c45b778bbb916b7cae796dc5ab16ea",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestDocument.java"
        ]
    },
    "xmlgraphics-fop_309f4e2": {
        "bug_id": "xmlgraphics-fop_309f4e2",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/309f4e2998c676913e64070adda8dca5e3768fad",
        "file": [
            {
                "additions": 141,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/build.xml",
                "changes": 168,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 27,
                "filename": "build.xml",
                "patch": "@@ -118,13 +118,15 @@ list of possible build targets.\n     </fileset>\n   </path>\n \n-  <path id=\"libs-run-classpath\">\n-    <fileset dir=\"${basedir}/lib\">\n-      <include name=\"*.jar\"/>\n-    </fileset>\n-    <fileset dir=\"${optional.lib.dir}\">\n+  <path id=\"libs-build-tools-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n+    <fileset dir=\"${basedir}/lib/build\">\n       <include name=\"*.jar\"/>\n     </fileset>\n+  </path>\n+  \n+  <path id=\"libs-run-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n     <fileset dir=\"${basedir}/build\">\n       <include name=\"fop.jar\"/>\n       <include name=\"fop-hyph.jar\" />\n@@ -362,7 +364,7 @@ list of possible build targets.\n   <!-- =================================================================== -->\n   <!-- Compiles the source directory                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-java\" depends=\"init, codegen\" description=\"Compiles the source code\">\n+  <target name=\"compile-java\" depends=\"init, codegen\">\n     <!-- create directories -->\n     <mkdir dir=\"${build.classes.dir}\"/>\n     <javac destdir=\"${build.classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n@@ -375,12 +377,118 @@ list of possible build targets.\n       <patternset refid=\"exclude-jai\"/>\n       <classpath refid=\"libs-build-classpath\"/>\n     </javac>\n+\n+    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n+    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+           source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.sandbox.dir}\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <patternset refid=\"exclude-jai\"/>\n+      <classpath>\n+        <path refid=\"libs-build-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+  </target>\n+\n+  <target name=\"resourcegen\" depends=\"compile-java\">\n+    <mkdir dir=\"${build.codegen-classes.dir}\"/>\n+    <javac destdir=\"${build.codegen-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+      deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+      source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.codegen.dir}/java\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+    <copy todir=\"${build.codegen-classes.dir}\">\n+      <fileset dir=\"${src.codegen.dir}/java\">\n+        <include name=\"**/*.xsl\"/>\n+      </fileset>\n+    </copy>\n+    \n+    <taskdef name=\"eventResourceGenerator\"\n+      classname=\"org.apache.fop.tools.EventProducerCollectorTask\">\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+        <pathelement location=\"${build.codegen-classes.dir}\"/>\n+      </classpath>\n+    </taskdef>\n+  \n+    <eventResourceGenerator\n+        modelfile=\"${build.gensrc.dir}/org/apache/fop/events/event-model.xml\"\n+        translationfile=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"**/*.java\"/>\n+        <exclude name=\"org/apache/fop/render/*/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/afp/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/afp/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/bitmap/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/bitmap/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pcl/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pcl/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pdf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pdf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/ps/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/ps/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/rtf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/rtf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+  </target>\n+  \n+  <target name=\"compile-copy-resources\" depends=\"resourcegen\">\n     <copy todir=\"${build.classes.dir}\">\n       <fileset dir=\"${src.java.dir}\">\n         <include name=\"META-INF/**\"/>\n         <include name=\"**/*.icm\"/>\n+        <include name=\"**/*.xml\"/>\n         <include name=\"**/*.LICENSE.txt\"/>\n       </fileset>\n+      <fileset dir=\"${build.gensrc.dir}\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n     </copy>\n     <mkdir dir=\"${build.viewer.resources.dir}\"/>\n     <copy todir=\"${build.viewer.resources.dir}\">\n@@ -390,31 +498,22 @@ list of possible build targets.\n     <copy todir=\"${build.viewer.images.dir}\">\n       <fileset dir=\"${src.viewer.images.dir}\"/>\n     </copy>\n-\n-    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n-    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n-           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n-           source=\"${javac.source}\" target=\"${javac.target}\">\n-      <src path=\"${src.sandbox.dir}\"/>\n-      <patternset includes=\"**/*.java\"/>\n-      <patternset refid=\"exclude-jai\"/>\n-      <classpath>\n-        <path refid=\"libs-build-classpath\"/>\n-        <pathelement location=\"${build.classes.dir}\"/>\n-      </classpath>\n-    </javac>\n+    \n+    <!-- sandbox -->\n     <copy todir=\"${build.sandbox-classes.dir}\">\n       <fileset dir=\"${src.sandbox.dir}\">\n         <include name=\"META-INF/**\"/>\n       </fileset>\n     </copy>\n+    \n   </target>\n-\n+  \n+  <target name=\"compile\" depends=\"compile-java, compile-copy-resources\" description=\"Compiles the source code\"/>\n \n   <!-- =================================================================== -->\n   <!-- compiles hyphenation patterns                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-hyphenation\" depends=\"compile-java\">\n+  <target name=\"compile-hyphenation\" depends=\"compile\">\n     <path id=\"hyph-classpath\">\n       <path refid=\"libs-build-classpath\"/>\n       <pathelement location=\"${build.classes.dir}\"/>\n@@ -452,13 +551,13 @@ list of possible build targets.\n   <!-- main FOP JARs                                                       -->\n   <!-- =================================================================== -->\n \n-  <target name=\"uptodate-jar-main\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-main\" depends=\"compile\">\n     <uptodate property=\"jar.main.uptodate\" targetfile=\"${build.dir}/fop.jar\">\n       <srcfiles dir= \"${build.classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-main\" depends=\"compile-java,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n+  <target name=\"jar-main\" depends=\"compile,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -487,13 +586,13 @@ list of possible build targets.\n     </jar>\n   </target>\n \n-  <target name=\"uptodate-jar-sandbox\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-sandbox\" depends=\"compile\">\n     <uptodate property=\"jar.sandbox.uptodate\" targetfile=\"${build.dir}/fop-sandbox.jar\">\n       <srcfiles dir= \"${build.sandbox-classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-sandbox\" depends=\"compile-java,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n+  <target name=\"jar-sandbox\" depends=\"compile,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -608,14 +707,14 @@ list of possible build targets.\n     <include name=\"xmlgraphics-commons*.jar\"/>\n   </fileset>\n   \n-  <target name=\"uptodate-transcoder-pkg\" depends=\"compile-java\">\n+  <target name=\"uptodate-transcoder-pkg\" depends=\"compile\">\n     <uptodate property=\"transcoder.pkg.uptodate\" targetfile=\"${build.dir}/fop-transcoder.jar\">\n       <srcfiles refid=\"transcoder-classes-files\"/>\n       <srcfiles refid=\"transcoder-lib-files\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile-java\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n+  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n     <echo message=\"Creating the jar file ${build.dir}/fop-transcoder.jar\"/>\n \n     <property name=\"fop-transcoder.name\" value=\"FOP Transcoder Package\"/>\n@@ -693,6 +792,7 @@ list of possible build targets.\n   </target>\n   <target name=\"junit-compile\" depends=\"package, transcoder-pkg, junit-with-xmlunit, junit-without-xmlunit\" description=\"Runs FOP's JUnit tests\" if=\"junit.present\">\n     <mkdir dir=\"${build.dir}/test-classes\"/>\n+    <mkdir dir=\"${build.dir}/test-gensrc\"/>\n     <mkdir dir=\"${junit.reports.dir}\"/>\n     <javac destdir=\"${build.dir}/test-classes\" fork=\"${javac.fork}\"\n            debug=\"${javac.debug}\" deprecation=\"${javac.deprecation}\"\n@@ -707,6 +807,20 @@ list of possible build targets.\n         </fileset>\n       </classpath>\n     </javac>\n+    <eventResourceGenerator modelfile=\"${build.dir}/test-gensrc/org/apache/fop/events/test-event-model.xml\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <copy todir=\"${build.dir}/test-classes\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"META-INF/**\"/>\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+      <fileset dir=\"${build.dir}/test-gensrc\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+    </copy>\n   </target>\n \n   <target name=\"junit-transcoder\" depends=\"junit-compile\" description=\"Runs FOP's JUnit transcoder tests\" if=\"junit.present\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/build.xml",
                "sha": "5a72154f702d5621456ab67a147175cbd7629cf7",
                "status": "modified"
            },
            {
                "additions": 227,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/examples/embedding/java/embedding/events/ExampleEvents.java",
                "changes": 227,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/ExampleEvents.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/ExampleEvents.java",
                "patch": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding.events;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.URL;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.apps.MimeConstants;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This class demonstrates how to register an event listener with FOP so you can customize\n+ * FOP's error behaviour.\n+ */\n+public class ExampleEvents {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+\n+    /**\n+     * Converts an FO file to a PDF file using FOP\n+     * @param fo the FO file\n+     * @param pdf the target PDF file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a FOP problem\n+     * @throws TransformerException In case of a problem with XSLT\n+     */\n+    public void convertFO2PDF(URL fo, File pdf)\n+            throws IOException, FOPException, TransformerException {\n+        \n+        OutputStream out = null;\n+        \n+        try {\n+            //Create the user agent for this processing run\n+            FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+            \n+            //Adding a simple logging listener that writes to stdout and stderr\n+            foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());\n+            \n+            // Add your own event listener\n+            foUserAgent.getEventBroadcaster().addEventListener(new MyEventListener());\n+            \n+            // configure foUserAgent further as desired\n+    \n+            // Setup output stream.  Note: Using BufferedOutputStream\n+            // for performance reasons (helpful with FileOutputStreams).\n+            out = new FileOutputStream(pdf);\n+            out = new BufferedOutputStream(out);\n+\n+            // Construct fop with desired output format\n+            Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, foUserAgent, out);\n+\n+            // Setup JAXP using identity transformer\n+            TransformerFactory factory = TransformerFactory.newInstance();\n+            Transformer transformer = factory.newTransformer(); // identity transformer\n+            \n+            // Setup input stream\n+            Source src = new StreamSource(fo.toExternalForm());\n+\n+            // Resulting SAX events (the generated FO) must be piped through to FOP\n+            Result res = new SAXResult(fop.getDefaultHandler());\n+            \n+            // Start XSLT transformation and FOP processing\n+            transformer.transform(src, res);\n+\n+        } finally {\n+            IOUtils.closeQuietly(out);\n+        }\n+    }\n+\n+    private static class MyEventListener implements EventListener {\n+\n+        public void processEvent(Event event) {\n+            if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                    .equals(event.getEventID())) {\n+                \n+                //Get the FileNotFoundException that's part of the event's parameters\n+                FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+                System.out.println(\"---=== imageNotFound Event for \" + event.getParam(\"uri\")\n+                        + \"!!! ===---\");\n+                //Stop processing when an image could not be found. Otherwise, FOP would just\n+                //continue without the image!\n+                \n+                System.out.println(\"Throwing a RuntimeException...\");\n+                throw new RuntimeException(EventFormatter.format(event), fnfe);\n+            } else {\n+                //ignore all other events\n+            }\n+        }\n+        \n+    }\n+    \n+    /** A simple event listener that writes the events to stdout and sterr. */\n+    private static class SysOutEventListener implements EventListener {\n+\n+        /** {@inheritDoc} */\n+        public void processEvent(Event event) {\n+            String msg = EventFormatter.format(event);\n+            EventSeverity severity = event.getSeverity();\n+            if (severity == EventSeverity.INFO) {\n+                System.out.println(\"[INFO ] \" + msg);\n+            } else if (severity == EventSeverity.WARN) {\n+                System.out.println(\"[WARN ] \" + msg);\n+            } else if (severity == EventSeverity.ERROR) {\n+                System.err.println(\"[ERROR] \" + msg);\n+            } else if (severity == EventSeverity.FATAL) {\n+                System.err.println(\"[FATAL] \" + msg);\n+            } else {\n+                assert false;\n+            }\n+        }\n+    }\n+    \n+\n+    /**\n+     * This method extracts the original exception from some exception. The exception\n+     * might be nested multiple levels deep.\n+     * @param t the Throwable to inspect\n+     * @return the original Throwable or the method parameter t if there are no nested Throwables.\n+     */\n+    private static Throwable getOriginalThrowable(Throwable t) {\n+        if (t instanceof SAXException) {\n+            SAXException saxe = (SAXException)t;\n+            if (saxe.getException() != null) {\n+                return getOriginalThrowable(saxe.getException());\n+            } else {\n+                return saxe;\n+            }\n+        } else {\n+            if (t.getCause() != null) {\n+                return getOriginalThrowable(t.getCause());\n+            } else {\n+                return t;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Main method.\n+     * @param args command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleEvents\\n\");\n+            System.out.println(\"Preparing...\");\n+            \n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files\n+            URL fo = ExampleEvents.class.getResource(\"missing-image.fo\");\n+            File pdffile = new File(outDir, \"out.pdf\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fo.toExternalForm() + \")\");\n+            System.out.println(\"Output: PDF (\" + pdffile + \")\");\n+            System.out.println();\n+            System.out.println(\"Transforming...\");\n+            \n+            ExampleEvents app = new ExampleEvents();\n+            \n+            try {\n+                app.convertFO2PDF(fo, pdffile);\n+            } catch (TransformerException te) {\n+                //Note: We don't get the original exception here!\n+                //FOP needs to embed the exception in a SAXException and the TraX transformer\n+                //again wraps the SAXException in a TransformerException. Even our own\n+                //RuntimeException just wraps the original FileNotFoundException.\n+                //So we need to unpack to get the original exception (about three layers deep).\n+                Throwable originalThrowable = getOriginalThrowable(te);\n+                originalThrowable.printStackTrace(System.err);\n+                System.out.println(\"Aborted!\");\n+                System.exit(-1);\n+            }\n+            \n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            //Some other error (shouldn't happen in this example)\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/examples/embedding/java/embedding/events/ExampleEvents.java",
                "sha": "9c52e4ba1f6a7c0e45f33ced5ce3fcccaaa4f71d",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/examples/embedding/java/embedding/events/missing-image.fo",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/missing-image.fo?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/missing-image.fo",
                "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n+  <fo:layout-master-set>\n+    <fo:simple-page-master master-name=\"A4\" page-height=\"29.7cm\" page-width=\"21cm\" margin=\"2cm\">\n+      <fo:region-body/>\n+    </fo:simple-page-master>\n+  </fo:layout-master-set>\n+  <fo:page-sequence master-reference=\"A4\">\n+    <fo:flow flow-name=\"xsl-region-body\">\n+      <fo:block>\n+        The following image is not available:\n+        <fo:external-graphic src=\"my-missing-image.png\"/>\n+      </fo:block>\n+    </fo:flow>\n+  </fo:page-sequence>\n+</fo:root>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/examples/embedding/java/embedding/events/missing-image.fo",
                "sha": "2c55f66ce70474b6391d8e5dc951eb9ce56e447b",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/lib/build/qdox-1.6.3.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox-1.6.3.jar?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "lib/build/qdox-1.6.3.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/lib/build/qdox-1.6.3.jar",
                "sha": "3e99cb06491b1aa501e46bbca4fafdad78a997d5",
                "status": "added"
            },
            {
                "additions": 201,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/lib/build/qdox.LICENSE.txt",
                "changes": 201,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox.LICENSE.txt?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "lib/build/qdox.LICENSE.txt",
                "patch": "@@ -0,0 +1,201 @@\n+                                  Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/lib/build/qdox.LICENSE.txt",
                "sha": "3e4e3d004084793138c1383213a0bb1b07f424a5",
                "status": "added"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventConventionException.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+public class EventConventionException extends Exception {\n+\n+    public EventConventionException(String message) {\n+        super(message);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "sha": "675f4a0ca8bc44066f0c1cc57021e1eacae955f3",
                "status": "added"
            },
            {
                "additions": 183,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "changes": 183,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "patch": "@@ -0,0 +1,183 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+import com.thoughtworks.qdox.JavaDocBuilder;\n+import com.thoughtworks.qdox.model.DefaultDocletTagFactory;\n+import com.thoughtworks.qdox.model.DocletTag;\n+import com.thoughtworks.qdox.model.DocletTagFactory;\n+import com.thoughtworks.qdox.model.JavaClass;\n+import com.thoughtworks.qdox.model.JavaMethod;\n+import com.thoughtworks.qdox.model.JavaParameter;\n+import com.thoughtworks.qdox.model.Type;\n+\n+/**\n+ * Finds EventProducer interfaces and builds the event model for them.\n+ */\n+public class EventProducerCollector {\n+\n+    private static final String CLASSNAME_EVENT_PRODUCER = EventProducer.class.getName();\n+    private static final Map PRIMITIVE_MAP;\n+    \n+    static {\n+        Map m = new java.util.HashMap();\n+        m.put(\"boolean\", Boolean.class);\n+        m.put(\"byte\", Byte.class);\n+        m.put(\"char\", Character.class);\n+        m.put(\"short\", Short.class);\n+        m.put(\"int\", Integer.class);\n+        m.put(\"long\", Long.class);\n+        m.put(\"float\", Float.class);\n+        m.put(\"double\", Double.class);\n+        PRIMITIVE_MAP = Collections.unmodifiableMap(m);\n+    }\n+    \n+    private DocletTagFactory tagFactory;\n+    private EventModel model = new EventModel();\n+\n+    public EventProducerCollector() {\n+        this.tagFactory = createDocletTagFactory();\n+    }\n+\n+    protected DocletTagFactory createDocletTagFactory() {\n+        return new DefaultDocletTagFactory();\n+    }\n+\n+    public void scanFile(File src, String filename)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        JavaDocBuilder builder = new JavaDocBuilder(this.tagFactory);\n+        builder.addSource(src);\n+        JavaClass[] classes = builder.getClasses();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass clazz = classes[i];\n+            if (clazz.isInterface() && implementsInterface(clazz, CLASSNAME_EVENT_PRODUCER)) {\n+                processEventProducerInterface(clazz, filename);\n+            }\n+        }\n+    }\n+\n+    private boolean implementsInterface(JavaClass clazz, String intf) {\n+        JavaClass[] classes = clazz.getImplementedInterfaces();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass cl = classes[i];\n+            if (cl.getFullyQualifiedName().equals(intf)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Processes an EventProducer interface and creates an EventProducerModel from it.\n+     * @param clazz the EventProducer interface\n+     * @param javaFilename the filename of the Java source of the interface\n+     * @throws EventConventionException if the event producer conventions are violated\n+     * @throws ClassNotFoundException if a required class cannot be found\n+     */\n+    protected void processEventProducerInterface(JavaClass clazz, String javaFilename)\n+                throws EventConventionException, ClassNotFoundException {\n+        EventProducerModel prodMeta = new EventProducerModel(clazz.getFullyQualifiedName());\n+        JavaMethod[] methods = clazz.getMethods(true);\n+        for (int i = 0, c = methods.length; i < c; i++) {\n+            JavaMethod method = methods[i];\n+            EventMethodModel methodMeta = createMethodModel(method);\n+            prodMeta.addMethod(methodMeta);\n+        }\n+        this.model.addProducer(prodMeta);\n+    }\n+\n+    private EventMethodModel createMethodModel(JavaMethod method)\n+            throws EventConventionException, ClassNotFoundException {\n+        JavaClass clazz = method.getParentClass();\n+        //Check EventProducer conventions\n+        if (!method.getReturns().isVoid()) {\n+            throw new EventConventionException(\"All methods of interface \"\n+                    + clazz.getFullyQualifiedName() + \" must have return type 'void'!\");\n+        }\n+        String methodSig = clazz.getFullyQualifiedName() + \".\" + method.getCallSignature();\n+        JavaParameter[] params = method.getParameters();\n+        if (params.length < 1) {\n+            throw new EventConventionException(\"The method \" + methodSig\n+                    + \" must have at least one parameter: 'Object source'!\");\n+        }\n+        Type firstType = params[0].getType();\n+        if (firstType.isPrimitive() || !\"source\".equals(params[0].getName())) {\n+            throw new EventConventionException(\"The first parameter of the method \" + methodSig\n+                    + \" must be: 'Object source'!\");\n+        }\n+        \n+        //build method model\n+        DocletTag tag = method.getTagByName(\"event.severity\");\n+        EventSeverity severity;\n+        if (tag != null) {\n+            severity = EventSeverity.valueOf(tag.getValue());\n+        } else { \n+            severity = EventSeverity.INFO;\n+        }\n+        EventMethodModel methodMeta = new EventMethodModel(\n+                method.getName(), severity);\n+        if (params.length > 1) {\n+            for (int j = 1, cj = params.length; j < cj; j++) {\n+                JavaParameter p = params[j];\n+                Class type;\n+                JavaClass pClass = p.getType().getJavaClass();\n+                if (p.getType().isPrimitive()) {\n+                    type = (Class)PRIMITIVE_MAP.get(pClass.getName());\n+                    if (type == null) {\n+                        throw new UnsupportedOperationException(\n+                                \"Primitive datatype not supported: \" + pClass.getName());\n+                    }\n+                } else {\n+                    String className = pClass.getFullyQualifiedName();\n+                    type = Class.forName(className);\n+                }\n+                methodMeta.addParameter(type, p.getName());\n+            }\n+        }\n+        Type[] exceptions = method.getExceptions();\n+        if (exceptions != null && exceptions.length > 0) {\n+            //We only use the first declared exception because that is always thrown\n+            JavaClass cl = exceptions[0].getJavaClass();\n+            methodMeta.setExceptionClass(cl.getFullyQualifiedName());\n+            methodMeta.setSeverity(EventSeverity.FATAL); //In case it's not set in the comments\n+        }\n+        return methodMeta;\n+    }\n+\n+    public EventModel getModel() {\n+        return this.model;\n+    }\n+    \n+    public void saveModelToXML(File modelFile) throws IOException {\n+        getModel().saveToXML(modelFile);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "sha": "e42395ae749ecc9538316a41acd526b2ed210eab",
                "status": "added"
            },
            {
                "additions": 200,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "changes": 200,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "patch": "@@ -0,0 +1,200 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.URIResolver;\n+import javax.xml.transform.dom.DOMResult;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.w3c.dom.Node;\n+\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.DirectoryScanner;\n+import org.apache.tools.ant.Project;\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.types.FileSet;\n+import org.apache.tools.ant.types.selectors.FilenameSelector;\n+\n+public class EventProducerCollectorTask extends Task {\n+\n+    private List filesets = new java.util.ArrayList();\n+    private File modelFile;\n+    private File translationFile;\n+    \n+    /** {@inheritDoc} */\n+    public void execute() throws BuildException {\n+        try {\n+            EventProducerCollector collector = new EventProducerCollector();\n+            processFileSets(collector);\n+            getModelFile().getParentFile().mkdirs();\n+            collector.saveModelToXML(getModelFile());\n+            log(\"Event model written to \" + getModelFile());\n+            if (getTranslationFile() != null) {\n+                updateTranslationFile();\n+            }\n+        } catch (ClassNotFoundException e) {\n+            throw new BuildException(e);\n+        } catch (EventConventionException ece) {\n+            throw new BuildException(ece);\n+        } catch (IOException ioe) {\n+            throw new BuildException(ioe);\n+        }\n+    }\n+    \n+    private static final String MODEL2TRANSLATION = \"model2translation.xsl\";\n+    private static final String MERGETRANSLATION = \"merge-translation.xsl\";\n+    \n+    protected void updateTranslationFile() throws IOException {\n+        try {\n+            boolean resultExists = getTranslationFile().exists();\n+            SAXTransformerFactory tFactory\n+                = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+            \n+            //Generate fresh generated translation file as template\n+            Source src = new StreamSource(getModelFile());\n+            StreamSource xslt1 = new StreamSource(\n+                    getClass().getResourceAsStream(MODEL2TRANSLATION));\n+            if (xslt1.getInputStream() == null) {\n+                throw new FileNotFoundException(MODEL2TRANSLATION + \" not found\");\n+            }\n+            DOMResult domres = new DOMResult();\n+            Transformer transformer = tFactory.newTransformer(xslt1);\n+            transformer.transform(src, domres);\n+            final Node generated = domres.getNode();\n+            \n+            Node sourceDocument;\n+            if (resultExists) {\n+                //Load existing translation file into memory (because we overwrite it later)\n+                src = new StreamSource(getTranslationFile());\n+                domres = new DOMResult();\n+                transformer = tFactory.newTransformer();\n+                transformer.transform(src, domres);\n+                sourceDocument = domres.getNode();\n+            } else {\n+                //Simply use generated as source document\n+                sourceDocument = generated;\n+            }\n+\n+            //Generate translation file (with potentially new translations)\n+            src = new DOMSource(sourceDocument);\n+            Result res = new StreamResult(getTranslationFile());\n+            StreamSource xslt2 = new StreamSource(\n+                    getClass().getResourceAsStream(MERGETRANSLATION));\n+            if (xslt2.getInputStream() == null) {\n+                throw new FileNotFoundException(MERGETRANSLATION + \" not found\");\n+            }\n+            transformer = tFactory.newTransformer(xslt2);\n+            transformer.setURIResolver(new URIResolver() {\n+                public Source resolve(String href, String base) throws TransformerException {\n+                    if (\"my:dom\".equals(href)) {\n+                        return new DOMSource(generated);\n+                    }\n+                    return null;\n+                }\n+            });\n+            if (resultExists) {\n+                transformer.setParameter(\"generated-url\", \"my:dom\");\n+            }\n+            transformer.transform(src, res);\n+            if (resultExists) {\n+                log(\"Translation file updated: \" + getTranslationFile());\n+            } else {\n+                log(\"Translation file generated: \" + getTranslationFile());\n+            }\n+        } catch (TransformerException te) {\n+            throw new IOException(te.getMessage());\n+        }\n+    }\n+\n+    protected void processFileSets(EventProducerCollector collector)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        Iterator iter = filesets.iterator();\n+        while (iter.hasNext()) {\n+            FileSet fs = (FileSet)iter.next();\n+            DirectoryScanner ds = fs.getDirectoryScanner(getProject());\n+            String[] srcFiles = ds.getIncludedFiles();\n+            File directory = fs.getDir(getProject());\n+            for (int i = 0, c = srcFiles.length; i < c; i++) {\n+                String filename = srcFiles[i];\n+                File src = new File(directory, filename);\n+                collector.scanFile(src, filename);\n+            }\n+        }\n+    }\n+\n+    public void addFileset(FileSet set) {\n+        filesets.add(set);\n+    }\n+    \n+    public void setModelFile(File f) {\n+        this.modelFile = f;\n+    }\n+    \n+    public File getModelFile() {\n+        return this.modelFile;\n+    }\n+    \n+    public void setTranslationFile(File f) {\n+        this.translationFile = f;\n+    }\n+    \n+    public File getTranslationFile() {\n+        return this.translationFile;\n+    }\n+    \n+    public static void main(String[] args) {\n+        try {\n+            Project project = new Project();\n+\n+            EventProducerCollectorTask generator = new EventProducerCollectorTask();\n+            generator.setProject(project);\n+            project.setName(\"Test\");\n+            FileSet fileset = new FileSet();\n+            fileset.setDir(new File(\"test/java\"));\n+            \n+            FilenameSelector selector = new FilenameSelector();\n+            selector.setName(\"**/*.java\");\n+            fileset.add(selector);\n+            generator.addFileset(fileset);\n+            \n+            File targetDir = new File(\"build/codegen1\");\n+            targetDir.mkdirs();\n+            \n+            generator.setModelFile(new File(\"D:/out.xml\"));\n+            generator.setTranslationFile(new File(\"D:/out1.xml\"));\n+            generator.execute();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "sha": "755e3da0bb4ba5ccc2e7cd68f927eb966de64d7d",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/merge-translation.xsl?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:param name=\"generated-url\" select=\"''\"/>\n+  \n+  <xsl:template match=\"catalogue\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\"><xsl:value-of select=\"@xml:lang\"/></xsl:attribute>\n+      <xsl:apply-templates/>\n+      <xsl:if test=\"$generated-url != ''\">\n+        <xsl:variable name=\"generated\" select=\"document($generated-url)\"/>\n+        <xsl:call-template name=\"add-new-messages\">\n+          <xsl:with-param name=\"existing\" select=\".\"/>\n+          <xsl:with-param name=\"new\" select=\"$generated/catalogue\"/>\n+        </xsl:call-template>\n+      </xsl:if>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"add-new-messages\">\n+    <xsl:param name=\"existing\"/>\n+    <xsl:param name=\"new\"/>\n+    <xsl:for-each select=\"$new/message\">\n+      <xsl:variable name=\"k\" select=\"@key\"/>\n+      <xsl:if test=\"not(boolean($existing/message[@key = $k]))\">\n+        <xsl:apply-templates select=\".\"></xsl:apply-templates>\n+      </xsl:if>\n+    </xsl:for-each>\n+  </xsl:template>  \n+  \n+  <xsl:template match=\"@*|node()\">\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"/>\n+    </xsl:copy>\n+  </xsl:template>\n+\n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "sha": "d15d22fd3ad8ad7e3abda1817f7d6a975e137b9a",
                "status": "added"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/model2translation.xsl?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:template match=\"event-model\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\">en</xsl:attribute>\n+      <xsl:apply-templates select=\"//method\"></xsl:apply-templates>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template match=\"method\">\n+    <message>\n+      <xsl:attribute name=\"key\"><xsl:value-of select=\"../@name\"/>.<xsl:value-of select=\"@name\"/></xsl:attribute>\n+    </message>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "sha": "a1cf404ee1c67670c254115da689eca71aadb8df",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/documentation/content/xdocs/site.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/site.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/site.xml",
                "patch": "@@ -155,6 +155,7 @@\n       <fonts label=\"Fonts\" href=\"fonts.html\"/>\n       <hyphenation label=\"Hyphenation\" href=\"hyphenation.html\"/>    \n       <extensions label=\"Extensions\" href=\"extensions.html\"/>\n+      <events label=\"Events\" href=\"events.html\"/>\n     </features>\n     \n   </trunk>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/documentation/content/xdocs/site.xml",
                "sha": "b0a3214e7892b1ce9f3e9b05096132ccad18b37c",
                "status": "modified"
            },
            {
                "additions": 422,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/documentation/content/xdocs/trunk/events.xml",
                "changes": 422,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/events.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/trunk/events.xml",
                "patch": "@@ -0,0 +1,422 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Events/Processing Feedback</title>\n+    <version>$Revision: 634267 $</version>\n+  </header>\n+  <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        In versions until 0.20.5, FOP used\n+        <a href=\"http://excalibur.apache.org/framework/index.html\">Avalon-style Logging</a> where\n+        it was possible to supply a logger per processing run. During the redesign\n+        the logging infrastructure was switched over to\n+        <a href=\"http://commons.apache.org/logging/\">Commons Logging</a> which is (like Log4J or\n+        java.util.logging) a \"static\" logging framework (the logger is accessed through static\n+        variables). This made it very difficult in a multi-threaded system to retrieve information\n+        for a single processing run.\n+      </p>\n+      <p>\n+        With FOP's event subsystem, we'd like to close this gap again and even go further. The\n+        first point is to realize that we have two kinds of \"logging\". Firstly, we have the logging\n+        infrastructure for the (FOP) developer who needs to be able to enable finer log messages\n+        for certain parts of FOP to track down a certain problem. Secondly, we have the user who\n+        would like to be informed about missing images, overflowing lines or substituted fonts.\n+        These messages (or events) are targeted at less technical people and may ideally be\n+        localized (translated). Furthermore, tool and solution builders would like to integrate\n+        FOP into their own solutions. For example, an FO editor should be able to point the user\n+        to the right place where a particular problem occurred while developing a document template.\n+        Finally, some integrators would like to abort processing if a resource (an image or a font)\n+        has not been found, while others would simply continue. The event system allows to\n+        react on these events.\n+      </p>\n+      <p>\n+        On this page, we won't discuss logging as such. We will show how the event subsystem can\n+        be used for various tasks. We'll first look at the event subsystem from the consumer side.\n+        Finally, the production of events inside FOP will be discussed (this is mostly interesting\n+        for FOP developers only).\n+      </p>\n+    </section>\n+    <section id=\"consumer\">\n+      <title>The consumer side</title>\n+      <p>\n+        The event subsystem is located in the <code>org.apache.fop.events</code> package and its\n+        base is the <code>Event</code> class. An instance is created for each event and is sent\n+        to a set of <code>EventListener</code> instances by the <code>EventBroadcaster</code>.\n+        An <code>Event</code> contains:\n+      </p>\n+      <ul>\n+        <li>an event ID,</li>\n+        <li>a source object (which generated the event),</li>\n+        <li>a severity level (Info, Warning, Error and Fatal Error) and</li>\n+        <li>a map of named parameters.</li>\n+      </ul>\n+      <p>\n+        The <code>EventFormatter</code> class can be used to translate the events into\n+        human-readable, localized messages.\n+      </p>\n+      <p>\n+        A full example of what is shown here can be found in the\n+        <code>examples/embedding/java/embedding/events</code> directory in the FOP distribution.\n+        The example can also be accessed\n+        <a href=\"http://svn.apache.org/viewvc/xmlgraphics/fop/trunk/examples/embedding/java/embedding/events/\">via the web</a>.\n+      </p>\n+      <section id=\"write-listener\">\n+        <title>Writing an EventListener</title>\n+        <p>\n+          The following code sample shows a very simple EventListener. It basically just sends\n+          all events to System.out (stdout) or System.err (stderr) depending on the event severity.\n+        </p>\n+        <source><![CDATA[import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/** A simple event listener that writes the events to stdout and stderr. */\n+public class SysOutEventListener implements EventListener {\n+\n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            System.out.println(\"[INFO ] \" + msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            System.out.println(\"[WARN ] \" + msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            System.err.println(\"[ERROR] \" + msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            System.err.println(\"[FATAL] \" + msg);\n+        } else {\n+            assert false;\n+        }\n+    }\n+}]]></source>\n+        <p>\n+          You can see that for every event the method <code>processEvent</code> of the\n+          <code>EventListener</code> will be called. Inside this method you can do whatever\n+          processing you would like including throwing a <code>RuntimeException</code>, if you want\n+          to abort the current processing run.\n+        </p>\n+        <p>\n+          The code above also shows how you can turn an event into a human-readable, localized\n+          message that can be presented to a user. The <code>EventFormatter</code> class does\n+          this for you. It provides additional methods if you'd like to explicitly specify\n+          the locale.\n+        </p>\n+        <p>\n+          It is possible to gather all events for a whole processing run so they can be\n+          evaluated afterwards. However, care should be taken about memory consumption since\n+          the events provide references to objects inside FOP which may themselves have\n+          references to other objects. So holding on to these objects may mean that whole\n+          object trees cannot be released!\n+        </p>\n+      </section>\n+      <section id=\"add-listener\">\n+        <title>Adding an EventListener</title>\n+        <p>\n+          To register the event listener with FOP, get the <code>EventBroadcaster</code> which\n+          is associated with the user agent (<code>FOUserAgent</code>) and add it there:\n+        </p>\n+        <source><![CDATA[FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());]]></source>\n+        <p>\n+          Please note that this is done separately for each processing run, i.e. for each\n+          new user agent.\n+        </p>\n+      </section>\n+      <section id=\"listener-example1\">\n+        <title>An additional listener example</title>\n+        <p>\n+          Here's an additional example of an event listener:\n+        </p>\n+        <p>\n+          By default, FOP continues processing even if an image wasn't found. If you have\n+          more strict requirements and want FOP to stop if an image is not available, you can\n+          do something like the following:\n+        </p>\n+        <source><![CDATA[public class MyEventListener implements EventListener {\n+\n+    public void processEvent(Event event) {\n+        if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                .equals(event.getEventID())) {\n+            \n+            //Get the FileNotFoundException that's part of the event's parameters\n+            FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+            throw new RuntimeException(EventFormatter.format(event), fnfe);\n+        } else {\n+            //ignore all other events (or do something of your choice)\n+        }\n+    }\n+    \n+}]]></source>\n+        <p>\n+          This throws a <code>RuntimeException</code> with the <code>FileNotFoundException</code>\n+          as the cause. Further processing effectively stops in FOP. You can catch the exception\n+          in your code and react as you see necessary.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"producer\">\n+      <title>The producer side (for FOP developers)</title>\n+      <p>\n+        This section is primarily for FOP and FOP plug-in developers. It describes how to use\n+        the event subsystem for producing events.\n+      </p>\n+      <note>\n+        The event package has been designed in order to be theoretically useful for use cases\n+        outside FOP. If you think this is interesting independently from FOP, please talk to\n+        <a href=\"mailto:fop-dev@xmlgraphics.apache.org\">us</a>.\n+      </note>\n+      <section id=\"basic-event-production\">\n+        <title>Producing and sending an event</title>\n+        <p>\n+          The basics are very simple. Just instantiate an <code>Event</code> object and fill\n+          it with the necessary parameters. Then pass it to the <code>EventBroadcaster</code>\n+          which distributes the events to the interested listeneners. Here's a code example:\n+        </p>\n+        <source><![CDATA[Event ev = new Event(this, \"complain\", EventSeverity.WARN,\n+        Event.paramsBuilder()\n+            .param(\"reason\", \"I'm tired\")\n+            .param(\"blah\", new Integer(23))\n+            .build());\n+EventBroadcaster broadcaster = [get it from somewhere];\n+broadcaster.broadcastEvent(ev);\n+]]></source>\n+        <p>\n+          The <code>Event.paramsBuilder()</code> is a\n+          <a href=\"http://en.wikipedia.org/wiki/Fluent_interface\">fluent interface</a>\n+          to help with the build-up of the parameters. You could just as well instantiate a\n+          <code>Map</code> (<code>Map&lt;String, Object&gt;</code>) and fill it with values.\n+        </p>\n+      </section>\n+      <section id=\"event-producer\">\n+        <title>The EventProducer interface</title>\n+        <p>\n+          To simplify event production, the event subsystem provides the <code>EventProducer</code>\n+          interface. You can create interfaces which extend <code>EventProducer</code>. These\n+          interfaces will contain one method per event to be generated. By contract, each event\n+          method must have as its first parameter a parameter named \"source\" (Type Object) which\n+          indicates the object that generated the event. After that come an arbitrary number of\n+          parameters of any type as needed by the event.\n+        </p>\n+        <p>\n+          The event producer interface does not need to have any implementation. The implementation\n+          is produced at runtime by a dynamic proxy created by <code>DefaultEventBroadcaster</code>.\n+          The dynamic proxy creates <code>Event</code> instances for each method call against\n+          the event producer interface. Each parameter (except \"source\") is added to the event's\n+          parameter map.\n+        </p>\n+        <p>\n+          To simplify the code needed to get an instance of the event producer interface it is\n+          suggested to create a public inner provider class inside the interface.\n+        </p>\n+        <p>\n+          Here's an example of such an event producer interface:\n+        </p>\n+        <source><![CDATA[public interface MyEventProducer extends EventProducer {\n+\n+    public class Provider {\n+        \n+        public static MyEventProducer get(EventBroadcaster broadcaster) {\n+            return (MyEventProducer)broadcaster.getEventProducerFor(MyEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Complain about something.\n+     * @param source the event source\n+     * @param reason the reason for the complaint\n+     * @param blah the complaint\n+     * @event.severity WARN\n+     */\n+    void complain(Object source, String reason, int blah);\n+    \n+}]]></source>\n+        <p>\n+          To produce the same event as in the first example above, you'd use the following code:\n+        </p>\n+        <source><![CDATA[EventBroadcaster broadcaster = [get it from somewhere];\n+TestEventProducer producer = TestEventProducer.Provider.get(broadcaster);\n+producer.complain(this, \"I'm tired\", 23);]]></source>\n+      </section>\n+      <section id=\"event-model\">\n+        <title>The event model</title>\n+        <p>\n+          Inside an invocation handler for a dynamic proxy, there's no information about\n+          the names of each parameter. The JVM doesn't provide it. The only thing you know is\n+          the interface and method name. In order to properly fill the <code>Event</code>'s\n+          parameter map we need to know the parameter names. These are retrieved from an\n+          event object model. This is found in the <code>org.apache.fop.events.model</code>\n+          package. The data for the object model is retrieved from an XML representation of the\n+          event model that is loaded as a resource. The XML representation is generated using an\n+          Ant task at build time (<code>ant resourcegen</code>). The Ant task (found in\n+          <code>src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java</code>)\n+          scans FOP's sources for descendants of the <code>EventProducer</code> interface and\n+          uses <a href=\"http://qdox.codehaus.org/\">QDox</a> to parse these interfaces.\n+        </p>\n+        <p>\n+          Primarily, the QDox-based collector task records the parameters' names and types.\n+          Furthermore, it extracts additional attributes embedded as Javadoc comments from\n+          the methods. At the moment, the only such attribute is \"@event.severity\" which indicates\n+          the default event severity (which can be changed by event listeners). The example event\n+          producer above shows the Javadocs for an event method.\n+        </p>\n+        <p>\n+          There's one more information that is extracted from the event producer information for\n+          the event model: an optional primary exception. The first exception in the \"throws\"\n+          declaration of an event method is noted. It is used to throw an exception from\n+          the invocation handler if the event has an event severity of \"FATAL\" when all\n+          listeners have been called (listeners can update the event severity). Please note\n+          that an implementation of\n+          <code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code> has to be\n+          registered for the <code>EventExceptionManager</code> to be able to construct the\n+          exception from an event.\n+        </p>\n+        <p>\n+          For a given application, there can be multiple event models active at the same time.\n+          In FOP, each renderer is considered to be a plug-in and provides its own specific\n+          event model. The individual event models are provided through an\n+          <code>EventModelFactory</code>. This interface is implemented for each event model\n+          and registered through the service provider mechanism\n+          (see the <a href=\"#plug-ins\">plug-ins section</a> for details).\n+        </p>\n+      </section>\n+      <section id=\"event-severity\">\n+        <title>Event severity</title>\n+        <p>\n+          Four different levels of severity for events has been defined:\n+        </p>\n+        <ol>\n+          <li>INFO: informational only</li>\n+          <li>WARN: a Warning</li>\n+          <li>ERROR: an error condition from which FOP can recover. FOP will continue processing.</li>\n+          <li>FATAL: a fatal error which causes an exception in the end and FOP will stop processing.</li>\n+        </ol>\n+        <p>\n+          Event listeners can choose to ignore certain events based on their event severity.\n+          Please note that you may recieve an event \"twice\" in a specific case: if there is\n+          a fatal error an event is generated and sent to the listeners. After that an exception\n+          is thrown with the same information and processing stops. If the fatal event is\n+          shown to the user and the following exception is equally presented to the user it\n+          may appear that the event is duplicated. Of course, the same information is just\n+          published through two different channels.\n+        </p>\n+      </section>\n+      <section id=\"plug-ins\">\n+        <title>Plug-ins to the event subsystem</title>\n+        <p>\n+          The event subsystem is extensible. There are a number of extension points:\n+        </p>\n+        <ul>\n+          <li>\n+            <strong><code>org.apache.fop.events.model.EventModelFactory</code>:</strong> Provides\n+            an event model to the event subsystem.\n+          </li>\n+          <li>\n+            <strong><code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code>:</strong>\n+            Creates exceptions for events, i.e. turns an event into a specific exception.\n+          </li>\n+        </ul>\n+        <p>\n+          The names in bold above are used as filenames for the service provider files that\n+          are placed in the <code>META-INF/services</code> directory. That way, they are\n+          automatically detected. This is a mechanism defined by the\n+          <a href=\"http://java.sun.com/j2se/1.4.2/docs/guide/jar/jar.html#Service%20Provider\">JAR file specification</a>.\n+        </p>\n+      </section>\n+      <section id=\"l10n\">\n+        <title>Localization (L10n)</title>\n+        <p>\n+          One goal of the event subsystem was to have localized (translated) event messages.\n+          The <code>EventFormatter</code> class can be used to convert an event to a\n+          human-readable message. Each <code>EventProducer</code> can provide its own XML-based\n+          translation file. If there is none, a central translation file is used, called\n+          \"EventFormatter.xml\" (found in the same directory as the <code>EventFormatter</code>\n+          class).\n+        </p>\n+        <p>\n+          The XML format used by the <code>EventFormatter</code> is the same as\n+          <a href=\"ext:cocoon\">Apache Cocoon's</a> catalog format. Here's an example:\n+        </p>\n+        <source><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">\n+    [ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.explicitTableColumnsRequired\">\n+    RTF output requires that all table-columns for a table are defined. Output will be incorrect.{{locator}}\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.ignoredDeferredEvent\">\n+    Ignored deferred event for {node} ({start,if,start,end}).{{locator}}\n+  </message>\n+</catalogue>\n+]]></source>\n+        <p>\n+          The example (extracted from the RTF handler's event producer) has message templates for\n+          two event methods. The class used to do variable replacement in the templates is\n+          <code>org.apache.fop.util.text.AdvancedMessageFormat</code> which is more powerful\n+          than the <code>MessageFormat</code> classes provided by the Java class library\n+          (<code>java.util.text</code> package).\n+        </p>\n+        <p>\n+          \"locator\" is a template that is reused by the other message templates\n+          by referencing it through \"{{locator}}\". This is some kind of include command.\n+        </p>\n+        <p>\n+          Normal event parameters are accessed by name inside single curly braces, for example:\n+          \"{node}\". For objects, this format just uses the <code>toString()</code> method to turn\n+          the object into a string, unless there is an <code>ObjectFormatter</code> registered\n+          for that type (there's an example for <code>org.xml.sax.Locator</code>).\n+        </p>\n+        <p>\n+          The single curly braces pattern supports additional features. For example, it is possible\n+          to do this: \"{start,if,start,end}\". \"if\" here is a special field modifier that evaluates\n+          \"start\" as a boolean and if that is true returns the text right after the second comma\n+          (\"start\"). Otherwise it returns the text after the third comma (\"end\"). The \"equals\"\n+          modifier is similar to \"if\" but it takes as an additional (comma-separated) parameter\n+          right after the \"equals\" modifier, a string that is compared to the value of the variable.\n+          An example: {severity,equals,EventSeverity:FATAL,,some text} (this adds \"some text\" if\n+          the severity is not FATAL).\n+        </p>\n+        <p>\n+          Additional such modifiers can be added by implementing the\n+          <code>AdvancedMessageFormat$Part</code> and <code>AdvancedMessageFormat$PartFactory</code>\n+          interfaces.\n+        </p>\n+        <p>\n+          Square braces can be used to specify optional template sections. The whole section will\n+          be omitted if any of the variables used within are unavailable. Pipe (|) characters can\n+          be used to specify alternative sub-templates (see \"locator\" above for an example).\n+        </p>\n+        <p>\n+          Developers can also register a function (in the above example:\n+          <code>{#gatherContextInfo})</code>\n+          to do more complex information rendering. These functions are implementations of the\n+          <code>AdvancedMessageFormat$Function</code> interface. Please take care that this is\n+          done in a locale-independent way as there is no locale information available, yet.\n+        </p>\n+      </section>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/documentation/content/xdocs/trunk/events.xml",
                "sha": "d2fe5318c507eb10c44100cd54de19b7fcd4d715",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "patch": "@@ -0,0 +1,4 @@\n+org.apache.fop.events.ValidationExceptionFactory\r\n+org.apache.fop.events.PropertyExceptionFactory\r\n+org.apache.fop.events.UnsupportedOperationExceptionFactory\r\n+org.apache.fop.layoutmgr.LayoutException$LayoutExceptionFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "sha": "9fa7b8d04efbb8893c96f83e8b5a1402ee000f8f",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "patch": "@@ -0,0 +1,7 @@\n+org.apache.fop.events.FOPEventModelFactory\r\n+org.apache.fop.render.afp.AFPEventProducer$EventModelFactory\r\n+org.apache.fop.render.bitmap.BitmapRendererEventProducer$EventModelFactory\r\n+org.apache.fop.render.pcl.PCLEventProducer$EventModelFactory\r\n+org.apache.fop.render.pdf.PDFEventProducer$EventModelFactory\r\n+org.apache.fop.render.ps.PSEventProducer$EventModelFactory\r\n+org.apache.fop.render.rtf.RTFEventProducer$EventModelFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "sha": "8dc13dbfd9dc7bf552df0b33a38c892ec46de790",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.fo.FONode$GatherContextInfoFunction",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "sha": "375130f2ac4421e308438b621a95e489b4212844",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.util.text.LocatorFormatter",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "sha": "9e3860b313d1a2c9cd79b98b049425df3ef5715b",
                "status": "added"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "patch": "@@ -0,0 +1,6 @@\n+org.apache.fop.util.text.IfFieldPart$Factory\n+org.apache.fop.util.text.EqualsFieldPart$Factory\n+org.apache.fop.util.text.ChoiceFieldPart$Factory\n+org.apache.fop.util.text.HexFieldPart$Factory\n+org.apache.fop.util.text.GlyphNameFieldPart$Factory\n+org.apache.fop.events.EventFormatter$LookupFieldPartFactory",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "sha": "1647fb8d515c6eed66382f33d815b43a56bef175",
                "status": "added"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/apps/FOPException.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOPException.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/apps/FOPException.java",
                "patch": "@@ -32,6 +32,8 @@\n     private String systemId;\n     private int line;\n     private int column;\n+    \n+    private String localizedMessage;\n \n     /**\n      * Constructs a new FOP exception with the specified detail message.\n@@ -210,5 +212,24 @@ public void printStackTrace(java.io.PrintWriter writer) {\n             }\n         }\n     }\n+    \n+    /**\n+     * Sets the localized message for this exception.\n+     * @param msg the localized message\n+     */\n+    public void setLocalizedMessage(String msg) {\n+        this.localizedMessage = msg;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        if (this.localizedMessage != null) {\n+            return this.localizedMessage;\n+        } else {\n+            return super.getLocalizedMessage();\n+        }\n+    }\n \n+    \n+    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/apps/FOPException.java",
                "sha": "851712b09aa3af8f8c3f2edb282f7de5d1695a90",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/apps/FOUserAgent.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOUserAgent.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/apps/FOUserAgent.java",
                "patch": "@@ -36,6 +36,12 @@\n import org.apache.xmlgraphics.image.loader.impl.AbstractImageSessionContext;\n \n import org.apache.fop.Version;\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.FOPEventListenerProxy;\n+import org.apache.fop.events.LoggingEventListener;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.render.Renderer;\n import org.apache.fop.render.RendererFactory;\n@@ -89,6 +95,7 @@\n     private Renderer rendererOverride = null;\n     private FOEventHandler foEventHandlerOverride = null;\n     private boolean locatorEnabled = true; // true by default (for error messages).\n+    private EventBroadcaster eventBroadcaster = new FOPEventBroadcaster();\n     \n     /** Producer:  Metadata element for the system/software that produces\n      * the document. (Some renderers can store this in the document.)\n@@ -530,5 +537,43 @@ public boolean isLocatorEnabled() {\n         return locatorEnabled;\n     }\n \n+    /**\n+     * Returns the event broadcaster that control events sent inside a processing run. Clients\n+     * can register event listeners with the event broadcaster to listen for events that occur\n+     * while a document is being processed.\n+     * @return the event broadcaster.\n+     */\n+    public EventBroadcaster getEventBroadcaster() {\n+        return this.eventBroadcaster;\n+    }\n+\n+    private class FOPEventBroadcaster extends DefaultEventBroadcaster {\n+\n+        private FOPEventListenerProxy rootListener;\n+        \n+        public FOPEventBroadcaster() {\n+            this.rootListener = new FOPEventListenerProxy(\n+                    this.listeners, FOUserAgent.this);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void broadcastEvent(Event event) {\n+            rootListener.processEvent(event);\n+        }\n+\n+        /** {@inheritDoc} */\n+        protected EventProducer createProxyFor(Class clazz) {\n+            if (!this.listeners.hasEventListeners()) {\n+                //Backwards-compatibility: Make sure at least the LoggingEventListener is plugged\n+                //in so no events are just silently swallowed.\n+                addEventListener(\n+                        new LoggingEventListener(LogFactory.getLog(FOUserAgent.class)));\n+                \n+            }\n+            return super.createProxyFor(clazz);\n+        }\n+        \n+    }\n+    \n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/apps/FOUserAgent.java",
                "sha": "307087f7431f5a3962ebcd726d8377300908382a",
                "status": "modified"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaEventProducer.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/AreaEventProducer.java",
                "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.area;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for events related to the area tree.\n+ */\n+public interface AreaEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static AreaEventProducer get(EventBroadcaster broadcaster) {\n+            return (AreaEventProducer)broadcaster.getEventProducerFor(\n+                    AreaEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * An unresolved ID reference was encountered.\n+     * @param source the event source\n+     * @param type the type of reference\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReference(Object source, String type, String id);\n+    \n+    /**\n+     * An unresolved ID reference was encountered on a page.\n+     * @param source the event source\n+     * @param page the page the ID reference was found on\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReferenceOnPage(Object source, String page, String id);\n+    \n+    /**\n+     * A page could not be loaded/deserialized from a file.\n+     * @param source the event source\n+     * @param page the page to be loaded\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageLoadError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be saved/serialized to a file.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageSaveError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be rendered.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageRenderingError(Object source, String page, Exception e);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaEventProducer.java",
                "sha": "7747d2d79c6e05dc64958cb97eead4c4195f78e9",
                "status": "added"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/area/AreaTreeHandler.java",
                "patch": "@@ -325,8 +325,9 @@ private void addOffDocumentItem(OffDocumentItem odi) {\n                 if (pageVPList != null) {\n                     res.resolveIDRef(ids[count], pageVPList);\n                 } else {\n-                    log.warn(odi.getName() + \": Unresolved id reference \\\"\"\n-                            + ids[count] + \"\\\" found.\");\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReference(this, odi.getName(), ids[count]);\n                     idTracker.addUnresolvedIDRef(ids[count], res);\n                 }\n             }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "sha": "d3ea4155480403b00f340b0b99f42eee985412a2",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeObject.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeObject.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/area/AreaTreeObject.java",
                "patch": "@@ -23,7 +23,7 @@\n import java.util.Iterator;\n import java.util.Map;\n \n-import org.apache.fop.util.QName;\n+import org.apache.xmlgraphics.util.QName;\n \n /**\n  * Abstract base class for all area tree objects.\n@@ -53,12 +53,12 @@ public void setForeignAttributes(Map atts) {\n         if (atts.size() == 0) {\n             return;\n         }\n-        Iterator iter = atts.keySet().iterator();\n+        Iterator iter = atts.entrySet().iterator();\n         while (iter.hasNext()) {\n-            QName qName = (QName)iter.next();\n-            String value = (String)atts.get(qName);\n+            Map.Entry entry = (Map.Entry)iter.next();\n+            String value = (String)entry.getValue();\n             //The casting is only to ensure type safety (too bad we can't use generics, yet) \n-            setForeignAttribute(qName, value);\n+            setForeignAttribute((QName)entry.getKey(), value);\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeObject.java",
                "sha": "1c2269a01a7d3cf3cc0da5ed135791de40788b1f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeParser.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/area/AreaTreeParser.java",
                "patch": "@@ -50,6 +50,7 @@\n import org.apache.xmlgraphics.image.loader.ImageInfo;\n import org.apache.xmlgraphics.image.loader.ImageManager;\n import org.apache.xmlgraphics.image.loader.ImageSessionContext;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.area.Trait.Background;\n@@ -78,7 +79,6 @@\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactoryRegistry;\n import org.apache.fop.util.DefaultErrorListener;\n-import org.apache.fop.util.QName;\n \n /**\n  * This is a parser for the area tree XML (intermediate format) which is used to reread an area",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/AreaTreeParser.java",
                "sha": "19edd3d5e177dfbafe2e3a69771b2bc025c76ba4",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/CachedRenderPagesModel.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 39,
                "filename": "src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "patch": "@@ -19,24 +19,27 @@\n  \n package org.apache.fop.area;\n \n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.apps.FOPException;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.fonts.FontInfo;\n-import org.xml.sax.SAXException;\n-\n-import java.util.Map;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n import java.io.File;\n-import java.io.FileOutputStream;\n import java.io.FileInputStream;\n-import java.io.ObjectOutputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.io.OutputStream;\n-import java.io.BufferedOutputStream;\n-import java.io.BufferedInputStream;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.ResourceEventProducer;\n+import org.apache.fop.fonts.FontInfo;\n \n /**\n  * A simple cached render pages model.\n@@ -69,46 +72,39 @@ public CachedRenderPagesModel (FOUserAgent userAgent, String outputFormat,\n      */\n     protected boolean checkPreparedPages(PageViewport newpage, boolean renderUnresolved) {\n         for (Iterator iter = prepared.iterator(); iter.hasNext();) {\n-            PageViewport p = (PageViewport)iter.next();\n-            if (p.isResolved() || renderUnresolved) {\n-                if (p != newpage) {\n+            PageViewport pageViewport = (PageViewport)iter.next();\n+            if (pageViewport.isResolved() || renderUnresolved) {\n+                if (pageViewport != newpage) {\n                     try {\n                         // load page from cache\n-                        String name = (String)pageMap.get(p);\n+                        String name = (String)pageMap.get(pageViewport);\n                         File tempFile = new File(baseDir, name);\n                         log.debug(\"Loading page from: \" + tempFile);\n                         ObjectInputStream in = new ObjectInputStream(\n                                              new BufferedInputStream(\n                                                new FileInputStream(tempFile)));\n                         try {\n-                            p.loadPage(in);\n+                            pageViewport.loadPage(in);\n                         } finally {\n                             IOUtils.closeQuietly(in);\n                         }\n                         if (!tempFile.delete()) {\n-                            log.warn(\"Temporary file could not be deleted: \" + tempFile);\n+                            ResourceEventProducer eventProducer\n+                                = ResourceEventProducer.Provider.get(\n+                                        renderer.getUserAgent().getEventBroadcaster());\n+                            eventProducer.cannotDeleteTempFile(this, tempFile);\n                         }\n-                        pageMap.remove(p);\n+                        pageMap.remove(pageViewport);\n                     } catch (Exception e) {\n-                        log.error(e);\n+                        AreaEventProducer eventProducer\n+                            = AreaEventProducer.Provider.get(\n+                                renderer.getUserAgent().getEventBroadcaster());\n+                        eventProducer.pageLoadError(this, pageViewport.getPageNumberString(), e);\n                     }\n                 }\n \n-                try {\n-                    renderer.renderPage(p);\n-                    if (!p.isResolved()) {\n-                        String[] idrefs = p.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + p.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(e);\n-                }\n-                p.clear();\n+                renderPage(pageViewport);\n+                pageViewport.clear();\n                 iter.remove();\n             } else {\n                 if (!renderer.supportsOutOfOrder()) {\n@@ -147,8 +143,11 @@ protected void savePage(PageViewport page) {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Page saved to temporary file: \" + tempFile);\n             }\n-        } catch (Exception e) {\n-            log.error(e);\n+        } catch (IOException ioe) {\n+            AreaEventProducer eventProducer\n+                = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageSaveError(this, page.getPageNumberString(), ioe);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "sha": "b34a7e8d15dd499567bf93d6049f7c5bebce9cb2",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/PageViewport.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/PageViewport.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/area/PageViewport.java",
                "patch": "@@ -21,14 +21,15 @@\n \n import java.awt.Rectangle;\n import java.awt.geom.Rectangle2D;\n-import java.io.ObjectOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.logging.Log;\n@@ -516,9 +517,9 @@ public void dumpMarkers() {\n      * The map of unresolved references are set on the page so that\n      * the resolvers can be properly serialized and reloaded.\n      * @param out the object output stream to write the contents\n-     * @throws Exception if there is a problem saving the page\n+     * @throws IOException in case of an I/O error while serializing the page\n      */\n-    public void savePage(ObjectOutputStream out) throws Exception {\n+    public void savePage(ObjectOutputStream out) throws IOException {\n         // set the unresolved references so they are serialized\n         page.setUnresolvedReferences(unresolvedIDRefs);\n         out.writeObject(page);\n@@ -531,9 +532,10 @@ public void savePage(ObjectOutputStream out) throws Exception {\n      * if there are any unresolved references that were resolved\n      * while saved they will be resolved on the page contents.\n      * @param in the object input stream to read the page from\n-     * @throws Exception if there is an error loading the page\n+     * @throws ClassNotFoundException if a class was not found while loading the page\n+     * @throws IOException if an I/O error occurred while loading the page\n      */\n-    public void loadPage(ObjectInputStream in) throws Exception {\n+    public void loadPage(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         page = (Page) in.readObject();\n         unresolvedIDRefs = page.getUnresolvedReferences();\n         if (unresolvedIDRefs != null && pendingResolved != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/PageViewport.java",
                "sha": "da7ef1def81cbe399c0ac89f887854f717320241",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/RenderPagesModel.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/RenderPagesModel.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/area/RenderPagesModel.java",
                "patch": "@@ -156,23 +156,7 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n                         && pageViewport.getPageSequence().isFirstPage(pageViewport)) {\n                     renderer.startPageSequence(getCurrentPageSequence());\n                 }\n-                try {\n-                    renderer.renderPage(pageViewport);\n-                    if (!pageViewport.isResolved()) {\n-                        String[] idrefs = pageViewport.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + pageViewport.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(\"Error while rendering page \" + pageViewport.getPageIndex(), e);\n-                    if (e instanceof RuntimeException) {\n-                        throw (RuntimeException)e;\n-                    }\n-                }\n+                renderPage(pageViewport);\n                 pageViewport.clear();\n                 iter.remove();\n             } else {\n@@ -185,6 +169,33 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n         return renderer.supportsOutOfOrder() || prepared.isEmpty();\n     }\n \n+    /**\n+     * Renders the given page and notified about unresolved IDs if any.\n+     * @param pageViewport the page to be rendered.\n+     */\n+    protected void renderPage(PageViewport pageViewport) {\n+        try {\n+            renderer.renderPage(pageViewport);\n+            if (!pageViewport.isResolved()) {\n+                String[] idrefs = pageViewport.getIDRefs();\n+                for (int count = 0; count < idrefs.length; count++) {\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            renderer.getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReferenceOnPage(this,\n+                            pageViewport.getPageNumberString(), idrefs[count]);\n+                }\n+            }\n+        } catch (Exception e) {\n+            AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageRenderingError(this,\n+                    pageViewport.getPageNumberString(), e);\n+            if (e instanceof RuntimeException) {\n+                throw (RuntimeException)e;\n+            }\n+        }\n+    }\n+\n     /**\n      * Prepare a page.\n      * An unresolved page can be prepared if the renderer supports",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/area/RenderPagesModel.java",
                "sha": "b215669022fd1f9fe6f0c49376b62f3a557eda9f",
                "status": "modified"
            },
            {
                "additions": 69,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/CompositeEventListener.java",
                "changes": 69,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/CompositeEventListener.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/CompositeEventListener.java",
                "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.List;\n+\n+/**\n+ * EventListener implementation forwards events to possibly multiple other EventListeners.\n+ */\n+public class CompositeEventListener implements EventListener {\n+\n+    private List listeners = new java.util.ArrayList();\n+    \n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    public synchronized void addEventListener(EventListener listener) {\n+        this.listeners.add(listener);\n+    }\n+\n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    public synchronized void removeEventListener(EventListener listener) {\n+        this.listeners.remove(listener);\n+    }\n+\n+    private synchronized int getListenerCount() {\n+        return this.listeners.size();\n+    }\n+    \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    public boolean hasEventListeners() {\n+        return (getListenerCount() > 0);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        for (int i = 0, c = getListenerCount(); i < c; i++) {\n+            EventListener listener = (EventListener)this.listeners.get(i);\n+            listener.processEvent(event);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/CompositeEventListener.java",
                "sha": "a65728b71501020db28540c078234b5f4d9837ba",
                "status": "added"
            },
            {
                "additions": 160,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "changes": 160,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/DefaultEventBroadcaster.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "patch": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventModelFactory;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * Default implementation of the EventBroadcaster interface. It holds a list of event listeners\n+ * and can provide {@link EventProducer} instances for type-safe event production.\n+ */\n+public class DefaultEventBroadcaster implements EventBroadcaster {\n+\n+    /** Holds all registered event listeners */\n+    protected CompositeEventListener listeners = new CompositeEventListener();\n+    \n+    /** {@inheritDoc} */\n+    public void addEventListener(EventListener listener) {\n+        this.listeners.addEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void removeEventListener(EventListener listener) {\n+        this.listeners.removeEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean hasEventListeners() {\n+        return this.listeners.hasEventListeners();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void broadcastEvent(Event event) {\n+        this.listeners.processEvent(event);\n+    }\n+\n+    private static List/*<EventModel>*/ eventModels = new java.util.ArrayList();\n+    private Map proxies = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter = Service.providers(EventModelFactory.class, true);\n+        while (iter.hasNext()) {\n+            EventModelFactory factory = (EventModelFactory)iter.next();\n+            addEventModel(factory.createEventModel());\n+        }\n+    }\n+\n+    /**\n+     * Adds a new {@link EventModel} to the list of registered event models.\n+     * @param eventModel the event model instance\n+     */\n+    public static void addEventModel(EventModel eventModel) {\n+        eventModels.add(eventModel);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public EventProducer getEventProducerFor(Class clazz) {\n+        if (!EventProducer.class.isAssignableFrom(clazz)) {\n+            throw new IllegalArgumentException(\n+                    \"Class must be an implementation of the EventProducer interface: \"\n+                    + clazz.getName());\n+        }\n+        EventProducer producer;\n+        producer = (EventProducer)this.proxies.get(clazz);\n+        if (producer == null) {\n+            producer = createProxyFor(clazz);\n+            this.proxies.put(clazz, producer);\n+        }\n+        return producer;\n+    }\n+    \n+    private EventProducerModel getEventProducerModel(Class clazz) {\n+        for (int i = 0, c = eventModels.size(); i < c; i++) {\n+            EventModel eventModel = (EventModel)eventModels.get(i);\n+            EventProducerModel producerModel = eventModel.getProducer(clazz);\n+            if (producerModel != null) {\n+                return producerModel;\n+            }\n+        }\n+        return null;\n+    }\n+    \n+    /**\n+     * Creates a dynamic proxy for the given EventProducer interface that will handle the\n+     * conversion of the method call into the broadcasting of an event instance.\n+     * @param clazz a descendant interface of EventProducer\n+     * @return the EventProducer instance\n+     */\n+    protected EventProducer createProxyFor(Class clazz) {\n+        final EventProducerModel producerModel = getEventProducerModel(clazz);\n+        if (producerModel == null) {\n+            throw new IllegalStateException(\"Event model doesn't contain the definition for \"\n+                    + clazz.getName());\n+        }\n+        return (EventProducer)Proxy.newProxyInstance(clazz.getClassLoader(),\n+                new Class[] {clazz},\n+                new InvocationHandler() {\n+                    public Object invoke(Object proxy, Method method, Object[] args)\n+                            throws Throwable {\n+                        String methodName = method.getName();\n+                        EventMethodModel methodModel = producerModel.getMethod(methodName);\n+                        String eventID = producerModel.getInterfaceName() + \".\" + methodName;\n+                        if (methodModel == null) {\n+                            throw new IllegalStateException(\n+                                    \"Event model isn't consistent\"\n+                                    + \" with the EventProducer interface. Please rebuild FOP!\"\n+                                    + \" Affected method: \"\n+                                    + eventID);\n+                        }\n+                        Map params = new java.util.HashMap();\n+                        int i = 1;\n+                        Iterator iter = methodModel.getParameters().iterator();\n+                        while (iter.hasNext()) {\n+                            EventMethodModel.Parameter param\n+                                = (EventMethodModel.Parameter)iter.next();\n+                            params.put(param.getName(), args[i]);\n+                            i++;\n+                        }\n+                        Event ev = new Event(args[0], eventID, methodModel.getSeverity(), params);\n+                        broadcastEvent(ev);\n+                        \n+                        if (ev.getSeverity() == EventSeverity.FATAL) {\n+                            EventExceptionManager.throwException(ev,\n+                                    methodModel.getExceptionClass());\n+                        }\n+                        return null;\n+                    }\n+                });\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "sha": "bb1752a720c281e765bc1c9e624323d970613a8f",
                "status": "added"
            },
            {
                "additions": 150,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/Event.java",
                "changes": 150,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/Event.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/Event.java",
                "patch": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Collections;\n+import java.util.EventObject;\n+import java.util.Map;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This is the default event class used by this package. Each event has a unique event identifier\n+ * (a String), a severity indicator and a map of name/value pairs.\n+ */\n+public class Event extends EventObject {\n+\n+    private static final long serialVersionUID = -1310594422868258083L;\n+    \n+    private String eventID;\n+    private EventSeverity severity;\n+    private Map params;\n+    \n+    /**\n+     * Creates a new Event.\n+     * @param source the object that creates the event\n+     * @param eventID the unique identifier of the event\n+     * @param severity the severity level\n+     * @param params the event parameters (a map of name/value pairs)\n+     */\n+    public Event(Object source, String eventID, EventSeverity severity, Map params) {\n+        super(source);\n+        this.eventID = eventID;\n+        setSeverity(severity);\n+        this.params = params;\n+    }\n+    \n+    /**\n+     * Returns the event identifier.\n+     * @return the event identifier\n+     */\n+    public String getEventID() {\n+        return this.eventID;\n+    }\n+    \n+    /**\n+     * Returns the event group identifier.\n+     * @return the event group identifier (or null if there is no group identifier)\n+     */\n+    public String getEventGroupID() {\n+        int pos = this.eventID.lastIndexOf('.');\n+        if (pos > 0) {\n+            return this.eventID.substring(0, pos);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns the severity level.\n+     * @return the severity level\n+     */\n+    public EventSeverity getSeverity() {\n+        return this.severity;\n+    }\n+    \n+    /**\n+     * Sets the event's severity level. This method can be used to increase or decrease the\n+     * severity level in a listener.\n+     * @param severity the new event severity\n+     */\n+    public void setSeverity(EventSeverity severity) {\n+        this.severity = severity;\n+    }\n+\n+    /**\n+     * Returns a parameter.\n+     * @param key the key to the parameter\n+     * @return the parameter value or null if no value with this key is found\n+     */\n+    public Object getParam(String key) {\n+        if (this.params != null) {\n+            return this.params.get(key);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable {@link java.util.Map} with all event parameters.\n+     * @return the parameter map\n+     */\n+    public Map getParams() {\n+        return Collections.unmodifiableMap(this.params);\n+    }\n+    \n+    /**\n+     * Creates and returns a fluent builder object for building up the parameter map.\n+     * @return the parameter builder\n+     */\n+    public static ParamsBuilder paramsBuilder() {\n+        return new ParamsBuilder();\n+    }\n+    \n+    /**\n+     * This class is a fluent builder class for building up the parameter map.\n+     */\n+    public static class ParamsBuilder {\n+        private Map params;\n+        \n+        /**\n+         * Adds a new parameter (a name/value pair).\n+         * @param name the name of the parameter\n+         * @param value the value of the parameter\n+         * @return this instance\n+         */\n+        public ParamsBuilder param(String name, Object value) {\n+            if (this.params == null) {\n+                this.params = new java.util.HashMap();\n+            }\n+            this.params.put(name, value);\n+            return this;\n+        }\n+        \n+        /**\n+         * Returns the accumulated parameter map.\n+         * @return the accumulated parameter map\n+         */\n+        public Map build() {\n+            return this.params;\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/Event.java",
                "sha": "d3da1809e6644c38f2ade90f7d3e88e6a34a29e5",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventBroadcaster.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventBroadcaster.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventBroadcaster.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * The EventBroadcaster is the central relay point for events. It receives events from various\n+ * parts of the application and forwards them to any registered EventListener.\n+ */\n+public interface EventBroadcaster {\n+\n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    void addEventListener(EventListener listener);\n+    \n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    void removeEventListener(EventListener listener);\n+ \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    boolean hasEventListeners();\n+    \n+    /**\n+     * Broadcasts an event. This method is usually called from within the observed component.\n+     * @param event the event to be broadcast\n+     */\n+    void broadcastEvent(Event event);\n+    \n+    /**\n+     * Returns an event producer instance for the given interface class.\n+     * @param clazz the Class object identifying an {@link EventProducer} interface\n+     * @return the event producer instance\n+     */\n+    EventProducer getEventProducerFor(Class clazz);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventBroadcaster.java",
                "sha": "6c8df73750e2ed76ff3f939a82437631a00a09fc",
                "status": "added"
            },
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventExceptionManager.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventExceptionManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventExceptionManager.java",
                "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+/**\n+ * This class is reponsible for converting events into exceptions.\n+ */\n+public class EventExceptionManager {\n+\n+    private static final Map EXCEPTION_FACTORIES = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter;\n+        iter = Service.providers(ExceptionFactory.class, true);\n+        while (iter.hasNext()) {\n+            ExceptionFactory factory = (ExceptionFactory)iter.next();\n+            EXCEPTION_FACTORIES.put(factory.getExceptionClass().getName(), factory);\n+        }\n+    }\n+    \n+    /**\n+     * Converts an event into an exception and throws that. If the exception class is null,\n+     * a {@link RuntimeException} will be thrown.\n+     * @param event the event to be converted\n+     * @param exceptionClass the exception class to be thrown\n+     * @throws Throwable this happens always\n+     */\n+    public static void throwException(Event event, String exceptionClass) throws Throwable {\n+        if (exceptionClass != null) {\n+            ExceptionFactory factory = (ExceptionFactory)EXCEPTION_FACTORIES.get(exceptionClass);\n+            if (factory != null) {\n+                throw factory.createException(event);\n+            } else {\n+                throw new IllegalArgumentException(\n+                        \"No such ExceptionFactory available: \" + exceptionClass);\n+            }\n+        } else {\n+            String msg = EventFormatter.format(event);\n+            throw new RuntimeException(msg);\n+        }\n+    }\n+    \n+    /**\n+     * This interface is implementation by exception factories that can create exceptions from\n+     * events.\n+     */\n+    public interface ExceptionFactory {\n+        \n+        /**\n+         * Creates an exception from an event.\n+         * @param event the event\n+         * @return the newly created exception\n+         */\n+        Throwable createException(Event event);\n+        \n+        /**\n+         * Returns the {@link Exception} class created by this factory.\n+         * @return the exception class\n+         */\n+        Class getExceptionClass();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventExceptionManager.java",
                "sha": "093ae701071315319f380cea4101f4564aac455e",
                "status": "added"
            },
            {
                "additions": 196,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter.java",
                "changes": 196,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.java",
                "patch": "@@ -0,0 +1,196 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.util.XMLResourceBundle;\n+import org.apache.fop.util.text.AdvancedMessageFormat;\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Converts events into human-readable, localized messages.\n+ */\n+public final class EventFormatter {\n+\n+    private static final Pattern INCLUDES_PATTERN = Pattern.compile(\"\\\\{\\\\{.+\\\\}\\\\}\");\n+    \n+    private static ResourceBundle defaultBundle = XMLResourceBundle.getXMLBundle(\n+            EventFormatter.class.getName(), EventFormatter.class.getClassLoader());\n+    \n+    private static Log log = LogFactory.getLog(EventFormatter.class);\n+    \n+    private EventFormatter() {\n+        //utility class\n+    }\n+    \n+    /**\n+     * Formats an event using the default locale.\n+     * @param event the event\n+     * @return the formatted message\n+     */\n+    public static String format(Event event) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = defaultBundle;\n+        }\n+        return format(event, bundle);\n+    }\n+    \n+    /**\n+     * Formats an event using a given locale.\n+     * @param event the event\n+     * @param locale the locale\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, Locale locale) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID, locale,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = XMLResourceBundle.getXMLBundle(\n+                    EventFormatter.class.getName(),\n+                    locale,\n+                    EventFormatter.class.getClassLoader());\n+        }\n+        return format(event, bundle);\n+    }\n+\n+    private static String format(Event event, ResourceBundle bundle) {\n+        String template = bundle.getString(event.getEventID());\n+        return format(event, processIncludes(template, bundle));\n+    }\n+\n+    private static String processIncludes(String template, ResourceBundle bundle) {\n+        CharSequence input = template;\n+        int replacements;\n+        StringBuffer sb;\n+        do {\n+            sb = new StringBuffer(Math.max(16, input.length()));\n+            replacements = processIncludesInner(input, sb, bundle);\n+            input = sb;\n+        } while (replacements > 0);\n+        String s = sb.toString();\n+        return s;\n+    }\n+\n+    private static int processIncludesInner(CharSequence template, StringBuffer sb,\n+            ResourceBundle bundle) {\n+        int replacements = 0;\n+        Matcher m = INCLUDES_PATTERN.matcher(template);\n+        while (m.find()) {\n+            String include = m.group();\n+            include = include.substring(2, include.length() - 2);\n+            m.appendReplacement(sb, bundle.getString(include));\n+            replacements++;\n+        }\n+        m.appendTail(sb);\n+        return replacements;\n+    }\n+\n+    /**\n+     * Formats the event using a given pattern. The pattern needs to be compatible with\n+     * {@link AdvancedMessageFormat}.\n+     * @param event the event\n+     * @param pattern the pattern (compatible with {@link AdvancedMessageFormat})\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, String pattern) {\n+        AdvancedMessageFormat format = new AdvancedMessageFormat(pattern);\n+        Map params = new java.util.HashMap(event.getParams());\n+        params.put(\"source\", event.getSource());\n+        params.put(\"severity\", event.getSeverity());\n+        return format.format(params);\n+    }\n+    \n+    private static class LookupFieldPart implements Part {\n+        \n+        private String fieldName;\n+        \n+        public LookupFieldPart(String fieldName) {\n+            this.fieldName = fieldName;\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            return getKey(params) != null;\n+        }\n+\n+        public void write(StringBuffer sb, Map params) {\n+            sb.append(defaultBundle.getString(getKey(params)));\n+        }\n+\n+        private String getKey(Map params) {\n+            return (String)params.get(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{\" + this.fieldName + \", lookup}\";\n+        }\n+        \n+    }\n+    \n+    /** PartFactory for lookups. */\n+    public static class LookupFieldPartFactory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new LookupFieldPart(fieldName);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"lookup\";\n+        }\n+        \n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter.java",
                "sha": "56964039b744f058f4901c7dfc078349b26a7d49",
                "status": "added"
            },
            {
                "additions": 101,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter.xml",
                "changes": 101,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.xml",
                "patch": "@@ -0,0 +1,101 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+    \n+    http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">[ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]</message>\n+  <message key=\"rule.markerDescendantOfFlow\">An fo:marker is permitted only as the descendant of an fo:flow.</message>\n+  <message key=\"rule.retrieveMarkerDescendatOfStaticContent\">An fo:retrieve-marker is permitted only as the descendant of an fo:static-content.</message>\n+  <message key=\"rule.bidiOverrideContent\">An fo:bidi-override that is a descendant of an fo:leader or of the fo:inline child of an fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.inlineContent\">An fo:inline that is a descendant of an fo:leader or fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.childOfSPM\">The element must be a child of fo:simple-page-master.</message>\n+  <message key=\"rule.childOfDeclarations\">The element must be a child of fo:declarations.</message>\n+  <message key=\"rule.childOfSPMorDeclarations\">The element must be a child of fo:declarations or fo:simple-page-master.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">For \"{elementName}\", only one \"{offendingNode}\" may be declared.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nodeOutOfOrder\">For \"{elementName}\", \"{tooLateNode}\" must be declared before \"{tooEarlyNode}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidChild\">\"{offendingNode}\" is not a valid child element of \"{elementName}\"![ {ruleViolated,lookup}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingChildElement\">\"{elementName}\" is missing child elements.[\n+Required content model: {contentModel}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Element \"{elementName}\" is missing required property \"{propertyName}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.idNotUnique\">Property ID \"{id}\" (found on \"{elementName}\") previously used; ID values must be unique within a document!{severity,equals,EventSeverity:FATAL,,\n+Any reference to it will be considered a reference to the first occurrence in the document.}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotInitialChild\">fo:marker must be an initial child: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotUniqueForSameParent\">fo:marker \"marker-class-name\" must be unique for same parent: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidProperty\">Invalid property encountered on \"{elementName}\": {attr}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidPropertyValue\">Invalid property value encountered in {propName}=\"{propValue}\"[: {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unimplementedFeature\">The following feature isn't implemented by Apache FOP, yet: {feature} (on {elementName}){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingLinkDestination\">Missing attribute on {elementName}: Either external-destination or internal-destination must be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerCloningFailed\">Unable to clone subtree of fo:marker (marker-class-name=\"{markerClassName}\") for fo:retrieve-marker.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.colorProfileNameNotUnique\">Duplicate color profile profile name: {name}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.regionNameMappedToMultipleRegionClasses\">Region-name (\"{regionName}\") is being mapped to multiple region-classes ({defaultRegionClass1} and {defaultRegionClass2}).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNameNotUnique\">The page master name (\"{name}\") must be unique across page-masters and page-sequence-masters.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.duplicateFlowNameInPageSequence\">Duplicate flow-name \"{flowName}\" found within {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.flowNameNotMapped\">The flow-name \"{flowName}\" on {elementName} could not be mapped to a region-name in the layout-master-set.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNotFound\">The master-reference \"{masterReference}\" on {elementName} matches no simple-page-master or page-sequence-master.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.illegalRegionName\">The region-name \"{regionName}\" for {elementName} is not permitted.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nonZeroBorderPaddingOnRegion\">Border and padding for {elementName} \"{regionName}\" must be '0' (See 6.4.13 in XSL 1.0).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.columnCountErrorOnRegionBodyOverflowScroll\">If overflow property is set to \"scroll\" on {elementName}, a column-count other than \"1\" may not be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidFORoot\">First element must be the fo:root formatting object. Found {elementName} instead. Please make sure you're producing a valid XSL-FO document.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.emptyDocument\">Document is empty (something might be wrong with your XSLT stylesheet).</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unknownFormattingObject\">Unknown formatting object \"{offendingNode}\" encountered (a child of {elementName}}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.nonAutoBPDOnTable\">Only a value of \"auto\" for block-progression-dimension has a well-specified behavior on fo:table. Falling back to \"auto\".{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noTablePaddingWithCollapsingBorderModel\">In collapsing border model a table does not have padding (see http://www.w3.org/TR/REC-CSS2/tables.html#collapsing-borders), but a non-zero value for padding was found. The padding will be ignored.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noMixRowsAndCells\">Either fo:table-rows or fo:table-cells may be children of an {elementName} but not both.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.footerOrderCannotRecover\">This table uses the collapsing border model. In order to resolve borders in an efficient way the table-footer must be known before any table-body is parsed. Either put the footer at the correct place or switch to the separate border model.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.startEndRowUnderTableRowWarning\">starts-row/ends-row for fo:table-cells non-applicable for children of an fo:table-row.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.tooManyCells\">The column-number or number of cells in the row overflows the number of fo:table-columns specified for the table.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.valueMustBeBiggerGtEqOne\">{propName} must be 1 or bigger, but got {actualValue}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.warnImplicitColumns\">table-layout=\\\"fixed\\\" and column-width unspecified =&gt; falling back to proportional-column-width(1){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.paddingNotApplicable\">padding-* properties are not applicable to {elementName}, but a non-zero value for padding was found.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.cellOverlap\">{elementName} overlaps in column {column}.<!-- no locator here, exception will be wrapped --></message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.breakIgnoredDueToRowSpanning\">{breakBefore,if,break-before,break-after} ignored on {elementName} because of row spanning in progress (See XSL 1.1, {breakBefore,if,7.20.2,7.20.1}){{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageNotFound\">Image not found.[ URI: {uri}.]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageError\">Image not available.[ URI: {uri}.] Reason:[ {reason}][ {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageIOError\">I/O error while loading image.[ URI: {uri}.][ Reason: {ioe}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.ifoNoIntrinsicSize\">The intrinsic dimensions of an instream-foreign-object could not be determined.{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.uriError\">Error while handling URI: {uri}. Reason: {e}{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLProcessingError\">Some XML content will be ignored. Could not render XML in namespace \"{namespaceURI}\".[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLNoHandler\">Some XML content will be ignored. No handler defined for XML with namespace \"{namespaceURI}\".</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageWritingError\">Error while writing an image to the target file.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.cannotDeleteTempFile\">Temporary file could not be deleted: {tempFile}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.leaderWithoutContent\">fo:leader is set to \"use-content\" but has no content.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.lineOverflows\">Line {line} of a paragraph overflows the available area by {overflowLength,choice,50000#{overflowLength} millipoints|50000&lt;more than 50 points}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.rowTooTall\">The contents of table-row {row} are taller than they should be (there is a block-progression-dimension or height constraint on the indicated row). Due to its contents the row grows to {effCellBPD} millipoints, but the row shouldn't get any taller than {maxCellBPD} millipoints.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.tableFixedAutoWidthNotSupported\">table-layout=\"fixed\" and width=\"auto\", but auto-layout not supported =&gt; assuming width=\"100%\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.objectTooWide\">The extent in inline-progression-direction (width) of a {elementName} is bigger than the available space ({effIPD}mpt &gt; {maxIPD}mpt).{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.overconstrainedAdjustEndIndent\">Adjusting end-indent based on overconstrained geometry rules for {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.viewportOverflow\">Content overflows the viewport of an {elementName} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.regionOverflow\">Content overflows the viewport of the {elementName} on page {page} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.flowNotMappingToRegionBody\">Flow \"{flowName}\" does not map to the region-body in page-master \"{masterName}\". FOP presently does not support this.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.pageSequenceMasterExhausted\">Subsequences exhausted in page-sequence-master \"{pageSequenceMasterName}\", {canRecover,if,using previous subsequence,cannot recover}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.missingSubsequencesInPageSequenceMaster\">No subsequences in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.noMatchingPageMaster\">No simple-page-master matching \"{pageMasterName}\" in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.error\">SVG error: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.alert\">SVG alert: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.info\">SVG info: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgNotBuilt\">SVG graphic could not be built. Reason: {e}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgRenderingError\">SVG graphic could not be rendered. Reason: {e}</message>\n+  <message key=\"org.apache.fop.render.RendererEventProducer.ioError\">I/O error while writing to target file.[ Reason: {ioe}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReference\">{type}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReferenceOnPage\">Page {page}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageLoadError\">Error while deserializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageSaveError\">Error while serializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageRenderingError\">Error while rendering page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontSubstituted\">Font \"{requested}\" not found. Substituting with \"{effective}\".</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontLoadingErrorAtAutoDetection\">Unable to load font file: {fontURL}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.glyphNotAvailable\">Glyph \"{ch}\" (0x{ch,hex}[, {ch,glyph-name}]) not available in font \"{fontName}\".</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter.xml",
                "sha": "f17da1161ded934f992b2df9dd6c5270783e06d4",
                "status": "added"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter_de.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter_de.xml",
                "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+    Licensed to the Apache Software Foundation (ASF) under one or more\r\n+    contributor license agreements.  See the NOTICE file distributed with\r\n+    this work for additional information regarding copyright ownership.\r\n+    The ASF licenses this file to You under the Apache License, Version 2.0\r\n+    (the \"License\"); you may not use this file except in compliance with\r\n+    the License.  You may obtain a copy of the License at\r\n+    \r\n+    http://www.apache.org/licenses/LICENSE-2.0\r\n+    \r\n+    Unless required by applicable law or agreed to in writing, software\r\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+    See the License for the specific language governing permissions and\r\n+    limitations under the License.\r\n+-->\r\n+<!-- $Id$ -->\r\n+<catalogue xml:lang=\"de\">\r\n+  <message key=\"locator\">[ (Siehe Position {loc})| (Siehe {#gatherContextInfo})| (Keine Kontextinformationen verf\u00fcgbar)]</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">In \"{elementName}\" darf nur ein einziges \"{offendingNode}\" vorkommen!{{locator}}</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Dem Element \"{elementName}\" fehlt ein verlangtes Property \"{propertyName}\"!{{locator}}</message>\r\n+</catalogue>\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "sha": "c65d24f7370e7dc43bd580b00a38353dd7d849eb",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventListener.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventListener.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventListener.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This interface is implemented by clients who want to listen for events.\n+ */\n+public interface EventListener extends java.util.EventListener {\n+\n+    /**\n+     * This method is called for each event that is generated. With the event's ID it is possible\n+     * to react to certain events. Events can also simply be recorded and presented to a user.\n+     * It is possible to throw an (unchecked) exception if the processing needs to be aborted\n+     * because some special event occured. This way the client can configure the behaviour of\n+     * the observed application.\n+     * @param event the event\n+     */\n+    void processEvent(Event event);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventListener.java",
                "sha": "f8293aed926384e0170e2da51e0b0d3d0a957fa7",
                "status": "added"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventProducer.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventProducer.java",
                "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This is a marker interface which all event producer interfaces need to extend. These interfaces\n+ * must agree to the following convention:\n+ * <ul>\n+ *   <li>The first parameter of each method must be: <code>Object source</code>\n+ * </ul>\n+ */\n+public interface EventProducer {\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/EventProducer.java",
                "sha": "88da771a49dfd6531476c8ed95526ab6d9f8e6ce",
                "status": "added"
            },
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventListenerProxy.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.model.EventSeverity;\n+import org.apache.fop.fo.FOValidationEventProducer;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n+\n+/**\n+ * EventListener proxy that inspects all events and adjusts severity levels where necessary.\n+ * For validation events, it reacts on each event based on the strict validation setting in\n+ * the user agent.\n+ * For layout events, it reduces the default severity level if FOP signals that it can recover\n+ * from the event. \n+ */\n+public class FOPEventListenerProxy implements EventListener {\n+\n+    private static final String FOVALIDATION_EVENT_ID_PREFIX\n+                = FOValidationEventProducer.class.getName();\n+    \n+    private static final String BLOCK_LEVEL_EVENT_ID_PREFIX\n+                = BlockLevelEventProducer.class.getName();\n+\n+    private EventListener delegate;\n+    private FOUserAgent userAgent;\n+    \n+    /**\n+     * Main constructor.\n+     * @param delegate the event listener to delegate events to \n+     * @param userAgent the FO user agent\n+     */\n+    public FOPEventListenerProxy(EventListener delegate, FOUserAgent userAgent) {\n+        this.delegate = delegate;\n+        this.userAgent = userAgent;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        if (event.getEventID().startsWith(FOVALIDATION_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover) && !userAgent.validateStrictly()) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        } else if (event.getEventID().startsWith(BLOCK_LEVEL_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover)) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        }\n+        this.delegate.processEvent(event);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "sha": "d4c237844759ff45f9f75356b76971519d24216a",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventModelFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Factory for FOP's main event model.\n+ */\n+public class FOPEventModelFactory extends AbstractEventModelFactory {\n+\n+    private static final String EVENT_MODEL_FILENAME = \"event-model.xml\";\n+\n+    /** {@inheritDoc} */\n+    public EventModel createEventModel() {\n+        return loadModel(getClass(), EVENT_MODEL_FILENAME);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "sha": "5a75042fa5370d5ef63cecf0f9199602964ebf9e",
                "status": "added"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/LoggingEventListener.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/LoggingEventListener.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/LoggingEventListener.java",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * EventListener implementation that redirects events to Commons Logging. The events are\n+ * converted to localized messages.\n+ */\n+public class LoggingEventListener implements EventListener {\n+\n+    /** Default logger instance */\n+    private static Log defaultLog = LogFactory.getLog(LoggingEventListener.class);\n+    \n+    private Log log;\n+    private boolean skipFatal;\n+    \n+    /**\n+     * Creates an instance logging to the default log category of this class.\n+     */\n+    public LoggingEventListener() {\n+        this(defaultLog);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger. Events with fatal severity level will be\n+     * skipped.\n+     * @param log the target logger\n+     */\n+    public LoggingEventListener(Log log) {\n+        this(log, true);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger.\n+     * @param log the target logger\n+     * @param skipFatal true if events with fatal severity level should be skipped (i.e. not logged)\n+     */\n+    public LoggingEventListener(Log log, boolean skipFatal) {\n+        this.log = log;\n+        this.skipFatal = skipFatal;\n+    }\n+    \n+    /**\n+     * Returns the target logger for this instance.\n+     * @return the target logger\n+     */\n+    public Log getLog() {\n+        return this.log;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            log.info(msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            log.warn(msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            log.error(msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            if (!skipFatal) {\n+                log.fatal(msg);\n+            }\n+        } else {\n+            assert false;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/LoggingEventListener.java",
                "sha": "9ba8ed2dfde171c65b9abae8b4428110fbd0b317",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/PropertyExceptionFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Exception factory for {@link PropertyException}.\n+ */\n+public class PropertyExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        PropertyException ex = new PropertyException(msg);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return PropertyException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "sha": "667c4a16e085fa23b95d8bee2e84b6d3b3c232c2",
                "status": "added"
            },
            {
                "additions": 136,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "changes": 136,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ResourceEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ResourceEventProducer.java",
                "patch": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+\n+import org.w3c.dom.Document;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.image.loader.ImageException;\n+\n+/**\n+ * Event producer interface for resource events (missing images, fonts etc.).\n+ */\n+public interface ResourceEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the requested event producer\n+         */\n+        public static ResourceEventProducer get(EventBroadcaster broadcaster) {\n+            return (ResourceEventProducer)broadcaster.getEventProducerFor(\n+                    ResourceEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Image not found.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param fnfe the \"file not found\" exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageNotFound(Object source, String uri, FileNotFoundException fnfe, Locator loc);\n+    \n+    /**\n+     * Error while processing image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the image exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageError(Object source, String uri, ImageException e, Locator loc);\n+    \n+    /**\n+     * I/O error while loading an image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param ioe the I/O exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageIOError(Object source, String uri, IOException ioe, Locator loc);\n+\n+    /**\n+     * Error while writing/serializing an image to an output format.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void imageWritingError(Object source, Exception e);\n+\n+    /**\n+     * Error while handling a URI.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the original exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void uriError(Object source, String uri, Exception e, Locator loc);\n+\n+    /**\n+     * Intrinsic size of fo:instream-foreign-object could not be determined.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void ifoNoIntrinsicSize(Object source, Locator loc);\n+    \n+    /**\n+     * Error processing foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLProcessingError(Object source, Document doc, String namespaceURI, Exception e);\n+\n+    /**\n+     * No handler for foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLNoHandler(Object source, Document doc, String namespaceURI);\n+    \n+    /**\n+     * Cannot delete a temporary file.\n+     * @param source the event source\n+     * @param tempFile the temporary file\n+     * @event.severity ERROR\n+     */\n+    void cannotDeleteTempFile(Object source, File tempFile);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "sha": "21da4f1d73185a753f17b0979a15d985abc3f28b",
                "status": "added"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+\n+/**\n+ * Exception factory for {@link UnsupportedOperationException}.\n+ */\n+public class UnsupportedOperationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        UnsupportedOperationException ex = new UnsupportedOperationException(msg);\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return UnsupportedOperationException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "sha": "06ce8dd254116e14fb0475ee4aac4d39b8c87613",
                "status": "added"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ValidationExceptionFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.ValidationException;\n+\n+/**\n+ * Exception factory for {@link ValidationException}.\n+ */\n+public class ValidationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        Locator loc = (Locator)event.getParam(\"loc\");\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        ValidationException ex = new ValidationException(msg, loc);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return ValidationException.class;\n+    }\n+    \n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "sha": "9dba84007d63e6a1356264def9db817f1878fd62",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.InputStream;\n+import java.util.MissingResourceException;\n+\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+\n+/**\n+ * This interface is used to instantiate (load, parse) event models.\n+ */\n+public abstract class AbstractEventModelFactory implements EventModelFactory {\n+\n+    /**\n+     * Loads an event model and returns its instance.\n+     * @param resourceBaseClass base class to use for loading resources\n+     * @param resourceName the resource name pointing to the event model to be loaded\n+     * @return the newly loaded event model.\n+     */\n+    public EventModel loadModel(Class resourceBaseClass, String resourceName) {\n+        InputStream in = resourceBaseClass.getResourceAsStream(resourceName);\n+        if (in == null) {\n+            throw new MissingResourceException(\n+                    \"File \" + resourceName + \" not found\",\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        }\n+        try {\n+            return EventModelParser.parse(new StreamSource(in));\n+        } catch (TransformerException e) {\n+            throw new MissingResourceException(\n+                    \"Error reading \" + resourceName + \": \" + e.getMessage(),\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        } finally {\n+            IOUtils.closeQuietly(in);\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "sha": "ee980f34ee0a2a854507fc17eebc1fce400d1d1e",
                "status": "added"
            },
            {
                "additions": 198,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "changes": 198,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventMethodModel.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventMethodModel.java",
                "patch": "@@ -0,0 +1,198 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents an event method. Each method in an event producer interface will result in one\n+ * instance of <code>EventMethodModel</code>.\n+ */\n+public class EventMethodModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = -7548882973341444354L;\n+    \n+    private String methodName;\n+    private EventSeverity severity;\n+    private List params = new java.util.ArrayList();\n+    private String exceptionClass;\n+    \n+    /**\n+     * Creates an new instance.\n+     * @param methodName the event method's name\n+     * @param severity the event severity\n+     */\n+    public EventMethodModel(String methodName, EventSeverity severity) {\n+        this.methodName = methodName;\n+        this.severity = severity;\n+    }\n+    \n+    /**\n+     * Adds a method parameter.\n+     * @param param the method parameter\n+     */\n+    public void addParameter(Parameter param) {\n+        this.params.add(param);\n+    }\n+    \n+    /**\n+     * Adds a method parameter.\n+     * @param type the type of the parameter\n+     * @param name the name of the parameter\n+     * @return the resulting Parameter instance\n+     */\n+    public Parameter addParameter(Class type, String name) {\n+        Parameter param = new Parameter(type, name); \n+        addParameter(param);\n+        return param;\n+    }\n+    \n+    /**\n+     * Sets the event method name.\n+     * @param name the event name\n+     */\n+    public void setMethodName(String name) {\n+        this.methodName = name;\n+    }\n+    \n+    /**\n+     * Returns the event method name\n+     * @return the event name\n+     */\n+    public String getMethodName() {\n+        return this.methodName;\n+    }\n+    \n+    /**\n+     * Sets the event's severity level.\n+     * @param severity the severity\n+     */\n+    public void setSeverity(EventSeverity severity) {\n+        this.severity = severity;\n+    }\n+    \n+    /**\n+     * Returns the event's severity level.\n+     * @return the severity\n+     */\n+    public EventSeverity getSeverity() {\n+        return this.severity;\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable list of parameters for this event method.\n+     * @return the list of parameters\n+     */\n+    public List getParameters() {\n+        return Collections.unmodifiableList(this.params);\n+    }\n+    \n+    /**\n+     * Sets the primary exception class for this event method. Note: Not all event methods throw\n+     * exceptions!\n+     * @param exceptionClass the exception class\n+     */\n+    public void setExceptionClass(String exceptionClass) {\n+        this.exceptionClass = exceptionClass;\n+    }\n+    \n+    /**\n+     * Returns the primary exception class for this event method. This method returns null if\n+     * the event is only informational or just a warning.\n+     * @return the primary exception class or null\n+     */\n+    public String getExceptionClass() {\n+        return this.exceptionClass;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getMethodName());\n+        atts.addAttribute(null, \"severity\", \"severity\", \"CDATA\", getSeverity().getName());\n+        if (getExceptionClass() != null) {\n+            atts.addAttribute(null, \"exception\", \"exception\", \"CDATA\", getExceptionClass());\n+        }\n+        String elName = \"method\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = this.params.iterator();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+    \n+    /**\n+     * Represents an event parameter.\n+     */\n+    public static class Parameter implements Serializable, XMLizable {\n+        \n+        private static final long serialVersionUID = 6062500277953887099L;\n+        \n+        private Class type;\n+        private String name;\n+        \n+        /**\n+         * Creates a new event parameter.\n+         * @param type the parameter type\n+         * @param name the parameter name\n+         */\n+        public Parameter(Class type, String name) {\n+            this.type = type;\n+            this.name = name;\n+        }\n+        \n+        /**\n+         * Returns the parameter type.\n+         * @return the parameter type\n+         */\n+        public Class getType() {\n+            return this.type;\n+        }\n+        \n+        /**\n+         * Returns the parameter name.\n+         * @return the parameter name\n+         */\n+        public String getName() {\n+            return this.name;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void toSAX(ContentHandler handler) throws SAXException {\n+            AttributesImpl atts = new AttributesImpl();\n+            atts.addAttribute(null, \"type\", \"type\", \"CDATA\", getType().getName());\n+            atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getName());\n+            String elName = \"parameter\";\n+            handler.startElement(null, elName, elName, atts);\n+            handler.endElement(null, elName, elName);\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "sha": "930cda53d62538ab96e5a2f88a336bc58991d062",
                "status": "added"
            },
            {
                "additions": 135,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModel.java",
                "changes": 135,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModel.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModel.java",
                "patch": "@@ -0,0 +1,135 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerConfigurationException;\n+import javax.xml.transform.TransformerFactoryConfigurationError;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.sax.TransformerHandler;\n+import javax.xml.transform.stream.StreamResult;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents a whole event model that supports multiple event producers.\n+ */\n+public class EventModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = 7468592614934605082L;\n+    \n+    private Map producers = new java.util.LinkedHashMap();\n+    \n+    /**\n+     * Creates a new, empty event model\n+     */\n+    public EventModel() {\n+    }\n+    \n+    /**\n+     * Adds the model of an event producer to the event model.\n+     * @param producer the event producer model\n+     */\n+    public void addProducer(EventProducerModel producer) {\n+        this.producers.put(producer.getInterfaceName(), producer);\n+    }\n+    \n+    /**\n+     * Returns an iterator over the contained event producer models.\n+     * @return an iterator (Iterator&lt;EventProducerModel&gt;)\n+     */\n+    public Iterator getProducers() {\n+        return this.producers.values().iterator();\n+    }\n+\n+    /**\n+     * Returns the model of an event producer with the given interface name.\n+     * @param interfaceName the fully qualified name of the event producer\n+     * @return the model instance for the event producer (or null if it wasn't found)\n+     */\n+    public EventProducerModel getProducer(String interfaceName) {\n+        return (EventProducerModel)this.producers.get(interfaceName);\n+    }\n+    \n+    /**\n+     * Returns the model of an event producer with the given interface.\n+     * @param clazz the interface of the event producer\n+     * @return the model instance for the event producer (or null if it wasn't found)\n+     */\n+    public EventProducerModel getProducer(Class clazz) {\n+        return getProducer(clazz.getName());\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        String elName = \"event-model\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = getProducers();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+\n+    private void writeXMLizable(XMLizable object, File outputFile) throws IOException {\n+        Result res = new StreamResult(outputFile);\n+        \n+        try {\n+            SAXTransformerFactory tFactory\n+                = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+            TransformerHandler handler = tFactory.newTransformerHandler();\n+            Transformer transformer = handler.getTransformer();\n+            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n+            handler.setResult(res);\n+            handler.startDocument();\n+            object.toSAX(handler);\n+            handler.endDocument();\n+        } catch (TransformerConfigurationException e) {\n+            throw new IOException(e.getMessage());\n+        } catch (TransformerFactoryConfigurationError e) {\n+            throw new IOException(e.getMessage());\n+        } catch (SAXException e) {\n+            throw new IOException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Saves this event model to an XML file.\n+     * @param modelFile the target file\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public void saveToXML(File modelFile) throws IOException {\n+        writeXMLizable(this, modelFile);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModel.java",
                "sha": "61e221b3bda72d379c7c1cd4870f454456179f47",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelFactory.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+/**\n+ * This interface is used to instantiate (load, parse) event models.\n+ */\n+public interface EventModelFactory {\n+\n+    /**\n+     * Creates a new EventModel instance.\n+     * @return the new EventModel instance\n+     */\n+    EventModel createEventModel();\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "sha": "cd760501c07d335fa6f03154f83c2881106cc8e8",
                "status": "added"
            },
            {
                "additions": 140,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModelParser.java",
                "changes": 140,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelParser.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelParser.java",
                "patch": "@@ -0,0 +1,140 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.util.Stack;\n+\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.util.DefaultErrorListener;\n+\n+/**\n+ * This is a parser for the event model XML.\n+ */\n+public class EventModelParser {\n+\n+    /** Logger instance */\n+    protected static Log log = LogFactory.getLog(EventModelParser.class);\n+\n+    private static SAXTransformerFactory tFactory \n+        = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+\n+    /**\n+     * Parses an event model file into an EventModel instance.\n+     * @param src the Source instance pointing to the XML file\n+     * @return the created event model structure\n+     * @throws TransformerException if an error occurs while parsing the XML file\n+     */\n+    public static EventModel parse(Source src) \n+            throws TransformerException {\n+        Transformer transformer = tFactory.newTransformer();\n+        transformer.setErrorListener(new DefaultErrorListener(log));\n+        \n+        EventModel model = new EventModel();\n+        SAXResult res = new SAXResult(getContentHandler(model));\n+\n+        transformer.transform(src, res);\n+        return model;\n+    }\n+\n+    /**\n+     * Creates a new ContentHandler instance that you can send the event model XML to. The parsed\n+     * content is accumulated in the model structure.\n+     * @param model the EventModel\n+     * @return the ContentHandler instance to receive the SAX stream from the XML file\n+     */\n+    public static ContentHandler getContentHandler(EventModel model) {\n+        return new Handler(model);\n+    }\n+\n+    private static class Handler extends DefaultHandler {\n+\n+        private EventModel model;\n+        private Stack objectStack = new Stack();\n+\n+        public Handler(EventModel model) {\n+            this.model = model;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void startElement(String uri, String localName, String qName, Attributes attributes)\n+                    throws SAXException {\n+            try {\n+                if (\"event-model\".equals(localName)) {\n+                    if (objectStack.size() > 0) {\n+                        throw new SAXException(\"event-model must be the root element\");\n+                    }\n+                    objectStack.push(model);\n+                } else if (\"producer\".equals(localName)) {\n+                    EventProducerModel producer = new EventProducerModel(\n+                            attributes.getValue(\"name\"));\n+                    EventModel parent = (EventModel)objectStack.peek();\n+                    parent.addProducer(producer);\n+                    objectStack.push(producer);\n+                } else if (\"method\".equals(localName)) {\n+                    EventSeverity severity = EventSeverity.valueOf(attributes.getValue(\"severity\"));\n+                    String ex = attributes.getValue(\"exception\");\n+                    EventMethodModel method = new EventMethodModel(\n+                            attributes.getValue(\"name\"), severity);\n+                    if (ex != null && ex.length() > 0) {\n+                        method.setExceptionClass(ex);\n+                    }\n+                    EventProducerModel parent = (EventProducerModel)objectStack.peek();\n+                    parent.addMethod(method);\n+                    objectStack.push(method);\n+                } else if (\"parameter\".equals(localName)) {\n+                    String className = attributes.getValue(\"type\");\n+                    Class type;\n+                    try {\n+                        type = Class.forName(className);\n+                    } catch (ClassNotFoundException e) {\n+                        throw new SAXException(\"Could not find Class for: \" + className, e);\n+                    }\n+                    String name = attributes.getValue(\"name\");\n+                    EventMethodModel parent = (EventMethodModel)objectStack.peek();\n+                    objectStack.push(parent.addParameter(type, name));\n+                } else {\n+                    throw new SAXException(\"Invalid element: \" + qName);\n+                }\n+            } catch (ClassCastException cce) {\n+                throw new SAXException(\"XML format error: \" + qName, cce);\n+            }\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void endElement(String uri, String localName, String qName) throws SAXException {\n+            objectStack.pop();\n+        }\n+\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventModelParser.java",
                "sha": "600e495c5ff15cad82f198b8c44be5df985960fd",
                "status": "added"
            },
            {
                "additions": 105,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "changes": 105,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventProducerModel.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventProducerModel.java",
                "patch": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.Serializable;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents the model of an event producer with multiple event methods.\n+ */\n+public class EventProducerModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = 122267104123721902L;\n+    \n+    private String interfaceName;\n+    private Map methods = new java.util.LinkedHashMap();\n+    \n+    /**\n+     * Creates a new instance.\n+     * @param interfaceName the fully qualified interface name of the event producer \n+     */\n+    public EventProducerModel(String interfaceName) {\n+        this.interfaceName = interfaceName;\n+    }\n+    \n+    /**\n+     * Returns the fully qualified interface name of the event producer.\n+     * @return the fully qualified interface name\n+     */\n+    public String getInterfaceName() {\n+        return this.interfaceName;\n+    }\n+    \n+    /**\n+     * Sets the fully qualified interface name of the event producer.\n+     * @param name the fully qualified interface name\n+     */\n+    public void setInterfaceName(String name) {\n+        this.interfaceName = name;\n+    }\n+    \n+    /**\n+     * Adds a model instance of an event method.\n+     * @param method the event method model\n+     */\n+    public void addMethod(EventMethodModel method) {\n+        this.methods.put(method.getMethodName(), method);\n+    }\n+    \n+    /**\n+     * Returns the model instance of an event method for the given method name.\n+     * @param methodName the method name\n+     * @return the model instance (or null if no method with the given name exists)\n+     */\n+    public EventMethodModel getMethod(String methodName) {\n+        return (EventMethodModel)this.methods.get(methodName);\n+    }\n+    \n+    /**\n+     * Returns an iterator over the contained event producer methods.\n+     * @return an iterator (Iterator&lt;EventMethodModel&gt;)\n+     */\n+    public Iterator getMethods() {\n+        return this.methods.values().iterator();\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getInterfaceName());\n+        String elName = \"producer\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = getMethods();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "sha": "938609cd9b8d92f550c9677a38f39d0ef2201447",
                "status": "added"
            },
            {
                "additions": 82,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventSeverity.java",
                "changes": 82,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventSeverity.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventSeverity.java",
                "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.ObjectStreamException;\n+import java.io.Serializable;\n+\n+/** Enumeration class for event severities. */\n+public final class EventSeverity implements Serializable {\n+\n+    private static final long serialVersionUID = 4108175215810759243L;\n+    \n+    /** info level */\n+    public static final EventSeverity INFO = new EventSeverity(\"INFO\");\n+    /** warning level */\n+    public static final EventSeverity WARN = new EventSeverity(\"WARN\");\n+    /** error level */\n+    public static final EventSeverity ERROR = new EventSeverity(\"ERROR\");\n+    /** fatal error */\n+    public static final EventSeverity FATAL = new EventSeverity(\"FATAL\");\n+    \n+    private String name;\n+\n+    /**\n+     * Constructor to add a new named item.\n+     * @param name Name of the item.\n+     */\n+    private EventSeverity(String name) {\n+        this.name = name;\n+    }\n+\n+    /** @return the name of the enumeration */\n+    public String getName() {\n+        return this.name;\n+    }\n+    \n+    /**\n+     * Returns the enumeration/singleton object based on its name.\n+     * @param name the name of the enumeration value\n+     * @return the enumeration object\n+     */\n+    public static EventSeverity valueOf(String name) {\n+        if (INFO.getName().equalsIgnoreCase(name)) {\n+            return INFO;\n+        } else if (WARN.getName().equalsIgnoreCase(name)) {\n+            return WARN;\n+        } else if (ERROR.getName().equalsIgnoreCase(name)) {\n+            return ERROR;\n+        } else if (FATAL.getName().equalsIgnoreCase(name)) {\n+            return FATAL;\n+        } else {\n+            throw new IllegalArgumentException(\"Illegal value for enumeration: \" + name);\n+        }\n+    }\n+    \n+    private Object readResolve() throws ObjectStreamException {\n+        return valueOf(getName());\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"EventSeverity:\" + name;\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/events/model/EventSeverity.java",
                "sha": "d37c53c1e1e31a802af2b6b6286558299897c80a",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/ElementMapping.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMapping.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/ElementMapping.java",
                "patch": "@@ -24,9 +24,10 @@\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n \n-import org.apache.fop.util.QName;\n import org.w3c.dom.DOMImplementation;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n /**\n  * Abstract base class for Element Mappings (including FO Element Mappings)\n  * which provide the framework of valid elements and attibutes for a given",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/ElementMapping.java",
                "sha": "502fb07b8b167502ff656fd72a2a158c7fed325d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMappingRegistry.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "patch": "@@ -23,6 +23,7 @@\n import java.util.Map;\n \n import org.w3c.dom.DOMImplementation;\n+\n import org.xml.sax.Locator;\n \n import org.apache.commons.logging.Log;\n@@ -144,7 +145,6 @@ public Maker findFOMaker(String namespaceURI, String localName, Locator locator)\n                       + \"No element mapping definition found for \"\n                       + FONode.getNodeString(namespaceURI, localName), locator);\n             } else {\n-                log.warn(\"Unknown formatting object \" + namespaceURI + \"^\" + localName);\n                 fobjMaker = new UnknownXMLObj.Maker(namespaceURI);\n             }\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "sha": "abc4ec8349cdb07924a6fedf2591c8538d2ee8e4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOElementMapping.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOElementMapping.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/FOElementMapping.java",
                "patch": "@@ -22,7 +22,7 @@\n // Java\n import java.util.HashMap;\n \n-import org.apache.fop.util.QName;\n+import org.apache.xmlgraphics.util.QName;\n \n /**\n  * Element mapping class for all XSL-FO elements.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOElementMapping.java",
                "sha": "62721afebc6df9515b3d260c56c73bc0d02afe3a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOEventHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOEventHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOEventHandler.java",
                "patch": "@@ -48,6 +48,7 @@\n import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.pagination.Flow;\n import org.apache.fop.fo.pagination.PageSequence;\n+import org.apache.fop.fonts.FontEventAdapter;\n import org.apache.fop.fonts.FontInfo;\n \n /**\n@@ -101,6 +102,7 @@\n     public FOEventHandler(FOUserAgent foUserAgent) {\n         this.foUserAgent = foUserAgent;\n         this.fontInfo = new FontInfo();\n+        this.fontInfo.setEventListener(new FontEventAdapter(foUserAgent.getEventBroadcaster()));\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOEventHandler.java",
                "sha": "5a9a5bb9df36a2cbeecda8068bfc6b8bd5db6197",
                "status": "modified"
            },
            {
                "additions": 126,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FONode.java",
                "changes": 172,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FONode.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 46,
                "filename": "src/java/org/apache/fop/fo/FONode.java",
                "patch": "@@ -21,6 +21,8 @@\n \n // Java\n import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n \n import org.xml.sax.Attributes;\n import org.xml.sax.Locator;\n@@ -29,6 +31,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n@@ -37,6 +41,7 @@\n import org.apache.fop.fo.pagination.Root;\n import org.apache.fop.util.CharUtilities;\n import org.apache.fop.util.ContentHandlerFactory;\n+import org.apache.fop.util.text.AdvancedMessageFormat.Function;\n \n /**\n  * Base class for nodes in the XML tree\n@@ -143,6 +148,10 @@ public FOEventHandler getFOEventHandler() {\n         return parent.getFOEventHandler();\n     }\n     \n+    /**\n+     * Indicates whether this node is a child of an fo:marker.\n+     * @return true if this node is a child of an fo:marker\n+     */\n     protected boolean inMarker() {\n         return getFOEventHandler().inMarker();\n     }\n@@ -239,7 +248,7 @@ protected static void validateChildNode(\n      * @param start starting array element to add\n      * @param end ending array element to add\n      * @param pList currently applicable PropertyList \n-     * @param locator location in fo source file.\n+     * @param locator location in the XSL-FO source file.\n      * @throws FOPException if there's a problem during processing\n      */\n     protected void addCharacters(char[] data, int start, int end,\n@@ -343,54 +352,50 @@ public static String getNodeString(String namespaceURI, String localName) {\n     }\n \n     /**\n-     * Helper function to standardize property error exceptions\n-     * (e.g., not specifying either an internal- or an external-destination\n-     * property for an FO:link)\n-     * @param problem text to display that indicates the problem\n-     * @throws ValidationException the validation error provoked by the method call\n+     * Returns an instance of the FOValidationEventProducer.\n+     * @return an event producer for FO validation\n      */\n-    protected void attributeError(String problem) \n-                throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName() \n-                + \", \" + problem, locator);\n+    protected FOValidationEventProducer getFOValidationEventProducer() {\n+        return FOValidationEventProducer.Provider.get(\n+                getUserAgent().getEventBroadcaster());\n     }\n-\n+    \n     /**\n-     * Helper function to standardize attribute warnings\n-     * (e.g., currently unsupported properties)\n-     * @param problem text to display that indicates the problem\n+     * Helper function to standardize \"too many\" error exceptions\n+     * (e.g., two fo:declarations within fo:root)\n+     * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param nsURI namespace URI of incoming invalid node\n+     * @param lName local name (i.e., no prefix) of incoming node \n+     * @throws ValidationException the validation error provoked by the method call\n      */\n-    public void attributeWarning(String problem) {\n-        log.warn(warningText(locator) + getName() + \", \" + problem);\n+    protected void tooManyNodesError(Locator loc, String nsURI, String lName) \n+                throws ValidationException {\n+        tooManyNodesError(loc, new QName(nsURI, lName));\n     }\n \n     /**\n      * Helper function to standardize \"too many\" error exceptions\n      * (e.g., two fo:declarations within fo:root)\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n-     * @param nsURI namespace URI of incoming invalid node\n-     * @param lName local name (i.e., no prefix) of incoming node \n+     * @param offendingNode the qualified name of the offending node\n      * @throws ValidationException the validation error provoked by the method call\n      */\n-    protected void tooManyNodesError(Locator loc, String nsURI, String lName) \n+    protected void tooManyNodesError(Locator loc, QName offendingNode) \n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() \n-            + \", only one \" + getNodeString(nsURI, lName) + \" may be declared.\", \n-            loc);\n+        getFOValidationEventProducer().tooManyNodes(this, getName(), offendingNode, loc);\n     }\n \n     /**\n      * Helper function to standardize \"too many\" error exceptions\n      * (e.g., two fo:declarations within fo:root)\n-     * This overrloaded method helps make the caller code better self-documenting\n+     * This overloaded method helps make the caller code better self-documenting\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n      * @param offendingNode incoming node that would cause a duplication.\n      * @throws ValidationException the validation error provoked by the method call\n      */\n     protected void tooManyNodesError(Locator loc, String offendingNode) \n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() \n-            + \", only one \" + offendingNode + \" may be declared.\", loc);\n+        tooManyNodesError(loc, new QName(FO_URI, offendingNode));\n     }\n \n     /**\n@@ -402,9 +407,23 @@ protected void tooManyNodesError(Locator loc, String offendingNode)\n      * @throws ValidationException the validation error provoked by the method call\n      */\n     protected void nodesOutOfOrderError(Locator loc, String tooLateNode, \n-        String tooEarlyNode) throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() + \", \" + tooLateNode \n-            + \" must be declared before \" + tooEarlyNode + \".\", loc);\n+            String tooEarlyNode) throws ValidationException {\n+        nodesOutOfOrderError(loc, tooLateNode, tooEarlyNode, false);\n+    }\n+    \n+    /**\n+     * Helper function to standardize \"out of order\" exceptions\n+     * (e.g., fo:layout-master-set appearing after fo:page-sequence)\n+     * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param tooLateNode string name of node that should be earlier in document\n+     * @param tooEarlyNode string name of node that should be later in document\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    protected void nodesOutOfOrderError(Locator loc, String tooLateNode, \n+            String tooEarlyNode, boolean canRecover) throws ValidationException {\n+        getFOValidationEventProducer().nodeOutOfOrder(this, getName(),\n+                tooLateNode, tooEarlyNode, canRecover, loc);\n     }\n     \n     /**\n@@ -417,24 +436,24 @@ protected void nodesOutOfOrderError(Locator loc, String tooLateNode,\n      */\n     protected void invalidChildError(Locator loc, String nsURI, String lName) \n                 throws ValidationException {\n-        invalidChildError(loc, nsURI, lName, null);\n+        invalidChildError(loc, getName(), nsURI, lName, null);\n     }\n     \n     /**\n      * Helper function to return \"invalid child\" exceptions with more\n      * complex validation rules (i.e., needing more explanation of the problem)\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param parentName the name of the parent element\n      * @param nsURI namespace URI of incoming invalid node\n      * @param lName local name (i.e., no prefix) of incoming node\n-     * @param ruleViolated text explanation of problem\n+     * @param ruleViolated name of the rule violated (used to lookup a resource in a bundle)\n      * @throws ValidationException the validation error provoked by the method call\n      */\n-    protected void invalidChildError(Locator loc, String nsURI, String lName,\n+    protected void invalidChildError(Locator loc, String parentName, String nsURI, String lName,\n                 String ruleViolated)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + getNodeString(nsURI, lName) \n-            + \" is not a valid child element of \" + getName() \n-            + ((ruleViolated != null) ? \": \" + ruleViolated : \".\"), loc);\n+        getFOValidationEventProducer().invalidChild(this, parentName,\n+                new QName(nsURI, lName), ruleViolated, loc);\n     }\n \n     /**\n@@ -446,9 +465,22 @@ protected void invalidChildError(Locator loc, String nsURI, String lName,\n      */\n     protected void missingChildElementError(String contentModel)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName() \n-            + \" is missing child elements. \\nRequired Content Model: \" \n-            + contentModel, locator);\n+        getFOValidationEventProducer().missingChildElement(this, getName(),\n+                contentModel, false, locator);\n+    }\n+\n+    /**\n+     * Helper function to throw an error caused by missing mandatory child elements.\n+     * E.g., fo:layout-master-set not having any page-master child element.\n+     * @param contentModel The XSL Content Model for the fo: object or a similar description \n+     *                     indicating the necessary child elements.\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    protected void missingChildElementError(String contentModel, boolean canRecover)\n+                throws ValidationException {\n+        getFOValidationEventProducer().missingChildElement(this, getName(),\n+                contentModel, canRecover, locator);\n     }\n \n     /**\n@@ -458,8 +490,7 @@ protected void missingChildElementError(String contentModel)\n      */\n     protected void missingPropertyError(String propertyName)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName()\n-            + \" is missing required \\\"\" + propertyName + \"\\\" property.\", locator);\n+        getFOValidationEventProducer().missingProperty(this, getName(), propertyName, locator);\n     }\n \n     /**\n@@ -513,9 +544,10 @@ public static String decorateWithContextInfo(String text, FONode node) {\n     \n     /**\n      * Returns a String containing as much context information as possible about a node. Call\n-     * this methods only in exceptional conditions because this method may perform quite extensive\n+     * this method only in exceptional conditions because this method may perform quite extensive\n      * information gathering inside the FO tree.\n-     * @return a String containing \n+     * @return a String containing context information\n+     * @deprecated Not localized! Should rename getContextInfoAlt() to getContextInfo() when done!\n      */\n     public String getContextInfo() {\n         StringBuffer sb = new StringBuffer();\n@@ -542,6 +574,54 @@ public String getContextInfo() {\n         return sb.toString();\n     }\n     \n+    /**\n+     * Returns a String containing as some context information about a node. It does not take the\n+     * locator into consideration and returns null if no useful context information can be found.\n+     * Call this method only in exceptional conditions because this method may perform quite\n+     * extensive information gathering inside the FO tree. All text returned by this method that\n+     * is not extracted from document content needs to be locale-independent.\n+     * @return a String containing context information\n+     */\n+    protected String getContextInfoAlt() {\n+        String s = gatherContextInfo();\n+        if (s != null) {\n+            StringBuffer sb = new StringBuffer();\n+            if (getLocalName() != null) {\n+                sb.append(getName());\n+                sb.append(\", \");\n+            }\n+            sb.append(\"\\\"\");\n+            sb.append(s);\n+            sb.append(\"\\\"\");\n+            return sb.toString();\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /** Function for AdvancedMessageFormat to retrieve context info from an FONode. */\n+    public static class GatherContextInfoFunction implements Function {\n+\n+        /** {@inheritDoc} */\n+        public Object evaluate(Map params) {\n+            Object obj = params.get(\"source\");\n+            if (obj instanceof PropertyList) {\n+                PropertyList propList = (PropertyList)obj;\n+                obj = propList.getFObj();\n+            }\n+            if (obj instanceof FONode) {\n+                FONode node = (FONode)obj;\n+                return node.getContextInfoAlt();\n+            }\n+            return null;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public Object getName() {\n+            return \"gatherContextInfo\";\n+        }\n+    }\n+    \n     /**\n      * Gathers context information for the getContextInfo() method.\n      * @return the collected context information or null, if none is available\n@@ -687,31 +767,31 @@ protected static void attachSiblings(FONode precedingSibling,\n          * of child nodes\n          * @return  the parent node\n          */\n-        public FObj parentNode();\n+        FObj parentNode();\n         \n         /**\n          * Convenience method with return type of FONode\n          * (should be semantically equivalent to\n          * <code>(FONode) next();</code>)\n          * @return the next node (if any), as a type FONode\n          */\n-        public FONode nextNode();\n+        FONode nextNode();\n         \n         /**\n          * Convenience method with return type of FONode\n          * (should be semantically equivalent to\n          * <code>(FONode) previous();</code>)\n          * @return the previous node (if any), as a type FONode\n          */\n-        public FONode previousNode();\n+        FONode previousNode();\n         \n         /**\n          * Returns the first node in the list, and decreases the index,\n          * so that a subsequent call to hasPrevious() will return false\n          * @return the first node in the list\n          * @throws NoSuchElementException if the list is empty\n          */\n-        public FONode firstNode();\n+        FONode firstNode();\n         \n         /**\n          * Returns the last node in the list, and advances the\n@@ -720,7 +800,7 @@ protected static void attachSiblings(FONode precedingSibling,\n          * @return the last node in the list\n          * @throws NoSuchElementException if the list is empty\n          */\n-        public FONode lastNode();\n+        FONode lastNode();\n \n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FONode.java",
                "sha": "197a2482dec82fdb42b8bc6607ad17fc54d70290",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOText.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOText.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/fo/FOText.java",
                "patch": "@@ -19,11 +19,11 @@\n \n package org.apache.fop.fo;\n \n-// Java\n import java.awt.Color;\n import java.util.NoSuchElementException;\n \n-// FOP\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.flow.Block;\n@@ -34,9 +34,6 @@\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.SpaceProperty;\n \n-// SAX\n-import org.xml.sax.Locator;\n-\n /**\n  * A text node (PCDATA) in the formatting object tree.\n  *\n@@ -396,7 +393,7 @@ private char charTransform(int i) {\n                 return ca[i];\n             }\n         default:\n-            log.warn(\"Invalid text-tranform value: \" + textTransform);\n+            assert false; //should never happen as the property subsystem catches that case\n             return ca[i];\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOText.java",
                "sha": "99d37dba99ddc0268cb906d6fafc9c30cfadef54",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOTreeBuilder.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 27,
                "filename": "src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "patch": "@@ -31,6 +31,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.apps.FormattingResults;\n@@ -130,6 +132,7 @@ public void startDocument() throws SAXException {\n             throw new IllegalStateException(\"FOTreeBuilder (and the Fop class) cannot be reused.\"\n                     + \" Please instantiate a new instance.\");\n         }\n+        \n         used = true;\n         empty = true;\n         rootFObj = null;    // allows FOTreeBuilder to be reused\n@@ -146,8 +149,10 @@ public void startDocument() throws SAXException {\n     public void endDocument() throws SAXException {\n         this.delegate.endDocument();\n         if (this.rootFObj == null && empty) {\n-            throw new ValidationException(\n-                    \"Document is empty (something might be wrong with your XSLT stylesheet).\");\n+            FOValidationEventProducer eventProducer\n+                = FOValidationEventProducer.Provider.get(\n+                    foEventHandler.getUserAgent().getEventBroadcaster());\n+            eventProducer.emptyDocument(this);\n         }\n         rootFObj = null;\n         if (log.isDebugEnabled()) {\n@@ -178,18 +183,6 @@ public void endElement(String uri, String localName, String rawName)\n         }\n     }\n \n-    /**\n-     * Finds the {@link Maker} used to create {@link FONode} objects of a particular type\n-     * \n-     * @param namespaceURI URI for the namespace of the element\n-     * @param localName name of the Element\n-     * @return the ElementMapping.Maker that can create an FO object for this element\n-     * @throws FOPException if a Maker could not be found for a bound namespace.\n-     */\n-    private Maker findFOMaker(String namespaceURI, String localName) throws FOPException {\n-        return elementMappingRegistry.findFOMaker(namespaceURI, localName, locator);\n-    }\n-\n     /** {@inheritDoc} */\n     public void warning(SAXParseException e) {\n         log.warn(e.getLocalizedMessage());\n@@ -258,22 +251,21 @@ public void startElement(String namespaceURI, String localName, String rawName,\n             if (rootFObj == null) {\n                 empty = false;\n                 if (!namespaceURI.equals(FOElementMapping.URI) \n-                    || !localName.equals(\"root\")) {\n-                    throw new ValidationException(\n-                        \"Error: First element must be the fo:root formatting object. \"\n-                        + \"Found \" + FONode.getNodeString(namespaceURI, localName) \n-                        + \" instead.\"\n-                        + \" Please make sure you're producing a valid XSL-FO document.\");\n+                        || !localName.equals(\"root\")) {\n+                    FOValidationEventProducer eventProducer\n+                        = FOValidationEventProducer.Provider.get(\n+                                foEventHandler.getUserAgent().getEventBroadcaster());\n+                    eventProducer.invalidFORoot(this, FONode.getNodeString(namespaceURI, localName),\n+                            getEffectiveLocator());\n                 }\n             } else { // check that incoming node is valid for currentFObj\n-                if (namespaceURI.equals(FOElementMapping.URI)\n-                    || namespaceURI.equals(ExtensionElementMapping.URI)) {\n+                if (currentFObj.getNamespaceURI().equals(FOElementMapping.URI)\n+                    || currentFObj.getNamespaceURI().equals(ExtensionElementMapping.URI)) {\n                     currentFObj.validateChildNode(locator, namespaceURI, localName);\n                 }\n             }\n             \n-            ElementMapping.Maker fobjMaker = \n-                findFOMaker(namespaceURI, localName);\n+            ElementMapping.Maker fobjMaker = findFOMaker(namespaceURI, localName);\n \n             try {\n                 foNode = fobjMaker.make(currentFObj);\n@@ -342,8 +334,7 @@ public void endElement(String uri, String localName, String rawName)\n             if (currentPropertyList != null\n                     && currentPropertyList.getFObj() == currentFObj\n                     && !foEventHandler.inMarker()) {\n-                currentPropertyList = \n-                    currentPropertyList.getParentPropertyList();\n+                currentPropertyList = currentPropertyList.getParentPropertyList();\n             }\n             \n             if (currentFObj.getNameId() == Constants.FO_MARKER) {\n@@ -373,7 +364,29 @@ public void characters(char[] data, int start, int length)\n         /** {@inheritDoc} */\n         public void endDocument() throws SAXException {\n             currentFObj = null;\n-        }        \n+        }\n+        \n+        /**\n+         * Finds the {@link Maker} used to create {@link FONode} objects of a particular type\n+         * \n+         * @param namespaceURI URI for the namespace of the element\n+         * @param localName name of the Element\n+         * @return the ElementMapping.Maker that can create an FO object for this element\n+         * @throws FOPException if a Maker could not be found for a bound namespace.\n+         */\n+        private Maker findFOMaker(String namespaceURI, String localName) throws FOPException {\n+            Maker maker = elementMappingRegistry.findFOMaker(namespaceURI, localName, locator);\n+            if (maker instanceof UnknownXMLObj.Maker) {\n+                FOValidationEventProducer eventProducer\n+                    = FOValidationEventProducer.Provider.get(\n+                        foEventHandler.getUserAgent().getEventBroadcaster());\n+                eventProducer.unknownFormattingObject(this, currentFObj.getName(),\n+                        new QName(namespaceURI, localName),\n+                        getEffectiveLocator());\n+            }\n+            return maker;\n+        }\n+\n     }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "sha": "84abc4b8b48493c3d8aa280917dce2fd33b6bf79",
                "status": "modified"
            },
            {
                "additions": 348,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "changes": 348,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOValidationEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "patch": "@@ -0,0 +1,348 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fo;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Event producer interface for XSL-FO validation messages.\n+ */\n+public interface FOValidationEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static FOValidationEventProducer get(EventBroadcaster broadcaster) {\n+            return (FOValidationEventProducer)broadcaster.getEventProducerFor(\n+                    FOValidationEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Too many child nodes.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call \n+     * @event.severity FATAL\n+     */\n+    void tooManyNodes(Object source, String elementName, QName offendingNode,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * The node order is wrong.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param tooLateNode string name of node that should be earlier in document\n+     * @param tooEarlyNode string name of node that should be later in document\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    void nodeOutOfOrder(Object source, String elementName,\n+            String tooLateNode, String tooEarlyNode, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * An invalid child was encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param ruleViolated the rule that was violated or null\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    void invalidChild(Object source, String elementName, QName offendingNode, String ruleViolated,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A required child element is missing.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param contentModel the expected content model\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingChildElement(Object source, String elementName,\n+            String contentModel, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An element is missing a required property.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param propertyName the name of the missing property\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingProperty(Object source, String elementName, String propertyName,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * An id was used twice in a document.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param id the id that was reused\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void idNotUnique(Object source, String elementName, String id, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * There are multiple color profiles defined with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param name the duplicate color profile name\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void colorProfileNameNotUnique(Object source, String elementName, String name,\n+            Locator loc);\n+\n+    /**\n+     * There are multiple page masters defined with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param name the duplicate page master name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void masterNameNotUnique(Object source, String elementName, String name,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A marker is not an initial child on a node.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param mcname the marker class name\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerNotInitialChild(Object source, String elementName, String mcname, Locator loc);\n+\n+    /**\n+     * A marker class name is not unique within the same parent.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param mcname the marker class name\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerNotUniqueForSameParent(Object source, String elementName,\n+            String mcname, Locator loc);\n+\n+    /**\n+     * An invalid property was found.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param attr the invalid attribute\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void invalidProperty(Object source, String elementName, QName attr, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An invalid property value was encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param propName the property name\n+     * @param propValue the property value\n+     * @param e the property exception caused by the invalid value\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void invalidPropertyValue(Object source, String elementName,\n+            String propName, String propValue, PropertyException e,\n+            Locator loc);\n+\n+    /**\n+     * A feature is not supported, yet.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param feature the unsupported feature\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void unimplementedFeature(Object source, String elementName, String feature,\n+            Locator loc);\n+\n+    /**\n+     * Missing internal-/external-destination on basic-link or bookmark.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingLinkDestination(Object source, String elementName, Locator loc)\n+                throws ValidationException;\n+\n+    /**\n+     * Indicates a problem while cloning a marker (ex. due to invalid property values).\n+     * @param source the event source\n+     * @param markerClassName the \"marker-class-name\" of the marker\n+     * @param fe the FOP exception that cause this problem\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerCloningFailed(Object source, String markerClassName, FOPException fe, Locator loc);\n+\n+    /**\n+     * A region name is mapped to multiple region classes.\n+     * @param source the event source\n+     * @param regionName the region name\n+     * @param defaultRegionClass1 the first default region class\n+     * @param defaultRegionClass2 the second default region class\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void regionNameMappedToMultipleRegionClasses(Object source, String regionName,\n+            String defaultRegionClass1, String defaultRegionClass2, Locator loc)\n+                throws ValidationException;\n+\n+    /**\n+     * There are multiple flows with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param flowName the flow name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void duplicateFlowNameInPageSequence(Object source, String elementName, String flowName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A flow name could not be mapped to a region.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param flowName the flow name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void flowNameNotMapped(Object source, String elementName, String flowName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A page master could not be found.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param masterReference the page master reference\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void masterNotFound(Object source, String elementName, String masterReference,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An illegal region name was used.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param regionName the region name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void illegalRegionName(Object source, String elementName, String regionName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A non-zero border and/or padding has been encountered on a region.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param regionName the region name\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void nonZeroBorderPaddingOnRegion(Object source, String elementName, String regionName,\n+            boolean canRecover, Locator loc) throws ValidationException;\n+\n+    /**\n+     * If overflow property is set to \"scroll\", a column-count other than \"1\" may not be specified.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void columnCountErrorOnRegionBodyOverflowScroll(Object source, String elementName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * fo:root must be root.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void invalidFORoot(Object source, String elementName,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * No FO document was found.\n+     * @param source the event source\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void emptyDocument(Object source) throws ValidationException;\n+ \n+    /**\n+     * An unknown/unsupported formatting object has been encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void unknownFormattingObject(Object source, String elementName,\n+            QName offendingNode, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "sha": "aa7b1494173ab74c04f3f73519268a376b55e810",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FObj.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FObj.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 30,
                "filename": "src/java/org/apache/fop/fo/FObj.java",
                "patch": "@@ -27,13 +27,15 @@\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fo.flow.Marker;\n import org.apache.fop.fo.properties.PropertyMaker;\n-import org.apache.fop.util.QName;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Base class for representation of formatting objects and their processing.\n@@ -171,25 +173,7 @@ private void checkId(String id) throws ValidationException {\n             if (!idrefs.contains(id)) {\n                 idrefs.add(id);\n             } else {\n-                if (getUserAgent().validateStrictly()) {\n-                    throw new ValidationException(\"Property id \\\"\" + id \n-                            + \"\\\" previously used; id values must be unique\"\n-                            + \" in document.\", locator);\n-                } else {\n-                    if (log.isWarnEnabled()) {\n-                        StringBuffer msg = new StringBuffer();\n-                        msg.append(\"Found non-unique id on \").append(getName());\n-                        if (locator.getLineNumber() != -1) {\n-                            msg.append(\" (at \").append(locator.getLineNumber())\n-                                .append(\"/\").append(locator.getColumnNumber())\n-                                .append(\")\");\n-                        }\n-                        msg.append(\"\\nAny reference to it will be considered \"\n-                                + \"a reference to the first occurrence \"\n-                                + \"in the document.\");\n-                        log.warn(msg);\n-                    }\n-                }\n+                getFOValidationEventProducer().idNotUnique(this, getName(), id, true, locator);\n             }\n         }\n     }\n@@ -283,16 +267,22 @@ public boolean generatesReferenceAreas() {\n         return false;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public FONodeIterator getChildNodes() {\n-        if (firstChild != null) {\n+        if (hasChildren()) {\n             return new FObjIterator(this);\n         }\n         return null;\n     }\n \n+    /**\n+     * Indicates whether this formatting object has children.\n+     * @return true if there are children\n+     */\n+    public boolean hasChildren() {\n+        return this.firstChild != null;\n+    }\n+    \n     /**\n      * Return an iterator over the object's childNodes starting\n      * at the passed-in node (= first call to iterator.next() will\n@@ -348,8 +338,8 @@ protected void addMarker(Marker marker) {\n                 if (node instanceof FObj\n                         || (node instanceof FOText\n                                 && ((FOText) node).willCreateArea())) {\n-                    log.error(\n-                            \"fo:marker must be an initial child: \" + mcname);\n+                    getFOValidationEventProducer().markerNotInitialChild(this, getName(),\n+                            mcname, locator);\n                     return;\n                 } else if (node instanceof FOText) {\n                     iter.remove();\n@@ -363,8 +353,8 @@ protected void addMarker(Marker marker) {\n         if (!markers.containsKey(mcname)) {\n             markers.put(mcname, marker);\n         } else {\n-            log.error(\"fo:marker 'marker-class-name' \"\n-                    + \"must be unique for same parent: \" + mcname);\n+            getFOValidationEventProducer().markerNotUniqueForSameParent(this, getName(),\n+                    mcname, locator);\n         }\n     }\n \n@@ -382,6 +372,33 @@ public Map getMarkers() {\n         return markers;\n     }\n \n+    /** {@inheritDoc} */\n+    protected String getContextInfoAlt() {\n+        StringBuffer sb = new StringBuffer();\n+        if (getLocalName() != null) {\n+            sb.append(getName());\n+            sb.append(\", \");\n+        }\n+        if (hasId()) {\n+            sb.append(\"id=\").append(getId());\n+            return sb.toString();\n+        }\n+        String s = gatherContextInfo();\n+        if (s != null) {\n+            sb.append(\"\\\"\");\n+            if (s.length() < 32) {\n+                sb.append(s);\n+            } else {\n+                sb.append(s.substring(0, 32));\n+                sb.append(\"...\");\n+            }\n+            sb.append(\"\\\"\");\n+            return sb.toString();\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n     /** {@inheritDoc} */\n     protected String gatherContextInfo() {\n         if (getLocator() != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/FObj.java",
                "sha": "a03a351e0c56a9f06fdb396361f4c3bce753b1e6",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/PropertyList.java",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/PropertyList.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 37,
                "filename": "src/java/org/apache/fop/fo/PropertyList.java",
                "patch": "@@ -20,13 +20,13 @@\n package org.apache.fop.fo;\n \n // Java\n-import java.text.MessageFormat;\n-\n import org.xml.sax.Attributes;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FopFactory;\n import org.apache.fop.fo.expr.PropertyException;\n import org.apache.fop.fo.properties.CommonAbsolutePosition;\n@@ -41,7 +41,6 @@\n import org.apache.fop.fo.properties.CommonTextDecoration;\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.PropertyMaker;\n-import org.apache.fop.util.QName;\n \n /**\n  * Class containing the collection of properties for a given FObj.\n@@ -150,7 +149,7 @@ public Property getInherited(int propId) throws PropertyException {\n      * the default value.\n      * @param propId The Constants ID of the property whose value is desired.\n      * @return the Property corresponding to that name\n-     * @throws PropertyException ...\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property get(int propId) throws PropertyException {\n         return get(propId, true, true);\n@@ -166,7 +165,7 @@ public Property get(int propId) throws PropertyException {\n      *                      value is needed\n      * @param bTryDefault   true when the default value may be used as a last resort\n      * @return the property\n-     * @throws PropertyException ...\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property get(int propId, boolean bTryInherit,\n                          boolean bTryDefault) throws PropertyException {\n@@ -321,20 +320,18 @@ public void addAttributesToList(Attributes attributes)\n             } else if (!factory.isNamespaceIgnored(attributeNS)) {\n                 ElementMapping mapping = factory.getElementMappingRegistry().getElementMapping(\n                         attributeNS);\n+                QName attr = new QName(attributeNS, attributeName);\n                 if (mapping != null) {\n-                    QName attName = new QName(attributeNS, attributeName);\n-                    if (mapping.isAttributeProperty(attName) \n+                    if (mapping.isAttributeProperty(attr) \n                             && mapping.getStandardPrefix() != null) {\n                         convertAttributeToProperty(attributes, \n-                                mapping.getStandardPrefix() + \":\" + attName.getLocalName(), \n+                                mapping.getStandardPrefix() + \":\" + attr.getLocalName(), \n                                 attributeValue);\n                     } else {\n-                        getFObj().addForeignAttribute(attName, attributeValue);\n+                        getFObj().addForeignAttribute(attr, attributeValue);\n                     }\n                 } else {\n-                    handleInvalidProperty(\n-                            \"Error processing foreign attribute: \"\n-                            + attributeNS + \"/@\" + attributeName, attributeName);\n+                    handleInvalidProperty(attr);\n                 }\n             }\n         }\n@@ -345,11 +342,8 @@ public void addAttributesToList(Attributes attributes)\n      * @param propertyName  the property name to check\n      * @return true if the base property name and the subproperty name (if any)\n      *           can be correctly mapped to an id\n-     * @throws ValidationException in case the property name\n-     *          is invalid for the FO namespace\n      */\n-    protected boolean isValidPropertyName(String propertyName) \n-                throws ValidationException {\n+    protected boolean isValidPropertyName(String propertyName) {\n \n         int propId = FOPropertyMapping.getPropertyId(\n                         findBasePropertyName(propertyName));\n@@ -359,9 +353,6 @@ protected boolean isValidPropertyName(String propertyName)\n         if (propId == -1 \n                 || (subpropId == -1 \n                         && findSubPropertyName(propertyName) != null)) {\n-            String errorMessage = MessageFormat.format(\n-                    \"Invalid property name ''{0}''.\", new Object[] {propertyName});\n-            handleInvalidProperty(errorMessage, propertyName);\n             return false;\n         }\n         return true;\n@@ -382,19 +373,23 @@ private void convertAttributeToProperty(Attributes attributes,\n         \n         if (attributeValue != null) {\n \n-            if (!isValidPropertyName(attributeName)) {\n-                //will log an error or throw an exception\n+            if (attributeName.startsWith(\"xmlns:\")) {\n+                //Ignore namespace declarations\n                 return;\n             }\n-            FObj parentFO = fobj.findNearestAncestorFObj();\n             \n-    \n             /* Handle \"compound\" properties, ex. space-before.minimum */\n             String basePropertyName = findBasePropertyName(attributeName);\n             String subPropertyName = findSubPropertyName(attributeName);\n \n             int propId = FOPropertyMapping.getPropertyId(basePropertyName);\n             int subpropId = FOPropertyMapping.getSubPropertyId(subPropertyName);\n+            \n+            if (propId == -1 \n+                    || (subpropId == -1 && subPropertyName != null)) {\n+                handleInvalidProperty(new QName(null, attributeName));\n+            }\n+            FObj parentFO = fobj.findNearestAncestorFObj();\n     \n             PropertyMaker propertyMaker = findMaker(propId);\n             if (propertyMaker == null) {\n@@ -417,8 +412,8 @@ private void convertAttributeToProperty(Attributes attributes,\n                     }\n                     prop = propertyMaker.make(this, attributeValue, parentFO);\n                 } else { // e.g. \"leader-length.maximum\"\n-                    Property baseProperty = \n-                        findBaseProperty(attributes, parentFO, propId, \n+                    Property baseProperty\n+                        = findBaseProperty(attributes, parentFO, propId, \n                                 basePropertyName, propertyMaker);\n                     prop = propertyMaker.make(baseProperty, subpropId,\n                             this, attributeValue, parentFO);\n@@ -427,8 +422,8 @@ private void convertAttributeToProperty(Attributes attributes,\n                     putExplicit(propId, prop);\n                 }\n             } catch (PropertyException e) {\n-                log.error(\"Ignoring property: \" \n-                        + attributeName + \"=\\\"\" + attributeValue + \"\\\" (\" + e.getMessage() + \")\");\n+                fobj.getFOValidationEventProducer().invalidPropertyValue(this, fobj.getName(),\n+                        attributeName, attributeValue, e, fobj.locator);\n             }\n         }\n     }\n@@ -465,18 +460,16 @@ private Property findBaseProperty(Attributes attributes,\n     }\n \n     /**\n-     * @param message ...\n-     * @param propName ...\n-     * @throws ValidationException ...\n+     * Handles an invalid property.\n+     * @param attr the invalid attribute\n+     * @throws ValidationException if an exception needs to be thrown depending on the\n+     *                  validation settings\n      */\n-    protected void handleInvalidProperty(String message, String propName) \n+    protected void handleInvalidProperty(QName attr) \n                     throws ValidationException {\n-        if (!propName.startsWith(\"xmlns\")) {\n-            if (fobj.getUserAgent().validateStrictly()) {\n-                fobj.attributeError(message);\n-            } else {\n-                log.error(message + \" Property ignored.\");\n-            }\n+        if (!attr.getQName().startsWith(\"xmlns\")) {\n+            fobj.getFOValidationEventProducer().invalidProperty(this, fobj.getName(),\n+                    attr, true, fobj.locator);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/PropertyList.java",
                "sha": "b6766bfe9b335b196a40fe639b6b52d1e3d6c4b3",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/FromParentFunction.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "patch": "@@ -64,7 +64,13 @@ public Property eval(Property[] args,\n          * non-inherited properties too. Perhaps the result is different for\n          * a property line line-height which \"inherits specified\"???\n          */\n-        return pInfo.getPropertyList().getFromParent(FOPropertyMapping.getPropertyId(propName));\n+        int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n+        return pInfo.getPropertyList().getFromParent(propId);\n     }\n \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "sha": "b09d3c95ff9d98422344a0c964e449a70dd42e7f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "patch": "@@ -58,6 +58,11 @@ public Property eval(Property[] args,\n         }\n \n         int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n         return pInfo.getPropertyList().getInherited(propId);\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "sha": "e24c78caa0d64da8eb74508a0c45890f24a95f9a",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "patch": "@@ -60,6 +60,11 @@ public Property eval(Property[] args,\n         // NOTE: special cases for shorthand property\n         // Should return COMPUTED VALUE\n         int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n         return pInfo.getPropertyList().getNearestSpecified(propId);\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "sha": "cdde960925078da71c6c9a5049c203fd521c3277",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "patch": "@@ -19,14 +19,15 @@\n \n package org.apache.fop.fo.extensions;\n \n+import java.util.HashMap;\n+import java.util.Set;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.fo.ElementMapping;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.UnknownXMLObj;\n import org.apache.fop.fo.extensions.destination.Destination;\n-import org.apache.fop.util.QName;\n-\n-import java.util.HashMap;\n-import java.util.Set;\n \n /**\n  * Element mapping for FOP's proprietary extension to XSL-FO.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "sha": "fc61167b2613c941d24f7e941b3385bb36d92e07",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/destination/Destination.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "patch": "@@ -19,15 +19,15 @@\n \n package org.apache.fop.fo.extensions.destination;\n \n-import org.apache.fop.fo.ValidationException;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.pagination.Root;\n+import org.apache.fop.fo.PropertyList;\n+import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n-\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n+import org.apache.fop.fo.pagination.Root;\n \n /**\n  * Class for named destinations in PDF.\n@@ -54,7 +54,7 @@ public void processNode(String elementName, Locator locator,\n             Attributes attlist, PropertyList pList) throws FOPException {\n         internalDestination = attlist.getValue(\"internal-destination\");\n         if (internalDestination == null || internalDestination.length() == 0) {\n-            attributeError(\"Missing attribute:  internal-destination must be specified.\");\n+            missingPropertyError(\"internal-destination\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "sha": "e3a2bbac47ae7c5c6f8eb6062e7836312fce0588",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "patch": "@@ -62,14 +62,16 @@ public void bind(PropertyList pList) throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n \n@@ -79,17 +81,8 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     protected void endOfNode() throws FOPException {\n         if (!this.blockItemFound) {\n             String contentModel = \"marker* (%block;)+\";\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(contentModel);\n-            } else {\n-                StringBuffer message = new StringBuffer(\n-                        errorText(getLocator()));\n-                message.append(getName())\n-                    .append(\" is missing child elements. \")\n-                    .append(\"Required Content Model: \")\n-                    .append(contentModel);\n-                log.warn(message.toString());\n-            }\n+            getFOValidationEventProducer().missingChildElement(this, getName(),\n+                    contentModel, true, getLocator());\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "sha": "f99f9d94745bb10efa5dcfddcb958bd06611dff1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "patch": "@@ -113,8 +113,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the Common Font Properties. */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "sha": "e9a1176d6dae3bfa35cee10f85d0696e21e6e57c",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BasicLink.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/flow/BasicLink.java",
                "patch": "@@ -76,8 +76,7 @@ public void bind(PropertyList pList) throws FOPException {\n             externalDestination = null;\n         } else if (externalDestination.length() == 0) {\n             // slightly stronger than spec \"should be specified\"\n-            attributeError(\"Missing attribute:  Either external-destination or \" +\n-                \"internal-destination must be specified.\");\n+            getFOValidationEventProducer().missingLinkDestination(this, getName(), locator);\n         }\n     }\n \n@@ -102,15 +101,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (#PCDATA|%inline;|%block;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "sha": "b3ef48012fda1cf1b59c9b180d6f2bb921f10e62",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BidiOverride.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 16,
                "filename": "src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "patch": "@@ -19,13 +19,14 @@\n \n package org.apache.fop.fo.flow;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObjMixed;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.properties.SpaceProperty;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:bidi-override object.\n@@ -96,22 +97,21 @@ public void bind(PropertyList pList) throws FOPException {\n      *  fo:inline-container.\"\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, getParent().getName(), nsURI, getName(),\n+                        \"rule.bidiOverrideContent\");\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n-            String ruleViolated = \"An fo:bidi-override\"\n-                + \" that is a descendant of an fo:leader or of the fo:inline child\"\n-                + \" of an fo:footnote may not have block-level children, unless it\" \n-                + \" has a nearer ancestor that is an fo:inline-container.\";\n-            invalidChildError(loc, nsURI, localName, ruleViolated);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "sha": "892f4a3c5b70cdef5b88d9adfb47d1bc0dd2354b",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BlockContainer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "patch": "@@ -114,15 +114,17 @@ protected void startOfNode() throws FOPException {\n      * @todo - implement above restriction if possible\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "sha": "f1180ac162dbaefeb4b13dc36b5c384c442619df",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Character.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Character.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/Character.java",
                "patch": "@@ -22,6 +22,8 @@\n import java.awt.Color;\n import java.util.NoSuchElementException;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.CharIterator;\n@@ -35,7 +37,6 @@\n import org.apache.fop.fo.properties.CommonTextDecoration;\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.SpaceProperty;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:character object. \n@@ -134,8 +135,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Character.java",
                "sha": "aad4209f9150c10b3617eeb2383df33cd82594ee",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ExternalGraphic.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n@@ -78,11 +79,17 @@ public void bind(PropertyList pList) throws FOPException {\n         try {\n             info = manager.getImageInfo(url, userAgent.getImageSessionContext());\n         } catch (ImageException e) {\n-            log.error(\"Image not available: \" + e.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, url, e, getLocator());\n         } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, url, fnfe, getLocator());\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while loading image: \" + ioe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, url, ioe, getLocator());\n         }\n         if (info != null) {\n             this.intrinsicWidth = info.getSize().getWidthMpt();\n@@ -93,7 +100,6 @@ public void bind(PropertyList pList) throws FOPException {\n                     = FixedLength.getInstance(-baseline);\n             }\n         }\n-        //TODO Report to caller so he can decide to throw an exception\n     }\n \n     /** {@inheritDoc} */\n@@ -107,8 +113,10 @@ protected void startOfNode() throws FOPException {\n      * <br>XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the \"src\" property */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "sha": "07f765e5287c3370653dc2e46efb7b0b3291f4a0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Float.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Float.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/Float.java",
                "patch": "@@ -46,7 +46,8 @@ public Float(FONode parent) {\n         super(parent);\n         \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:float is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -63,10 +64,12 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             if (!isBlockItem(nsURI, localName)) {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Float.java",
                "sha": "57d3b4ee18f121185e46c97d343042e7cb902b96",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Footnote.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Footnote.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/flow/Footnote.java",
                "patch": "@@ -82,12 +82,13 @@ protected void endOfNode() throws FOPException {\n      *      generates an absolutely positioned area.\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"inline\")) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"inline\")) {\n                 if (footnoteCitation != null) {\n                     tooManyNodesError(loc, \"fo:inline\");\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"footnote-body\")) {\n+            } else if (localName.equals(\"footnote-body\")) {\n                 if (footnoteCitation == null) {\n                     nodesOutOfOrderError(loc, \"fo:inline\", \"fo:footnote-body\");\n                 } else if (footnoteBody != null) {\n@@ -96,6 +97,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Footnote.java",
                "sha": "c15a7e0eeee9c2a4565274f7eba485b72157c9cc",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/FootnoteBody.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "patch": "@@ -73,10 +73,12 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             if (!isBlockItem(nsURI, localName)) {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "sha": "967d152155a0d67876d3bf8453870ab7d225c2f5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InitialPropertySet.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "patch": "@@ -72,8 +72,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "sha": "6d0e495b775fd322adc5e018b8bdfba919bbd38c",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Inline.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Inline.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/Inline.java",
                "patch": "@@ -81,8 +81,8 @@ protected void startOfNode() throws FOPException {\n        int lvlInCntr = findAncestor(FO_INLINE_CONTAINER);\n \n        if (lvlLeader > 0) {\n-           if (lvlInCntr < 0 ||\n-               (lvlInCntr > 0 && lvlInCntr > lvlLeader)) {\n+           if (lvlInCntr < 0\n+               || (lvlInCntr > 0 && lvlInCntr > lvlLeader)) {\n                canHaveBlockLevelChildren = false;\n            }\n        } else if (lvlFootnote > 0) {\n@@ -110,23 +110,20 @@ protected void endOfNode() throws FOPException {\n      *  nearer ancestor that is an fo:inline-container.\" (paraphrased)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, getParent().getName(), nsURI, getName(), \"rule.inlineContent\");\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n-            String ruleViolated = \n-                \" An fo:inline that is a descendant of an fo:leader\" +\n-                \" or fo:footnote may not have block-level children,\" +\n-                \" unless it has a nearer ancestor that is an\" +\n-                \" fo:inline-container.\";\n-            invalidChildError(loc, nsURI, localName, ruleViolated);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Inline.java",
                "sha": "50662d9f129be9377ecc67c9e6abdf158845341c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InlineContainer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "patch": "@@ -86,15 +86,17 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: marker* (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "sha": "3c142afe9d969c0e6c69328c4a47737b8fed3e5c",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 23,
                "filename": "src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "patch": "@@ -20,12 +20,17 @@\n package org.apache.fop.fo.flow;\n \n import java.awt.geom.Point2D;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.XMLObj;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:instream-foreign-object object.\n@@ -39,6 +44,7 @@\n \n     //Additional value\n     private Point2D intrinsicDimensions;\n+    private boolean instrisicSizeDetermined;\n     \n     private Length intrinsicAlignmentAdjust;\n     \n@@ -68,11 +74,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: one (1) non-XSL namespace child\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n         } else if (firstChild != null) {\n-            tooManyNodesError(loc, \"child element\");\n+            tooManyNodesError(loc, new QName(nsURI, null, localName));\n         }\n     }\n \n@@ -81,32 +87,28 @@ public String getLocalName() {\n         return \"instream-foreign-object\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_INSTREAM_FOREIGN_OBJECT;\n     }\n \n-    /**\n-     * Preloads the image so the intrinsic size is available.\n-     */\n+    /** Preloads the image so the intrinsic size is available. */\n     private void prepareIntrinsicSize() {\n-        if (intrinsicDimensions == null) {\n+        if (!this.instrisicSizeDetermined) {\n             XMLObj child = (XMLObj) firstChild;\n             Point2D csize = new Point2D.Float(-1, -1);\n             intrinsicDimensions = child.getDimension(csize);\n             if (intrinsicDimensions == null) {\n-                log.error(\"Intrinsic dimensions of \"\n-                        + \" instream-foreign-object could not be determined\");\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.ifoNoIntrinsicSize(this, getLocator());\n             }\n             intrinsicAlignmentAdjust = child.getIntrinsicAlignmentAdjust();\n+            this.instrisicSizeDetermined = true;\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getIntrinsicWidth() {\n         prepareIntrinsicSize();\n         if (intrinsicDimensions != null) {\n@@ -116,9 +118,7 @@ public int getIntrinsicWidth() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getIntrinsicHeight() {\n         prepareIntrinsicSize();\n         if (intrinsicDimensions != null) {\n@@ -128,11 +128,8 @@ public int getIntrinsicHeight() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    public  Length getIntrinsicAlignmentAdjust()\n-    {\n+    /** {@inheritDoc} */\n+    public  Length getIntrinsicAlignmentAdjust() {\n         prepareIntrinsicSize();\n         return intrinsicAlignmentAdjust;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "sha": "802f59c30f0c879903494d7a15642b4917c49c8a",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListBlock.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/ListBlock.java",
                "patch": "@@ -108,15 +108,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (list-item)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (hasListItem) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (hasListItem) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item\");\n+                }\n+            } else if (localName.equals(\"list-item\")) {\n+                hasListItem = true;\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item\")) {\n-            hasListItem = true;\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "sha": "a196e92de3c49efe553b490e63525b430c63b324",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ListItem.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListItem.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/flow/ListItem.java",
                "patch": "@@ -98,22 +98,24 @@ protected void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (label != null) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item-label\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (label != null) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item-label\");\n+                }\n+            } else if (localName.equals(\"list-item-label\")) {\n+                if (label != null) {\n+                    tooManyNodesError(loc, \"fo:list-item-label\");\n+                }\n+            } else if (localName.equals(\"list-item-body\")) {\n+                if (label == null) {\n+                    nodesOutOfOrderError(loc, \"fo:list-item-label\", \"fo:list-item-body\");\n+                } else if (body != null) {\n+                    tooManyNodesError(loc, \"fo:list-item-body\");\n+                }\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item-label\")) {\n-            if (label != null) {\n-                tooManyNodesError(loc, \"fo:list-item-label\");\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item-body\")) {\n-            if (label == null) {\n-                nodesOutOfOrderError(loc, \"fo:list-item-label\", \"fo:list-item-body\");\n-            } else if (body != null) {\n-                tooManyNodesError(loc, \"fo:list-item-body\");\n-            }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/ListItem.java",
                "sha": "cf0e05c565924e2cbadf8be43ace56aef177a35c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Marker.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Marker.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/fo/flow/Marker.java",
                "patch": "@@ -59,9 +59,8 @@ public Marker(FONode parent) {\n      */\n     public void bind(PropertyList pList) throws FOPException {\n         if (findAncestor(FO_FLOW) < 0) {\n-            invalidChildError(locator, FO_URI, \"marker\", \n-                \"An fo:marker is permitted only as the descendant \" \n-                    + \"of an fo:flow\");\n+            invalidChildError(locator, getParent().getName(), FO_URI, getName(), \n+                \"rule.markerDescendantOfFlow\");\n         }\n         \n         markerClassName = pList.get(PR_MARKER_CLASS_NAME).getString();\n@@ -112,9 +111,11 @@ protected void endOfNode() throws FOPException {\n      * @todo implement \"additional\" constraint, possibly within fo:retrieve-marker\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Marker.java",
                "sha": "168b181803b295e70dc863f058415b5c267ec57c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiCase.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/MultiCase.java",
                "patch": "@@ -46,7 +46,8 @@ public MultiCase(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-case is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "sha": "e568fba4661643dd5809248f98a34bdead9b8b2c",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiProperties.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "patch": "@@ -49,7 +49,8 @@ public MultiProperties(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-properties is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -69,13 +70,14 @@ protected void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"multi-property-set\")) {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"multi-property-set\")) {\n                 if (hasWrapper) {\n                     nodesOutOfOrderError(loc, \"fo:multi-property-set\", \"fo:wrapper\");\n                 } else {\n                     hasMultiPropertySet = true;\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"wrapper\")) {\n+            } else if (localName.equals(\"wrapper\")) {\n                 if (hasWrapper) {\n                     tooManyNodesError(loc, \"fo:wrapper\");\n                 } else {\n@@ -84,6 +86,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n     \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "sha": "bd3bd893ec92d4e265aafdf0c1edcaaba6123c8e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiPropertySet.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "patch": "@@ -45,7 +45,8 @@ public MultiPropertySet(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-property-set is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -63,8 +64,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "sha": "caa31f7b9aeded5647113e5d901908a7ffb34b0c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiSwitch.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "patch": "@@ -47,7 +47,8 @@ public MultiSwitch(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-switch is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -75,9 +76,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (multi-case+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && localName.equals(\"multi-case\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"multi-case\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "sha": "03f404aa37b1edbbb5af0f69a2e979b358fcea8d",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiToggle.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "patch": "@@ -47,7 +47,8 @@ public MultiToggle(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-toggle is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -65,9 +66,11 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: (#PCDATA|%inline;|%block;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "sha": "66442c2a72aadd7c21c473cf4afbcd0ea0bfe5ea",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/PageNumber.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/PageNumber.java",
                "patch": "@@ -117,8 +117,10 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the Common Font Properties. */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "sha": "cc51dd28aeabf7cc3f8f355e8f30e2d91aca08a8",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/RetrieveMarker.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "patch": "@@ -21,6 +21,8 @@\n \n import java.util.Iterator;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FOText;\n@@ -30,7 +32,6 @@\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableFObj;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:retrieve-marker object.\n@@ -48,21 +49,18 @@\n \n     /**\n      * Create a retrieve marker object.\n-     *\n+     * @param parent FONode that is the parent of this object\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RetrieveMarker(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         if (findAncestor(FO_STATIC_CONTENT) < 0) {\n-            invalidChildError(locator, FO_URI, \"retrieve-marker\", \n-                \"An fo:retrieve-marker is permitted only as the \" +\n-                \" descendant of an fo:static-content.\");\n+            invalidChildError(locator, getParent().getName(), FO_URI, getName(), \n+                \"rule.retrieveMarkerDescendatOfStaticContent\");\n         }\n \n         retrieveClassName = pList.get(PR_RETRIEVE_CLASS_NAME).getString();\n@@ -81,8 +79,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -206,13 +206,12 @@ public void bindMarker(Marker marker) {\n             try {\n                 cloneFromMarker(marker);\n             } catch (FOPException exc) {\n-                log.error(\"fo:retrieve-marker unable to clone \"\n-                        + \"subtree of fo:marker (marker-class-name=\"\n-                        + marker.getMarkerClassName() + \")\", exc);\n+                getFOValidationEventProducer().markerCloningFailed(this,\n+                        marker.getMarkerClassName(), exc, getLocator());\n                 return;\n             }\n-        } else if (log.isInfoEnabled()) {\n-            log.info(\"Empty marker retrieved...\");\n+        } else if (log.isDebugEnabled()) {\n+            log.debug(\"Empty marker retrieved...\");\n         }\n         return;\n     }\n@@ -222,9 +221,7 @@ public String getLocalName() {\n         return \"retrieve-marker\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_RETRIEVE_MARKER;\n     }    ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "sha": "ea6b6f1c52078a5c56f71eafc7c648379ea4f182",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Wrapper.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/flow/Wrapper.java",
                "patch": "@@ -19,12 +19,13 @@\n \n package org.apache.fop.fo.flow;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObjMixed;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:wrapper object.\n@@ -66,17 +67,19 @@ public Wrapper(FONode parent) {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && \"marker\".equals(localName)) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (\"marker\".equals(localName)) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (isBlockOrInlineItem(nsURI, localName)) {\n+                //delegate validation to parent\n+                FONode.validateChildNode(this.parent, loc, nsURI, localName);\n+                blockOrInlineItemFound = true;\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (isBlockOrInlineItem(nsURI, localName)) {\n-            //delegate validation to parent\n-            FONode.validateChildNode(this.parent, loc, nsURI, localName);\n-            blockOrInlineItemFound = true;\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "sha": "87582fb476d7db8bd7c40b8838ce2fe101442823",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "patch": "@@ -120,13 +120,17 @@ void startTableRow(TableRow tableRow) {\n     void endTableRow() {\n         assert currentTableRow != null;\n         if (currentRowIndex > 0 && currentTableRow.getBreakBefore() != Constants.EN_AUTO) {\n-            currentTableRow.attributeWarning(\"break-before ignored because of row spanning \"\n-                    + \"in progress (See XSL 1.1, 7.20.2)\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    currentTableRow.getUserAgent().getEventBroadcaster());\n+            eventProducer.breakIgnoredDueToRowSpanning(this, currentTableRow.getName(), true,\n+                    currentTableRow.getLocator());\n         }\n         if (currentRowIndex < rows.size() - 1\n                 && currentTableRow.getBreakAfter() != Constants.EN_AUTO) {\n-            currentTableRow.attributeWarning(\"break-after ignored because of row spanning \"\n-                    + \"in progress (See XSL 1.1, 7.20.1)\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    currentTableRow.getUserAgent().getEventBroadcaster());\n+            eventProducer.breakIgnoredDueToRowSpanning(this, currentTableRow.getName(), false,\n+                    currentTableRow.getLocator());\n         }\n         for (Iterator iter = ((List) rows.get(currentRowIndex)).iterator(); iter.hasNext();) {\n             GridUnit gu = (GridUnit) iter.next();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "sha": "0d24491d9b731f64d90c8fadb538ecf73403317d",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/Table.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/Table.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 19,
                "filename": "src/java/org/apache/fop/fo/flow/table/Table.java",
                "patch": "@@ -22,6 +22,8 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.ValidationPercentBaseContext;\n@@ -35,7 +37,6 @@\n import org.apache.fop.fo.properties.LengthPairProperty;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n import org.apache.fop.fo.properties.TableColLength;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table object.\n@@ -126,20 +127,22 @@ public void bind(PropertyList pList) throws FOPException {\n         orphanContentLimit = pList.get(PR_X_ORPHAN_CONTENT_LIMIT).getLength();\n \n         if (!blockProgressionDimension.getOptimum(null).isAuto()) {\n-            attributeWarning(\"only a value of \\\"auto\\\" for block-progression-dimension has a\"\n-                    + \" well-specified behavior on fo:table. Falling back to \\\"auto\\\"\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.nonAutoBPDOnTable(this, getLocator());\n             // Anyway, the bpd of a table is not used by the layout code\n         }\n         if (tableLayout == EN_AUTO) {\n-            attributeWarning(\"table-layout=\\\"auto\\\" is currently not supported by FOP\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"table-layout=\\\"auto\\\"\", getLocator());\n         }\n         if (!isSeparateBorderModel()\n                 && getCommonBorderPaddingBackground().hasPadding(\n                         ValidationPercentBaseContext.getPseudoContext())) {\n             //See \"17.6.2 The collapsing border model\" in CSS2\n-            attributeWarning(\"In collapsing border model a table does not have padding\"\n-                    + \" (see http://www.w3.org/TR/REC-CSS2/tables.html#collapsing-borders)\"\n-                    + \", but a non-zero value for padding was found. The padding will be ignored.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.noTablePaddingWithCollapsingBorderModel(this, getLocator());\n         }\n \n         /* Store reference to the property list, so\n@@ -163,7 +166,7 @@ public void startOfNode() throws FOPException {\n      * XSL Content Model: (marker*,table-column*,table-header?,table-footer?,table-body+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName)\n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (\"marker\".equals(localName)) {\n                 if (tableColumnFound || tableHeaderFound || tableFooterFound\n@@ -193,15 +196,11 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n                 } else {\n                     tableFooterFound = true;\n                     if (tableBodyFound) {\n-                        if (getUserAgent().validateStrictly()) {\n-                            nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+)\");\n-                        } else if (!isSeparateBorderModel()) {\n-                            nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+).\"\n-                                    + \" This table uses the collapsing border\"\n-                                    + \" model. In order to resolve borders in an efficient way\"\n-                                    + \" the table-footer must be known before any table-body\"\n-                                    + \" is parsed. Either put the footer at the correct place\"\n-                                    + \" or switch to the separate border model\");\n+                        nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+)\", true);\n+                        if (!isSeparateBorderModel()) {\n+                            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                                    getUserAgent().getEventBroadcaster());\n+                            eventProducer.footerOrderCannotRecover(this, getName(), getLocator());\n                         }\n                     }\n                 }\n@@ -210,8 +209,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -225,6 +222,10 @@ public void endOfNode() throws FOPException {\n                    \"(marker*,table-column*,table-header?,table-footer?\"\n                        + \",table-body+)\");\n         }\n+        if (!hasChildren()) {\n+            getParent().removeChild(this);\n+            return;\n+        }\n         if (!inMarker()) {\n             rowGroupBuilder.endTable();\n             /* clean up */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/Table.java",
                "sha": "c1ef3857cdbc36955e84f83711073151ab85bb1c",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 22,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "patch": "@@ -62,7 +62,8 @@ public TableAndCaption(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:table-and-caption is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"fo:table-and-caption\", getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -83,30 +84,32 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* table-caption? table\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n \n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (tableCaptionFound) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table-caption\");\n-            } else if (tableFound) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table\");\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"table-caption\")) {\n-            if (tableCaptionFound) {\n-                tooManyNodesError(loc, \"fo:table-caption\");\n-            } else if (tableFound) {\n-                nodesOutOfOrderError(loc, \"fo:table-caption\", \"fo:table\");\n-            } else {\n-                tableCaptionFound = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"table\")) {\n-            if (tableFound) {\n-                tooManyNodesError(loc, \"fo:table\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (tableCaptionFound) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table-caption\");\n+                } else if (tableFound) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table\");\n+                }\n+            } else if (localName.equals(\"table-caption\")) {\n+                if (tableCaptionFound) {\n+                    tooManyNodesError(loc, \"fo:table-caption\");\n+                } else if (tableFound) {\n+                    nodesOutOfOrderError(loc, \"fo:table-caption\", \"fo:table\");\n+                } else {\n+                    tableCaptionFound = true;\n+                }\n+            } else if (localName.equals(\"table\")) {\n+                if (tableFound) {\n+                    tooManyNodesError(loc, \"fo:table\");\n+                } else {\n+                    tableFound = true;\n+                }\n             } else {\n-                tableFound = true;\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "sha": "6dabf37db3d93b6888781cd3bdbb177de53e8476",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableBody.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "patch": "@@ -23,13 +23,14 @@\n import java.util.LinkedList;\n import java.util.List;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table-body object.\n@@ -119,13 +120,8 @@ public void endOfNode() throws FOPException {\n         getFOEventHandler().endBody(this);\n \n         if (!(tableRowsFound || tableCellsFound)) {\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(\"marker* (table-row+|table-cell+)\");\n-            } else {\n-                log.error(\"fo:table-body must not be empty. \"\n-                        + \"Expected: marker* (table-row+|table-cell+)\");\n-                getParent().removeChild(this);\n-            }\n+            missingChildElementError(\"marker* (table-row+|table-cell+)\", true);\n+            getParent().removeChild(this);\n         } else {\n             finishLastRowGroup();\n         }\n@@ -167,23 +163,20 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else if (localName.equals(\"table-row\")) {\n                 tableRowsFound = true;\n                 if (tableCellsFound) {\n-                    invalidChildError(loc, nsURI, localName, \"Either fo:table-rows\"\n-                            + \" or fo:table-cells may be children of an \" + getName()\n-                            + \" but not both\");\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.noMixRowsAndCells(this, getName(), getLocator());\n                 }\n             } else if (localName.equals(\"table-cell\")) {\n                 tableCellsFound = true;\n                 if (tableRowsFound) {\n-                    invalidChildError(loc, nsURI, localName,\n-                            \"Either fo:table-rows or fo:table-cells \"\n-                            + \"may be children of an \"\n-                            + getName() + \" but not both\");\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.noMixRowsAndCells(this, getName(), getLocator());\n                 }\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "sha": "4e1673568534e635089407deca60d0221120c289",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCaption.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "patch": "@@ -57,7 +57,8 @@ public TableCaption(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:table-caption is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"fo:table-caption\", getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -83,15 +84,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (%block;)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "sha": "416ef16ed0137f1350144341efc76525baa94753",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCell.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "patch": "@@ -102,17 +102,13 @@ public void startOfNode() throws FOPException {\n      */\n     public void endOfNode() throws FOPException {\n         if (!blockItemFound) {\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(\"marker* (%block;)+\");\n-            } else if (firstChild != null) {\n-                log.warn(\"fo:table-cell content that is not \"\n-                        + \"enclosed by a fo:block will be dropped/ignored.\");\n-            }\n+            missingChildElementError(\"marker* (%block;)+\", true);\n         }\n         if ((startsRow() || endsRow())\n                 && getParent().getNameId() == FO_TABLE_ROW ) {\n-            log.warn(\"starts-row/ends-row for fo:table-cells \"\n-                    + \"non-applicable for children of an fo:table-row.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.startEndRowUnderTableRowWarning(this, getLocator());\n         }\n         getFOEventHandler().endCell(this);\n     }\n@@ -123,14 +119,16 @@ public void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName)\n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "sha": "78e35eb52af34046d8084d93f7206998bf7fc580",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * A common class for fo:table-body and fo:table-row which both can contain fo:table-cell.\n@@ -47,9 +46,9 @@ protected void addTableCellChild(TableCell cell, boolean firstRow) throws FOPExc\n         Table t = getTable();\n         if (t.hasExplicitColumns()) {\n             if (colNumber + colSpan - 1 > t.getNumberOfColumns()) {\n-                throw new ValidationException(FONode.errorText(locator) + \"column-number or \"\n-                        + \"number of cells in the row overflows the number of fo:table-column \"\n-                        + \"specified for the table.\");\n+                TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.tooManyCells(this, getLocator());\n             }\n         } else {\n             t.ensureColumnNumber(colNumber + colSpan - 1);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "sha": "de9f271b5b2444f921cb159f3f8a582f424940ad",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableColumn.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "patch": "@@ -82,12 +82,16 @@ public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n \n         if (numberColumnsRepeated <= 0) {\n-            throw new PropertyException(\"number-columns-repeated must be 1 or bigger, \"\n-                    + \"but got \" + numberColumnsRepeated);\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.valueMustBeBiggerGtEqOne(this,\n+                    \"number-columns-repeated\", numberColumnsRepeated, getLocator());\n         }\n         if (numberColumnsSpanned <= 0) {\n-            throw new PropertyException(\"number-columns-spanned must be 1 or bigger, \"\n-                    + \"but got \" + numberColumnsSpanned);\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.valueMustBeBiggerGtEqOne(this,\n+                    \"number-columns-spanned\", numberColumnsSpanned, getLocator());\n         }\n \n         /* check for unspecified width and replace with default of\n@@ -96,8 +100,9 @@ public void bind(PropertyList pList) throws FOPException {\n          */\n         if (columnWidth.getEnum() == EN_AUTO) {\n             if (!this.implicitColumn && !getTable().isAutoLayout()) {\n-                log.warn(\"table-layout=\\\"fixed\\\" and column-width unspecified \"\n-                        + \"=> falling back to proportional-column-width(1)\");\n+                TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.warnImplicitColumns(this, getLocator());\n             }\n             columnWidth = new TableColLength(1.0, this);\n         }\n@@ -146,7 +151,9 @@ public void endOfNode() throws FOPException {\n     protected void validateChildNode(Locator loc,\n                         String nsURI, String localName)\n         throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -240,7 +247,7 @@ public String toString() {\n      * \n      * @param propId    the id for the property to retrieve\n      * @return the requested Property\n-     * @throws PropertyException\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property getProperty(int propId) throws PropertyException {\n         return this.pList.get(propId);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "sha": "e6f6b420ef1ccbd3238a87427e6b4697ad03d0bb",
                "status": "modified"
            },
            {
                "additions": 159,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "changes": 159,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "patch": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fo.flow.table;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.fo.ValidationException;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Event producer interface for table-specific XSL-FO validation messages.\n+ */\n+public interface TableEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static TableEventProducer get(EventBroadcaster broadcaster) {\n+            return (TableEventProducer)broadcaster.getEventProducerFor(\n+                    TableEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * A value other than \"auto\" has been specified on fo:table.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void nonAutoBPDOnTable(Object source, Locator loc);\n+\n+    /**\n+     * Padding on fo:table is ignored if the collapsing border model is active.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void noTablePaddingWithCollapsingBorderModel(Object source, Locator loc);\n+\n+    /**\n+     * No mixing of table-rows and table-cells is allowed for direct children of table-body.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noMixRowsAndCells(Object source, String elementName, Locator loc)\n+            throws ValidationException;\n+\n+    /**\n+     * The table-footer was found after the table-body. FOP cannot recover with collapsed border\n+     * model.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void footerOrderCannotRecover(Object source, String elementName, Locator loc)\n+            throws ValidationException;\n+    \n+    /**\n+     * starts-row/ends-row for fo:table-cells non-applicable for children of an fo:table-row\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void startEndRowUnderTableRowWarning(Object source, Locator loc);\n+\n+    /**\n+     * Column-number or number of cells in the row overflows the number of fo:table-column \n+     * specified for the table.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void tooManyCells(Object source, Locator loc) throws ValidationException;\n+\n+    /**\n+     * Property value must be 1 or bigger.\n+     * @param source the event source\n+     * @param propName the property name\n+     * @param actualValue the actual value\n+     * @param loc the location of the error or null\n+     * @throws PropertyException the property error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void valueMustBeBiggerGtEqOne(Object source, String propName,\n+            int actualValue, Locator loc) throws PropertyException;\n+\n+    /**\n+     * table-layout=\\\"fixed\\\" and column-width unspecified\n+     * => falling back to proportional-column-width(1)\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void warnImplicitColumns(Object source, Locator loc);\n+\n+    /**\n+     * padding-* properties are not applicable.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void paddingNotApplicable(Object source, String elementName, Locator loc);\n+\n+    /**\n+     * Cell overlap.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param column the column index of the overlapping cell\n+     * @param loc the location of the error or null\n+     * @throws PropertyException the property error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void cellOverlap(Object source, String elementName, int column,\n+            Locator loc) throws PropertyException;\n+\n+    /**\n+     * Break ignored due to row spanning.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param breakBefore true for \"break-before\", false for \"break-after\"\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void breakIgnoredDueToRowSpanning(Object source, String elementName, boolean breakBefore,\n+            Locator loc);\n+\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "sha": "44ddcc038965d0396e61bcb7af23f83821a68465",
                "status": "added"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableFObj.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "patch": "@@ -58,9 +58,7 @@ public TableFObj(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         borderAfterPrecedence = pList.get(PR_BORDER_AFTER_PRECEDENCE).getNumeric();\n@@ -71,9 +69,9 @@ public void bind(PropertyList pList) throws FOPException {\n                 && getNameId() != FO_TABLE_CELL\n                 && getCommonBorderPaddingBackground().hasPadding(\n                         ValidationPercentBaseContext.getPseudoContext())) {\n-            attributeWarning(\n-                    \"padding-* properties are not applicable to \" + getName()\n-                    + \", but a non-zero value for padding was found.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.paddingNotApplicable(this, getName(), getLocator());\n         }\n     }\n \n@@ -156,17 +154,19 @@ public Property make(PropertyList propertyList, String value, FObj fo)\n             ColumnNumberManager columnIndexManager =  parent.getColumnNumberManager();\n             int columnIndex = p.getNumeric().getValue();\n             if (columnIndex <= 0) {\n+                /* No warning necessary as the spec clearly defines how to handle these cases.\n                 log.warn(\"Specified negative or zero value for \"\n                         + \"column-number on \" + fo.getName() + \": \"\n                         + columnIndex + \" forced to \"\n-                        + columnIndexManager.getCurrentColumnNumber());\n+                        + columnIndexManager.getCurrentColumnNumber());*/\n                 return NumberProperty.getInstance(columnIndexManager.getCurrentColumnNumber());\n             } else {\n                 double tmpIndex = p.getNumeric().getNumericValue();\n                 if (tmpIndex - columnIndex > 0.0) {\n                     columnIndex = (int) Math.round(tmpIndex);\n+                    /* No warning necessary as the spec clearly defines how to handle these cases.\n                     log.warn(\"Rounding specified column-number of \"\n-                            + tmpIndex + \" to \" + columnIndex);\n+                            + tmpIndex + \" to \" + columnIndex);*/\n                     p = NumberProperty.getInstance(columnIndex);\n                 }\n             }\n@@ -179,16 +179,9 @@ public Property make(PropertyList propertyList, String value, FObj fo)\n                     /* if column-number is already in use by another\n                      * cell/column => error!\n                      */\n-                    StringBuffer errorMessage = new StringBuffer();\n-                    errorMessage.append(fo.getName() + \" overlaps in column \")\n-                           .append(columnIndex + i);\n-                    org.xml.sax.Locator loc = fo.getLocator();\n-                    if (loc != null && loc.getLineNumber() != -1) {\n-                        errorMessage.append(\" (line #\")\n-                            .append(loc.getLineNumber()).append(\", column #\")\n-                            .append(loc.getColumnNumber()).append(\")\");\n-                    }\n-                    throw new PropertyException(errorMessage.toString());\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            fo.getUserAgent().getEventBroadcaster());\n+                    eventProducer.cellOverlap(this, fo.getName(), columnIndex + 1, fo.getLocator());\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "sha": "24528f622208398243845aa8b50c9f445cd2a057",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableRow.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "patch": "@@ -19,6 +19,9 @@\n \n package org.apache.fop.fo.flow.table;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.FONode;\n@@ -27,8 +30,6 @@\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.KeepProperty;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table-row object.\n@@ -122,9 +123,11 @@ public void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI,\n                                      String localName)\n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && localName.equals(\"table-cell\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"table-cell\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "sha": "e5261614b2c8da3d6aa9ab6f1bdb29d1b00ae621",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "patch": "@@ -32,7 +32,9 @@\n public abstract class AbstractPageSequence extends FObj {\n     \n     // The value of properties relevant for fo:page-sequence.\n+    /** the initial-page-number value */\n     protected Numeric initialPageNumber;\n+    /** the force-page-count value */\n     protected int forcePageCount;\n     private String format;\n     private int letterValue;\n@@ -43,6 +45,7 @@\n \n     private PageNumberGenerator pageNumberGenerator;\n \n+    /** the first page number generated by the page sequence */\n     protected int startingPageNumber = 0;\n \n     /**\n@@ -54,9 +57,7 @@ public AbstractPageSequence(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FObj#bind(PropertyList)\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         initialPageNumber = pList.get(PR_INITIAL_PAGE_NUMBER).getNumeric();\n@@ -68,16 +69,14 @@ public void bind(PropertyList pList) throws FOPException {\n         referenceOrientation = pList.get(PR_REFERENCE_ORIENTATION).getNumeric();\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FONode#startOfNode()\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         this.pageNumberGenerator = new PageNumberGenerator(\n                 format, groupingSeparator, groupingSize, letterValue);\n \n     }\n \n-    /** @see org.apache.fop.fo.FONode#endOfNode() */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "sha": "578d74c4ddbaa8a761a9362cb58fff0edec55f46",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ColorProfile.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "patch": "@@ -19,14 +19,14 @@\n \n package org.apache.fop.fo.pagination;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n-import org.xml.sax.Locator;\n-\n /**\n  * The fo:color-profile formatting object.\n  * This loads the color profile when needed and resolves a requested color.\n@@ -39,15 +39,15 @@\n     // End of property values\n \n     /**\n+     * Creates a new color-profile element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public ColorProfile(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         src = pList.get(PR_SRC).getString();\n         colorProfileName = pList.get(PR_COLOR_PROFILE_NAME).getString();\n@@ -59,12 +59,15 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL 1.0/FOP: EMPTY (no child nodes permitted)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n      * Return the \"color-profile-name\" property.\n+     * @return the color-profile-name property\n      */\n     public String getColorProfileName() {\n         return colorProfileName;\n@@ -75,9 +78,7 @@ public String getLocalName() {\n         return \"color-profile\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_COLOR_PROFILE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "sha": "6067b55c53b2d345657916bb9f5de82b4a8c71bb",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "patch": "@@ -45,15 +45,15 @@\n     // End of property values\n     \n     /**\n+     * Creates a new conditional-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public ConditionalPageMasterReference(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n         pagePosition = pList.get(PR_PAGE_POSITION).getEnum();\n@@ -65,9 +65,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         getConcreteParent().addConditionalPageMasterReference(this);\n     }\n@@ -81,8 +79,10 @@ private RepeatablePageMasterAlternatives getConcreteParent() {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-           throws ValidationException {\n-       invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "sha": "a13808324ebaaed421ed66611e1dee88c3a81aa6",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Declarations.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/fo/pagination/Declarations.java",
                "patch": "@@ -42,16 +42,15 @@\n     private Map colorProfiles = null;\n \n     /**\n+     * Creates a new declarations element.\n      * @param parent FONode that is the parent of this object\n      */\n     public Declarations(FONode parent) {\n         super(parent);\n         ((Root) parent).setDeclarations(this);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         // No properties defined for fo:declarations\n     }\n@@ -73,6 +72,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     /**\n      * At the end of this element sort out the children into\n      * a hashmap of color profiles and a list of extension attachments.\n+     * @throws FOPException if there's a problem during processing\n      */\n     protected void endOfNode() throws FOPException {\n         if (firstChild != null) {\n@@ -83,7 +83,8 @@ protected void endOfNode() throws FOPException {\n                     if (!\"\".equals(cp.getColorProfileName())) {\n                         addColorProfile(cp);\n                     } else {\n-                        log.warn(\"color-profile-name required for color profile\");\n+                        getFOValidationEventProducer().missingProperty(this,\n+                                cp.getName(), \"color-profile-name\", locator);\n                     }\n                 } else {\n                     log.debug(\"Ignoring element \" + node.getName() \n@@ -100,22 +101,18 @@ private void addColorProfile(ColorProfile cp) {\n         }\n         if (colorProfiles.get(cp.getColorProfileName()) != null) {\n             // duplicate names\n-            log.warn(\"Duplicate fo:color-profile profile name: \"\n-                    + cp.getColorProfileName());\n+            getFOValidationEventProducer().colorProfileNameNotUnique(this,\n+                    cp.getName(), cp.getColorProfileName(), locator);\n         }\n         colorProfiles.put(cp.getColorProfileName(), cp);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"declarations\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_DECLARATIONS;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "sha": "3eec2897a7a8533c13d8ce857f00db654bc461ff",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Flow.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Flow.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 24,
                "filename": "src/java/org/apache/fop/fo/pagination/Flow.java",
                "patch": "@@ -45,16 +45,12 @@ public Flow(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         flowName = pList.get(PR_FLOW_NAME).getString();\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         if (flowName == null || flowName.equals(\"\")) {\n             missingPropertyError(\"flow-name\");\n@@ -80,10 +76,7 @@ protected void startOfNode() throws FOPException {\n         getFOEventHandler().startFlow(this);\n     }\n \n-    /**\n-     * Make sure content model satisfied, if so then tell the\n-     * FOEventHandler that we are at the end of the flow.\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (!blockItemFound) {\n             missingChildElementError(\"marker* (%block;)+\");\n@@ -96,21 +89,21 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n \n-    /**\n-     * @return true (Flow can generate reference areas)\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }\n@@ -125,9 +118,7 @@ public String getLocalName() {\n         return \"flow\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_FLOW;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Flow.java",
                "sha": "2ee77ff0a439e57e222a8d425d49b20129c2256d",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 40,
                "filename": "src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "patch": "@@ -46,31 +46,27 @@\n     private Map pageSequenceMasters;\n \n     /**\n+     * Creates a new layout-master-set element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public LayoutMasterSet(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         // No properties in layout-master-set.\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         getRoot().setLayoutMasterSet(this);\n         simplePageMasters = new java.util.HashMap();\n         pageSequenceMasters = new java.util.HashMap();\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (firstChild == null) {\n             missingChildElementError(\"(simple-page-master|page-sequence-master)+\");\n@@ -83,14 +79,12 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (simple-page-master|page-sequence-master)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+            throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (!localName.equals(\"simple-page-master\") \n                 && !localName.equals(\"page-sequence-master\")) {   \n                     invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -104,23 +98,20 @@ private void checkRegionNames() throws ValidationException {\n         Map allRegions = new java.util.HashMap();\n         for (Iterator spm = simplePageMasters.values().iterator();\n                 spm.hasNext();) {\n-            SimplePageMaster simplePageMaster =\n-                (SimplePageMaster)spm.next();\n+            SimplePageMaster simplePageMaster\n+                = (SimplePageMaster)spm.next();\n             Map spmRegions = simplePageMaster.getRegions();\n             for (Iterator e = spmRegions.values().iterator();\n                     e.hasNext();) {\n                 Region region = (Region) e.next();\n                 if (allRegions.containsKey(region.getRegionName())) {\n-                    String defaultRegionName =\n-                        (String) allRegions.get(region.getRegionName());\n+                    String defaultRegionName\n+                        = (String) allRegions.get(region.getRegionName());\n                     if (!defaultRegionName.equals(region.getDefaultRegionName())) {\n-                        throw new ValidationException(\"Region-name (\"\n-                                               + region.getRegionName()\n-                                               + \") is being mapped to multiple \"\n-                                               + \"region-classes (\"\n-                                               + defaultRegionName + \" and \"\n-                                               + region.getDefaultRegionName()\n-                                               + \")\", locator);\n+                        getFOValidationEventProducer().regionNameMappedToMultipleRegionClasses(this,\n+                                region.getRegionName(),\n+                                defaultRegionName,\n+                                region.getDefaultRegionName(), getLocator());\n                     }\n                 }\n                 allRegions.put(region.getRegionName(),\n@@ -141,21 +132,16 @@ protected void addSimplePageMaster(SimplePageMaster sPM)\n         // check for duplication of master-name\n         String masterName = sPM.getMasterName();\n         if (existsName(masterName)) {\n-            throw new ValidationException(\"'master-name' (\"\n-               + masterName\n-               + \") must be unique \"\n-               + \"across page-masters and page-sequence-masters\", sPM.getLocator());\n+            getFOValidationEventProducer().masterNameNotUnique(this,\n+                    getName(),\n+                    masterName, sPM.getLocator());\n         }\n         this.simplePageMasters.put(masterName, sPM);\n     }\n \n     private boolean existsName(String masterName) {\n-        if (simplePageMasters.containsKey(masterName)\n-                || pageSequenceMasters.containsKey(masterName)) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return (simplePageMasters.containsKey(masterName)\n+                || pageSequenceMasters.containsKey(masterName));\n     }\n \n     /**\n@@ -181,10 +167,9 @@ protected void addPageSequenceMaster(String masterName,\n                 throws ValidationException {\n         // check against duplication of master-name\n         if (existsName(masterName)) {\n-            throw new ValidationException(\"'master-name' (\"\n-               + masterName\n-               + \") must be unique \"\n-               + \"across page-masters and page-sequence-masters\", pSM.getLocator());\n+            getFOValidationEventProducer().masterNameNotUnique(this,\n+                    getName(),\n+                    masterName, pSM.getLocator());\n         }\n         this.pageSequenceMasters.put(masterName, pSM);\n     }\n@@ -220,9 +205,7 @@ public String getLocalName() {\n         return \"layout-master-set\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_LAYOUT_MASTER_SET;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "sha": "1b57be57d27f0bb64a283bc4cf016854f3b0d977",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "patch": "@@ -43,7 +43,7 @@\n     private int minPadding = 0;    // for decimal formats\n \n     // preloaded strings of zeros\n-    private String zeros[] = {\n+    private String[] zeros = {\n         \"\", \"0\", \"00\", \"000\", \"0000\", \"00000\"\n     };\n \n@@ -128,10 +128,10 @@ public String makeFormattedPageNumber(int number) {\n     }\n \n     private String makeRoman(int num) {\n-        int arabic[] = {\n+        int[] arabic = {\n             1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1\n         };\n-        String roman[] = {\n+        String[] roman = {\n             \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\",\n             \"i\"\n         };",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "sha": "50620f6781630338e162b5f58a10d32a6c4a3635",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequence.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 19,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "patch": "@@ -78,9 +78,7 @@ public PageSequence(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         country = pList.get(PR_COUNTRY).getString();\n@@ -93,9 +91,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         flowMap = new java.util.HashMap();\n@@ -105,9 +101,8 @@ protected void startOfNode() throws FOPException {\n             this.pageSequenceMaster\n                     = getRoot().getLayoutMasterSet().getPageSequenceMaster(masterReference);\n             if (this.pageSequenceMaster == null) {\n-                throw new ValidationException(\"master-reference '\" + masterReference\n-                   + \"' for fo:page-sequence matches no\"\n-                   + \" simple-page-master or page-sequence-master\", locator);\n+                getFOValidationEventProducer().masterNotFound(this, getName(),\n+                        masterReference, getLocator());\n             }\n         }\n \n@@ -128,7 +123,7 @@ protected void endOfNode() throws FOPException {\n         XSL Content Model: (title?,static-content*,flow)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (localName.equals(\"title\")) {\n                 if (titleFO != null) {\n@@ -149,8 +144,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -184,18 +177,15 @@ private void addFlow(Flow flow) throws ValidationException {\n         String flowName = flow.getFlowName();\n \n         if (hasFlowName(flowName)) {\n-            throw new ValidationException(\"duplicate flow-name \\\"\"\n-                + flowName\n-                + \"\\\" found within fo:page-sequence\", flow.getLocator());\n+            getFOValidationEventProducer().duplicateFlowNameInPageSequence(this, flow.getName(),\n+                    flowName, flow.getLocator());\n         }\n \n         if (!getRoot().getLayoutMasterSet().regionNameExists(flowName) \n             && !flowName.equals(\"xsl-before-float-separator\") \n             && !flowName.equals(\"xsl-footnote-separator\")) {\n-                throw new ValidationException(\"flow-name \\\"\"\n-                    + flowName\n-                    + \"\\\" could not be mapped to a region-name in the\"\n-                    + \" layout-master-set\", flow.getLocator());\n+            getFOValidationEventProducer().flowNameNotMapped(this, flow.getName(),\n+                    flowName, flow.getLocator());\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "sha": "3d155a1da4d6c7a5f6e26ea9f652e8e6a903592d",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 20,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n \n /**\n  * The page-sequence-master formatting object.\n@@ -53,6 +54,8 @@\n     // but the actual FO's are MasterReferences.\n \n     /**\n+     * Creates a new page-sequence-master element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public PageSequenceMaster(FONode parent) {\n@@ -95,20 +98,18 @@ protected void endOfNode() throws FOPException {\n      *     repeatable-page-master-alternatives)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (!localName.equals(\"single-page-master-reference\") \n                 && !localName.equals(\"repeatable-page-master-reference\")\n                 && !localName.equals(\"repeatable-page-master-alternatives\")) {   \n                     invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n     /**\n-     * Adds a new suqsequence specifier to the page sequence master.\n+     * Adds a new subsequence specifier to the page sequence master.\n      * @param pageMasterReference the subsequence to add\n      */\n     protected void addSubsequenceSpecifier(SubSequenceSpecifier pageMasterReference) {\n@@ -199,8 +200,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         if (currentSubSequence == null) {\n             currentSubSequence = getNextSubSequence();\n             if (currentSubSequence == null) {\n-                throw new FOPException(\"no subsequences in page-sequence-master '\"\n-                                       + masterName + \"'\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.missingSubsequencesInPageSequenceMaster(this,\n+                        masterName, getLocator());\n             }\n         }\n         String pageMasterName = currentSubSequence\n@@ -209,14 +212,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         while (pageMasterName == null) {\n             SubSequenceSpecifier nextSubSequence = getNextSubSequence();\n             if (nextSubSequence == null) {\n-                if (!canRecover) {\n-                    throw new FOPException(\"subsequences exhausted in page-sequence-master '\"\n-                                           + masterName\n-                                           + \"', cannot recover\");\n-                }\n-                log.warn(\"subsequences exhausted in page-sequence-master '\"\n-                                 + masterName\n-                                 + \"', using previous subsequence\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.pageSequenceMasterExhausted(this,\n+                        masterName, canRecover, getLocator());\n                 currentSubSequence.reset();\n                 canRecover = false;\n             } else {\n@@ -228,9 +227,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         SimplePageMaster pageMaster = this.layoutMasterSet\n             .getSimplePageMaster(pageMasterName);\n         if (pageMaster == null) {\n-            throw new FOPException(\"No simple-page-master matching '\"\n-                                   + pageMasterName + \"' in page-sequence-master '\"\n-                                   + masterName + \"'\");\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.noMatchingPageMaster(this,\n+                    masterName, pageMasterName, getLocator());\n         }\n         return pageMaster;\n     }\n@@ -240,9 +240,7 @@ public String getLocalName() {\n         return \"page-sequence-master\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_PAGE_SEQUENCE_MASTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "sha": "4258a11398509a56b979de4fb2d04105eaa66241",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "patch": "@@ -22,8 +22,8 @@\n import org.xml.sax.Locator;\n \n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -39,15 +39,14 @@\n     // End of property values\n     \n     /**\n+     * Creates a new page-sequence-wrapper element.\n      * @param parent FONode that is the parent of this object\n      */\n     public PageSequenceWrapper(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         indexClass = pList.get(PR_INDEX_CLASS).getString();\n@@ -59,10 +58,12 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL/FOP: (bookmark+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && (localName.equals(\"page-sequence\") || \n-            localName.equals(\"page-sequence-wrapper\")))) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!(localName.equals(\"page-sequence\")\n+                    || localName.equals(\"page-sequence-wrapper\"))) {\n                 invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n@@ -81,9 +82,7 @@ public String getLocalName() {\n         return \"page-sequence-wrapper\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_PAGE_SEQUENCE_WRAPPER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "sha": "0b3cff276054e78ee3ef48829a1859f094c9e051",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Region.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Region.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 16,
                "filename": "src/java/org/apache/fop/fo/pagination/Region.java",
                "patch": "@@ -30,7 +30,6 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n-import org.apache.fop.fo.expr.PropertyException;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n \n /**\n@@ -50,16 +49,16 @@\n     private SimplePageMaster layoutMaster;\n \n     /**\n+     * Creates a new Region.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected Region(FONode parent) {\n         super(parent);\n         layoutMaster = (SimplePageMaster) parent;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         commonBorderPaddingBackground = pList.getBorderPaddingBackgroundProps();\n         // clip = pList.get(PR_CLIP);\n@@ -76,18 +75,16 @@ public void bind(PropertyList pList) throws FOPException {\n             // check that name is OK. Not very pretty.\n             if (isReserved(getRegionName())\n                     && !getRegionName().equals(getDefaultRegionName())) {\n-                throw new ValidationException(\"region-name '\" + regionName\n-                        + \"' for \" + this.getName()\n-                        + \" is not permitted.\", locator);\n+                getFOValidationEventProducer().illegalRegionName(this, getName(),\n+                        regionName, getLocator());\n             }\n         }\n         \n         //TODO do we need context for getBPPaddingAndBorder() and getIPPaddingAndBorder()?\n-        if (getUserAgent().validateStrictly()\n-                && (getCommonBorderPaddingBackground().getBPPaddingAndBorder(false, null) != 0 \n+        if ((getCommonBorderPaddingBackground().getBPPaddingAndBorder(false, null) != 0 \n                 || getCommonBorderPaddingBackground().getIPPaddingAndBorder(false, null) != 0)) {\n-            throw new PropertyException(\"Border and padding for region \\\"\"\n-                    + regionName + \"\\\" must be '0' (See 6.4.13 in XSL 1.0).\");\n+            getFOValidationEventProducer().nonZeroBorderPaddingOnRegion(this, getName(),\n+                    regionName, true, getLocator());\n         }\n     }\n \n@@ -96,8 +93,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -121,7 +120,7 @@ public abstract Rectangle getViewportRectangle(FODimension pageRefRect\n      * @param name a region name to check\n      * @return true if the name parameter is a reserved region name\n      */\n-    protected boolean isReserved(String name) /*throws FOPException*/ {\n+    protected boolean isReserved(String name) {\n         return (name.equals(\"xsl-region-before\")\n                 || name.equals(\"xsl-region-start\")\n                 || name.equals(\"xsl-region-end\")\n@@ -130,9 +129,7 @@ protected boolean isReserved(String name) /*throws FOPException*/ {\n                 || name.equals(\"xsl-footnote-separator\"));\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Region.java",
                "sha": "ded86514bb213967bd43ba97249fd5edb8dcaa6c",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionAfter.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "patch": "@@ -34,15 +34,15 @@\n public class RegionAfter extends RegionBA {\n \n     /**\n+     * Creates a new region-after element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionAfter(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -82,9 +82,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-after\";\n     }\n@@ -94,9 +92,7 @@ public String getLocalName() {\n         return \"region-after\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_AFTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "sha": "2852358b5e86bbec749f8efd49cf5e2b245e400c",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBA.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "patch": "@@ -36,15 +36,15 @@\n     // End of property values\n     \n     /**\n+     * Creates a new region (before or after).\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected RegionBA(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         precedence = pList.get(PR_PRECEDENCE).getEnum();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "sha": "279164a9688e369d7b10bea31a3d4ab727f94445",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBefore.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "patch": "@@ -32,23 +32,22 @@\n  * The fo:region-before element.\n  */\n public class RegionBefore extends RegionBA {\n+\n     /**\n+     * Creates a new region-before element.\n+     * @param parent the parent element\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionBefore(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-before\";\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -91,9 +90,7 @@ public String getLocalName() {\n         return \"region-before\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_BEFORE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "sha": "076737252707ebea9459231498a75e1180be704a",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBody.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "patch": "@@ -43,29 +43,29 @@\n     // End of property values\n \n     /**\n+     * Creates a new region-body element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionBody(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         commonMarginBlock = pList.getMarginBlockProps();\n         columnCount = pList.get(PR_COLUMN_COUNT).getNumeric();\n         columnGap = pList.get(PR_COLUMN_GAP).getLength();\n         \n-        if ((getColumnCount() > 1) && (getOverflow() == EN_SCROLL)) {\n+        if ((getColumnCount() != 1) && (getOverflow() == EN_SCROLL)) {\n             /* This is an error (See XSL Rec, fo:region-body description).\n              * The Rec allows for acting as if \"1\" is chosen in\n              * these cases, but we will need to be able to change Numeric\n              * values in order to do this.\n              */\n-            attributeError(\"If overflow property is set to \\\"scroll\\\",\" \n-                    + \" a column-count other than \\\"1\\\" may not be specified.\");\n+            getFOValidationEventProducer().columnCountErrorOnRegionBodyOverflowScroll(this,\n+                    getName(), getLocator());\n         }\n     }\n \n@@ -93,9 +93,7 @@ public int getColumnGap() {\n         return columnGap.getValue();\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving margins in the page context.\n          * Contrary to normal margins in this case top and bottom margin\n@@ -143,9 +141,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n                     reldims.bpd - before - after);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-body\";\n     }\n@@ -155,9 +151,7 @@ public String getLocalName() {\n         return \"region-body\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_BODY;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "sha": "9700e72fc057565fbff8b4eb675d0c7e6d37d9f1",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionEnd.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "patch": "@@ -22,26 +22,26 @@\n // Java\n import java.awt.Rectangle;\n \n-// FOP\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.LengthBase;\n import org.apache.fop.datatypes.SimplePercentBaseContext;\n+import org.apache.fop.fo.FONode;\n \n /**\n  * The fo:region-end element.\n  */\n public class RegionEnd extends RegionSE {\n+\n     /**\n+     * Creates a new region-end element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionEnd(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -80,9 +80,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-end\";\n     }\n@@ -92,9 +90,7 @@ public String getLocalName() {\n         return \"region-end\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_END;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "sha": "13f65d71ae9700cfd26487f6cbe56895e172922b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionSE.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "patch": "@@ -35,15 +35,15 @@\n     // End of property values\n \n     /**\n+     * Creates a new region (start or end).\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected RegionSE(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "sha": "183b44342b490548b2224d88e6dd88c53df7e0ac",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionStart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "patch": "@@ -32,16 +32,17 @@\n  * The fo:region-start element.\n  */\n public class RegionStart extends RegionSE {\n+\n     /**\n+     * Creates a new region-start element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionStart(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -77,9 +78,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-start\";\n     }\n@@ -89,9 +88,7 @@ public String getLocalName() {\n         return \"region-start\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_START;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "sha": "7a69cfdacffb3dfe0402f42177b72fe8b7083909",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 28,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "patch": "@@ -52,38 +52,29 @@\n     private boolean hasPagePositionOnly = false;\n \n     /**\n+     * Creates a new repeatable-page-master-alternatives element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RepeatablePageMasterAlternatives(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         maximumRepeats = pList.get(PR_MAXIMUM_REPEATS);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         conditionalPageMasterRefs = new java.util.ArrayList();\n \n-        if (parent.getName().equals(\"fo:page-sequence-master\")) {\n-            PageSequenceMaster pageSequenceMaster = (PageSequenceMaster)parent;\n-            pageSequenceMaster.addSubsequenceSpecifier(this);\n-        } else {\n-            throw new ValidationException(\"fo:repeatable-page-master-alternatives \"\n-                                   + \"must be child of fo:page-sequence-master, not \"\n-                                   + parent.getName(), locator);\n-        }\n+        assert parent.getName().equals(\"fo:page-sequence-master\"); //Validation by the parent \n+        PageSequenceMaster pageSequenceMaster = (PageSequenceMaster)parent;\n+        pageSequenceMaster.addSubsequenceSpecifier(this);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (firstChild == null) {\n            missingChildElementError(\"(conditional-page-master-reference+)\");\n@@ -95,10 +86,11 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (conditional-page-master-reference+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI)\n-                && localName.equals(\"conditional-page-master-reference\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"conditional-page-master-reference\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n@@ -117,11 +109,7 @@ public int getMaximumRepeats() {\n         }\n     }\n \n-    /**\n-     * Get the next matching page master from the conditional\n-     * page master references.\n-     * @see org.apache.fop.fo.pagination.SubSequenceSpecifier\n-     */\n+    /** {@inheritDoc} */\n     public String getNextPageMasterName(boolean isOddPage,\n                                         boolean isFirstPage,\n                                         boolean isLastPage,\n@@ -183,12 +171,11 @@ public boolean hasPagePositionLast() {\n     }\n     \n     /** {@inheritDoc} */\n-    /** @see org.apache.fop.fo.pagination.SubSequenceSpecifier#hasPagePositionOnly() */\n     public boolean hasPagePositionOnly() {\n         return this.hasPagePositionOnly;\n     }\n     \n-    /** @see org.apache.fop.fo.FONode#getLocalName() */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"repeatable-page-master-alternatives\";\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "sha": "509b81f21ad17cf3aa7fcbe7e3a6d4905cf4b2ba",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "patch": "@@ -47,15 +47,15 @@\n     private int numberConsumed = 0;\n \n     /**\n+     * Creates a new repeatable-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RepeatablePageMasterReference(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n         maximumRepeats = pList.get(PR_MAXIMUM_REPEATS);\n@@ -65,9 +65,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         PageSequenceMaster pageSequenceMaster = (PageSequenceMaster) parent;\n \n@@ -83,13 +81,13 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getNextPageMasterName(boolean isOddPage,\n                                         boolean isFirstPage,\n                                         boolean isLastPage,",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "sha": "87dc248c06111edc85937a2a3f4c7c1e23b84352",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Root.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Root.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/pagination/Root.java",
                "patch": "@@ -25,7 +25,6 @@\n import org.xml.sax.Locator;\n \n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.ElementMapping;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n@@ -62,7 +61,9 @@\n      */\n     private FOEventHandler foEventHandler = null;\n      \n-     /**\n+    /**\n+     * Creates a new root element.\n+     * @param parent the parent node (must be null)\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public Root(FONode parent) {\n@@ -137,13 +138,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     }\n     \n \n-    /** @inheritDoc */\n-    protected void validateChildNode(Locator loc, FONode child) throws ValidationException {\n-        if (child instanceof AbstractPageSequence) {\n-            pageSequenceFound = true;\n-        }\n-    }\n-\n     /**\n      * Sets the FOEventHandler object that this Root is attached to\n      * @param foEventHandler the FOEventHandler object\n@@ -291,9 +285,7 @@ public BookmarkTree getBookmarkTree() {\n         return bookmarkTree;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public Root getRoot() {\n         return this;\n     }\n@@ -303,9 +295,7 @@ public String getLocalName() {\n         return \"root\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_ROOT;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Root.java",
                "sha": "1cff9c3d600b0870bc5fb5d4aa1a67a0fa655064",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SideRegion.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "patch": "@@ -31,7 +31,11 @@\n \n     private Length extent;\n     \n-    /** @see org.apache.fop.fo.FONode#FONode(FONode) */\n+    /**\n+     * Creates a new side region.\n+     * @param parent the parent node\n+     * @see org.apache.fop.fo.FONode#FONode(FONode)\n+     */\n     protected SideRegion(FONode parent) {\n         super(parent);\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "sha": "552ca871b18cba977a1a843762f827d4bb2e3476",
                "status": "modified"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "changes": 130,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 69,
                "filename": "src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "patch": "@@ -63,15 +63,15 @@\n     private boolean hasRegionEnd = false;\n \n     /**\n+     * Creates a new simple-page-master element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public SimplePageMaster(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         commonMarginBlock = pList.getMarginBlockProps();\n         masterName = pList.get(PR_MASTER_NAME).getString();\n@@ -85,9 +85,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         LayoutMasterSet layoutMasterSet = (LayoutMasterSet) parent;\n \n@@ -101,9 +99,7 @@ protected void startOfNode() throws FOPException {\n         regions = new HashMap(5);\n     }\n \n-    /**\n-     * Make sure content model satisfied.\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (!hasRegionBody) {\n             missingChildElementError(\n@@ -116,72 +112,70 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (region-body,region-before?,region-after?,region-start?,region-end?)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"region-body\")) {\n-            if (hasRegionBody) {\n-                tooManyNodesError(loc, \"fo:region-body\");\n-            } else {\n-                hasRegionBody = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-before\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-before\");\n-            } else if (hasRegionBefore) {\n-                tooManyNodesError(loc, \"fo:region-before\");\n-            } else if (hasRegionAfter) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-after\");\n-            } else if (hasRegionStart) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-end\");\n-            } else {\n-                hasRegionBody = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-after\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-after\");\n-            } else if (hasRegionAfter) {\n-                tooManyNodesError(loc, \"fo:region-after\");\n-            } else if (hasRegionStart) {\n-                nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-end\");\n-            } else {\n-                hasRegionAfter = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-start\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-start\");\n-            } else if (hasRegionStart) {\n-                tooManyNodesError(loc, \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-start\", \"fo:region-end\");\n-            } else {\n-                hasRegionStart = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-end\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-end\");\n-            } else if (hasRegionEnd) {\n-                tooManyNodesError(loc, \"fo:region-end\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"region-body\")) {\n+                if (hasRegionBody) {\n+                    tooManyNodesError(loc, \"fo:region-body\");\n+                } else {\n+                    hasRegionBody = true;\n+                }\n+            } else if (localName.equals(\"region-before\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-before\");\n+                } else if (hasRegionBefore) {\n+                    tooManyNodesError(loc, \"fo:region-before\");\n+                } else if (hasRegionAfter) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-after\");\n+                } else if (hasRegionStart) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-end\");\n+                } else {\n+                    hasRegionBody = true;\n+                }\n+            } else if (localName.equals(\"region-after\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-after\");\n+                } else if (hasRegionAfter) {\n+                    tooManyNodesError(loc, \"fo:region-after\");\n+                } else if (hasRegionStart) {\n+                    nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-end\");\n+                } else {\n+                    hasRegionAfter = true;\n+                }\n+            } else if (localName.equals(\"region-start\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-start\");\n+                } else if (hasRegionStart) {\n+                    tooManyNodesError(loc, \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-start\", \"fo:region-end\");\n+                } else {\n+                    hasRegionStart = true;\n+                }\n+            } else if (localName.equals(\"region-end\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-end\");\n+                } else if (hasRegionEnd) {\n+                    tooManyNodesError(loc, \"fo:region-end\");\n+                } else {\n+                    hasRegionEnd = true;\n+                }\n             } else {\n-                hasRegionEnd = true;\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void addChildNode(FONode child) throws FOPException {\n         if (child instanceof Region) {\n             addRegion((Region)child);\n@@ -268,9 +262,7 @@ public String getLocalName() {\n         return \"simple-page-master\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_SIMPLE_PAGE_MASTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "sha": "85a5081c8620789ccf0690c7e1253dea5639f22c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "patch": "@@ -46,16 +46,16 @@\n     private int state;\n \n     /**\n+     * Creates a new single-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public SinglePageMasterReference(FONode parent) {\n         super(parent);\n         this.state = FIRST;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n \n@@ -64,9 +64,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         PageSequenceMaster pageSequenceMaster = (PageSequenceMaster) parent;\n         pageSequenceMaster.addSubsequenceSpecifier(this);\n@@ -77,8 +75,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-       invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "sha": "119ec409e97a0ae694d3ee2837f66ac2107bab8e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/StaticContent.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "patch": "@@ -27,24 +27,22 @@\n import org.apache.fop.fo.ValidationException;\n \n /**\n- * Class modelling the fo:static-content object.\n+ * Class modeling the fo:static-content object.\n  */\n public class StaticContent extends Flow {\n \n     /**\n+     * Creates a new static-content element.\n      * @param parent FONode that is the parent of this object\n      */\n     public StaticContent(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         if (getFlowName() == null || getFlowName().equals(\"\")) {\n-            throw new ValidationException(\"A 'flow-name' is required for \"\n-                                   + getName() + \".\", locator);\n+            missingPropertyError(\"flow-name\");\n         }\n         getFOEventHandler().startFlow(this);\n     }\n@@ -66,9 +64,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "sha": "184438b6f068516f48e950e1220035a04f20c853",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Title.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Title.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/Title.java",
                "patch": "@@ -27,14 +27,15 @@\n import org.apache.fop.fo.flow.InlineLevel;\n \n /**\n- * Class modelling the fo:title object.\n+ * Class modeling the fo:title object.\n  */\n public class Title extends InlineLevel {\n     // The value of properties relevant for fo:title.\n     // See superclass InlineLevel\n     // End of property values\n \n     /**\n+     * Creates a new title element.\n      * @param parent FONode that is the parent of this object\n      */\n     public Title(FONode parent) {\n@@ -46,22 +47,20 @@ public Title(FONode parent) {\n         XSL/FOP: (#PCDATA|%inline;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"title\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_TITLE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/Title.java",
                "sha": "f6f625ea806720f18c02e35adc70c2bd67f125bb",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "patch": "@@ -20,10 +20,13 @@\n package org.apache.fop.fo.pagination.bookmarks;\n \n import java.util.ArrayList;\n+import java.util.List;\n+\n import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -68,10 +71,10 @@ public void bind(PropertyList pList) throws FOPException {\n             externalDestination = null;\n         } else if (externalDestination.length() == 0) {\n             // slightly stronger than spec \"should be specified\"\n-            attributeError(\"Missing attribute:  Either external-destination or \" +\n-                \"internal-destination must be specified.\");\n+            getFOValidationEventProducer().missingLinkDestination(this, getName(), locator);\n         } else {\n-            attributeWarning(\"external-destination property not currently supported\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"external-destination\", getLocator());\n         }\n     }\n \n@@ -80,18 +83,20 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL/FOP: (bookmark-title, bookmark*)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"bookmark-title\")) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"bookmark-title\")) {\n                 if (bookmarkTitle != null) {\n                     tooManyNodesError(loc, \"fo:bookmark-title\");\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"bookmark\")) {\n+            } else if (localName.equals(\"bookmark\")) {\n                 if (bookmarkTitle == null) {\n                     nodesOutOfOrderError(loc, \"fo:bookmark-title\", \"fo:bookmark\");\n                 }                \n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**\n@@ -123,10 +128,18 @@ public String getBookmarkTitle() {\n         return bookmarkTitle == null ? \"\" : bookmarkTitle.getTitle();\n     }\n \n+    /**\n+     * Returns the value of the internal-destination property.\n+     * @return the internal-destination\n+     */\n     public String getInternalDestination() {\n         return internalDestination;\n     }\n \n+    /**\n+     * Returns the value of the external-destination property.\n+     * @return the external-destination\n+     */\n     public String getExternalDestination() {\n         return externalDestination;\n     }\n@@ -141,7 +154,11 @@ public boolean showChildItems() {\n         return bShow;\n     }\n \n-    public ArrayList getChildBookmarks() {\n+    /**\n+     * Returns a list of child bookmarks.\n+     * @return the list of child bookmarks\n+     */\n+    public List getChildBookmarks() {\n         return childBookmarks;\n     }\n \n@@ -150,9 +167,7 @@ public String getLocalName() {\n         return \"bookmark\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "sha": "7f55ec51b35f7682b22bb9c4173f72a4c5115bb0",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "patch": "@@ -21,8 +21,8 @@\n \n import org.xml.sax.Locator;\n \n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -45,15 +45,16 @@ public BookmarkTitle(FONode parent) {\n \n     /**\n      * Add the characters to this BookmarkTitle.\n-     * The text data inside the BookmarkTitle xml element \n+     * The text data inside the BookmarkTitle XML element \n      * is used for the BookmarkTitle string.\n      *\n      * @param data the character data\n      * @param start the start position in the data array\n      * @param end the end position in the character array\n-     * @param locator location in fo source file.\n+     * @param pList the currently valid property list\n+     * @param locator location in FO source file.\n      */\n-    protected void addCharacters(char data[], int start, int end,\n+    protected void addCharacters(char[] data, int start, int end,\n                                  PropertyList pList,\n                                  Locator locator) {\n         title += new String(data, start, end - start);\n@@ -64,8 +65,10 @@ protected void addCharacters(char data[], int start, int end,\n         XSL/FOP: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -82,9 +85,7 @@ public String getLocalName() {\n         return \"bookmark-title\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK_TITLE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "sha": "c7024f2aae731d02c1e8e64a9abbad28b4edfc4d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "patch": "@@ -21,6 +21,7 @@\n \n // Java\n import java.util.ArrayList;\n+import java.util.List;\n \n import org.xml.sax.Locator;\n \n@@ -39,15 +40,15 @@\n     private ArrayList bookmarks = new ArrayList();\n \n     /**\n+     * Creates a new bookmark-tree element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public BookmarkTree(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void addChildNode(FONode obj) {\n         if (obj instanceof Bookmark) {\n             bookmarks.add(obj);\n@@ -69,14 +70,19 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (bookmark+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) &&\n-            localName.equals(\"bookmark\"))) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"bookmark\")) {\n                 invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n-    public ArrayList getBookmarks() {\n+    /**\n+     * Returns the root bookmarks.\n+     * @return the root bookmarks\n+     */\n+    public List getBookmarks() {\n         return bookmarks;\n     }\n \n@@ -85,9 +91,7 @@ public String getLocalName() {\n         return \"bookmark-tree\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK_TREE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "sha": "0f1d8a8b7bf19ed1f0d1d368da011eed246a5d9c",
                "status": "modified"
            },
            {
                "additions": 82,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "changes": 82,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontEventAdapter.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.fonts;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * Event listener interface for font-related events. This interface extends FontEventListener\n+ * and EventProducer for integration into FOP's event subsystem.\n+ */\n+public class FontEventAdapter implements FontEventListener {\n+\n+    private EventBroadcaster eventBroadcaster;\n+    \n+    /**\n+     * Creates a new FontEventAdapter.\n+     * @param broadcaster the event broadcaster to send the generated events to\n+     */\n+    public FontEventAdapter(EventBroadcaster broadcaster) {\n+        this.eventBroadcaster = broadcaster;\n+    }\n+    \n+    /**\n+     * Returns the event group ID.\n+     * @return the event group ID\n+     */\n+    protected String getEventGroupID() {\n+        return getClass().getName();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void fontSubstituted(Object source, FontTriplet requested, FontTriplet effective) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"requested\", requested);\n+        params.put(\"effective\", effective);\n+        Event ev = new Event(source, getEventGroupID() + \".fontSubstituted\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void fontLoadingErrorAtAutoDetection(Object source, String fontURL, Exception e) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"fontURL\", fontURL);\n+        params.put(\"e\", e);\n+        Event ev = new Event(source, getEventGroupID() + \".fontLoadingErrorAtAutoDetection\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void glyphNotAvailable(Object source, char ch, String fontName) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"ch\", new Character(ch));\n+        params.put(\"fontName\", fontName);\n+        Event ev = new Event(source, getEventGroupID() + \".glyphNotAvailable\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "sha": "516999f704febd53aa8ba9c2f9934bc97530f11b",
                "status": "added"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontEventListener.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontEventListener.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/FontEventListener.java",
                "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.fonts;\n+\n+\n+/**\n+ * Event listener interface for font-related events.\n+ */\n+public interface FontEventListener {\n+\n+    /**\n+     * Notifies about a font being substituted as the requested one isn't available.\n+     * @param source the event source\n+     * @param requested the requested font triplet\n+     * @param effective the effective font triplet\n+     */\n+    void fontSubstituted(Object source, FontTriplet requested, FontTriplet effective);\n+\n+    /**\n+     * An error occurred while loading a font for auto-detection.\n+     * @param source the event source\n+     * @param fontURL the font URL\n+     * @param e the original exception\n+     */\n+    void fontLoadingErrorAtAutoDetection(Object source, String fontURL, Exception e);\n+\n+    /**\n+     * A glyph has been requested that is not available in the font.\n+     * @param source the event source\n+     * @param ch the character for which the glyph isn't available\n+     * @param fontName the name of the font\n+     */\n+    void glyphNotAvailable(Object source, char ch, String fontName);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontEventListener.java",
                "sha": "512df0ac04cd9912aeacd9676e9e02d816b9dee7",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontInfo.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontInfo.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fonts/FontInfo.java",
                "patch": "@@ -67,6 +67,8 @@\n     /** Cache for Font instances. */\n     private Map fontInstanceCache = new java.util.HashMap();\n     \n+    private FontEventListener eventListener;\n+    \n     /**\n      * Main constructor\n      */\n@@ -77,6 +79,15 @@ public FontInfo() {\n         this.usedFonts = new java.util.HashMap();\n     }\n \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n     /**\n      * Checks if the font setup is valid (At least the ultimate fallback font \n      * must be registered.)\n@@ -158,6 +169,9 @@ private void logDuplicateFont(FontTriplet triplet, boolean replacing,\n     public void addMetrics(String name, FontMetrics metrics) {\n         // add the given metrics as a font with the given name\n \n+        if (metrics instanceof Typeface) {\n+            ((Typeface)metrics).setEventListener(this.eventListener);\n+        }\n         this.fonts.put(name, metrics);\n     }\n \n@@ -364,8 +378,12 @@ private void notifyFontReplacement(FontTriplet replacedKey, FontTriplet newKey)\n         }\n         if (!loggedFontKeys.contains(replacedKey)) {\n             loggedFontKeys.add(replacedKey);\n-            log.warn(\"Font '\" + replacedKey + \"' not found. \"\n-                    + \"Substituting with '\" + newKey + \"'.\");\n+            if (this.eventListener != null) {\n+                this.eventListener.fontSubstituted(this, replacedKey, newKey);\n+            } else {\n+                log.warn(\"Font '\" + replacedKey + \"' not found. \"\n+                        + \"Substituting with '\" + newKey + \"'.\");\n+            }\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/FontInfo.java",
                "sha": "950134eb6da874b495fd62a6f4de28027e88325f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/LazyFont.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/LazyFont.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/LazyFont.java",
                "patch": "@@ -141,6 +141,7 @@ private void load(boolean fail) {\n                     throw new RuntimeException(ioex.getMessage());\n                 }\n             }\n+            realFont.setEventListener(this.eventListener);\n             isMetricsLoaded = true;\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/LazyFont.java",
                "sha": "5490e13f1487afe31ac9fbdef8fdbff56d084eef",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/SingleByteFont.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/fonts/SingleByteFont.java",
                "patch": "@@ -117,18 +117,22 @@ public char mapChar(char c) {\n         }\n         \n         //Give up, character is not available\n-        Character ch = new Character(c);\n-        if (warnedChars == null) {\n-            warnedChars = new java.util.HashSet();\n-        }\n-        if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n-            warnedChars.add(ch);\n-            if (warnedChars.size() == 8) {\n-                log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n-            } else {\n-                log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n-                        + \", \" + Glyphs.charToGlyphName(c)\n-                        + \") not available in font \" + getFontName());\n+        if (this.eventListener != null) {\n+            this.eventListener.glyphNotAvailable(this, c, getFontName());\n+        } else {\n+            Character ch = new Character(c);\n+            if (warnedChars == null) {\n+                warnedChars = new java.util.HashSet();\n+            }\n+            if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n+                warnedChars.add(ch);\n+                if (warnedChars.size() == 8) {\n+                    log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n+                } else {\n+                    log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n+                            + \", \" + Glyphs.charToGlyphName(c)\n+                            + \") not available in font \" + getFontName());\n+                }\n             }\n         }\n         return NOT_FOUND;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "sha": "0a47d52ab82625b3668258ead9b1078f22d8b47a",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/Typeface.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/Typeface.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/Typeface.java",
                "patch": "@@ -30,6 +30,9 @@\n      */\n     private long charMapOps = 0;\n     \n+    /** An optional event listener that receives events such as missing glyphs etc. */\n+    protected FontEventListener eventListener;\n+    \n     /**\n      * Get the encoding of the font.\n      * @return the encoding\n@@ -80,5 +83,14 @@ public int getMaxAscent(int size) {\n         return getAscender(size);\n     }\n     \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/Typeface.java",
                "sha": "b6c78a3b003e3c00c17003f2992d02b3d4c24665",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.fop.fonts.EmbedFontInfo;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontCache;\n+import org.apache.fop.fonts.FontEventListener;\n import org.apache.fop.fonts.FontLoader;\n import org.apache.fop.fonts.FontResolver;\n import org.apache.fop.fonts.FontTriplet;\n@@ -52,6 +53,17 @@\n     /** logging instance */\n     private Log log = LogFactory.getLog(FontInfoFinder.class);\n \n+    private FontEventListener eventListener;\n+    \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n     /**\n      * Attempts to determine FontTriplets from a given CustomFont.\n      * It seems to be fairly accurate but will probably require some tweaking over time\n@@ -180,7 +192,6 @@ private EmbedFontInfo fontInfoFromCustomFont(\n         \n         // try to determine triplet information from font file\n         CustomFont customFont = null;\n-        \n         if (fontUrl.toExternalForm().endsWith(\".ttc\")) {\n             // Get a list of the TTC Font names\n             List ttcNames = null; //List<String>\n@@ -193,7 +204,9 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 FontFileReader reader = new FontFileReader(in);\n                 ttcNames = ttf.getTTCnames(reader);\n             } catch (Exception e) {\n-                log.error(e);\n+                if (this.eventListener != null) {\n+                    this.eventListener.fontLoadingErrorAtAutoDetection(this, fontFileURI, e);\n+                }\n             } finally {\n                 IOUtils.closeQuietly(in);\n             }\n@@ -212,14 +225,16 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 try {\n                     ttfLoader = new TTFFontLoader(fontFileURI, fontName, resolver);\n                     customFont = ttfLoader.getFont();\n+                    if (this.eventListener != null) {\n+                        customFont.setEventListener(this.eventListener);\n+                    }\n                 } catch (Exception e) {\n-                    //TODO Too verbose (it's an error but we don't care if some fonts can't be loaded)\n-                    //if (log.isErrorEnabled()) {\n-                    log.error(\"Unable to load font file: \" + embedUrl + \". Reason: \" + e.getMessage());\n-                    //}\n                     if (fontCache != null) {\n                         fontCache.registerFailedFont(embedUrl, fileLastModified);\n                     }\n+                    if (this.eventListener != null) {\n+                        this.eventListener.fontLoadingErrorAtAutoDetection(this, embedUrl, e);\n+                    }\n                     continue;\n                 }\n                 EmbedFontInfo fi = fontInfoFromCustomFont(fontUrl, customFont, fontCache);\n@@ -233,14 +248,16 @@ private EmbedFontInfo fontInfoFromCustomFont(\n             // The normal case\n             try {\n                 customFont = FontLoader.loadFont(fontUrl, null, resolver);\n+                if (this.eventListener != null) {\n+                    customFont.setEventListener(this.eventListener);\n+                }\n             } catch (Exception e) {\n-                //TODO Too verbose (it's an error but we don't care if some fonts can't be loaded)\n-                //if (log.isErrorEnabled()) {\n-                    log.error(\"Unable to load font file: \" + embedUrl + \". Reason: \" + e.getMessage());\n-                //}\n                 if (fontCache != null) {\n                     fontCache.registerFailedFont(embedUrl, fileLastModified);\n                 }\n+                if (this.eventListener != null) {\n+                    this.eventListener.fontLoadingErrorAtAutoDetection(this, embedUrl, e);\n+                }\n                 return null;\n             }\n             EmbedFontInfo fi = fontInfoFromCustomFont(fontUrl, customFont, fontCache);\n@@ -250,7 +267,6 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 return null;\n             }\n         }\n-        \n \n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "sha": "b223ea7a1ac80176bcb7531fc1ab4eeee0c7c80f",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "patch": "@@ -27,8 +27,11 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.bridge.UserAgent;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import org.apache.xmlgraphics.image.loader.Image;\n import org.apache.xmlgraphics.image.loader.ImageException;\n@@ -40,7 +43,7 @@\n import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n import org.apache.xmlgraphics.util.UnitConv;\n \n-import org.apache.fop.svg.SVGUserAgent;\n+import org.apache.fop.svg.SimpleSVGUserAgent;\n \n /**\n  * This ImageConverter converts SVG images to Java2D.\n@@ -52,6 +55,9 @@\n  */\n public class ImageConverterSVG2G2D extends AbstractImageConverter {\n \n+    /** logger */\n+    private static Log log = LogFactory.getLog(ImageConverterSVG2G2D.class);\n+\n     /** {@inheritDoc} */\n     public Image convert(Image src, Map hints) throws ImageException {\n         checkSourceFlavor(src);\n@@ -67,9 +73,7 @@ public Image convert(Image src, Map hints) throws ImageException {\n         if (ptm != null) {\n             pxToMillimeter = (float)UnitConv.mm2in(ptm.doubleValue());\n         }\n-        SVGUserAgent ua = new SVGUserAgent(\n-                pxToMillimeter,\n-                new AffineTransform());\n+        UserAgent ua = createBatikUserAgent(pxToMillimeter);\n         GVTBuilder builder = new GVTBuilder();\n         final BridgeContext ctx = new BridgeContext(ua);\n \n@@ -107,6 +111,25 @@ public Dimension getImageSize() {\n         return g2dImage;\n     }\n \n+    /**\n+     * Creates a user agent for Batik. Override to provide your own user agent.\n+     * @param pxToMillimeter the source resolution (in px per millimeter)\n+     * @return the newly created user agent\n+     */\n+    protected SimpleSVGUserAgent createBatikUserAgent(float pxToMillimeter) {\n+        return new SimpleSVGUserAgent(\n+                pxToMillimeter,\n+                new AffineTransform()) {\n+\n+            /** {@inheritDoc} */\n+            public void displayMessage(String message) {\n+                //TODO Refine and pipe through to caller\n+                log.debug(message);\n+            }\n+            \n+        };\n+    }\n+\n     /** {@inheritDoc} */\n     public ImageFlavor getSourceFlavor() {\n         return ImageFlavor.XML_DOM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "sha": "be0995d8c116c71bd21805b72fca38f2ceb34254",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "patch": "@@ -32,6 +32,7 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.UnitProcessor;\n+import org.apache.batik.bridge.UserAgent;\n import org.apache.batik.dom.svg.SAXSVGDocumentFactory;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.dom.svg.SVGOMDocument;\n@@ -46,7 +47,7 @@\n import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n import org.apache.xmlgraphics.util.MimeConstants;\n \n-import org.apache.fop.svg.SVGUserAgent;\n+import org.apache.fop.svg.SimpleSVGUserAgent;\n import org.apache.fop.util.UnclosableInputStream;\n \n /**\n@@ -154,8 +155,15 @@ private ImageInfo getImage(String uri, Source src,\n         private ImageInfo createImageInfo(String uri, ImageContext context, SVGDocument doc) {\n             Element e = doc.getRootElement();\n             float pxUnitToMillimeter = 25.4f / context.getSourceResolution(); \n-            SVGUserAgent userAg = new SVGUserAgent(pxUnitToMillimeter,\n-                        new AffineTransform());\n+            UserAgent userAg = new SimpleSVGUserAgent(pxUnitToMillimeter,\n+                        new AffineTransform()) {\n+\n+                /** {@inheritDoc} */\n+                public void displayMessage(String message) {\n+                    log.debug(message);\n+                }\n+                \n+            };\n             BridgeContext ctx = new BridgeContext(userAg);\n             UnitProcessor.Context uctx = UnitProcessor.createContext(ctx, e);\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "sha": "20557a644b8328dcffb86f3d598d53d615aefda3",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "patch": "@@ -198,11 +198,11 @@ protected PageProvider getPageProvider() {\n     }\n     \n     /**\n-     * Returns a PageBreakingLayoutListener for the PageBreakingAlgorithm to notify about layout\n-     * problems.\n+     * Creates and returns a PageBreakingLayoutListener for the PageBreakingAlgorithm to\n+     * notify about layout problems.\n      * @return the listener instance or null if no notifications are needed\n      */\n-    protected PageBreakingAlgorithm.PageBreakingLayoutListener getLayoutListener() {\n+    protected PageBreakingAlgorithm.PageBreakingLayoutListener createLayoutListener() {\n         return null;\n     }\n     \n@@ -320,7 +320,7 @@ public void doLayout(int flowBPD, boolean autoHeight) {\n                 log.debug(\"PLM> start of algorithm (\" + this.getClass().getName() \n                         + \"), flow BPD =\" + flowBPD);\n                 PageBreakingAlgorithm alg = new PageBreakingAlgorithm(getTopLevelLM(),\n-                        getPageProvider(), getLayoutListener(),\n+                        getPageProvider(), createLayoutListener(),\n                         alignment, alignmentLast, footnoteSeparatorLength,\n                         isPartOverflowRecoveryActivated(), autoHeight, isSinglePartFavored());\n                 int iOptPageCount;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "sha": "4ef0579f251c8a952012e517059a7af36b8f33a2",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "changes": 44,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "patch": "@@ -35,7 +35,6 @@\n import org.apache.fop.area.Trait;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.Length;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.BlockContainer;\n import org.apache.fop.fo.properties.CommonAbsolutePosition;\n import org.apache.fop.traits.MinOptMax;\n@@ -239,11 +238,11 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n \n         int availableIPD = referenceIPD - getIPIndents();\n         if (getContentAreaIPD() > availableIPD) {\n-            log.warn(FONode.decorateWithContextInfo(\n-                    \"The extent in inline-progression-direction (width) of a block-container is\"\n-                    + \" bigger than the available space (\" \n-                    + getContentAreaIPD() + \"mpt > \" + context.getRefIPD() + \"mpt)\", \n-                    getBlockContainerFO()));\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+            eventProducer.objectTooWide(this, getBlockContainerFO().getName(),\n+                    getContentAreaIPD(), context.getRefIPD(),\n+                    getBlockContainerFO().getLocator());\n         }\n         \n         MinOptMax stackLimit = new MinOptMax(relDims.bpd);\n@@ -378,10 +377,12 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             */\n \n             if (contentOverflows) {\n-                log.warn(\"Contents overflow block-container viewport: clipping\");\n-                if (getBlockContainerFO().getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO Throw layout exception\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (getBlockContainerFO().getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                eventProducer.viewportOverflow(this, getBlockContainerFO().getName(),\n+                        breaker.getOverflowAmount(), needClip(), canRecover,\n+                        getBlockContainerFO().getLocator());\n             }\n         }\n         addKnuthElementsForBorderPaddingAfter(returnList, true);\n@@ -526,10 +527,12 @@ private LinkedList getNextKnuthElementsAbsolute(LayoutContext context, int align\n     \n             //TODO Maybe check for page overflow when autoHeight=true\n             if (!autoHeight & (contentOverflows)) {\n-                log.warn(\"Contents overflow block-container viewport: clipping\");\n-                if (getBlockContainerFO().getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO Throw layout exception\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (getBlockContainerFO().getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                eventProducer.viewportOverflow(this, getBlockContainerFO().getName(),\n+                        breaker.getOverflowAmount(), needClip(), canRecover,\n+                        getBlockContainerFO().getLocator());\n             }\n         }\n \n@@ -602,7 +605,18 @@ public int getDifferenceOfFirstPart() {\n         }\n         \n         public boolean isOverflow() {\n-            return !isEmpty() && (deferredAlg.getPageBreaks().size() > 1);\n+            if (isEmpty()) {\n+                return false;\n+            } else {\n+                return (deferredAlg.getPageBreaks().size() > 1)\n+                    || (deferredAlg.totalWidth - deferredAlg.totalShrink) \n+                            > deferredAlg.getLineWidth();\n+            }\n+        }\n+        \n+        public int getOverflowAmount() {\n+            return (deferredAlg.totalWidth - deferredAlg.totalShrink) \n+                - deferredAlg.getLineWidth();\n         }\n         \n         protected LayoutManager getTopLevelLM() {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "sha": "f01f0e12f4c265ec2c4dcfde94260c847597868f",
                "status": "modified"
            },
            {
                "additions": 168,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "changes": 168,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "patch": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for block-level layout managers.\n+ */\n+public interface BlockLevelEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static BlockLevelEventProducer get(EventBroadcaster broadcaster) {\n+            return (BlockLevelEventProducer)broadcaster.getEventProducerFor(\n+                    BlockLevelEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * The contents of a table-row are too big to fit in the constraints.\n+     * @param source the event source\n+     * @param row the row number\n+     * @param effCellBPD the effective extent in block-progression direction of the cell\n+     * @param maxCellBPD the maximum extent in block-progression direction of the cell\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void rowTooTall(Object source, int row, int effCellBPD, int maxCellBPD, Locator loc);\n+    \n+    /**\n+     * Auto-table layout is not supported, yet.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity INFO\n+     */\n+    void tableFixedAutoWidthNotSupported(Object source, Locator loc);\n+    \n+    /**\n+     * An formatting object is too wide.\n+     * @param source the event source\n+     * @param elementName the formatting object \n+     * @param effIPD the effective extent in inline-progression direction of the table contents\n+     * @param maxIPD the maximum extent in inline-progression direction available\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void objectTooWide(Object source, String elementName, int effIPD, int maxIPD, Locator loc);\n+        \n+    /**\n+     * An overconstrained geometry adjustment rule was triggered (5.3.4, XSL 1.0).\n+     * @param source the event source\n+     * @param elementName the formatting object \n+     * @param amount the amount of the adjustment (in mpt)\n+     * @param loc the location of the error or null\n+     * @event.severity INFO\n+     */\n+    void overconstrainedAdjustEndIndent(Object source, String elementName, int amount, Locator loc);\n+    \n+    /**\n+     * Contents overflow a viewport.\n+     * @param source the event source\n+     * @param elementName the formatting object\n+     * @param amount the amount by which the contents overflow (in mpt)\n+     * @param clip true if the content will be clipped\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws LayoutException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void viewportOverflow(Object source, String elementName, \n+            int amount, boolean clip, boolean canRecover,\n+            Locator loc) throws LayoutException;\n+    \n+    /**\n+     * Contents overflow a region viewport.\n+     * @param source the event source\n+     * @param elementName the formatting object\n+     * @param page the page number/name where the overflow happened\n+     * @param amount the amount by which the contents overflow (in mpt)\n+     * @param clip true if the content will be clipped\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws LayoutException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void regionOverflow(Object source, String elementName,\n+            String page,\n+            int amount, boolean clip, boolean canRecover,\n+            Locator loc) throws LayoutException;\n+    \n+    /**\n+     * Indicates that FOP doesn't support flows that are not mapped to region-body, yet.\n+     * @param source the event source\n+     * @param flowName the flow name\n+     * @param masterName the page master name\n+     * @param loc the location of the error or null\n+     * @throws UnsupportedOperationException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void flowNotMappingToRegionBody(Object source, String flowName, String masterName,\n+            Locator loc) throws UnsupportedOperationException;\n+    \n+    /**\n+     * A page sequence master is exhausted.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void pageSequenceMasterExhausted(Object source, String pageSequenceMasterName,\n+            boolean canRecover, Locator loc) throws FOPException;\n+\n+    /**\n+     * No subsequences in page sequence master.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingSubsequencesInPageSequenceMaster(Object source, String pageSequenceMasterName,\n+            Locator loc) throws FOPException;\n+    \n+    /**\n+     * No single-page-master matching in page sequence master.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param pageMasterName the name of the page master not matching\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noMatchingPageMaster(Object source, String pageSequenceMasterName,\n+            String pageMasterName, Locator loc) throws FOPException;\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "sha": "c31a704773abecc9280908261810b7a617faefcb",
                "status": "added"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "patch": "@@ -201,6 +201,10 @@ protected int updateContentAreaIPDwithOverconstrainedAdjust() {\n         if (ipd < 0) {\n             //5.3.4, XSL 1.0, Overconstrained Geometry\n             log.debug(\"Adjusting end-indent based on overconstrained geometry rules for \" + fobj);\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getFObj().getUserAgent().getEventBroadcaster());\n+            eventProducer.overconstrainedAdjustEndIndent(this,\n+                    getFObj().getName(), ipd, getFObj().getLocator());\n             endIndent += ipd;\n             ipd = 0;\n             //TODO Should we skip layout for a block that has ipd=0?\n@@ -212,14 +216,18 @@ protected int updateContentAreaIPDwithOverconstrainedAdjust() {\n     /**\n      * Sets the content area IPD by directly supplying the value. \n      * end-indent is adjusted based on overconstrained geometry rules, if necessary.\n-     * \n+     * @param contentIPD the IPD of the content\n      * @return the resulting content area IPD\n      */\n     protected int updateContentAreaIPDwithOverconstrainedAdjust(int contentIPD) {\n         int ipd = referenceIPD - (contentIPD + (startIndent + endIndent));\n         if (ipd < 0) {\n             //5.3.4, XSL 1.0, Overconstrained Geometry\n             log.debug(\"Adjusting end-indent based on overconstrained geometry rules for \" + fobj);\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getFObj().getUserAgent().getEventBroadcaster());\n+            eventProducer.overconstrainedAdjustEndIndent(this,\n+                    getFObj().getName(), ipd, getFObj().getLocator());\n             endIndent += ipd;\n         }\n         setContentAreaIPD(contentIPD);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "sha": "cb6db6b012476c8f6a2f8f1a93fe65a951f51184",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import java.awt.Dimension;\n import java.awt.Rectangle;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n@@ -46,6 +47,7 @@\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExternalDocument;\n import org.apache.fop.layoutmgr.inline.ImageLayout;\n@@ -140,17 +142,28 @@ public void activateLayout() {\n                         pageIndex++;\n                     }\n                 } catch (URISyntaxException e) {\n-                    log.error(\"Error parsing or constructing URIs based on URI: \" + uri);\n+                    getResourceEventProducer().uriError(this, uri, e,\n+                            getExternalDocument().getLocator());\n                     return;\n                 }\n             }\n+        } catch (FileNotFoundException fnfe) {\n+            getResourceEventProducer().imageNotFound(this, uri, fnfe,\n+                    getExternalDocument().getLocator());\n         } catch (IOException ioe) {\n-            log.error(\"Image not available: \" + uri, ioe);\n+            getResourceEventProducer().imageIOError(this, uri, ioe,\n+                    getExternalDocument().getLocator());\n         } catch (ImageException ie) {\n-            log.error(\"Error while inspecting image: \" + uri + \" (\" + ie.getMessage() + \")\");\n+            getResourceEventProducer().imageError(this, uri, ie,\n+                    getExternalDocument().getLocator());\n         }\n     }\n \n+    private ResourceEventProducer getResourceEventProducer() {\n+        return ResourceEventProducer.Provider.get(\n+                getExternalDocument().getUserAgent().getEventBroadcaster());\n+    }\n+\n     private void makePageForImage(ImageInfo info, ImageLayout layout) {\n         this.imageLayout = layout;\n         curPage = makeNewPage(false, false);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "sha": "086d91c313ee63e09eec8cf6edc942b7adf894fb",
                "status": "modified"
            },
            {
                "additions": 105,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "changes": 105,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/LayoutException.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "patch": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+\n+/**\n+ * Exception thrown by FOP if an unrecoverable layout error occurs. An example: An area overflows\n+ * a viewport that has overflow=\"error-if-overflow\".\n+ * \n+ * @todo Discuss if this should become a checked exception.\n+ */\n+public class LayoutException extends RuntimeException {\n+\n+    private static final long serialVersionUID = 5157080040923740433L;\n+    \n+    private String localizedMessage;\n+    private LayoutManager layoutManager;\n+\n+    /**\n+     * Constructs a new layout exception with the specified detail message.\n+     * @param message the detail message.\n+     */\n+    public LayoutException(String message) {\n+        this(message, null);\n+    }\n+\n+    /**\n+     * Constructs a new layout exception with the specified detail message.\n+     * @param message the detail message\n+     * @param lm the layout manager that throws the exception\n+     */\n+    public LayoutException(String message, LayoutManager lm) {\n+        super(message);\n+        this.layoutManager = lm;\n+    }\n+\n+    /**\n+     * Sets the localized message for this exception.\n+     * @param msg the localized message\n+     */\n+    public void setLocalizedMessage(String msg) {\n+        this.localizedMessage = msg;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        if (this.localizedMessage != null) {\n+            return this.localizedMessage;\n+        } else {\n+            return super.getLocalizedMessage();\n+        }\n+    }\n+\n+    /**\n+     * Returns the layout manager that detected the problem.\n+     * @return the layout manager (or null)\n+     */\n+    public LayoutManager getLayoutManager() {\n+        return this.layoutManager;\n+    }\n+    \n+    /** Exception factory for {@link LayoutException}. */\n+    public static class LayoutExceptionFactory implements ExceptionFactory {\n+\n+        /** {@inheritDoc} */\n+        public Throwable createException(Event event) {\n+            Object source = event.getSource();\n+            LayoutManager lm = (source instanceof LayoutManager) ? (LayoutManager)source : null;\n+            String msg = EventFormatter.format(event, Locale.ENGLISH);\n+            LayoutException ex = new LayoutException(msg, lm);\n+            if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+                ex.setLocalizedMessage(EventFormatter.format(event));\n+            }\n+            return ex;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public Class getExceptionClass() {\n+            return LayoutException.class;\n+        }\n+        \n+    }    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "sha": "350cc758a368536b1523723c9bc65226b6145eac",
                "status": "added"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreaker.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.fop.area.Footnote;\n import org.apache.fop.area.PageViewport;\n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.pagination.PageSequence;\n import org.apache.fop.fo.pagination.Region;\n@@ -79,27 +78,25 @@ protected PageProvider getPageProvider() {\n         return pslm.getPageProvider();\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected PageBreakingLayoutListener getLayoutListener() {\n+    /** {@inheritDoc} */\n+    protected PageBreakingLayoutListener createLayoutListener() {\n         return new PageBreakingLayoutListener() {\n \n-            public void notifyOverflow(int part, FObj obj) {\n+            public void notifyOverflow(int part, int amount, FObj obj) {\n                 Page p = pageProvider.getPage(\n                             false, part, PageProvider.RELTO_CURRENT_ELEMENT_LIST);\n                 RegionBody body = (RegionBody)p.getSimplePageMaster().getRegion(\n                         Region.FO_REGION_BODY);\n-                String err = FONode.decorateWithContextInfo(\n-                        \"Content of the region-body on page \" \n-                        + p.getPageViewport().getPageNumberString() \n-                        + \" overflows the available area in block-progression dimension.\", \n-                        obj);\n-                if (body.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW) {\n-                    throw new RuntimeException(err);\n-                } else {\n-                    log.warn(err);\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        body.getUserAgent().getEventBroadcaster());\n+\n+                boolean canRecover = (body.getOverflow() != Constants.EN_ERROR_IF_OVERFLOW);\n+                boolean needClip = (body.getOverflow() == Constants.EN_HIDDEN\n+                        || body.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW);\n+                eventProducer.regionOverflow(this, body.getName(),\n+                        p.getPageViewport().getPageNumberString(),\n+                        amount, needClip, canRecover,\n+                        body.getLocator());\n             }\n             \n         };\n@@ -297,7 +294,7 @@ private void doPhase3WithLastPage(PageBreakingAlgorithm alg, int partCount,\n         //Restart last page\n         PageBreakingAlgorithm algRestart = new PageBreakingAlgorithm(\n                 getTopLevelLM(),\n-                getPageProvider(), getLayoutListener(),\n+                getPageProvider(), createLayoutListener(),\n                 alg.getAlignment(), alg.getAlignmentLast(), \n                 footnoteSeparatorLength,\n                 isPartOverflowRecoveryActivated(), false, false);\n@@ -356,7 +353,7 @@ private void doPhase3WithColumnBalancing(PageBreakingAlgorithm alg, int partCoun\n         //Restart last page\n         PageBreakingAlgorithm algRestart = new BalancingColumnBreakingAlgorithm(\n                 getTopLevelLM(),\n-                getPageProvider(), getLayoutListener(),\n+                getPageProvider(), createLayoutListener(),\n                 alignment, Constants.EN_START, footnoteSeparatorLength,\n                 isPartOverflowRecoveryActivated(),\n                 pslm.getCurrentPV().getBodyRegion().getColumnCount());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "sha": "d6be75758e9bb54b62daff349478c4791c4f6aba",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 25,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.commons.logging.LogFactory;\n \n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.layoutmgr.AbstractBreaker.PageBreakPosition;\n import org.apache.fop.traits.MinOptMax;\n@@ -289,7 +288,7 @@ protected int restartFrom(KnuthNode restartingNode, int currentIndex) {\n \n     private void resetFootnotes(LinkedList elementLists) {\n         for (int i = 0; i < elementLists.size(); i++) {\n-            LinkedList removedList = (LinkedList) footnotesList.remove(footnotesList.size() - 1);\n+            /*LinkedList removedList = (LinkedList)*/footnotesList.remove(footnotesList.size() - 1);\n             lengthList.remove(lengthList.size() - 1);\n \n             // update totalFootnotesLength\n@@ -332,11 +331,13 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n                     actualWidth += allFootnotes;\n                     insertedFootnotesLength = pageNode.totalFootnotes + allFootnotes;\n                     footnoteListIndex = footnotesList.size() - 1;\n-                    footnoteElementIndex = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n-                } else if (((canDeferOldFootnotes = checkCanDeferOldFootnotes(pageNode, elementIndex))\n+                    footnoteElementIndex\n+                        = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n+                } else if (((canDeferOldFootnotes\n+                                = checkCanDeferOldFootnotes(pageNode, elementIndex))\n                             || newFootnotes)\n-                           && (footnoteSplit = getFootnoteSplit(pageNode, getLineWidth() - actualWidth,\n-                                                                canDeferOldFootnotes)) > 0) {\n+                           && (footnoteSplit = getFootnoteSplit(pageNode,\n+                                   getLineWidth() - actualWidth, canDeferOldFootnotes)) > 0) {\n                     // it is allowed to break or even defer footnotes if either:\n                     //  - there are new footnotes in the last piece of content, and\n                     //    there is space to add at least a piece of the first one\n@@ -356,7 +357,8 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n                     actualWidth += allFootnotes;\n                     insertedFootnotesLength = pageNode.totalFootnotes + allFootnotes;\n                     footnoteListIndex = footnotesList.size() - 1;\n-                    footnoteElementIndex = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n+                    footnoteElementIndex\n+                        = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n                 }\n             } else {\n                 // all footnotes have already been placed on previous pages\n@@ -381,7 +383,8 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n      */\n     private boolean checkCanDeferOldFootnotes(KnuthPageNode node, int contentElementIndex) {\n         return (noBreakBetween(node.position, contentElementIndex)\n-                && deferredFootnotes(node.footnoteListIndex, node.footnoteElementIndex, node.totalFootnotes));\n+                && deferredFootnotes(node.footnoteListIndex,\n+                        node.footnoteElementIndex, node.totalFootnotes));\n     }\n \n     /**\n@@ -455,7 +458,8 @@ private boolean deferredFootnotes(int listIndex, int elementIndex, int length) {\n      * @param availableLength available space for footnotes\n      * @param canDeferOldFootnotes\n      */\n-    private int getFootnoteSplit(KnuthPageNode activeNode, int availableLength, boolean canDeferOldFootnotes) {\n+    private int getFootnoteSplit(KnuthPageNode activeNode, int availableLength,\n+                boolean canDeferOldFootnotes) {\n         return getFootnoteSplit(activeNode.footnoteListIndex,\n                                 activeNode.footnoteElementIndex,\n                                 activeNode.totalFootnotes,\n@@ -520,7 +524,8 @@ private int getFootnoteSplit(int prevListIndex, int prevElementIndex, int prevLe\n             }\n \n             // try adding a split of the next note\n-            noteListIterator = ((LinkedList) footnotesList.get(listIndex)).listIterator(elementIndex);\n+            noteListIterator = ((LinkedList) footnotesList.get(listIndex))\n+                    .listIterator(elementIndex);\n \n             int prevSplitLength = 0;\n             int prevIndex = -1;\n@@ -754,14 +759,6 @@ public void removeAllPageBreaks() {\n         }\n     }\n     \n-    private int getPartCount() {\n-        if (pageBreaks == null) {\n-            return 0;\n-        } else {\n-            return pageBreaks.size();\n-        }\n-    }\n-    \n     public void updateData1(int total, double demerits) {\n     }\n \n@@ -774,12 +771,7 @@ public void updateData2(KnuthNode bestActiveNode,\n         if (difference + bestActiveNode.availableShrink < 0) {\n             if (!autoHeight) {\n                 if (layoutListener != null) {\n-                    layoutListener.notifyOverflow(bestActiveNode.line - 1, getFObj());\n-                } else if (log.isWarnEnabled()) {\n-                    log.warn(FONode.decorateWithContextInfo(\n-                            \"Part/page \" + (bestActiveNode.line - 1) \n-                            + \" overflows the available area in block-progression dimension.\", \n-                            getFObj()));\n+                    layoutListener.notifyOverflow(bestActiveNode.line - 1, -difference, getFObj());\n                 }\n             }\n         }\n@@ -890,9 +882,10 @@ protected int getLineWidth(int line) {\n         /**\n          * Issued when an overflow is detected\n          * @param part the number of the part (page) this happens on\n+         * @param amount the amount by which the area overflows (in mpt)\n          * @param obj the root FO object where this happens\n          */\n-        void notifyOverflow(int part, FObj obj);\n+        void notifyOverflow(int part, int amount, FObj obj);\n         \n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "sha": "5e3d0a887ba7e00c6968c5de9e94db4d042899e7",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageProvider.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.area.AreaTreeHandler;\n import org.apache.fop.fo.Constants;\n@@ -74,6 +75,7 @@\n \n     /**\n      * Main constructor.\n+     * @param ath the area tree handler\n      * @param ps The page-sequence the provider operates on\n      */\n     public PageProvider(AreaTreeHandler ath, PageSequence ps) {\n@@ -258,10 +260,10 @@ private Page cacheNextPage(int index, boolean isBlank, boolean isLastPage) {\n             if (!pageSeq.getMainFlow().getFlowName().equals(body.getRegionName())) {\n                 // this is fine by the XSL Rec (fo:flow's flow-name can be mapped to\n                 // any region), but we don't support it yet.\n-                throw new FOPException(\"Flow '\" + pageSeq.getMainFlow().getFlowName()\n-                    + \"' does not map to the region-body in page-master '\"\n-                    + spm.getMasterName() + \"'.  FOP presently \"\n-                    + \"does not support this.\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        pageSeq.getUserAgent().getEventBroadcaster());\n+                eventProducer.flowNotMappingToRegionBody(this,\n+                        pageSeq.getMainFlow().getFlowName(), spm.getMasterName(), spm.getLocator());\n             }\n             Page page = new Page(spm, index, pageNumberString, isBlank);\n             //Set unique key obtained from the AreaTreeHandler",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "sha": "037f02094467ca88ff6a5890c225a075c4b924ae",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "patch": "@@ -29,10 +29,12 @@\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.area.RegionReference;\n-import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.Constants;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.pagination.PageSequence;\n import org.apache.fop.fo.pagination.SideRegion;\n import org.apache.fop.fo.pagination.StaticContent;\n+import org.apache.fop.layoutmgr.PageBreakingAlgorithm.PageBreakingLayoutListener;\n import org.apache.fop.layoutmgr.inline.InlineLevelLayoutManager;\n import org.apache.fop.layoutmgr.inline.TextLayoutManager;\n import org.apache.fop.traits.MinOptMax;\n@@ -240,12 +242,17 @@ public void doLayout() {\n         breaker.doLayout(targetBPD, autoHeight);\n         if (breaker.isOverflow()) {\n             if (!autoHeight) {\n-                //Overflow handling\n-                if (regionFO.getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO throw layout exception\n-                }\n-                log.warn(FONode.decorateWithContextInfo(\n-                        \"static-content overflows the available area.\", fobj));\n+                String page = getPSLM().getCurrentPage().getPageViewport().getPageNumberString();\n+                \n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getStaticContentFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (regionFO.getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                boolean needClip = (regionFO.getOverflow() == Constants.EN_HIDDEN\n+                        || regionFO.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW);\n+                eventProducer.regionOverflow(this, regionFO.getName(),\n+                        page,\n+                        breaker.getOverflowAmount(), needClip, canRecover,\n+                        getStaticContentFO().getLocator());\n             }\n         }\n     }\n@@ -262,7 +269,7 @@ protected StaticContent getStaticContentFO() {\n         private StaticContentLayoutManager lm;\n         private int displayAlign;\n         private int ipd;\n-        private boolean overflow = false;\n+        private int overflow = 0;\n         \n         public StaticContentBreaker(StaticContentLayoutManager lm, int ipd, \n                 int displayAlign) {\n@@ -288,9 +295,26 @@ protected boolean isPartOverflowRecoveryActivated() {\n         }\n \n         public boolean isOverflow() {\n+            return (this.overflow != 0);\n+        }\n+        \n+        public int getOverflowAmount() {\n             return this.overflow;\n         }\n         \n+        /** {@inheritDoc} */\n+        protected PageBreakingLayoutListener createLayoutListener() {\n+            return new PageBreakingLayoutListener() {\n+\n+                public void notifyOverflow(int part, int amount, FObj obj) {\n+                    if (StaticContentBreaker.this.overflow == 0) {\n+                        StaticContentBreaker.this.overflow = amount;\n+                    }\n+                }\n+                \n+            };\n+        }\n+\n         protected LayoutManager getTopLevelLM() {\n             return lm;\n         }\n@@ -340,9 +364,6 @@ protected void addAreas(PositionIterator posIter, LayoutContext context) {\n         \n         protected void doPhase3(PageBreakingAlgorithm alg, int partCount, \n                 BlockSequence originalList, BlockSequence effectiveList) {\n-            if (partCount > 1) {\n-                overflow = true;\n-            }\n             //Rendering all parts (not just the first) at once for the case where the parts that \n             //overflow should be visible.\n             alg.removeAllPageBreaks();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "sha": "763ddf58d2983e6d45f77bf0c7c5cfb616aa622f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "patch": "@@ -60,7 +60,6 @@\n      */\n     private static Log log = LogFactory.getLog(ContentLayoutManager.class);\n \n-    private FOUserAgent userAgent;\n     private Area holder;\n     private int stackSize;\n     private LayoutManager parentLM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "sha": "2af844c5c9f6de6e988741e1c4997fd5394dd432",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr.inline;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for inline-level layout managers.\n+ */\n+public interface InlineLevelEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static InlineLevelEventProducer get(EventBroadcaster broadcaster) {\n+            return (InlineLevelEventProducer)broadcaster.getEventProducerFor(\n+                    InlineLevelEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * fo:leader with \"use-content\" but without children.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void leaderWithoutContent(Object source, Locator loc);\n+    \n+    /**\n+     * A line overflows.\n+     * @param source the event source\n+     * @param line the number number\n+     * @param overflowLength the length by which the content overflows the available space (in mpt)\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void lineOverflows(Object source, int line, int overflowLength, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "sha": "51d2720cbffb2d23080dbba1061d195fddfa537c",
                "status": "added"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "patch": "@@ -19,11 +19,15 @@\n \n package org.apache.fop.layoutmgr.inline;\n \n+import java.util.LinkedList;\n+import java.util.List;\n+\n import org.apache.fop.area.Trait;\n import org.apache.fop.area.inline.FilledArea;\n import org.apache.fop.area.inline.InlineArea;\n import org.apache.fop.area.inline.Space;\n import org.apache.fop.area.inline.TextArea;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.flow.Leader;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -41,10 +45,6 @@\n import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.traits.MinOptMax;\n \n-import java.util.List;\n-import java.util.LinkedList;\n-import org.apache.fop.fo.FObj;\n-\n /**\n  * LayoutManager for the fo:leader formatting object\n  */\n@@ -159,7 +159,9 @@ private InlineArea getLeaderInlineArea(LayoutContext context) {\n             leaderArea = fa;\n         } else if (fobj.getLeaderPattern() == EN_USECONTENT) {\n             if (fobj.getChildNodes() == null) {\n-                fobj.getLogger().error(\"Leader use-content with no content\");\n+                InlineLevelEventProducer eventProducer = InlineLevelEventProducer.Provider.get(\n+                        getFObj().getUserAgent().getEventBroadcaster());\n+                eventProducer.leaderWithoutContent(this, getFObj().getLocator());\n                 return null;\n             }\n \n@@ -339,9 +341,7 @@ public LinkedList getChangedKnuthElements(List oldList,\n         return returnList;\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public int getBaseLength(int lengthBase, FObj fobj) {\n         return getParent().getBaseLength(lengthBase, getParent().getFObj());\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "sha": "1e7c793dfa5d1fd06e3c551005bbc2e4582f3cba",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "patch": "@@ -34,7 +34,6 @@\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.Numeric;\n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.Block;\n import org.apache.fop.fo.properties.CommonHyphenation;\n import org.apache.fop.fonts.Font;\n@@ -384,11 +383,12 @@ public void updateData2(KnuthNode bestActiveNode,\n             if (log.isWarnEnabled()) {\n                 int lack = difference + bestActiveNode.availableShrink; \n                 if (lack < 0) {\n+                    InlineLevelEventProducer eventProducer\n+                        = InlineLevelEventProducer.Provider.get(\n+                            getFObj().getUserAgent().getEventBroadcaster());\n+                    eventProducer.lineOverflows(this, addedPositions + 1,\n+                            -lack, getFObj().getLocator());\n                     String textDiff = (lack < -50000 ? \"more than 50 points\" : (-lack) + \"mpt\");\n-                    log.warn(FONode.decorateWithContextInfo(\n-                            \"Line \" + (addedPositions + 1) \n-                            + \" of a paragraph overflows the available area by \"\n-                            + textDiff + \".\", getFObj()));\n                 }\n             }\n             \n@@ -1430,7 +1430,9 @@ private void findHyphenationPoints(Paragraph currPar) {\n                         auxCount++;\n                     }\n                 }\n-                log.trace(\" Word to hyphenate: \" + sbChars.toString());\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\" Word to hyphenate: \" + sbChars.toString());\n+                }\n                 // find hyphenation points\n                 HyphContext hc = getHyphenContext(sbChars);\n                 // ask each LM to hyphenate its word fragment",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "sha": "1258fbe186d5d0d8f2e10b9685825f4b49fd3012",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "patch": "@@ -25,9 +25,9 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.datatypes.PercentBaseContext;\n-import org.apache.fop.datatypes.Length;\n \n+import org.apache.fop.datatypes.Length;\n+import org.apache.fop.datatypes.PercentBaseContext;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableColumn;\n@@ -77,12 +77,14 @@ private void prepareColumns() {\n                 }\n             }\n             //Post-processing the list (looking for gaps)\n+            //TODO The following block could possibly be removed\n             int pos = 1;\n             ListIterator ppIter = columns.listIterator();\n             while (ppIter.hasNext()) {\n                 TableColumn col = (TableColumn)ppIter.next();\n                 if (col == null) {\n-                    log.error(\"Found a gap in the table-columns at position \" + pos);\n+                    assert false; //Gaps are filled earlier by fo.flow.table.Table.finalizeColumns()\n+                    //log.error(\"Found a gap in the table-columns at position \" + pos);\n                 }\n                 pos++;\n             }\n@@ -100,7 +102,9 @@ public TableColumn getColumn(int index) {\n         if (index > size) {\n             if (index > maxColIndexReferenced) {\n                 maxColIndexReferenced = index;\n-                if (!(size == 1 && getColumn(1).isImplicitColumn())) {\n+                TableColumn col = getColumn(1);\n+                if (!(size == 1 && col.isImplicitColumn())) {\n+                    assert false; //TODO Seems to be removable as this is now done in the FO tree\n                     log.warn(FONode.decorateWithContextInfo(\n                             \"There are fewer table-columns than are needed. \"\n                             + \"Column \" + index + \" was accessed, but only \"\n@@ -193,8 +197,7 @@ protected double computeTableUnit(TableLayoutManager tlm) {\n             if (colWidth != null) {\n                 sumCols += colWidth.getValue(tlm);\n                 if (colWidth instanceof TableColLength) {\n-                    factors += \n-                        ((TableColLength) colWidth).getTableUnits();\n+                    factors += ((TableColLength) colWidth).getTableUnits();\n                 }\n             }\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "sha": "bd032e6108b61269da9c4065c82c85cab81d3a1e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "patch": "@@ -24,6 +24,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.flow.table.EffRow;\n import org.apache.fop.fo.flow.table.GridUnit;\n@@ -32,6 +33,7 @@\n import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n import org.apache.fop.layoutmgr.ElementListObserver;\n import org.apache.fop.layoutmgr.LayoutContext;\n import org.apache.fop.layoutmgr.MinOptMaxUtil;\n@@ -193,7 +195,9 @@ private void computeRowHeights() {\n             row.setHeight(rowHeights[rgi]);\n             row.setExplicitHeight(explicitRowHeight);\n             // TODO re-enable and improve after clarification\n+            //See http://markmail.org/message/h25ycwwu7qglr4k4\n //            if (maxCellBPD > row.getExplicitHeight().max) {\n+//old:\n //                log.warn(FONode.decorateWithContextInfo(\n //                        \"The contents of row \" + (row.getIndex() + 1) \n //                        + \" are taller than they should be (there is a\"\n@@ -203,10 +207,12 @@ private void computeRowHeights() {\n //                        + \" to \" + maxCellBPD + \" millipoints, but the row shouldn't get\"\n //                        + \" any taller than \" + row.getExplicitHeight() + \" millipoints.\", \n //                        row.getTableRow()));\n+//new (with events):\n+//                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Factory.create(\n+//                        tableRow.getUserAgent().getEventBroadcaster());\n+//                eventProducer.rowTooTall(this, row.getIndex() + 1,\n+//                        maxCellBPD, row.getExplicitHeight().max, tableRow.getLocator());\n //            }\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"  height=\" + rowHeights[rgi] + \" explicit=\" + explicitRowHeight);\n-            }\n         }\n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "sha": "72e78b84f2596cca3944b4e5621db7f39114fb3c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "patch": "@@ -26,6 +26,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.datatypes.LengthBase;\n@@ -34,6 +35,7 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableColumn;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n import org.apache.fop.layoutmgr.BreakElement;\n import org.apache.fop.layoutmgr.ConditionalElementListener;\n@@ -189,9 +191,9 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             updateContentAreaIPDwithOverconstrainedAdjust(contentIPD);\n         } else {\n             if (!getTable().isAutoLayout()) {\n-                log.info(\"table-layout=\\\"fixed\\\" and width=\\\"auto\\\", \"\n-                        + \"but auto-layout not supported \" \n-                        + \"=> assuming width=\\\"100%\\\"\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getTable().getUserAgent().getEventBroadcaster());\n+                eventProducer.tableFixedAutoWidthNotSupported(this, getTable().getLocator());\n             }\n             updateContentAreaIPDwithOverconstrainedAdjust();\n         }\n@@ -204,11 +206,11 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         }\n         int availableIPD = referenceIPD - getIPIndents();\n         if (getContentAreaIPD() > availableIPD) {\n-            log.warn(FONode.decorateWithContextInfo(\n-                    \"The extent in inline-progression-direction (width) of a table is\"\n-                    + \" bigger than the available space (\" \n-                    + getContentAreaIPD() + \"mpt > \" + context.getRefIPD() + \"mpt)\", \n-                    getTable()));\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getTable().getUserAgent().getEventBroadcaster());\n+            eventProducer.objectTooWide(this, getTable().getName(),\n+                    getContentAreaIPD(), context.getRefIPD(),\n+                    getTable().getLocator());\n         }\n         \n         /* initialize unit to determine computed values",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "sha": "720ca5faabb8d911638c489e0c67927720d8b8dc",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "patch": "@@ -30,12 +30,16 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.dom.AbstractDocument;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.gvt.GraphicsNode;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n+\n import org.apache.fop.render.RendererContext.RendererContextWrapper;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n \n /**\n@@ -73,7 +77,7 @@ protected void renderSVGDocument(final RendererContext context,\n \n         //Prepare\n         SVGUserAgent ua = new SVGUserAgent(\n-                context.getUserAgent().getSourcePixelUnitToMillimeter(),\n+                context.getUserAgent(),\n                 new AffineTransform());\n         GVTBuilder builder = new GVTBuilder();\n         final BridgeContext ctx = new BridgeContext(ua);\n@@ -83,7 +87,9 @@ protected void renderSVGDocument(final RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \" + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n \n@@ -114,6 +120,20 @@ public Dimension getImageSize() {\n                 x, y, wrappedContext.getWidth(), wrappedContext.getHeight()); \n     }\n \n+    /**\n+     * Gets the document URI from a Document instance if possible.\n+     * @param doc the Document\n+     * @return the URI or null\n+     */\n+    protected String getDocumentURI(Document doc) {\n+        String docURI = null;\n+        if (doc instanceof AbstractDocument) {\n+            AbstractDocument level3Doc = (AbstractDocument)doc;\n+            docURI = level3Doc.getDocumentURI();\n+        }\n+        return docURI;\n+    }\n+    \n     /**\n      * Override this method to update the renderer context if it needs special settings for\n      * certain conditions.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "sha": "185aed817a1419267b6dea1eb7aa2629fe9d6e2c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.batik.parser.AWTTransformProducer;\n \n import org.apache.xmlgraphics.image.loader.ImageSize;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n@@ -45,7 +46,6 @@\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.FontMetrics;\n import org.apache.fop.traits.BorderProps;\n-import org.apache.fop.util.QName;\n \n /**\n  * Abstract base class for renderers like PDF and PostScript where many painting operations",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "sha": "b38d973c543d3c2162b83123df15f579a56895ac",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractRenderer.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 14,
                "filename": "src/java/org/apache/fop/render/AbstractRenderer.java",
                "patch": "@@ -67,6 +67,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.area.inline.WordArea;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fonts.FontInfo;\n \n@@ -113,21 +114,15 @@\n     \n     private Set warnedXMLHandlers;\n     \n-    /**\n-     *  {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public abstract void setupFontInfo(FontInfo fontInfo);\n \n-    /**\n-     *  {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void setUserAgent(FOUserAgent agent) {\n         userAgent = agent;\n     }\n \n-    /**\n-     *  @return the associated <code>FOUserAgent</code>\n-     */\n+    /** {@inheritDoc} */\n     public FOUserAgent getUserAgent() {\n         return userAgent;\n     }\n@@ -797,10 +792,11 @@ public void renderXML(RendererContext ctx, Document doc,\n                     = new XMLHandlerConfigurator(userAgent);\n                 configurator.configure(ctx, namespace);\n                 handler.handleXML(ctx, doc, namespace);\n-            } catch (Throwable t) {\n+            } catch (Exception e) {\n                 // could not handle document\n-                log.error(\"Some XML content will be ignored. \"\n-                        + \"Could not render XML\", t);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        ctx.getUserAgent().getEventBroadcaster());\n+                eventProducer.foreignXMLProcessingError(this, doc, namespace, e);\n             }\n         } else {\n             if (warnedXMLHandlers == null) {\n@@ -809,8 +805,9 @@ public void renderXML(RendererContext ctx, Document doc,\n             if (!warnedXMLHandlers.contains(namespace)) {\n                 // no handler found for document\n                 warnedXMLHandlers.add(namespace);\n-                log.warn(\"Some XML content will be ignored. \"\n-                        + \"No handler defined for XML: \" + namespace);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        ctx.getUserAgent().getEventBroadcaster());\n+                eventProducer.foreignXMLNoHandler(this, doc, namespace);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/AbstractRenderer.java",
                "sha": "ca3d007d0238a49c824f76819e3ef01f9a277575",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/Renderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/Renderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/Renderer.java",
                "patch": "@@ -88,6 +88,12 @@ void stopRenderer()\n      */\n     void setUserAgent(FOUserAgent agent);\n \n+    /**\n+     * Returns the associated user agent.\n+     * @return the user agent\n+     */\n+    FOUserAgent getUserAgent();\n+    \n     /**\n      * Set up the given FontInfo.\n      *",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/Renderer.java",
                "sha": "03b4582f7069e5e59120a7021e246b7a49f1c2e1",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/RendererEventProducer.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/RendererEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/RendererEventProducer.java",
                "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render;\n+\n+import java.io.IOException;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for rendering-specific events.\n+ */\n+public interface RendererEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static RendererEventProducer get(EventBroadcaster broadcaster) {\n+            return (RendererEventProducer)broadcaster.getEventProducerFor(\n+                    RendererEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * I/O error while writing target file.\n+     * @param source the event source\n+     * @param ioe the original I/O error\n+     * @event.severity ERROR\n+     */\n+    void ioError(Object source, IOException ioe);\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/RendererEventProducer.java",
                "sha": "365c8f430bc19ebfcd2c6c486481e2d3ab7586f5",
                "status": "added"
            },
            {
                "additions": 63,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.afp;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for AFP-specific events.\n+ */\n+public interface AFPEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static AFPEventProducer get(EventBroadcaster broadcaster) {\n+            return (AFPEventProducer)broadcaster.getEventProducerFor(\n+                    AFPEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for AFP. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Warn about using default font setup.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void warnDefaultFontSetup(Object source);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "sha": "615c54c329a51da516b7a1b00fce39bff24ce41f",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.afp.AFPEventProducer.warnDefaultFontSetup\">No AFP fonts configured. Using default setup.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "sha": "8eec9b6567f5f6c985b3ede2db492e1c8e468174",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "patch": "@@ -69,6 +69,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fonts.FontInfo;\n@@ -295,7 +296,9 @@ public void setupFontInfo(FontInfo inFontInfo) {\n                 }\n             }\n         } else {\n-            log.warn(\"No AFP fonts configured - using default setup\");\n+            AFPEventProducer eventProducer = AFPEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.warnDefaultFontSetup(this);\n         }\n         if (this.fontInfo.fontLookup(\"sans-serif\", \"normal\", 400) == null) {\n             CharacterSet cs  = new FopCharacterSet(\"T1V10500\", \"Cp500\", \"CZH200  \",\n@@ -908,7 +911,7 @@ protected RendererContext createRendererContext(int x, int y, int width, int hei\n         RendererContext context;\n         context = super.createRendererContext(x, y, width, height, foreignAttributes);\n         context.setProperty(AFPRendererContextConstants.AFP_GRAYSCALE,\n-                new Boolean(!this.colorImages));\n+                Boolean.valueOf(!this.colorImages));\n         context.setProperty(AFPRendererContextConstants.AFP_FONT_INFO,\n                 this.fontInfo);\n         context.setProperty(AFPRendererContextConstants.AFP_RESOLUTION,\n@@ -1045,13 +1048,17 @@ public void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                 }\n \n             } catch (ImageException ie) {\n-                log.error(\"Error while processing image: \"\n-                        + (info != null ? info.toString() : uri), ie);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n             } catch (FileNotFoundException fe) {\n-                log.error(fe.getMessage());\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n             } catch (IOException ioe) {\n-                log.error(\"I/O error while processing image: \"\n-                        + (info != null ? info.toString() : uri), ioe);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n             } finally {\n                 if (in != null) {\n                     IOUtils.closeQuietly(in);\n@@ -1217,7 +1224,9 @@ public void drawBufferedImage(ImageInfo info, RenderedImage image, int imageRes,\n             //memory consumption (see PostScript output)\n             ImageEncodingHelper.encodeRenderedImageAsRGB(image, baout);\n         } catch (IOException ioe) {\n-            log.error(\"Error while serializing bitmap: \" + ioe.getMessage(), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageWritingError(this, ioe);\n             return;\n         }\n         //int res = getResolution();\n@@ -1363,8 +1372,9 @@ public void renderText(TextArea text) {\n         } catch (Throwable ex) {\n             encoding = AFPConstants.EBCIDIC_ENCODING;\n             log.warn(\n-                \"renderText():: Error getting encoding for font \"\n-                + \" - using default encoding \"\n+                \"renderText():: Error getting encoding for font '\"\n+                + tf.getFullName()\n+                + \"' - using default encoding \"\n                 + encoding);\n         }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "sha": "629a7b62f3bded86be39d05e4fd360424a5f9db0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPSVGHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "patch": "@@ -113,8 +113,7 @@ protected void renderSVGDocument(final RendererContext context,\n         if (cfg != null) {\n             strokeText = cfg.getChild(\"stroke-text\", true).getValueAsBoolean(strokeText);\n         }\n-        final float uaResolution = context.getUserAgent().getSourceResolution();\n-        SVGUserAgent svgUserAgent = new SVGUserAgent(25.4f / uaResolution, new AffineTransform());\n+        SVGUserAgent svgUserAgent = new SVGUserAgent(context.getUserAgent(), new AffineTransform());\n \n         BridgeContext ctx = new BridgeContext(svgUserAgent);\n         AFPTextHandler afpTextHandler = null;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/afp/AFPSVGHandler.java",
                "sha": "93989264817ecb48ce19f8f300f3bdfa0f25c7de",
                "status": "modified"
            },
            {
                "additions": 80,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "changes": 80,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "patch": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.bitmap;\n+\n+import java.io.IOException;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the bitmap renderers.\n+ */\n+public interface BitmapRendererEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static BitmapRendererEventProducer get(EventBroadcaster broadcaster) {\n+            return (BitmapRendererEventProducer)broadcaster.getEventProducerFor(\n+                    BitmapRendererEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * No filename information available. Stopping early after the first page.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void stoppingAfterFirstPageNoFilename(Object source);\n+    \n+    /**\n+     * Image writer does not support multiple images. Only the first page has been produced.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void stoppingAfterFirstPageNoMultiWriter(Object source);\n+    \n+    /**\n+     * No ImageWriter found.\n+     * @param source the event source\n+     * @param mime the target MIME type\n+     * @throws IOException the I/O error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noImageWriterFound(Object source, String mime) throws IOException;\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "sha": "7b26d077175caddcf1153d036b78c0154bc39594",
                "status": "added"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.stoppingAfterFirstPageNoFilename\">No filename information available. Stopping early after the first page.</message>\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.stoppingAfterFirstPageNoMultiWriter\">Image writer does not support multiple images. Only the first page has been produced.</message>\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.noImageWriterFound\">Could not get an ImageWriter to produce \"{mime}\". The most likely explanation for this is a class loading problem.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "sha": "a05af3e217ca7bc7cedf7c4848a3971da99cd07a",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/PNGRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "patch": "@@ -23,12 +23,12 @@\n import java.io.IOException;\n import java.io.OutputStream;\n \n+import org.apache.commons.io.IOUtils;\n+\n import org.apache.xmlgraphics.image.writer.ImageWriter;\n import org.apache.xmlgraphics.image.writer.ImageWriterParams;\n import org.apache.xmlgraphics.image.writer.ImageWriterRegistry;\n \n-import org.apache.commons.io.IOUtils;\n-\n import org.apache.fop.apps.MimeConstants;\n import org.apache.fop.area.PageViewport;\n import org.apache.fop.render.java2d.Java2DRenderer;\n@@ -74,8 +74,10 @@ public void stopRenderer() throws IOException {\n \n             OutputStream os = getCurrentOutputStream(i);\n             if (os == null) {\n-                log.warn(\"No filename information available.\"\n-                        + \" Stopping early after the first page.\");\n+                BitmapRendererEventProducer eventProducer\n+                    = BitmapRendererEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                eventProducer.stoppingAfterFirstPageNoFilename(this);\n                 break;\n             }\n             try {\n@@ -104,9 +106,10 @@ private void writeImage(OutputStream os, RenderedImage image) throws IOException\n         // Encode PNG image\n         ImageWriter writer = ImageWriterRegistry.getInstance().getWriterFor(getMimeType());\n         if (writer == null) {\n-            throw new IOException(\"Could not get an ImageWriter to produce \" \n-                    + getMimeType() + \". The most likely explanation for this is a class\"\n-                    + \" loading problem.\");\n+            BitmapRendererEventProducer eventProducer\n+                = BitmapRendererEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+            eventProducer.noImageWriterFound(this, getMimeType());\n         }\n         if (log.isDebugEnabled()) {\n             log.debug(\"Writing image using \" + writer.getClass().getName());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "sha": "8613ef7b84c36f6ff796c63620e6c7e64cd3f280",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "patch": "@@ -129,7 +129,10 @@ public void stopRenderer() throws IOException {\n         // Creates writer\n         ImageWriter writer = ImageWriterRegistry.getInstance().getWriterFor(getMimeType());\n         if (writer == null) {\n-            throw new NullPointerException(\"No ImageWriter for \" + getMimeType() + \" available!\");\n+            BitmapRendererEventProducer eventProducer\n+                = BitmapRendererEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+            eventProducer.noImageWriterFound(this, getMimeType());\n         }\n         if (writer.supportsMultiImageWriter()) {\n             MultiImageWriter multiWriter = writer.createMultiImageWriter(outputStream);\n@@ -145,8 +148,10 @@ public void stopRenderer() throws IOException {\n         } else {\n             writer.writeImage((RenderedImage) pageImagesItr.next(), outputStream, writerParams);\n             if (pageImagesItr.hasNext()) {\n-                log.error(\"Image encoder does not support multiple images. Only the first page\"\n-                        + \" has been produced.\");\n+                BitmapRendererEventProducer eventProducer\n+                    = BitmapRendererEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                eventProducer.stoppingAfterFirstPageNoFilename(this);\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "sha": "9291427d2a8efc529b5c6d43e27dccb4544ae786",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/Java2DRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "patch": "@@ -66,6 +66,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -930,13 +931,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                         pos, foreignAttributes);\n             }\n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n-        } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "sha": "0ffe3307ad0250cd47e3374ed7a049b3f8d22294",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 40,
                "filename": "src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "patch": "@@ -23,26 +23,25 @@\n \n import org.w3c.dom.Document;\n \n-import org.apache.fop.render.Renderer;\n-import org.apache.fop.render.XMLHandler;\n-import org.apache.fop.render.RendererContext;\n-import org.apache.fop.svg.SVGUserAgent;\n-\n-// Commons-Logging\n+import org.apache.batik.bridge.BridgeContext;\n+import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.gvt.GraphicsNode;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import org.apache.batik.bridge.GVTBuilder;\n-import org.apache.batik.bridge.BridgeContext;\n-import org.apache.batik.dom.svg.SVGDOMImplementation;\n-import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.fop.render.AbstractGenericSVGHandler;\n+import org.apache.fop.render.Renderer;\n+import org.apache.fop.render.RendererContext;\n+import org.apache.fop.svg.SVGEventProducer;\n+import org.apache.fop.svg.SVGUserAgent;\n \n /**\n  * Java2D XML handler for SVG (uses Apache Batik).\n  * This handler handles XML for foreign objects when rendering to Java2D.\n  * The properties from the Java2D renderer are subject to change.\n  */\n-public class Java2DSVGHandler implements XMLHandler, Java2DRendererContextConstants {\n+public class Java2DSVGHandler extends AbstractGenericSVGHandler\n+            implements Java2DRendererContextConstants {\n \n     /** logging instance */\n     private static Log log = LogFactory.getLog(Java2DSVGHandler.class);\n@@ -54,16 +53,6 @@ public Java2DSVGHandler() {\n         //nop\n     }\n \n-    /** {@inheritDoc} */\n-    public void handleXML(RendererContext context, \n-                Document doc, String ns) throws Exception {\n-        Java2DInfo pdfi = getJava2DInfo(context);\n-\n-        if (SVGDOMImplementation.SVG_NAMESPACE_URI.equals(ns)) {\n-            renderSVGDocument(context, doc, pdfi);\n-        }\n-    }\n-\n     /**\n      * Get the pdf information from the render context.\n      *\n@@ -106,23 +95,18 @@ public String toString() {\n         }\n     }\n     \n-    /**\n-     * Render the svg document.\n-     * @param context the renderer context\n-     * @param doc the svg document\n-     * @param info the pdf information of the current context\n-     */\n+    /** {@inheritDoc} */\n     protected void renderSVGDocument(RendererContext context,\n-                                     Document doc,\n-                                     Java2DInfo info) {\n+                                     Document doc) {\n+        Java2DInfo info = getJava2DInfo(context);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"renderSVGDocument(\" + context + \", \" + doc + \", \" + info + \")\");\n+        }\n \n-        log.debug(\"renderSVGDocument(\" + context + \", \" + doc + \", \" + info + \")\");\n-        \n         int x = info.currentXPosition;\n         int y = info.currentYPosition;\n         \n-        float ptom = context.getUserAgent().getSourcePixelUnitToMillimeter();\n-        SVGUserAgent ua = new SVGUserAgent(ptom, new AffineTransform());\n+        SVGUserAgent ua = new SVGUserAgent(context.getUserAgent(), new AffineTransform());\n         \n         GVTBuilder builder = new GVTBuilder();\n         BridgeContext ctx = new BridgeContext(ua);\n@@ -131,7 +115,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \" + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         \n@@ -158,7 +144,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root.paint(info.state.getGraph());\n         } catch (Exception e) {\n-            log.error(\"Error while painting SVG\", e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n         }\n         \n         info.state.getGraph().setTransform(origTransform);\n@@ -169,9 +157,4 @@ public boolean supportsRenderer(Renderer renderer) {\n         return (renderer instanceof Java2DRenderer);\n     }\n \n-\n-    /** {@inheritDoc} */\n-    public String getNamespace() {\n-        return SVGDOMImplementation.SVG_NAMESPACE_URI;\n-    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "sha": "64ac823fcbd9de7208887e1f02ecfccdb5db5e9d",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.pcl;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PCL renderer.\n+ */\n+public interface PCLEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PCLEventProducer get(EventBroadcaster broadcaster) {\n+            return (PCLEventProducer)broadcaster.getEventProducerFor(\n+                    PCLEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Paper type could not be determined. Falling back to another.\n+     * @param source the event source\n+     * @param pageWidth the page width (in millipoints)\n+     * @param pageHeight the page height (in millipoints)\n+     * @param fallbackPaper the paper type that will be used instead\n+     * @event.severity WARN\n+     */\n+    void paperTypeUnavailable(Object source, long pageWidth, long pageHeight, String fallbackPaper);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "sha": "3e72de293abe59065caadc08fef2ab3791f0bdc3",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.pcl.PCLEventProducer.paperTypeUnavailable\">Paper type ({pageWidth} x {pageHeight} mpt) could not be determined. Falling back to: {fallbackPaper}</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "sha": "a3b36fd60b45ebefaf0190d88c4c5bb8c0797b07",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLGenerator.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "patch": "@@ -43,9 +43,11 @@\n import java.util.Locale;\n \n import org.apache.commons.io.output.ByteArrayOutputStream;\n-import org.apache.fop.util.UnitConv;\n+\n import org.apache.xmlgraphics.image.GraphicsUtil;\n \n+import org.apache.fop.util.UnitConv;\n+\n /**\n  * This class provides methods for generating PCL print files.\n  */\n@@ -355,16 +357,16 @@ protected void fillRect(int w, int h, Color col) throws IOException {\n         if (usePCLShades \n                 || Color.black.equals(col)\n                 || Color.white.equals(col)) {\n-            writeCommand(\"*c\" + formatDouble4(w / 100) + \"h\" \n-                              + formatDouble4(h / 100) + \"V\");\n+            writeCommand(\"*c\" + formatDouble4(w / 100.0) + \"h\" \n+                              + formatDouble4(h / 100.0) + \"V\");\n             int lineshade = convertToPCLShade(col);\n             writeCommand(\"*c\" + lineshade + \"G\");\n             writeCommand(\"*c2P\"); //Shaded fill\n         } else {\n             defineGrayscalePattern(col, 32, DITHER_MATRIX_4X4);\n \n-            writeCommand(\"*c\" + formatDouble4(w / 100) + \"h\" \n-                              + formatDouble4(h / 100) + \"V\");\n+            writeCommand(\"*c\" + formatDouble4(w / 100.0) + \"h\" \n+                              + formatDouble4(h / 100.0) + \"V\");\n             writeCommand(\"*c32G\");\n             writeCommand(\"*c4P\"); //User-defined pattern\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "sha": "5ca9a8bf9edc33d298610eb08dad250cedb76f15",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "patch": "@@ -58,6 +58,7 @@\n import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n import org.apache.xmlgraphics.java2d.GraphicContext;\n import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.MimeConstants;\n@@ -77,6 +78,7 @@\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -85,12 +87,12 @@\n import org.apache.fop.render.PrintRenderer;\n import org.apache.fop.render.RendererContext;\n import org.apache.fop.render.RendererContextConstants;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.java2d.FontMetricsMapper;\n import org.apache.fop.render.java2d.FontSetup;\n import org.apache.fop.render.java2d.Java2DRenderer;\n import org.apache.fop.render.pcl.extensions.PCLElementMapping;\n import org.apache.fop.traits.BorderProps;\n-import org.apache.fop.util.QName;\n import org.apache.fop.util.UnitConv;\n \n /* Note:\n@@ -208,7 +210,9 @@ public void setupFontInfo(FontInfo inFontInfo) {\n      */\n     protected void handleIOTrouble(IOException ioe) {\n         if (!ioTrouble) {\n-            log.error(\"Error while writing to target file\", ioe);\n+            RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ioError(this, ioe);\n             ioTrouble = true;\n         }\n     }\n@@ -417,11 +421,15 @@ private void selectPageFormat(long pagewidth, long pageheight) throws IOExceptio\n         \n         if (this.currentPageDefinition == null) {\n             this.currentPageDefinition = PCLPageDefinition.getDefaultPageDefinition();\n-            log.warn(\"Paper type could not be determined. Falling back to: \" \n-                    + this.currentPageDefinition.getName());\n+            PCLEventProducer eventProducer = PCLEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.paperTypeUnavailable(this, pagewidth, pageheight,\n+                    this.currentPageDefinition.getName());\n+        }\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"page size: \" + currentPageDefinition.getPhysicalPageSize());\n+            log.debug(\"logical page: \" + currentPageDefinition.getLogicalPageRect());\n         }\n-        log.debug(\"page size: \" + currentPageDefinition.getPhysicalPageSize());\n-        log.debug(\"logical page: \" + currentPageDefinition.getLogicalPageRect());\n         if (this.currentPageDefinition.isLandscapeFormat()) {\n             gen.writeCommand(\"&l1O\"); //Orientation\n         } else {\n@@ -1107,12 +1115,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n             }\n \n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n         } catch (FileNotFoundException fe) {\n-            log.error(fe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            handleIOTrouble(ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "sha": "b89fba9c193ad89ae0260fa8212abf8715797aa5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLRendererContext.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "patch": "@@ -19,9 +19,10 @@\n \n package org.apache.fop.render.pcl;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.render.RendererContext;\n-import org.apache.fop.util.QName;\n \n /**\n  * Wrapper on the RendererContext to access the information structure for drawing ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "sha": "422b9d51d48c33d2f982819717b882d85ac5f5e4",
                "status": "modified"
            },
            {
                "additions": 64,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "changes": 64,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.pdf;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PDF renderer.\n+ */\n+public interface PDFEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PDFEventProducer get(EventBroadcaster broadcaster) {\n+            return (PDFEventProducer)broadcaster.getEventProducerFor(\n+                    PDFEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Some link targets haven't been fully resolved.\n+     * @param source the event source\n+     * @param count the number of unresolved links\n+     * @event.severity WARN\n+     */\n+    void nonFullyResolvedLinkTargets(Object source, int count);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "sha": "f8b1bbb3304c894240a54c57c7ef2216e271bcda",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.pdf.PDFEventProducer.nonFullyResolvedLinkTargets\">{count} link target{count,equals,1,,s} could not be fully resolved and now point{count,equals,1,,s} to the top of the page or {count,equals,1,is,are} dysfunctional.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "sha": "fd57d50996d6495b9a0d85248bb76451c712dfe1",
                "status": "added"
            },
            {
                "additions": 57,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "changes": 100,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 43,
                "filename": "src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "patch": "@@ -73,6 +73,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fo.extensions.xmp.XMPMetadata;\n@@ -490,13 +491,10 @@ protected void finishOpenGoTos() {\n                 PDFGoTo gt = (PDFGoTo) unfinishedGoTos.get(0);\n                 finishIDGoTo(gt, defaultPos);\n             }\n-            boolean one = count == 1;\n-            String pl = one ? \"\"    : \"s\";\n-            String ww = one ? \"was\" : \"were\";\n-            String ia = one ? \"is\"  : \"are\";\n-            log.warn(\"\" + count + \" link target\" + pl + \" could not be fully resolved and \"\n-                        + ww + \" now point to the top of the page or \"\n-                        + ia + \" dysfunctional.\");  // dysfunctional if pageref is null\n+            PDFEventProducer eventProducer = PDFEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.nonFullyResolvedLinkTargets(this, count);\n+            // dysfunctional if pageref is null\n         }\n     }\n \n@@ -555,16 +553,17 @@ public void processOffDocumentItem(OffDocumentItem odi) {\n \n     private void renderDestination(DestinationData dd) {\n         String targetID = dd.getIDRef();\n-        if (targetID != null && targetID.length() > 0) {\n-            PageViewport pv = dd.getPageViewport();\n-            if (pv == null) {\n-                log.warn(\"Unresolved destination item received: \" + dd.getIDRef());\n-            }\n+        if (targetID == null || targetID.length() == 0) {\n+            throw new IllegalArgumentException(\"DestinationData must contain a ID reference\");\n+        }\n+        PageViewport pv = dd.getPageViewport();\n+        if (pv != null) {\n             PDFGoTo gt = getPDFGoToForID(targetID, pv.getKey());\n             pdfDoc.getFactory().makeDestination(\n                     dd.getIDRef(), gt.makeReference());\n         } else {\n-            log.warn(\"DestinationData item with null or empty IDRef received.\");\n+            //Warning already issued by AreaTreeHandler (debug level is sufficient)\n+            log.debug(\"Unresolved destination item received: \" + dd.getIDRef());\n         }\n     }\n \n@@ -584,22 +583,22 @@ private void renderBookmarkItem(BookmarkData bookmarkItem,\n         PDFOutline pdfOutline = null;\n \n         String targetID = bookmarkItem.getIDRef();\n-        if (targetID != null && targetID.length() > 0) {\n-            PageViewport pv = bookmarkItem.getPageViewport();\n-            if (pv != null) {\n-                String pvKey = pv.getKey();\n-                PDFGoTo gt = getPDFGoToForID(targetID, pvKey);\n-                // create outline object:\n-                PDFOutline parent = parentBookmarkItem != null\n-                    ? parentBookmarkItem\n-                    : pdfDoc.getOutlineRoot();\n-                pdfOutline = pdfDoc.getFactory().makeOutline(parent,\n-                        bookmarkItem.getBookmarkTitle(), gt, bookmarkItem.showChildItems());\n-            } else {\n-                log.warn(\"Bookmark with IDRef \\\"\" + targetID + \"\\\" has a null PageViewport.\");\n-            }\n+        if (targetID == null || targetID.length() == 0) {\n+            throw new IllegalArgumentException(\"DestinationData must contain a ID reference\");\n+        }\n+        PageViewport pv = bookmarkItem.getPageViewport();\n+        if (pv != null) {\n+            String pvKey = pv.getKey();\n+            PDFGoTo gt = getPDFGoToForID(targetID, pvKey);\n+            // create outline object:\n+            PDFOutline parent = parentBookmarkItem != null\n+                ? parentBookmarkItem\n+                : pdfDoc.getOutlineRoot();\n+            pdfOutline = pdfDoc.getFactory().makeOutline(parent,\n+                    bookmarkItem.getBookmarkTitle(), gt, bookmarkItem.showChildItems());\n         } else {\n-            log.warn(\"Bookmark item with null or empty IDRef received.\");\n+            //Warning already issued by AreaTreeHandler (debug level is sufficient)\n+            log.debug(\"Bookmark with IDRef \\\"\" + targetID + \"\\\" has a null PageViewport.\");\n         }\n \n         for (int i = 0; i < bookmarkItem.getCount(); i++) {\n@@ -1368,15 +1367,8 @@ public void renderInlineParent(InlineParent ip) {\n                 if (annotsAllowed) {\n                     action = getPDFGoToForID(idRef, pvKey);\n                 }\n-            } else if (pvKeyOK) {\n-                log.warn(\"Internal link trait with PageViewport key \" + pvKey \n-                         + \" contains no ID reference.\");\n-            } else if (idRefOK) {\n-                log.warn(\"Internal link trait with ID reference \" + idRef \n-                         + \" contains no PageViewport key.\");\n             } else {\n-                log.warn(\"Internal link trait received with neither PageViewport key\"\n-                         + \" nor ID reference.\");\n+                //Warnings already issued by AreaTreeHandler\n             }\n         }\n \n@@ -1671,7 +1663,9 @@ protected void putImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                             x, y, posInt.width, posInt.height, foreignAttributes);\n                     handler.generateImage(context, img, origin, posInt);\n                 } catch (IOException ioe) {\n-                    log.error(\"I/O error while handling image: \" + info, ioe);\n+                    ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.imageWritingError(this, ioe);\n                     return;\n                 }\n             } else {\n@@ -1680,13 +1674,17 @@ protected void putImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                             + info + \" (\" + img.getClass().getName() + \")\");\n             }\n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n-        } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n \n         // output new data\n@@ -1811,18 +1809,34 @@ public String getMimeType() {\n         return MIME_TYPE;\n     }\n     \n+    /**\n+     * Sets the PDF/A mode for the PDF renderer.\n+     * @param mode the PDF/A mode\n+     */\n     public void setAMode(PDFAMode mode) {\n         this.pdfAMode = mode;\n     }\n \n+    /**\n+     * Sets the PDF/X mode for the PDF renderer.\n+     * @param mode the PDF/X mode\n+     */\n     public void setXMode(PDFXMode mode) {\n         this.pdfXMode = mode;        \n     }\n \n+    /**\n+     * Sets the output color profile for the PDF renderer.\n+     * @param outputProfileURI the URI to the output color profile\n+     */\n     public void setOutputProfileURI(String outputProfileURI) {\n         this.outputProfileURI = outputProfileURI;\n     }\n \n+    /**\n+     * Sets the filter map to be used by the PDF renderer.\n+     * @param filterMap the filter map\n+     */\n     public void setFilterMap(Map filterMap) {\n         this.filterMap = filterMap;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "sha": "d2c8446ebc00dcf21492f1b7974311ac52f0f9fd",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 13,
                "filename": "src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "patch": "@@ -36,6 +36,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.FontInfo;\n@@ -51,8 +53,8 @@\n import org.apache.fop.svg.PDFAElementBridge;\n import org.apache.fop.svg.PDFBridgeContext;\n import org.apache.fop.svg.PDFGraphics2D;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n-import org.apache.fop.util.QName;\n \n /**\n  * PDF XML handler for SVG (uses Apache Batik).\n@@ -144,24 +146,23 @@ protected void renderSVGDocument(RendererContext context,\n             try {\n                 super.renderSVGDocument(context, doc);\n             } catch (IOException ioe) {\n-                log.error(\"I/O error while rendering SVG graphic: \"\n-                                       + ioe.getMessage(), ioe);\n+                SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                        context.getUserAgent().getEventBroadcaster());\n+                eventProducer.svgRenderingError(this, ioe, getDocumentURI(doc));\n             }\n             return;\n         }\n         int xOffset = pdfInfo.currentXPosition;\n         int yOffset = pdfInfo.currentYPosition;\n \n         FOUserAgent userAgent = context.getUserAgent(); \n-        log.debug(\"Generating SVG at \" \n-                + userAgent.getTargetResolution()\n-                + \"dpi.\");\n         final float deviceResolution = userAgent.getTargetResolution();\n-        log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n-        log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n+        }\n         \n         final float uaResolution = userAgent.getSourceResolution();\n-        SVGUserAgent ua = new SVGUserAgent(25.4f / uaResolution, new AffineTransform());\n+        SVGUserAgent ua = new SVGUserAgent(userAgent, new AffineTransform());\n \n         //Scale for higher resolution on-the-fly images from Batik\n         double s = uaResolution / deviceResolution;\n@@ -188,8 +189,9 @@ protected void renderSVGDocument(RendererContext context,\n             root = builder.build(ctx, doc);\n             builder = null;\n         } catch (Exception e) {\n-            log.error(\"svg graphic could not be built: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         // get the 'width' and 'height' attributes of the SVG document\n@@ -261,8 +263,9 @@ protected void renderSVGDocument(RendererContext context,\n             root.paint(graphics);\n             pdfInfo.currentStream.add(graphics.getString());\n         } catch (Exception e) {\n-            log.error(\"svg graphic could not be rendered: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n         }\n         pdfInfo.pdfState.pop();\n         renderer.restoreGraphicsState();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "sha": "cb7c7cf89a78bd7d64c9d6908b1500660a627947",
                "status": "modified"
            },
            {
                "additions": 65,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "changes": 65,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "patch": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.ps;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PostScript renderer.\n+ */\n+public interface PSEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PSEventProducer get(EventBroadcaster broadcaster) {\n+            return (PSEventProducer)broadcaster.getEventProducerFor(\n+                    PSEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * A PostScript dictionary could not be parsed.\n+     * @param source the event source\n+     * @param content the PostScript content\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void postscriptDictionaryParseError(Object source, String content, Exception e);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "sha": "451ed1cea034f9a7b0ef02b2443716b9c209024d",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.ps.PSEventProducer.postscriptDictionaryParseError\">Failed to parse dictionary string. Reason: {e}, content = \"{content}\"</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "sha": "a0078223ac1f8d9549ca2e238a72813af283342e",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/render/ps/PSRenderer.java",
                "patch": "@@ -85,6 +85,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fonts.Font;\n@@ -95,6 +96,7 @@\n import org.apache.fop.render.Graphics2DAdapter;\n import org.apache.fop.render.ImageAdapter;\n import org.apache.fop.render.RendererContext;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.ps.extensions.PSCommentAfter;\n import org.apache.fop.render.ps.extensions.PSCommentBefore;\n import org.apache.fop.render.ps.extensions.PSExtensionAttachment;\n@@ -296,7 +298,9 @@ protected void writeln(String cmd) {\n      */\n     protected void handleIOTrouble(IOException ioe) {\n         if (!ioTrouble) {\n-            log.error(\"Error while writing to target file\", ioe);\n+            RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ioError(this, ioe);\n             ioTrouble = true;\n         }\n     }\n@@ -522,12 +526,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n             }\n \n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n         } catch (FileNotFoundException fe) {\n-            log.error(fe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            handleIOTrouble(ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n \n@@ -1070,8 +1079,9 @@ public void processOffDocumentItem(OffDocumentItem oDI) {\n                             try {\n                                 this.pageDeviceDictionary.putAll(PSDictionary.valueOf(content));\n                             } catch (PSDictionaryFormatException e) {\n-                                log.error(\"Failed to parse dictionary string: \"\n-                                        + e.getMessage() + \", content = '\" + content + \"'\");\n+                                PSEventProducer eventProducer = PSEventProducer.Provider.get(\n+                                        getUserAgent().getEventBroadcaster());\n+                                eventProducer.postscriptDictionaryParseError(this, content, e);\n                             }\n                         }\n                     } else if (attachment instanceof PSCommentBefore) {\n@@ -1169,8 +1179,9 @@ public void renderPage(PageViewport page)\n                         try {\n                             pageDeviceDictionary.putAll(PSDictionary.valueOf(content));\n                         } catch (PSDictionaryFormatException e) {\n-                            log.error(\"failed to parse dictionary string: \"\n-                                    + e.getMessage() + \", [\" + content + \"]\");\n+                            PSEventProducer eventProducer = PSEventProducer.Provider.get(\n+                                    getUserAgent().getEventBroadcaster());\n+                            eventProducer.postscriptDictionaryParseError(this, content, e);\n                         }\n                     }\n                 }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "sha": "e4d582ba2a9eafd955534274faf0b7d80fc5f530",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "changes": 68,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSSVGHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 44,
                "filename": "src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "patch": "@@ -23,31 +23,24 @@\n import java.awt.geom.AffineTransform;\n import java.io.IOException;\n \n-// DOM\n import org.w3c.dom.Document;\n-import org.w3c.dom.svg.SVGDocument;\n-import org.w3c.dom.svg.SVGSVGElement;\n \n-// Batik\n import org.apache.avalon.framework.configuration.Configuration;\n-import org.apache.batik.bridge.GVTBuilder;\n import org.apache.batik.bridge.BridgeContext;\n-import org.apache.batik.bridge.ViewBox;\n-import org.apache.batik.dom.svg.SVGDOMImplementation;\n+import org.apache.batik.bridge.GVTBuilder;\n import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.java2d.ps.PSGraphics2D;\n+import org.apache.xmlgraphics.ps.PSGenerator;\n \n-// FOP\n import org.apache.fop.fonts.FontInfo;\n+import org.apache.fop.render.AbstractGenericSVGHandler;\n import org.apache.fop.render.Renderer;\n-import org.apache.fop.render.XMLHandler;\n import org.apache.fop.render.RendererContext;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n-import org.apache.xmlgraphics.java2d.ps.PSGraphics2D;\n-import org.apache.xmlgraphics.ps.PSGenerator;\n-\n-// Commons-Logging\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n \n /**\n  * PostScript XML handler for SVG. Uses Apache Batik for SVG processing.\n@@ -57,7 +50,8 @@\n  *\n  * @version $Id$\n  */\n-public class PSSVGHandler implements XMLHandler, PSRendererContextConstants {\n+public class PSSVGHandler extends AbstractGenericSVGHandler\n+            implements PSRendererContextConstants {\n \n     /** logging instance */\n     private static Log log = LogFactory.getLog(PSSVGHandler.class);\n@@ -68,16 +62,6 @@\n     public PSSVGHandler() {\n     }\n \n-    /** {@inheritDoc} */\n-    public void handleXML(RendererContext context, \n-                Document doc, String ns) throws Exception {\n-        PSInfo psi = getPSInfo(context);\n-\n-        if (SVGDOMImplementation.SVG_NAMESPACE_URI.equals(ns)) {\n-            renderSVGDocument(context, doc, psi);\n-        }\n-    }\n-\n     /**\n      * Get the pdf information from the render context.\n      *\n@@ -234,10 +218,10 @@ public void setHandlerConfiguration(Configuration cfg) {\n      * Render the svg document.\n      * @param context the renderer context\n      * @param doc the svg document\n-     * @param psInfo the pdf information of the current context\n      */\n     protected void renderSVGDocument(RendererContext context,\n-            Document doc, PSInfo psInfo) {\n+            Document doc) {\n+        PSInfo psInfo = getPSInfo(context);\n         int xOffset = psInfo.currentXPosition;\n         int yOffset = psInfo.currentYPosition;\n         PSGenerator gen = psInfo.psGenerator;\n@@ -250,9 +234,7 @@ protected void renderSVGDocument(RendererContext context,\n         }\n \n         SVGUserAgent ua\n-             = new SVGUserAgent(\n-                context.getUserAgent().getSourcePixelUnitToMillimeter(),\n-                new AffineTransform());\n+             = new SVGUserAgent(context.getUserAgent(), new AffineTransform());\n \n         PSGraphics2D graphics = new PSGraphics2D(strokeText, gen);\n         graphics.setGraphicContext(new org.apache.xmlgraphics.java2d.GraphicContext());\n@@ -273,8 +255,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         // get the 'width' and 'height' attributes of the SVG document\n@@ -305,10 +288,10 @@ protected void renderSVGDocument(RendererContext context,\n             // viewBox puts it.\n             gen.concatMatrix(sx, 0, 0, sy, xOffset / 1000f, yOffset / 1000f);\n \n+            /*\n             SVGSVGElement svg = ((SVGDocument)doc).getRootElement();\n             AffineTransform at = ViewBox.getPreserveAspectRatioTransform(svg,\n-                    psInfo.getWidth() / 1000f, psInfo.getHeight() / 1000f);\n-            /*\n+                    psInfo.getWidth() / 1000f, psInfo.getHeight() / 1000f, ctx);\n             if (!at.isIdentity()) {\n                 double[] vals = new double[6];\n                 at.getMatrix(vals);\n@@ -322,15 +305,17 @@ protected void renderSVGDocument(RendererContext context,\n             try {\n                 root.paint(graphics);\n             } catch (Exception e) {\n-                log.error(\"SVG graphic could not be rendered: \"\n-                                       + e.getMessage(), e);\n+                SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                        context.getUserAgent().getEventBroadcaster());\n+                eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n             }\n \n             gen.restoreGraphicsState();\n             gen.commentln(\"%FOPEndSVG\");\n         } catch (IOException ioe) {\n-            log.error(\"SVG graphic could not be rendered: \"\n-                                   + ioe.getMessage(), ioe);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, ioe, getDocumentURI(doc));\n         }\n     }\n \n@@ -339,10 +324,5 @@ public boolean supportsRenderer(Renderer renderer) {\n         return (renderer instanceof PSRenderer);\n     }\n     \n-    /** {@inheritDoc} */\n-    public String getNamespace() {\n-        return SVGDOMImplementation.SVG_NAMESPACE_URI;\n-    }\n-\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "sha": "ebe098282d12a768c65f9d3090283d3b6612973e",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/ResourceHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "patch": "@@ -20,8 +20,8 @@\n package org.apache.fop.render.ps;\n \n import java.awt.geom.Dimension2D;\n-import java.awt.image.RenderedImage;\n import java.awt.geom.Rectangle2D;\n+import java.awt.image.RenderedImage;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -68,6 +68,7 @@\n import org.apache.xmlgraphics.ps.dsc.tools.DSCTools;\n \n import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fonts.FontInfo;\n \n /**\n@@ -321,7 +322,10 @@ protected void generatePaintProc(PSGenerator gen)\n                     throw new UnsupportedOperationException(\"Unsupported image type: \" + img);\n                 }\n             } catch (ImageException ie) {\n-                throw new IOException(\"Error while generating form for image: \" + ie.getMessage());\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        userAgent.getEventBroadcaster());\n+                eventProducer.imageError(resTracker, (info != null ? info.toString() : uri),\n+                        ie, null);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "sha": "1a363c90e8e0a174d9aaa2855abf5350aee80d3e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Base postscript commment element class\n@@ -46,8 +45,8 @@ public AbstractPSCommentElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         if (parent.getNameId() != Constants.FO_DECLARATIONS\n                 && parent.getNameId() != Constants.FO_SIMPLE_PAGE_MASTER) {\n-          throw new ValidationException(getName()\n-          + \" must be a child of fo:declarations or fo:simple-page-master.\");            \n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfSPMorDeclarations\");\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "sha": "1eb1d9d13a5af9b26d9f7c5cd7a2882c8f5f750a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "patch": "@@ -20,14 +20,14 @@\n package org.apache.fop.render.ps.extensions;\n \n // FOP\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n \n-import org.xml.sax.Locator;\n-\n /**\n  * Base class for the PostScript-specific extension elements.\n  */\n@@ -98,7 +98,7 @@ public String getNamespaceURI() {\n      * @see org.apache.fop.fo.FONode#getNormalNamespacePrefix()\n      */\n     public String getNormalNamespacePrefix() {\n-        return \"fox\";\n+        return \"ps\";\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "sha": "31e44d2d279838779325fd02d482176d36a050fa",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "patch": "@@ -20,13 +20,14 @@\n package org.apache.fop.render.ps.extensions;\n \n // FOP\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Base class for the PostScript-specific extension elements.\n@@ -36,15 +37,15 @@\n     private PSSetupCode setupCode = new PSSetupCode();\n     \n     /**\n+     * Main constructor.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public AbstractPSExtensionObject(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n                 throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n@@ -71,7 +72,7 @@ public String getNamespaceURI() {\n     \n     /**{@inheritDoc} */\n     public String getNormalNamespacePrefix() {\n-        return \"fox\";\n+        return \"ps\";\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "sha": "78b2f91eb586522ac567f983fa6748d2d6b37d9a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "patch": "@@ -27,6 +27,9 @@\n  */\n public class PSCommentAfterElement extends AbstractPSCommentElement {\n \n+    /** the element name */\n+    protected static final String ELEMENT = \"ps-comment-after\";\n+\n     /**\n      * Main constructor\n      * @param parent node",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "sha": "d03a0220c33acc4cc1bd93273134e9d1f9125fc3",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "patch": "@@ -27,6 +27,9 @@\n  */\n public class PSCommentBeforeElement extends AbstractPSCommentElement {\n \n+    /** the element name */\n+    protected static final String ELEMENT = \"ps-comment-before\";\n+\n     /**\n      * Main constructor\n      * @param parent parent node",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "sha": "d74d3a194d408b7ae5dda328e1e2a64c7335f8e8",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "patch": "@@ -19,13 +19,15 @@\n \n package org.apache.fop.render.ps.extensions;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactory.ObjectBuiltListener;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.SAXException;\n-import org.xml.sax.helpers.DefaultHandler;\n \n /**\n  * ContentHandler (parser) for restoring PSExtension objects from XML.\n@@ -91,25 +93,19 @@ public void characters(char[] ch, int start, int length) throws SAXException {\n         content.append(ch, start, length);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void endDocument() throws SAXException {\n         if (listener != null) {\n             listener.notifyObjectBuilt(getObject());\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public Object getObject() {\n         return returnedObject;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void setObjectBuiltListener(ObjectBuiltListener listener) {\n         this.listener = listener;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "sha": "e695007361bc3d22666e352fcc11815a96d3563b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "patch": "@@ -22,13 +22,13 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Extension element for fox:ps-page-setup-code. \n  */\n public class PSPageSetupCodeElement extends AbstractPSExtensionObject {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-page-setup-code\";\n     \n     /**\n@@ -43,7 +43,8 @@ public PSPageSetupCodeElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if (parent.getNameId() != Constants.FO_SIMPLE_PAGE_MASTER) {\n-            throw new ValidationException(getName() + \" must be a child of fo:simple-page-master.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                \"rule.childOfSPM\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "sha": "207c11e76fec18c6e6eddc751892095f4bc53a96",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "patch": "@@ -19,20 +19,21 @@\n \n package org.apache.fop.render.ps.extensions;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n-import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Extension element for ps:ps-setpagedevice. \n  */\n public class PSSetPageDeviceElement extends AbstractPSExtensionElement {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-setpagedevice\";\n \n     /**\n@@ -52,8 +53,8 @@ protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if ( !((parent.getNameId() == Constants.FO_DECLARATIONS)\n                 || (parent.getNameId() == Constants.FO_SIMPLE_PAGE_MASTER)) ) {\n-            throw new ValidationException( getName()\n-                    + \" must be a child of fo:declarations or fo:simple-page-master.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfSPMorDeclarations\");\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "sha": "21acc8001b5563e9e0869b7e25fc89fcf8f63825",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "patch": "@@ -22,13 +22,13 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Extension element for fox:ps-setup-code. \n  */\n public class PSSetupCodeElement extends AbstractPSExtensionObject {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-setup-code\";\n     \n     /**\n@@ -43,7 +43,8 @@ public PSSetupCodeElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if (parent.getNameId() != Constants.FO_DECLARATIONS) {\n-            throw new ValidationException(getName() + \" must be a child of fo:declarations.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfDeclarations\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "sha": "e76dfeb6438e33ebbe4f4e709de2281b34d30de8",
                "status": "modified"
            },
            {
                "additions": 94,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "changes": 94,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "patch": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.rtf;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.fo.FONode;\n+\n+/**\n+ * Event producer interface for events generated by the RTF renderer.\n+ */\n+public interface RTFEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static RTFEventProducer get(EventBroadcaster broadcaster) {\n+            return (RTFEventProducer)broadcaster.getEventProducerFor(\n+                    RTFEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * The RTF handler only supports simple-page-masters.\n+     * @param source the event source\n+     * @param masterReference the reference page-master-set\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void onlySPMSupported(Object source, String masterReference, Locator loc);\n+    \n+    /**\n+     * No simple-page-master could be determined-\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void noSPMFound(Object source, Locator loc);\n+    \n+    /**\n+     * The RTF handler requires explicit table-columns for now.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void explicitTableColumnsRequired(Object source, Locator loc);\n+    \n+    /**\n+     * The RTF handler ignored some deferred event (i.e. an unsupported element).\n+     * @param source the event source\n+     * @param node the FO tree node being ignored\n+     * @param start true for start, false for end\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void ignoredDeferredEvent(Object source, FONode node, boolean start, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "sha": "a2646af468e789eba6c4faa4863411db8916905a",
                "status": "added"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">[ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.onlySPMSupported\">Only simple-page-masters are supported on page-sequences. Using default simple-page-master from page-sequence-master \"{masterReference}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.noSPMFound\">No simple-page-master could be determined.</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.explicitTableColumnsRequired\">No table-columns found on table. RTF output requires that all table-columns for a table are defined. Output will be incorrect.{{locator}}</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.ignoredDeferredEvent\">Ignored deferred event for {node} ({start,if,start,end}).{{locator}}</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "sha": "8f1f21a8152b48f35ad02408f276817e9889344b",
                "status": "added"
            },
            {
                "additions": 90,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "changes": 153,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFHandler.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 63,
                "filename": "src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "patch": "@@ -21,6 +21,7 @@\n \n // Java\n import java.awt.geom.Point2D;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -51,6 +52,7 @@\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.datatypes.LengthBase;\n import org.apache.fop.datatypes.SimplePercentBaseContext;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.fo.FONode;\n@@ -88,6 +90,7 @@\n import org.apache.fop.fo.properties.FixedLength;\n import org.apache.fop.fonts.FontSetup;\n import org.apache.fop.render.DefaultFontResolver;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer;\n@@ -158,6 +161,16 @@ public RTFHandler(FOUserAgent userAgent, OutputStream os) {\n         FontSetup.setup(fontInfo, null, new DefaultFontResolver(userAgent));\n     }\n \n+    /**\n+     * Central exception handler for I/O exceptions.\n+     * @param ioe IOException to handle\n+     */\n+    protected void handleIOTrouble(IOException ioe) {\n+        RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                getUserAgent().getEventBroadcaster());\n+        eventProducer.ioError(this, ioe);\n+    }\n+\n     /**\n      * {@inheritDoc}\n      */\n@@ -195,9 +208,9 @@ public void startPageSequence(PageSequence pageSeq)  {\n                 this.pagemaster\n                         = pageSeq.getRoot().getLayoutMasterSet().getSimplePageMaster(reference);\n                 if (this.pagemaster == null) {\n-                    log.warn(\"Only simple-page-masters are supported on page-sequences: \" \n-                            + reference);\n-                    log.warn(\"Using default simple-page-master from page-sequence-master...\");\n+                    RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.onlySPMSupported(this, reference, pageSeq.getLocator());\n                     PageSequenceMaster master \n                         = pageSeq.getRoot().getLayoutMasterSet().getPageSequenceMaster(reference);\n                     this.pagemaster = master.getNextSimplePageMaster(\n@@ -218,17 +231,17 @@ public void startPageSequence(PageSequence pageSeq)  {\n                     PageAttributesConverter.convertPageAttributes(\n                             pagemaster));\n             } else {\n-                log.warn(\"No simple-page-master could be determined!\");\n+                RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.noSPMFound(this, pageSeq.getLocator());\n             }\n \n             builderContext.pushContainer(sect);\n \n             bHeaderSpecified = false;\n             bFooterSpecified = false;\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startPageSequence: \" + ioe.getMessage(), ioe);\n-            //TODO throw new FOPException(ioe);\n+            handleIOTrouble(ioe);\n         } catch (FOPException fope) {\n             // TODO could we throw Exception in all FOEventHandler events?\n             log.error(\"startPageSequence: \" + fope.getMessage(), fope);\n@@ -338,8 +351,7 @@ public void startFlow(Flow fl) {\n                 log.warn(\"A \" + fl.getLocalName() + \" has been skipped: \" + fl.getFlowName());\n             }\n         } catch (IOException ioe) {\n-            log.error(\"startFlow: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFlow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -396,9 +408,7 @@ public void startBlock(Block bl) {\n             textrun.pushBlockAttributes(rtfAttr);\n             textrun.addBookmark(bl.getId());\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startBlock: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -427,8 +437,7 @@ public void endBlock(Block bl) {\n             textrun.popBlockAttributes();\n \n         } catch (IOException ioe) {\n-            log.error(\"startBlock:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -457,9 +466,7 @@ public void startBlockContainer(BlockContainer blc) {\n             textrun.addParagraphBreak();\n             textrun.pushBlockAttributes(rtfAttr);\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startBlock: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -486,8 +493,7 @@ public void endBlockContainer(BlockContainer bl) {\n             textrun.popBlockAttributes();\n \n         } catch (IOException ioe) {\n-            log.error(\"startBlock:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -530,6 +536,8 @@ public void startTable(Table tbl) {\n             table.setBorderAttributes(borderAttributes);\n             \n             builderContext.pushContainer(table);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startTable:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -590,7 +598,6 @@ public void startColumn(TableColumn tc) {\n             log.error(\"startColumn: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n         }\n-\n     }\n \n      /**\n@@ -649,8 +656,7 @@ public void startInline(Inline inl) {\n             textrun.pushInlineAttributes(rtfAttr);\n             textrun.addBookmark(inl.getId());\n         } catch (IOException ioe) {\n-            log.error(\"startInline:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (FOPException fe) {\n             log.error(\"startInline:\" + fe.getMessage());\n             throw new RuntimeException(fe.getMessage());\n@@ -677,8 +683,7 @@ public void endInline(Inline inl) {\n             RtfTextrun textrun = container.getTextrun();\n             textrun.popInlineAttributes();\n         } catch (IOException ioe) {\n-            log.error(\"startInline:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startInline:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -698,6 +703,8 @@ public void startBody(TableBody tb) {\n \n             RtfTable tbl = (RtfTable)builderContext.getContainer(RtfTable.class, true, this);\n             tbl.setHeaderAttribs(atts);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBody: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -715,6 +722,8 @@ public void endBody(TableBody tb) {\n         try {\n             RtfTable tbl = (RtfTable)builderContext.getContainer(RtfTable.class, true, this);\n             tbl.setHeaderAttribs(null);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endBody: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -745,6 +754,8 @@ public void startRow(TableRow tr) {\n \n             // reset column iteration index to correctly access column widths\n             builderContext.getTableContext().selectFirstColumn();\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startRow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -778,6 +789,8 @@ public void endRow(TableRow tr) {\n                 \n                 tctx.selectNextColumn();\n             }\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endRow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -870,6 +883,8 @@ public void startCell(TableCell tc) {\n             }\n             \n             builderContext.pushContainer(cell);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startCell: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -906,8 +921,7 @@ public void startList(ListBlock lb) {\n                 ListAttributesConverter.convertAttributes(lb));\n             builderContext.pushContainer(newList);\n         } catch (IOException ioe) {\n-            log.error(\"startList: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (FOPException fe) {\n             log.error(\"startList: \" + fe.getMessage());\n             throw new RuntimeException(fe.getMessage());\n@@ -961,8 +975,7 @@ public void startListItem(ListItem li) {\n             \n             builderContext.pushContainer(list.newListItem());\n         } catch (IOException ioe) {\n-            log.error(\"startList: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startList: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -995,8 +1008,7 @@ public void startListLabel() {\n             RtfListItemLabel label = item.new RtfListItemLabel(item);\n             builderContext.pushContainer(label);\n         } catch (IOException ioe) {\n-            log.error(\"startPageNumber:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startPageNumber: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1077,8 +1089,7 @@ public void startLink(BasicLink basicLink) {\n             builderContext.pushContainer(link);\n \n         } catch (IOException ioe) {\n-            log.error(\"startLink:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startLink: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1104,21 +1115,28 @@ public void image(ExternalGraphic eg) {\n             return;\n         }\n \n+        String uri = eg.getURL();\n+        ImageInfo info = null;\n         try {\n-            String uri = eg.getURL();\n \n             //set image data\n             FOUserAgent userAgent = eg.getUserAgent();\n             ImageManager manager = userAgent.getFactory().getImageManager();\n-            ImageInfo info = manager.getImageInfo(uri, userAgent.getImageSessionContext());\n-            if (info == null) {\n-                log.error(\"Image could not be found: \" + uri);\n-                return;\n-            }\n+            info = manager.getImageInfo(uri, userAgent.getImageSessionContext());\n             \n             putGraphic(eg, info);\n-        } catch (Exception e) {\n-            log.error(\"Error while handling an external-graphic: \" + e.getMessage(), e);\n+        } catch (ImageException ie) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n+        } catch (IOException ioe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n \n@@ -1144,6 +1162,12 @@ public void foreignObject(InstreamForeignObject ifo) {\n             // Set the image size to the size of the svg.\n             Point2D csize = new Point2D.Float(-1, -1);\n             Point2D intrinsicDimensions = child.getDimension(csize);\n+            if (intrinsicDimensions == null) {\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.ifoNoIntrinsicSize(this, child.getLocator());\n+                return;\n+            }\n             size.setSizeInMillipoints(\n                     (int)Math.round(intrinsicDimensions.getX() * 1000),\n                     (int)Math.round(intrinsicDimensions.getY() * 1000));\n@@ -1157,8 +1181,14 @@ public void foreignObject(InstreamForeignObject ifo) {\n             Image converted = manager.convertImage(image, FLAVORS);\n             putGraphic(ifo, converted);\n             \n-        } catch (Exception e) {\n-            log.error(\"Error while handling an instream-foreign-object: \" + e.getMessage(), e);\n+        } catch (ImageException ie) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, null, ie, null);\n+        } catch (IOException ioe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, null, ioe, null);\n         }\n     }\n \n@@ -1183,7 +1213,9 @@ private void putGraphic(AbstractGraphics abstractGraphic, ImageInfo info)\n \n             putGraphic(abstractGraphic, image);\n         } catch (ImageException ie) {\n-            log.error(\"Error while loading/processing image: \" + info.getOriginalURI(), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, null, ie, null);\n         }\n     }\n     \n@@ -1210,8 +1242,9 @@ private void putGraphic(AbstractGraphics abstractGraphic, Image image)\n         }\n \n         if (rawData == null) {\n-            log.warn(FONode.decorateWithContextInfo(\"Image could not be embedded: \"\n-                    + image, abstractGraphic));\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageWritingError(this, null);\n             return;\n         }\n \n@@ -1322,9 +1355,7 @@ public void startFootnote(Footnote footnote) {\n             builderContext.pushContainer(rtfFootnote);\n \n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startFootnote: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFootnote: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1358,9 +1389,7 @@ public void startFootnoteBody(FootnoteBody body) {\n \n             rtfFootnote.startBody();\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startFootnoteBody: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFootnoteBody: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1383,9 +1412,7 @@ public void endFootnoteBody(FootnoteBody body) {\n \n             rtfFootnote.endBody();\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"endFootnoteBody: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endFootnoteBody: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1421,10 +1448,8 @@ public void text(FOText text, char[] data, int start, int length) {\n             textrun.pushInlineAttributes(rtfAttr);\n             textrun.addString(new String(data, start, length - start));\n             textrun.popInlineAttributes();\n-         } catch (IOException ioe) {\n-            // FIXME could we throw Exception in all FOEventHandler events?\n-            log.error(\"characters: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"characters:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1452,8 +1477,7 @@ public void startPageNumber(PageNumber pagenum) {\n             RtfTextrun textrun = container.getTextrun();\n             textrun.addPageNumber(rtfAttr);\n         } catch (IOException ioe) {\n-            log.error(\"startPageNumber:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startPageNumber: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1611,7 +1635,9 @@ private void invokeDeferredEvent(FONode foNode, boolean bStart) {\n                 endCell( (TableCell) foNode);\n             }\n         } else {\n-            log.warn(\"Ignored deferred event for \" + foNode);\n+            RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ignoredDeferredEvent(this, foNode, bStart, foNode.getLocator());\n         }\n     }\n \n@@ -1655,8 +1681,9 @@ private void recurseFONode(FONode foNode) {\n                 }\n             } else {\n                 //TODO Implement implicit column setup handling!\n-                log.warn(\"No table-columns found on table. RTF output requires that all\"\n-                        + \" table-columns for a table are defined. Output will be incorrect.\");\n+                RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.explicitTableColumnsRequired(this, table.getLocator());\n             }\n \n             //recurse table-header",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "sha": "88e34e17abb0c1ef378ed889eb918e6077859681",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/xml/XMLRenderer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "patch": "@@ -41,6 +41,7 @@\n import org.xml.sax.ext.LexicalHandler;\n import org.xml.sax.helpers.AttributesImpl;\n \n+import org.apache.xmlgraphics.util.QName;\n import org.apache.xmlgraphics.util.XMLizable;\n \n import org.apache.fop.apps.FOPException;\n@@ -90,7 +91,6 @@\n import org.apache.fop.render.RendererContext;\n import org.apache.fop.render.XMLHandler;\n import org.apache.fop.util.ColorUtil;\n-import org.apache.fop.util.QName;\n \n /**\n  * Renderer that renders areas to XML for debugging purposes.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "sha": "eb3c92e1ba1998c9fa2308528409b02402c12b54",
                "status": "modified"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SVGEventProducer.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SVGEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/SVGEventProducer.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.svg;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for SVG-related events.\n+ */\n+public interface SVGEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static SVGEventProducer get(EventBroadcaster broadcaster) {\n+            return (SVGEventProducer)broadcaster.getEventProducerFor(\n+                    SVGEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Error during SVG processing. Either message or e must be set.\n+     * @param source the event source\n+     * @param message the error message (or null)\n+     * @param e the exception (or null)\n+     * @event.severity ERROR\n+     */\n+    void error(Object source, String message, Exception e);\n+    \n+    /**\n+     * Alert during SVG processing.\n+     * @param source the event source\n+     * @param message the error message\n+     * @event.severity WARN\n+     */\n+    void alert(Object source, String message);\n+    \n+    /**\n+     * Info during SVG processing.\n+     * @param source the event source\n+     * @param message the error message\n+     * @event.severity INFO\n+     */\n+    void info(Object source, String message);\n+    \n+    /**\n+     * SVG graphic could not be built due to an exception.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @param uri the URI of the SVG graphic\n+     * @event.severity ERROR\n+     */\n+    void svgNotBuilt(Object source, Exception e, String uri);\n+    \n+    /**\n+     * SVG graphic could not be rendered due to an exception.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @param uri the URI of the SVG graphic\n+     * @event.severity ERROR\n+     */\n+    void svgRenderingError(Object source, Exception e, String uri);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SVGEventProducer.java",
                "sha": "8894f3f582537dd4aa057d93c0e750f8280fe2d2",
                "status": "added"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SVGUserAgent.java",
                "changes": 131,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SVGUserAgent.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 104,
                "filename": "src/java/org/apache/fop/svg/SVGUserAgent.java",
                "patch": "@@ -19,65 +19,59 @@\n  \n package org.apache.fop.svg;\n \n-import javax.xml.parsers.SAXParserFactory;\n-import org.apache.batik.bridge.UserAgentAdapter;\n-\n-// Java\n import java.awt.geom.AffineTransform;\n-import java.awt.geom.Dimension2D;\n-import java.awt.Dimension;\n \n-// Commons-Logging\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+import org.apache.fop.apps.FOUserAgent;\n \n /**\n- * The SVG user agent.\n- * This is an implementation of the batik svg user agent\n- * for handling errors and getting user agent values.\n+ * The SVG user agent. This is an implementation of the Batik SVG user agent.\n  */\n-public class SVGUserAgent extends UserAgentAdapter {\n-    private AffineTransform currentTransform = null;\n-    private float pixelUnitToMillimeter = 0.0f;\n+public class SVGUserAgent extends SimpleSVGUserAgent {\n+    \n+    private SVGEventProducer eventProducer;\n+    private Exception lastException;\n \n     /**\n-     * logging instance\n+     * Creates a new SVGUserAgent.\n+     * @param foUserAgent the FO user agent to associate with this SVG user agent\n+     * @param at the current transform\n      */\n-    private Log logger = LogFactory.getLog(SVGUserAgent.class);\n+    public SVGUserAgent(FOUserAgent foUserAgent, AffineTransform at) {\n+        super(foUserAgent.getSourcePixelUnitToMillimeter(), at);\n+        this.eventProducer = SVGEventProducer.Provider.get(foUserAgent.getEventBroadcaster());\n+    }\n \n     /**\n      * Creates a new SVGUserAgent.\n-     * @param pixelUnitToMM the pixel to millimeter conversion factor\n-     * currently in effect\n-     * @param at the current transform\n+     * @param foUserAgent the FO user agent to associate with this SVG user agent\n      */\n-    public SVGUserAgent(float pixelUnitToMM, AffineTransform at) {\n-        pixelUnitToMillimeter = pixelUnitToMM;\n-        currentTransform = at;\n+    public SVGUserAgent(FOUserAgent foUserAgent) {\n+        this(foUserAgent, new AffineTransform());\n     }\n-\n+    \n     /**\n-     * Returns the logger associated with this user agent.\n-     * @return Logger the logger\n+     * Returns the last exception sent to the {@link #displayError(Exception)} method.\n+     * @return the last exception or null if no exception occurred\n      */\n-    protected final Log getLogger() {\n-        return logger;\n+    public Exception getLastException() {\n+        return this.lastException;\n     }\n \n     /**\n      * Displays an error message.\n      * @param message the message to display\n      */\n     public void displayError(String message) {\n-        logger.error(message);\n+        this.eventProducer.error(this, message, null);\n     }\n \n     /**\n      * Displays an error resulting from the specified Exception.\n      * @param ex the exception to display\n      */\n     public void displayError(Exception ex) {\n-        logger.error(\"SVG Error\" + ex.getMessage(), ex);\n+        this.lastException = ex;\n+        this.eventProducer.error(this, ex.getLocalizedMessage(), ex);\n     }\n \n     /**\n@@ -86,86 +80,15 @@ public void displayError(Exception ex) {\n      * @param message the message to display\n      */\n     public void displayMessage(String message) {\n-        logger.info(message);\n+        this.eventProducer.info(this, message);\n     }\n \n     /**\n      * Shows an alert dialog box.\n      * @param message the message to display\n      */\n     public void showAlert(String message) {\n-        logger.warn(message);\n-    }\n-\n-    /**\n-     * Returns a customized the pixel to mm factor.\n-     * @return the pixel unit to millimeter conversion factor\n-     */\n-    public float getPixelUnitToMillimeter() {\n-        return pixelUnitToMillimeter;\n+        this.eventProducer.alert(this, message);\n     }\n \n-    /**\n-     * Returns the language settings.\n-     * @return the languages supported\n-     */\n-    public String getLanguages() {\n-        return \"en\"; // userLanguages;\n-    }\n-\n-    /**\n-     * Returns the media type for this rendering.\n-     * @return the media for fo documents is \"print\"\n-     */\n-    public String getMedia() {\n-        return \"print\";\n-    }\n-\n-    /**\n-     * Returns the user stylesheet uri.\n-     * @return null if no user style sheet was specified.\n-     */\n-    public String getUserStyleSheetURI() {\n-        return null; // userStyleSheetURI;\n-    }\n-\n-    /**\n-     * Returns the class name of the XML parser.\n-     * @return the XML parser class name\n-     */\n-    public String getXMLParserClassName() {\n-        try {\n-            SAXParserFactory factory = SAXParserFactory.newInstance();\n-            return factory.newSAXParser().getXMLReader().getClass().getName();\n-        } catch (Exception e) {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Is the XML parser validating.\n-     * @return true if the xml parser is validating\n-     */\n-    public boolean isXMLParserValidating() {\n-        return false;\n-    }\n-\n-    /**\n-     * Get the transform of the svg document.\n-     * @return the transform\n-     */\n-    public AffineTransform getTransform() {\n-        return currentTransform;\n-    }\n-\n-    /**\n-     * Get the default viewport size for an svg document.\n-     * This returns a default value of 100x100.\n-     * @return the default viewport size\n-     */\n-    public Dimension2D getViewportSize() {\n-        return new Dimension(100, 100);\n-    }\n-\n-}\n-\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SVGUserAgent.java",
                "sha": "8d7754fcb1f6d67b845be6e713b5070823c1a9a5",
                "status": "modified"
            },
            {
                "additions": 126,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "changes": 126,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "patch": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.svg;\n+\n+import java.awt.Dimension;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Dimension2D;\n+\n+import javax.xml.parsers.SAXParserFactory;\n+\n+import org.apache.batik.bridge.UserAgentAdapter;\n+\n+/**\n+ * A simple SVG user agent.\n+ * This is an implementation of the Batik SVG user agent. It ignores any message output sent\n+ * by Batik.\n+ */\n+public class SimpleSVGUserAgent extends UserAgentAdapter {\n+    \n+    private AffineTransform currentTransform = null;\n+    private float pixelUnitToMillimeter = 0.0f;\n+\n+    /**\n+     * Creates a new user agent.\n+     * @param pixelUnitToMM the pixel to millimeter conversion factor currently in effect\n+     * @param at the current transform\n+     */\n+    public SimpleSVGUserAgent(float pixelUnitToMM, AffineTransform at) {\n+        pixelUnitToMillimeter = pixelUnitToMM;\n+        currentTransform = at;\n+    }\n+    \n+    /**\n+     * Returns a customized the pixel to mm factor.\n+     * @return the pixel unit to millimeter conversion factor\n+     */\n+    public float getPixelUnitToMillimeter() {\n+        return pixelUnitToMillimeter;\n+    }\n+\n+    /**\n+     * Returns the language settings.\n+     * @return the languages supported\n+     */\n+    public String getLanguages() {\n+        return \"en\"; // userLanguages;\n+    }\n+\n+    /**\n+     * Returns the media type for this rendering.\n+     * @return the media for FO documents is \"print\"\n+     */\n+    public String getMedia() {\n+        return \"print\";\n+    }\n+\n+    /**\n+     * Returns the user stylesheet URI.\n+     * @return null if no user style sheet was specified.\n+     */\n+    public String getUserStyleSheetURI() {\n+        return null; // userStyleSheetURI;\n+    }\n+\n+    /**\n+     * Returns the class name of the XML parser.\n+     * @return the XML parser class name\n+     */\n+    public String getXMLParserClassName() {\n+        try {\n+            SAXParserFactory factory = SAXParserFactory.newInstance();\n+            return factory.newSAXParser().getXMLReader().getClass().getName();\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Is the XML parser validating.\n+     * @return true if the XML parser is validating\n+     */\n+    public boolean isXMLParserValidating() {\n+        return false;\n+    }\n+\n+    /**\n+     * Get the transform of the SVG document.\n+     * @return the transform\n+     */\n+    public AffineTransform getTransform() {\n+        return currentTransform;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void setTransform(AffineTransform at) {\n+        this.currentTransform = at;\n+    }\n+\n+    /**\n+     * Get the default viewport size for an SVG document.\n+     * This returns a default value of 100x100.\n+     * @return the default viewport size\n+     */\n+    public Dimension2D getViewportSize() {\n+        return new Dimension(100, 100);\n+    }\n+\n+}\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "sha": "4df1af34e18c49f40d263f426fc10bcbf1b43f35",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/QName.java",
                "changes": 94,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/QName.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 90,
                "filename": "src/java/org/apache/fop/util/QName.java",
                "patch": "@@ -19,40 +19,25 @@\n \n package org.apache.fop.util;\n \n-import java.io.Serializable;\n-\n /**\n  * Represents a qualified name of an XML element or an XML attribute.\n  * <p>\n  * Note: This class allows to carry a namespace prefix but it is not used in the equals() and \n  * hashCode() methods.\n+ * @deprecated Use the XML Graphics Commons variant instead!\n  */\n-public class QName implements Serializable {\n+public class QName extends org.apache.xmlgraphics.util.QName {\n \n     private static final long serialVersionUID = -5225376740044770690L;\n     \n-    private String namespaceURI;\n-    private String localName;\n-    private String prefix;\n-    private int hashCode;\n-    \n     /**\n      * Main constructor.\n      * @param namespaceURI the namespace URI\n      * @param prefix the namespace prefix, may be null\n      * @param localName the local name\n      */\n     public QName(String namespaceURI, String prefix, String localName) {\n-        if (localName == null) {\n-            throw new NullPointerException(\"Parameter localName must not be null\");\n-        }\n-        if (localName.length() == 0) {\n-            throw new IllegalArgumentException(\"Parameter localName must not be empty\");\n-        }\n-        this.namespaceURI = namespaceURI;\n-        this.prefix = prefix;\n-        this.localName = localName;\n-        this.hashCode = toHashString().hashCode();\n+        super(namespaceURI, prefix, localName);\n     }\n     \n     /**\n@@ -61,78 +46,7 @@ public QName(String namespaceURI, String prefix, String localName) {\n      * @param qName the qualified name\n      */\n     public QName(String namespaceURI, String qName) {\n-        if (qName == null) {\n-            throw new NullPointerException(\"Parameter localName must not be null\");\n-        }\n-        if (qName.length() == 0) {\n-            throw new IllegalArgumentException(\"Parameter localName must not be empty\");\n-        }\n-        this.namespaceURI = namespaceURI;\n-        int p = qName.indexOf(':');\n-        if (p > 0) {\n-            this.prefix = qName.substring(0, p);\n-            this.localName = qName.substring(p + 1);\n-        } else {\n-            this.prefix = null;\n-            this.localName = qName;\n-        }\n-        this.hashCode = toHashString().hashCode();\n+        super(namespaceURI, qName);\n     }\n     \n-    /** @return the namespace URI */\n-    public String getNamespaceURI() {\n-        return this.namespaceURI;\n-    }\n-    \n-    /** @return the namespace prefix */\n-    public String getPrefix() {\n-        return this.prefix;\n-    }\n-    \n-    /** @return the local name */\n-    public String getLocalName() {\n-        return this.localName;\n-    }\n-    \n-    /** @return the fully qualified name */\n-    public String getQName() {\n-        return getPrefix() != null ? getPrefix() + ':' + getLocalName() : getLocalName();\n-    }\n-\n-    /** {@inheritDoc} */\n-    public int hashCode() {\n-        return this.hashCode;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        } else if (obj == this) {\n-            return true;\n-        } else {\n-            if (obj instanceof QName) {\n-                QName other = (QName)obj;\n-                if ((getNamespaceURI() == null && other.getNamespaceURI() == null)\n-                        || getNamespaceURI().equals(other.getNamespaceURI())) {\n-                    return getLocalName().equals(other.getLocalName());\n-                }\n-            }\n-        }\n-        return false;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public String toString() {\n-        return prefix != null\n-                ? (prefix + \":\" + localName)\n-                : toHashString();\n-    }\n-\n-    private String toHashString() {\n-        return (namespaceURI != null \n-                ? (\"{\" + namespaceURI + \"}\" + localName) \n-                : localName);\n-    }\n-\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/QName.java",
                "sha": "132f5b4dcc06a2567e01aa5fe24b569befa3131e",
                "status": "modified"
            },
            {
                "additions": 398,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/XMLResourceBundle.java",
                "changes": 398,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/XMLResourceBundle.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/XMLResourceBundle.java",
                "patch": "@@ -0,0 +1,398 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.MissingResourceException;\n+import java.util.Properties;\n+import java.util.ResourceBundle;\n+import java.util.Stack;\n+\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n+/**\n+ * This class is a ResourceBundle that loads its contents from XML files instead of properties\n+ * files (like PropertiesResourceBundle).\n+ * <p>\n+ * The XML format for this resource bundle implementation is the following\n+ * (the same as Apache Cocoon's XMLResourceBundle):\n+ * <pre>\n+ * &lt;catalogue xml:lang=\"en\"&gt;\n+ *   &lt;message key=\"key1\"&gt;Message &lt;br/&gt; Value 1&lt;/message&gt;\n+ *   &lt;message key=\"key2\"&gt;Message &lt;br/&gt; Value 1&lt;/message&gt;\n+ *   ...\n+ * &lt;/catalogue&gt;\n+ * </pre>\n+ */\n+public class XMLResourceBundle extends ResourceBundle {\n+\n+    //Note: Some code here has been copied and adapted from Apache Harmony!\n+    \n+    private Properties resources = new Properties();\n+\n+    private Locale locale;\n+    \n+    private static SAXTransformerFactory tFactory \n+        = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+\n+    /**\n+     * Creates a resource bundle from an InputStream.\n+     * @param in the stream to read from\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public XMLResourceBundle(InputStream in) throws IOException {\n+        try {\n+            Transformer transformer = tFactory.newTransformer();\n+            StreamSource src = new StreamSource(in);\n+            SAXResult res = new SAXResult(new CatalogueHandler());\n+            transformer.transform(src, res);\n+        } catch (TransformerException e) {\n+            throw new IOException(\"Error while parsing XML resource bundle: \" + e.getMessage());\n+        }\n+    }\n+    \n+    /**\n+     * Gets a resource bundle using the specified base name, default locale, and class loader.\n+     * @param baseName the base name of the resource bundle, a fully qualified class name\n+     * @param loader the class loader from which to load the resource bundle\n+     * @return a resource bundle for the given base name and the default locale\n+     * @throws MissingResourceException if no resource bundle for the specified base name can be\n+     *                                          found\n+     * @see java.util.ResourceBundle#getBundle(String)\n+     */\n+    public static ResourceBundle getXMLBundle(String baseName, ClassLoader loader)\n+                throws MissingResourceException {\n+        return getXMLBundle(baseName, Locale.getDefault(), loader);\n+    }\n+    \n+    /**\n+     * Gets a resource bundle using the specified base name, locale, and class loader.\n+     * @param baseName the base name of the resource bundle, a fully qualified class name\n+     * @param locale the locale for which a resource bundle is desired\n+     * @param loader the class loader from which to load the resource bundle\n+     * @return a resource bundle for the given base name and locale\n+     * @throws MissingResourceException if no resource bundle for the specified base name can be\n+     *                                          found\n+     * @see java.util.ResourceBundle#getBundle(String, Locale, ClassLoader)\n+     */\n+    public static ResourceBundle getXMLBundle(String baseName, Locale locale, ClassLoader loader)\n+                throws MissingResourceException {\n+        if (loader == null) {\n+            throw new NullPointerException(\"loader must not be null\");\n+        }\n+        if (baseName == null) {\n+            throw new NullPointerException(\"baseName must not be null\");\n+        }\n+            \n+        ResourceBundle bundle;\n+        if (!locale.equals(Locale.getDefault())) {\n+            bundle = handleGetXMLBundle(baseName, \"_\" + locale, false, loader);\n+            if (bundle != null) {\n+                return bundle;\n+            }\n+        }\n+        bundle = handleGetXMLBundle(baseName, \"_\" + Locale.getDefault(), true, loader);\n+        if (bundle != null) {\n+            return bundle;\n+        }\n+        throw new MissingResourceException(\n+                baseName + \" (\" + locale + \")\", baseName + '_' + locale, null);\n+    }\n+\n+    static class MissingBundle extends ResourceBundle {\n+        public Enumeration getKeys() {\n+            return null;\n+        }\n+\n+        public Object handleGetObject(String name) {\n+            return null;\n+        }\n+    }\n+\n+    private static final ResourceBundle MISSING = new MissingBundle();\n+    private static final ResourceBundle MISSINGBASE = new MissingBundle();\n+    \n+    private static Map cache = new java.util.WeakHashMap();\n+    //<Object, Hashtable<String, ResourceBundle>>\n+    \n+    private static ResourceBundle handleGetXMLBundle(String base, String locale,\n+            boolean loadBase, final ClassLoader loader) {\n+        XMLResourceBundle bundle = null;\n+        String bundleName = base + locale;\n+        Object cacheKey = loader != null ? (Object) loader : (Object) \"null\";\n+        Hashtable loaderCache; //<String, ResourceBundle>\n+        synchronized (cache) {\n+            loaderCache = (Hashtable)cache.get(cacheKey);\n+            if (loaderCache == null) {\n+                loaderCache = new Hashtable();\n+                cache.put(cacheKey, loaderCache);\n+            }\n+        }\n+        ResourceBundle result = (ResourceBundle)loaderCache.get(bundleName);\n+        if (result != null) {\n+            if (result == MISSINGBASE) {\n+                return null;\n+            }\n+            if (result == MISSING) {\n+                if (!loadBase) {\n+                    return null;\n+                }\n+                String extension = strip(locale);\n+                if (extension == null) {\n+                    return null;\n+                }\n+                return handleGetXMLBundle(base, extension, loadBase, loader);\n+            }\n+            return result;\n+        }\n+\n+        final String fileName = bundleName.replace('.', '/') + \".xml\";\n+        InputStream stream = (InputStream)AccessController\n+                .doPrivileged(new PrivilegedAction() {\n+                    public Object run() {\n+                        return loader == null\n+                            ? ClassLoader.getSystemResourceAsStream(fileName)\n+                            : loader.getResourceAsStream(fileName);\n+                    }\n+                });\n+        if (stream != null) {\n+            try {\n+                try {\n+                    bundle = new XMLResourceBundle(stream);\n+                } finally {\n+                    stream.close();\n+                }\n+                bundle.setLocale(locale);\n+            } catch (IOException e) {\n+                throw new MissingResourceException(e.getMessage(), base, null);\n+            }\n+        }\n+\n+        String extension = strip(locale);\n+        if (bundle != null) {\n+            if (extension != null) {\n+                ResourceBundle parent = handleGetXMLBundle(base, extension, true,\n+                        loader);\n+                if (parent != null) {\n+                    bundle.setParent(parent);\n+                }\n+            }\n+            loaderCache.put(bundleName, bundle);\n+            return bundle;\n+        }\n+\n+        if (extension != null) {\n+            ResourceBundle fallback = handleGetXMLBundle(base, extension, loadBase, loader);\n+            if (fallback != null) {\n+                loaderCache.put(bundleName, fallback);\n+                return fallback;\n+            }\n+        }\n+        loaderCache.put(bundleName, loadBase ? MISSINGBASE : MISSING);\n+        return null;\n+    }    \n+    \n+    private void setLocale(String name) {\n+        String language = \"\", country = \"\", variant = \"\";\n+        if (name.length() > 1) {\n+            int nextIndex = name.indexOf('_', 1);\n+            if (nextIndex == -1) {\n+                nextIndex = name.length();\n+            }\n+            language = name.substring(1, nextIndex);\n+            if (nextIndex + 1 < name.length()) {\n+                int index = nextIndex;\n+                nextIndex = name.indexOf('_', nextIndex + 1);\n+                if (nextIndex == -1) {\n+                    nextIndex = name.length();\n+                }\n+                country = name.substring(index + 1, nextIndex);\n+                if (nextIndex + 1 < name.length()) {\n+                    variant = name.substring(nextIndex + 1, name.length());\n+                }\n+            }\n+        }\n+        this.locale = new Locale(language, country, variant);\n+    }\n+    \n+    private static String strip(String name) {\n+        int index = name.lastIndexOf('_');\n+        if (index != -1) {\n+            return name.substring(0, index);\n+        }\n+        return null;\n+    }\n+    \n+    private Enumeration getLocalKeys() {\n+        return (Enumeration)resources.propertyNames();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Locale getLocale() {\n+        return this.locale;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Enumeration getKeys() {\n+        if (parent == null) {\n+            return getLocalKeys();\n+        }\n+        return new Enumeration() {\n+            private Enumeration local = getLocalKeys();\n+            private Enumeration pEnum = parent.getKeys();\n+\n+            private Object nextElement;\n+\n+            private boolean findNext() {\n+                if (nextElement != null) {\n+                    return true;\n+                }\n+                while (pEnum.hasMoreElements()) {\n+                    Object next = pEnum.nextElement();\n+                    if (!resources.containsKey(next)) {\n+                        nextElement = next;\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            }\n+\n+            public boolean hasMoreElements() {\n+                if (local.hasMoreElements()) {\n+                    return true;\n+                }\n+                return findNext();\n+            }\n+\n+            public Object nextElement() {\n+                if (local.hasMoreElements()) {\n+                    return local.nextElement();\n+                }\n+                if (findNext()) {\n+                    Object result = nextElement;\n+                    nextElement = null;\n+                    return result;\n+                }\n+                // Cause an exception\n+                return pEnum.nextElement();\n+            }\n+        };\n+    }\n+\n+    /** {@inheritDoc} */\n+    protected Object handleGetObject(String key) {\n+        if (key == null) {\n+            throw new NullPointerException(\"key must not be null\");\n+        }\n+        return resources.get(key);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"XMLResourceBundle: \" + getLocale();\n+    }\n+\n+    private class CatalogueHandler extends DefaultHandler {\n+        \n+        private static final String CATALOGUE = \"catalogue\";\n+        private static final String MESSAGE = \"message\";\n+        \n+        private StringBuffer valueBuffer = new StringBuffer();\n+        private Stack elementStack = new Stack();\n+        private String currentKey = null;\n+\n+        private boolean isOwnNamespace(String uri) {\n+            return (\"\".equals(uri));\n+        }\n+        \n+        private QName getParentElementName() {\n+            return (QName)elementStack.peek();\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void startElement(String uri, String localName, String qName, \n+                Attributes atts) throws SAXException {\n+            super.startElement(uri, localName, qName, atts);\n+            QName elementName = new QName(uri, qName);\n+            if (isOwnNamespace(uri)) {\n+                if (CATALOGUE.equals(localName)) {\n+                    //nop\n+                } else if (MESSAGE.equals(localName)) {\n+                    if (!CATALOGUE.equals(getParentElementName().getLocalName())) {\n+                        throw new SAXException(MESSAGE + \" must be a child of \" + CATALOGUE);\n+                    }\n+                    this.currentKey = atts.getValue(\"key\");\n+                } else {\n+                    throw new SAXException(\"Invalid element name: \" + elementName);\n+                }\n+            } else {\n+                //ignore\n+            }\n+            this.valueBuffer.setLength(0);\n+            elementStack.push(elementName);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void endElement(String uri, String localName, String qName) throws SAXException {\n+            super.endElement(uri, localName, qName);\n+            elementStack.pop();\n+            if (isOwnNamespace(uri)) {\n+                if (CATALOGUE.equals(localName)) {\n+                    //nop\n+                } else if (MESSAGE.equals(localName)) {\n+                    if (this.currentKey == null) {\n+                        throw new SAXException(\n+                                \"current key is null (attribute 'key' might be mistyped)\");\n+                    }\n+                    resources.put(this.currentKey, this.valueBuffer.toString());\n+                    this.currentKey = null;\n+                }\n+            } else {\n+                //ignore\n+            }\n+            this.valueBuffer.setLength(0);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void characters(char[] ch, int start, int length) throws SAXException {\n+            super.characters(ch, start, length);\n+            valueBuffer.append(ch, start, length);\n+        }\n+        \n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/XMLResourceBundle.java",
                "sha": "1b320816bcc0a1842906a09319019dbd816545f1",
                "status": "added"
            },
            {
                "additions": 487,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "changes": 487,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "patch": "@@ -0,0 +1,487 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+\n+/**\n+ * Formats messages based on a template and with a set of named parameters. This is similar to\n+ * {@link java.util.MessageFormat} but uses named parameters and supports conditional sub-groups.\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <p><code>Missing field \"{fieldName}\"[ at location: {location}]!</code></p>\n+ * <ul>\n+ *   <li>Curly brackets (\"{}\") are used for fields.</li>\n+ *   <li>Square brackets (\"[]\") are used to delimit conditional sub-groups. A sub-group is\n+ *     conditional when all fields inside the sub-group have a null value. In the case, everything\n+ *     between the brackets is skipped.</li>\n+ * </ul>\n+ */\n+public class AdvancedMessageFormat {\n+\n+    /** Regex that matches \",\" but not \"\\,\" (escaped comma) */\n+    static final Pattern COMMA_SEPARATOR_REGEX = Pattern.compile(\"(?<!\\\\\\\\),\");\n+    \n+    private static final Map PART_FACTORIES = new java.util.HashMap();\n+    private static final List OBJECT_FORMATTERS = new java.util.ArrayList();\n+    private static final Map FUNCTIONS = new java.util.HashMap();\n+    \n+    private CompositePart rootPart;\n+    \n+    static {\n+        Iterator iter;\n+        iter = Service.providers(PartFactory.class, true);\n+        while (iter.hasNext()) {\n+            PartFactory factory = (PartFactory)iter.next();\n+            PART_FACTORIES.put(factory.getFormat(), factory);\n+        }\n+        iter = Service.providers(ObjectFormatter.class, true);\n+        while (iter.hasNext()) {\n+            OBJECT_FORMATTERS.add((ObjectFormatter)iter.next());\n+        }\n+        iter = Service.providers(Function.class, true);\n+        while (iter.hasNext()) {\n+            Function function = (Function)iter.next();\n+            FUNCTIONS.put(function.getName(), function);\n+        }\n+    }\n+    \n+    /**\n+     * Construct a new message format.\n+     * @param pattern the message format pattern.\n+     */\n+    public AdvancedMessageFormat(CharSequence pattern) {\n+        parsePattern(pattern);\n+    }\n+    \n+    private void parsePattern(CharSequence pattern) {\n+        rootPart = new CompositePart(false);\n+        StringBuffer sb = new StringBuffer();\n+        parseInnerPattern(pattern, rootPart, sb, 0);\n+    }\n+    \n+    private int parseInnerPattern(CharSequence pattern, CompositePart parent,\n+            StringBuffer sb, int start) {\n+        assert sb.length() == 0;\n+        int i = start;\n+        int len = pattern.length();\n+        loop:\n+        while (i < len) {\n+            char ch = pattern.charAt(i);\n+            switch (ch) {\n+            case '{':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                i++;\n+                int nesting = 1;\n+                while (i < len) {\n+                    ch = pattern.charAt(i);\n+                    if (ch == '{') {\n+                        nesting++;\n+                    } else if (ch == '}') {\n+                        nesting--;\n+                        if (nesting == 0) {\n+                            i++;\n+                            break;\n+                        }\n+                    }\n+                    sb.append(ch);\n+                    i++;\n+                }\n+                parent.addChild(parseField(sb.toString()));\n+                sb.setLength(0);\n+                break;\n+            case ']':\n+                i++;\n+                break loop; //Current composite is finished\n+            case '[':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                i++;\n+                CompositePart composite = new CompositePart(true);\n+                parent.addChild(composite);\n+                i += parseInnerPattern(pattern, composite, sb, i);\n+                break;\n+            case '|':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                parent.newSection();\n+                i++;\n+                break;\n+            case '\\\\':\n+                if (i < len - 1) {\n+                    i++;\n+                    ch = pattern.charAt(i);\n+                }\n+                //no break here! Must be right before \"default\" section\n+            default:\n+                sb.append(ch);\n+                i++;\n+            }\n+        }\n+        if (sb.length() > 0) {\n+            parent.addChild(new TextPart(sb.toString()));\n+            sb.setLength(0);\n+        }\n+        return i - start;\n+    }\n+    \n+    private Part parseField(String field) {\n+        String[] parts = COMMA_SEPARATOR_REGEX.split(field, 3);\n+        String fieldName = parts[0];\n+        if (parts.length == 1) {\n+            if (fieldName.startsWith(\"#\")) {\n+                return new FunctionPart(fieldName.substring(1));\n+            } else {\n+                return new SimpleFieldPart(fieldName);\n+            }\n+        } else {\n+            String format = parts[1];\n+            PartFactory factory = (PartFactory)PART_FACTORIES.get(format);\n+            if (factory == null) {\n+                throw new IllegalArgumentException(\n+                        \"No PartFactory available under the name: \" + format);\n+            }\n+            if (parts.length == 2) {\n+                return factory.newPart(fieldName, null);\n+            } else {\n+                return factory.newPart(fieldName, parts[2]);\n+            }\n+        }\n+    }\n+\n+    private static Function getFunction(String functionName) {\n+        return (Function)FUNCTIONS.get(functionName);\n+    }\n+\n+    /**\n+     * Formats a message with the given parameters.\n+     * @param params a Map of named parameters (Contents: <String, Object>)\n+     * @return the formatted message\n+     */\n+    public String format(Map params) {\n+        StringBuffer sb = new StringBuffer();\n+        format(params, sb);\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Formats a message with the given parameters.\n+     * @param params a Map of named parameters (Contents: <String, Object>)\n+     * @param target the target StringBuffer to write the formatted message to\n+     */\n+    public void format(Map params, StringBuffer target) {\n+        rootPart.write(target, params);\n+    }\n+    \n+    /**\n+     * Represents a message template part. This interface is implemented by various variants of\n+     * the single curly braces pattern ({field}, {field,if,yes,no} etc.).\n+     */\n+    public interface Part {\n+        \n+        /**\n+         * Writes the formatted part to a string buffer.\n+         * @param sb the target string buffer\n+         * @param params the parameters to work with\n+         */\n+        void write(StringBuffer sb, Map params);\n+        \n+        /**\n+         * Indicates whether there is any content that is generated by this message part.\n+         * @param params the parameters to work with\n+         * @return true if the part has content\n+         */\n+        boolean isGenerated(Map params);\n+    }\n+    \n+    /**\n+     * Implementations of this interface parse a field part and return message parts.\n+     */\n+    public interface PartFactory {\n+        \n+        /**\n+         * Creates a new part by parsing the values parameter to configure the part.\n+         * @param fieldName the field name\n+         * @param values the unparsed parameter values\n+         * @return the new message part\n+         */\n+        Part newPart(String fieldName, String values);\n+        \n+        /**\n+         * Returns the name of the message part format.\n+         * @return the name of the message part format\n+         */\n+        String getFormat();\n+    }\n+    \n+    /**\n+     * Implementations of this interface format certain objects to strings.\n+     */\n+    public interface ObjectFormatter {\n+        \n+        /**\n+         * Formats an object to a string and writes the result to a string buffer.\n+         * @param sb the target string buffer\n+         * @param obj the object to be formatted\n+         */\n+        void format(StringBuffer sb, Object obj);\n+        \n+        /**\n+         * Indicates whether a given object is supported.\n+         * @param obj the object\n+         * @return true if the object is supported by the formatter\n+         */\n+        boolean supportsObject(Object obj);\n+    }\n+    \n+    /**\n+     * Implementations of this interface do some computation based on the message parameters\n+     * given to it. Note: at the moment, this has to be done in a local-independent way since\n+     * there is no locale information.\n+     */\n+    public interface Function {\n+        \n+        /**\n+         * Executes the function.\n+         * @param params the message parameters\n+         * @return the function result\n+         */\n+        Object evaluate(Map params);\n+        \n+        /**\n+         * Returns the name of the function.\n+         * @return the name of the function\n+         */\n+        Object getName();\n+    }\n+    \n+    private static class TextPart implements Part {\n+        \n+        private String text;\n+        \n+        public TextPart(String text) {\n+            this.text = text;\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            sb.append(text);\n+        }\n+        \n+        public boolean isGenerated(Map params) {\n+            return true;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return this.text;\n+        }\n+    }\n+    \n+    private static class SimpleFieldPart implements Part {\n+        \n+        private String fieldName;\n+        \n+        public SimpleFieldPart(String fieldName) {\n+            this.fieldName = fieldName;\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            if (!params.containsKey(fieldName)) {\n+                throw new IllegalArgumentException(\n+                        \"Message pattern contains unsupported field name: \" + fieldName);\n+            }\n+            Object obj = params.get(fieldName);\n+            formatObject(obj, sb);\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            Object obj = params.get(fieldName);\n+            return obj != null;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{\" + this.fieldName + \"}\";\n+        }\n+    }\n+    \n+    /**\n+     * Formats an object to a string and writes the result to a string buffer. This method\n+     * usually uses the object's <code>toString()</code> method unless there is an\n+     * {@link ObjectFormatter} that supports the object. {@link ObjectFormatter}s are registered\n+     * through the service provider mechanism defined by the JAR specification.\n+     * @param obj the object to be formatted\n+     * @param target the target string buffer\n+     */\n+    public static void formatObject(Object obj, StringBuffer target) {\n+        if (obj instanceof String) {\n+            target.append(obj);\n+        } else {\n+            boolean handled = false;\n+            Iterator iter = OBJECT_FORMATTERS.iterator();\n+            while (iter.hasNext()) {\n+                ObjectFormatter formatter = (ObjectFormatter)iter.next();\n+                if (formatter.supportsObject(obj)) {\n+                    formatter.format(target, obj);\n+                    handled = true;\n+                    break;\n+                }\n+            }\n+            if (!handled) {\n+                target.append(String.valueOf(obj));\n+            }\n+        }\n+    }\n+    \n+    private static class FunctionPart implements Part {\n+        \n+        private Function function;\n+        \n+        public FunctionPart(String functionName) {\n+            this.function = getFunction(functionName);\n+            if (this.function == null) {\n+                throw new IllegalArgumentException(\"Unknown function: \" + functionName);\n+            }\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            Object obj = this.function.evaluate(params);\n+            formatObject(obj, sb);\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            Object obj = this.function.evaluate(params);\n+            return obj != null;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{#\" + this.function.getName() + \"}\";\n+        }\n+    }\n+    \n+    private static class CompositePart implements Part {\n+        \n+        protected List parts = new java.util.ArrayList();\n+        private boolean conditional;\n+        private boolean hasSections = false;\n+        \n+        public CompositePart(boolean conditional) {\n+            this.conditional = conditional;\n+        }\n+        \n+        private CompositePart(List parts) {\n+            this.parts.addAll(parts);\n+            this.conditional = true;\n+        }\n+        \n+        public void addChild(Part part) {\n+            if (part == null) {\n+                throw new NullPointerException(\"part must not be null\");\n+            }\n+            if (hasSections) {\n+                CompositePart composite = (CompositePart)this.parts.get(this.parts.size() - 1);\n+                composite.addChild(part);\n+            } else {\n+                this.parts.add(part);\n+            }\n+        }\n+        \n+        public void newSection() {\n+            if (!hasSections) {\n+                List p = this.parts;\n+                //Dropping into a different mode...\n+                this.parts = new java.util.ArrayList();\n+                this.parts.add(new CompositePart(p));\n+                hasSections = true;\n+            }\n+            this.parts.add(new CompositePart(true));\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            if (hasSections) {\n+                Iterator iter = this.parts.iterator();\n+                while (iter.hasNext()) {\n+                    CompositePart part = (CompositePart)iter.next();\n+                    if (part.isGenerated(params)) {\n+                        part.write(sb, params);\n+                        break;\n+                    }\n+                }\n+            } else {\n+                if (isGenerated(params)) {\n+                    Iterator iter = this.parts.iterator();\n+                    while (iter.hasNext()) {\n+                        Part part = (Part)iter.next();\n+                        part.write(sb, params);\n+                    }\n+                }\n+            }\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            if (hasSections) {\n+                Iterator iter = this.parts.iterator();\n+                while (iter.hasNext()) {\n+                    Part part = (Part)iter.next();\n+                    if (part.isGenerated(params)) {\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            } else {\n+                if (conditional) {\n+                    Iterator iter = this.parts.iterator();\n+                    while (iter.hasNext()) {\n+                        Part part = (Part)iter.next();\n+                        if (!part.isGenerated(params)) {\n+                            return false;\n+                        }\n+                    }\n+                }\n+                return true;\n+            }\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return this.parts.toString();\n+        }\n+    }\n+    \n+    \n+    static String unescapeComma(String string) {\n+        return string.replaceAll(\"\\\\\\\\,\", \",\");\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "sha": "a2169156aec439871931c7e088ed2ec979dd7b9c",
                "status": "added"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/ChoiceFieldPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.text.ChoiceFormat;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines a \"choice\" field part that works like {@link ChoiceFormat}.\n+ */\n+public class ChoiceFieldPart implements Part {\n+    \n+    private static final Pattern VARIABLE_REGEX = Pattern.compile(\"\\\\{([^\\\\}]+)\\\\}\");\n+    \n+    private String fieldName;\n+    private ChoiceFormat choiceFormat;\n+    \n+    /**\n+     * Creates a new choice part.\n+     * @param fieldName the field name to work on\n+     * @param choicesPattern the choices pattern (as used by {@link ChoiceFormat})\n+     */\n+    public ChoiceFieldPart(String fieldName, String choicesPattern) {\n+        this.fieldName = fieldName;\n+        this.choiceFormat = new ChoiceFormat(choicesPattern);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        Object obj = params.get(fieldName);\n+        Number num = (Number)obj;\n+        String result = this.choiceFormat.format(num.doubleValue());\n+        Matcher m = VARIABLE_REGEX.matcher(result);\n+        if (m.find()) {\n+            //Resolve inner variables\n+            AdvancedMessageFormat f = new AdvancedMessageFormat(result);\n+            f.format(params, sb);\n+        } else {\n+            sb.append(result);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",choice, ....}\";\n+    }\n+    \n+    /** Factory for ChoiceFieldPart. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new ChoiceFieldPart(fieldName, values);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"choice\";\n+        }\n+        \n+    }\n+\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "sha": "df457a02b5b451577c524f2486299f5fc8890251",
                "status": "added"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/EqualsFieldPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines an \"equals\" field part that can compare a field's string value against another string.\n+ * It returns either of two possible values attached as additional part parameters. Example:\n+ * <code>{field,equals,new,This is new!,This is old!}</code>\n+ */\n+public class EqualsFieldPart extends IfFieldPart {\n+    \n+    private String equalsValue;\n+    \n+    /**\n+     * Creates a new \"equals\" field part.\n+     * @param fieldName the field name\n+     * @param values the unparsed parameter values\n+     */\n+    public EqualsFieldPart(String fieldName, String values) {\n+        super(fieldName, values);\n+    }\n+\n+    /** {@inheritDoc} */\n+    protected void parseValues(String values) {\n+        String[] parts = AdvancedMessageFormat.COMMA_SEPARATOR_REGEX.split(values, 3);\n+        this.equalsValue = parts[0];\n+        if (parts.length == 1) {\n+            throw new IllegalArgumentException(\n+                    \"'equals' format must have at least 2 parameters\");\n+        }\n+        if (parts.length == 3) {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+            elseValue = AdvancedMessageFormat.unescapeComma(parts[2]);\n+        } else {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+        }\n+    }\n+    \n+    /** {@inheritDoc} */\n+    protected boolean isTrue(Map params) {\n+        Object obj = params.get(fieldName);\n+        if (obj != null) {\n+            return String.valueOf(obj).equals(this.equalsValue);\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \", equals \" + this.equalsValue + \"}\";\n+    }\n+    \n+    /**\n+     * Part factory for \"equals\".\n+     */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new EqualsFieldPart(fieldName, values);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"equals\";\n+        }\n+        \n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "sha": "2114b0d0087ce185c7ff274c2a0d3f53a47bc1bd",
                "status": "added"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.fonts.Glyphs;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Function formatting a character to a glyph name.\n+ */\n+public class GlyphNameFieldPart implements Part {\n+\n+    private String fieldName;\n+    \n+    /**\n+     * Creates a new glyph name field part\n+     * @param fieldName the field name\n+     */\n+    public GlyphNameFieldPart(String fieldName) {\n+        this.fieldName = fieldName;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null && getGlyphName(obj).length() > 0;\n+    }\n+    \n+    private String getGlyphName(Object obj) {\n+        if (obj instanceof Character) {\n+            return Glyphs.charToGlyphName(((Character)obj).charValue());\n+        } else {\n+            throw new IllegalArgumentException(\n+                    \"Value for glyph name part must be a Character but was: \"\n+                        + obj.getClass().getName());\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        if (!params.containsKey(fieldName)) {\n+            throw new IllegalArgumentException(\n+                    \"Message pattern contains unsupported field name: \" + fieldName);\n+        }\n+        Object obj = params.get(fieldName);\n+        sb.append(getGlyphName(obj));\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",glyph-name}\";\n+    }\n+    \n+    /** Factory for {@link GlyphNameFieldPart}. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new GlyphNameFieldPart(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"glyph-name\";\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "sha": "5d78cdfadbf398ffbf57397c597a00e408038a3e",
                "status": "added"
            },
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/HexFieldPart.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/HexFieldPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/HexFieldPart.java",
                "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Function formatting a number or character to a hex value.\n+ */\n+public class HexFieldPart implements Part {\n+\n+    private String fieldName;\n+    \n+    /**\n+     * Creates a new hex field part\n+     * @param fieldName the field name\n+     */\n+    public HexFieldPart(String fieldName) {\n+        this.fieldName = fieldName;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        if (!params.containsKey(fieldName)) {\n+            throw new IllegalArgumentException(\n+                    \"Message pattern contains unsupported field name: \" + fieldName);\n+        }\n+        Object obj = params.get(fieldName);\n+        if (obj instanceof Character) {\n+            sb.append(Integer.toHexString(((Character)obj).charValue()));\n+        } else if (obj instanceof Number) {\n+            sb.append(Integer.toHexString(((Number)obj).intValue()));\n+        } else {\n+            throw new IllegalArgumentException(\"Incompatible value for hex field part: \"\n+                    + obj.getClass().getName());\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",hex}\";\n+    }\n+    \n+    /** Factory for {@link HexFieldPart}. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new HexFieldPart(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"hex\";\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/HexFieldPart.java",
                "sha": "19f47f3d7d007fdffc4bce701e2179743741010a",
                "status": "added"
            },
            {
                "additions": 116,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/IfFieldPart.java",
                "changes": 116,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/IfFieldPart.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/IfFieldPart.java",
                "patch": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines an \"if\" field part that checks if field's value is true or false.\n+ * It returns either of two possible values attached as additional part parameters. Example:\n+ * <code>{field,if,Yes,No}</code>\n+ */\n+public class IfFieldPart implements Part {\n+    \n+    /** the field name for the part */\n+    protected String fieldName;\n+    /** the value being returned if the field is true */\n+    protected String ifValue;\n+    /** the value being returned if the field is false */\n+    protected String elseValue;\n+    \n+    /**\n+     * Creates a new \"if\" field part.\n+     * @param fieldName the field name\n+     * @param values the unparsed parameter values\n+     */\n+    public IfFieldPart(String fieldName, String values) {\n+        this.fieldName = fieldName;\n+        parseValues(values);\n+    }\n+\n+    /**\n+     * Parses the parameter values\n+     * @param values the unparsed parameter values\n+     */\n+    protected void parseValues(String values) {\n+        String[] parts = AdvancedMessageFormat.COMMA_SEPARATOR_REGEX.split(values, 2);\n+        if (parts.length == 2) {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[0]);\n+            elseValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+        } else {\n+            ifValue = AdvancedMessageFormat.unescapeComma(values);\n+        }\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        boolean isTrue = isTrue(params);\n+        if (isTrue) {\n+            sb.append(ifValue);\n+        } else if (elseValue != null) {\n+            sb.append(elseValue);\n+        }\n+    }\n+\n+    /**\n+     * Indicates whether the field's value is true. If the field is not a boolen, it is true\n+     * if the field is not null.\n+     * @param params the message parameters\n+     * @return true the field's value as boolean\n+     */\n+    protected boolean isTrue(Map params) {\n+        Object obj = params.get(fieldName);\n+        if (obj instanceof Boolean) {\n+            return ((Boolean)obj).booleanValue();\n+        } else {\n+            return (obj != null);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        return isTrue(params) || (elseValue != null);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \", if...}\";\n+    }\n+    \n+    /**\n+     * Part factory for \"if\".\n+     */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new IfFieldPart(fieldName, values);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"if\";\n+        }\n+        \n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/IfFieldPart.java",
                "sha": "31cd8f36cc9697c6af358a7fd665b8a8ef875be1",
                "status": "added"
            },
            {
                "additions": 42,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/LocatorFormatter.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.ObjectFormatter;\n+\n+/**\n+ * Object formatter for the SAX Locator object.\n+ */\n+public class LocatorFormatter implements ObjectFormatter {\n+\n+    /** {@inheritDoc} */\n+    public void format(StringBuffer sb, Object obj) {\n+        Locator loc = (Locator)obj;\n+        sb.append(loc.getLineNumber()).append(\":\").append(loc.getColumnNumber());\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean supportsObject(Object obj) {\n+        return obj instanceof Locator;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "sha": "d9532c66d31b256512491921ea3e24f26363c45a",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.events.FOPTestEventModelFactory\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "sha": "a40d5658a4403b8a0afaae7111414a81d406953e",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/UtilityCodeTestSuite.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "patch": "@@ -23,12 +23,14 @@\n import junit.framework.TestSuite;\n \n import org.apache.fop.pdf.PDFObjectTestCase;\n+import org.apache.fop.events.BasicEventTestCase;\n import org.apache.fop.traits.BorderPropsTestCase;\n import org.apache.fop.util.DataURIResolverTestCase;\n import org.apache.fop.util.ElementListUtilsTestCase;\n import org.apache.fop.util.PDFNumberTestCase;\n import org.apache.fop.util.ColorUtilTestCase;\n import org.apache.fop.util.UnitConvTestCase;\n+import org.apache.fop.util.XMLResourceBundleTestCase;\n \n /**\n  * Test suite for FOP's utility classes.\n@@ -50,6 +52,8 @@ public static Test suite() {\n         suite.addTest(new TestSuite(BorderPropsTestCase.class));\n         suite.addTest(new TestSuite(ElementListUtilsTestCase.class));\n         suite.addTest(new TestSuite(DataURIResolverTestCase.class));\n+        suite.addTest(new TestSuite(BasicEventTestCase.class));\n+        suite.addTest(new TestSuite(XMLResourceBundleTestCase.class));\n         //$JUnit-END$\n         return suite;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "sha": "d2577c251ad109894e1bbc3afb565ea2eec78a0d",
                "status": "modified"
            },
            {
                "additions": 95,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/BasicEventTestCase.java",
                "changes": 95,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/BasicEventTestCase.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/BasicEventTestCase.java",
                "patch": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+public class BasicEventTestCase extends TestCase {\n+\n+    public void testBasics() throws Exception {\n+        \n+        MyEventListener listener = new MyEventListener();\n+\n+        EventBroadcaster broadcaster = new DefaultEventBroadcaster();\n+        broadcaster.addEventListener(listener);\n+        assertTrue(broadcaster.hasEventListeners());\n+        \n+        Event ev = new Event(this, \"123\", EventSeverity.INFO,\n+                Event.paramsBuilder()\n+                    .param(\"reason\", \"I'm tired\")\n+                    .param(\"blah\", new Integer(23))\n+                    .build());\n+        broadcaster.broadcastEvent(ev);\n+        \n+        ev = listener.event;\n+        assertNotNull(ev);\n+        assertEquals(\"123\", listener.event.getEventID());\n+        assertEquals(EventSeverity.INFO, listener.event.getSeverity());\n+        assertEquals(\"I'm tired\", ev.getParam(\"reason\"));\n+        assertEquals(new Integer(23), ev.getParam(\"blah\"));\n+        \n+        broadcaster.removeEventListener(listener);\n+        assertFalse(broadcaster.hasEventListeners());\n+\n+        //Just check that there are no NPEs\n+        broadcaster.broadcastEvent(ev);\n+    }\n+\n+    public void testEventProducer() throws Exception {\n+        MyEventListener listener = new MyEventListener();\n+\n+        EventBroadcaster broadcaster = new DefaultEventBroadcaster();\n+        broadcaster.addEventListener(listener);\n+        assertTrue(broadcaster.hasEventListeners());\n+        \n+        \n+        TestEventProducer producer = TestEventProducer.Provider.get(broadcaster);\n+        producer.complain(this, \"I'm tired\", 23);\n+        \n+        Event ev = listener.event;\n+        assertNotNull(ev);\n+        assertEquals(\"org.apache.fop.events.TestEventProducer.complain\",\n+                listener.event.getEventID());\n+        assertEquals(EventSeverity.WARN, listener.event.getSeverity());\n+        assertEquals(\"I'm tired\", ev.getParam(\"reason\"));\n+        assertEquals(new Integer(23), ev.getParam(\"blah\"));\n+        \n+        broadcaster.removeEventListener(listener);\n+        assertFalse(broadcaster.hasEventListeners());\n+\n+        //Just check that there are no NPEs\n+        broadcaster.broadcastEvent(ev);\n+    }\n+    \n+    private class MyEventListener implements EventListener {\n+\n+        private Event event;\n+        \n+        public void processEvent(Event event) {\n+            if (this.event != null) {\n+                fail(\"Multiple events received\");\n+            }\n+            this.event = event;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/BasicEventTestCase.java",
                "sha": "d365ca0ec68160c9f47ac754310f62e6fbf35ff6",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/FOPTestEventModelFactory.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Factory for FOP's test event model.\n+ */\n+public class FOPTestEventModelFactory extends AbstractEventModelFactory {\n+\n+    private static final String EVENT_MODEL_FILENAME = \"test-event-model.xml\";\n+\n+    /** {@inheritDoc} */\n+    public EventModel createEventModel() {\n+        return loadModel(getClass(), EVENT_MODEL_FILENAME);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "sha": "796a9cfb51f8cae137fd23ef11e8404bc7bb76ff",
                "status": "added"
            },
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/TestEventProducer.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/TestEventProducer.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/TestEventProducer.java",
                "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+public interface TestEventProducer extends EventProducer {\n+\n+    /**\n+     * Complain about something.\n+     * @param source the event source\n+     * @param reason the reason for the complaint\n+     * @param blah the complaint\n+     * @event.severity WARN\n+     */\n+    void complain(Object source, String reason, int blah);\n+    \n+    /**\n+     * Express joy about something.\n+     * @param source the event source\n+     * @param what the cause for the joy\n+     * @event.severity INFO\n+     */\n+    void enjoy(Object source, String what);\n+ \n+    public class Provider {\n+        \n+        public static TestEventProducer get(EventBroadcaster broadcaster) {\n+            return (TestEventProducer)broadcaster.getEventProducerFor(TestEventProducer.class);\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/events/TestEventProducer.java",
                "sha": "7dfba75bad173f7eccd241200de982c6f2ac07f7",
                "status": "added"
            },
            {
                "additions": 183,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "changes": 183,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "patch": "@@ -0,0 +1,183 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.util.Map;\n+\n+import junit.framework.TestCase;\n+\n+import org.xml.sax.helpers.LocatorImpl;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+import org.apache.fop.util.text.AdvancedMessageFormat;\n+\n+/**\n+ * Tests for EventFormatter.\n+ */\n+public class AdvancedMessageFormatTestCase extends TestCase {\n+\n+    public void testFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        String pattern\n+            = \"Element \\\"{elementName}\\\" is missing[ required property \\\"{propertyName}\\\"]!\";\n+        format = new AdvancedMessageFormat(pattern);\n+\n+        Map params = new java.util.HashMap();\n+        params.put(\"node\", new Object());\n+        params.put(\"elementName\", \"fo:external-graphic\");\n+        params.put(\"propertyName\", \"src\");\n+        \n+        msg = format.format(params);\n+        assertEquals(\"Element \\\"fo:external-graphic\\\" is missing required property \\\"src\\\"!\", msg);\n+        \n+        params.remove(\"propertyName\");\n+        msg = format.format(params);\n+        assertEquals(\"Element \\\"fo:external-graphic\\\" is missing!\", msg);\n+        \n+        pattern\n+            = \"Testing \\\\{escaped \\\\[characters\\\\], now a normal field {elementName}!\";\n+        format = new AdvancedMessageFormat(pattern);\n+        msg = format.format(params);\n+        assertEquals(\"Testing {escaped [characters], now a normal field fo:external-graphic!\", msg);\n+\n+        pattern = \"Multi-conditional: [case1: {var1}|case2: {var2}|case3: {var3}]\";\n+        format = new AdvancedMessageFormat(pattern);\n+        \n+        params = new java.util.HashMap();\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: \", msg);\n+        \n+        params.put(\"var3\", \"value3\");\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: case3: value3\", msg);\n+        params.put(\"var1\", \"value1\");\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: case1: value1\", msg);\n+    }\n+    \n+    public void testObjectFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        String pattern\n+            = \"Here's a Locator: {locator}\";\n+        format = new AdvancedMessageFormat(pattern);\n+\n+        Map params = new java.util.HashMap();\n+        LocatorImpl loc = new LocatorImpl();\n+        loc.setColumnNumber(7);\n+        loc.setLineNumber(12);\n+        params.put(\"locator\", loc);\n+        \n+        msg = format.format(params);\n+        assertEquals(\"Here\\'s a Locator: 12:7\", msg);\n+    }\n+    \n+    public void testIfFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\"You are{isBad,if, not} nice!\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"isBad\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isBad\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are not nice!\", msg);\n+\n+        format = new AdvancedMessageFormat(\"You are{isGood,if, very, not so} nice!\");\n+\n+        params = new java.util.HashMap();\n+\n+        msg = format.format(params); //isGood is missing\n+        assertEquals(\"You are not so nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are not so nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are very nice!\", msg);\n+\n+        format = new AdvancedMessageFormat(\"You are{isGood,if, very\\\\, very} nice!\");\n+\n+        params = new java.util.HashMap();\n+\n+        msg = format.format(params); //isGood is missing\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are very, very nice!\", msg);\n+    }\n+    \n+    public void testEqualsFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\n+                \"Error{severity,equals,EventSeverity:FATAL,,\\nSome explanation!}\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"severity\", EventSeverity.FATAL);\n+        msg = format.format(params);\n+        assertEquals(\"Error\", msg);\n+\n+        params.put(\"severity\", EventSeverity.WARN);\n+        msg = format.format(params);\n+        assertEquals(\"Error\\nSome explanation!\", msg);\n+    }\n+    \n+    public void testChoiceFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\n+                \"You have {amount,choice,0#nothing|0<{amount} bucks|100<more than enough}.\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"amount\", new Integer(0));\n+        msg = format.format(params);\n+        assertEquals(\"You have nothing.\", msg);\n+\n+        params.put(\"amount\", new Integer(7));\n+        msg = format.format(params);\n+        assertEquals(\"You have 7 bucks.\", msg);\n+\n+        params.put(\"amount\", new Integer(140));\n+        msg = format.format(params);\n+        assertEquals(\"You have more than enough.\", msg);\n+\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "sha": "c0e003573f8b1d918e9af030d0c6c579007f2ea8",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests for XMLResourceBundle.\n+ */\n+public class XMLResourceBundleTestCase extends TestCase {\n+\n+    public void testWithValidFile() throws Exception {\n+        ResourceBundle bundle = XMLResourceBundle.getXMLBundle(\n+                getClass().getName(), Locale.ENGLISH, getClass().getClassLoader());\n+        ResourceBundle bundleDE = XMLResourceBundle.getXMLBundle(\n+                getClass().getName(), Locale.GERMAN, getClass().getClassLoader());\n+        \n+        assertEquals(\"\", bundle.getLocale().getLanguage());\n+        assertEquals(\"de\", bundleDE.getLocale().getLanguage());\n+\n+        assertEquals(\"Hello World!\", bundle.getString(\"hello-world\"));\n+        assertEquals(\"Hallo Welt!\", bundleDE.getString(\"hello-world\"));\n+\n+        //Check fallback to English\n+        assertEquals(\"Untranslatable\", bundle.getString(\"untranslatable\"));\n+        assertEquals(\"Untranslatable\", bundleDE.getString(\"untranslatable\"));\n+    }\n+    \n+    public void testWithInvalidFile() throws Exception {\n+        try {\n+            ResourceBundle bundle = XMLResourceBundle.getXMLBundle(\n+                    \"org.apache.fop.util.invalid-translation-file\", getClass().getClassLoader());\n+            fail(\"Expected exception\");\n+        } catch (MissingResourceException e) {\n+            //expected\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "sha": "a1ced32a26a10688dc432dc9c90f91ccdcedd70b",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"hello-world\">Hello World!</message>\n+  <message key=\"untranslatable\">Untranslatable</message>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "sha": "5cdee49ec4af0e29840a2a31f87226f9bc52901e",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"de\">\n+  <message key=\"hello-world\">Hallo Welt!</message>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "sha": "44cf5a5b41d45234d8338bf5dba5d927ad9d89bd",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/invalid-translation-file.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/invalid-translation-file.xml?ref=309f4e2998c676913e64070adda8dca5e3768fad",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/invalid-translation-file.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key1=\"hello-world\">Hello World!</message>\n+  <something>blah</something>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/309f4e2998c676913e64070adda8dca5e3768fad/test/java/org/apache/fop/util/invalid-translation-file.xml",
                "sha": "09306b7cca48c49a7ccac08a09d2aca0a5849d4b",
                "status": "added"
            }
        ],
        "message": "Merged revisions 647692,647742,647745 via svnmerge from \nhttps://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n\n................\n  r647692 | jeremias | 2008-04-14 09:25:22 +0100 (Mon, 14 Apr 2008) | 3 lines\n  \n  Initialized merge tracking via \"svnmerge\" with revisions \"1-615152\" from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ProcessingFeedback\n................\n  r647742 | jeremias | 2008-04-14 12:53:29 +0100 (Mon, 14 Apr 2008) | 298 lines\n  \n  Merged branch\n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ProcessingFeedback\n  into Trunk.\n  \n  Changes on branch:\n  ........\n    r615153 | jeremias | 2008-01-25 10:07:21 +0100 (Fr, 25 Jan 2008) | 1 line\n    \n    Created temporary branch for processing feedback.\n  ........\n    r615155 | jeremias | 2008-01-25 10:11:59 +0100 (Fr, 25 Jan 2008) | 1 line\n    \n    Initial commit of what I've built already for those who prefer code to minimalistic design docs.\n  ........\n    r615278 | jeremias | 2008-01-25 18:25:00 +0100 (Fr, 25 Jan 2008) | 1 line\n    \n    EventProducer interfaces now operational.\n  ........\n    r615773 | jeremias | 2008-01-28 10:06:16 +0100 (Mo, 28 Jan 2008) | 1 line\n    \n    No casting in client code when creating EventProducer instances.\n  ........\n    r616242 | vhennebert | 2008-01-29 11:34:45 +0100 (Di, 29 Jan 2008) | 3 lines\n    \n    Trick to avoid hard-coding the class name of EventProducer in the source file.\n    Feel free to revert if it's not ok.\n  ........\n    r616900 | jeremias | 2008-01-30 21:59:31 +0100 (Mi, 30 Jan 2008) | 1 line\n    \n    Generate event model XMLs in to the build directory: build/gensrc and build/test-gensrc (the latter is new and needs to be setup as source folder in your IDE!)\n  ........\n    r616907 | jeremias | 2008-01-30 22:12:59 +0100 (Mi, 30 Jan 2008) | 1 line\n    \n    Added an XMLResourceBundle that uses an XML file instead of a properties file to load the translations. The XML format is the same as for Cocoon's XMLResourceBundle.\n  ........\n    r617097 | vhennebert | 2008-01-31 11:53:21 +0100 (Do, 31 Jan 2008) | 2 lines\n    \n    Minor typo + slight improvement of Javadoc\n  ........\n    r617176 | jeremias | 2008-01-31 19:14:19 +0100 (Do, 31 Jan 2008) | 5 lines\n    \n    Renamed FopEvent to Event as suggested by Simon.\n    EventProducerCollectorTask.java now reads the EventSeverity from a doclet tag.\n    Added generation of EventProducer translations (including simple merging, no validation, yet)\n    EventFormatter introduced (only basic functionality, yet).\n    Added a simple EventListener implementation that uses EventFormatter to convert the events to human-readable, localized messages that are sent to the log via Commons Logging.\n  ........\n    r617362 | jeremias | 2008-02-01 08:18:07 +0100 (Fr, 01 Feb 2008) | 1 line\n    \n    Some remaining rename operations based on an earlier discussion.\n  ........\n    r617413 | jeremias | 2008-02-01 10:46:26 +0100 (Fr, 01 Feb 2008) | 2 lines\n    \n    Extracted formatting functionality into utility class AdvancedMessageFormat.java.\n    AdvancedMessageFormat.java now supports conditional sub-groups (delimited by []).\n  ........\n    r618682 | jeremias | 2008-02-05 17:07:08 +0100 (Di, 05 Feb 2008) | 1 line\n    \n    Add support for special object formatters (where toString() isn't good enough). ATM, it's hard-coded but could later be hooked into dynamic discovery if we have multiple such formatters. The SAX Locator is the only example for now.\n  ........\n    r618686 | jeremias | 2008-02-05 17:12:56 +0100 (Di, 05 Feb 2008) | 3 lines\n    \n    Hooked most of FONode into the new event mechanism. The FOUserAgent provides a DefaultEventBroadcaster instance.\n    If a producer method declares throwing an exception, the event is automatically marked FATAL and the dynamic proxy throws an exception right after notifying the listeners.\n    The exceptions are created through the EventExceptionManager. It currently contains only one exception factory for ValidationException. If we need more such factories it's better to register them dynamically. Right now, they're hard-coded.\n  ........\n    r619313 | jeremias | 2008-02-07 10:14:15 +0100 (Do, 07 Feb 2008) | 1 line\n    \n    Make sure no events are now just silently swallowed because after upgrading a user doesn't know about the event system.\n  ........\n    r619314 | jeremias | 2008-02-07 10:14:46 +0100 (Do, 07 Feb 2008) | 1 line\n    \n    Log what translation file is being written.\n  ........\n    r619320 | jeremias | 2008-02-07 10:31:00 +0100 (Do, 07 Feb 2008) | 2 lines\n    \n    FObj hooked into the event system.\n    Code reduction using a protected method on FONode to acquire a FOValidationEventProducer.\n  ........\n    r619359 | jeremias | 2008-02-07 11:59:19 +0100 (Do, 07 Feb 2008) | 2 lines\n    \n    Fop's QName now extends XGCommons' QName to initiate a transition.\n    Hooked PropertyList into the event mechanism.\n  ........\n    r631252 | jeremias | 2008-02-26 16:24:33 +0100 (Di, 26 Feb 2008) | 1 line\n    \n    Removed superfluous warning.\n  ........\n    r631268 | jeremias | 2008-02-26 17:08:11 +0100 (Di, 26 Feb 2008) | 1 line\n    \n    Deprecated two methods which are a problem for localization. Also helps finding additional spots to switch over to the event mechanism.\n  ........\n    r633852 | jeremias | 2008-03-05 15:20:24 +0100 (Mi, 05 Mrz 2008) | 1 line\n    \n    Add severity to formatting parameters.\n  ........\n    r633855 | jeremias | 2008-03-05 15:21:57 +0100 (Mi, 05 Mrz 2008) | 4 lines\n    \n    Added support for additional field styles:\n    {<fieldname>,if,<true-text>,<false-text>}\n    {<fieldname>,equals,<test-string>,<true-text>,<false-text>}\n  ........\n    r633856 | jeremias | 2008-03-05 15:24:04 +0100 (Mi, 05 Mrz 2008) | 2 lines\n    \n    Javadocs and TODOs.\n    EventListeners can change the event severity.\n  ........\n    r633857 | jeremias | 2008-03-05 15:27:08 +0100 (Mi, 05 Mrz 2008) | 4 lines\n    \n    Javadocs.\n    Moved out event listener registration into a CompositeEventListener.\n    Event broadcaster uses the events effective severity, not the initial value (for the case where listeners override the initial value).\n    Set up a special EventBroadCaster in the FOUserAgent that filters events through a class (FOValidationEventListenerProxy) that adjusts the event severity for relaxed validation.\n  ........\n    r633858 | jeremias | 2008-03-05 15:32:07 +0100 (Mi, 05 Mrz 2008) | 2 lines\n    \n    Instead of always decentrally checking whether strict validation is enabled or not, this is now done in a special event listener. The event producer method caller simply indicates whether it can recover from the error condition and continue.\n    Started switching to event production in table FOs.\n  ........\n    r634027 | jeremias | 2008-03-05 21:58:35 +0100 (Mi, 05 Mrz 2008) | 7 lines\n    \n    Moved AdvancedMessageFormat into its own package.\n    AdvancedMessageFormat got the following added functionality:\n    - Alternative conditional regions [ bla {field}] -> [ bla {field1}| even more bla {field2}]\n    - Functions: functions get access to the parameters and they can produce an object that is then formatted ({#gatherContextInfo})\n    - \"if\" and \"equals\" format moved to top-level classes and added by dynamic registration.\n    EventFormatter now supports includes in the form {{includeName}} so you can include other entries from the resource bundle for better reuse.\n    Some more events in table code.\n  ........\n    r634031 | jeremias | 2008-03-05 22:05:22 +0100 (Mi, 05 Mrz 2008) | 1 line\n    \n    SVN Props\n  ........\n    r634208 | jeremias | 2008-03-06 11:26:52 +0100 (Do, 06 Mrz 2008) | 2 lines\n    \n    Improved context gathering.\n    Moved GatherContextInfoFunction to an inner class of FONode to reduce visibilities.\n  ........\n    r634209 | jeremias | 2008-03-06 11:28:14 +0100 (Do, 06 Mrz 2008) | 1 line\n    \n    Made FOPException localizable.\n  ........\n    r634280 | jeremias | 2008-03-06 15:38:30 +0100 (Do, 06 Mrz 2008) | 2 lines\n    \n    ExceptionFactory is now dynamically registered.\n    More table warnings and errors switch to events.\n  ........\n    r634326 | jeremias | 2008-03-06 17:08:16 +0100 (Do, 06 Mrz 2008) | 1 line\n    \n    Remaining table FOs switched to events.\n  ........\n    r634328 | jeremias | 2008-03-06 17:09:21 +0100 (Do, 06 Mrz 2008) | 1 line\n    \n    Deprecated FOP's QName. Mixing with Commons' variant only produces problems.\n  ........\n    r634381 | jeremias | 2008-03-06 20:12:57 +0100 (Do, 06 Mrz 2008) | 2 lines\n    \n    Made the \"invalidChild\" event fully localizable by adding a \"lookup\" field for the optional rule to be displayed.\n    And a few switches to the event system.\n  ........\n    r634692 | jeremias | 2008-03-07 15:31:43 +0100 (Fr, 07 Mrz 2008) | 1 line\n    \n    More FO tree stuff switched to events.\n  ........\n    r634712 | jeremias | 2008-03-07 16:19:21 +0100 (Fr, 07 Mrz 2008) | 1 line\n    \n    Avoid an NPE that says nothing (ex. could happen if the message template is wrong).\n  ........\n    r634738 | jeremias | 2008-03-07 17:38:21 +0100 (Fr, 07 Mrz 2008) | 2 lines\n    \n    Non-FO children were not properly run through validation by FOTreeBuilder.\n    Unified the way that non-FO elements are validated. Some FOs were already fixed. I now fixed the rest, so foreign elements can occur everywhere.\n  ........\n    r637833 | jeremias | 2008-03-17 12:01:41 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Exception while cloning for RetrieveMarker to be handled by user as suggested by Andreas.\n  ........\n    r637835 | jeremias | 2008-03-17 12:03:31 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Throw a RuntimeException of no other Exception class is specified for an event as a fallback if someone just sets the event severity to FATAL.\n  ........\n    r637838 | jeremias | 2008-03-17 12:06:10 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Throw a meaningful exception when the property name is wrong. Otherwise, there will be an ArrayIndexOutOfBoundsException.\n  ........\n    r637859 | jeremias | 2008-03-17 13:35:26 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Throw a meaningful exception when the property name is wrong. Otherwise, there will be an ArrayIndexOutOfBoundsException.\n  ........\n    r637938 | jeremias | 2008-03-17 16:19:51 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Switched pagination package to events.\n  ........\n    r637947 | jeremias | 2008-03-17 16:45:16 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Removed unlocalizable validation helper methods.\n  ........\n    r637952 | jeremias | 2008-03-17 16:59:02 +0100 (Mo, 17 Mrz 2008) | 1 line\n    \n    Events on FOTreeBuilder.\n  ........\n    r638299 | jeremias | 2008-03-18 11:09:30 +0100 (Di, 18 Mrz 2008) | 2 lines\n    \n    Added support for java.util.text's ChoiceFormat to AdvancedMessageFormat.\n    Reuse the regexes as constants.\n  ........\n    r638302 | jeremias | 2008-03-18 11:17:06 +0100 (Di, 18 Mrz 2008) | 1 line\n    \n    Events for inline-level layout managers.\n  ........\n    r638774 | jeremias | 2008-03-19 11:17:36 +0100 (Mi, 19 Mrz 2008) | 1 line\n    \n    Added DEBUG level.\n  ........\n    r638777 | jeremias | 2008-03-19 11:23:40 +0100 (Mi, 19 Mrz 2008) | 3 lines\n    \n    Generalized FOValidationEventListenerProxy into FOPEventListenerProxy, the main proxy for FOP's own event manipulation proxy. Done because of support for overflow=\"hidden\" vs. overflow=\"error-if-overflow\".\n    Switched block-level layout managers to events.\n    Some cleanup along the way.\n  ........\n    r639222 | jeremias | 2008-03-20 10:27:34 +0100 (Do, 20 Mrz 2008) | 2 lines\n    \n    Some initial work for event forwarding from Batik.\n    Missing errors/exceptions converted to events in PageSequenceMaster.\n  ........\n    r639270 | jeremias | 2008-03-20 13:50:35 +0100 (Do, 20 Mrz 2008) | 1 line\n    \n    Removed DEBUG event severity again. Promoted constrained geometry adjustment event to INFO level as per discussion.\n  ........\n    r640395 | jeremias | 2008-03-24 13:39:13 +0100 (Mo, 24 Mrz 2008) | 3 lines\n    \n    Moved the creation of the fallback LoggingEventListener to FOUserAgent so event before the startDocument() SAX event arrive in the log.\n    Dynamic discovery of event models. Renderers and extensions can register renderer-specific event models.\n    Switched the most important parts of the renderers to events (maybe not everything is converted).\n  ........\n    r640397 | jeremias | 2008-03-24 13:43:04 +0100 (Mo, 24 Mrz 2008) | 1 line\n    \n    Remaining fixcrlfs. Xalan likes to mix CRLF and LF on Windows.\n  ........\n    r640398 | jeremias | 2008-03-24 13:43:54 +0100 (Mo, 24 Mrz 2008) | 1 line\n    \n    Ignore namespace declarations for property handling.\n  ........\n    r640463 | jeremias | 2008-03-24 17:59:52 +0100 (Mo, 24 Mrz 2008) | 2 lines\n    \n    Event in area package.\n    Exposed getUserAgent() in Renderer interface (was already public in AbstractRenderer).\n  ........\n    r642972 | jeremias | 2008-03-31 14:18:39 +0200 (Mo, 31 Mrz 2008) | 1 line\n    \n    Code restructured a bit.\n  ........\n    r642975 | jeremias | 2008-03-31 14:24:07 +0200 (Mo, 31 Mrz 2008) | 2 lines\n    \n    Plugged fonts package into the event subsystem. Note: I did not follow the same pattern as for the rest as the font package is to be considered FOP-external, so I just added a manual adapter for the FontEventListener. This demonstrates how an external library can be integrated with the event system.\n    Missing warning for unknown formatting objects added. Warning is not issued by the ElementMappingRegistry anymore but by FOTreeBuilder which has access to more context information.\n  ........\n    r642997 | jeremias | 2008-03-31 16:10:08 +0200 (Mo, 31 Mrz 2008) | 1 line\n    \n    Added an example to demonstrate how to write your own event listener and how to deal with the exceptions thrown in the process.\n  ........\n    r642998 | jeremias | 2008-03-31 16:13:40 +0200 (Mo, 31 Mrz 2008) | 1 line\n    \n    Removed unused method. Event formatting should not be part of the Event class. Use EventFormatter.format(Event) instead.\n  ........\n    r643066 | jeremias | 2008-03-31 19:18:54 +0200 (Mo, 31 Mrz 2008) | 1 line\n    \n    First part of the event subsystem documentation (DRAFT).\n  ........\n    r643784 | jeremias | 2008-04-02 10:05:33 +0200 (Mi, 02 Apr 2008) | 1 line\n    \n    More documentation.\n  ........\n    r643785 | jeremias | 2008-04-02 10:06:38 +0200 (Mi, 02 Apr 2008) | 1 line\n    \n    Some nits.\n  ........\n    r643787 | jeremias | 2008-04-02 10:24:41 +0200 (Mi, 02 Apr 2008) | 1 line\n    \n    Completed javadocs\n  ........\n    r643824 | jeremias | 2008-04-02 12:00:30 +0200 (Mi, 02 Apr 2008) | 1 line\n    \n    Javadocs.\n  ........\n    r645847 | vhennebert | 2008-04-08 12:54:16 +0200 (Di, 08 Apr 2008) | 2 lines\n    \n    Minor typo fixes\n  ........\n    r645848 | vhennebert | 2008-04-08 12:58:30 +0200 (Di, 08 Apr 2008) | 2 lines\n    \n    Another small typo fix\n  ........\n    r647678 | jeremias | 2008-04-14 09:20:26 +0200 (Mo, 14 Apr 2008) | 1 line\n    \n    Renamed *EventProducer.Factory.create() to *EventProducer.Provider.get() to better reflect what the method does (instances may be cached and reused).\n  ........\n................\n  r647745 | jeremias | 2008-04-14 13:01:06 +0100 (Mon, 14 Apr 2008) | 1 line\n  \n  svnmerge didn't work for me in this case. Remove svn merge info.\n................\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_AFPGOCAResources@647787 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/7045f7e0124c6a6f00736b0d1d81f89824fd1271",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestEventProducer.java",
            "TestElementMapping.java"
        ]
    },
    "xmlgraphics-fop_3dc2910": {
        "bug_id": "xmlgraphics-fop_3dc2910",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/3dc29109cca3fdd61f44d0a9a5cec4f044944c90",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/3dc29109cca3fdd61f44d0a9a5cec4f044944c90/src/java/org/apache/fop/apps/Document.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/Document.java?ref=3dc29109cca3fdd61f44d0a9a5cec4f044944c90",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/apps/Document.java",
                "patch": "@@ -101,7 +101,7 @@\n     public AreaTree areaTree;\n     public AreaTreeModel atModel;\n \n-    private Bookmarks bookmarks;\n+    private Bookmarks bookmarks = null;\n \n     /**\n      * Main constructor",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/3dc29109cca3fdd61f44d0a9a5cec4f044944c90/src/java/org/apache/fop/apps/Document.java",
                "sha": "e7b9dc07cae1e43679199ab9d0c529069f5cf5cc",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/3dc29109cca3fdd61f44d0a9a5cec4f044944c90/src/java/org/apache/fop/layoutmgr/LayoutManagerLS.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/LayoutManagerLS.java?ref=3dc29109cca3fdd61f44d0a9a5cec4f044944c90",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/LayoutManagerLS.java",
                "patch": "@@ -139,6 +139,9 @@ public void format(PageSequence pageSeq, AreaTree areaTree) throws FOPException\n      * the extension to the area tree.\n      */\n     public void addBookmarksToAreaTree() {\n+        if (document.getBookmarks() == null) {\n+            return;\n+        }\n         document.getDriver().getLogger().debug(\"adding bookmarks to area tree\");\n         BookmarkData data = new BookmarkData();\n         for (int count = 0; count < document.getBookmarks().getOutlines().size(); count++) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/3dc29109cca3fdd61f44d0a9a5cec4f044944c90/src/java/org/apache/fop/layoutmgr/LayoutManagerLS.java",
                "sha": "ac59651cda78fb807ee8310c6ac138d2c95b1075",
                "status": "modified"
            }
        ],
        "message": "don't try to create bookmarks in output unless there are some in the input (getting NPE)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk@196847 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/a87f3f9fa357a249e044a8769b46639423b1cdb0",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestDocument.java"
        ]
    },
    "xmlgraphics-fop_53a3214": {
        "bug_id": "xmlgraphics-fop_53a3214",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/53a32144019d2158cd14336ff83d131337a1cb84",
        "file": [
            {
                "additions": 141,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/build.xml",
                "changes": 168,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 27,
                "filename": "build.xml",
                "patch": "@@ -118,13 +118,15 @@ list of possible build targets.\n     </fileset>\n   </path>\n \n-  <path id=\"libs-run-classpath\">\n-    <fileset dir=\"${basedir}/lib\">\n-      <include name=\"*.jar\"/>\n-    </fileset>\n-    <fileset dir=\"${optional.lib.dir}\">\n+  <path id=\"libs-build-tools-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n+    <fileset dir=\"${basedir}/lib/build\">\n       <include name=\"*.jar\"/>\n     </fileset>\n+  </path>\n+  \n+  <path id=\"libs-run-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n     <fileset dir=\"${basedir}/build\">\n       <include name=\"fop.jar\"/>\n       <include name=\"fop-hyph.jar\" />\n@@ -362,7 +364,7 @@ list of possible build targets.\n   <!-- =================================================================== -->\n   <!-- Compiles the source directory                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-java\" depends=\"init, codegen\" description=\"Compiles the source code\">\n+  <target name=\"compile-java\" depends=\"init, codegen\">\n     <!-- create directories -->\n     <mkdir dir=\"${build.classes.dir}\"/>\n     <javac destdir=\"${build.classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n@@ -375,12 +377,118 @@ list of possible build targets.\n       <patternset refid=\"exclude-jai\"/>\n       <classpath refid=\"libs-build-classpath\"/>\n     </javac>\n+\n+    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n+    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+           source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.sandbox.dir}\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <patternset refid=\"exclude-jai\"/>\n+      <classpath>\n+        <path refid=\"libs-build-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+  </target>\n+\n+  <target name=\"resourcegen\" depends=\"compile-java\">\n+    <mkdir dir=\"${build.codegen-classes.dir}\"/>\n+    <javac destdir=\"${build.codegen-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+      deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+      source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.codegen.dir}/java\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+    <copy todir=\"${build.codegen-classes.dir}\">\n+      <fileset dir=\"${src.codegen.dir}/java\">\n+        <include name=\"**/*.xsl\"/>\n+      </fileset>\n+    </copy>\n+    \n+    <taskdef name=\"eventResourceGenerator\"\n+      classname=\"org.apache.fop.tools.EventProducerCollectorTask\">\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+        <pathelement location=\"${build.codegen-classes.dir}\"/>\n+      </classpath>\n+    </taskdef>\n+  \n+    <eventResourceGenerator\n+        modelfile=\"${build.gensrc.dir}/org/apache/fop/events/event-model.xml\"\n+        translationfile=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"**/*.java\"/>\n+        <exclude name=\"org/apache/fop/render/*/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/afp/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/afp/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/bitmap/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/bitmap/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pcl/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pcl/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pdf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pdf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/ps/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/ps/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/rtf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/rtf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+  </target>\n+  \n+  <target name=\"compile-copy-resources\" depends=\"resourcegen\">\n     <copy todir=\"${build.classes.dir}\">\n       <fileset dir=\"${src.java.dir}\">\n         <include name=\"META-INF/**\"/>\n         <include name=\"**/*.icm\"/>\n+        <include name=\"**/*.xml\"/>\n         <include name=\"**/*.LICENSE.txt\"/>\n       </fileset>\n+      <fileset dir=\"${build.gensrc.dir}\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n     </copy>\n     <mkdir dir=\"${build.viewer.resources.dir}\"/>\n     <copy todir=\"${build.viewer.resources.dir}\">\n@@ -390,31 +498,22 @@ list of possible build targets.\n     <copy todir=\"${build.viewer.images.dir}\">\n       <fileset dir=\"${src.viewer.images.dir}\"/>\n     </copy>\n-\n-    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n-    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n-           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n-           source=\"${javac.source}\" target=\"${javac.target}\">\n-      <src path=\"${src.sandbox.dir}\"/>\n-      <patternset includes=\"**/*.java\"/>\n-      <patternset refid=\"exclude-jai\"/>\n-      <classpath>\n-        <path refid=\"libs-build-classpath\"/>\n-        <pathelement location=\"${build.classes.dir}\"/>\n-      </classpath>\n-    </javac>\n+    \n+    <!-- sandbox -->\n     <copy todir=\"${build.sandbox-classes.dir}\">\n       <fileset dir=\"${src.sandbox.dir}\">\n         <include name=\"META-INF/**\"/>\n       </fileset>\n     </copy>\n+    \n   </target>\n-\n+  \n+  <target name=\"compile\" depends=\"compile-java, compile-copy-resources\" description=\"Compiles the source code\"/>\n \n   <!-- =================================================================== -->\n   <!-- compiles hyphenation patterns                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-hyphenation\" depends=\"compile-java\">\n+  <target name=\"compile-hyphenation\" depends=\"compile\">\n     <path id=\"hyph-classpath\">\n       <path refid=\"libs-build-classpath\"/>\n       <pathelement location=\"${build.classes.dir}\"/>\n@@ -452,13 +551,13 @@ list of possible build targets.\n   <!-- main FOP JARs                                                       -->\n   <!-- =================================================================== -->\n \n-  <target name=\"uptodate-jar-main\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-main\" depends=\"compile\">\n     <uptodate property=\"jar.main.uptodate\" targetfile=\"${build.dir}/fop.jar\">\n       <srcfiles dir= \"${build.classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-main\" depends=\"compile-java,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n+  <target name=\"jar-main\" depends=\"compile,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -487,13 +586,13 @@ list of possible build targets.\n     </jar>\n   </target>\n \n-  <target name=\"uptodate-jar-sandbox\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-sandbox\" depends=\"compile\">\n     <uptodate property=\"jar.sandbox.uptodate\" targetfile=\"${build.dir}/fop-sandbox.jar\">\n       <srcfiles dir= \"${build.sandbox-classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-sandbox\" depends=\"compile-java,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n+  <target name=\"jar-sandbox\" depends=\"compile,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -608,14 +707,14 @@ list of possible build targets.\n     <include name=\"xmlgraphics-commons*.jar\"/>\n   </fileset>\n   \n-  <target name=\"uptodate-transcoder-pkg\" depends=\"compile-java\">\n+  <target name=\"uptodate-transcoder-pkg\" depends=\"compile\">\n     <uptodate property=\"transcoder.pkg.uptodate\" targetfile=\"${build.dir}/fop-transcoder.jar\">\n       <srcfiles refid=\"transcoder-classes-files\"/>\n       <srcfiles refid=\"transcoder-lib-files\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile-java\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n+  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n     <echo message=\"Creating the jar file ${build.dir}/fop-transcoder.jar\"/>\n \n     <property name=\"fop-transcoder.name\" value=\"FOP Transcoder Package\"/>\n@@ -693,6 +792,7 @@ list of possible build targets.\n   </target>\n   <target name=\"junit-compile\" depends=\"package, transcoder-pkg, junit-with-xmlunit, junit-without-xmlunit\" description=\"Runs FOP's JUnit tests\" if=\"junit.present\">\n     <mkdir dir=\"${build.dir}/test-classes\"/>\n+    <mkdir dir=\"${build.dir}/test-gensrc\"/>\n     <mkdir dir=\"${junit.reports.dir}\"/>\n     <javac destdir=\"${build.dir}/test-classes\" fork=\"${javac.fork}\"\n            debug=\"${javac.debug}\" deprecation=\"${javac.deprecation}\"\n@@ -707,6 +807,20 @@ list of possible build targets.\n         </fileset>\n       </classpath>\n     </javac>\n+    <eventResourceGenerator modelfile=\"${build.dir}/test-gensrc/org/apache/fop/events/test-event-model.xml\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <copy todir=\"${build.dir}/test-classes\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"META-INF/**\"/>\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+      <fileset dir=\"${build.dir}/test-gensrc\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+    </copy>\n   </target>\n \n   <target name=\"junit-transcoder\" depends=\"junit-compile\" description=\"Runs FOP's JUnit transcoder tests\" if=\"junit.present\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/build.xml",
                "sha": "5a72154f702d5621456ab67a147175cbd7629cf7",
                "status": "modified"
            },
            {
                "additions": 227,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/examples/embedding/java/embedding/events/ExampleEvents.java",
                "changes": 227,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/ExampleEvents.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/ExampleEvents.java",
                "patch": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding.events;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.URL;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.apps.MimeConstants;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This class demonstrates how to register an event listener with FOP so you can customize\n+ * FOP's error behaviour.\n+ */\n+public class ExampleEvents {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+\n+    /**\n+     * Converts an FO file to a PDF file using FOP\n+     * @param fo the FO file\n+     * @param pdf the target PDF file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a FOP problem\n+     * @throws TransformerException In case of a problem with XSLT\n+     */\n+    public void convertFO2PDF(URL fo, File pdf)\n+            throws IOException, FOPException, TransformerException {\n+        \n+        OutputStream out = null;\n+        \n+        try {\n+            //Create the user agent for this processing run\n+            FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+            \n+            //Adding a simple logging listener that writes to stdout and stderr\n+            foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());\n+            \n+            // Add your own event listener\n+            foUserAgent.getEventBroadcaster().addEventListener(new MyEventListener());\n+            \n+            // configure foUserAgent further as desired\n+    \n+            // Setup output stream.  Note: Using BufferedOutputStream\n+            // for performance reasons (helpful with FileOutputStreams).\n+            out = new FileOutputStream(pdf);\n+            out = new BufferedOutputStream(out);\n+\n+            // Construct fop with desired output format\n+            Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, foUserAgent, out);\n+\n+            // Setup JAXP using identity transformer\n+            TransformerFactory factory = TransformerFactory.newInstance();\n+            Transformer transformer = factory.newTransformer(); // identity transformer\n+            \n+            // Setup input stream\n+            Source src = new StreamSource(fo.toExternalForm());\n+\n+            // Resulting SAX events (the generated FO) must be piped through to FOP\n+            Result res = new SAXResult(fop.getDefaultHandler());\n+            \n+            // Start XSLT transformation and FOP processing\n+            transformer.transform(src, res);\n+\n+        } finally {\n+            IOUtils.closeQuietly(out);\n+        }\n+    }\n+\n+    private static class MyEventListener implements EventListener {\n+\n+        public void processEvent(Event event) {\n+            if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                    .equals(event.getEventID())) {\n+                \n+                //Get the FileNotFoundException that's part of the event's parameters\n+                FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+                System.out.println(\"---=== imageNotFound Event for \" + event.getParam(\"uri\")\n+                        + \"!!! ===---\");\n+                //Stop processing when an image could not be found. Otherwise, FOP would just\n+                //continue without the image!\n+                \n+                System.out.println(\"Throwing a RuntimeException...\");\n+                throw new RuntimeException(EventFormatter.format(event), fnfe);\n+            } else {\n+                //ignore all other events\n+            }\n+        }\n+        \n+    }\n+    \n+    /** A simple event listener that writes the events to stdout and sterr. */\n+    private static class SysOutEventListener implements EventListener {\n+\n+        /** {@inheritDoc} */\n+        public void processEvent(Event event) {\n+            String msg = EventFormatter.format(event);\n+            EventSeverity severity = event.getSeverity();\n+            if (severity == EventSeverity.INFO) {\n+                System.out.println(\"[INFO ] \" + msg);\n+            } else if (severity == EventSeverity.WARN) {\n+                System.out.println(\"[WARN ] \" + msg);\n+            } else if (severity == EventSeverity.ERROR) {\n+                System.err.println(\"[ERROR] \" + msg);\n+            } else if (severity == EventSeverity.FATAL) {\n+                System.err.println(\"[FATAL] \" + msg);\n+            } else {\n+                assert false;\n+            }\n+        }\n+    }\n+    \n+\n+    /**\n+     * This method extracts the original exception from some exception. The exception\n+     * might be nested multiple levels deep.\n+     * @param t the Throwable to inspect\n+     * @return the original Throwable or the method parameter t if there are no nested Throwables.\n+     */\n+    private static Throwable getOriginalThrowable(Throwable t) {\n+        if (t instanceof SAXException) {\n+            SAXException saxe = (SAXException)t;\n+            if (saxe.getException() != null) {\n+                return getOriginalThrowable(saxe.getException());\n+            } else {\n+                return saxe;\n+            }\n+        } else {\n+            if (t.getCause() != null) {\n+                return getOriginalThrowable(t.getCause());\n+            } else {\n+                return t;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Main method.\n+     * @param args command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleEvents\\n\");\n+            System.out.println(\"Preparing...\");\n+            \n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files\n+            URL fo = ExampleEvents.class.getResource(\"missing-image.fo\");\n+            File pdffile = new File(outDir, \"out.pdf\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fo.toExternalForm() + \")\");\n+            System.out.println(\"Output: PDF (\" + pdffile + \")\");\n+            System.out.println();\n+            System.out.println(\"Transforming...\");\n+            \n+            ExampleEvents app = new ExampleEvents();\n+            \n+            try {\n+                app.convertFO2PDF(fo, pdffile);\n+            } catch (TransformerException te) {\n+                //Note: We don't get the original exception here!\n+                //FOP needs to embed the exception in a SAXException and the TraX transformer\n+                //again wraps the SAXException in a TransformerException. Even our own\n+                //RuntimeException just wraps the original FileNotFoundException.\n+                //So we need to unpack to get the original exception (about three layers deep).\n+                Throwable originalThrowable = getOriginalThrowable(te);\n+                originalThrowable.printStackTrace(System.err);\n+                System.out.println(\"Aborted!\");\n+                System.exit(-1);\n+            }\n+            \n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            //Some other error (shouldn't happen in this example)\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/examples/embedding/java/embedding/events/ExampleEvents.java",
                "sha": "9c52e4ba1f6a7c0e45f33ced5ce3fcccaaa4f71d",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/examples/embedding/java/embedding/events/missing-image.fo",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/missing-image.fo?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/missing-image.fo",
                "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n+  <fo:layout-master-set>\n+    <fo:simple-page-master master-name=\"A4\" page-height=\"29.7cm\" page-width=\"21cm\" margin=\"2cm\">\n+      <fo:region-body/>\n+    </fo:simple-page-master>\n+  </fo:layout-master-set>\n+  <fo:page-sequence master-reference=\"A4\">\n+    <fo:flow flow-name=\"xsl-region-body\">\n+      <fo:block>\n+        The following image is not available:\n+        <fo:external-graphic src=\"my-missing-image.png\"/>\n+      </fo:block>\n+    </fo:flow>\n+  </fo:page-sequence>\n+</fo:root>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/examples/embedding/java/embedding/events/missing-image.fo",
                "sha": "2c55f66ce70474b6391d8e5dc951eb9ce56e447b",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/lib/build/qdox-1.6.3.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox-1.6.3.jar?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "lib/build/qdox-1.6.3.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/lib/build/qdox-1.6.3.jar",
                "sha": "3e99cb06491b1aa501e46bbca4fafdad78a997d5",
                "status": "added"
            },
            {
                "additions": 201,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/lib/build/qdox.LICENSE.txt",
                "changes": 201,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox.LICENSE.txt?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "lib/build/qdox.LICENSE.txt",
                "patch": "@@ -0,0 +1,201 @@\n+                                  Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/lib/build/qdox.LICENSE.txt",
                "sha": "3e4e3d004084793138c1383213a0bb1b07f424a5",
                "status": "added"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventConventionException.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+public class EventConventionException extends Exception {\n+\n+    public EventConventionException(String message) {\n+        super(message);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "sha": "675f4a0ca8bc44066f0c1cc57021e1eacae955f3",
                "status": "added"
            },
            {
                "additions": 183,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "changes": 183,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "patch": "@@ -0,0 +1,183 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+import com.thoughtworks.qdox.JavaDocBuilder;\n+import com.thoughtworks.qdox.model.DefaultDocletTagFactory;\n+import com.thoughtworks.qdox.model.DocletTag;\n+import com.thoughtworks.qdox.model.DocletTagFactory;\n+import com.thoughtworks.qdox.model.JavaClass;\n+import com.thoughtworks.qdox.model.JavaMethod;\n+import com.thoughtworks.qdox.model.JavaParameter;\n+import com.thoughtworks.qdox.model.Type;\n+\n+/**\n+ * Finds EventProducer interfaces and builds the event model for them.\n+ */\n+public class EventProducerCollector {\n+\n+    private static final String CLASSNAME_EVENT_PRODUCER = EventProducer.class.getName();\n+    private static final Map PRIMITIVE_MAP;\n+    \n+    static {\n+        Map m = new java.util.HashMap();\n+        m.put(\"boolean\", Boolean.class);\n+        m.put(\"byte\", Byte.class);\n+        m.put(\"char\", Character.class);\n+        m.put(\"short\", Short.class);\n+        m.put(\"int\", Integer.class);\n+        m.put(\"long\", Long.class);\n+        m.put(\"float\", Float.class);\n+        m.put(\"double\", Double.class);\n+        PRIMITIVE_MAP = Collections.unmodifiableMap(m);\n+    }\n+    \n+    private DocletTagFactory tagFactory;\n+    private EventModel model = new EventModel();\n+\n+    public EventProducerCollector() {\n+        this.tagFactory = createDocletTagFactory();\n+    }\n+\n+    protected DocletTagFactory createDocletTagFactory() {\n+        return new DefaultDocletTagFactory();\n+    }\n+\n+    public void scanFile(File src, String filename)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        JavaDocBuilder builder = new JavaDocBuilder(this.tagFactory);\n+        builder.addSource(src);\n+        JavaClass[] classes = builder.getClasses();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass clazz = classes[i];\n+            if (clazz.isInterface() && implementsInterface(clazz, CLASSNAME_EVENT_PRODUCER)) {\n+                processEventProducerInterface(clazz, filename);\n+            }\n+        }\n+    }\n+\n+    private boolean implementsInterface(JavaClass clazz, String intf) {\n+        JavaClass[] classes = clazz.getImplementedInterfaces();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass cl = classes[i];\n+            if (cl.getFullyQualifiedName().equals(intf)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Processes an EventProducer interface and creates an EventProducerModel from it.\n+     * @param clazz the EventProducer interface\n+     * @param javaFilename the filename of the Java source of the interface\n+     * @throws EventConventionException if the event producer conventions are violated\n+     * @throws ClassNotFoundException if a required class cannot be found\n+     */\n+    protected void processEventProducerInterface(JavaClass clazz, String javaFilename)\n+                throws EventConventionException, ClassNotFoundException {\n+        EventProducerModel prodMeta = new EventProducerModel(clazz.getFullyQualifiedName());\n+        JavaMethod[] methods = clazz.getMethods(true);\n+        for (int i = 0, c = methods.length; i < c; i++) {\n+            JavaMethod method = methods[i];\n+            EventMethodModel methodMeta = createMethodModel(method);\n+            prodMeta.addMethod(methodMeta);\n+        }\n+        this.model.addProducer(prodMeta);\n+    }\n+\n+    private EventMethodModel createMethodModel(JavaMethod method)\n+            throws EventConventionException, ClassNotFoundException {\n+        JavaClass clazz = method.getParentClass();\n+        //Check EventProducer conventions\n+        if (!method.getReturns().isVoid()) {\n+            throw new EventConventionException(\"All methods of interface \"\n+                    + clazz.getFullyQualifiedName() + \" must have return type 'void'!\");\n+        }\n+        String methodSig = clazz.getFullyQualifiedName() + \".\" + method.getCallSignature();\n+        JavaParameter[] params = method.getParameters();\n+        if (params.length < 1) {\n+            throw new EventConventionException(\"The method \" + methodSig\n+                    + \" must have at least one parameter: 'Object source'!\");\n+        }\n+        Type firstType = params[0].getType();\n+        if (firstType.isPrimitive() || !\"source\".equals(params[0].getName())) {\n+            throw new EventConventionException(\"The first parameter of the method \" + methodSig\n+                    + \" must be: 'Object source'!\");\n+        }\n+        \n+        //build method model\n+        DocletTag tag = method.getTagByName(\"event.severity\");\n+        EventSeverity severity;\n+        if (tag != null) {\n+            severity = EventSeverity.valueOf(tag.getValue());\n+        } else { \n+            severity = EventSeverity.INFO;\n+        }\n+        EventMethodModel methodMeta = new EventMethodModel(\n+                method.getName(), severity);\n+        if (params.length > 1) {\n+            for (int j = 1, cj = params.length; j < cj; j++) {\n+                JavaParameter p = params[j];\n+                Class type;\n+                JavaClass pClass = p.getType().getJavaClass();\n+                if (p.getType().isPrimitive()) {\n+                    type = (Class)PRIMITIVE_MAP.get(pClass.getName());\n+                    if (type == null) {\n+                        throw new UnsupportedOperationException(\n+                                \"Primitive datatype not supported: \" + pClass.getName());\n+                    }\n+                } else {\n+                    String className = pClass.getFullyQualifiedName();\n+                    type = Class.forName(className);\n+                }\n+                methodMeta.addParameter(type, p.getName());\n+            }\n+        }\n+        Type[] exceptions = method.getExceptions();\n+        if (exceptions != null && exceptions.length > 0) {\n+            //We only use the first declared exception because that is always thrown\n+            JavaClass cl = exceptions[0].getJavaClass();\n+            methodMeta.setExceptionClass(cl.getFullyQualifiedName());\n+            methodMeta.setSeverity(EventSeverity.FATAL); //In case it's not set in the comments\n+        }\n+        return methodMeta;\n+    }\n+\n+    public EventModel getModel() {\n+        return this.model;\n+    }\n+    \n+    public void saveModelToXML(File modelFile) throws IOException {\n+        getModel().saveToXML(modelFile);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "sha": "e42395ae749ecc9538316a41acd526b2ed210eab",
                "status": "added"
            },
            {
                "additions": 200,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "changes": 200,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "patch": "@@ -0,0 +1,200 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.URIResolver;\n+import javax.xml.transform.dom.DOMResult;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.w3c.dom.Node;\n+\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.DirectoryScanner;\n+import org.apache.tools.ant.Project;\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.types.FileSet;\n+import org.apache.tools.ant.types.selectors.FilenameSelector;\n+\n+public class EventProducerCollectorTask extends Task {\n+\n+    private List filesets = new java.util.ArrayList();\n+    private File modelFile;\n+    private File translationFile;\n+    \n+    /** {@inheritDoc} */\n+    public void execute() throws BuildException {\n+        try {\n+            EventProducerCollector collector = new EventProducerCollector();\n+            processFileSets(collector);\n+            getModelFile().getParentFile().mkdirs();\n+            collector.saveModelToXML(getModelFile());\n+            log(\"Event model written to \" + getModelFile());\n+            if (getTranslationFile() != null) {\n+                updateTranslationFile();\n+            }\n+        } catch (ClassNotFoundException e) {\n+            throw new BuildException(e);\n+        } catch (EventConventionException ece) {\n+            throw new BuildException(ece);\n+        } catch (IOException ioe) {\n+            throw new BuildException(ioe);\n+        }\n+    }\n+    \n+    private static final String MODEL2TRANSLATION = \"model2translation.xsl\";\n+    private static final String MERGETRANSLATION = \"merge-translation.xsl\";\n+    \n+    protected void updateTranslationFile() throws IOException {\n+        try {\n+            boolean resultExists = getTranslationFile().exists();\n+            SAXTransformerFactory tFactory\n+                = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+            \n+            //Generate fresh generated translation file as template\n+            Source src = new StreamSource(getModelFile());\n+            StreamSource xslt1 = new StreamSource(\n+                    getClass().getResourceAsStream(MODEL2TRANSLATION));\n+            if (xslt1.getInputStream() == null) {\n+                throw new FileNotFoundException(MODEL2TRANSLATION + \" not found\");\n+            }\n+            DOMResult domres = new DOMResult();\n+            Transformer transformer = tFactory.newTransformer(xslt1);\n+            transformer.transform(src, domres);\n+            final Node generated = domres.getNode();\n+            \n+            Node sourceDocument;\n+            if (resultExists) {\n+                //Load existing translation file into memory (because we overwrite it later)\n+                src = new StreamSource(getTranslationFile());\n+                domres = new DOMResult();\n+                transformer = tFactory.newTransformer();\n+                transformer.transform(src, domres);\n+                sourceDocument = domres.getNode();\n+            } else {\n+                //Simply use generated as source document\n+                sourceDocument = generated;\n+            }\n+\n+            //Generate translation file (with potentially new translations)\n+            src = new DOMSource(sourceDocument);\n+            Result res = new StreamResult(getTranslationFile());\n+            StreamSource xslt2 = new StreamSource(\n+                    getClass().getResourceAsStream(MERGETRANSLATION));\n+            if (xslt2.getInputStream() == null) {\n+                throw new FileNotFoundException(MERGETRANSLATION + \" not found\");\n+            }\n+            transformer = tFactory.newTransformer(xslt2);\n+            transformer.setURIResolver(new URIResolver() {\n+                public Source resolve(String href, String base) throws TransformerException {\n+                    if (\"my:dom\".equals(href)) {\n+                        return new DOMSource(generated);\n+                    }\n+                    return null;\n+                }\n+            });\n+            if (resultExists) {\n+                transformer.setParameter(\"generated-url\", \"my:dom\");\n+            }\n+            transformer.transform(src, res);\n+            if (resultExists) {\n+                log(\"Translation file updated: \" + getTranslationFile());\n+            } else {\n+                log(\"Translation file generated: \" + getTranslationFile());\n+            }\n+        } catch (TransformerException te) {\n+            throw new IOException(te.getMessage());\n+        }\n+    }\n+\n+    protected void processFileSets(EventProducerCollector collector)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        Iterator iter = filesets.iterator();\n+        while (iter.hasNext()) {\n+            FileSet fs = (FileSet)iter.next();\n+            DirectoryScanner ds = fs.getDirectoryScanner(getProject());\n+            String[] srcFiles = ds.getIncludedFiles();\n+            File directory = fs.getDir(getProject());\n+            for (int i = 0, c = srcFiles.length; i < c; i++) {\n+                String filename = srcFiles[i];\n+                File src = new File(directory, filename);\n+                collector.scanFile(src, filename);\n+            }\n+        }\n+    }\n+\n+    public void addFileset(FileSet set) {\n+        filesets.add(set);\n+    }\n+    \n+    public void setModelFile(File f) {\n+        this.modelFile = f;\n+    }\n+    \n+    public File getModelFile() {\n+        return this.modelFile;\n+    }\n+    \n+    public void setTranslationFile(File f) {\n+        this.translationFile = f;\n+    }\n+    \n+    public File getTranslationFile() {\n+        return this.translationFile;\n+    }\n+    \n+    public static void main(String[] args) {\n+        try {\n+            Project project = new Project();\n+\n+            EventProducerCollectorTask generator = new EventProducerCollectorTask();\n+            generator.setProject(project);\n+            project.setName(\"Test\");\n+            FileSet fileset = new FileSet();\n+            fileset.setDir(new File(\"test/java\"));\n+            \n+            FilenameSelector selector = new FilenameSelector();\n+            selector.setName(\"**/*.java\");\n+            fileset.add(selector);\n+            generator.addFileset(fileset);\n+            \n+            File targetDir = new File(\"build/codegen1\");\n+            targetDir.mkdirs();\n+            \n+            generator.setModelFile(new File(\"D:/out.xml\"));\n+            generator.setTranslationFile(new File(\"D:/out1.xml\"));\n+            generator.execute();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "sha": "755e3da0bb4ba5ccc2e7cd68f927eb966de64d7d",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/merge-translation.xsl?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:param name=\"generated-url\" select=\"''\"/>\n+  \n+  <xsl:template match=\"catalogue\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\"><xsl:value-of select=\"@xml:lang\"/></xsl:attribute>\n+      <xsl:apply-templates/>\n+      <xsl:if test=\"$generated-url != ''\">\n+        <xsl:variable name=\"generated\" select=\"document($generated-url)\"/>\n+        <xsl:call-template name=\"add-new-messages\">\n+          <xsl:with-param name=\"existing\" select=\".\"/>\n+          <xsl:with-param name=\"new\" select=\"$generated/catalogue\"/>\n+        </xsl:call-template>\n+      </xsl:if>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"add-new-messages\">\n+    <xsl:param name=\"existing\"/>\n+    <xsl:param name=\"new\"/>\n+    <xsl:for-each select=\"$new/message\">\n+      <xsl:variable name=\"k\" select=\"@key\"/>\n+      <xsl:if test=\"not(boolean($existing/message[@key = $k]))\">\n+        <xsl:apply-templates select=\".\"></xsl:apply-templates>\n+      </xsl:if>\n+    </xsl:for-each>\n+  </xsl:template>  \n+  \n+  <xsl:template match=\"@*|node()\">\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"/>\n+    </xsl:copy>\n+  </xsl:template>\n+\n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "sha": "d15d22fd3ad8ad7e3abda1817f7d6a975e137b9a",
                "status": "added"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/model2translation.xsl?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:template match=\"event-model\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\">en</xsl:attribute>\n+      <xsl:apply-templates select=\"//method\"></xsl:apply-templates>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template match=\"method\">\n+    <message>\n+      <xsl:attribute name=\"key\"><xsl:value-of select=\"../@name\"/>.<xsl:value-of select=\"@name\"/></xsl:attribute>\n+    </message>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "sha": "a1cf404ee1c67670c254115da689eca71aadb8df",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/documentation/content/xdocs/site.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/site.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/site.xml",
                "patch": "@@ -155,6 +155,7 @@\n       <fonts label=\"Fonts\" href=\"fonts.html\"/>\n       <hyphenation label=\"Hyphenation\" href=\"hyphenation.html\"/>    \n       <extensions label=\"Extensions\" href=\"extensions.html\"/>\n+      <events label=\"Events\" href=\"events.html\"/>\n     </features>\n     \n   </trunk>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/documentation/content/xdocs/site.xml",
                "sha": "b0a3214e7892b1ce9f3e9b05096132ccad18b37c",
                "status": "modified"
            },
            {
                "additions": 422,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/documentation/content/xdocs/trunk/events.xml",
                "changes": 422,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/events.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/trunk/events.xml",
                "patch": "@@ -0,0 +1,422 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Events/Processing Feedback</title>\n+    <version>$Revision: 634267 $</version>\n+  </header>\n+  <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        In versions until 0.20.5, FOP used\n+        <a href=\"http://excalibur.apache.org/framework/index.html\">Avalon-style Logging</a> where\n+        it was possible to supply a logger per processing run. During the redesign\n+        the logging infrastructure was switched over to\n+        <a href=\"http://commons.apache.org/logging/\">Commons Logging</a> which is (like Log4J or\n+        java.util.logging) a \"static\" logging framework (the logger is accessed through static\n+        variables). This made it very difficult in a multi-threaded system to retrieve information\n+        for a single processing run.\n+      </p>\n+      <p>\n+        With FOP's event subsystem, we'd like to close this gap again and even go further. The\n+        first point is to realize that we have two kinds of \"logging\". Firstly, we have the logging\n+        infrastructure for the (FOP) developer who needs to be able to enable finer log messages\n+        for certain parts of FOP to track down a certain problem. Secondly, we have the user who\n+        would like to be informed about missing images, overflowing lines or substituted fonts.\n+        These messages (or events) are targeted at less technical people and may ideally be\n+        localized (translated). Furthermore, tool and solution builders would like to integrate\n+        FOP into their own solutions. For example, an FO editor should be able to point the user\n+        to the right place where a particular problem occurred while developing a document template.\n+        Finally, some integrators would like to abort processing if a resource (an image or a font)\n+        has not been found, while others would simply continue. The event system allows to\n+        react on these events.\n+      </p>\n+      <p>\n+        On this page, we won't discuss logging as such. We will show how the event subsystem can\n+        be used for various tasks. We'll first look at the event subsystem from the consumer side.\n+        Finally, the production of events inside FOP will be discussed (this is mostly interesting\n+        for FOP developers only).\n+      </p>\n+    </section>\n+    <section id=\"consumer\">\n+      <title>The consumer side</title>\n+      <p>\n+        The event subsystem is located in the <code>org.apache.fop.events</code> package and its\n+        base is the <code>Event</code> class. An instance is created for each event and is sent\n+        to a set of <code>EventListener</code> instances by the <code>EventBroadcaster</code>.\n+        An <code>Event</code> contains:\n+      </p>\n+      <ul>\n+        <li>an event ID,</li>\n+        <li>a source object (which generated the event),</li>\n+        <li>a severity level (Info, Warning, Error and Fatal Error) and</li>\n+        <li>a map of named parameters.</li>\n+      </ul>\n+      <p>\n+        The <code>EventFormatter</code> class can be used to translate the events into\n+        human-readable, localized messages.\n+      </p>\n+      <p>\n+        A full example of what is shown here can be found in the\n+        <code>examples/embedding/java/embedding/events</code> directory in the FOP distribution.\n+        The example can also be accessed\n+        <a href=\"http://svn.apache.org/viewvc/xmlgraphics/fop/trunk/examples/embedding/java/embedding/events/\">via the web</a>.\n+      </p>\n+      <section id=\"write-listener\">\n+        <title>Writing an EventListener</title>\n+        <p>\n+          The following code sample shows a very simple EventListener. It basically just sends\n+          all events to System.out (stdout) or System.err (stderr) depending on the event severity.\n+        </p>\n+        <source><![CDATA[import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/** A simple event listener that writes the events to stdout and stderr. */\n+public class SysOutEventListener implements EventListener {\n+\n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            System.out.println(\"[INFO ] \" + msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            System.out.println(\"[WARN ] \" + msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            System.err.println(\"[ERROR] \" + msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            System.err.println(\"[FATAL] \" + msg);\n+        } else {\n+            assert false;\n+        }\n+    }\n+}]]></source>\n+        <p>\n+          You can see that for every event the method <code>processEvent</code> of the\n+          <code>EventListener</code> will be called. Inside this method you can do whatever\n+          processing you would like including throwing a <code>RuntimeException</code>, if you want\n+          to abort the current processing run.\n+        </p>\n+        <p>\n+          The code above also shows how you can turn an event into a human-readable, localized\n+          message that can be presented to a user. The <code>EventFormatter</code> class does\n+          this for you. It provides additional methods if you'd like to explicitly specify\n+          the locale.\n+        </p>\n+        <p>\n+          It is possible to gather all events for a whole processing run so they can be\n+          evaluated afterwards. However, care should be taken about memory consumption since\n+          the events provide references to objects inside FOP which may themselves have\n+          references to other objects. So holding on to these objects may mean that whole\n+          object trees cannot be released!\n+        </p>\n+      </section>\n+      <section id=\"add-listener\">\n+        <title>Adding an EventListener</title>\n+        <p>\n+          To register the event listener with FOP, get the <code>EventBroadcaster</code> which\n+          is associated with the user agent (<code>FOUserAgent</code>) and add it there:\n+        </p>\n+        <source><![CDATA[FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());]]></source>\n+        <p>\n+          Please note that this is done separately for each processing run, i.e. for each\n+          new user agent.\n+        </p>\n+      </section>\n+      <section id=\"listener-example1\">\n+        <title>An additional listener example</title>\n+        <p>\n+          Here's an additional example of an event listener:\n+        </p>\n+        <p>\n+          By default, FOP continues processing even if an image wasn't found. If you have\n+          more strict requirements and want FOP to stop if an image is not available, you can\n+          do something like the following:\n+        </p>\n+        <source><![CDATA[public class MyEventListener implements EventListener {\n+\n+    public void processEvent(Event event) {\n+        if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                .equals(event.getEventID())) {\n+            \n+            //Get the FileNotFoundException that's part of the event's parameters\n+            FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+            throw new RuntimeException(EventFormatter.format(event), fnfe);\n+        } else {\n+            //ignore all other events (or do something of your choice)\n+        }\n+    }\n+    \n+}]]></source>\n+        <p>\n+          This throws a <code>RuntimeException</code> with the <code>FileNotFoundException</code>\n+          as the cause. Further processing effectively stops in FOP. You can catch the exception\n+          in your code and react as you see necessary.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"producer\">\n+      <title>The producer side (for FOP developers)</title>\n+      <p>\n+        This section is primarily for FOP and FOP plug-in developers. It describes how to use\n+        the event subsystem for producing events.\n+      </p>\n+      <note>\n+        The event package has been designed in order to be theoretically useful for use cases\n+        outside FOP. If you think this is interesting independently from FOP, please talk to\n+        <a href=\"mailto:fop-dev@xmlgraphics.apache.org\">us</a>.\n+      </note>\n+      <section id=\"basic-event-production\">\n+        <title>Producing and sending an event</title>\n+        <p>\n+          The basics are very simple. Just instantiate an <code>Event</code> object and fill\n+          it with the necessary parameters. Then pass it to the <code>EventBroadcaster</code>\n+          which distributes the events to the interested listeneners. Here's a code example:\n+        </p>\n+        <source><![CDATA[Event ev = new Event(this, \"complain\", EventSeverity.WARN,\n+        Event.paramsBuilder()\n+            .param(\"reason\", \"I'm tired\")\n+            .param(\"blah\", new Integer(23))\n+            .build());\n+EventBroadcaster broadcaster = [get it from somewhere];\n+broadcaster.broadcastEvent(ev);\n+]]></source>\n+        <p>\n+          The <code>Event.paramsBuilder()</code> is a\n+          <a href=\"http://en.wikipedia.org/wiki/Fluent_interface\">fluent interface</a>\n+          to help with the build-up of the parameters. You could just as well instantiate a\n+          <code>Map</code> (<code>Map&lt;String, Object&gt;</code>) and fill it with values.\n+        </p>\n+      </section>\n+      <section id=\"event-producer\">\n+        <title>The EventProducer interface</title>\n+        <p>\n+          To simplify event production, the event subsystem provides the <code>EventProducer</code>\n+          interface. You can create interfaces which extend <code>EventProducer</code>. These\n+          interfaces will contain one method per event to be generated. By contract, each event\n+          method must have as its first parameter a parameter named \"source\" (Type Object) which\n+          indicates the object that generated the event. After that come an arbitrary number of\n+          parameters of any type as needed by the event.\n+        </p>\n+        <p>\n+          The event producer interface does not need to have any implementation. The implementation\n+          is produced at runtime by a dynamic proxy created by <code>DefaultEventBroadcaster</code>.\n+          The dynamic proxy creates <code>Event</code> instances for each method call against\n+          the event producer interface. Each parameter (except \"source\") is added to the event's\n+          parameter map.\n+        </p>\n+        <p>\n+          To simplify the code needed to get an instance of the event producer interface it is\n+          suggested to create a public inner provider class inside the interface.\n+        </p>\n+        <p>\n+          Here's an example of such an event producer interface:\n+        </p>\n+        <source><![CDATA[public interface MyEventProducer extends EventProducer {\n+\n+    public class Provider {\n+        \n+        public static MyEventProducer get(EventBroadcaster broadcaster) {\n+            return (MyEventProducer)broadcaster.getEventProducerFor(MyEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Complain about something.\n+     * @param source the event source\n+     * @param reason the reason for the complaint\n+     * @param blah the complaint\n+     * @event.severity WARN\n+     */\n+    void complain(Object source, String reason, int blah);\n+    \n+}]]></source>\n+        <p>\n+          To produce the same event as in the first example above, you'd use the following code:\n+        </p>\n+        <source><![CDATA[EventBroadcaster broadcaster = [get it from somewhere];\n+TestEventProducer producer = TestEventProducer.Provider.get(broadcaster);\n+producer.complain(this, \"I'm tired\", 23);]]></source>\n+      </section>\n+      <section id=\"event-model\">\n+        <title>The event model</title>\n+        <p>\n+          Inside an invocation handler for a dynamic proxy, there's no information about\n+          the names of each parameter. The JVM doesn't provide it. The only thing you know is\n+          the interface and method name. In order to properly fill the <code>Event</code>'s\n+          parameter map we need to know the parameter names. These are retrieved from an\n+          event object model. This is found in the <code>org.apache.fop.events.model</code>\n+          package. The data for the object model is retrieved from an XML representation of the\n+          event model that is loaded as a resource. The XML representation is generated using an\n+          Ant task at build time (<code>ant resourcegen</code>). The Ant task (found in\n+          <code>src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java</code>)\n+          scans FOP's sources for descendants of the <code>EventProducer</code> interface and\n+          uses <a href=\"http://qdox.codehaus.org/\">QDox</a> to parse these interfaces.\n+        </p>\n+        <p>\n+          Primarily, the QDox-based collector task records the parameters' names and types.\n+          Furthermore, it extracts additional attributes embedded as Javadoc comments from\n+          the methods. At the moment, the only such attribute is \"@event.severity\" which indicates\n+          the default event severity (which can be changed by event listeners). The example event\n+          producer above shows the Javadocs for an event method.\n+        </p>\n+        <p>\n+          There's one more information that is extracted from the event producer information for\n+          the event model: an optional primary exception. The first exception in the \"throws\"\n+          declaration of an event method is noted. It is used to throw an exception from\n+          the invocation handler if the event has an event severity of \"FATAL\" when all\n+          listeners have been called (listeners can update the event severity). Please note\n+          that an implementation of\n+          <code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code> has to be\n+          registered for the <code>EventExceptionManager</code> to be able to construct the\n+          exception from an event.\n+        </p>\n+        <p>\n+          For a given application, there can be multiple event models active at the same time.\n+          In FOP, each renderer is considered to be a plug-in and provides its own specific\n+          event model. The individual event models are provided through an\n+          <code>EventModelFactory</code>. This interface is implemented for each event model\n+          and registered through the service provider mechanism\n+          (see the <a href=\"#plug-ins\">plug-ins section</a> for details).\n+        </p>\n+      </section>\n+      <section id=\"event-severity\">\n+        <title>Event severity</title>\n+        <p>\n+          Four different levels of severity for events has been defined:\n+        </p>\n+        <ol>\n+          <li>INFO: informational only</li>\n+          <li>WARN: a Warning</li>\n+          <li>ERROR: an error condition from which FOP can recover. FOP will continue processing.</li>\n+          <li>FATAL: a fatal error which causes an exception in the end and FOP will stop processing.</li>\n+        </ol>\n+        <p>\n+          Event listeners can choose to ignore certain events based on their event severity.\n+          Please note that you may recieve an event \"twice\" in a specific case: if there is\n+          a fatal error an event is generated and sent to the listeners. After that an exception\n+          is thrown with the same information and processing stops. If the fatal event is\n+          shown to the user and the following exception is equally presented to the user it\n+          may appear that the event is duplicated. Of course, the same information is just\n+          published through two different channels.\n+        </p>\n+      </section>\n+      <section id=\"plug-ins\">\n+        <title>Plug-ins to the event subsystem</title>\n+        <p>\n+          The event subsystem is extensible. There are a number of extension points:\n+        </p>\n+        <ul>\n+          <li>\n+            <strong><code>org.apache.fop.events.model.EventModelFactory</code>:</strong> Provides\n+            an event model to the event subsystem.\n+          </li>\n+          <li>\n+            <strong><code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code>:</strong>\n+            Creates exceptions for events, i.e. turns an event into a specific exception.\n+          </li>\n+        </ul>\n+        <p>\n+          The names in bold above are used as filenames for the service provider files that\n+          are placed in the <code>META-INF/services</code> directory. That way, they are\n+          automatically detected. This is a mechanism defined by the\n+          <a href=\"http://java.sun.com/j2se/1.4.2/docs/guide/jar/jar.html#Service%20Provider\">JAR file specification</a>.\n+        </p>\n+      </section>\n+      <section id=\"l10n\">\n+        <title>Localization (L10n)</title>\n+        <p>\n+          One goal of the event subsystem was to have localized (translated) event messages.\n+          The <code>EventFormatter</code> class can be used to convert an event to a\n+          human-readable message. Each <code>EventProducer</code> can provide its own XML-based\n+          translation file. If there is none, a central translation file is used, called\n+          \"EventFormatter.xml\" (found in the same directory as the <code>EventFormatter</code>\n+          class).\n+        </p>\n+        <p>\n+          The XML format used by the <code>EventFormatter</code> is the same as\n+          <a href=\"ext:cocoon\">Apache Cocoon's</a> catalog format. Here's an example:\n+        </p>\n+        <source><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">\n+    [ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.explicitTableColumnsRequired\">\n+    RTF output requires that all table-columns for a table are defined. Output will be incorrect.{{locator}}\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.ignoredDeferredEvent\">\n+    Ignored deferred event for {node} ({start,if,start,end}).{{locator}}\n+  </message>\n+</catalogue>\n+]]></source>\n+        <p>\n+          The example (extracted from the RTF handler's event producer) has message templates for\n+          two event methods. The class used to do variable replacement in the templates is\n+          <code>org.apache.fop.util.text.AdvancedMessageFormat</code> which is more powerful\n+          than the <code>MessageFormat</code> classes provided by the Java class library\n+          (<code>java.util.text</code> package).\n+        </p>\n+        <p>\n+          \"locator\" is a template that is reused by the other message templates\n+          by referencing it through \"{{locator}}\". This is some kind of include command.\n+        </p>\n+        <p>\n+          Normal event parameters are accessed by name inside single curly braces, for example:\n+          \"{node}\". For objects, this format just uses the <code>toString()</code> method to turn\n+          the object into a string, unless there is an <code>ObjectFormatter</code> registered\n+          for that type (there's an example for <code>org.xml.sax.Locator</code>).\n+        </p>\n+        <p>\n+          The single curly braces pattern supports additional features. For example, it is possible\n+          to do this: \"{start,if,start,end}\". \"if\" here is a special field modifier that evaluates\n+          \"start\" as a boolean and if that is true returns the text right after the second comma\n+          (\"start\"). Otherwise it returns the text after the third comma (\"end\"). The \"equals\"\n+          modifier is similar to \"if\" but it takes as an additional (comma-separated) parameter\n+          right after the \"equals\" modifier, a string that is compared to the value of the variable.\n+          An example: {severity,equals,EventSeverity:FATAL,,some text} (this adds \"some text\" if\n+          the severity is not FATAL).\n+        </p>\n+        <p>\n+          Additional such modifiers can be added by implementing the\n+          <code>AdvancedMessageFormat$Part</code> and <code>AdvancedMessageFormat$PartFactory</code>\n+          interfaces.\n+        </p>\n+        <p>\n+          Square braces can be used to specify optional template sections. The whole section will\n+          be omitted if any of the variables used within are unavailable. Pipe (|) characters can\n+          be used to specify alternative sub-templates (see \"locator\" above for an example).\n+        </p>\n+        <p>\n+          Developers can also register a function (in the above example:\n+          <code>{#gatherContextInfo})</code>\n+          to do more complex information rendering. These functions are implementations of the\n+          <code>AdvancedMessageFormat$Function</code> interface. Please take care that this is\n+          done in a locale-independent way as there is no locale information available, yet.\n+        </p>\n+      </section>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/documentation/content/xdocs/trunk/events.xml",
                "sha": "d2fe5318c507eb10c44100cd54de19b7fcd4d715",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "patch": "@@ -0,0 +1,4 @@\n+org.apache.fop.events.ValidationExceptionFactory\r\n+org.apache.fop.events.PropertyExceptionFactory\r\n+org.apache.fop.events.UnsupportedOperationExceptionFactory\r\n+org.apache.fop.layoutmgr.LayoutException$LayoutExceptionFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "sha": "9fa7b8d04efbb8893c96f83e8b5a1402ee000f8f",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "patch": "@@ -0,0 +1,7 @@\n+org.apache.fop.events.FOPEventModelFactory\r\n+org.apache.fop.render.afp.AFPEventProducer$EventModelFactory\r\n+org.apache.fop.render.bitmap.BitmapRendererEventProducer$EventModelFactory\r\n+org.apache.fop.render.pcl.PCLEventProducer$EventModelFactory\r\n+org.apache.fop.render.pdf.PDFEventProducer$EventModelFactory\r\n+org.apache.fop.render.ps.PSEventProducer$EventModelFactory\r\n+org.apache.fop.render.rtf.RTFEventProducer$EventModelFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "sha": "8dc13dbfd9dc7bf552df0b33a38c892ec46de790",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.fo.FONode$GatherContextInfoFunction",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "sha": "375130f2ac4421e308438b621a95e489b4212844",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.util.text.LocatorFormatter",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "sha": "9e3860b313d1a2c9cd79b98b049425df3ef5715b",
                "status": "added"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "patch": "@@ -0,0 +1,6 @@\n+org.apache.fop.util.text.IfFieldPart$Factory\n+org.apache.fop.util.text.EqualsFieldPart$Factory\n+org.apache.fop.util.text.ChoiceFieldPart$Factory\n+org.apache.fop.util.text.HexFieldPart$Factory\n+org.apache.fop.util.text.GlyphNameFieldPart$Factory\n+org.apache.fop.events.EventFormatter$LookupFieldPartFactory",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "sha": "1647fb8d515c6eed66382f33d815b43a56bef175",
                "status": "added"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/apps/FOPException.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOPException.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/apps/FOPException.java",
                "patch": "@@ -32,6 +32,8 @@\n     private String systemId;\n     private int line;\n     private int column;\n+    \n+    private String localizedMessage;\n \n     /**\n      * Constructs a new FOP exception with the specified detail message.\n@@ -210,5 +212,24 @@ public void printStackTrace(java.io.PrintWriter writer) {\n             }\n         }\n     }\n+    \n+    /**\n+     * Sets the localized message for this exception.\n+     * @param msg the localized message\n+     */\n+    public void setLocalizedMessage(String msg) {\n+        this.localizedMessage = msg;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        if (this.localizedMessage != null) {\n+            return this.localizedMessage;\n+        } else {\n+            return super.getLocalizedMessage();\n+        }\n+    }\n \n+    \n+    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/apps/FOPException.java",
                "sha": "851712b09aa3af8f8c3f2edb282f7de5d1695a90",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/apps/FOUserAgent.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOUserAgent.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/apps/FOUserAgent.java",
                "patch": "@@ -36,6 +36,12 @@\n import org.apache.xmlgraphics.image.loader.impl.AbstractImageSessionContext;\n \n import org.apache.fop.Version;\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.FOPEventListenerProxy;\n+import org.apache.fop.events.LoggingEventListener;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.render.Renderer;\n import org.apache.fop.render.RendererFactory;\n@@ -89,6 +95,7 @@\n     private Renderer rendererOverride = null;\n     private FOEventHandler foEventHandlerOverride = null;\n     private boolean locatorEnabled = true; // true by default (for error messages).\n+    private EventBroadcaster eventBroadcaster = new FOPEventBroadcaster();\n     \n     /** Producer:  Metadata element for the system/software that produces\n      * the document. (Some renderers can store this in the document.)\n@@ -530,5 +537,43 @@ public boolean isLocatorEnabled() {\n         return locatorEnabled;\n     }\n \n+    /**\n+     * Returns the event broadcaster that control events sent inside a processing run. Clients\n+     * can register event listeners with the event broadcaster to listen for events that occur\n+     * while a document is being processed.\n+     * @return the event broadcaster.\n+     */\n+    public EventBroadcaster getEventBroadcaster() {\n+        return this.eventBroadcaster;\n+    }\n+\n+    private class FOPEventBroadcaster extends DefaultEventBroadcaster {\n+\n+        private FOPEventListenerProxy rootListener;\n+        \n+        public FOPEventBroadcaster() {\n+            this.rootListener = new FOPEventListenerProxy(\n+                    this.listeners, FOUserAgent.this);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void broadcastEvent(Event event) {\n+            rootListener.processEvent(event);\n+        }\n+\n+        /** {@inheritDoc} */\n+        protected EventProducer createProxyFor(Class clazz) {\n+            if (!this.listeners.hasEventListeners()) {\n+                //Backwards-compatibility: Make sure at least the LoggingEventListener is plugged\n+                //in so no events are just silently swallowed.\n+                addEventListener(\n+                        new LoggingEventListener(LogFactory.getLog(FOUserAgent.class)));\n+                \n+            }\n+            return super.createProxyFor(clazz);\n+        }\n+        \n+    }\n+    \n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/apps/FOUserAgent.java",
                "sha": "307087f7431f5a3962ebcd726d8377300908382a",
                "status": "modified"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaEventProducer.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/AreaEventProducer.java",
                "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.area;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for events related to the area tree.\n+ */\n+public interface AreaEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static AreaEventProducer get(EventBroadcaster broadcaster) {\n+            return (AreaEventProducer)broadcaster.getEventProducerFor(\n+                    AreaEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * An unresolved ID reference was encountered.\n+     * @param source the event source\n+     * @param type the type of reference\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReference(Object source, String type, String id);\n+    \n+    /**\n+     * An unresolved ID reference was encountered on a page.\n+     * @param source the event source\n+     * @param page the page the ID reference was found on\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReferenceOnPage(Object source, String page, String id);\n+    \n+    /**\n+     * A page could not be loaded/deserialized from a file.\n+     * @param source the event source\n+     * @param page the page to be loaded\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageLoadError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be saved/serialized to a file.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageSaveError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be rendered.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageRenderingError(Object source, String page, Exception e);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaEventProducer.java",
                "sha": "7747d2d79c6e05dc64958cb97eead4c4195f78e9",
                "status": "added"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/area/AreaTreeHandler.java",
                "patch": "@@ -325,8 +325,9 @@ private void addOffDocumentItem(OffDocumentItem odi) {\n                 if (pageVPList != null) {\n                     res.resolveIDRef(ids[count], pageVPList);\n                 } else {\n-                    log.warn(odi.getName() + \": Unresolved id reference \\\"\"\n-                            + ids[count] + \"\\\" found.\");\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReference(this, odi.getName(), ids[count]);\n                     idTracker.addUnresolvedIDRef(ids[count], res);\n                 }\n             }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "sha": "d3ea4155480403b00f340b0b99f42eee985412a2",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeObject.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeObject.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/area/AreaTreeObject.java",
                "patch": "@@ -23,7 +23,7 @@\n import java.util.Iterator;\n import java.util.Map;\n \n-import org.apache.fop.util.QName;\n+import org.apache.xmlgraphics.util.QName;\n \n /**\n  * Abstract base class for all area tree objects.\n@@ -53,12 +53,12 @@ public void setForeignAttributes(Map atts) {\n         if (atts.size() == 0) {\n             return;\n         }\n-        Iterator iter = atts.keySet().iterator();\n+        Iterator iter = atts.entrySet().iterator();\n         while (iter.hasNext()) {\n-            QName qName = (QName)iter.next();\n-            String value = (String)atts.get(qName);\n+            Map.Entry entry = (Map.Entry)iter.next();\n+            String value = (String)entry.getValue();\n             //The casting is only to ensure type safety (too bad we can't use generics, yet) \n-            setForeignAttribute(qName, value);\n+            setForeignAttribute((QName)entry.getKey(), value);\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeObject.java",
                "sha": "1c2269a01a7d3cf3cc0da5ed135791de40788b1f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeParser.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/area/AreaTreeParser.java",
                "patch": "@@ -50,6 +50,7 @@\n import org.apache.xmlgraphics.image.loader.ImageInfo;\n import org.apache.xmlgraphics.image.loader.ImageManager;\n import org.apache.xmlgraphics.image.loader.ImageSessionContext;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.area.Trait.Background;\n@@ -78,7 +79,6 @@\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactoryRegistry;\n import org.apache.fop.util.DefaultErrorListener;\n-import org.apache.fop.util.QName;\n \n /**\n  * This is a parser for the area tree XML (intermediate format) which is used to reread an area",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/AreaTreeParser.java",
                "sha": "19edd3d5e177dfbafe2e3a69771b2bc025c76ba4",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/CachedRenderPagesModel.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 39,
                "filename": "src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "patch": "@@ -19,24 +19,27 @@\n  \n package org.apache.fop.area;\n \n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.apps.FOPException;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.fonts.FontInfo;\n-import org.xml.sax.SAXException;\n-\n-import java.util.Map;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n import java.io.File;\n-import java.io.FileOutputStream;\n import java.io.FileInputStream;\n-import java.io.ObjectOutputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.io.OutputStream;\n-import java.io.BufferedOutputStream;\n-import java.io.BufferedInputStream;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.ResourceEventProducer;\n+import org.apache.fop.fonts.FontInfo;\n \n /**\n  * A simple cached render pages model.\n@@ -69,46 +72,39 @@ public CachedRenderPagesModel (FOUserAgent userAgent, String outputFormat,\n      */\n     protected boolean checkPreparedPages(PageViewport newpage, boolean renderUnresolved) {\n         for (Iterator iter = prepared.iterator(); iter.hasNext();) {\n-            PageViewport p = (PageViewport)iter.next();\n-            if (p.isResolved() || renderUnresolved) {\n-                if (p != newpage) {\n+            PageViewport pageViewport = (PageViewport)iter.next();\n+            if (pageViewport.isResolved() || renderUnresolved) {\n+                if (pageViewport != newpage) {\n                     try {\n                         // load page from cache\n-                        String name = (String)pageMap.get(p);\n+                        String name = (String)pageMap.get(pageViewport);\n                         File tempFile = new File(baseDir, name);\n                         log.debug(\"Loading page from: \" + tempFile);\n                         ObjectInputStream in = new ObjectInputStream(\n                                              new BufferedInputStream(\n                                                new FileInputStream(tempFile)));\n                         try {\n-                            p.loadPage(in);\n+                            pageViewport.loadPage(in);\n                         } finally {\n                             IOUtils.closeQuietly(in);\n                         }\n                         if (!tempFile.delete()) {\n-                            log.warn(\"Temporary file could not be deleted: \" + tempFile);\n+                            ResourceEventProducer eventProducer\n+                                = ResourceEventProducer.Provider.get(\n+                                        renderer.getUserAgent().getEventBroadcaster());\n+                            eventProducer.cannotDeleteTempFile(this, tempFile);\n                         }\n-                        pageMap.remove(p);\n+                        pageMap.remove(pageViewport);\n                     } catch (Exception e) {\n-                        log.error(e);\n+                        AreaEventProducer eventProducer\n+                            = AreaEventProducer.Provider.get(\n+                                renderer.getUserAgent().getEventBroadcaster());\n+                        eventProducer.pageLoadError(this, pageViewport.getPageNumberString(), e);\n                     }\n                 }\n \n-                try {\n-                    renderer.renderPage(p);\n-                    if (!p.isResolved()) {\n-                        String[] idrefs = p.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + p.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(e);\n-                }\n-                p.clear();\n+                renderPage(pageViewport);\n+                pageViewport.clear();\n                 iter.remove();\n             } else {\n                 if (!renderer.supportsOutOfOrder()) {\n@@ -147,8 +143,11 @@ protected void savePage(PageViewport page) {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Page saved to temporary file: \" + tempFile);\n             }\n-        } catch (Exception e) {\n-            log.error(e);\n+        } catch (IOException ioe) {\n+            AreaEventProducer eventProducer\n+                = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageSaveError(this, page.getPageNumberString(), ioe);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "sha": "b34a7e8d15dd499567bf93d6049f7c5bebce9cb2",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/PageViewport.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/PageViewport.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/area/PageViewport.java",
                "patch": "@@ -21,14 +21,15 @@\n \n import java.awt.Rectangle;\n import java.awt.geom.Rectangle2D;\n-import java.io.ObjectOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.logging.Log;\n@@ -516,9 +517,9 @@ public void dumpMarkers() {\n      * The map of unresolved references are set on the page so that\n      * the resolvers can be properly serialized and reloaded.\n      * @param out the object output stream to write the contents\n-     * @throws Exception if there is a problem saving the page\n+     * @throws IOException in case of an I/O error while serializing the page\n      */\n-    public void savePage(ObjectOutputStream out) throws Exception {\n+    public void savePage(ObjectOutputStream out) throws IOException {\n         // set the unresolved references so they are serialized\n         page.setUnresolvedReferences(unresolvedIDRefs);\n         out.writeObject(page);\n@@ -531,9 +532,10 @@ public void savePage(ObjectOutputStream out) throws Exception {\n      * if there are any unresolved references that were resolved\n      * while saved they will be resolved on the page contents.\n      * @param in the object input stream to read the page from\n-     * @throws Exception if there is an error loading the page\n+     * @throws ClassNotFoundException if a class was not found while loading the page\n+     * @throws IOException if an I/O error occurred while loading the page\n      */\n-    public void loadPage(ObjectInputStream in) throws Exception {\n+    public void loadPage(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         page = (Page) in.readObject();\n         unresolvedIDRefs = page.getUnresolvedReferences();\n         if (unresolvedIDRefs != null && pendingResolved != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/PageViewport.java",
                "sha": "da7ef1def81cbe399c0ac89f887854f717320241",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/RenderPagesModel.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/RenderPagesModel.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/area/RenderPagesModel.java",
                "patch": "@@ -156,23 +156,7 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n                         && pageViewport.getPageSequence().isFirstPage(pageViewport)) {\n                     renderer.startPageSequence(getCurrentPageSequence());\n                 }\n-                try {\n-                    renderer.renderPage(pageViewport);\n-                    if (!pageViewport.isResolved()) {\n-                        String[] idrefs = pageViewport.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + pageViewport.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(\"Error while rendering page \" + pageViewport.getPageIndex(), e);\n-                    if (e instanceof RuntimeException) {\n-                        throw (RuntimeException)e;\n-                    }\n-                }\n+                renderPage(pageViewport);\n                 pageViewport.clear();\n                 iter.remove();\n             } else {\n@@ -185,6 +169,33 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n         return renderer.supportsOutOfOrder() || prepared.isEmpty();\n     }\n \n+    /**\n+     * Renders the given page and notified about unresolved IDs if any.\n+     * @param pageViewport the page to be rendered.\n+     */\n+    protected void renderPage(PageViewport pageViewport) {\n+        try {\n+            renderer.renderPage(pageViewport);\n+            if (!pageViewport.isResolved()) {\n+                String[] idrefs = pageViewport.getIDRefs();\n+                for (int count = 0; count < idrefs.length; count++) {\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            renderer.getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReferenceOnPage(this,\n+                            pageViewport.getPageNumberString(), idrefs[count]);\n+                }\n+            }\n+        } catch (Exception e) {\n+            AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageRenderingError(this,\n+                    pageViewport.getPageNumberString(), e);\n+            if (e instanceof RuntimeException) {\n+                throw (RuntimeException)e;\n+            }\n+        }\n+    }\n+\n     /**\n      * Prepare a page.\n      * An unresolved page can be prepared if the renderer supports",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/area/RenderPagesModel.java",
                "sha": "b215669022fd1f9fe6f0c49376b62f3a557eda9f",
                "status": "modified"
            },
            {
                "additions": 69,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/CompositeEventListener.java",
                "changes": 69,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/CompositeEventListener.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/CompositeEventListener.java",
                "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.List;\n+\n+/**\n+ * EventListener implementation forwards events to possibly multiple other EventListeners.\n+ */\n+public class CompositeEventListener implements EventListener {\n+\n+    private List listeners = new java.util.ArrayList();\n+    \n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    public synchronized void addEventListener(EventListener listener) {\n+        this.listeners.add(listener);\n+    }\n+\n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    public synchronized void removeEventListener(EventListener listener) {\n+        this.listeners.remove(listener);\n+    }\n+\n+    private synchronized int getListenerCount() {\n+        return this.listeners.size();\n+    }\n+    \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    public boolean hasEventListeners() {\n+        return (getListenerCount() > 0);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        for (int i = 0, c = getListenerCount(); i < c; i++) {\n+            EventListener listener = (EventListener)this.listeners.get(i);\n+            listener.processEvent(event);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/CompositeEventListener.java",
                "sha": "a65728b71501020db28540c078234b5f4d9837ba",
                "status": "added"
            },
            {
                "additions": 160,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "changes": 160,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/DefaultEventBroadcaster.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "patch": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventModelFactory;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * Default implementation of the EventBroadcaster interface. It holds a list of event listeners\n+ * and can provide {@link EventProducer} instances for type-safe event production.\n+ */\n+public class DefaultEventBroadcaster implements EventBroadcaster {\n+\n+    /** Holds all registered event listeners */\n+    protected CompositeEventListener listeners = new CompositeEventListener();\n+    \n+    /** {@inheritDoc} */\n+    public void addEventListener(EventListener listener) {\n+        this.listeners.addEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void removeEventListener(EventListener listener) {\n+        this.listeners.removeEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean hasEventListeners() {\n+        return this.listeners.hasEventListeners();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void broadcastEvent(Event event) {\n+        this.listeners.processEvent(event);\n+    }\n+\n+    private static List/*<EventModel>*/ eventModels = new java.util.ArrayList();\n+    private Map proxies = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter = Service.providers(EventModelFactory.class, true);\n+        while (iter.hasNext()) {\n+            EventModelFactory factory = (EventModelFactory)iter.next();\n+            addEventModel(factory.createEventModel());\n+        }\n+    }\n+\n+    /**\n+     * Adds a new {@link EventModel} to the list of registered event models.\n+     * @param eventModel the event model instance\n+     */\n+    public static void addEventModel(EventModel eventModel) {\n+        eventModels.add(eventModel);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public EventProducer getEventProducerFor(Class clazz) {\n+        if (!EventProducer.class.isAssignableFrom(clazz)) {\n+            throw new IllegalArgumentException(\n+                    \"Class must be an implementation of the EventProducer interface: \"\n+                    + clazz.getName());\n+        }\n+        EventProducer producer;\n+        producer = (EventProducer)this.proxies.get(clazz);\n+        if (producer == null) {\n+            producer = createProxyFor(clazz);\n+            this.proxies.put(clazz, producer);\n+        }\n+        return producer;\n+    }\n+    \n+    private EventProducerModel getEventProducerModel(Class clazz) {\n+        for (int i = 0, c = eventModels.size(); i < c; i++) {\n+            EventModel eventModel = (EventModel)eventModels.get(i);\n+            EventProducerModel producerModel = eventModel.getProducer(clazz);\n+            if (producerModel != null) {\n+                return producerModel;\n+            }\n+        }\n+        return null;\n+    }\n+    \n+    /**\n+     * Creates a dynamic proxy for the given EventProducer interface that will handle the\n+     * conversion of the method call into the broadcasting of an event instance.\n+     * @param clazz a descendant interface of EventProducer\n+     * @return the EventProducer instance\n+     */\n+    protected EventProducer createProxyFor(Class clazz) {\n+        final EventProducerModel producerModel = getEventProducerModel(clazz);\n+        if (producerModel == null) {\n+            throw new IllegalStateException(\"Event model doesn't contain the definition for \"\n+                    + clazz.getName());\n+        }\n+        return (EventProducer)Proxy.newProxyInstance(clazz.getClassLoader(),\n+                new Class[] {clazz},\n+                new InvocationHandler() {\n+                    public Object invoke(Object proxy, Method method, Object[] args)\n+                            throws Throwable {\n+                        String methodName = method.getName();\n+                        EventMethodModel methodModel = producerModel.getMethod(methodName);\n+                        String eventID = producerModel.getInterfaceName() + \".\" + methodName;\n+                        if (methodModel == null) {\n+                            throw new IllegalStateException(\n+                                    \"Event model isn't consistent\"\n+                                    + \" with the EventProducer interface. Please rebuild FOP!\"\n+                                    + \" Affected method: \"\n+                                    + eventID);\n+                        }\n+                        Map params = new java.util.HashMap();\n+                        int i = 1;\n+                        Iterator iter = methodModel.getParameters().iterator();\n+                        while (iter.hasNext()) {\n+                            EventMethodModel.Parameter param\n+                                = (EventMethodModel.Parameter)iter.next();\n+                            params.put(param.getName(), args[i]);\n+                            i++;\n+                        }\n+                        Event ev = new Event(args[0], eventID, methodModel.getSeverity(), params);\n+                        broadcastEvent(ev);\n+                        \n+                        if (ev.getSeverity() == EventSeverity.FATAL) {\n+                            EventExceptionManager.throwException(ev,\n+                                    methodModel.getExceptionClass());\n+                        }\n+                        return null;\n+                    }\n+                });\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "sha": "bb1752a720c281e765bc1c9e624323d970613a8f",
                "status": "added"
            },
            {
                "additions": 150,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/Event.java",
                "changes": 150,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/Event.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/Event.java",
                "patch": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Collections;\n+import java.util.EventObject;\n+import java.util.Map;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This is the default event class used by this package. Each event has a unique event identifier\n+ * (a String), a severity indicator and a map of name/value pairs.\n+ */\n+public class Event extends EventObject {\n+\n+    private static final long serialVersionUID = -1310594422868258083L;\n+    \n+    private String eventID;\n+    private EventSeverity severity;\n+    private Map params;\n+    \n+    /**\n+     * Creates a new Event.\n+     * @param source the object that creates the event\n+     * @param eventID the unique identifier of the event\n+     * @param severity the severity level\n+     * @param params the event parameters (a map of name/value pairs)\n+     */\n+    public Event(Object source, String eventID, EventSeverity severity, Map params) {\n+        super(source);\n+        this.eventID = eventID;\n+        setSeverity(severity);\n+        this.params = params;\n+    }\n+    \n+    /**\n+     * Returns the event identifier.\n+     * @return the event identifier\n+     */\n+    public String getEventID() {\n+        return this.eventID;\n+    }\n+    \n+    /**\n+     * Returns the event group identifier.\n+     * @return the event group identifier (or null if there is no group identifier)\n+     */\n+    public String getEventGroupID() {\n+        int pos = this.eventID.lastIndexOf('.');\n+        if (pos > 0) {\n+            return this.eventID.substring(0, pos);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns the severity level.\n+     * @return the severity level\n+     */\n+    public EventSeverity getSeverity() {\n+        return this.severity;\n+    }\n+    \n+    /**\n+     * Sets the event's severity level. This method can be used to increase or decrease the\n+     * severity level in a listener.\n+     * @param severity the new event severity\n+     */\n+    public void setSeverity(EventSeverity severity) {\n+        this.severity = severity;\n+    }\n+\n+    /**\n+     * Returns a parameter.\n+     * @param key the key to the parameter\n+     * @return the parameter value or null if no value with this key is found\n+     */\n+    public Object getParam(String key) {\n+        if (this.params != null) {\n+            return this.params.get(key);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable {@link java.util.Map} with all event parameters.\n+     * @return the parameter map\n+     */\n+    public Map getParams() {\n+        return Collections.unmodifiableMap(this.params);\n+    }\n+    \n+    /**\n+     * Creates and returns a fluent builder object for building up the parameter map.\n+     * @return the parameter builder\n+     */\n+    public static ParamsBuilder paramsBuilder() {\n+        return new ParamsBuilder();\n+    }\n+    \n+    /**\n+     * This class is a fluent builder class for building up the parameter map.\n+     */\n+    public static class ParamsBuilder {\n+        private Map params;\n+        \n+        /**\n+         * Adds a new parameter (a name/value pair).\n+         * @param name the name of the parameter\n+         * @param value the value of the parameter\n+         * @return this instance\n+         */\n+        public ParamsBuilder param(String name, Object value) {\n+            if (this.params == null) {\n+                this.params = new java.util.HashMap();\n+            }\n+            this.params.put(name, value);\n+            return this;\n+        }\n+        \n+        /**\n+         * Returns the accumulated parameter map.\n+         * @return the accumulated parameter map\n+         */\n+        public Map build() {\n+            return this.params;\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/Event.java",
                "sha": "d3da1809e6644c38f2ade90f7d3e88e6a34a29e5",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventBroadcaster.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventBroadcaster.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventBroadcaster.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * The EventBroadcaster is the central relay point for events. It receives events from various\n+ * parts of the application and forwards them to any registered EventListener.\n+ */\n+public interface EventBroadcaster {\n+\n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    void addEventListener(EventListener listener);\n+    \n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    void removeEventListener(EventListener listener);\n+ \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    boolean hasEventListeners();\n+    \n+    /**\n+     * Broadcasts an event. This method is usually called from within the observed component.\n+     * @param event the event to be broadcast\n+     */\n+    void broadcastEvent(Event event);\n+    \n+    /**\n+     * Returns an event producer instance for the given interface class.\n+     * @param clazz the Class object identifying an {@link EventProducer} interface\n+     * @return the event producer instance\n+     */\n+    EventProducer getEventProducerFor(Class clazz);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventBroadcaster.java",
                "sha": "6c8df73750e2ed76ff3f939a82437631a00a09fc",
                "status": "added"
            },
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventExceptionManager.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventExceptionManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventExceptionManager.java",
                "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+/**\n+ * This class is reponsible for converting events into exceptions.\n+ */\n+public class EventExceptionManager {\n+\n+    private static final Map EXCEPTION_FACTORIES = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter;\n+        iter = Service.providers(ExceptionFactory.class, true);\n+        while (iter.hasNext()) {\n+            ExceptionFactory factory = (ExceptionFactory)iter.next();\n+            EXCEPTION_FACTORIES.put(factory.getExceptionClass().getName(), factory);\n+        }\n+    }\n+    \n+    /**\n+     * Converts an event into an exception and throws that. If the exception class is null,\n+     * a {@link RuntimeException} will be thrown.\n+     * @param event the event to be converted\n+     * @param exceptionClass the exception class to be thrown\n+     * @throws Throwable this happens always\n+     */\n+    public static void throwException(Event event, String exceptionClass) throws Throwable {\n+        if (exceptionClass != null) {\n+            ExceptionFactory factory = (ExceptionFactory)EXCEPTION_FACTORIES.get(exceptionClass);\n+            if (factory != null) {\n+                throw factory.createException(event);\n+            } else {\n+                throw new IllegalArgumentException(\n+                        \"No such ExceptionFactory available: \" + exceptionClass);\n+            }\n+        } else {\n+            String msg = EventFormatter.format(event);\n+            throw new RuntimeException(msg);\n+        }\n+    }\n+    \n+    /**\n+     * This interface is implementation by exception factories that can create exceptions from\n+     * events.\n+     */\n+    public interface ExceptionFactory {\n+        \n+        /**\n+         * Creates an exception from an event.\n+         * @param event the event\n+         * @return the newly created exception\n+         */\n+        Throwable createException(Event event);\n+        \n+        /**\n+         * Returns the {@link Exception} class created by this factory.\n+         * @return the exception class\n+         */\n+        Class getExceptionClass();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventExceptionManager.java",
                "sha": "093ae701071315319f380cea4101f4564aac455e",
                "status": "added"
            },
            {
                "additions": 196,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter.java",
                "changes": 196,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.java",
                "patch": "@@ -0,0 +1,196 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.util.XMLResourceBundle;\n+import org.apache.fop.util.text.AdvancedMessageFormat;\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Converts events into human-readable, localized messages.\n+ */\n+public final class EventFormatter {\n+\n+    private static final Pattern INCLUDES_PATTERN = Pattern.compile(\"\\\\{\\\\{.+\\\\}\\\\}\");\n+    \n+    private static ResourceBundle defaultBundle = XMLResourceBundle.getXMLBundle(\n+            EventFormatter.class.getName(), EventFormatter.class.getClassLoader());\n+    \n+    private static Log log = LogFactory.getLog(EventFormatter.class);\n+    \n+    private EventFormatter() {\n+        //utility class\n+    }\n+    \n+    /**\n+     * Formats an event using the default locale.\n+     * @param event the event\n+     * @return the formatted message\n+     */\n+    public static String format(Event event) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = defaultBundle;\n+        }\n+        return format(event, bundle);\n+    }\n+    \n+    /**\n+     * Formats an event using a given locale.\n+     * @param event the event\n+     * @param locale the locale\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, Locale locale) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID, locale,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = XMLResourceBundle.getXMLBundle(\n+                    EventFormatter.class.getName(),\n+                    locale,\n+                    EventFormatter.class.getClassLoader());\n+        }\n+        return format(event, bundle);\n+    }\n+\n+    private static String format(Event event, ResourceBundle bundle) {\n+        String template = bundle.getString(event.getEventID());\n+        return format(event, processIncludes(template, bundle));\n+    }\n+\n+    private static String processIncludes(String template, ResourceBundle bundle) {\n+        CharSequence input = template;\n+        int replacements;\n+        StringBuffer sb;\n+        do {\n+            sb = new StringBuffer(Math.max(16, input.length()));\n+            replacements = processIncludesInner(input, sb, bundle);\n+            input = sb;\n+        } while (replacements > 0);\n+        String s = sb.toString();\n+        return s;\n+    }\n+\n+    private static int processIncludesInner(CharSequence template, StringBuffer sb,\n+            ResourceBundle bundle) {\n+        int replacements = 0;\n+        Matcher m = INCLUDES_PATTERN.matcher(template);\n+        while (m.find()) {\n+            String include = m.group();\n+            include = include.substring(2, include.length() - 2);\n+            m.appendReplacement(sb, bundle.getString(include));\n+            replacements++;\n+        }\n+        m.appendTail(sb);\n+        return replacements;\n+    }\n+\n+    /**\n+     * Formats the event using a given pattern. The pattern needs to be compatible with\n+     * {@link AdvancedMessageFormat}.\n+     * @param event the event\n+     * @param pattern the pattern (compatible with {@link AdvancedMessageFormat})\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, String pattern) {\n+        AdvancedMessageFormat format = new AdvancedMessageFormat(pattern);\n+        Map params = new java.util.HashMap(event.getParams());\n+        params.put(\"source\", event.getSource());\n+        params.put(\"severity\", event.getSeverity());\n+        return format.format(params);\n+    }\n+    \n+    private static class LookupFieldPart implements Part {\n+        \n+        private String fieldName;\n+        \n+        public LookupFieldPart(String fieldName) {\n+            this.fieldName = fieldName;\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            return getKey(params) != null;\n+        }\n+\n+        public void write(StringBuffer sb, Map params) {\n+            sb.append(defaultBundle.getString(getKey(params)));\n+        }\n+\n+        private String getKey(Map params) {\n+            return (String)params.get(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{\" + this.fieldName + \", lookup}\";\n+        }\n+        \n+    }\n+    \n+    /** PartFactory for lookups. */\n+    public static class LookupFieldPartFactory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new LookupFieldPart(fieldName);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"lookup\";\n+        }\n+        \n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter.java",
                "sha": "56964039b744f058f4901c7dfc078349b26a7d49",
                "status": "added"
            },
            {
                "additions": 101,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter.xml",
                "changes": 101,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.xml",
                "patch": "@@ -0,0 +1,101 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+    \n+    http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">[ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]</message>\n+  <message key=\"rule.markerDescendantOfFlow\">An fo:marker is permitted only as the descendant of an fo:flow.</message>\n+  <message key=\"rule.retrieveMarkerDescendatOfStaticContent\">An fo:retrieve-marker is permitted only as the descendant of an fo:static-content.</message>\n+  <message key=\"rule.bidiOverrideContent\">An fo:bidi-override that is a descendant of an fo:leader or of the fo:inline child of an fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.inlineContent\">An fo:inline that is a descendant of an fo:leader or fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.childOfSPM\">The element must be a child of fo:simple-page-master.</message>\n+  <message key=\"rule.childOfDeclarations\">The element must be a child of fo:declarations.</message>\n+  <message key=\"rule.childOfSPMorDeclarations\">The element must be a child of fo:declarations or fo:simple-page-master.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">For \"{elementName}\", only one \"{offendingNode}\" may be declared.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nodeOutOfOrder\">For \"{elementName}\", \"{tooLateNode}\" must be declared before \"{tooEarlyNode}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidChild\">\"{offendingNode}\" is not a valid child element of \"{elementName}\"![ {ruleViolated,lookup}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingChildElement\">\"{elementName}\" is missing child elements.[\n+Required content model: {contentModel}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Element \"{elementName}\" is missing required property \"{propertyName}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.idNotUnique\">Property ID \"{id}\" (found on \"{elementName}\") previously used; ID values must be unique within a document!{severity,equals,EventSeverity:FATAL,,\n+Any reference to it will be considered a reference to the first occurrence in the document.}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotInitialChild\">fo:marker must be an initial child: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotUniqueForSameParent\">fo:marker \"marker-class-name\" must be unique for same parent: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidProperty\">Invalid property encountered on \"{elementName}\": {attr}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidPropertyValue\">Invalid property value encountered in {propName}=\"{propValue}\"[: {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unimplementedFeature\">The following feature isn't implemented by Apache FOP, yet: {feature} (on {elementName}){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingLinkDestination\">Missing attribute on {elementName}: Either external-destination or internal-destination must be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerCloningFailed\">Unable to clone subtree of fo:marker (marker-class-name=\"{markerClassName}\") for fo:retrieve-marker.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.colorProfileNameNotUnique\">Duplicate color profile profile name: {name}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.regionNameMappedToMultipleRegionClasses\">Region-name (\"{regionName}\") is being mapped to multiple region-classes ({defaultRegionClass1} and {defaultRegionClass2}).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNameNotUnique\">The page master name (\"{name}\") must be unique across page-masters and page-sequence-masters.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.duplicateFlowNameInPageSequence\">Duplicate flow-name \"{flowName}\" found within {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.flowNameNotMapped\">The flow-name \"{flowName}\" on {elementName} could not be mapped to a region-name in the layout-master-set.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNotFound\">The master-reference \"{masterReference}\" on {elementName} matches no simple-page-master or page-sequence-master.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.illegalRegionName\">The region-name \"{regionName}\" for {elementName} is not permitted.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nonZeroBorderPaddingOnRegion\">Border and padding for {elementName} \"{regionName}\" must be '0' (See 6.4.13 in XSL 1.0).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.columnCountErrorOnRegionBodyOverflowScroll\">If overflow property is set to \"scroll\" on {elementName}, a column-count other than \"1\" may not be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidFORoot\">First element must be the fo:root formatting object. Found {elementName} instead. Please make sure you're producing a valid XSL-FO document.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.emptyDocument\">Document is empty (something might be wrong with your XSLT stylesheet).</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unknownFormattingObject\">Unknown formatting object \"{offendingNode}\" encountered (a child of {elementName}}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.nonAutoBPDOnTable\">Only a value of \"auto\" for block-progression-dimension has a well-specified behavior on fo:table. Falling back to \"auto\".{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noTablePaddingWithCollapsingBorderModel\">In collapsing border model a table does not have padding (see http://www.w3.org/TR/REC-CSS2/tables.html#collapsing-borders), but a non-zero value for padding was found. The padding will be ignored.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noMixRowsAndCells\">Either fo:table-rows or fo:table-cells may be children of an {elementName} but not both.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.footerOrderCannotRecover\">This table uses the collapsing border model. In order to resolve borders in an efficient way the table-footer must be known before any table-body is parsed. Either put the footer at the correct place or switch to the separate border model.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.startEndRowUnderTableRowWarning\">starts-row/ends-row for fo:table-cells non-applicable for children of an fo:table-row.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.tooManyCells\">The column-number or number of cells in the row overflows the number of fo:table-columns specified for the table.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.valueMustBeBiggerGtEqOne\">{propName} must be 1 or bigger, but got {actualValue}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.warnImplicitColumns\">table-layout=\\\"fixed\\\" and column-width unspecified =&gt; falling back to proportional-column-width(1){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.paddingNotApplicable\">padding-* properties are not applicable to {elementName}, but a non-zero value for padding was found.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.cellOverlap\">{elementName} overlaps in column {column}.<!-- no locator here, exception will be wrapped --></message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.breakIgnoredDueToRowSpanning\">{breakBefore,if,break-before,break-after} ignored on {elementName} because of row spanning in progress (See XSL 1.1, {breakBefore,if,7.20.2,7.20.1}){{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageNotFound\">Image not found.[ URI: {uri}.]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageError\">Image not available.[ URI: {uri}.] Reason:[ {reason}][ {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageIOError\">I/O error while loading image.[ URI: {uri}.][ Reason: {ioe}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.ifoNoIntrinsicSize\">The intrinsic dimensions of an instream-foreign-object could not be determined.{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.uriError\">Error while handling URI: {uri}. Reason: {e}{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLProcessingError\">Some XML content will be ignored. Could not render XML in namespace \"{namespaceURI}\".[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLNoHandler\">Some XML content will be ignored. No handler defined for XML with namespace \"{namespaceURI}\".</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageWritingError\">Error while writing an image to the target file.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.cannotDeleteTempFile\">Temporary file could not be deleted: {tempFile}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.leaderWithoutContent\">fo:leader is set to \"use-content\" but has no content.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.lineOverflows\">Line {line} of a paragraph overflows the available area by {overflowLength,choice,50000#{overflowLength} millipoints|50000&lt;more than 50 points}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.rowTooTall\">The contents of table-row {row} are taller than they should be (there is a block-progression-dimension or height constraint on the indicated row). Due to its contents the row grows to {effCellBPD} millipoints, but the row shouldn't get any taller than {maxCellBPD} millipoints.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.tableFixedAutoWidthNotSupported\">table-layout=\"fixed\" and width=\"auto\", but auto-layout not supported =&gt; assuming width=\"100%\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.objectTooWide\">The extent in inline-progression-direction (width) of a {elementName} is bigger than the available space ({effIPD}mpt &gt; {maxIPD}mpt).{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.overconstrainedAdjustEndIndent\">Adjusting end-indent based on overconstrained geometry rules for {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.viewportOverflow\">Content overflows the viewport of an {elementName} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.regionOverflow\">Content overflows the viewport of the {elementName} on page {page} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.flowNotMappingToRegionBody\">Flow \"{flowName}\" does not map to the region-body in page-master \"{masterName}\". FOP presently does not support this.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.pageSequenceMasterExhausted\">Subsequences exhausted in page-sequence-master \"{pageSequenceMasterName}\", {canRecover,if,using previous subsequence,cannot recover}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.missingSubsequencesInPageSequenceMaster\">No subsequences in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.noMatchingPageMaster\">No simple-page-master matching \"{pageMasterName}\" in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.error\">SVG error: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.alert\">SVG alert: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.info\">SVG info: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgNotBuilt\">SVG graphic could not be built. Reason: {e}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgRenderingError\">SVG graphic could not be rendered. Reason: {e}</message>\n+  <message key=\"org.apache.fop.render.RendererEventProducer.ioError\">I/O error while writing to target file.[ Reason: {ioe}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReference\">{type}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReferenceOnPage\">Page {page}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageLoadError\">Error while deserializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageSaveError\">Error while serializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageRenderingError\">Error while rendering page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontSubstituted\">Font \"{requested}\" not found. Substituting with \"{effective}\".</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontLoadingErrorAtAutoDetection\">Unable to load font file: {fontURL}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.glyphNotAvailable\">Glyph \"{ch}\" (0x{ch,hex}[, {ch,glyph-name}]) not available in font \"{fontName}\".</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter.xml",
                "sha": "f17da1161ded934f992b2df9dd6c5270783e06d4",
                "status": "added"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter_de.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter_de.xml",
                "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+    Licensed to the Apache Software Foundation (ASF) under one or more\r\n+    contributor license agreements.  See the NOTICE file distributed with\r\n+    this work for additional information regarding copyright ownership.\r\n+    The ASF licenses this file to You under the Apache License, Version 2.0\r\n+    (the \"License\"); you may not use this file except in compliance with\r\n+    the License.  You may obtain a copy of the License at\r\n+    \r\n+    http://www.apache.org/licenses/LICENSE-2.0\r\n+    \r\n+    Unless required by applicable law or agreed to in writing, software\r\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+    See the License for the specific language governing permissions and\r\n+    limitations under the License.\r\n+-->\r\n+<!-- $Id$ -->\r\n+<catalogue xml:lang=\"de\">\r\n+  <message key=\"locator\">[ (Siehe Position {loc})| (Siehe {#gatherContextInfo})| (Keine Kontextinformationen verf\u00fcgbar)]</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">In \"{elementName}\" darf nur ein einziges \"{offendingNode}\" vorkommen!{{locator}}</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Dem Element \"{elementName}\" fehlt ein verlangtes Property \"{propertyName}\"!{{locator}}</message>\r\n+</catalogue>\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "sha": "c65d24f7370e7dc43bd580b00a38353dd7d849eb",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventListener.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventListener.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventListener.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This interface is implemented by clients who want to listen for events.\n+ */\n+public interface EventListener extends java.util.EventListener {\n+\n+    /**\n+     * This method is called for each event that is generated. With the event's ID it is possible\n+     * to react to certain events. Events can also simply be recorded and presented to a user.\n+     * It is possible to throw an (unchecked) exception if the processing needs to be aborted\n+     * because some special event occured. This way the client can configure the behaviour of\n+     * the observed application.\n+     * @param event the event\n+     */\n+    void processEvent(Event event);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventListener.java",
                "sha": "f8293aed926384e0170e2da51e0b0d3d0a957fa7",
                "status": "added"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventProducer.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventProducer.java",
                "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This is a marker interface which all event producer interfaces need to extend. These interfaces\n+ * must agree to the following convention:\n+ * <ul>\n+ *   <li>The first parameter of each method must be: <code>Object source</code>\n+ * </ul>\n+ */\n+public interface EventProducer {\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/EventProducer.java",
                "sha": "88da771a49dfd6531476c8ed95526ab6d9f8e6ce",
                "status": "added"
            },
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventListenerProxy.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.model.EventSeverity;\n+import org.apache.fop.fo.FOValidationEventProducer;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n+\n+/**\n+ * EventListener proxy that inspects all events and adjusts severity levels where necessary.\n+ * For validation events, it reacts on each event based on the strict validation setting in\n+ * the user agent.\n+ * For layout events, it reduces the default severity level if FOP signals that it can recover\n+ * from the event. \n+ */\n+public class FOPEventListenerProxy implements EventListener {\n+\n+    private static final String FOVALIDATION_EVENT_ID_PREFIX\n+                = FOValidationEventProducer.class.getName();\n+    \n+    private static final String BLOCK_LEVEL_EVENT_ID_PREFIX\n+                = BlockLevelEventProducer.class.getName();\n+\n+    private EventListener delegate;\n+    private FOUserAgent userAgent;\n+    \n+    /**\n+     * Main constructor.\n+     * @param delegate the event listener to delegate events to \n+     * @param userAgent the FO user agent\n+     */\n+    public FOPEventListenerProxy(EventListener delegate, FOUserAgent userAgent) {\n+        this.delegate = delegate;\n+        this.userAgent = userAgent;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        if (event.getEventID().startsWith(FOVALIDATION_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover) && !userAgent.validateStrictly()) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        } else if (event.getEventID().startsWith(BLOCK_LEVEL_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover)) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        }\n+        this.delegate.processEvent(event);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "sha": "d4c237844759ff45f9f75356b76971519d24216a",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventModelFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Factory for FOP's main event model.\n+ */\n+public class FOPEventModelFactory extends AbstractEventModelFactory {\n+\n+    private static final String EVENT_MODEL_FILENAME = \"event-model.xml\";\n+\n+    /** {@inheritDoc} */\n+    public EventModel createEventModel() {\n+        return loadModel(getClass(), EVENT_MODEL_FILENAME);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "sha": "5a75042fa5370d5ef63cecf0f9199602964ebf9e",
                "status": "added"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/LoggingEventListener.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/LoggingEventListener.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/LoggingEventListener.java",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * EventListener implementation that redirects events to Commons Logging. The events are\n+ * converted to localized messages.\n+ */\n+public class LoggingEventListener implements EventListener {\n+\n+    /** Default logger instance */\n+    private static Log defaultLog = LogFactory.getLog(LoggingEventListener.class);\n+    \n+    private Log log;\n+    private boolean skipFatal;\n+    \n+    /**\n+     * Creates an instance logging to the default log category of this class.\n+     */\n+    public LoggingEventListener() {\n+        this(defaultLog);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger. Events with fatal severity level will be\n+     * skipped.\n+     * @param log the target logger\n+     */\n+    public LoggingEventListener(Log log) {\n+        this(log, true);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger.\n+     * @param log the target logger\n+     * @param skipFatal true if events with fatal severity level should be skipped (i.e. not logged)\n+     */\n+    public LoggingEventListener(Log log, boolean skipFatal) {\n+        this.log = log;\n+        this.skipFatal = skipFatal;\n+    }\n+    \n+    /**\n+     * Returns the target logger for this instance.\n+     * @return the target logger\n+     */\n+    public Log getLog() {\n+        return this.log;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            log.info(msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            log.warn(msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            log.error(msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            if (!skipFatal) {\n+                log.fatal(msg);\n+            }\n+        } else {\n+            assert false;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/LoggingEventListener.java",
                "sha": "9ba8ed2dfde171c65b9abae8b4428110fbd0b317",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/PropertyExceptionFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Exception factory for {@link PropertyException}.\n+ */\n+public class PropertyExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        PropertyException ex = new PropertyException(msg);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return PropertyException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "sha": "667c4a16e085fa23b95d8bee2e84b6d3b3c232c2",
                "status": "added"
            },
            {
                "additions": 136,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "changes": 136,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ResourceEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ResourceEventProducer.java",
                "patch": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+\n+import org.w3c.dom.Document;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.image.loader.ImageException;\n+\n+/**\n+ * Event producer interface for resource events (missing images, fonts etc.).\n+ */\n+public interface ResourceEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the requested event producer\n+         */\n+        public static ResourceEventProducer get(EventBroadcaster broadcaster) {\n+            return (ResourceEventProducer)broadcaster.getEventProducerFor(\n+                    ResourceEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Image not found.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param fnfe the \"file not found\" exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageNotFound(Object source, String uri, FileNotFoundException fnfe, Locator loc);\n+    \n+    /**\n+     * Error while processing image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the image exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageError(Object source, String uri, ImageException e, Locator loc);\n+    \n+    /**\n+     * I/O error while loading an image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param ioe the I/O exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageIOError(Object source, String uri, IOException ioe, Locator loc);\n+\n+    /**\n+     * Error while writing/serializing an image to an output format.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void imageWritingError(Object source, Exception e);\n+\n+    /**\n+     * Error while handling a URI.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the original exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void uriError(Object source, String uri, Exception e, Locator loc);\n+\n+    /**\n+     * Intrinsic size of fo:instream-foreign-object could not be determined.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void ifoNoIntrinsicSize(Object source, Locator loc);\n+    \n+    /**\n+     * Error processing foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLProcessingError(Object source, Document doc, String namespaceURI, Exception e);\n+\n+    /**\n+     * No handler for foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLNoHandler(Object source, Document doc, String namespaceURI);\n+    \n+    /**\n+     * Cannot delete a temporary file.\n+     * @param source the event source\n+     * @param tempFile the temporary file\n+     * @event.severity ERROR\n+     */\n+    void cannotDeleteTempFile(Object source, File tempFile);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "sha": "21da4f1d73185a753f17b0979a15d985abc3f28b",
                "status": "added"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+\n+/**\n+ * Exception factory for {@link UnsupportedOperationException}.\n+ */\n+public class UnsupportedOperationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        UnsupportedOperationException ex = new UnsupportedOperationException(msg);\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return UnsupportedOperationException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "sha": "06ce8dd254116e14fb0475ee4aac4d39b8c87613",
                "status": "added"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ValidationExceptionFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.ValidationException;\n+\n+/**\n+ * Exception factory for {@link ValidationException}.\n+ */\n+public class ValidationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        Locator loc = (Locator)event.getParam(\"loc\");\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        ValidationException ex = new ValidationException(msg, loc);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return ValidationException.class;\n+    }\n+    \n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "sha": "9dba84007d63e6a1356264def9db817f1878fd62",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.InputStream;\n+import java.util.MissingResourceException;\n+\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+\n+/**\n+ * This interface is used to instantiate (load, parse) event models.\n+ */\n+public abstract class AbstractEventModelFactory implements EventModelFactory {\n+\n+    /**\n+     * Loads an event model and returns its instance.\n+     * @param resourceBaseClass base class to use for loading resources\n+     * @param resourceName the resource name pointing to the event model to be loaded\n+     * @return the newly loaded event model.\n+     */\n+    public EventModel loadModel(Class resourceBaseClass, String resourceName) {\n+        InputStream in = resourceBaseClass.getResourceAsStream(resourceName);\n+        if (in == null) {\n+            throw new MissingResourceException(\n+                    \"File \" + resourceName + \" not found\",\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        }\n+        try {\n+            return EventModelParser.parse(new StreamSource(in));\n+        } catch (TransformerException e) {\n+            throw new MissingResourceException(\n+                    \"Error reading \" + resourceName + \": \" + e.getMessage(),\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        } finally {\n+            IOUtils.closeQuietly(in);\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "sha": "ee980f34ee0a2a854507fc17eebc1fce400d1d1e",
                "status": "added"
            },
            {
                "additions": 198,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "changes": 198,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventMethodModel.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventMethodModel.java",
                "patch": "@@ -0,0 +1,198 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents an event method. Each method in an event producer interface will result in one\n+ * instance of <code>EventMethodModel</code>.\n+ */\n+public class EventMethodModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = -7548882973341444354L;\n+    \n+    private String methodName;\n+    private EventSeverity severity;\n+    private List params = new java.util.ArrayList();\n+    private String exceptionClass;\n+    \n+    /**\n+     * Creates an new instance.\n+     * @param methodName the event method's name\n+     * @param severity the event severity\n+     */\n+    public EventMethodModel(String methodName, EventSeverity severity) {\n+        this.methodName = methodName;\n+        this.severity = severity;\n+    }\n+    \n+    /**\n+     * Adds a method parameter.\n+     * @param param the method parameter\n+     */\n+    public void addParameter(Parameter param) {\n+        this.params.add(param);\n+    }\n+    \n+    /**\n+     * Adds a method parameter.\n+     * @param type the type of the parameter\n+     * @param name the name of the parameter\n+     * @return the resulting Parameter instance\n+     */\n+    public Parameter addParameter(Class type, String name) {\n+        Parameter param = new Parameter(type, name); \n+        addParameter(param);\n+        return param;\n+    }\n+    \n+    /**\n+     * Sets the event method name.\n+     * @param name the event name\n+     */\n+    public void setMethodName(String name) {\n+        this.methodName = name;\n+    }\n+    \n+    /**\n+     * Returns the event method name\n+     * @return the event name\n+     */\n+    public String getMethodName() {\n+        return this.methodName;\n+    }\n+    \n+    /**\n+     * Sets the event's severity level.\n+     * @param severity the severity\n+     */\n+    public void setSeverity(EventSeverity severity) {\n+        this.severity = severity;\n+    }\n+    \n+    /**\n+     * Returns the event's severity level.\n+     * @return the severity\n+     */\n+    public EventSeverity getSeverity() {\n+        return this.severity;\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable list of parameters for this event method.\n+     * @return the list of parameters\n+     */\n+    public List getParameters() {\n+        return Collections.unmodifiableList(this.params);\n+    }\n+    \n+    /**\n+     * Sets the primary exception class for this event method. Note: Not all event methods throw\n+     * exceptions!\n+     * @param exceptionClass the exception class\n+     */\n+    public void setExceptionClass(String exceptionClass) {\n+        this.exceptionClass = exceptionClass;\n+    }\n+    \n+    /**\n+     * Returns the primary exception class for this event method. This method returns null if\n+     * the event is only informational or just a warning.\n+     * @return the primary exception class or null\n+     */\n+    public String getExceptionClass() {\n+        return this.exceptionClass;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getMethodName());\n+        atts.addAttribute(null, \"severity\", \"severity\", \"CDATA\", getSeverity().getName());\n+        if (getExceptionClass() != null) {\n+            atts.addAttribute(null, \"exception\", \"exception\", \"CDATA\", getExceptionClass());\n+        }\n+        String elName = \"method\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = this.params.iterator();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+    \n+    /**\n+     * Represents an event parameter.\n+     */\n+    public static class Parameter implements Serializable, XMLizable {\n+        \n+        private static final long serialVersionUID = 6062500277953887099L;\n+        \n+        private Class type;\n+        private String name;\n+        \n+        /**\n+         * Creates a new event parameter.\n+         * @param type the parameter type\n+         * @param name the parameter name\n+         */\n+        public Parameter(Class type, String name) {\n+            this.type = type;\n+            this.name = name;\n+        }\n+        \n+        /**\n+         * Returns the parameter type.\n+         * @return the parameter type\n+         */\n+        public Class getType() {\n+            return this.type;\n+        }\n+        \n+        /**\n+         * Returns the parameter name.\n+         * @return the parameter name\n+         */\n+        public String getName() {\n+            return this.name;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void toSAX(ContentHandler handler) throws SAXException {\n+            AttributesImpl atts = new AttributesImpl();\n+            atts.addAttribute(null, \"type\", \"type\", \"CDATA\", getType().getName());\n+            atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getName());\n+            String elName = \"parameter\";\n+            handler.startElement(null, elName, elName, atts);\n+            handler.endElement(null, elName, elName);\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "sha": "930cda53d62538ab96e5a2f88a336bc58991d062",
                "status": "added"
            },
            {
                "additions": 135,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModel.java",
                "changes": 135,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModel.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModel.java",
                "patch": "@@ -0,0 +1,135 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerConfigurationException;\n+import javax.xml.transform.TransformerFactoryConfigurationError;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.sax.TransformerHandler;\n+import javax.xml.transform.stream.StreamResult;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents a whole event model that supports multiple event producers.\n+ */\n+public class EventModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = 7468592614934605082L;\n+    \n+    private Map producers = new java.util.LinkedHashMap();\n+    \n+    /**\n+     * Creates a new, empty event model\n+     */\n+    public EventModel() {\n+    }\n+    \n+    /**\n+     * Adds the model of an event producer to the event model.\n+     * @param producer the event producer model\n+     */\n+    public void addProducer(EventProducerModel producer) {\n+        this.producers.put(producer.getInterfaceName(), producer);\n+    }\n+    \n+    /**\n+     * Returns an iterator over the contained event producer models.\n+     * @return an iterator (Iterator&lt;EventProducerModel&gt;)\n+     */\n+    public Iterator getProducers() {\n+        return this.producers.values().iterator();\n+    }\n+\n+    /**\n+     * Returns the model of an event producer with the given interface name.\n+     * @param interfaceName the fully qualified name of the event producer\n+     * @return the model instance for the event producer (or null if it wasn't found)\n+     */\n+    public EventProducerModel getProducer(String interfaceName) {\n+        return (EventProducerModel)this.producers.get(interfaceName);\n+    }\n+    \n+    /**\n+     * Returns the model of an event producer with the given interface.\n+     * @param clazz the interface of the event producer\n+     * @return the model instance for the event producer (or null if it wasn't found)\n+     */\n+    public EventProducerModel getProducer(Class clazz) {\n+        return getProducer(clazz.getName());\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        String elName = \"event-model\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = getProducers();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+\n+    private void writeXMLizable(XMLizable object, File outputFile) throws IOException {\n+        Result res = new StreamResult(outputFile);\n+        \n+        try {\n+            SAXTransformerFactory tFactory\n+                = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+            TransformerHandler handler = tFactory.newTransformerHandler();\n+            Transformer transformer = handler.getTransformer();\n+            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n+            handler.setResult(res);\n+            handler.startDocument();\n+            object.toSAX(handler);\n+            handler.endDocument();\n+        } catch (TransformerConfigurationException e) {\n+            throw new IOException(e.getMessage());\n+        } catch (TransformerFactoryConfigurationError e) {\n+            throw new IOException(e.getMessage());\n+        } catch (SAXException e) {\n+            throw new IOException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Saves this event model to an XML file.\n+     * @param modelFile the target file\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public void saveToXML(File modelFile) throws IOException {\n+        writeXMLizable(this, modelFile);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModel.java",
                "sha": "61e221b3bda72d379c7c1cd4870f454456179f47",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelFactory.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+/**\n+ * This interface is used to instantiate (load, parse) event models.\n+ */\n+public interface EventModelFactory {\n+\n+    /**\n+     * Creates a new EventModel instance.\n+     * @return the new EventModel instance\n+     */\n+    EventModel createEventModel();\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "sha": "cd760501c07d335fa6f03154f83c2881106cc8e8",
                "status": "added"
            },
            {
                "additions": 140,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModelParser.java",
                "changes": 140,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelParser.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelParser.java",
                "patch": "@@ -0,0 +1,140 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.util.Stack;\n+\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.util.DefaultErrorListener;\n+\n+/**\n+ * This is a parser for the event model XML.\n+ */\n+public class EventModelParser {\n+\n+    /** Logger instance */\n+    protected static Log log = LogFactory.getLog(EventModelParser.class);\n+\n+    private static SAXTransformerFactory tFactory \n+        = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+\n+    /**\n+     * Parses an event model file into an EventModel instance.\n+     * @param src the Source instance pointing to the XML file\n+     * @return the created event model structure\n+     * @throws TransformerException if an error occurs while parsing the XML file\n+     */\n+    public static EventModel parse(Source src) \n+            throws TransformerException {\n+        Transformer transformer = tFactory.newTransformer();\n+        transformer.setErrorListener(new DefaultErrorListener(log));\n+        \n+        EventModel model = new EventModel();\n+        SAXResult res = new SAXResult(getContentHandler(model));\n+\n+        transformer.transform(src, res);\n+        return model;\n+    }\n+\n+    /**\n+     * Creates a new ContentHandler instance that you can send the event model XML to. The parsed\n+     * content is accumulated in the model structure.\n+     * @param model the EventModel\n+     * @return the ContentHandler instance to receive the SAX stream from the XML file\n+     */\n+    public static ContentHandler getContentHandler(EventModel model) {\n+        return new Handler(model);\n+    }\n+\n+    private static class Handler extends DefaultHandler {\n+\n+        private EventModel model;\n+        private Stack objectStack = new Stack();\n+\n+        public Handler(EventModel model) {\n+            this.model = model;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void startElement(String uri, String localName, String qName, Attributes attributes)\n+                    throws SAXException {\n+            try {\n+                if (\"event-model\".equals(localName)) {\n+                    if (objectStack.size() > 0) {\n+                        throw new SAXException(\"event-model must be the root element\");\n+                    }\n+                    objectStack.push(model);\n+                } else if (\"producer\".equals(localName)) {\n+                    EventProducerModel producer = new EventProducerModel(\n+                            attributes.getValue(\"name\"));\n+                    EventModel parent = (EventModel)objectStack.peek();\n+                    parent.addProducer(producer);\n+                    objectStack.push(producer);\n+                } else if (\"method\".equals(localName)) {\n+                    EventSeverity severity = EventSeverity.valueOf(attributes.getValue(\"severity\"));\n+                    String ex = attributes.getValue(\"exception\");\n+                    EventMethodModel method = new EventMethodModel(\n+                            attributes.getValue(\"name\"), severity);\n+                    if (ex != null && ex.length() > 0) {\n+                        method.setExceptionClass(ex);\n+                    }\n+                    EventProducerModel parent = (EventProducerModel)objectStack.peek();\n+                    parent.addMethod(method);\n+                    objectStack.push(method);\n+                } else if (\"parameter\".equals(localName)) {\n+                    String className = attributes.getValue(\"type\");\n+                    Class type;\n+                    try {\n+                        type = Class.forName(className);\n+                    } catch (ClassNotFoundException e) {\n+                        throw new SAXException(\"Could not find Class for: \" + className, e);\n+                    }\n+                    String name = attributes.getValue(\"name\");\n+                    EventMethodModel parent = (EventMethodModel)objectStack.peek();\n+                    objectStack.push(parent.addParameter(type, name));\n+                } else {\n+                    throw new SAXException(\"Invalid element: \" + qName);\n+                }\n+            } catch (ClassCastException cce) {\n+                throw new SAXException(\"XML format error: \" + qName, cce);\n+            }\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void endElement(String uri, String localName, String qName) throws SAXException {\n+            objectStack.pop();\n+        }\n+\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventModelParser.java",
                "sha": "600e495c5ff15cad82f198b8c44be5df985960fd",
                "status": "added"
            },
            {
                "additions": 105,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "changes": 105,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventProducerModel.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventProducerModel.java",
                "patch": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.Serializable;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n+\n+import org.apache.xmlgraphics.util.XMLizable;\n+\n+/**\n+ * Represents the model of an event producer with multiple event methods.\n+ */\n+public class EventProducerModel implements Serializable, XMLizable {\n+\n+    private static final long serialVersionUID = 122267104123721902L;\n+    \n+    private String interfaceName;\n+    private Map methods = new java.util.LinkedHashMap();\n+    \n+    /**\n+     * Creates a new instance.\n+     * @param interfaceName the fully qualified interface name of the event producer \n+     */\n+    public EventProducerModel(String interfaceName) {\n+        this.interfaceName = interfaceName;\n+    }\n+    \n+    /**\n+     * Returns the fully qualified interface name of the event producer.\n+     * @return the fully qualified interface name\n+     */\n+    public String getInterfaceName() {\n+        return this.interfaceName;\n+    }\n+    \n+    /**\n+     * Sets the fully qualified interface name of the event producer.\n+     * @param name the fully qualified interface name\n+     */\n+    public void setInterfaceName(String name) {\n+        this.interfaceName = name;\n+    }\n+    \n+    /**\n+     * Adds a model instance of an event method.\n+     * @param method the event method model\n+     */\n+    public void addMethod(EventMethodModel method) {\n+        this.methods.put(method.getMethodName(), method);\n+    }\n+    \n+    /**\n+     * Returns the model instance of an event method for the given method name.\n+     * @param methodName the method name\n+     * @return the model instance (or null if no method with the given name exists)\n+     */\n+    public EventMethodModel getMethod(String methodName) {\n+        return (EventMethodModel)this.methods.get(methodName);\n+    }\n+    \n+    /**\n+     * Returns an iterator over the contained event producer methods.\n+     * @return an iterator (Iterator&lt;EventMethodModel&gt;)\n+     */\n+    public Iterator getMethods() {\n+        return this.methods.values().iterator();\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        AttributesImpl atts = new AttributesImpl();\n+        atts.addAttribute(null, \"name\", \"name\", \"CDATA\", getInterfaceName());\n+        String elName = \"producer\";\n+        handler.startElement(null, elName, elName, atts);\n+        Iterator iter = getMethods();\n+        while (iter.hasNext()) {\n+            ((XMLizable)iter.next()).toSAX(handler);\n+        }\n+        handler.endElement(null, elName, elName);\n+    }\n+\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "sha": "938609cd9b8d92f550c9677a38f39d0ef2201447",
                "status": "added"
            },
            {
                "additions": 82,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventSeverity.java",
                "changes": 82,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventSeverity.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventSeverity.java",
                "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.ObjectStreamException;\n+import java.io.Serializable;\n+\n+/** Enumeration class for event severities. */\n+public final class EventSeverity implements Serializable {\n+\n+    private static final long serialVersionUID = 4108175215810759243L;\n+    \n+    /** info level */\n+    public static final EventSeverity INFO = new EventSeverity(\"INFO\");\n+    /** warning level */\n+    public static final EventSeverity WARN = new EventSeverity(\"WARN\");\n+    /** error level */\n+    public static final EventSeverity ERROR = new EventSeverity(\"ERROR\");\n+    /** fatal error */\n+    public static final EventSeverity FATAL = new EventSeverity(\"FATAL\");\n+    \n+    private String name;\n+\n+    /**\n+     * Constructor to add a new named item.\n+     * @param name Name of the item.\n+     */\n+    private EventSeverity(String name) {\n+        this.name = name;\n+    }\n+\n+    /** @return the name of the enumeration */\n+    public String getName() {\n+        return this.name;\n+    }\n+    \n+    /**\n+     * Returns the enumeration/singleton object based on its name.\n+     * @param name the name of the enumeration value\n+     * @return the enumeration object\n+     */\n+    public static EventSeverity valueOf(String name) {\n+        if (INFO.getName().equalsIgnoreCase(name)) {\n+            return INFO;\n+        } else if (WARN.getName().equalsIgnoreCase(name)) {\n+            return WARN;\n+        } else if (ERROR.getName().equalsIgnoreCase(name)) {\n+            return ERROR;\n+        } else if (FATAL.getName().equalsIgnoreCase(name)) {\n+            return FATAL;\n+        } else {\n+            throw new IllegalArgumentException(\"Illegal value for enumeration: \" + name);\n+        }\n+    }\n+    \n+    private Object readResolve() throws ObjectStreamException {\n+        return valueOf(getName());\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"EventSeverity:\" + name;\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/events/model/EventSeverity.java",
                "sha": "d37c53c1e1e31a802af2b6b6286558299897c80a",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/ElementMapping.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMapping.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/ElementMapping.java",
                "patch": "@@ -24,9 +24,10 @@\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n \n-import org.apache.fop.util.QName;\n import org.w3c.dom.DOMImplementation;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n /**\n  * Abstract base class for Element Mappings (including FO Element Mappings)\n  * which provide the framework of valid elements and attibutes for a given",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/ElementMapping.java",
                "sha": "a47e6affa0001264c24f21fe1d54f259ec066b74",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMappingRegistry.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "patch": "@@ -23,6 +23,7 @@\n import java.util.Map;\n \n import org.w3c.dom.DOMImplementation;\n+\n import org.xml.sax.Locator;\n \n import org.apache.commons.logging.Log;\n@@ -144,7 +145,6 @@ public Maker findFOMaker(String namespaceURI, String localName, Locator locator)\n                       + \"No element mapping definition found for \"\n                       + FONode.getNodeString(namespaceURI, localName), locator);\n             } else {\n-                log.warn(\"Unknown formatting object \" + namespaceURI + \"^\" + localName);\n                 fobjMaker = new UnknownXMLObj.Maker(namespaceURI);\n             }\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "sha": "abc4ec8349cdb07924a6fedf2591c8538d2ee8e4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOElementMapping.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOElementMapping.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/FOElementMapping.java",
                "patch": "@@ -22,7 +22,7 @@\n // Java\n import java.util.HashMap;\n \n-import org.apache.fop.util.QName;\n+import org.apache.xmlgraphics.util.QName;\n \n /**\n  * Element mapping class for all XSL-FO elements.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOElementMapping.java",
                "sha": "62721afebc6df9515b3d260c56c73bc0d02afe3a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOEventHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOEventHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOEventHandler.java",
                "patch": "@@ -48,6 +48,7 @@\n import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.pagination.Flow;\n import org.apache.fop.fo.pagination.PageSequence;\n+import org.apache.fop.fonts.FontEventAdapter;\n import org.apache.fop.fonts.FontInfo;\n \n /**\n@@ -101,6 +102,7 @@\n     public FOEventHandler(FOUserAgent foUserAgent) {\n         this.foUserAgent = foUserAgent;\n         this.fontInfo = new FontInfo();\n+        this.fontInfo.setEventListener(new FontEventAdapter(foUserAgent.getEventBroadcaster()));\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOEventHandler.java",
                "sha": "5a9a5bb9df36a2cbeecda8068bfc6b8bd5db6197",
                "status": "modified"
            },
            {
                "additions": 126,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FONode.java",
                "changes": 172,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FONode.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 46,
                "filename": "src/java/org/apache/fop/fo/FONode.java",
                "patch": "@@ -21,6 +21,8 @@\n \n // Java\n import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n \n import org.xml.sax.Attributes;\n import org.xml.sax.Locator;\n@@ -29,6 +31,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n@@ -37,6 +41,7 @@\n import org.apache.fop.fo.pagination.Root;\n import org.apache.fop.util.CharUtilities;\n import org.apache.fop.util.ContentHandlerFactory;\n+import org.apache.fop.util.text.AdvancedMessageFormat.Function;\n \n /**\n  * Base class for nodes in the XML tree\n@@ -143,6 +148,10 @@ public FOEventHandler getFOEventHandler() {\n         return parent.getFOEventHandler();\n     }\n     \n+    /**\n+     * Indicates whether this node is a child of an fo:marker.\n+     * @return true if this node is a child of an fo:marker\n+     */\n     protected boolean inMarker() {\n         return getFOEventHandler().inMarker();\n     }\n@@ -239,7 +248,7 @@ protected static void validateChildNode(\n      * @param start starting array element to add\n      * @param end ending array element to add\n      * @param pList currently applicable PropertyList \n-     * @param locator location in fo source file.\n+     * @param locator location in the XSL-FO source file.\n      * @throws FOPException if there's a problem during processing\n      */\n     protected void addCharacters(char[] data, int start, int end,\n@@ -343,54 +352,50 @@ public static String getNodeString(String namespaceURI, String localName) {\n     }\n \n     /**\n-     * Helper function to standardize property error exceptions\n-     * (e.g., not specifying either an internal- or an external-destination\n-     * property for an FO:link)\n-     * @param problem text to display that indicates the problem\n-     * @throws ValidationException the validation error provoked by the method call\n+     * Returns an instance of the FOValidationEventProducer.\n+     * @return an event producer for FO validation\n      */\n-    protected void attributeError(String problem) \n-                throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName() \n-                + \", \" + problem, locator);\n+    protected FOValidationEventProducer getFOValidationEventProducer() {\n+        return FOValidationEventProducer.Provider.get(\n+                getUserAgent().getEventBroadcaster());\n     }\n-\n+    \n     /**\n-     * Helper function to standardize attribute warnings\n-     * (e.g., currently unsupported properties)\n-     * @param problem text to display that indicates the problem\n+     * Helper function to standardize \"too many\" error exceptions\n+     * (e.g., two fo:declarations within fo:root)\n+     * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param nsURI namespace URI of incoming invalid node\n+     * @param lName local name (i.e., no prefix) of incoming node \n+     * @throws ValidationException the validation error provoked by the method call\n      */\n-    public void attributeWarning(String problem) {\n-        log.warn(warningText(locator) + getName() + \", \" + problem);\n+    protected void tooManyNodesError(Locator loc, String nsURI, String lName) \n+                throws ValidationException {\n+        tooManyNodesError(loc, new QName(nsURI, lName));\n     }\n \n     /**\n      * Helper function to standardize \"too many\" error exceptions\n      * (e.g., two fo:declarations within fo:root)\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n-     * @param nsURI namespace URI of incoming invalid node\n-     * @param lName local name (i.e., no prefix) of incoming node \n+     * @param offendingNode the qualified name of the offending node\n      * @throws ValidationException the validation error provoked by the method call\n      */\n-    protected void tooManyNodesError(Locator loc, String nsURI, String lName) \n+    protected void tooManyNodesError(Locator loc, QName offendingNode) \n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() \n-            + \", only one \" + getNodeString(nsURI, lName) + \" may be declared.\", \n-            loc);\n+        getFOValidationEventProducer().tooManyNodes(this, getName(), offendingNode, loc);\n     }\n \n     /**\n      * Helper function to standardize \"too many\" error exceptions\n      * (e.g., two fo:declarations within fo:root)\n-     * This overrloaded method helps make the caller code better self-documenting\n+     * This overloaded method helps make the caller code better self-documenting\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n      * @param offendingNode incoming node that would cause a duplication.\n      * @throws ValidationException the validation error provoked by the method call\n      */\n     protected void tooManyNodesError(Locator loc, String offendingNode) \n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() \n-            + \", only one \" + offendingNode + \" may be declared.\", loc);\n+        tooManyNodesError(loc, new QName(FO_URI, offendingNode));\n     }\n \n     /**\n@@ -402,9 +407,23 @@ protected void tooManyNodesError(Locator loc, String offendingNode)\n      * @throws ValidationException the validation error provoked by the method call\n      */\n     protected void nodesOutOfOrderError(Locator loc, String tooLateNode, \n-        String tooEarlyNode) throws ValidationException {\n-        throw new ValidationException(errorText(loc) + \"For \" + getName() + \", \" + tooLateNode \n-            + \" must be declared before \" + tooEarlyNode + \".\", loc);\n+            String tooEarlyNode) throws ValidationException {\n+        nodesOutOfOrderError(loc, tooLateNode, tooEarlyNode, false);\n+    }\n+    \n+    /**\n+     * Helper function to standardize \"out of order\" exceptions\n+     * (e.g., fo:layout-master-set appearing after fo:page-sequence)\n+     * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param tooLateNode string name of node that should be earlier in document\n+     * @param tooEarlyNode string name of node that should be later in document\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    protected void nodesOutOfOrderError(Locator loc, String tooLateNode, \n+            String tooEarlyNode, boolean canRecover) throws ValidationException {\n+        getFOValidationEventProducer().nodeOutOfOrder(this, getName(),\n+                tooLateNode, tooEarlyNode, canRecover, loc);\n     }\n     \n     /**\n@@ -417,24 +436,24 @@ protected void nodesOutOfOrderError(Locator loc, String tooLateNode,\n      */\n     protected void invalidChildError(Locator loc, String nsURI, String lName) \n                 throws ValidationException {\n-        invalidChildError(loc, nsURI, lName, null);\n+        invalidChildError(loc, getName(), nsURI, lName, null);\n     }\n     \n     /**\n      * Helper function to return \"invalid child\" exceptions with more\n      * complex validation rules (i.e., needing more explanation of the problem)\n      * @param loc org.xml.sax.Locator object of the error (*not* parent node)\n+     * @param parentName the name of the parent element\n      * @param nsURI namespace URI of incoming invalid node\n      * @param lName local name (i.e., no prefix) of incoming node\n-     * @param ruleViolated text explanation of problem\n+     * @param ruleViolated name of the rule violated (used to lookup a resource in a bundle)\n      * @throws ValidationException the validation error provoked by the method call\n      */\n-    protected void invalidChildError(Locator loc, String nsURI, String lName,\n+    protected void invalidChildError(Locator loc, String parentName, String nsURI, String lName,\n                 String ruleViolated)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(loc) + getNodeString(nsURI, lName) \n-            + \" is not a valid child element of \" + getName() \n-            + ((ruleViolated != null) ? \": \" + ruleViolated : \".\"), loc);\n+        getFOValidationEventProducer().invalidChild(this, parentName,\n+                new QName(nsURI, lName), ruleViolated, loc);\n     }\n \n     /**\n@@ -446,9 +465,22 @@ protected void invalidChildError(Locator loc, String nsURI, String lName,\n      */\n     protected void missingChildElementError(String contentModel)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName() \n-            + \" is missing child elements. \\nRequired Content Model: \" \n-            + contentModel, locator);\n+        getFOValidationEventProducer().missingChildElement(this, getName(),\n+                contentModel, false, locator);\n+    }\n+\n+    /**\n+     * Helper function to throw an error caused by missing mandatory child elements.\n+     * E.g., fo:layout-master-set not having any page-master child element.\n+     * @param contentModel The XSL Content Model for the fo: object or a similar description \n+     *                     indicating the necessary child elements.\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    protected void missingChildElementError(String contentModel, boolean canRecover)\n+                throws ValidationException {\n+        getFOValidationEventProducer().missingChildElement(this, getName(),\n+                contentModel, canRecover, locator);\n     }\n \n     /**\n@@ -458,8 +490,7 @@ protected void missingChildElementError(String contentModel)\n      */\n     protected void missingPropertyError(String propertyName)\n                 throws ValidationException {\n-        throw new ValidationException(errorText(locator) + getName()\n-            + \" is missing required \\\"\" + propertyName + \"\\\" property.\", locator);\n+        getFOValidationEventProducer().missingProperty(this, getName(), propertyName, locator);\n     }\n \n     /**\n@@ -513,9 +544,10 @@ public static String decorateWithContextInfo(String text, FONode node) {\n     \n     /**\n      * Returns a String containing as much context information as possible about a node. Call\n-     * this methods only in exceptional conditions because this method may perform quite extensive\n+     * this method only in exceptional conditions because this method may perform quite extensive\n      * information gathering inside the FO tree.\n-     * @return a String containing \n+     * @return a String containing context information\n+     * @deprecated Not localized! Should rename getContextInfoAlt() to getContextInfo() when done!\n      */\n     public String getContextInfo() {\n         StringBuffer sb = new StringBuffer();\n@@ -542,6 +574,54 @@ public String getContextInfo() {\n         return sb.toString();\n     }\n     \n+    /**\n+     * Returns a String containing as some context information about a node. It does not take the\n+     * locator into consideration and returns null if no useful context information can be found.\n+     * Call this method only in exceptional conditions because this method may perform quite\n+     * extensive information gathering inside the FO tree. All text returned by this method that\n+     * is not extracted from document content needs to be locale-independent.\n+     * @return a String containing context information\n+     */\n+    protected String getContextInfoAlt() {\n+        String s = gatherContextInfo();\n+        if (s != null) {\n+            StringBuffer sb = new StringBuffer();\n+            if (getLocalName() != null) {\n+                sb.append(getName());\n+                sb.append(\", \");\n+            }\n+            sb.append(\"\\\"\");\n+            sb.append(s);\n+            sb.append(\"\\\"\");\n+            return sb.toString();\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /** Function for AdvancedMessageFormat to retrieve context info from an FONode. */\n+    public static class GatherContextInfoFunction implements Function {\n+\n+        /** {@inheritDoc} */\n+        public Object evaluate(Map params) {\n+            Object obj = params.get(\"source\");\n+            if (obj instanceof PropertyList) {\n+                PropertyList propList = (PropertyList)obj;\n+                obj = propList.getFObj();\n+            }\n+            if (obj instanceof FONode) {\n+                FONode node = (FONode)obj;\n+                return node.getContextInfoAlt();\n+            }\n+            return null;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public Object getName() {\n+            return \"gatherContextInfo\";\n+        }\n+    }\n+    \n     /**\n      * Gathers context information for the getContextInfo() method.\n      * @return the collected context information or null, if none is available\n@@ -687,31 +767,31 @@ protected static void attachSiblings(FONode precedingSibling,\n          * of child nodes\n          * @return  the parent node\n          */\n-        public FObj parentNode();\n+        FObj parentNode();\n         \n         /**\n          * Convenience method with return type of FONode\n          * (should be semantically equivalent to\n          * <code>(FONode) next();</code>)\n          * @return the next node (if any), as a type FONode\n          */\n-        public FONode nextNode();\n+        FONode nextNode();\n         \n         /**\n          * Convenience method with return type of FONode\n          * (should be semantically equivalent to\n          * <code>(FONode) previous();</code>)\n          * @return the previous node (if any), as a type FONode\n          */\n-        public FONode previousNode();\n+        FONode previousNode();\n         \n         /**\n          * Returns the first node in the list, and decreases the index,\n          * so that a subsequent call to hasPrevious() will return false\n          * @return the first node in the list\n          * @throws NoSuchElementException if the list is empty\n          */\n-        public FONode firstNode();\n+        FONode firstNode();\n         \n         /**\n          * Returns the last node in the list, and advances the\n@@ -720,7 +800,7 @@ protected static void attachSiblings(FONode precedingSibling,\n          * @return the last node in the list\n          * @throws NoSuchElementException if the list is empty\n          */\n-        public FONode lastNode();\n+        FONode lastNode();\n \n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FONode.java",
                "sha": "197a2482dec82fdb42b8bc6607ad17fc54d70290",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOText.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOText.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/fo/FOText.java",
                "patch": "@@ -19,11 +19,11 @@\n \n package org.apache.fop.fo;\n \n-// Java\n import java.awt.Color;\n import java.util.NoSuchElementException;\n \n-// FOP\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.flow.Block;\n@@ -34,9 +34,6 @@\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.SpaceProperty;\n \n-// SAX\n-import org.xml.sax.Locator;\n-\n /**\n  * A text node (PCDATA) in the formatting object tree.\n  *\n@@ -396,7 +393,7 @@ private char charTransform(int i) {\n                 return ca[i];\n             }\n         default:\n-            log.warn(\"Invalid text-tranform value: \" + textTransform);\n+            assert false; //should never happen as the property subsystem catches that case\n             return ca[i];\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOText.java",
                "sha": "99d37dba99ddc0268cb906d6fafc9c30cfadef54",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOTreeBuilder.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 27,
                "filename": "src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "patch": "@@ -31,6 +31,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.apps.FormattingResults;\n@@ -130,6 +132,7 @@ public void startDocument() throws SAXException {\n             throw new IllegalStateException(\"FOTreeBuilder (and the Fop class) cannot be reused.\"\n                     + \" Please instantiate a new instance.\");\n         }\n+        \n         used = true;\n         empty = true;\n         rootFObj = null;    // allows FOTreeBuilder to be reused\n@@ -146,8 +149,10 @@ public void startDocument() throws SAXException {\n     public void endDocument() throws SAXException {\n         this.delegate.endDocument();\n         if (this.rootFObj == null && empty) {\n-            throw new ValidationException(\n-                    \"Document is empty (something might be wrong with your XSLT stylesheet).\");\n+            FOValidationEventProducer eventProducer\n+                = FOValidationEventProducer.Provider.get(\n+                    foEventHandler.getUserAgent().getEventBroadcaster());\n+            eventProducer.emptyDocument(this);\n         }\n         rootFObj = null;\n         if (log.isDebugEnabled()) {\n@@ -178,18 +183,6 @@ public void endElement(String uri, String localName, String rawName)\n         }\n     }\n \n-    /**\n-     * Finds the {@link Maker} used to create {@link FONode} objects of a particular type\n-     * \n-     * @param namespaceURI URI for the namespace of the element\n-     * @param localName name of the Element\n-     * @return the ElementMapping.Maker that can create an FO object for this element\n-     * @throws FOPException if a Maker could not be found for a bound namespace.\n-     */\n-    private Maker findFOMaker(String namespaceURI, String localName) throws FOPException {\n-        return elementMappingRegistry.findFOMaker(namespaceURI, localName, locator);\n-    }\n-\n     /** {@inheritDoc} */\n     public void warning(SAXParseException e) {\n         log.warn(e.getLocalizedMessage());\n@@ -258,22 +251,21 @@ public void startElement(String namespaceURI, String localName, String rawName,\n             if (rootFObj == null) {\n                 empty = false;\n                 if (!namespaceURI.equals(FOElementMapping.URI) \n-                    || !localName.equals(\"root\")) {\n-                    throw new ValidationException(\n-                        \"Error: First element must be the fo:root formatting object. \"\n-                        + \"Found \" + FONode.getNodeString(namespaceURI, localName) \n-                        + \" instead.\"\n-                        + \" Please make sure you're producing a valid XSL-FO document.\");\n+                        || !localName.equals(\"root\")) {\n+                    FOValidationEventProducer eventProducer\n+                        = FOValidationEventProducer.Provider.get(\n+                                foEventHandler.getUserAgent().getEventBroadcaster());\n+                    eventProducer.invalidFORoot(this, FONode.getNodeString(namespaceURI, localName),\n+                            getEffectiveLocator());\n                 }\n             } else { // check that incoming node is valid for currentFObj\n-                if (namespaceURI.equals(FOElementMapping.URI)\n-                    || namespaceURI.equals(ExtensionElementMapping.URI)) {\n+                if (currentFObj.getNamespaceURI().equals(FOElementMapping.URI)\n+                    || currentFObj.getNamespaceURI().equals(ExtensionElementMapping.URI)) {\n                     currentFObj.validateChildNode(locator, namespaceURI, localName);\n                 }\n             }\n             \n-            ElementMapping.Maker fobjMaker = \n-                findFOMaker(namespaceURI, localName);\n+            ElementMapping.Maker fobjMaker = findFOMaker(namespaceURI, localName);\n \n             try {\n                 foNode = fobjMaker.make(currentFObj);\n@@ -342,8 +334,7 @@ public void endElement(String uri, String localName, String rawName)\n             if (currentPropertyList != null\n                     && currentPropertyList.getFObj() == currentFObj\n                     && !foEventHandler.inMarker()) {\n-                currentPropertyList = \n-                    currentPropertyList.getParentPropertyList();\n+                currentPropertyList = currentPropertyList.getParentPropertyList();\n             }\n             \n             if (currentFObj.getNameId() == Constants.FO_MARKER) {\n@@ -373,7 +364,29 @@ public void characters(char[] data, int start, int length)\n         /** {@inheritDoc} */\n         public void endDocument() throws SAXException {\n             currentFObj = null;\n-        }        \n+        }\n+        \n+        /**\n+         * Finds the {@link Maker} used to create {@link FONode} objects of a particular type\n+         * \n+         * @param namespaceURI URI for the namespace of the element\n+         * @param localName name of the Element\n+         * @return the ElementMapping.Maker that can create an FO object for this element\n+         * @throws FOPException if a Maker could not be found for a bound namespace.\n+         */\n+        private Maker findFOMaker(String namespaceURI, String localName) throws FOPException {\n+            Maker maker = elementMappingRegistry.findFOMaker(namespaceURI, localName, locator);\n+            if (maker instanceof UnknownXMLObj.Maker) {\n+                FOValidationEventProducer eventProducer\n+                    = FOValidationEventProducer.Provider.get(\n+                        foEventHandler.getUserAgent().getEventBroadcaster());\n+                eventProducer.unknownFormattingObject(this, currentFObj.getName(),\n+                        new QName(namespaceURI, localName),\n+                        getEffectiveLocator());\n+            }\n+            return maker;\n+        }\n+\n     }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "sha": "84abc4b8b48493c3d8aa280917dce2fd33b6bf79",
                "status": "modified"
            },
            {
                "additions": 348,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "changes": 348,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOValidationEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "patch": "@@ -0,0 +1,348 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fo;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Event producer interface for XSL-FO validation messages.\n+ */\n+public interface FOValidationEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static FOValidationEventProducer get(EventBroadcaster broadcaster) {\n+            return (FOValidationEventProducer)broadcaster.getEventProducerFor(\n+                    FOValidationEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Too many child nodes.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call \n+     * @event.severity FATAL\n+     */\n+    void tooManyNodes(Object source, String elementName, QName offendingNode,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * The node order is wrong.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param tooLateNode string name of node that should be earlier in document\n+     * @param tooEarlyNode string name of node that should be later in document\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    void nodeOutOfOrder(Object source, String elementName,\n+            String tooLateNode, String tooEarlyNode, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * An invalid child was encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param ruleViolated the rule that was violated or null\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     */\n+    void invalidChild(Object source, String elementName, QName offendingNode, String ruleViolated,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A required child element is missing.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param contentModel the expected content model\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingChildElement(Object source, String elementName,\n+            String contentModel, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An element is missing a required property.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param propertyName the name of the missing property\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingProperty(Object source, String elementName, String propertyName,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * An id was used twice in a document.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param id the id that was reused\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void idNotUnique(Object source, String elementName, String id, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * There are multiple color profiles defined with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param name the duplicate color profile name\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void colorProfileNameNotUnique(Object source, String elementName, String name,\n+            Locator loc);\n+\n+    /**\n+     * There are multiple page masters defined with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param name the duplicate page master name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void masterNameNotUnique(Object source, String elementName, String name,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A marker is not an initial child on a node.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param mcname the marker class name\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerNotInitialChild(Object source, String elementName, String mcname, Locator loc);\n+\n+    /**\n+     * A marker class name is not unique within the same parent.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param mcname the marker class name\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerNotUniqueForSameParent(Object source, String elementName,\n+            String mcname, Locator loc);\n+\n+    /**\n+     * An invalid property was found.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param attr the invalid attribute\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void invalidProperty(Object source, String elementName, QName attr, boolean canRecover,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An invalid property value was encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param propName the property name\n+     * @param propValue the property value\n+     * @param e the property exception caused by the invalid value\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void invalidPropertyValue(Object source, String elementName,\n+            String propName, String propValue, PropertyException e,\n+            Locator loc);\n+\n+    /**\n+     * A feature is not supported, yet.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param feature the unsupported feature\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void unimplementedFeature(Object source, String elementName, String feature,\n+            Locator loc);\n+\n+    /**\n+     * Missing internal-/external-destination on basic-link or bookmark.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingLinkDestination(Object source, String elementName, Locator loc)\n+                throws ValidationException;\n+\n+    /**\n+     * Indicates a problem while cloning a marker (ex. due to invalid property values).\n+     * @param source the event source\n+     * @param markerClassName the \"marker-class-name\" of the marker\n+     * @param fe the FOP exception that cause this problem\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void markerCloningFailed(Object source, String markerClassName, FOPException fe, Locator loc);\n+\n+    /**\n+     * A region name is mapped to multiple region classes.\n+     * @param source the event source\n+     * @param regionName the region name\n+     * @param defaultRegionClass1 the first default region class\n+     * @param defaultRegionClass2 the second default region class\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void regionNameMappedToMultipleRegionClasses(Object source, String regionName,\n+            String defaultRegionClass1, String defaultRegionClass2, Locator loc)\n+                throws ValidationException;\n+\n+    /**\n+     * There are multiple flows with the same name.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param flowName the flow name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void duplicateFlowNameInPageSequence(Object source, String elementName, String flowName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A flow name could not be mapped to a region.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param flowName the flow name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void flowNameNotMapped(Object source, String elementName, String flowName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A page master could not be found.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param masterReference the page master reference\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void masterNotFound(Object source, String elementName, String masterReference,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * An illegal region name was used.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param regionName the region name\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void illegalRegionName(Object source, String elementName, String regionName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * A non-zero border and/or padding has been encountered on a region.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param regionName the region name\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void nonZeroBorderPaddingOnRegion(Object source, String elementName, String regionName,\n+            boolean canRecover, Locator loc) throws ValidationException;\n+\n+    /**\n+     * If overflow property is set to \"scroll\", a column-count other than \"1\" may not be specified.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void columnCountErrorOnRegionBodyOverflowScroll(Object source, String elementName,\n+            Locator loc) throws ValidationException;\n+\n+    /**\n+     * fo:root must be root.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void invalidFORoot(Object source, String elementName,\n+            Locator loc) throws ValidationException;\n+    \n+    /**\n+     * No FO document was found.\n+     * @param source the event source\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void emptyDocument(Object source) throws ValidationException;\n+ \n+    /**\n+     * An unknown/unsupported formatting object has been encountered.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param offendingNode the offending node\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void unknownFormattingObject(Object source, String elementName,\n+            QName offendingNode, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "sha": "aa7b1494173ab74c04f3f73519268a376b55e810",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FObj.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FObj.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 30,
                "filename": "src/java/org/apache/fop/fo/FObj.java",
                "patch": "@@ -27,13 +27,15 @@\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fo.flow.Marker;\n import org.apache.fop.fo.properties.PropertyMaker;\n-import org.apache.fop.util.QName;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Base class for representation of formatting objects and their processing.\n@@ -171,25 +173,7 @@ private void checkId(String id) throws ValidationException {\n             if (!idrefs.contains(id)) {\n                 idrefs.add(id);\n             } else {\n-                if (getUserAgent().validateStrictly()) {\n-                    throw new ValidationException(\"Property id \\\"\" + id \n-                            + \"\\\" previously used; id values must be unique\"\n-                            + \" in document.\", locator);\n-                } else {\n-                    if (log.isWarnEnabled()) {\n-                        StringBuffer msg = new StringBuffer();\n-                        msg.append(\"Found non-unique id on \").append(getName());\n-                        if (locator.getLineNumber() != -1) {\n-                            msg.append(\" (at \").append(locator.getLineNumber())\n-                                .append(\"/\").append(locator.getColumnNumber())\n-                                .append(\")\");\n-                        }\n-                        msg.append(\"\\nAny reference to it will be considered \"\n-                                + \"a reference to the first occurrence \"\n-                                + \"in the document.\");\n-                        log.warn(msg);\n-                    }\n-                }\n+                getFOValidationEventProducer().idNotUnique(this, getName(), id, true, locator);\n             }\n         }\n     }\n@@ -283,16 +267,22 @@ public boolean generatesReferenceAreas() {\n         return false;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public FONodeIterator getChildNodes() {\n-        if (firstChild != null) {\n+        if (hasChildren()) {\n             return new FObjIterator(this);\n         }\n         return null;\n     }\n \n+    /**\n+     * Indicates whether this formatting object has children.\n+     * @return true if there are children\n+     */\n+    public boolean hasChildren() {\n+        return this.firstChild != null;\n+    }\n+    \n     /**\n      * Return an iterator over the object's childNodes starting\n      * at the passed-in node (= first call to iterator.next() will\n@@ -348,8 +338,8 @@ protected void addMarker(Marker marker) {\n                 if (node instanceof FObj\n                         || (node instanceof FOText\n                                 && ((FOText) node).willCreateArea())) {\n-                    log.error(\n-                            \"fo:marker must be an initial child: \" + mcname);\n+                    getFOValidationEventProducer().markerNotInitialChild(this, getName(),\n+                            mcname, locator);\n                     return;\n                 } else if (node instanceof FOText) {\n                     iter.remove();\n@@ -363,8 +353,8 @@ protected void addMarker(Marker marker) {\n         if (!markers.containsKey(mcname)) {\n             markers.put(mcname, marker);\n         } else {\n-            log.error(\"fo:marker 'marker-class-name' \"\n-                    + \"must be unique for same parent: \" + mcname);\n+            getFOValidationEventProducer().markerNotUniqueForSameParent(this, getName(),\n+                    mcname, locator);\n         }\n     }\n \n@@ -382,6 +372,33 @@ public Map getMarkers() {\n         return markers;\n     }\n \n+    /** {@inheritDoc} */\n+    protected String getContextInfoAlt() {\n+        StringBuffer sb = new StringBuffer();\n+        if (getLocalName() != null) {\n+            sb.append(getName());\n+            sb.append(\", \");\n+        }\n+        if (hasId()) {\n+            sb.append(\"id=\").append(getId());\n+            return sb.toString();\n+        }\n+        String s = gatherContextInfo();\n+        if (s != null) {\n+            sb.append(\"\\\"\");\n+            if (s.length() < 32) {\n+                sb.append(s);\n+            } else {\n+                sb.append(s.substring(0, 32));\n+                sb.append(\"...\");\n+            }\n+            sb.append(\"\\\"\");\n+            return sb.toString();\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n     /** {@inheritDoc} */\n     protected String gatherContextInfo() {\n         if (getLocator() != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/FObj.java",
                "sha": "a03a351e0c56a9f06fdb396361f4c3bce753b1e6",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/PropertyList.java",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/PropertyList.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 37,
                "filename": "src/java/org/apache/fop/fo/PropertyList.java",
                "patch": "@@ -20,13 +20,13 @@\n package org.apache.fop.fo;\n \n // Java\n-import java.text.MessageFormat;\n-\n import org.xml.sax.Attributes;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FopFactory;\n import org.apache.fop.fo.expr.PropertyException;\n import org.apache.fop.fo.properties.CommonAbsolutePosition;\n@@ -41,7 +41,6 @@\n import org.apache.fop.fo.properties.CommonTextDecoration;\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.PropertyMaker;\n-import org.apache.fop.util.QName;\n \n /**\n  * Class containing the collection of properties for a given FObj.\n@@ -150,7 +149,7 @@ public Property getInherited(int propId) throws PropertyException {\n      * the default value.\n      * @param propId The Constants ID of the property whose value is desired.\n      * @return the Property corresponding to that name\n-     * @throws PropertyException ...\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property get(int propId) throws PropertyException {\n         return get(propId, true, true);\n@@ -166,7 +165,7 @@ public Property get(int propId) throws PropertyException {\n      *                      value is needed\n      * @param bTryDefault   true when the default value may be used as a last resort\n      * @return the property\n-     * @throws PropertyException ...\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property get(int propId, boolean bTryInherit,\n                          boolean bTryDefault) throws PropertyException {\n@@ -321,20 +320,18 @@ public void addAttributesToList(Attributes attributes)\n             } else if (!factory.isNamespaceIgnored(attributeNS)) {\n                 ElementMapping mapping = factory.getElementMappingRegistry().getElementMapping(\n                         attributeNS);\n+                QName attr = new QName(attributeNS, attributeName);\n                 if (mapping != null) {\n-                    QName attName = new QName(attributeNS, attributeName);\n-                    if (mapping.isAttributeProperty(attName) \n+                    if (mapping.isAttributeProperty(attr) \n                             && mapping.getStandardPrefix() != null) {\n                         convertAttributeToProperty(attributes, \n-                                mapping.getStandardPrefix() + \":\" + attName.getLocalName(), \n+                                mapping.getStandardPrefix() + \":\" + attr.getLocalName(), \n                                 attributeValue);\n                     } else {\n-                        getFObj().addForeignAttribute(attName, attributeValue);\n+                        getFObj().addForeignAttribute(attr, attributeValue);\n                     }\n                 } else {\n-                    handleInvalidProperty(\n-                            \"Error processing foreign attribute: \"\n-                            + attributeNS + \"/@\" + attributeName, attributeName);\n+                    handleInvalidProperty(attr);\n                 }\n             }\n         }\n@@ -345,11 +342,8 @@ public void addAttributesToList(Attributes attributes)\n      * @param propertyName  the property name to check\n      * @return true if the base property name and the subproperty name (if any)\n      *           can be correctly mapped to an id\n-     * @throws ValidationException in case the property name\n-     *          is invalid for the FO namespace\n      */\n-    protected boolean isValidPropertyName(String propertyName) \n-                throws ValidationException {\n+    protected boolean isValidPropertyName(String propertyName) {\n \n         int propId = FOPropertyMapping.getPropertyId(\n                         findBasePropertyName(propertyName));\n@@ -359,9 +353,6 @@ protected boolean isValidPropertyName(String propertyName)\n         if (propId == -1 \n                 || (subpropId == -1 \n                         && findSubPropertyName(propertyName) != null)) {\n-            String errorMessage = MessageFormat.format(\n-                    \"Invalid property name ''{0}''.\", new Object[] {propertyName});\n-            handleInvalidProperty(errorMessage, propertyName);\n             return false;\n         }\n         return true;\n@@ -382,19 +373,23 @@ private void convertAttributeToProperty(Attributes attributes,\n         \n         if (attributeValue != null) {\n \n-            if (!isValidPropertyName(attributeName)) {\n-                //will log an error or throw an exception\n+            if (attributeName.startsWith(\"xmlns:\")) {\n+                //Ignore namespace declarations\n                 return;\n             }\n-            FObj parentFO = fobj.findNearestAncestorFObj();\n             \n-    \n             /* Handle \"compound\" properties, ex. space-before.minimum */\n             String basePropertyName = findBasePropertyName(attributeName);\n             String subPropertyName = findSubPropertyName(attributeName);\n \n             int propId = FOPropertyMapping.getPropertyId(basePropertyName);\n             int subpropId = FOPropertyMapping.getSubPropertyId(subPropertyName);\n+            \n+            if (propId == -1 \n+                    || (subpropId == -1 && subPropertyName != null)) {\n+                handleInvalidProperty(new QName(null, attributeName));\n+            }\n+            FObj parentFO = fobj.findNearestAncestorFObj();\n     \n             PropertyMaker propertyMaker = findMaker(propId);\n             if (propertyMaker == null) {\n@@ -417,8 +412,8 @@ private void convertAttributeToProperty(Attributes attributes,\n                     }\n                     prop = propertyMaker.make(this, attributeValue, parentFO);\n                 } else { // e.g. \"leader-length.maximum\"\n-                    Property baseProperty = \n-                        findBaseProperty(attributes, parentFO, propId, \n+                    Property baseProperty\n+                        = findBaseProperty(attributes, parentFO, propId, \n                                 basePropertyName, propertyMaker);\n                     prop = propertyMaker.make(baseProperty, subpropId,\n                             this, attributeValue, parentFO);\n@@ -427,8 +422,8 @@ private void convertAttributeToProperty(Attributes attributes,\n                     putExplicit(propId, prop);\n                 }\n             } catch (PropertyException e) {\n-                log.error(\"Ignoring property: \" \n-                        + attributeName + \"=\\\"\" + attributeValue + \"\\\" (\" + e.getMessage() + \")\");\n+                fobj.getFOValidationEventProducer().invalidPropertyValue(this, fobj.getName(),\n+                        attributeName, attributeValue, e, fobj.locator);\n             }\n         }\n     }\n@@ -465,18 +460,16 @@ private Property findBaseProperty(Attributes attributes,\n     }\n \n     /**\n-     * @param message ...\n-     * @param propName ...\n-     * @throws ValidationException ...\n+     * Handles an invalid property.\n+     * @param attr the invalid attribute\n+     * @throws ValidationException if an exception needs to be thrown depending on the\n+     *                  validation settings\n      */\n-    protected void handleInvalidProperty(String message, String propName) \n+    protected void handleInvalidProperty(QName attr) \n                     throws ValidationException {\n-        if (!propName.startsWith(\"xmlns\")) {\n-            if (fobj.getUserAgent().validateStrictly()) {\n-                fobj.attributeError(message);\n-            } else {\n-                log.error(message + \" Property ignored.\");\n-            }\n+        if (!attr.getQName().startsWith(\"xmlns\")) {\n+            fobj.getFOValidationEventProducer().invalidProperty(this, fobj.getName(),\n+                    attr, true, fobj.locator);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/PropertyList.java",
                "sha": "b6766bfe9b335b196a40fe639b6b52d1e3d6c4b3",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/FromParentFunction.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "patch": "@@ -64,7 +64,13 @@ public Property eval(Property[] args,\n          * non-inherited properties too. Perhaps the result is different for\n          * a property line line-height which \"inherits specified\"???\n          */\n-        return pInfo.getPropertyList().getFromParent(FOPropertyMapping.getPropertyId(propName));\n+        int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n+        return pInfo.getPropertyList().getFromParent(propId);\n     }\n \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "sha": "b09d3c95ff9d98422344a0c964e449a70dd42e7f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "patch": "@@ -58,6 +58,11 @@ public Property eval(Property[] args,\n         }\n \n         int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n         return pInfo.getPropertyList().getInherited(propId);\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "sha": "e24c78caa0d64da8eb74508a0c45890f24a95f9a",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "patch": "@@ -60,6 +60,11 @@ public Property eval(Property[] args,\n         // NOTE: special cases for shorthand property\n         // Should return COMPUTED VALUE\n         int propId = FOPropertyMapping.getPropertyId(propName);\n+        if (propId < 0) {\n+            throw new PropertyException(\n+                    \"Unknown property name used with inherited-property-value function: \"\n+                        + propName);\n+        }\n         return pInfo.getPropertyList().getNearestSpecified(propId);\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "sha": "cdde960925078da71c6c9a5049c203fd521c3277",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "patch": "@@ -19,14 +19,15 @@\n \n package org.apache.fop.fo.extensions;\n \n+import java.util.HashMap;\n+import java.util.Set;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.fo.ElementMapping;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.UnknownXMLObj;\n import org.apache.fop.fo.extensions.destination.Destination;\n-import org.apache.fop.util.QName;\n-\n-import java.util.HashMap;\n-import java.util.Set;\n \n /**\n  * Element mapping for FOP's proprietary extension to XSL-FO.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "sha": "fc61167b2613c941d24f7e941b3385bb36d92e07",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/destination/Destination.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "patch": "@@ -19,15 +19,15 @@\n \n package org.apache.fop.fo.extensions.destination;\n \n-import org.apache.fop.fo.ValidationException;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.pagination.Root;\n+import org.apache.fop.fo.PropertyList;\n+import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n-\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n+import org.apache.fop.fo.pagination.Root;\n \n /**\n  * Class for named destinations in PDF.\n@@ -54,7 +54,7 @@ public void processNode(String elementName, Locator locator,\n             Attributes attlist, PropertyList pList) throws FOPException {\n         internalDestination = attlist.getValue(\"internal-destination\");\n         if (internalDestination == null || internalDestination.length() == 0) {\n-            attributeError(\"Missing attribute:  internal-destination must be specified.\");\n+            missingPropertyError(\"internal-destination\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "sha": "e3a2bbac47ae7c5c6f8eb6062e7836312fce0588",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "patch": "@@ -62,14 +62,16 @@ public void bind(PropertyList pList) throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n \n@@ -79,17 +81,8 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     protected void endOfNode() throws FOPException {\n         if (!this.blockItemFound) {\n             String contentModel = \"marker* (%block;)+\";\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(contentModel);\n-            } else {\n-                StringBuffer message = new StringBuffer(\n-                        errorText(getLocator()));\n-                message.append(getName())\n-                    .append(\" is missing child elements. \")\n-                    .append(\"Required Content Model: \")\n-                    .append(contentModel);\n-                log.warn(message.toString());\n-            }\n+            getFOValidationEventProducer().missingChildElement(this, getName(),\n+                    contentModel, true, getLocator());\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "sha": "f99f9d94745bb10efa5dcfddcb958bd06611dff1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "patch": "@@ -113,8 +113,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the Common Font Properties. */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "sha": "e9a1176d6dae3bfa35cee10f85d0696e21e6e57c",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BasicLink.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/flow/BasicLink.java",
                "patch": "@@ -76,8 +76,7 @@ public void bind(PropertyList pList) throws FOPException {\n             externalDestination = null;\n         } else if (externalDestination.length() == 0) {\n             // slightly stronger than spec \"should be specified\"\n-            attributeError(\"Missing attribute:  Either external-destination or \" +\n-                \"internal-destination must be specified.\");\n+            getFOValidationEventProducer().missingLinkDestination(this, getName(), locator);\n         }\n     }\n \n@@ -102,15 +101,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (#PCDATA|%inline;|%block;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "sha": "b3ef48012fda1cf1b59c9b180d6f2bb921f10e62",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BidiOverride.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 16,
                "filename": "src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "patch": "@@ -19,13 +19,14 @@\n \n package org.apache.fop.fo.flow;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObjMixed;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.properties.SpaceProperty;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:bidi-override object.\n@@ -96,22 +97,21 @@ public void bind(PropertyList pList) throws FOPException {\n      *  fo:inline-container.\"\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, getParent().getName(), nsURI, getName(),\n+                        \"rule.bidiOverrideContent\");\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n-            String ruleViolated = \"An fo:bidi-override\"\n-                + \" that is a descendant of an fo:leader or of the fo:inline child\"\n-                + \" of an fo:footnote may not have block-level children, unless it\" \n-                + \" has a nearer ancestor that is an fo:inline-container.\";\n-            invalidChildError(loc, nsURI, localName, ruleViolated);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "sha": "892f4a3c5b70cdef5b88d9adfb47d1bc0dd2354b",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BlockContainer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "patch": "@@ -114,15 +114,17 @@ protected void startOfNode() throws FOPException {\n      * @todo - implement above restriction if possible\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "sha": "f1180ac162dbaefeb4b13dc36b5c384c442619df",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Character.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Character.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/Character.java",
                "patch": "@@ -22,6 +22,8 @@\n import java.awt.Color;\n import java.util.NoSuchElementException;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.CharIterator;\n@@ -35,7 +37,6 @@\n import org.apache.fop.fo.properties.CommonTextDecoration;\n import org.apache.fop.fo.properties.Property;\n import org.apache.fop.fo.properties.SpaceProperty;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:character object. \n@@ -134,8 +135,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Character.java",
                "sha": "aad4209f9150c10b3617eeb2383df33cd82594ee",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ExternalGraphic.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n@@ -78,11 +79,17 @@ public void bind(PropertyList pList) throws FOPException {\n         try {\n             info = manager.getImageInfo(url, userAgent.getImageSessionContext());\n         } catch (ImageException e) {\n-            log.error(\"Image not available: \" + e.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, url, e, getLocator());\n         } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, url, fnfe, getLocator());\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while loading image: \" + ioe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, url, ioe, getLocator());\n         }\n         if (info != null) {\n             this.intrinsicWidth = info.getSize().getWidthMpt();\n@@ -93,7 +100,6 @@ public void bind(PropertyList pList) throws FOPException {\n                     = FixedLength.getInstance(-baseline);\n             }\n         }\n-        //TODO Report to caller so he can decide to throw an exception\n     }\n \n     /** {@inheritDoc} */\n@@ -107,8 +113,10 @@ protected void startOfNode() throws FOPException {\n      * <br>XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the \"src\" property */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "sha": "07f765e5287c3370653dc2e46efb7b0b3291f4a0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Float.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Float.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/Float.java",
                "patch": "@@ -46,7 +46,8 @@ public Float(FONode parent) {\n         super(parent);\n         \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:float is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -63,10 +64,12 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             if (!isBlockItem(nsURI, localName)) {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Float.java",
                "sha": "57d3b4ee18f121185e46c97d343042e7cb902b96",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Footnote.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Footnote.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/flow/Footnote.java",
                "patch": "@@ -82,12 +82,13 @@ protected void endOfNode() throws FOPException {\n      *      generates an absolutely positioned area.\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"inline\")) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"inline\")) {\n                 if (footnoteCitation != null) {\n                     tooManyNodesError(loc, \"fo:inline\");\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"footnote-body\")) {\n+            } else if (localName.equals(\"footnote-body\")) {\n                 if (footnoteCitation == null) {\n                     nodesOutOfOrderError(loc, \"fo:inline\", \"fo:footnote-body\");\n                 } else if (footnoteBody != null) {\n@@ -96,6 +97,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Footnote.java",
                "sha": "c15a7e0eeee9c2a4565274f7eba485b72157c9cc",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/FootnoteBody.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "patch": "@@ -73,10 +73,12 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             if (!isBlockItem(nsURI, localName)) {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "sha": "967d152155a0d67876d3bf8453870ab7d225c2f5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InitialPropertySet.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "patch": "@@ -72,8 +72,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "sha": "6d0e495b775fd322adc5e018b8bdfba919bbd38c",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Inline.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Inline.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/Inline.java",
                "patch": "@@ -81,8 +81,8 @@ protected void startOfNode() throws FOPException {\n        int lvlInCntr = findAncestor(FO_INLINE_CONTAINER);\n \n        if (lvlLeader > 0) {\n-           if (lvlInCntr < 0 ||\n-               (lvlInCntr > 0 && lvlInCntr > lvlLeader)) {\n+           if (lvlInCntr < 0\n+               || (lvlInCntr > 0 && lvlInCntr > lvlLeader)) {\n                canHaveBlockLevelChildren = false;\n            }\n        } else if (lvlFootnote > 0) {\n@@ -110,23 +110,20 @@ protected void endOfNode() throws FOPException {\n      *  nearer ancestor that is an fo:inline-container.\" (paraphrased)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, getParent().getName(), nsURI, getName(), \"rule.inlineContent\");\n+            } else {\n+                blockOrInlineItemFound = true;\n             }\n-        } else if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n-            String ruleViolated = \n-                \" An fo:inline that is a descendant of an fo:leader\" +\n-                \" or fo:footnote may not have block-level children,\" +\n-                \" unless it has a nearer ancestor that is an\" +\n-                \" fo:inline-container.\";\n-            invalidChildError(loc, nsURI, localName, ruleViolated);\n-        } else {\n-            blockOrInlineItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Inline.java",
                "sha": "50662d9f129be9377ecc67c9e6abdf158845341c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InlineContainer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "patch": "@@ -86,15 +86,17 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: marker* (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "sha": "3c142afe9d969c0e6c69328c4a47737b8fed3e5c",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 23,
                "filename": "src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "patch": "@@ -20,12 +20,17 @@\n package org.apache.fop.fo.flow;\n \n import java.awt.geom.Point2D;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.XMLObj;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:instream-foreign-object object.\n@@ -39,6 +44,7 @@\n \n     //Additional value\n     private Point2D intrinsicDimensions;\n+    private boolean instrisicSizeDetermined;\n     \n     private Length intrinsicAlignmentAdjust;\n     \n@@ -68,11 +74,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: one (1) non-XSL namespace child\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n         } else if (firstChild != null) {\n-            tooManyNodesError(loc, \"child element\");\n+            tooManyNodesError(loc, new QName(nsURI, null, localName));\n         }\n     }\n \n@@ -81,32 +87,28 @@ public String getLocalName() {\n         return \"instream-foreign-object\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_INSTREAM_FOREIGN_OBJECT;\n     }\n \n-    /**\n-     * Preloads the image so the intrinsic size is available.\n-     */\n+    /** Preloads the image so the intrinsic size is available. */\n     private void prepareIntrinsicSize() {\n-        if (intrinsicDimensions == null) {\n+        if (!this.instrisicSizeDetermined) {\n             XMLObj child = (XMLObj) firstChild;\n             Point2D csize = new Point2D.Float(-1, -1);\n             intrinsicDimensions = child.getDimension(csize);\n             if (intrinsicDimensions == null) {\n-                log.error(\"Intrinsic dimensions of \"\n-                        + \" instream-foreign-object could not be determined\");\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.ifoNoIntrinsicSize(this, getLocator());\n             }\n             intrinsicAlignmentAdjust = child.getIntrinsicAlignmentAdjust();\n+            this.instrisicSizeDetermined = true;\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getIntrinsicWidth() {\n         prepareIntrinsicSize();\n         if (intrinsicDimensions != null) {\n@@ -116,9 +118,7 @@ public int getIntrinsicWidth() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getIntrinsicHeight() {\n         prepareIntrinsicSize();\n         if (intrinsicDimensions != null) {\n@@ -128,11 +128,8 @@ public int getIntrinsicHeight() {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    public  Length getIntrinsicAlignmentAdjust()\n-    {\n+    /** {@inheritDoc} */\n+    public  Length getIntrinsicAlignmentAdjust() {\n         prepareIntrinsicSize();\n         return intrinsicAlignmentAdjust;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "sha": "802f59c30f0c879903494d7a15642b4917c49c8a",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListBlock.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/flow/ListBlock.java",
                "patch": "@@ -108,15 +108,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (list-item)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (hasListItem) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (hasListItem) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item\");\n+                }\n+            } else if (localName.equals(\"list-item\")) {\n+                hasListItem = true;\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item\")) {\n-            hasListItem = true;\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "sha": "a196e92de3c49efe553b490e63525b430c63b324",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ListItem.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListItem.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/flow/ListItem.java",
                "patch": "@@ -98,22 +98,24 @@ protected void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (label != null) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item-label\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (label != null) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:list-item-label\");\n+                }\n+            } else if (localName.equals(\"list-item-label\")) {\n+                if (label != null) {\n+                    tooManyNodesError(loc, \"fo:list-item-label\");\n+                }\n+            } else if (localName.equals(\"list-item-body\")) {\n+                if (label == null) {\n+                    nodesOutOfOrderError(loc, \"fo:list-item-label\", \"fo:list-item-body\");\n+                } else if (body != null) {\n+                    tooManyNodesError(loc, \"fo:list-item-body\");\n+                }\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item-label\")) {\n-            if (label != null) {\n-                tooManyNodesError(loc, \"fo:list-item-label\");\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"list-item-body\")) {\n-            if (label == null) {\n-                nodesOutOfOrderError(loc, \"fo:list-item-label\", \"fo:list-item-body\");\n-            } else if (body != null) {\n-                tooManyNodesError(loc, \"fo:list-item-body\");\n-            }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/ListItem.java",
                "sha": "cf0e05c565924e2cbadf8be43ace56aef177a35c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Marker.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Marker.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/fo/flow/Marker.java",
                "patch": "@@ -59,9 +59,8 @@ public Marker(FONode parent) {\n      */\n     public void bind(PropertyList pList) throws FOPException {\n         if (findAncestor(FO_FLOW) < 0) {\n-            invalidChildError(locator, FO_URI, \"marker\", \n-                \"An fo:marker is permitted only as the descendant \" \n-                    + \"of an fo:flow\");\n+            invalidChildError(locator, getParent().getName(), FO_URI, getName(), \n+                \"rule.markerDescendantOfFlow\");\n         }\n         \n         markerClassName = pList.get(PR_MARKER_CLASS_NAME).getString();\n@@ -112,9 +111,11 @@ protected void endOfNode() throws FOPException {\n      * @todo implement \"additional\" constraint, possibly within fo:retrieve-marker\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Marker.java",
                "sha": "168b181803b295e70dc863f058415b5c267ec57c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiCase.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/MultiCase.java",
                "patch": "@@ -46,7 +46,8 @@ public MultiCase(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-case is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "sha": "e568fba4661643dd5809248f98a34bdead9b8b2c",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiProperties.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "patch": "@@ -49,7 +49,8 @@ public MultiProperties(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-properties is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -69,13 +70,14 @@ protected void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"multi-property-set\")) {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"multi-property-set\")) {\n                 if (hasWrapper) {\n                     nodesOutOfOrderError(loc, \"fo:multi-property-set\", \"fo:wrapper\");\n                 } else {\n                     hasMultiPropertySet = true;\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"wrapper\")) {\n+            } else if (localName.equals(\"wrapper\")) {\n                 if (hasWrapper) {\n                     tooManyNodesError(loc, \"fo:wrapper\");\n                 } else {\n@@ -84,6 +86,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n     \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "sha": "bd3bd893ec92d4e265aafdf0c1edcaaba6123c8e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiPropertySet.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "patch": "@@ -45,7 +45,8 @@ public MultiPropertySet(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-property-set is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -63,8 +64,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "sha": "caa31f7b9aeded5647113e5d901908a7ffb34b0c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiSwitch.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "patch": "@@ -47,7 +47,8 @@ public MultiSwitch(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-switch is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -75,9 +76,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (multi-case+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && localName.equals(\"multi-case\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"multi-case\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "sha": "03f404aa37b1edbbb5af0f69a2e979b358fcea8d",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiToggle.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "patch": "@@ -47,7 +47,8 @@ public MultiToggle(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:multi-toggle is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    getName(), getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -65,9 +66,11 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: (#PCDATA|%inline;|%block;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockOrInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockOrInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "sha": "66442c2a72aadd7c21c473cf4afbcd0ea0bfe5ea",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/PageNumber.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/flow/PageNumber.java",
                "patch": "@@ -117,8 +117,10 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** @return the Common Font Properties. */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "sha": "cc51dd28aeabf7cc3f8f355e8f30e2d91aca08a8",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/RetrieveMarker.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "patch": "@@ -21,6 +21,8 @@\n \n import java.util.Iterator;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FOText;\n@@ -30,7 +32,6 @@\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableFObj;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:retrieve-marker object.\n@@ -48,21 +49,18 @@\n \n     /**\n      * Create a retrieve marker object.\n-     *\n+     * @param parent FONode that is the parent of this object\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RetrieveMarker(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         if (findAncestor(FO_STATIC_CONTENT) < 0) {\n-            invalidChildError(locator, FO_URI, \"retrieve-marker\", \n-                \"An fo:retrieve-marker is permitted only as the \" +\n-                \" descendant of an fo:static-content.\");\n+            invalidChildError(locator, getParent().getName(), FO_URI, getName(), \n+                \"rule.retrieveMarkerDescendatOfStaticContent\");\n         }\n \n         retrieveClassName = pList.get(PR_RETRIEVE_CLASS_NAME).getString();\n@@ -81,8 +79,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -206,13 +206,12 @@ public void bindMarker(Marker marker) {\n             try {\n                 cloneFromMarker(marker);\n             } catch (FOPException exc) {\n-                log.error(\"fo:retrieve-marker unable to clone \"\n-                        + \"subtree of fo:marker (marker-class-name=\"\n-                        + marker.getMarkerClassName() + \")\", exc);\n+                getFOValidationEventProducer().markerCloningFailed(this,\n+                        marker.getMarkerClassName(), exc, getLocator());\n                 return;\n             }\n-        } else if (log.isInfoEnabled()) {\n-            log.info(\"Empty marker retrieved...\");\n+        } else if (log.isDebugEnabled()) {\n+            log.debug(\"Empty marker retrieved...\");\n         }\n         return;\n     }\n@@ -222,9 +221,7 @@ public String getLocalName() {\n         return \"retrieve-marker\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_RETRIEVE_MARKER;\n     }    ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "sha": "ea6b6f1c52078a5c56f71eafc7c648379ea4f182",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Wrapper.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/flow/Wrapper.java",
                "patch": "@@ -19,12 +19,13 @@\n \n package org.apache.fop.fo.flow;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObjMixed;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:wrapper object.\n@@ -66,17 +67,19 @@ public Wrapper(FONode parent) {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && \"marker\".equals(localName)) {\n-            if (blockOrInlineItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \n-                    \"(#PCDATA|%inline;|%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (\"marker\".equals(localName)) {\n+                if (blockOrInlineItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \n+                        \"(#PCDATA|%inline;|%block;)\");\n+                }\n+            } else if (isBlockOrInlineItem(nsURI, localName)) {\n+                //delegate validation to parent\n+                FONode.validateChildNode(this.parent, loc, nsURI, localName);\n+                blockOrInlineItemFound = true;\n+            } else {\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else if (isBlockOrInlineItem(nsURI, localName)) {\n-            //delegate validation to parent\n-            FONode.validateChildNode(this.parent, loc, nsURI, localName);\n-            blockOrInlineItemFound = true;\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "sha": "87582fb476d7db8bd7c40b8838ce2fe101442823",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "patch": "@@ -120,13 +120,17 @@ void startTableRow(TableRow tableRow) {\n     void endTableRow() {\n         assert currentTableRow != null;\n         if (currentRowIndex > 0 && currentTableRow.getBreakBefore() != Constants.EN_AUTO) {\n-            currentTableRow.attributeWarning(\"break-before ignored because of row spanning \"\n-                    + \"in progress (See XSL 1.1, 7.20.2)\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    currentTableRow.getUserAgent().getEventBroadcaster());\n+            eventProducer.breakIgnoredDueToRowSpanning(this, currentTableRow.getName(), true,\n+                    currentTableRow.getLocator());\n         }\n         if (currentRowIndex < rows.size() - 1\n                 && currentTableRow.getBreakAfter() != Constants.EN_AUTO) {\n-            currentTableRow.attributeWarning(\"break-after ignored because of row spanning \"\n-                    + \"in progress (See XSL 1.1, 7.20.1)\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    currentTableRow.getUserAgent().getEventBroadcaster());\n+            eventProducer.breakIgnoredDueToRowSpanning(this, currentTableRow.getName(), false,\n+                    currentTableRow.getLocator());\n         }\n         for (Iterator iter = ((List) rows.get(currentRowIndex)).iterator(); iter.hasNext();) {\n             GridUnit gu = (GridUnit) iter.next();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "sha": "0d24491d9b731f64d90c8fadb538ecf73403317d",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/Table.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/Table.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 19,
                "filename": "src/java/org/apache/fop/fo/flow/table/Table.java",
                "patch": "@@ -22,6 +22,8 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.ValidationPercentBaseContext;\n@@ -35,7 +37,6 @@\n import org.apache.fop.fo.properties.LengthPairProperty;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n import org.apache.fop.fo.properties.TableColLength;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table object.\n@@ -126,20 +127,22 @@ public void bind(PropertyList pList) throws FOPException {\n         orphanContentLimit = pList.get(PR_X_ORPHAN_CONTENT_LIMIT).getLength();\n \n         if (!blockProgressionDimension.getOptimum(null).isAuto()) {\n-            attributeWarning(\"only a value of \\\"auto\\\" for block-progression-dimension has a\"\n-                    + \" well-specified behavior on fo:table. Falling back to \\\"auto\\\"\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.nonAutoBPDOnTable(this, getLocator());\n             // Anyway, the bpd of a table is not used by the layout code\n         }\n         if (tableLayout == EN_AUTO) {\n-            attributeWarning(\"table-layout=\\\"auto\\\" is currently not supported by FOP\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"table-layout=\\\"auto\\\"\", getLocator());\n         }\n         if (!isSeparateBorderModel()\n                 && getCommonBorderPaddingBackground().hasPadding(\n                         ValidationPercentBaseContext.getPseudoContext())) {\n             //See \"17.6.2 The collapsing border model\" in CSS2\n-            attributeWarning(\"In collapsing border model a table does not have padding\"\n-                    + \" (see http://www.w3.org/TR/REC-CSS2/tables.html#collapsing-borders)\"\n-                    + \", but a non-zero value for padding was found. The padding will be ignored.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.noTablePaddingWithCollapsingBorderModel(this, getLocator());\n         }\n \n         /* Store reference to the property list, so\n@@ -163,7 +166,7 @@ public void startOfNode() throws FOPException {\n      * XSL Content Model: (marker*,table-column*,table-header?,table-footer?,table-body+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName)\n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (\"marker\".equals(localName)) {\n                 if (tableColumnFound || tableHeaderFound || tableFooterFound\n@@ -193,15 +196,11 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n                 } else {\n                     tableFooterFound = true;\n                     if (tableBodyFound) {\n-                        if (getUserAgent().validateStrictly()) {\n-                            nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+)\");\n-                        } else if (!isSeparateBorderModel()) {\n-                            nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+).\"\n-                                    + \" This table uses the collapsing border\"\n-                                    + \" model. In order to resolve borders in an efficient way\"\n-                                    + \" the table-footer must be known before any table-body\"\n-                                    + \" is parsed. Either put the footer at the correct place\"\n-                                    + \" or switch to the separate border model\");\n+                        nodesOutOfOrderError(loc, \"fo:table-footer\", \"(table-body+)\", true);\n+                        if (!isSeparateBorderModel()) {\n+                            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                                    getUserAgent().getEventBroadcaster());\n+                            eventProducer.footerOrderCannotRecover(this, getName(), getLocator());\n                         }\n                     }\n                 }\n@@ -210,8 +209,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -225,6 +222,10 @@ public void endOfNode() throws FOPException {\n                    \"(marker*,table-column*,table-header?,table-footer?\"\n                        + \",table-body+)\");\n         }\n+        if (!hasChildren()) {\n+            getParent().removeChild(this);\n+            return;\n+        }\n         if (!inMarker()) {\n             rowGroupBuilder.endTable();\n             /* clean up */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/Table.java",
                "sha": "c1ef3857cdbc36955e84f83711073151ab85bb1c",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 22,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "patch": "@@ -62,7 +62,8 @@ public TableAndCaption(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:table-and-caption is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"fo:table-and-caption\", getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -83,30 +84,32 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* table-caption? table\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n \n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (tableCaptionFound) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table-caption\");\n-            } else if (tableFound) {\n-                nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table\");\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"table-caption\")) {\n-            if (tableCaptionFound) {\n-                tooManyNodesError(loc, \"fo:table-caption\");\n-            } else if (tableFound) {\n-                nodesOutOfOrderError(loc, \"fo:table-caption\", \"fo:table\");\n-            } else {\n-                tableCaptionFound = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"table\")) {\n-            if (tableFound) {\n-                tooManyNodesError(loc, \"fo:table\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (tableCaptionFound) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table-caption\");\n+                } else if (tableFound) {\n+                    nodesOutOfOrderError(loc, \"fo:marker\", \"fo:table\");\n+                }\n+            } else if (localName.equals(\"table-caption\")) {\n+                if (tableCaptionFound) {\n+                    tooManyNodesError(loc, \"fo:table-caption\");\n+                } else if (tableFound) {\n+                    nodesOutOfOrderError(loc, \"fo:table-caption\", \"fo:table\");\n+                } else {\n+                    tableCaptionFound = true;\n+                }\n+            } else if (localName.equals(\"table\")) {\n+                if (tableFound) {\n+                    tooManyNodesError(loc, \"fo:table\");\n+                } else {\n+                    tableFound = true;\n+                }\n             } else {\n-                tableFound = true;\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "sha": "6dabf37db3d93b6888781cd3bdbb177de53e8476",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableBody.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "patch": "@@ -23,13 +23,14 @@\n import java.util.LinkedList;\n import java.util.List;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table-body object.\n@@ -119,13 +120,8 @@ public void endOfNode() throws FOPException {\n         getFOEventHandler().endBody(this);\n \n         if (!(tableRowsFound || tableCellsFound)) {\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(\"marker* (table-row+|table-cell+)\");\n-            } else {\n-                log.error(\"fo:table-body must not be empty. \"\n-                        + \"Expected: marker* (table-row+|table-cell+)\");\n-                getParent().removeChild(this);\n-            }\n+            missingChildElementError(\"marker* (table-row+|table-cell+)\", true);\n+            getParent().removeChild(this);\n         } else {\n             finishLastRowGroup();\n         }\n@@ -167,23 +163,20 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else if (localName.equals(\"table-row\")) {\n                 tableRowsFound = true;\n                 if (tableCellsFound) {\n-                    invalidChildError(loc, nsURI, localName, \"Either fo:table-rows\"\n-                            + \" or fo:table-cells may be children of an \" + getName()\n-                            + \" but not both\");\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.noMixRowsAndCells(this, getName(), getLocator());\n                 }\n             } else if (localName.equals(\"table-cell\")) {\n                 tableCellsFound = true;\n                 if (tableRowsFound) {\n-                    invalidChildError(loc, nsURI, localName,\n-                            \"Either fo:table-rows or fo:table-cells \"\n-                            + \"may be children of an \"\n-                            + getName() + \" but not both\");\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.noMixRowsAndCells(this, getName(), getLocator());\n                 }\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "sha": "4e1673568534e635089407deca60d0221120c289",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCaption.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "patch": "@@ -57,7 +57,8 @@ public TableCaption(FONode parent) {\n         super(parent);\n \n         if (!notImplementedWarningGiven) {\n-            log.warn(\"fo:table-caption is not yet implemented.\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"fo:table-caption\", getLocator());\n             notImplementedWarningGiven = true;\n         }\n     }\n@@ -83,15 +84,17 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (%block;)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "sha": "416ef16ed0137f1350144341efc76525baa94753",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCell.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "patch": "@@ -102,17 +102,13 @@ public void startOfNode() throws FOPException {\n      */\n     public void endOfNode() throws FOPException {\n         if (!blockItemFound) {\n-            if (getUserAgent().validateStrictly()) {\n-                missingChildElementError(\"marker* (%block;)+\");\n-            } else if (firstChild != null) {\n-                log.warn(\"fo:table-cell content that is not \"\n-                        + \"enclosed by a fo:block will be dropped/ignored.\");\n-            }\n+            missingChildElementError(\"marker* (%block;)+\", true);\n         }\n         if ((startsRow() || endsRow())\n                 && getParent().getNameId() == FO_TABLE_ROW ) {\n-            log.warn(\"starts-row/ends-row for fo:table-cells \"\n-                    + \"non-applicable for children of an fo:table-row.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.startEndRowUnderTableRowWarning(this, getLocator());\n         }\n         getFOEventHandler().endCell(this);\n     }\n@@ -123,14 +119,16 @@ public void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName)\n         throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "sha": "78e35eb52af34046d8084d93f7206998bf7fc580",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * A common class for fo:table-body and fo:table-row which both can contain fo:table-cell.\n@@ -47,9 +46,9 @@ protected void addTableCellChild(TableCell cell, boolean firstRow) throws FOPExc\n         Table t = getTable();\n         if (t.hasExplicitColumns()) {\n             if (colNumber + colSpan - 1 > t.getNumberOfColumns()) {\n-                throw new ValidationException(FONode.errorText(locator) + \"column-number or \"\n-                        + \"number of cells in the row overflows the number of fo:table-column \"\n-                        + \"specified for the table.\");\n+                TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.tooManyCells(this, getLocator());\n             }\n         } else {\n             t.ensureColumnNumber(colNumber + colSpan - 1);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "sha": "de9f271b5b2444f921cb159f3f8a582f424940ad",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableColumn.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "patch": "@@ -82,12 +82,16 @@ public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n \n         if (numberColumnsRepeated <= 0) {\n-            throw new PropertyException(\"number-columns-repeated must be 1 or bigger, \"\n-                    + \"but got \" + numberColumnsRepeated);\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.valueMustBeBiggerGtEqOne(this,\n+                    \"number-columns-repeated\", numberColumnsRepeated, getLocator());\n         }\n         if (numberColumnsSpanned <= 0) {\n-            throw new PropertyException(\"number-columns-spanned must be 1 or bigger, \"\n-                    + \"but got \" + numberColumnsSpanned);\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.valueMustBeBiggerGtEqOne(this,\n+                    \"number-columns-spanned\", numberColumnsSpanned, getLocator());\n         }\n \n         /* check for unspecified width and replace with default of\n@@ -96,8 +100,9 @@ public void bind(PropertyList pList) throws FOPException {\n          */\n         if (columnWidth.getEnum() == EN_AUTO) {\n             if (!this.implicitColumn && !getTable().isAutoLayout()) {\n-                log.warn(\"table-layout=\\\"fixed\\\" and column-width unspecified \"\n-                        + \"=> falling back to proportional-column-width(1)\");\n+                TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.warnImplicitColumns(this, getLocator());\n             }\n             columnWidth = new TableColLength(1.0, this);\n         }\n@@ -146,7 +151,9 @@ public void endOfNode() throws FOPException {\n     protected void validateChildNode(Locator loc,\n                         String nsURI, String localName)\n         throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -240,7 +247,7 @@ public String toString() {\n      * \n      * @param propId    the id for the property to retrieve\n      * @return the requested Property\n-     * @throws PropertyException\n+     * @throws PropertyException if there is a problem evaluating the property \n      */\n     public Property getProperty(int propId) throws PropertyException {\n         return this.pList.get(propId);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "sha": "e6f6b420ef1ccbd3238a87427e6b4697ad03d0bb",
                "status": "modified"
            },
            {
                "additions": 159,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "changes": 159,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "patch": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.fo.flow.table;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.fo.ValidationException;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Event producer interface for table-specific XSL-FO validation messages.\n+ */\n+public interface TableEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static TableEventProducer get(EventBroadcaster broadcaster) {\n+            return (TableEventProducer)broadcaster.getEventProducerFor(\n+                    TableEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * A value other than \"auto\" has been specified on fo:table.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void nonAutoBPDOnTable(Object source, Locator loc);\n+\n+    /**\n+     * Padding on fo:table is ignored if the collapsing border model is active.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void noTablePaddingWithCollapsingBorderModel(Object source, Locator loc);\n+\n+    /**\n+     * No mixing of table-rows and table-cells is allowed for direct children of table-body.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noMixRowsAndCells(Object source, String elementName, Locator loc)\n+            throws ValidationException;\n+\n+    /**\n+     * The table-footer was found after the table-body. FOP cannot recover with collapsed border\n+     * model.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void footerOrderCannotRecover(Object source, String elementName, Locator loc)\n+            throws ValidationException;\n+    \n+    /**\n+     * starts-row/ends-row for fo:table-cells non-applicable for children of an fo:table-row\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void startEndRowUnderTableRowWarning(Object source, Locator loc);\n+\n+    /**\n+     * Column-number or number of cells in the row overflows the number of fo:table-column \n+     * specified for the table.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @throws ValidationException the validation error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void tooManyCells(Object source, Locator loc) throws ValidationException;\n+\n+    /**\n+     * Property value must be 1 or bigger.\n+     * @param source the event source\n+     * @param propName the property name\n+     * @param actualValue the actual value\n+     * @param loc the location of the error or null\n+     * @throws PropertyException the property error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void valueMustBeBiggerGtEqOne(Object source, String propName,\n+            int actualValue, Locator loc) throws PropertyException;\n+\n+    /**\n+     * table-layout=\\\"fixed\\\" and column-width unspecified\n+     * => falling back to proportional-column-width(1)\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void warnImplicitColumns(Object source, Locator loc);\n+\n+    /**\n+     * padding-* properties are not applicable.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void paddingNotApplicable(Object source, String elementName, Locator loc);\n+\n+    /**\n+     * Cell overlap.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param column the column index of the overlapping cell\n+     * @param loc the location of the error or null\n+     * @throws PropertyException the property error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void cellOverlap(Object source, String elementName, int column,\n+            Locator loc) throws PropertyException;\n+\n+    /**\n+     * Break ignored due to row spanning.\n+     * @param source the event source\n+     * @param elementName the name of the context node\n+     * @param breakBefore true for \"break-before\", false for \"break-after\"\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void breakIgnoredDueToRowSpanning(Object source, String elementName, boolean breakBefore,\n+            Locator loc);\n+\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "sha": "44ddcc038965d0396e61bcb7af23f83821a68465",
                "status": "added"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableFObj.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "patch": "@@ -58,9 +58,7 @@ public TableFObj(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         borderAfterPrecedence = pList.get(PR_BORDER_AFTER_PRECEDENCE).getNumeric();\n@@ -71,9 +69,9 @@ public void bind(PropertyList pList) throws FOPException {\n                 && getNameId() != FO_TABLE_CELL\n                 && getCommonBorderPaddingBackground().hasPadding(\n                         ValidationPercentBaseContext.getPseudoContext())) {\n-            attributeWarning(\n-                    \"padding-* properties are not applicable to \" + getName()\n-                    + \", but a non-zero value for padding was found.\");\n+            TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.paddingNotApplicable(this, getName(), getLocator());\n         }\n     }\n \n@@ -156,17 +154,19 @@ public Property make(PropertyList propertyList, String value, FObj fo)\n             ColumnNumberManager columnIndexManager =  parent.getColumnNumberManager();\n             int columnIndex = p.getNumeric().getValue();\n             if (columnIndex <= 0) {\n+                /* No warning necessary as the spec clearly defines how to handle these cases.\n                 log.warn(\"Specified negative or zero value for \"\n                         + \"column-number on \" + fo.getName() + \": \"\n                         + columnIndex + \" forced to \"\n-                        + columnIndexManager.getCurrentColumnNumber());\n+                        + columnIndexManager.getCurrentColumnNumber());*/\n                 return NumberProperty.getInstance(columnIndexManager.getCurrentColumnNumber());\n             } else {\n                 double tmpIndex = p.getNumeric().getNumericValue();\n                 if (tmpIndex - columnIndex > 0.0) {\n                     columnIndex = (int) Math.round(tmpIndex);\n+                    /* No warning necessary as the spec clearly defines how to handle these cases.\n                     log.warn(\"Rounding specified column-number of \"\n-                            + tmpIndex + \" to \" + columnIndex);\n+                            + tmpIndex + \" to \" + columnIndex);*/\n                     p = NumberProperty.getInstance(columnIndex);\n                 }\n             }\n@@ -179,16 +179,9 @@ public Property make(PropertyList propertyList, String value, FObj fo)\n                     /* if column-number is already in use by another\n                      * cell/column => error!\n                      */\n-                    StringBuffer errorMessage = new StringBuffer();\n-                    errorMessage.append(fo.getName() + \" overlaps in column \")\n-                           .append(columnIndex + i);\n-                    org.xml.sax.Locator loc = fo.getLocator();\n-                    if (loc != null && loc.getLineNumber() != -1) {\n-                        errorMessage.append(\" (line #\")\n-                            .append(loc.getLineNumber()).append(\", column #\")\n-                            .append(loc.getColumnNumber()).append(\")\");\n-                    }\n-                    throw new PropertyException(errorMessage.toString());\n+                    TableEventProducer eventProducer = TableEventProducer.Provider.get(\n+                            fo.getUserAgent().getEventBroadcaster());\n+                    eventProducer.cellOverlap(this, fo.getName(), columnIndex + 1, fo.getLocator());\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "sha": "24528f622208398243845aa8b50c9f445cd2a057",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableRow.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "patch": "@@ -19,6 +19,9 @@\n \n package org.apache.fop.fo.flow.table;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.FONode;\n@@ -27,8 +30,6 @@\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.KeepProperty;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Class modelling the fo:table-row object.\n@@ -122,9 +123,11 @@ public void endOfNode() throws FOPException {\n      */\n     protected void validateChildNode(Locator loc, String nsURI,\n                                      String localName)\n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && localName.equals(\"table-cell\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"table-cell\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "sha": "e5261614b2c8da3d6aa9ab6f1bdb29d1b00ae621",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "patch": "@@ -32,7 +32,9 @@\n public abstract class AbstractPageSequence extends FObj {\n     \n     // The value of properties relevant for fo:page-sequence.\n+    /** the initial-page-number value */\n     protected Numeric initialPageNumber;\n+    /** the force-page-count value */\n     protected int forcePageCount;\n     private String format;\n     private int letterValue;\n@@ -43,6 +45,7 @@\n \n     private PageNumberGenerator pageNumberGenerator;\n \n+    /** the first page number generated by the page sequence */\n     protected int startingPageNumber = 0;\n \n     /**\n@@ -54,9 +57,7 @@ public AbstractPageSequence(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FObj#bind(PropertyList)\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         initialPageNumber = pList.get(PR_INITIAL_PAGE_NUMBER).getNumeric();\n@@ -68,16 +69,14 @@ public void bind(PropertyList pList) throws FOPException {\n         referenceOrientation = pList.get(PR_REFERENCE_ORIENTATION).getNumeric();\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FONode#startOfNode()\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         this.pageNumberGenerator = new PageNumberGenerator(\n                 format, groupingSeparator, groupingSize, letterValue);\n \n     }\n \n-    /** @see org.apache.fop.fo.FONode#endOfNode() */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "sha": "578d74c4ddbaa8a761a9362cb58fff0edec55f46",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ColorProfile.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "patch": "@@ -19,14 +19,14 @@\n \n package org.apache.fop.fo.pagination;\n \n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n-import org.xml.sax.Locator;\n-\n /**\n  * The fo:color-profile formatting object.\n  * This loads the color profile when needed and resolves a requested color.\n@@ -39,15 +39,15 @@\n     // End of property values\n \n     /**\n+     * Creates a new color-profile element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public ColorProfile(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         src = pList.get(PR_SRC).getString();\n         colorProfileName = pList.get(PR_COLOR_PROFILE_NAME).getString();\n@@ -59,12 +59,15 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL 1.0/FOP: EMPTY (no child nodes permitted)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n      * Return the \"color-profile-name\" property.\n+     * @return the color-profile-name property\n      */\n     public String getColorProfileName() {\n         return colorProfileName;\n@@ -75,9 +78,7 @@ public String getLocalName() {\n         return \"color-profile\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_COLOR_PROFILE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "sha": "6067b55c53b2d345657916bb9f5de82b4a8c71bb",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "patch": "@@ -45,15 +45,15 @@\n     // End of property values\n     \n     /**\n+     * Creates a new conditional-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public ConditionalPageMasterReference(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n         pagePosition = pList.get(PR_PAGE_POSITION).getEnum();\n@@ -65,9 +65,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         getConcreteParent().addConditionalPageMasterReference(this);\n     }\n@@ -81,8 +79,10 @@ private RepeatablePageMasterAlternatives getConcreteParent() {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-           throws ValidationException {\n-       invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "sha": "a13808324ebaaed421ed66611e1dee88c3a81aa6",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Declarations.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/fo/pagination/Declarations.java",
                "patch": "@@ -42,16 +42,15 @@\n     private Map colorProfiles = null;\n \n     /**\n+     * Creates a new declarations element.\n      * @param parent FONode that is the parent of this object\n      */\n     public Declarations(FONode parent) {\n         super(parent);\n         ((Root) parent).setDeclarations(this);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         // No properties defined for fo:declarations\n     }\n@@ -73,6 +72,7 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     /**\n      * At the end of this element sort out the children into\n      * a hashmap of color profiles and a list of extension attachments.\n+     * @throws FOPException if there's a problem during processing\n      */\n     protected void endOfNode() throws FOPException {\n         if (firstChild != null) {\n@@ -83,7 +83,8 @@ protected void endOfNode() throws FOPException {\n                     if (!\"\".equals(cp.getColorProfileName())) {\n                         addColorProfile(cp);\n                     } else {\n-                        log.warn(\"color-profile-name required for color profile\");\n+                        getFOValidationEventProducer().missingProperty(this,\n+                                cp.getName(), \"color-profile-name\", locator);\n                     }\n                 } else {\n                     log.debug(\"Ignoring element \" + node.getName() \n@@ -100,22 +101,18 @@ private void addColorProfile(ColorProfile cp) {\n         }\n         if (colorProfiles.get(cp.getColorProfileName()) != null) {\n             // duplicate names\n-            log.warn(\"Duplicate fo:color-profile profile name: \"\n-                    + cp.getColorProfileName());\n+            getFOValidationEventProducer().colorProfileNameNotUnique(this,\n+                    cp.getName(), cp.getColorProfileName(), locator);\n         }\n         colorProfiles.put(cp.getColorProfileName(), cp);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"declarations\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_DECLARATIONS;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "sha": "3eec2897a7a8533c13d8ce857f00db654bc461ff",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Flow.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Flow.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 24,
                "filename": "src/java/org/apache/fop/fo/pagination/Flow.java",
                "patch": "@@ -45,16 +45,12 @@ public Flow(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         flowName = pList.get(PR_FLOW_NAME).getString();\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         if (flowName == null || flowName.equals(\"\")) {\n             missingPropertyError(\"flow-name\");\n@@ -80,10 +76,7 @@ protected void startOfNode() throws FOPException {\n         getFOEventHandler().startFlow(this);\n     }\n \n-    /**\n-     * Make sure content model satisfied, if so then tell the\n-     * FOEventHandler that we are at the end of the flow.\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (!blockItemFound) {\n             missingChildElementError(\"marker* (%block;)+\");\n@@ -96,21 +89,21 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: marker* (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"marker\")) {\n-            if (blockItemFound) {\n-               nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"marker\")) {\n+                if (blockItemFound) {\n+                   nodesOutOfOrderError(loc, \"fo:marker\", \"(%block;)\");\n+                }\n+            } else if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            } else {\n+                blockItemFound = true;\n             }\n-        } else if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n-        } else {\n-            blockItemFound = true;\n         }\n     }\n \n-    /**\n-     * @return true (Flow can generate reference areas)\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }\n@@ -125,9 +118,7 @@ public String getLocalName() {\n         return \"flow\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_FLOW;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Flow.java",
                "sha": "2ee77ff0a439e57e222a8d425d49b20129c2256d",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 40,
                "filename": "src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "patch": "@@ -46,31 +46,27 @@\n     private Map pageSequenceMasters;\n \n     /**\n+     * Creates a new layout-master-set element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public LayoutMasterSet(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         // No properties in layout-master-set.\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         getRoot().setLayoutMasterSet(this);\n         simplePageMasters = new java.util.HashMap();\n         pageSequenceMasters = new java.util.HashMap();\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (firstChild == null) {\n             missingChildElementError(\"(simple-page-master|page-sequence-master)+\");\n@@ -83,14 +79,12 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (simple-page-master|page-sequence-master)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+            throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (!localName.equals(\"simple-page-master\") \n                 && !localName.equals(\"page-sequence-master\")) {   \n                     invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -104,23 +98,20 @@ private void checkRegionNames() throws ValidationException {\n         Map allRegions = new java.util.HashMap();\n         for (Iterator spm = simplePageMasters.values().iterator();\n                 spm.hasNext();) {\n-            SimplePageMaster simplePageMaster =\n-                (SimplePageMaster)spm.next();\n+            SimplePageMaster simplePageMaster\n+                = (SimplePageMaster)spm.next();\n             Map spmRegions = simplePageMaster.getRegions();\n             for (Iterator e = spmRegions.values().iterator();\n                     e.hasNext();) {\n                 Region region = (Region) e.next();\n                 if (allRegions.containsKey(region.getRegionName())) {\n-                    String defaultRegionName =\n-                        (String) allRegions.get(region.getRegionName());\n+                    String defaultRegionName\n+                        = (String) allRegions.get(region.getRegionName());\n                     if (!defaultRegionName.equals(region.getDefaultRegionName())) {\n-                        throw new ValidationException(\"Region-name (\"\n-                                               + region.getRegionName()\n-                                               + \") is being mapped to multiple \"\n-                                               + \"region-classes (\"\n-                                               + defaultRegionName + \" and \"\n-                                               + region.getDefaultRegionName()\n-                                               + \")\", locator);\n+                        getFOValidationEventProducer().regionNameMappedToMultipleRegionClasses(this,\n+                                region.getRegionName(),\n+                                defaultRegionName,\n+                                region.getDefaultRegionName(), getLocator());\n                     }\n                 }\n                 allRegions.put(region.getRegionName(),\n@@ -141,21 +132,16 @@ protected void addSimplePageMaster(SimplePageMaster sPM)\n         // check for duplication of master-name\n         String masterName = sPM.getMasterName();\n         if (existsName(masterName)) {\n-            throw new ValidationException(\"'master-name' (\"\n-               + masterName\n-               + \") must be unique \"\n-               + \"across page-masters and page-sequence-masters\", sPM.getLocator());\n+            getFOValidationEventProducer().masterNameNotUnique(this,\n+                    getName(),\n+                    masterName, sPM.getLocator());\n         }\n         this.simplePageMasters.put(masterName, sPM);\n     }\n \n     private boolean existsName(String masterName) {\n-        if (simplePageMasters.containsKey(masterName)\n-                || pageSequenceMasters.containsKey(masterName)) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return (simplePageMasters.containsKey(masterName)\n+                || pageSequenceMasters.containsKey(masterName));\n     }\n \n     /**\n@@ -181,10 +167,9 @@ protected void addPageSequenceMaster(String masterName,\n                 throws ValidationException {\n         // check against duplication of master-name\n         if (existsName(masterName)) {\n-            throw new ValidationException(\"'master-name' (\"\n-               + masterName\n-               + \") must be unique \"\n-               + \"across page-masters and page-sequence-masters\", pSM.getLocator());\n+            getFOValidationEventProducer().masterNameNotUnique(this,\n+                    getName(),\n+                    masterName, pSM.getLocator());\n         }\n         this.pageSequenceMasters.put(masterName, pSM);\n     }\n@@ -220,9 +205,7 @@ public String getLocalName() {\n         return \"layout-master-set\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_LAYOUT_MASTER_SET;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "sha": "1b57be57d27f0bb64a283bc4cf016854f3b0d977",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "patch": "@@ -43,7 +43,7 @@\n     private int minPadding = 0;    // for decimal formats\n \n     // preloaded strings of zeros\n-    private String zeros[] = {\n+    private String[] zeros = {\n         \"\", \"0\", \"00\", \"000\", \"0000\", \"00000\"\n     };\n \n@@ -128,10 +128,10 @@ public String makeFormattedPageNumber(int number) {\n     }\n \n     private String makeRoman(int num) {\n-        int arabic[] = {\n+        int[] arabic = {\n             1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1\n         };\n-        String roman[] = {\n+        String[] roman = {\n             \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\",\n             \"i\"\n         };",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "sha": "50620f6781630338e162b5f58a10d32a6c4a3635",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequence.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 19,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "patch": "@@ -78,9 +78,7 @@ public PageSequence(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         country = pList.get(PR_COUNTRY).getString();\n@@ -93,9 +91,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         flowMap = new java.util.HashMap();\n@@ -105,9 +101,8 @@ protected void startOfNode() throws FOPException {\n             this.pageSequenceMaster\n                     = getRoot().getLayoutMasterSet().getPageSequenceMaster(masterReference);\n             if (this.pageSequenceMaster == null) {\n-                throw new ValidationException(\"master-reference '\" + masterReference\n-                   + \"' for fo:page-sequence matches no\"\n-                   + \" simple-page-master or page-sequence-master\", locator);\n+                getFOValidationEventProducer().masterNotFound(this, getName(),\n+                        masterReference, getLocator());\n             }\n         }\n \n@@ -128,7 +123,7 @@ protected void endOfNode() throws FOPException {\n         XSL Content Model: (title?,static-content*,flow)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (localName.equals(\"title\")) {\n                 if (titleFO != null) {\n@@ -149,8 +144,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n@@ -184,18 +177,15 @@ private void addFlow(Flow flow) throws ValidationException {\n         String flowName = flow.getFlowName();\n \n         if (hasFlowName(flowName)) {\n-            throw new ValidationException(\"duplicate flow-name \\\"\"\n-                + flowName\n-                + \"\\\" found within fo:page-sequence\", flow.getLocator());\n+            getFOValidationEventProducer().duplicateFlowNameInPageSequence(this, flow.getName(),\n+                    flowName, flow.getLocator());\n         }\n \n         if (!getRoot().getLayoutMasterSet().regionNameExists(flowName) \n             && !flowName.equals(\"xsl-before-float-separator\") \n             && !flowName.equals(\"xsl-footnote-separator\")) {\n-                throw new ValidationException(\"flow-name \\\"\"\n-                    + flowName\n-                    + \"\\\" could not be mapped to a region-name in the\"\n-                    + \" layout-master-set\", flow.getLocator());\n+            getFOValidationEventProducer().flowNameNotMapped(this, flow.getName(),\n+                    flowName, flow.getLocator());\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "sha": "3d155a1da4d6c7a5f6e26ea9f652e8e6a903592d",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 20,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n \n /**\n  * The page-sequence-master formatting object.\n@@ -53,6 +54,8 @@\n     // but the actual FO's are MasterReferences.\n \n     /**\n+     * Creates a new page-sequence-master element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public PageSequenceMaster(FONode parent) {\n@@ -95,20 +98,18 @@ protected void endOfNode() throws FOPException {\n      *     repeatable-page-master-alternatives)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n             if (!localName.equals(\"single-page-master-reference\") \n                 && !localName.equals(\"repeatable-page-master-reference\")\n                 && !localName.equals(\"repeatable-page-master-alternatives\")) {   \n                     invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n     /**\n-     * Adds a new suqsequence specifier to the page sequence master.\n+     * Adds a new subsequence specifier to the page sequence master.\n      * @param pageMasterReference the subsequence to add\n      */\n     protected void addSubsequenceSpecifier(SubSequenceSpecifier pageMasterReference) {\n@@ -199,8 +200,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         if (currentSubSequence == null) {\n             currentSubSequence = getNextSubSequence();\n             if (currentSubSequence == null) {\n-                throw new FOPException(\"no subsequences in page-sequence-master '\"\n-                                       + masterName + \"'\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.missingSubsequencesInPageSequenceMaster(this,\n+                        masterName, getLocator());\n             }\n         }\n         String pageMasterName = currentSubSequence\n@@ -209,14 +212,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         while (pageMasterName == null) {\n             SubSequenceSpecifier nextSubSequence = getNextSubSequence();\n             if (nextSubSequence == null) {\n-                if (!canRecover) {\n-                    throw new FOPException(\"subsequences exhausted in page-sequence-master '\"\n-                                           + masterName\n-                                           + \"', cannot recover\");\n-                }\n-                log.warn(\"subsequences exhausted in page-sequence-master '\"\n-                                 + masterName\n-                                 + \"', using previous subsequence\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.pageSequenceMasterExhausted(this,\n+                        masterName, canRecover, getLocator());\n                 currentSubSequence.reset();\n                 canRecover = false;\n             } else {\n@@ -228,9 +227,10 @@ public SimplePageMaster getNextSimplePageMaster(boolean isOddPage,\n         SimplePageMaster pageMaster = this.layoutMasterSet\n             .getSimplePageMaster(pageMasterName);\n         if (pageMaster == null) {\n-            throw new FOPException(\"No simple-page-master matching '\"\n-                                   + pageMasterName + \"' in page-sequence-master '\"\n-                                   + masterName + \"'\");\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.noMatchingPageMaster(this,\n+                    masterName, pageMasterName, getLocator());\n         }\n         return pageMaster;\n     }\n@@ -240,9 +240,7 @@ public String getLocalName() {\n         return \"page-sequence-master\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_PAGE_SEQUENCE_MASTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "sha": "4258a11398509a56b979de4fb2d04105eaa66241",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "patch": "@@ -22,8 +22,8 @@\n import org.xml.sax.Locator;\n \n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -39,15 +39,14 @@\n     // End of property values\n     \n     /**\n+     * Creates a new page-sequence-wrapper element.\n      * @param parent FONode that is the parent of this object\n      */\n     public PageSequenceWrapper(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         indexClass = pList.get(PR_INDEX_CLASS).getString();\n@@ -59,10 +58,12 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL/FOP: (bookmark+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) && (localName.equals(\"page-sequence\") || \n-            localName.equals(\"page-sequence-wrapper\")))) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!(localName.equals(\"page-sequence\")\n+                    || localName.equals(\"page-sequence-wrapper\"))) {\n                 invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n@@ -81,9 +82,7 @@ public String getLocalName() {\n         return \"page-sequence-wrapper\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_PAGE_SEQUENCE_WRAPPER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "sha": "0b3cff276054e78ee3ef48829a1859f094c9e051",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Region.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Region.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 16,
                "filename": "src/java/org/apache/fop/fo/pagination/Region.java",
                "patch": "@@ -30,7 +30,6 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n-import org.apache.fop.fo.expr.PropertyException;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n \n /**\n@@ -50,16 +49,16 @@\n     private SimplePageMaster layoutMaster;\n \n     /**\n+     * Creates a new Region.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected Region(FONode parent) {\n         super(parent);\n         layoutMaster = (SimplePageMaster) parent;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         commonBorderPaddingBackground = pList.getBorderPaddingBackgroundProps();\n         // clip = pList.get(PR_CLIP);\n@@ -76,18 +75,16 @@ public void bind(PropertyList pList) throws FOPException {\n             // check that name is OK. Not very pretty.\n             if (isReserved(getRegionName())\n                     && !getRegionName().equals(getDefaultRegionName())) {\n-                throw new ValidationException(\"region-name '\" + regionName\n-                        + \"' for \" + this.getName()\n-                        + \" is not permitted.\", locator);\n+                getFOValidationEventProducer().illegalRegionName(this, getName(),\n+                        regionName, getLocator());\n             }\n         }\n         \n         //TODO do we need context for getBPPaddingAndBorder() and getIPPaddingAndBorder()?\n-        if (getUserAgent().validateStrictly()\n-                && (getCommonBorderPaddingBackground().getBPPaddingAndBorder(false, null) != 0 \n+        if ((getCommonBorderPaddingBackground().getBPPaddingAndBorder(false, null) != 0 \n                 || getCommonBorderPaddingBackground().getIPPaddingAndBorder(false, null) != 0)) {\n-            throw new PropertyException(\"Border and padding for region \\\"\"\n-                    + regionName + \"\\\" must be '0' (See 6.4.13 in XSL 1.0).\");\n+            getFOValidationEventProducer().nonZeroBorderPaddingOnRegion(this, getName(),\n+                    regionName, true, getLocator());\n         }\n     }\n \n@@ -96,8 +93,10 @@ public void bind(PropertyList pList) throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -121,7 +120,7 @@ public abstract Rectangle getViewportRectangle(FODimension pageRefRect\n      * @param name a region name to check\n      * @return true if the name parameter is a reserved region name\n      */\n-    protected boolean isReserved(String name) /*throws FOPException*/ {\n+    protected boolean isReserved(String name) {\n         return (name.equals(\"xsl-region-before\")\n                 || name.equals(\"xsl-region-start\")\n                 || name.equals(\"xsl-region-end\")\n@@ -130,9 +129,7 @@ protected boolean isReserved(String name) /*throws FOPException*/ {\n                 || name.equals(\"xsl-footnote-separator\"));\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Region.java",
                "sha": "ded86514bb213967bd43ba97249fd5edb8dcaa6c",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionAfter.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "patch": "@@ -34,15 +34,15 @@\n public class RegionAfter extends RegionBA {\n \n     /**\n+     * Creates a new region-after element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionAfter(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -82,9 +82,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-after\";\n     }\n@@ -94,9 +92,7 @@ public String getLocalName() {\n         return \"region-after\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_AFTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "sha": "2852358b5e86bbec749f8efd49cf5e2b245e400c",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBA.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "patch": "@@ -36,15 +36,15 @@\n     // End of property values\n     \n     /**\n+     * Creates a new region (before or after).\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected RegionBA(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         precedence = pList.get(PR_PRECEDENCE).getEnum();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "sha": "279164a9688e369d7b10bea31a3d4ab727f94445",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBefore.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "patch": "@@ -32,23 +32,22 @@\n  * The fo:region-before element.\n  */\n public class RegionBefore extends RegionBA {\n+\n     /**\n+     * Creates a new region-before element.\n+     * @param parent the parent element\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionBefore(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-before\";\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -91,9 +90,7 @@ public String getLocalName() {\n         return \"region-before\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_BEFORE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "sha": "076737252707ebea9459231498a75e1180be704a",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBody.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "patch": "@@ -43,29 +43,29 @@\n     // End of property values\n \n     /**\n+     * Creates a new region-body element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionBody(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n         commonMarginBlock = pList.getMarginBlockProps();\n         columnCount = pList.get(PR_COLUMN_COUNT).getNumeric();\n         columnGap = pList.get(PR_COLUMN_GAP).getLength();\n         \n-        if ((getColumnCount() > 1) && (getOverflow() == EN_SCROLL)) {\n+        if ((getColumnCount() != 1) && (getOverflow() == EN_SCROLL)) {\n             /* This is an error (See XSL Rec, fo:region-body description).\n              * The Rec allows for acting as if \"1\" is chosen in\n              * these cases, but we will need to be able to change Numeric\n              * values in order to do this.\n              */\n-            attributeError(\"If overflow property is set to \\\"scroll\\\",\" \n-                    + \" a column-count other than \\\"1\\\" may not be specified.\");\n+            getFOValidationEventProducer().columnCountErrorOnRegionBodyOverflowScroll(this,\n+                    getName(), getLocator());\n         }\n     }\n \n@@ -93,9 +93,7 @@ public int getColumnGap() {\n         return columnGap.getValue();\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving margins in the page context.\n          * Contrary to normal margins in this case top and bottom margin\n@@ -143,9 +141,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n                     reldims.bpd - before - after);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-body\";\n     }\n@@ -155,9 +151,7 @@ public String getLocalName() {\n         return \"region-body\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_BODY;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "sha": "9700e72fc057565fbff8b4eb675d0c7e6d37d9f1",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionEnd.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "patch": "@@ -22,26 +22,26 @@\n // Java\n import java.awt.Rectangle;\n \n-// FOP\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.LengthBase;\n import org.apache.fop.datatypes.SimplePercentBaseContext;\n+import org.apache.fop.fo.FONode;\n \n /**\n  * The fo:region-end element.\n  */\n public class RegionEnd extends RegionSE {\n+\n     /**\n+     * Creates a new region-end element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionEnd(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -80,9 +80,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-end\";\n     }\n@@ -92,9 +90,7 @@ public String getLocalName() {\n         return \"region-end\";\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_END;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "sha": "13f65d71ae9700cfd26487f6cbe56895e172922b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionSE.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "patch": "@@ -35,15 +35,15 @@\n     // End of property values\n \n     /**\n+     * Creates a new region (start or end).\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     protected RegionSE(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         super.bind(pList);\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "sha": "183b44342b490548b2224d88e6dd88c53df7e0ac",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionStart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "patch": "@@ -32,16 +32,17 @@\n  * The fo:region-start element.\n  */\n public class RegionStart extends RegionSE {\n+\n     /**\n+     * Creates a new region-start element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RegionStart(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm) {\n         /* Special rules apply to resolving extent as values are resolved relative \n          * to the page size and reference orientation.\n@@ -77,9 +78,7 @@ public Rectangle getViewportRectangle (FODimension reldims, SimplePageMaster spm\n         return vpRect;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected String getDefaultRegionName() {\n         return \"xsl-region-start\";\n     }\n@@ -89,9 +88,7 @@ public String getLocalName() {\n         return \"region-start\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_REGION_START;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "sha": "7a69cfdacffb3dfe0402f42177b72fe8b7083909",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 28,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "patch": "@@ -52,38 +52,29 @@\n     private boolean hasPagePositionOnly = false;\n \n     /**\n+     * Creates a new repeatable-page-master-alternatives element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RepeatablePageMasterAlternatives(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         maximumRepeats = pList.get(PR_MAXIMUM_REPEATS);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         conditionalPageMasterRefs = new java.util.ArrayList();\n \n-        if (parent.getName().equals(\"fo:page-sequence-master\")) {\n-            PageSequenceMaster pageSequenceMaster = (PageSequenceMaster)parent;\n-            pageSequenceMaster.addSubsequenceSpecifier(this);\n-        } else {\n-            throw new ValidationException(\"fo:repeatable-page-master-alternatives \"\n-                                   + \"must be child of fo:page-sequence-master, not \"\n-                                   + parent.getName(), locator);\n-        }\n+        assert parent.getName().equals(\"fo:page-sequence-master\"); //Validation by the parent \n+        PageSequenceMaster pageSequenceMaster = (PageSequenceMaster)parent;\n+        pageSequenceMaster.addSubsequenceSpecifier(this);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (firstChild == null) {\n            missingChildElementError(\"(conditional-page-master-reference+)\");\n@@ -95,10 +86,11 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (conditional-page-master-reference+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI)\n-                && localName.equals(\"conditional-page-master-reference\"))) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"conditional-page-master-reference\")) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n@@ -117,11 +109,7 @@ public int getMaximumRepeats() {\n         }\n     }\n \n-    /**\n-     * Get the next matching page master from the conditional\n-     * page master references.\n-     * @see org.apache.fop.fo.pagination.SubSequenceSpecifier\n-     */\n+    /** {@inheritDoc} */\n     public String getNextPageMasterName(boolean isOddPage,\n                                         boolean isFirstPage,\n                                         boolean isLastPage,\n@@ -183,12 +171,11 @@ public boolean hasPagePositionLast() {\n     }\n     \n     /** {@inheritDoc} */\n-    /** @see org.apache.fop.fo.pagination.SubSequenceSpecifier#hasPagePositionOnly() */\n     public boolean hasPagePositionOnly() {\n         return this.hasPagePositionOnly;\n     }\n     \n-    /** @see org.apache.fop.fo.FONode#getLocalName() */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"repeatable-page-master-alternatives\";\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "sha": "509b81f21ad17cf3aa7fcbe7e3a6d4905cf4b2ba",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "patch": "@@ -47,15 +47,15 @@\n     private int numberConsumed = 0;\n \n     /**\n+     * Creates a new repeatable-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public RepeatablePageMasterReference(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n         maximumRepeats = pList.get(PR_MAXIMUM_REPEATS);\n@@ -65,9 +65,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         PageSequenceMaster pageSequenceMaster = (PageSequenceMaster) parent;\n \n@@ -83,13 +81,13 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getNextPageMasterName(boolean isOddPage,\n                                         boolean isFirstPage,\n                                         boolean isLastPage,",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "sha": "87dc248c06111edc85937a2a3f4c7c1e23b84352",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Root.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Root.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/fo/pagination/Root.java",
                "patch": "@@ -25,7 +25,6 @@\n import org.xml.sax.Locator;\n \n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.ElementMapping;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n@@ -62,7 +61,9 @@\n      */\n     private FOEventHandler foEventHandler = null;\n      \n-     /**\n+    /**\n+     * Creates a new root element.\n+     * @param parent the parent node (must be null)\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public Root(FONode parent) {\n@@ -137,13 +138,6 @@ protected void validateChildNode(Locator loc, String nsURI, String localName)\n     }\n     \n \n-    /** @inheritDoc */\n-    protected void validateChildNode(Locator loc, FONode child) throws ValidationException {\n-        if (child instanceof AbstractPageSequence) {\n-            pageSequenceFound = true;\n-        }\n-    }\n-\n     /**\n      * Sets the FOEventHandler object that this Root is attached to\n      * @param foEventHandler the FOEventHandler object\n@@ -291,9 +285,7 @@ public BookmarkTree getBookmarkTree() {\n         return bookmarkTree;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public Root getRoot() {\n         return this;\n     }\n@@ -303,9 +295,7 @@ public String getLocalName() {\n         return \"root\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_ROOT;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Root.java",
                "sha": "1cff9c3d600b0870bc5fb5d4aa1a67a0fa655064",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SideRegion.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "patch": "@@ -31,7 +31,11 @@\n \n     private Length extent;\n     \n-    /** @see org.apache.fop.fo.FONode#FONode(FONode) */\n+    /**\n+     * Creates a new side region.\n+     * @param parent the parent node\n+     * @see org.apache.fop.fo.FONode#FONode(FONode)\n+     */\n     protected SideRegion(FONode parent) {\n         super(parent);\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SideRegion.java",
                "sha": "552ca871b18cba977a1a843762f827d4bb2e3476",
                "status": "modified"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "changes": 130,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 69,
                "filename": "src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "patch": "@@ -63,15 +63,15 @@\n     private boolean hasRegionEnd = false;\n \n     /**\n+     * Creates a new simple-page-master element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public SimplePageMaster(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         commonMarginBlock = pList.getMarginBlockProps();\n         masterName = pList.get(PR_MASTER_NAME).getString();\n@@ -85,9 +85,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         LayoutMasterSet layoutMasterSet = (LayoutMasterSet) parent;\n \n@@ -101,9 +99,7 @@ protected void startOfNode() throws FOPException {\n         regions = new HashMap(5);\n     }\n \n-    /**\n-     * Make sure content model satisfied.\n-     */\n+    /** {@inheritDoc} */\n     protected void endOfNode() throws FOPException {\n         if (!hasRegionBody) {\n             missingChildElementError(\n@@ -116,72 +112,70 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (region-body,region-before?,region-after?,region-start?,region-end?)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (FO_URI.equals(nsURI) && localName.equals(\"region-body\")) {\n-            if (hasRegionBody) {\n-                tooManyNodesError(loc, \"fo:region-body\");\n-            } else {\n-                hasRegionBody = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-before\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-before\");\n-            } else if (hasRegionBefore) {\n-                tooManyNodesError(loc, \"fo:region-before\");\n-            } else if (hasRegionAfter) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-after\");\n-            } else if (hasRegionStart) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-end\");\n-            } else {\n-                hasRegionBody = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-after\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-after\");\n-            } else if (hasRegionAfter) {\n-                tooManyNodesError(loc, \"fo:region-after\");\n-            } else if (hasRegionStart) {\n-                nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-end\");\n-            } else {\n-                hasRegionAfter = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-start\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-start\");\n-            } else if (hasRegionStart) {\n-                tooManyNodesError(loc, \"fo:region-start\");\n-            } else if (hasRegionEnd) {\n-                nodesOutOfOrderError(loc, \"fo:region-start\", \"fo:region-end\");\n-            } else {\n-                hasRegionStart = true;\n-            }\n-        } else if (FO_URI.equals(nsURI) && localName.equals(\"region-end\")) {\n-            if (!hasRegionBody) {\n-                nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-end\");\n-            } else if (hasRegionEnd) {\n-                tooManyNodesError(loc, \"fo:region-end\");\n+            throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"region-body\")) {\n+                if (hasRegionBody) {\n+                    tooManyNodesError(loc, \"fo:region-body\");\n+                } else {\n+                    hasRegionBody = true;\n+                }\n+            } else if (localName.equals(\"region-before\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-before\");\n+                } else if (hasRegionBefore) {\n+                    tooManyNodesError(loc, \"fo:region-before\");\n+                } else if (hasRegionAfter) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-after\");\n+                } else if (hasRegionStart) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-before\", \"fo:region-end\");\n+                } else {\n+                    hasRegionBody = true;\n+                }\n+            } else if (localName.equals(\"region-after\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-after\");\n+                } else if (hasRegionAfter) {\n+                    tooManyNodesError(loc, \"fo:region-after\");\n+                } else if (hasRegionStart) {\n+                    nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-after\", \"fo:region-end\");\n+                } else {\n+                    hasRegionAfter = true;\n+                }\n+            } else if (localName.equals(\"region-start\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-start\");\n+                } else if (hasRegionStart) {\n+                    tooManyNodesError(loc, \"fo:region-start\");\n+                } else if (hasRegionEnd) {\n+                    nodesOutOfOrderError(loc, \"fo:region-start\", \"fo:region-end\");\n+                } else {\n+                    hasRegionStart = true;\n+                }\n+            } else if (localName.equals(\"region-end\")) {\n+                if (!hasRegionBody) {\n+                    nodesOutOfOrderError(loc, \"fo:region-body\", \"fo:region-end\");\n+                } else if (hasRegionEnd) {\n+                    tooManyNodesError(loc, \"fo:region-end\");\n+                } else {\n+                    hasRegionEnd = true;\n+                }\n             } else {\n-                hasRegionEnd = true;\n+                invalidChildError(loc, nsURI, localName);\n             }\n-        } else {\n-            invalidChildError(loc, nsURI, localName);\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public boolean generatesReferenceAreas() {\n         return true;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void addChildNode(FONode child) throws FOPException {\n         if (child instanceof Region) {\n             addRegion((Region)child);\n@@ -268,9 +262,7 @@ public String getLocalName() {\n         return \"simple-page-master\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_SIMPLE_PAGE_MASTER;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SimplePageMaster.java",
                "sha": "85a5081c8620789ccf0690c7e1253dea5639f22c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "patch": "@@ -46,16 +46,16 @@\n     private int state;\n \n     /**\n+     * Creates a new single-page-master-reference element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public SinglePageMasterReference(FONode parent) {\n         super(parent);\n         this.state = FIRST;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void bind(PropertyList pList) throws FOPException {\n         masterReference = pList.get(PR_MASTER_REFERENCE).getString();\n \n@@ -64,9 +64,7 @@ public void bind(PropertyList pList) throws FOPException {\n         }        \n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         PageSequenceMaster pageSequenceMaster = (PageSequenceMaster) parent;\n         pageSequenceMaster.addSubsequenceSpecifier(this);\n@@ -77,8 +75,10 @@ protected void startOfNode() throws FOPException {\n      * XSL Content Model: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-       invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/SinglePageMasterReference.java",
                "sha": "119ec409e97a0ae694d3ee2837f66ac2107bab8e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/StaticContent.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "patch": "@@ -27,24 +27,22 @@\n import org.apache.fop.fo.ValidationException;\n \n /**\n- * Class modelling the fo:static-content object.\n+ * Class modeling the fo:static-content object.\n  */\n public class StaticContent extends Flow {\n \n     /**\n+     * Creates a new static-content element.\n      * @param parent FONode that is the parent of this object\n      */\n     public StaticContent(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void startOfNode() throws FOPException {\n         if (getFlowName() == null || getFlowName().equals(\"\")) {\n-            throw new ValidationException(\"A 'flow-name' is required for \"\n-                                   + getName() + \".\", locator);\n+            missingPropertyError(\"flow-name\");\n         }\n         getFOEventHandler().startFlow(this);\n     }\n@@ -66,9 +64,11 @@ protected void endOfNode() throws FOPException {\n      * XSL Content Model: (%block;)+\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isBlockItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isBlockItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/StaticContent.java",
                "sha": "184438b6f068516f48e950e1220035a04f20c853",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Title.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Title.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/Title.java",
                "patch": "@@ -27,14 +27,15 @@\n import org.apache.fop.fo.flow.InlineLevel;\n \n /**\n- * Class modelling the fo:title object.\n+ * Class modeling the fo:title object.\n  */\n public class Title extends InlineLevel {\n     // The value of properties relevant for fo:title.\n     // See superclass InlineLevel\n     // End of property values\n \n     /**\n+     * Creates a new title element.\n      * @param parent FONode that is the parent of this object\n      */\n     public Title(FONode parent) {\n@@ -46,22 +47,20 @@ public Title(FONode parent) {\n         XSL/FOP: (#PCDATA|%inline;)*\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!isInlineItem(nsURI, localName)) {\n-            invalidChildError(loc, nsURI, localName);\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!isInlineItem(nsURI, localName)) {\n+                invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getLocalName() {\n         return \"title\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_TITLE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/Title.java",
                "sha": "f6f625ea806720f18c02e35adc70c2bd67f125bb",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "patch": "@@ -20,10 +20,13 @@\n package org.apache.fop.fo.pagination.bookmarks;\n \n import java.util.ArrayList;\n+import java.util.List;\n+\n import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -68,10 +71,10 @@ public void bind(PropertyList pList) throws FOPException {\n             externalDestination = null;\n         } else if (externalDestination.length() == 0) {\n             // slightly stronger than spec \"should be specified\"\n-            attributeError(\"Missing attribute:  Either external-destination or \" +\n-                \"internal-destination must be specified.\");\n+            getFOValidationEventProducer().missingLinkDestination(this, getName(), locator);\n         } else {\n-            attributeWarning(\"external-destination property not currently supported\");\n+            getFOValidationEventProducer().unimplementedFeature(this, getName(),\n+                    \"external-destination\", getLocator());\n         }\n     }\n \n@@ -80,18 +83,20 @@ public void bind(PropertyList pList) throws FOPException {\n         XSL/FOP: (bookmark-title, bookmark*)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-            if (FO_URI.equals(nsURI) && localName.equals(\"bookmark-title\")) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (localName.equals(\"bookmark-title\")) {\n                 if (bookmarkTitle != null) {\n                     tooManyNodesError(loc, \"fo:bookmark-title\");\n                 }\n-            } else if (FO_URI.equals(nsURI) && localName.equals(\"bookmark\")) {\n+            } else if (localName.equals(\"bookmark\")) {\n                 if (bookmarkTitle == null) {\n                     nodesOutOfOrderError(loc, \"fo:bookmark-title\", \"fo:bookmark\");\n                 }                \n             } else {\n                 invalidChildError(loc, nsURI, localName);\n             }\n+        }\n     }\n \n     /**\n@@ -123,10 +128,18 @@ public String getBookmarkTitle() {\n         return bookmarkTitle == null ? \"\" : bookmarkTitle.getTitle();\n     }\n \n+    /**\n+     * Returns the value of the internal-destination property.\n+     * @return the internal-destination\n+     */\n     public String getInternalDestination() {\n         return internalDestination;\n     }\n \n+    /**\n+     * Returns the value of the external-destination property.\n+     * @return the external-destination\n+     */\n     public String getExternalDestination() {\n         return externalDestination;\n     }\n@@ -141,7 +154,11 @@ public boolean showChildItems() {\n         return bShow;\n     }\n \n-    public ArrayList getChildBookmarks() {\n+    /**\n+     * Returns a list of child bookmarks.\n+     * @return the list of child bookmarks\n+     */\n+    public List getChildBookmarks() {\n         return childBookmarks;\n     }\n \n@@ -150,9 +167,7 @@ public String getLocalName() {\n         return \"bookmark\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/Bookmark.java",
                "sha": "7f55ec51b35f7682b22bb9c4173f72a4c5115bb0",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "patch": "@@ -21,8 +21,8 @@\n \n import org.xml.sax.Locator;\n \n-import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n \n@@ -45,15 +45,16 @@ public BookmarkTitle(FONode parent) {\n \n     /**\n      * Add the characters to this BookmarkTitle.\n-     * The text data inside the BookmarkTitle xml element \n+     * The text data inside the BookmarkTitle XML element \n      * is used for the BookmarkTitle string.\n      *\n      * @param data the character data\n      * @param start the start position in the data array\n      * @param end the end position in the character array\n-     * @param locator location in fo source file.\n+     * @param pList the currently valid property list\n+     * @param locator location in FO source file.\n      */\n-    protected void addCharacters(char data[], int start, int end,\n+    protected void addCharacters(char[] data, int start, int end,\n                                  PropertyList pList,\n                                  Locator locator) {\n         title += new String(data, start, end - start);\n@@ -64,8 +65,10 @@ protected void addCharacters(char data[], int start, int end,\n         XSL/FOP: empty\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n             invalidChildError(loc, nsURI, localName);\n+        }\n     }\n \n     /**\n@@ -82,9 +85,7 @@ public String getLocalName() {\n         return \"bookmark-title\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK_TITLE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTitle.java",
                "sha": "c7024f2aae731d02c1e8e64a9abbad28b4edfc4d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "patch": "@@ -21,6 +21,7 @@\n \n // Java\n import java.util.ArrayList;\n+import java.util.List;\n \n import org.xml.sax.Locator;\n \n@@ -39,15 +40,15 @@\n     private ArrayList bookmarks = new ArrayList();\n \n     /**\n+     * Creates a new bookmark-tree element.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public BookmarkTree(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void addChildNode(FONode obj) {\n         if (obj instanceof Bookmark) {\n             bookmarks.add(obj);\n@@ -69,14 +70,19 @@ protected void endOfNode() throws FOPException {\n         XSL/FOP: (bookmark+)\n      */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n-        throws ValidationException {\n-        if (!(FO_URI.equals(nsURI) &&\n-            localName.equals(\"bookmark\"))) {\n+                throws ValidationException {\n+        if (FO_URI.equals(nsURI)) {\n+            if (!localName.equals(\"bookmark\")) {\n                 invalidChildError(loc, nsURI, localName);\n+            }\n         }\n     }\n \n-    public ArrayList getBookmarks() {\n+    /**\n+     * Returns the root bookmarks.\n+     * @return the root bookmarks\n+     */\n+    public List getBookmarks() {\n         return bookmarks;\n     }\n \n@@ -85,9 +91,7 @@ public String getLocalName() {\n         return \"bookmark-tree\";\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public int getNameId() {\n         return FO_BOOKMARK_TREE;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/pagination/bookmarks/BookmarkTree.java",
                "sha": "0f1d8a8b7bf19ed1f0d1d368da011eed246a5d9c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "patch": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  *\n-/* $Id:$ */\n+/* $Id$ */\n \n package org.apache.fop.fo.properties;\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fo/properties/XMLLangShorthandParser.java",
                "sha": "5a5cf95c5aaba3ba4f200827eca3b62266662628",
                "status": "modified"
            },
            {
                "additions": 82,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "changes": 82,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontEventAdapter.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.fonts;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * Event listener interface for font-related events. This interface extends FontEventListener\n+ * and EventProducer for integration into FOP's event subsystem.\n+ */\n+public class FontEventAdapter implements FontEventListener {\n+\n+    private EventBroadcaster eventBroadcaster;\n+    \n+    /**\n+     * Creates a new FontEventAdapter.\n+     * @param broadcaster the event broadcaster to send the generated events to\n+     */\n+    public FontEventAdapter(EventBroadcaster broadcaster) {\n+        this.eventBroadcaster = broadcaster;\n+    }\n+    \n+    /**\n+     * Returns the event group ID.\n+     * @return the event group ID\n+     */\n+    protected String getEventGroupID() {\n+        return getClass().getName();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void fontSubstituted(Object source, FontTriplet requested, FontTriplet effective) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"requested\", requested);\n+        params.put(\"effective\", effective);\n+        Event ev = new Event(source, getEventGroupID() + \".fontSubstituted\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void fontLoadingErrorAtAutoDetection(Object source, String fontURL, Exception e) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"fontURL\", fontURL);\n+        params.put(\"e\", e);\n+        Event ev = new Event(source, getEventGroupID() + \".fontLoadingErrorAtAutoDetection\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void glyphNotAvailable(Object source, char ch, String fontName) {\n+        Map params = new java.util.HashMap();\n+        params.put(\"ch\", new Character(ch));\n+        params.put(\"fontName\", fontName);\n+        Event ev = new Event(source, getEventGroupID() + \".glyphNotAvailable\",\n+                EventSeverity.WARN, params);\n+        this.eventBroadcaster.broadcastEvent(ev);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontEventAdapter.java",
                "sha": "516999f704febd53aa8ba9c2f9934bc97530f11b",
                "status": "added"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontEventListener.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontEventListener.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/FontEventListener.java",
                "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.fonts;\n+\n+\n+/**\n+ * Event listener interface for font-related events.\n+ */\n+public interface FontEventListener {\n+\n+    /**\n+     * Notifies about a font being substituted as the requested one isn't available.\n+     * @param source the event source\n+     * @param requested the requested font triplet\n+     * @param effective the effective font triplet\n+     */\n+    void fontSubstituted(Object source, FontTriplet requested, FontTriplet effective);\n+\n+    /**\n+     * An error occurred while loading a font for auto-detection.\n+     * @param source the event source\n+     * @param fontURL the font URL\n+     * @param e the original exception\n+     */\n+    void fontLoadingErrorAtAutoDetection(Object source, String fontURL, Exception e);\n+\n+    /**\n+     * A glyph has been requested that is not available in the font.\n+     * @param source the event source\n+     * @param ch the character for which the glyph isn't available\n+     * @param fontName the name of the font\n+     */\n+    void glyphNotAvailable(Object source, char ch, String fontName);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontEventListener.java",
                "sha": "512df0ac04cd9912aeacd9676e9e02d816b9dee7",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontInfo.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/FontInfo.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/fonts/FontInfo.java",
                "patch": "@@ -67,6 +67,8 @@\n     /** Cache for Font instances. */\n     private Map fontInstanceCache = new java.util.HashMap();\n     \n+    private FontEventListener eventListener;\n+    \n     /**\n      * Main constructor\n      */\n@@ -77,6 +79,15 @@ public FontInfo() {\n         this.usedFonts = new java.util.HashMap();\n     }\n \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n     /**\n      * Checks if the font setup is valid (At least the ultimate fallback font \n      * must be registered.)\n@@ -158,6 +169,9 @@ private void logDuplicateFont(FontTriplet triplet, boolean replacing,\n     public void addMetrics(String name, FontMetrics metrics) {\n         // add the given metrics as a font with the given name\n \n+        if (metrics instanceof Typeface) {\n+            ((Typeface)metrics).setEventListener(this.eventListener);\n+        }\n         this.fonts.put(name, metrics);\n     }\n \n@@ -364,8 +378,12 @@ private void notifyFontReplacement(FontTriplet replacedKey, FontTriplet newKey)\n         }\n         if (!loggedFontKeys.contains(replacedKey)) {\n             loggedFontKeys.add(replacedKey);\n-            log.warn(\"Font '\" + replacedKey + \"' not found. \"\n-                    + \"Substituting with '\" + newKey + \"'.\");\n+            if (this.eventListener != null) {\n+                this.eventListener.fontSubstituted(this, replacedKey, newKey);\n+            } else {\n+                log.warn(\"Font '\" + replacedKey + \"' not found. \"\n+                        + \"Substituting with '\" + newKey + \"'.\");\n+            }\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/FontInfo.java",
                "sha": "950134eb6da874b495fd62a6f4de28027e88325f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/LazyFont.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/LazyFont.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/LazyFont.java",
                "patch": "@@ -141,6 +141,7 @@ private void load(boolean fail) {\n                     throw new RuntimeException(ioex.getMessage());\n                 }\n             }\n+            realFont.setEventListener(this.eventListener);\n             isMetricsLoaded = true;\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/LazyFont.java",
                "sha": "5490e13f1487afe31ac9fbdef8fdbff56d084eef",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/SingleByteFont.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/fonts/SingleByteFont.java",
                "patch": "@@ -117,18 +117,22 @@ public char mapChar(char c) {\n         }\n         \n         //Give up, character is not available\n-        Character ch = new Character(c);\n-        if (warnedChars == null) {\n-            warnedChars = new java.util.HashSet();\n-        }\n-        if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n-            warnedChars.add(ch);\n-            if (warnedChars.size() == 8) {\n-                log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n-            } else {\n-                log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n-                        + \", \" + Glyphs.charToGlyphName(c)\n-                        + \") not available in font \" + getFontName());\n+        if (this.eventListener != null) {\n+            this.eventListener.glyphNotAvailable(this, c, getFontName());\n+        } else {\n+            Character ch = new Character(c);\n+            if (warnedChars == null) {\n+                warnedChars = new java.util.HashSet();\n+            }\n+            if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {\n+                warnedChars.add(ch);\n+                if (warnedChars.size() == 8) {\n+                    log.warn(\"Many requested glyphs are not available in font \" + getFontName());\n+                } else {\n+                    log.warn(\"Glyph \" + (int)c + \" (0x\" + Integer.toHexString(c) \n+                            + \", \" + Glyphs.charToGlyphName(c)\n+                            + \") not available in font \" + getFontName());\n+                }\n             }\n         }\n         return NOT_FOUND;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/SingleByteFont.java",
                "sha": "0a47d52ab82625b3668258ead9b1078f22d8b47a",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/Typeface.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/Typeface.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fonts/Typeface.java",
                "patch": "@@ -30,6 +30,9 @@\n      */\n     private long charMapOps = 0;\n     \n+    /** An optional event listener that receives events such as missing glyphs etc. */\n+    protected FontEventListener eventListener;\n+    \n     /**\n      * Get the encoding of the font.\n      * @return the encoding\n@@ -80,5 +83,14 @@ public int getMaxAscent(int size) {\n         return getAscender(size);\n     }\n     \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/Typeface.java",
                "sha": "b6c78a3b003e3c00c17003f2992d02b3d4c24665",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.fop.fonts.EmbedFontInfo;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontCache;\n+import org.apache.fop.fonts.FontEventListener;\n import org.apache.fop.fonts.FontLoader;\n import org.apache.fop.fonts.FontResolver;\n import org.apache.fop.fonts.FontTriplet;\n@@ -52,6 +53,17 @@\n     /** logging instance */\n     private Log log = LogFactory.getLog(FontInfoFinder.class);\n \n+    private FontEventListener eventListener;\n+    \n+    /**\n+     * Sets the font event listener that can be used to receive events about particular events\n+     * in this class.\n+     * @param listener the font event listener\n+     */\n+    public void setEventListener(FontEventListener listener) {\n+        this.eventListener = listener;\n+    }\n+    \n     /**\n      * Attempts to determine FontTriplets from a given CustomFont.\n      * It seems to be fairly accurate but will probably require some tweaking over time\n@@ -180,7 +192,6 @@ private EmbedFontInfo fontInfoFromCustomFont(\n         \n         // try to determine triplet information from font file\n         CustomFont customFont = null;\n-        \n         if (fontUrl.toExternalForm().endsWith(\".ttc\")) {\n             // Get a list of the TTC Font names\n             List ttcNames = null; //List<String>\n@@ -193,7 +204,9 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 FontFileReader reader = new FontFileReader(in);\n                 ttcNames = ttf.getTTCnames(reader);\n             } catch (Exception e) {\n-                log.error(e);\n+                if (this.eventListener != null) {\n+                    this.eventListener.fontLoadingErrorAtAutoDetection(this, fontFileURI, e);\n+                }\n             } finally {\n                 IOUtils.closeQuietly(in);\n             }\n@@ -212,14 +225,16 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 try {\n                     ttfLoader = new TTFFontLoader(fontFileURI, fontName, resolver);\n                     customFont = ttfLoader.getFont();\n+                    if (this.eventListener != null) {\n+                        customFont.setEventListener(this.eventListener);\n+                    }\n                 } catch (Exception e) {\n-                    //TODO Too verbose (it's an error but we don't care if some fonts can't be loaded)\n-                    //if (log.isErrorEnabled()) {\n-                    log.error(\"Unable to load font file: \" + embedUrl + \". Reason: \" + e.getMessage());\n-                    //}\n                     if (fontCache != null) {\n                         fontCache.registerFailedFont(embedUrl, fileLastModified);\n                     }\n+                    if (this.eventListener != null) {\n+                        this.eventListener.fontLoadingErrorAtAutoDetection(this, embedUrl, e);\n+                    }\n                     continue;\n                 }\n                 EmbedFontInfo fi = fontInfoFromCustomFont(fontUrl, customFont, fontCache);\n@@ -233,14 +248,16 @@ private EmbedFontInfo fontInfoFromCustomFont(\n             // The normal case\n             try {\n                 customFont = FontLoader.loadFont(fontUrl, null, resolver);\n+                if (this.eventListener != null) {\n+                    customFont.setEventListener(this.eventListener);\n+                }\n             } catch (Exception e) {\n-                //TODO Too verbose (it's an error but we don't care if some fonts can't be loaded)\n-                //if (log.isErrorEnabled()) {\n-                    log.error(\"Unable to load font file: \" + embedUrl + \". Reason: \" + e.getMessage());\n-                //}\n                 if (fontCache != null) {\n                     fontCache.registerFailedFont(embedUrl, fileLastModified);\n                 }\n+                if (this.eventListener != null) {\n+                    this.eventListener.fontLoadingErrorAtAutoDetection(this, embedUrl, e);\n+                }\n                 return null;\n             }\n             EmbedFontInfo fi = fontInfoFromCustomFont(fontUrl, customFont, fontCache);\n@@ -250,7 +267,6 @@ private EmbedFontInfo fontInfoFromCustomFont(\n                 return null;\n             }\n         }\n-        \n \n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/fonts/autodetect/FontInfoFinder.java",
                "sha": "b223ea7a1ac80176bcb7531fc1ab4eeee0c7c80f",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "patch": "@@ -27,8 +27,11 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.bridge.UserAgent;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import org.apache.xmlgraphics.image.loader.Image;\n import org.apache.xmlgraphics.image.loader.ImageException;\n@@ -40,7 +43,7 @@\n import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n import org.apache.xmlgraphics.util.UnitConv;\n \n-import org.apache.fop.svg.SVGUserAgent;\n+import org.apache.fop.svg.SimpleSVGUserAgent;\n \n /**\n  * This ImageConverter converts SVG images to Java2D.\n@@ -52,6 +55,9 @@\n  */\n public class ImageConverterSVG2G2D extends AbstractImageConverter {\n \n+    /** logger */\n+    private static Log log = LogFactory.getLog(ImageConverterSVG2G2D.class);\n+\n     /** {@inheritDoc} */\n     public Image convert(Image src, Map hints) throws ImageException {\n         checkSourceFlavor(src);\n@@ -67,9 +73,7 @@ public Image convert(Image src, Map hints) throws ImageException {\n         if (ptm != null) {\n             pxToMillimeter = (float)UnitConv.mm2in(ptm.doubleValue());\n         }\n-        SVGUserAgent ua = new SVGUserAgent(\n-                pxToMillimeter,\n-                new AffineTransform());\n+        UserAgent ua = createBatikUserAgent(pxToMillimeter);\n         GVTBuilder builder = new GVTBuilder();\n         final BridgeContext ctx = new BridgeContext(ua);\n \n@@ -107,6 +111,25 @@ public Dimension getImageSize() {\n         return g2dImage;\n     }\n \n+    /**\n+     * Creates a user agent for Batik. Override to provide your own user agent.\n+     * @param pxToMillimeter the source resolution (in px per millimeter)\n+     * @return the newly created user agent\n+     */\n+    protected SimpleSVGUserAgent createBatikUserAgent(float pxToMillimeter) {\n+        return new SimpleSVGUserAgent(\n+                pxToMillimeter,\n+                new AffineTransform()) {\n+\n+            /** {@inheritDoc} */\n+            public void displayMessage(String message) {\n+                //TODO Refine and pipe through to caller\n+                log.debug(message);\n+            }\n+            \n+        };\n+    }\n+\n     /** {@inheritDoc} */\n     public ImageFlavor getSourceFlavor() {\n         return ImageFlavor.XML_DOM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/image/loader/batik/ImageConverterSVG2G2D.java",
                "sha": "be0995d8c116c71bd21805b72fca38f2ceb34254",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "patch": "@@ -32,6 +32,7 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.UnitProcessor;\n+import org.apache.batik.bridge.UserAgent;\n import org.apache.batik.dom.svg.SAXSVGDocumentFactory;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.dom.svg.SVGOMDocument;\n@@ -46,7 +47,7 @@\n import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n import org.apache.xmlgraphics.util.MimeConstants;\n \n-import org.apache.fop.svg.SVGUserAgent;\n+import org.apache.fop.svg.SimpleSVGUserAgent;\n import org.apache.fop.util.UnclosableInputStream;\n \n /**\n@@ -154,8 +155,15 @@ private ImageInfo getImage(String uri, Source src,\n         private ImageInfo createImageInfo(String uri, ImageContext context, SVGDocument doc) {\n             Element e = doc.getRootElement();\n             float pxUnitToMillimeter = 25.4f / context.getSourceResolution(); \n-            SVGUserAgent userAg = new SVGUserAgent(pxUnitToMillimeter,\n-                        new AffineTransform());\n+            UserAgent userAg = new SimpleSVGUserAgent(pxUnitToMillimeter,\n+                        new AffineTransform()) {\n+\n+                /** {@inheritDoc} */\n+                public void displayMessage(String message) {\n+                    log.debug(message);\n+                }\n+                \n+            };\n             BridgeContext ctx = new BridgeContext(userAg);\n             UnitProcessor.Context uctx = UnitProcessor.createContext(ctx, e);\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/image/loader/batik/PreloaderSVG.java",
                "sha": "20557a644b8328dcffb86f3d598d53d615aefda3",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "patch": "@@ -198,11 +198,11 @@ protected PageProvider getPageProvider() {\n     }\n     \n     /**\n-     * Returns a PageBreakingLayoutListener for the PageBreakingAlgorithm to notify about layout\n-     * problems.\n+     * Creates and returns a PageBreakingLayoutListener for the PageBreakingAlgorithm to\n+     * notify about layout problems.\n      * @return the listener instance or null if no notifications are needed\n      */\n-    protected PageBreakingAlgorithm.PageBreakingLayoutListener getLayoutListener() {\n+    protected PageBreakingAlgorithm.PageBreakingLayoutListener createLayoutListener() {\n         return null;\n     }\n     \n@@ -320,7 +320,7 @@ public void doLayout(int flowBPD, boolean autoHeight) {\n                 log.debug(\"PLM> start of algorithm (\" + this.getClass().getName() \n                         + \"), flow BPD =\" + flowBPD);\n                 PageBreakingAlgorithm alg = new PageBreakingAlgorithm(getTopLevelLM(),\n-                        getPageProvider(), getLayoutListener(),\n+                        getPageProvider(), createLayoutListener(),\n                         alignment, alignmentLast, footnoteSeparatorLength,\n                         isPartOverflowRecoveryActivated(), autoHeight, isSinglePartFavored());\n                 int iOptPageCount;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/AbstractBreaker.java",
                "sha": "4ef0579f251c8a952012e517059a7af36b8f33a2",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "changes": 44,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 15,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "patch": "@@ -35,7 +35,6 @@\n import org.apache.fop.area.Trait;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.Length;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.BlockContainer;\n import org.apache.fop.fo.properties.CommonAbsolutePosition;\n import org.apache.fop.traits.MinOptMax;\n@@ -239,11 +238,11 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n \n         int availableIPD = referenceIPD - getIPIndents();\n         if (getContentAreaIPD() > availableIPD) {\n-            log.warn(FONode.decorateWithContextInfo(\n-                    \"The extent in inline-progression-direction (width) of a block-container is\"\n-                    + \" bigger than the available space (\" \n-                    + getContentAreaIPD() + \"mpt > \" + context.getRefIPD() + \"mpt)\", \n-                    getBlockContainerFO()));\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+            eventProducer.objectTooWide(this, getBlockContainerFO().getName(),\n+                    getContentAreaIPD(), context.getRefIPD(),\n+                    getBlockContainerFO().getLocator());\n         }\n         \n         MinOptMax stackLimit = new MinOptMax(relDims.bpd);\n@@ -378,10 +377,12 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             */\n \n             if (contentOverflows) {\n-                log.warn(\"Contents overflow block-container viewport: clipping\");\n-                if (getBlockContainerFO().getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO Throw layout exception\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (getBlockContainerFO().getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                eventProducer.viewportOverflow(this, getBlockContainerFO().getName(),\n+                        breaker.getOverflowAmount(), needClip(), canRecover,\n+                        getBlockContainerFO().getLocator());\n             }\n         }\n         addKnuthElementsForBorderPaddingAfter(returnList, true);\n@@ -526,10 +527,12 @@ private LinkedList getNextKnuthElementsAbsolute(LayoutContext context, int align\n     \n             //TODO Maybe check for page overflow when autoHeight=true\n             if (!autoHeight & (contentOverflows)) {\n-                log.warn(\"Contents overflow block-container viewport: clipping\");\n-                if (getBlockContainerFO().getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO Throw layout exception\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getBlockContainerFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (getBlockContainerFO().getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                eventProducer.viewportOverflow(this, getBlockContainerFO().getName(),\n+                        breaker.getOverflowAmount(), needClip(), canRecover,\n+                        getBlockContainerFO().getLocator());\n             }\n         }\n \n@@ -602,7 +605,18 @@ public int getDifferenceOfFirstPart() {\n         }\n         \n         public boolean isOverflow() {\n-            return !isEmpty() && (deferredAlg.getPageBreaks().size() > 1);\n+            if (isEmpty()) {\n+                return false;\n+            } else {\n+                return (deferredAlg.getPageBreaks().size() > 1)\n+                    || (deferredAlg.totalWidth - deferredAlg.totalShrink) \n+                            > deferredAlg.getLineWidth();\n+            }\n+        }\n+        \n+        public int getOverflowAmount() {\n+            return (deferredAlg.totalWidth - deferredAlg.totalShrink) \n+                - deferredAlg.getLineWidth();\n         }\n         \n         protected LayoutManager getTopLevelLM() {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java",
                "sha": "f01f0e12f4c265ec2c4dcfde94260c847597868f",
                "status": "modified"
            },
            {
                "additions": 168,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "changes": 168,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "patch": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for block-level layout managers.\n+ */\n+public interface BlockLevelEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static BlockLevelEventProducer get(EventBroadcaster broadcaster) {\n+            return (BlockLevelEventProducer)broadcaster.getEventProducerFor(\n+                    BlockLevelEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * The contents of a table-row are too big to fit in the constraints.\n+     * @param source the event source\n+     * @param row the row number\n+     * @param effCellBPD the effective extent in block-progression direction of the cell\n+     * @param maxCellBPD the maximum extent in block-progression direction of the cell\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void rowTooTall(Object source, int row, int effCellBPD, int maxCellBPD, Locator loc);\n+    \n+    /**\n+     * Auto-table layout is not supported, yet.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity INFO\n+     */\n+    void tableFixedAutoWidthNotSupported(Object source, Locator loc);\n+    \n+    /**\n+     * An formatting object is too wide.\n+     * @param source the event source\n+     * @param elementName the formatting object \n+     * @param effIPD the effective extent in inline-progression direction of the table contents\n+     * @param maxIPD the maximum extent in inline-progression direction available\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void objectTooWide(Object source, String elementName, int effIPD, int maxIPD, Locator loc);\n+        \n+    /**\n+     * An overconstrained geometry adjustment rule was triggered (5.3.4, XSL 1.0).\n+     * @param source the event source\n+     * @param elementName the formatting object \n+     * @param amount the amount of the adjustment (in mpt)\n+     * @param loc the location of the error or null\n+     * @event.severity INFO\n+     */\n+    void overconstrainedAdjustEndIndent(Object source, String elementName, int amount, Locator loc);\n+    \n+    /**\n+     * Contents overflow a viewport.\n+     * @param source the event source\n+     * @param elementName the formatting object\n+     * @param amount the amount by which the contents overflow (in mpt)\n+     * @param clip true if the content will be clipped\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws LayoutException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void viewportOverflow(Object source, String elementName, \n+            int amount, boolean clip, boolean canRecover,\n+            Locator loc) throws LayoutException;\n+    \n+    /**\n+     * Contents overflow a region viewport.\n+     * @param source the event source\n+     * @param elementName the formatting object\n+     * @param page the page number/name where the overflow happened\n+     * @param amount the amount by which the contents overflow (in mpt)\n+     * @param clip true if the content will be clipped\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws LayoutException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void regionOverflow(Object source, String elementName,\n+            String page,\n+            int amount, boolean clip, boolean canRecover,\n+            Locator loc) throws LayoutException;\n+    \n+    /**\n+     * Indicates that FOP doesn't support flows that are not mapped to region-body, yet.\n+     * @param source the event source\n+     * @param flowName the flow name\n+     * @param masterName the page master name\n+     * @param loc the location of the error or null\n+     * @throws UnsupportedOperationException the layout error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void flowNotMappingToRegionBody(Object source, String flowName, String masterName,\n+            Locator loc) throws UnsupportedOperationException;\n+    \n+    /**\n+     * A page sequence master is exhausted.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param canRecover indicates whether FOP can recover from this problem and continue working\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void pageSequenceMasterExhausted(Object source, String pageSequenceMasterName,\n+            boolean canRecover, Locator loc) throws FOPException;\n+\n+    /**\n+     * No subsequences in page sequence master.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void missingSubsequencesInPageSequenceMaster(Object source, String pageSequenceMasterName,\n+            Locator loc) throws FOPException;\n+    \n+    /**\n+     * No single-page-master matching in page sequence master.\n+     * @param source the event source\n+     * @param pageSequenceMasterName the name of the page sequence master\n+     * @param pageMasterName the name of the page master not matching\n+     * @param loc the location of the error or null\n+     * @throws FOPException the error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noMatchingPageMaster(Object source, String pageSequenceMasterName,\n+            String pageMasterName, Locator loc) throws FOPException;\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockLevelEventProducer.java",
                "sha": "c31a704773abecc9280908261810b7a617faefcb",
                "status": "added"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "patch": "@@ -201,6 +201,10 @@ protected int updateContentAreaIPDwithOverconstrainedAdjust() {\n         if (ipd < 0) {\n             //5.3.4, XSL 1.0, Overconstrained Geometry\n             log.debug(\"Adjusting end-indent based on overconstrained geometry rules for \" + fobj);\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getFObj().getUserAgent().getEventBroadcaster());\n+            eventProducer.overconstrainedAdjustEndIndent(this,\n+                    getFObj().getName(), ipd, getFObj().getLocator());\n             endIndent += ipd;\n             ipd = 0;\n             //TODO Should we skip layout for a block that has ipd=0?\n@@ -212,14 +216,18 @@ protected int updateContentAreaIPDwithOverconstrainedAdjust() {\n     /**\n      * Sets the content area IPD by directly supplying the value. \n      * end-indent is adjusted based on overconstrained geometry rules, if necessary.\n-     * \n+     * @param contentIPD the IPD of the content\n      * @return the resulting content area IPD\n      */\n     protected int updateContentAreaIPDwithOverconstrainedAdjust(int contentIPD) {\n         int ipd = referenceIPD - (contentIPD + (startIndent + endIndent));\n         if (ipd < 0) {\n             //5.3.4, XSL 1.0, Overconstrained Geometry\n             log.debug(\"Adjusting end-indent based on overconstrained geometry rules for \" + fobj);\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getFObj().getUserAgent().getEventBroadcaster());\n+            eventProducer.overconstrainedAdjustEndIndent(this,\n+                    getFObj().getName(), ipd, getFObj().getLocator());\n             endIndent += ipd;\n         }\n         setContentAreaIPD(contentIPD);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/BlockStackingLayoutManager.java",
                "sha": "cb6db6b012476c8f6a2f8f1a93fe65a951f51184",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import java.awt.Dimension;\n import java.awt.Rectangle;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n@@ -46,6 +47,7 @@\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.datatypes.FODimension;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExternalDocument;\n import org.apache.fop.layoutmgr.inline.ImageLayout;\n@@ -140,17 +142,28 @@ public void activateLayout() {\n                         pageIndex++;\n                     }\n                 } catch (URISyntaxException e) {\n-                    log.error(\"Error parsing or constructing URIs based on URI: \" + uri);\n+                    getResourceEventProducer().uriError(this, uri, e,\n+                            getExternalDocument().getLocator());\n                     return;\n                 }\n             }\n+        } catch (FileNotFoundException fnfe) {\n+            getResourceEventProducer().imageNotFound(this, uri, fnfe,\n+                    getExternalDocument().getLocator());\n         } catch (IOException ioe) {\n-            log.error(\"Image not available: \" + uri, ioe);\n+            getResourceEventProducer().imageIOError(this, uri, ioe,\n+                    getExternalDocument().getLocator());\n         } catch (ImageException ie) {\n-            log.error(\"Error while inspecting image: \" + uri + \" (\" + ie.getMessage() + \")\");\n+            getResourceEventProducer().imageError(this, uri, ie,\n+                    getExternalDocument().getLocator());\n         }\n     }\n \n+    private ResourceEventProducer getResourceEventProducer() {\n+        return ResourceEventProducer.Provider.get(\n+                getExternalDocument().getUserAgent().getEventBroadcaster());\n+    }\n+\n     private void makePageForImage(ImageInfo info, ImageLayout layout) {\n         this.imageLayout = layout;\n         curPage = makeNewPage(false, false);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/ExternalDocumentLayoutManager.java",
                "sha": "086d91c313ee63e09eec8cf6edc942b7adf894fb",
                "status": "modified"
            },
            {
                "additions": 105,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "changes": 105,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/LayoutException.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "patch": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+\n+/**\n+ * Exception thrown by FOP if an unrecoverable layout error occurs. An example: An area overflows\n+ * a viewport that has overflow=\"error-if-overflow\".\n+ * \n+ * @todo Discuss if this should become a checked exception.\n+ */\n+public class LayoutException extends RuntimeException {\n+\n+    private static final long serialVersionUID = 5157080040923740433L;\n+    \n+    private String localizedMessage;\n+    private LayoutManager layoutManager;\n+\n+    /**\n+     * Constructs a new layout exception with the specified detail message.\n+     * @param message the detail message.\n+     */\n+    public LayoutException(String message) {\n+        this(message, null);\n+    }\n+\n+    /**\n+     * Constructs a new layout exception with the specified detail message.\n+     * @param message the detail message\n+     * @param lm the layout manager that throws the exception\n+     */\n+    public LayoutException(String message, LayoutManager lm) {\n+        super(message);\n+        this.layoutManager = lm;\n+    }\n+\n+    /**\n+     * Sets the localized message for this exception.\n+     * @param msg the localized message\n+     */\n+    public void setLocalizedMessage(String msg) {\n+        this.localizedMessage = msg;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        if (this.localizedMessage != null) {\n+            return this.localizedMessage;\n+        } else {\n+            return super.getLocalizedMessage();\n+        }\n+    }\n+\n+    /**\n+     * Returns the layout manager that detected the problem.\n+     * @return the layout manager (or null)\n+     */\n+    public LayoutManager getLayoutManager() {\n+        return this.layoutManager;\n+    }\n+    \n+    /** Exception factory for {@link LayoutException}. */\n+    public static class LayoutExceptionFactory implements ExceptionFactory {\n+\n+        /** {@inheritDoc} */\n+        public Throwable createException(Event event) {\n+            Object source = event.getSource();\n+            LayoutManager lm = (source instanceof LayoutManager) ? (LayoutManager)source : null;\n+            String msg = EventFormatter.format(event, Locale.ENGLISH);\n+            LayoutException ex = new LayoutException(msg, lm);\n+            if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+                ex.setLocalizedMessage(EventFormatter.format(event));\n+            }\n+            return ex;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public Class getExceptionClass() {\n+            return LayoutException.class;\n+        }\n+        \n+    }    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/LayoutException.java",
                "sha": "350cc758a368536b1523723c9bc65226b6145eac",
                "status": "added"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreaker.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.fop.area.Footnote;\n import org.apache.fop.area.PageViewport;\n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.pagination.PageSequence;\n import org.apache.fop.fo.pagination.Region;\n@@ -79,27 +78,25 @@ protected PageProvider getPageProvider() {\n         return pslm.getPageProvider();\n     }\n     \n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected PageBreakingLayoutListener getLayoutListener() {\n+    /** {@inheritDoc} */\n+    protected PageBreakingLayoutListener createLayoutListener() {\n         return new PageBreakingLayoutListener() {\n \n-            public void notifyOverflow(int part, FObj obj) {\n+            public void notifyOverflow(int part, int amount, FObj obj) {\n                 Page p = pageProvider.getPage(\n                             false, part, PageProvider.RELTO_CURRENT_ELEMENT_LIST);\n                 RegionBody body = (RegionBody)p.getSimplePageMaster().getRegion(\n                         Region.FO_REGION_BODY);\n-                String err = FONode.decorateWithContextInfo(\n-                        \"Content of the region-body on page \" \n-                        + p.getPageViewport().getPageNumberString() \n-                        + \" overflows the available area in block-progression dimension.\", \n-                        obj);\n-                if (body.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW) {\n-                    throw new RuntimeException(err);\n-                } else {\n-                    log.warn(err);\n-                }\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        body.getUserAgent().getEventBroadcaster());\n+\n+                boolean canRecover = (body.getOverflow() != Constants.EN_ERROR_IF_OVERFLOW);\n+                boolean needClip = (body.getOverflow() == Constants.EN_HIDDEN\n+                        || body.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW);\n+                eventProducer.regionOverflow(this, body.getName(),\n+                        p.getPageViewport().getPageNumberString(),\n+                        amount, needClip, canRecover,\n+                        body.getLocator());\n             }\n             \n         };\n@@ -297,7 +294,7 @@ private void doPhase3WithLastPage(PageBreakingAlgorithm alg, int partCount,\n         //Restart last page\n         PageBreakingAlgorithm algRestart = new PageBreakingAlgorithm(\n                 getTopLevelLM(),\n-                getPageProvider(), getLayoutListener(),\n+                getPageProvider(), createLayoutListener(),\n                 alg.getAlignment(), alg.getAlignmentLast(), \n                 footnoteSeparatorLength,\n                 isPartOverflowRecoveryActivated(), false, false);\n@@ -356,7 +353,7 @@ private void doPhase3WithColumnBalancing(PageBreakingAlgorithm alg, int partCoun\n         //Restart last page\n         PageBreakingAlgorithm algRestart = new BalancingColumnBreakingAlgorithm(\n                 getTopLevelLM(),\n-                getPageProvider(), getLayoutListener(),\n+                getPageProvider(), createLayoutListener(),\n                 alignment, Constants.EN_START, footnoteSeparatorLength,\n                 isPartOverflowRecoveryActivated(),\n                 pslm.getCurrentPV().getBodyRegion().getColumnCount());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageBreaker.java",
                "sha": "d6be75758e9bb54b62daff349478c4791c4f6aba",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 25,
                "filename": "src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.commons.logging.LogFactory;\n \n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.FObj;\n import org.apache.fop.layoutmgr.AbstractBreaker.PageBreakPosition;\n import org.apache.fop.traits.MinOptMax;\n@@ -289,7 +288,7 @@ protected int restartFrom(KnuthNode restartingNode, int currentIndex) {\n \n     private void resetFootnotes(LinkedList elementLists) {\n         for (int i = 0; i < elementLists.size(); i++) {\n-            LinkedList removedList = (LinkedList) footnotesList.remove(footnotesList.size() - 1);\n+            /*LinkedList removedList = (LinkedList)*/footnotesList.remove(footnotesList.size() - 1);\n             lengthList.remove(lengthList.size() - 1);\n \n             // update totalFootnotesLength\n@@ -332,11 +331,13 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n                     actualWidth += allFootnotes;\n                     insertedFootnotesLength = pageNode.totalFootnotes + allFootnotes;\n                     footnoteListIndex = footnotesList.size() - 1;\n-                    footnoteElementIndex = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n-                } else if (((canDeferOldFootnotes = checkCanDeferOldFootnotes(pageNode, elementIndex))\n+                    footnoteElementIndex\n+                        = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n+                } else if (((canDeferOldFootnotes\n+                                = checkCanDeferOldFootnotes(pageNode, elementIndex))\n                             || newFootnotes)\n-                           && (footnoteSplit = getFootnoteSplit(pageNode, getLineWidth() - actualWidth,\n-                                                                canDeferOldFootnotes)) > 0) {\n+                           && (footnoteSplit = getFootnoteSplit(pageNode,\n+                                   getLineWidth() - actualWidth, canDeferOldFootnotes)) > 0) {\n                     // it is allowed to break or even defer footnotes if either:\n                     //  - there are new footnotes in the last piece of content, and\n                     //    there is space to add at least a piece of the first one\n@@ -356,7 +357,8 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n                     actualWidth += allFootnotes;\n                     insertedFootnotesLength = pageNode.totalFootnotes + allFootnotes;\n                     footnoteListIndex = footnotesList.size() - 1;\n-                    footnoteElementIndex = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n+                    footnoteElementIndex\n+                        = ((LinkedList) footnotesList.get(footnoteListIndex)).size() - 1;\n                 }\n             } else {\n                 // all footnotes have already been placed on previous pages\n@@ -381,7 +383,8 @@ protected int computeDifference(KnuthNode activeNode, KnuthElement element,\n      */\n     private boolean checkCanDeferOldFootnotes(KnuthPageNode node, int contentElementIndex) {\n         return (noBreakBetween(node.position, contentElementIndex)\n-                && deferredFootnotes(node.footnoteListIndex, node.footnoteElementIndex, node.totalFootnotes));\n+                && deferredFootnotes(node.footnoteListIndex,\n+                        node.footnoteElementIndex, node.totalFootnotes));\n     }\n \n     /**\n@@ -455,7 +458,8 @@ private boolean deferredFootnotes(int listIndex, int elementIndex, int length) {\n      * @param availableLength available space for footnotes\n      * @param canDeferOldFootnotes\n      */\n-    private int getFootnoteSplit(KnuthPageNode activeNode, int availableLength, boolean canDeferOldFootnotes) {\n+    private int getFootnoteSplit(KnuthPageNode activeNode, int availableLength,\n+                boolean canDeferOldFootnotes) {\n         return getFootnoteSplit(activeNode.footnoteListIndex,\n                                 activeNode.footnoteElementIndex,\n                                 activeNode.totalFootnotes,\n@@ -520,7 +524,8 @@ private int getFootnoteSplit(int prevListIndex, int prevElementIndex, int prevLe\n             }\n \n             // try adding a split of the next note\n-            noteListIterator = ((LinkedList) footnotesList.get(listIndex)).listIterator(elementIndex);\n+            noteListIterator = ((LinkedList) footnotesList.get(listIndex))\n+                    .listIterator(elementIndex);\n \n             int prevSplitLength = 0;\n             int prevIndex = -1;\n@@ -754,14 +759,6 @@ public void removeAllPageBreaks() {\n         }\n     }\n     \n-    private int getPartCount() {\n-        if (pageBreaks == null) {\n-            return 0;\n-        } else {\n-            return pageBreaks.size();\n-        }\n-    }\n-    \n     public void updateData1(int total, double demerits) {\n     }\n \n@@ -774,12 +771,7 @@ public void updateData2(KnuthNode bestActiveNode,\n         if (difference + bestActiveNode.availableShrink < 0) {\n             if (!autoHeight) {\n                 if (layoutListener != null) {\n-                    layoutListener.notifyOverflow(bestActiveNode.line - 1, getFObj());\n-                } else if (log.isWarnEnabled()) {\n-                    log.warn(FONode.decorateWithContextInfo(\n-                            \"Part/page \" + (bestActiveNode.line - 1) \n-                            + \" overflows the available area in block-progression dimension.\", \n-                            getFObj()));\n+                    layoutListener.notifyOverflow(bestActiveNode.line - 1, -difference, getFObj());\n                 }\n             }\n         }\n@@ -890,9 +882,10 @@ protected int getLineWidth(int line) {\n         /**\n          * Issued when an overflow is detected\n          * @param part the number of the part (page) this happens on\n+         * @param amount the amount by which the area overflows (in mpt)\n          * @param obj the root FO object where this happens\n          */\n-        void notifyOverflow(int part, FObj obj);\n+        void notifyOverflow(int part, int amount, FObj obj);\n         \n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageBreakingAlgorithm.java",
                "sha": "5e3d0a887ba7e00c6968c5de9e94db4d042899e7",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/PageProvider.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 4,
                "filename": "src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.area.AreaTreeHandler;\n import org.apache.fop.fo.Constants;\n@@ -74,6 +75,7 @@\n \n     /**\n      * Main constructor.\n+     * @param ath the area tree handler\n      * @param ps The page-sequence the provider operates on\n      */\n     public PageProvider(AreaTreeHandler ath, PageSequence ps) {\n@@ -258,10 +260,10 @@ private Page cacheNextPage(int index, boolean isBlank, boolean isLastPage) {\n             if (!pageSeq.getMainFlow().getFlowName().equals(body.getRegionName())) {\n                 // this is fine by the XSL Rec (fo:flow's flow-name can be mapped to\n                 // any region), but we don't support it yet.\n-                throw new FOPException(\"Flow '\" + pageSeq.getMainFlow().getFlowName()\n-                    + \"' does not map to the region-body in page-master '\"\n-                    + spm.getMasterName() + \"'.  FOP presently \"\n-                    + \"does not support this.\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        pageSeq.getUserAgent().getEventBroadcaster());\n+                eventProducer.flowNotMappingToRegionBody(this,\n+                        pageSeq.getMainFlow().getFlowName(), spm.getMasterName(), spm.getLocator());\n             }\n             Page page = new Page(spm, index, pageNumberString, isBlank);\n             //Set unique key obtained from the AreaTreeHandler",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/PageProvider.java",
                "sha": "037f02094467ca88ff6a5890c225a075c4b924ae",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 11,
                "filename": "src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "patch": "@@ -29,10 +29,12 @@\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.area.RegionReference;\n-import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.Constants;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.pagination.PageSequence;\n import org.apache.fop.fo.pagination.SideRegion;\n import org.apache.fop.fo.pagination.StaticContent;\n+import org.apache.fop.layoutmgr.PageBreakingAlgorithm.PageBreakingLayoutListener;\n import org.apache.fop.layoutmgr.inline.InlineLevelLayoutManager;\n import org.apache.fop.layoutmgr.inline.TextLayoutManager;\n import org.apache.fop.traits.MinOptMax;\n@@ -240,12 +242,17 @@ public void doLayout() {\n         breaker.doLayout(targetBPD, autoHeight);\n         if (breaker.isOverflow()) {\n             if (!autoHeight) {\n-                //Overflow handling\n-                if (regionFO.getOverflow() == EN_ERROR_IF_OVERFLOW) {\n-                    //TODO throw layout exception\n-                }\n-                log.warn(FONode.decorateWithContextInfo(\n-                        \"static-content overflows the available area.\", fobj));\n+                String page = getPSLM().getCurrentPage().getPageViewport().getPageNumberString();\n+                \n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getStaticContentFO().getUserAgent().getEventBroadcaster());\n+                boolean canRecover = (regionFO.getOverflow() != EN_ERROR_IF_OVERFLOW); \n+                boolean needClip = (regionFO.getOverflow() == Constants.EN_HIDDEN\n+                        || regionFO.getOverflow() == Constants.EN_ERROR_IF_OVERFLOW);\n+                eventProducer.regionOverflow(this, regionFO.getName(),\n+                        page,\n+                        breaker.getOverflowAmount(), needClip, canRecover,\n+                        getStaticContentFO().getLocator());\n             }\n         }\n     }\n@@ -262,7 +269,7 @@ protected StaticContent getStaticContentFO() {\n         private StaticContentLayoutManager lm;\n         private int displayAlign;\n         private int ipd;\n-        private boolean overflow = false;\n+        private int overflow = 0;\n         \n         public StaticContentBreaker(StaticContentLayoutManager lm, int ipd, \n                 int displayAlign) {\n@@ -288,9 +295,26 @@ protected boolean isPartOverflowRecoveryActivated() {\n         }\n \n         public boolean isOverflow() {\n+            return (this.overflow != 0);\n+        }\n+        \n+        public int getOverflowAmount() {\n             return this.overflow;\n         }\n         \n+        /** {@inheritDoc} */\n+        protected PageBreakingLayoutListener createLayoutListener() {\n+            return new PageBreakingLayoutListener() {\n+\n+                public void notifyOverflow(int part, int amount, FObj obj) {\n+                    if (StaticContentBreaker.this.overflow == 0) {\n+                        StaticContentBreaker.this.overflow = amount;\n+                    }\n+                }\n+                \n+            };\n+        }\n+\n         protected LayoutManager getTopLevelLM() {\n             return lm;\n         }\n@@ -340,9 +364,6 @@ protected void addAreas(PositionIterator posIter, LayoutContext context) {\n         \n         protected void doPhase3(PageBreakingAlgorithm alg, int partCount, \n                 BlockSequence originalList, BlockSequence effectiveList) {\n-            if (partCount > 1) {\n-                overflow = true;\n-            }\n             //Rendering all parts (not just the first) at once for the case where the parts that \n             //overflow should be visible.\n             alg.removeAllPageBreaks();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/StaticContentLayoutManager.java",
                "sha": "763ddf58d2983e6d45f77bf0c7c5cfb616aa622f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "patch": "@@ -60,7 +60,6 @@\n      */\n     private static Log log = LogFactory.getLog(ContentLayoutManager.class);\n \n-    private FOUserAgent userAgent;\n     private Area holder;\n     private int stackSize;\n     private LayoutManager parentLM;",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/ContentLayoutManager.java",
                "sha": "2af844c5c9f6de6e988741e1c4997fd5394dd432",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.layoutmgr.inline;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for inline-level layout managers.\n+ */\n+public interface InlineLevelEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static InlineLevelEventProducer get(EventBroadcaster broadcaster) {\n+            return (InlineLevelEventProducer)broadcaster.getEventProducerFor(\n+                    InlineLevelEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * fo:leader with \"use-content\" but without children.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void leaderWithoutContent(Object source, Locator loc);\n+    \n+    /**\n+     * A line overflows.\n+     * @param source the event source\n+     * @param line the number number\n+     * @param overflowLength the length by which the content overflows the available space (in mpt)\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void lineOverflows(Object source, int line, int overflowLength, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/InlineLevelEventProducer.java",
                "sha": "51d2720cbffb2d23080dbba1061d195fddfa537c",
                "status": "added"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "patch": "@@ -19,11 +19,15 @@\n \n package org.apache.fop.layoutmgr.inline;\n \n+import java.util.LinkedList;\n+import java.util.List;\n+\n import org.apache.fop.area.Trait;\n import org.apache.fop.area.inline.FilledArea;\n import org.apache.fop.area.inline.InlineArea;\n import org.apache.fop.area.inline.Space;\n import org.apache.fop.area.inline.TextArea;\n+import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.flow.Leader;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -41,10 +45,6 @@\n import org.apache.fop.layoutmgr.TraitSetter;\n import org.apache.fop.traits.MinOptMax;\n \n-import java.util.List;\n-import java.util.LinkedList;\n-import org.apache.fop.fo.FObj;\n-\n /**\n  * LayoutManager for the fo:leader formatting object\n  */\n@@ -159,7 +159,9 @@ private InlineArea getLeaderInlineArea(LayoutContext context) {\n             leaderArea = fa;\n         } else if (fobj.getLeaderPattern() == EN_USECONTENT) {\n             if (fobj.getChildNodes() == null) {\n-                fobj.getLogger().error(\"Leader use-content with no content\");\n+                InlineLevelEventProducer eventProducer = InlineLevelEventProducer.Provider.get(\n+                        getFObj().getUserAgent().getEventBroadcaster());\n+                eventProducer.leaderWithoutContent(this, getFObj().getLocator());\n                 return null;\n             }\n \n@@ -339,9 +341,7 @@ public LinkedList getChangedKnuthElements(List oldList,\n         return returnList;\n     }\n \n-    /**\n-     * {@inheritDoc} \n-     */\n+    /** {@inheritDoc} */\n     public int getBaseLength(int lengthBase, FObj fobj) {\n         return getParent().getBaseLength(lengthBase, getParent().getFObj());\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/LeaderLayoutManager.java",
                "sha": "1e7c793dfa5d1fd06e3c551005bbc2e4582f3cba",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "patch": "@@ -34,7 +34,6 @@\n import org.apache.fop.datatypes.Length;\n import org.apache.fop.datatypes.Numeric;\n import org.apache.fop.fo.Constants;\n-import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.Block;\n import org.apache.fop.fo.properties.CommonHyphenation;\n import org.apache.fop.fonts.Font;\n@@ -384,11 +383,12 @@ public void updateData2(KnuthNode bestActiveNode,\n             if (log.isWarnEnabled()) {\n                 int lack = difference + bestActiveNode.availableShrink; \n                 if (lack < 0) {\n+                    InlineLevelEventProducer eventProducer\n+                        = InlineLevelEventProducer.Provider.get(\n+                            getFObj().getUserAgent().getEventBroadcaster());\n+                    eventProducer.lineOverflows(this, addedPositions + 1,\n+                            -lack, getFObj().getLocator());\n                     String textDiff = (lack < -50000 ? \"more than 50 points\" : (-lack) + \"mpt\");\n-                    log.warn(FONode.decorateWithContextInfo(\n-                            \"Line \" + (addedPositions + 1) \n-                            + \" of a paragraph overflows the available area by \"\n-                            + textDiff + \".\", getFObj()));\n                 }\n             }\n             \n@@ -1430,7 +1430,9 @@ private void findHyphenationPoints(Paragraph currPar) {\n                         auxCount++;\n                     }\n                 }\n-                log.trace(\" Word to hyphenate: \" + sbChars.toString());\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\" Word to hyphenate: \" + sbChars.toString());\n+                }\n                 // find hyphenation points\n                 HyphContext hc = getHyphenContext(sbChars);\n                 // ask each LM to hyphenate its word fragment",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/inline/LineLayoutManager.java",
                "sha": "1258fbe186d5d0d8f2e10b9685825f4b49fd3012",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "patch": "@@ -25,9 +25,9 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.datatypes.PercentBaseContext;\n-import org.apache.fop.datatypes.Length;\n \n+import org.apache.fop.datatypes.Length;\n+import org.apache.fop.datatypes.PercentBaseContext;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableColumn;\n@@ -77,12 +77,14 @@ private void prepareColumns() {\n                 }\n             }\n             //Post-processing the list (looking for gaps)\n+            //TODO The following block could possibly be removed\n             int pos = 1;\n             ListIterator ppIter = columns.listIterator();\n             while (ppIter.hasNext()) {\n                 TableColumn col = (TableColumn)ppIter.next();\n                 if (col == null) {\n-                    log.error(\"Found a gap in the table-columns at position \" + pos);\n+                    assert false; //Gaps are filled earlier by fo.flow.table.Table.finalizeColumns()\n+                    //log.error(\"Found a gap in the table-columns at position \" + pos);\n                 }\n                 pos++;\n             }\n@@ -100,7 +102,9 @@ public TableColumn getColumn(int index) {\n         if (index > size) {\n             if (index > maxColIndexReferenced) {\n                 maxColIndexReferenced = index;\n-                if (!(size == 1 && getColumn(1).isImplicitColumn())) {\n+                TableColumn col = getColumn(1);\n+                if (!(size == 1 && col.isImplicitColumn())) {\n+                    assert false; //TODO Seems to be removable as this is now done in the FO tree\n                     log.warn(FONode.decorateWithContextInfo(\n                             \"There are fewer table-columns than are needed. \"\n                             + \"Column \" + index + \" was accessed, but only \"\n@@ -193,8 +197,7 @@ protected double computeTableUnit(TableLayoutManager tlm) {\n             if (colWidth != null) {\n                 sumCols += colWidth.getValue(tlm);\n                 if (colWidth instanceof TableColLength) {\n-                    factors += \n-                        ((TableColLength) colWidth).getTableUnits();\n+                    factors += ((TableColLength) colWidth).getTableUnits();\n                 }\n             }\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/ColumnSetup.java",
                "sha": "bd032e6108b61269da9c4065c82c85cab81d3a1e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "patch": "@@ -24,6 +24,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.flow.table.EffRow;\n import org.apache.fop.fo.flow.table.GridUnit;\n@@ -32,6 +33,7 @@\n import org.apache.fop.fo.flow.table.TableRow;\n import org.apache.fop.fo.properties.CommonBorderPaddingBackground;\n import org.apache.fop.fo.properties.LengthRangeProperty;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n import org.apache.fop.layoutmgr.ElementListObserver;\n import org.apache.fop.layoutmgr.LayoutContext;\n import org.apache.fop.layoutmgr.MinOptMaxUtil;\n@@ -193,7 +195,9 @@ private void computeRowHeights() {\n             row.setHeight(rowHeights[rgi]);\n             row.setExplicitHeight(explicitRowHeight);\n             // TODO re-enable and improve after clarification\n+            //See http://markmail.org/message/h25ycwwu7qglr4k4\n //            if (maxCellBPD > row.getExplicitHeight().max) {\n+//old:\n //                log.warn(FONode.decorateWithContextInfo(\n //                        \"The contents of row \" + (row.getIndex() + 1) \n //                        + \" are taller than they should be (there is a\"\n@@ -203,10 +207,12 @@ private void computeRowHeights() {\n //                        + \" to \" + maxCellBPD + \" millipoints, but the row shouldn't get\"\n //                        + \" any taller than \" + row.getExplicitHeight() + \" millipoints.\", \n //                        row.getTableRow()));\n+//new (with events):\n+//                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Factory.create(\n+//                        tableRow.getUserAgent().getEventBroadcaster());\n+//                eventProducer.rowTooTall(this, row.getIndex() + 1,\n+//                        maxCellBPD, row.getExplicitHeight().max, tableRow.getLocator());\n //            }\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"  height=\" + rowHeights[rgi] + \" explicit=\" + explicitRowHeight);\n-            }\n         }\n     }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/RowGroupLayoutManager.java",
                "sha": "72e78b84f2596cca3944b4e5621db7f39114fb3c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 8,
                "filename": "src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "patch": "@@ -26,6 +26,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n import org.apache.fop.datatypes.LengthBase;\n@@ -34,6 +35,7 @@\n import org.apache.fop.fo.FObj;\n import org.apache.fop.fo.flow.table.Table;\n import org.apache.fop.fo.flow.table.TableColumn;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n import org.apache.fop.layoutmgr.BlockStackingLayoutManager;\n import org.apache.fop.layoutmgr.BreakElement;\n import org.apache.fop.layoutmgr.ConditionalElementListener;\n@@ -189,9 +191,9 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n             updateContentAreaIPDwithOverconstrainedAdjust(contentIPD);\n         } else {\n             if (!getTable().isAutoLayout()) {\n-                log.info(\"table-layout=\\\"fixed\\\" and width=\\\"auto\\\", \"\n-                        + \"but auto-layout not supported \" \n-                        + \"=> assuming width=\\\"100%\\\"\");\n+                BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                        getTable().getUserAgent().getEventBroadcaster());\n+                eventProducer.tableFixedAutoWidthNotSupported(this, getTable().getLocator());\n             }\n             updateContentAreaIPDwithOverconstrainedAdjust();\n         }\n@@ -204,11 +206,11 @@ public LinkedList getNextKnuthElements(LayoutContext context, int alignment) {\n         }\n         int availableIPD = referenceIPD - getIPIndents();\n         if (getContentAreaIPD() > availableIPD) {\n-            log.warn(FONode.decorateWithContextInfo(\n-                    \"The extent in inline-progression-direction (width) of a table is\"\n-                    + \" bigger than the available space (\" \n-                    + getContentAreaIPD() + \"mpt > \" + context.getRefIPD() + \"mpt)\", \n-                    getTable()));\n+            BlockLevelEventProducer eventProducer = BlockLevelEventProducer.Provider.get(\n+                    getTable().getUserAgent().getEventBroadcaster());\n+            eventProducer.objectTooWide(this, getTable().getName(),\n+                    getContentAreaIPD(), context.getRefIPD(),\n+                    getTable().getLocator());\n         }\n         \n         /* initialize unit to determine computed values",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/layoutmgr/table/TableLayoutManager.java",
                "sha": "720ca5faabb8d911638c489e0c67927720d8b8dc",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "patch": "@@ -30,12 +30,14 @@\n \n import org.apache.batik.bridge.BridgeContext;\n import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.dom.AbstractDocument;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n import org.apache.batik.gvt.GraphicsNode;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n \n import org.apache.fop.render.RendererContext.RendererContextWrapper;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n \n /**\n@@ -46,9 +48,6 @@\n  */\n public abstract class AbstractGenericSVGHandler implements XMLHandler, RendererContextConstants {\n \n-    /** logging instance */\n-    private static Log log = LogFactory.getLog(AbstractGenericSVGHandler.class);\n-\n     /** {@inheritDoc} */\n     public void handleXML(RendererContext context, \n                 Document doc, String ns) throws Exception {\n@@ -73,7 +72,7 @@ protected void renderSVGDocument(final RendererContext context,\n \n         //Prepare\n         SVGUserAgent ua = new SVGUserAgent(\n-                context.getUserAgent().getSourcePixelUnitToMillimeter(),\n+                context.getUserAgent(),\n                 new AffineTransform());\n         GVTBuilder builder = new GVTBuilder();\n         final BridgeContext ctx = new BridgeContext(ua);\n@@ -83,7 +82,9 @@ protected void renderSVGDocument(final RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \" + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n \n@@ -114,6 +115,20 @@ public Dimension getImageSize() {\n                 x, y, wrappedContext.getWidth(), wrappedContext.getHeight()); \n     }\n \n+    /**\n+     * Gets the document URI from a Document instance if possible.\n+     * @param doc the Document\n+     * @return the URI or null\n+     */\n+    protected String getDocumentURI(Document doc) {\n+        String docURI = null;\n+        if (doc instanceof AbstractDocument) {\n+            AbstractDocument level3Doc = (AbstractDocument)doc;\n+            docURI = level3Doc.getDocumentURI();\n+        }\n+        return docURI;\n+    }\n+    \n     /**\n      * Override this method to update the renderer context if it needs special settings for\n      * certain conditions.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractGenericSVGHandler.java",
                "sha": "2c47875d96be5ad19c362ed41d605c2753851424",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.batik.parser.AWTTransformProducer;\n \n import org.apache.xmlgraphics.image.loader.ImageSize;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.area.Area;\n import org.apache.fop.area.Block;\n@@ -45,7 +46,6 @@\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.FontMetrics;\n import org.apache.fop.traits.BorderProps;\n-import org.apache.fop.util.QName;\n \n /**\n  * Abstract base class for renderers like PDF and PostScript where many painting operations",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractPathOrientedRenderer.java",
                "sha": "b38d973c543d3c2162b83123df15f579a56895ac",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractRenderer.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/AbstractRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 14,
                "filename": "src/java/org/apache/fop/render/AbstractRenderer.java",
                "patch": "@@ -67,6 +67,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.area.inline.WordArea;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fonts.FontInfo;\n \n@@ -113,21 +114,15 @@\n     \n     private Set warnedXMLHandlers;\n     \n-    /**\n-     *  {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public abstract void setupFontInfo(FontInfo fontInfo);\n \n-    /**\n-     *  {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void setUserAgent(FOUserAgent agent) {\n         userAgent = agent;\n     }\n \n-    /**\n-     *  @return the associated <code>FOUserAgent</code>\n-     */\n+    /** {@inheritDoc} */\n     public FOUserAgent getUserAgent() {\n         return userAgent;\n     }\n@@ -797,10 +792,11 @@ public void renderXML(RendererContext ctx, Document doc,\n                     = new XMLHandlerConfigurator(userAgent);\n                 configurator.configure(ctx, namespace);\n                 handler.handleXML(ctx, doc, namespace);\n-            } catch (Throwable t) {\n+            } catch (Exception e) {\n                 // could not handle document\n-                log.error(\"Some XML content will be ignored. \"\n-                        + \"Could not render XML\", t);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        ctx.getUserAgent().getEventBroadcaster());\n+                eventProducer.foreignXMLProcessingError(this, doc, namespace, e);\n             }\n         } else {\n             if (warnedXMLHandlers == null) {\n@@ -809,8 +805,9 @@ public void renderXML(RendererContext ctx, Document doc,\n             if (!warnedXMLHandlers.contains(namespace)) {\n                 // no handler found for document\n                 warnedXMLHandlers.add(namespace);\n-                log.warn(\"Some XML content will be ignored. \"\n-                        + \"No handler defined for XML: \" + namespace);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        ctx.getUserAgent().getEventBroadcaster());\n+                eventProducer.foreignXMLNoHandler(this, doc, namespace);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/AbstractRenderer.java",
                "sha": "ca3d007d0238a49c824f76819e3ef01f9a277575",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/Renderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/Renderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/Renderer.java",
                "patch": "@@ -88,6 +88,12 @@ void stopRenderer()\n      */\n     void setUserAgent(FOUserAgent agent);\n \n+    /**\n+     * Returns the associated user agent.\n+     * @return the user agent\n+     */\n+    FOUserAgent getUserAgent();\n+    \n     /**\n      * Set up the given FontInfo.\n      *",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/Renderer.java",
                "sha": "03b4582f7069e5e59120a7021e246b7a49f1c2e1",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/RendererEventProducer.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/RendererEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/RendererEventProducer.java",
                "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render;\n+\n+import java.io.IOException;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for rendering-specific events.\n+ */\n+public interface RendererEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static RendererEventProducer get(EventBroadcaster broadcaster) {\n+            return (RendererEventProducer)broadcaster.getEventProducerFor(\n+                    RendererEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * I/O error while writing target file.\n+     * @param source the event source\n+     * @param ioe the original I/O error\n+     * @event.severity ERROR\n+     */\n+    void ioError(Object source, IOException ioe);\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/RendererEventProducer.java",
                "sha": "365c8f430bc19ebfcd2c6c486481e2d3ab7586f5",
                "status": "added"
            },
            {
                "additions": 63,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.afp;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for AFP-specific events.\n+ */\n+public interface AFPEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static AFPEventProducer get(EventBroadcaster broadcaster) {\n+            return (AFPEventProducer)broadcaster.getEventProducerFor(\n+                    AFPEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for AFP. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Warn about using default font setup.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void warnDefaultFontSetup(Object source);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPEventProducer.java",
                "sha": "615c54c329a51da516b7a1b00fce39bff24ce41f",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.afp.AFPEventProducer.warnDefaultFontSetup\">No AFP fonts configured. Using default setup.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPEventProducer.xml",
                "sha": "8eec9b6567f5f6c985b3ede2db492e1c8e468174",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/afp/AFPRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "patch": "@@ -70,6 +70,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fonts.FontInfo;\n@@ -291,7 +292,9 @@ public void setupFontInfo(FontInfo inFontInfo) {\n                 }\n             }\n         } else {\n-            log.warn(\"No AFP fonts configured - using default setup\");\n+            AFPEventProducer eventProducer = AFPEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.warnDefaultFontSetup(this);\n         }\n         if (this.fontInfo.fontLookup(\"sans-serif\", \"normal\", 400) == null) {\n             CharacterSet cs  = new FopCharacterSet(\"T1V10500\", \"Cp500\", \"CZH200  \",\n@@ -909,7 +912,7 @@ protected RendererContext createRendererContext(int x, int y, int width, int hei\n         RendererContext context;\n         context = super.createRendererContext(x, y, width, height, foreignAttributes);\n         context.setProperty(AFPRendererContextConstants.AFP_GRAYSCALE,\n-                new Boolean(!this.colorImages));\n+                Boolean.valueOf(!this.colorImages));\n         return context;\n     }\n \n@@ -1014,13 +1017,17 @@ public void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                 }\n \n             } catch (ImageException ie) {\n-                log.error(\"Error while processing image: \"\n-                        + (info != null ? info.toString() : uri), ie);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n             } catch (FileNotFoundException fe) {\n-                log.error(fe.getMessage());\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n             } catch (IOException ioe) {\n-                log.error(\"I/O error while processing image: \"\n-                        + (info != null ? info.toString() : uri), ioe);\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n             }\n             \n             /*\n@@ -1195,7 +1202,9 @@ public void drawBufferedImage(RenderedImage image, int imageResolution, int x,\n                         image.getWidth(), image.getHeight(), this.bitsPerPixel);\n             }\n         } catch (IOException ioe) {\n-            log.error(\"Error while serializing bitmap: \" + ioe.getMessage(), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageWritingError(this, ioe);\n         }\n     }\n \n@@ -1305,8 +1314,9 @@ public void renderText(TextArea text) {\n         } catch (Throwable ex) {\n             encoding = AFPConstants.EBCIDIC_ENCODING;\n             log.warn(\n-                \"renderText():: Error getting encoding for font \"\n-                + \" - using default encoding \"\n+                \"renderText():: Error getting encoding for font '\"\n+                + tf.getFullName()\n+                + \"' - using default encoding \"\n                 + encoding);\n         }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/afp/AFPRenderer.java",
                "sha": "83b8048f90f3ac15eab868785adb208fac950361",
                "status": "modified"
            },
            {
                "additions": 80,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "changes": 80,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "patch": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.bitmap;\n+\n+import java.io.IOException;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the bitmap renderers.\n+ */\n+public interface BitmapRendererEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static BitmapRendererEventProducer get(EventBroadcaster broadcaster) {\n+            return (BitmapRendererEventProducer)broadcaster.getEventProducerFor(\n+                    BitmapRendererEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * No filename information available. Stopping early after the first page.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void stoppingAfterFirstPageNoFilename(Object source);\n+    \n+    /**\n+     * Image writer does not support multiple images. Only the first page has been produced.\n+     * @param source the event source\n+     * @event.severity WARN\n+     */\n+    void stoppingAfterFirstPageNoMultiWriter(Object source);\n+    \n+    /**\n+     * No ImageWriter found.\n+     * @param source the event source\n+     * @param mime the target MIME type\n+     * @throws IOException the I/O error provoked by the method call\n+     * @event.severity FATAL\n+     */\n+    void noImageWriterFound(Object source, String mime) throws IOException;\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.java",
                "sha": "7b26d077175caddcf1153d036b78c0154bc39594",
                "status": "added"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.stoppingAfterFirstPageNoFilename\">No filename information available. Stopping early after the first page.</message>\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.stoppingAfterFirstPageNoMultiWriter\">Image writer does not support multiple images. Only the first page has been produced.</message>\n+  <message key=\"org.apache.fop.render.bitmap.BitmapRendererEventProducer.noImageWriterFound\">Could not get an ImageWriter to produce \"{mime}\". The most likely explanation for this is a class loading problem.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml",
                "sha": "a05af3e217ca7bc7cedf7c4848a3971da99cd07a",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/PNGRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "patch": "@@ -23,12 +23,12 @@\n import java.io.IOException;\n import java.io.OutputStream;\n \n+import org.apache.commons.io.IOUtils;\n+\n import org.apache.xmlgraphics.image.writer.ImageWriter;\n import org.apache.xmlgraphics.image.writer.ImageWriterParams;\n import org.apache.xmlgraphics.image.writer.ImageWriterRegistry;\n \n-import org.apache.commons.io.IOUtils;\n-\n import org.apache.fop.apps.MimeConstants;\n import org.apache.fop.area.PageViewport;\n import org.apache.fop.render.java2d.Java2DRenderer;\n@@ -74,8 +74,10 @@ public void stopRenderer() throws IOException {\n \n             OutputStream os = getCurrentOutputStream(i);\n             if (os == null) {\n-                log.warn(\"No filename information available.\"\n-                        + \" Stopping early after the first page.\");\n+                BitmapRendererEventProducer eventProducer\n+                    = BitmapRendererEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                eventProducer.stoppingAfterFirstPageNoFilename(this);\n                 break;\n             }\n             try {\n@@ -104,9 +106,10 @@ private void writeImage(OutputStream os, RenderedImage image) throws IOException\n         // Encode PNG image\n         ImageWriter writer = ImageWriterRegistry.getInstance().getWriterFor(getMimeType());\n         if (writer == null) {\n-            throw new IOException(\"Could not get an ImageWriter to produce \" \n-                    + getMimeType() + \". The most likely explanation for this is a class\"\n-                    + \" loading problem.\");\n+            BitmapRendererEventProducer eventProducer\n+                = BitmapRendererEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+            eventProducer.noImageWriterFound(this, getMimeType());\n         }\n         if (log.isDebugEnabled()) {\n             log.debug(\"Writing image using \" + writer.getClass().getName());",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/PNGRenderer.java",
                "sha": "8613ef7b84c36f6ff796c63620e6c7e64cd3f280",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "patch": "@@ -129,7 +129,10 @@ public void stopRenderer() throws IOException {\n         // Creates writer\n         ImageWriter writer = ImageWriterRegistry.getInstance().getWriterFor(getMimeType());\n         if (writer == null) {\n-            throw new NullPointerException(\"No ImageWriter for \" + getMimeType() + \" available!\");\n+            BitmapRendererEventProducer eventProducer\n+                = BitmapRendererEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+            eventProducer.noImageWriterFound(this, getMimeType());\n         }\n         if (writer.supportsMultiImageWriter()) {\n             MultiImageWriter multiWriter = writer.createMultiImageWriter(outputStream);\n@@ -145,8 +148,10 @@ public void stopRenderer() throws IOException {\n         } else {\n             writer.writeImage((RenderedImage) pageImagesItr.next(), outputStream, writerParams);\n             if (pageImagesItr.hasNext()) {\n-                log.error(\"Image encoder does not support multiple images. Only the first page\"\n-                        + \" has been produced.\");\n+                BitmapRendererEventProducer eventProducer\n+                    = BitmapRendererEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                eventProducer.stoppingAfterFirstPageNoFilename(this);\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/bitmap/TIFFRenderer.java",
                "sha": "9291427d2a8efc529b5c6d43e27dccb4544ae786",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/Java2DRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "patch": "@@ -66,6 +66,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -930,13 +931,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                         pos, foreignAttributes);\n             }\n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n-        } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/java2d/Java2DRenderer.java",
                "sha": "0ffe3307ad0250cd47e3374ed7a049b3f8d22294",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 40,
                "filename": "src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "patch": "@@ -23,26 +23,25 @@\n \n import org.w3c.dom.Document;\n \n-import org.apache.fop.render.Renderer;\n-import org.apache.fop.render.XMLHandler;\n-import org.apache.fop.render.RendererContext;\n-import org.apache.fop.svg.SVGUserAgent;\n-\n-// Commons-Logging\n+import org.apache.batik.bridge.BridgeContext;\n+import org.apache.batik.bridge.GVTBuilder;\n+import org.apache.batik.gvt.GraphicsNode;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import org.apache.batik.bridge.GVTBuilder;\n-import org.apache.batik.bridge.BridgeContext;\n-import org.apache.batik.dom.svg.SVGDOMImplementation;\n-import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.fop.render.AbstractGenericSVGHandler;\n+import org.apache.fop.render.Renderer;\n+import org.apache.fop.render.RendererContext;\n+import org.apache.fop.svg.SVGEventProducer;\n+import org.apache.fop.svg.SVGUserAgent;\n \n /**\n  * Java2D XML handler for SVG (uses Apache Batik).\n  * This handler handles XML for foreign objects when rendering to Java2D.\n  * The properties from the Java2D renderer are subject to change.\n  */\n-public class Java2DSVGHandler implements XMLHandler, Java2DRendererContextConstants {\n+public class Java2DSVGHandler extends AbstractGenericSVGHandler\n+            implements Java2DRendererContextConstants {\n \n     /** logging instance */\n     private static Log log = LogFactory.getLog(Java2DSVGHandler.class);\n@@ -54,16 +53,6 @@ public Java2DSVGHandler() {\n         //nop\n     }\n \n-    /** {@inheritDoc} */\n-    public void handleXML(RendererContext context, \n-                Document doc, String ns) throws Exception {\n-        Java2DInfo pdfi = getJava2DInfo(context);\n-\n-        if (SVGDOMImplementation.SVG_NAMESPACE_URI.equals(ns)) {\n-            renderSVGDocument(context, doc, pdfi);\n-        }\n-    }\n-\n     /**\n      * Get the pdf information from the render context.\n      *\n@@ -106,23 +95,18 @@ public String toString() {\n         }\n     }\n     \n-    /**\n-     * Render the svg document.\n-     * @param context the renderer context\n-     * @param doc the svg document\n-     * @param info the pdf information of the current context\n-     */\n+    /** {@inheritDoc} */\n     protected void renderSVGDocument(RendererContext context,\n-                                     Document doc,\n-                                     Java2DInfo info) {\n+                                     Document doc) {\n+        Java2DInfo info = getJava2DInfo(context);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"renderSVGDocument(\" + context + \", \" + doc + \", \" + info + \")\");\n+        }\n \n-        log.debug(\"renderSVGDocument(\" + context + \", \" + doc + \", \" + info + \")\");\n-        \n         int x = info.currentXPosition;\n         int y = info.currentYPosition;\n         \n-        float ptom = context.getUserAgent().getSourcePixelUnitToMillimeter();\n-        SVGUserAgent ua = new SVGUserAgent(ptom, new AffineTransform());\n+        SVGUserAgent ua = new SVGUserAgent(context.getUserAgent(), new AffineTransform());\n         \n         GVTBuilder builder = new GVTBuilder();\n         BridgeContext ctx = new BridgeContext(ua);\n@@ -131,7 +115,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \" + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         \n@@ -158,7 +144,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root.paint(info.state.getGraph());\n         } catch (Exception e) {\n-            log.error(\"Error while painting SVG\", e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n         }\n         \n         info.state.getGraph().setTransform(origTransform);\n@@ -169,9 +157,4 @@ public boolean supportsRenderer(Renderer renderer) {\n         return (renderer instanceof Java2DRenderer);\n     }\n \n-\n-    /** {@inheritDoc} */\n-    public String getNamespace() {\n-        return SVGDOMImplementation.SVG_NAMESPACE_URI;\n-    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/java2d/Java2DSVGHandler.java",
                "sha": "64ac823fcbd9de7208887e1f02ecfccdb5db5e9d",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.pcl;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PCL renderer.\n+ */\n+public interface PCLEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PCLEventProducer get(EventBroadcaster broadcaster) {\n+            return (PCLEventProducer)broadcaster.getEventProducerFor(\n+                    PCLEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Paper type could not be determined. Falling back to another.\n+     * @param source the event source\n+     * @param pageWidth the page width (in millipoints)\n+     * @param pageHeight the page height (in millipoints)\n+     * @param fallbackPaper the paper type that will be used instead\n+     * @event.severity WARN\n+     */\n+    void paperTypeUnavailable(Object source, long pageWidth, long pageHeight, String fallbackPaper);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLEventProducer.java",
                "sha": "3e72de293abe59065caadc08fef2ab3791f0bdc3",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.pcl.PCLEventProducer.paperTypeUnavailable\">Paper type ({pageWidth} x {pageHeight} mpt) could not be determined. Falling back to: {fallbackPaper}</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLEventProducer.xml",
                "sha": "a3b36fd60b45ebefaf0190d88c4c5bb8c0797b07",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLGenerator.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "patch": "@@ -43,9 +43,11 @@\n import java.util.Locale;\n \n import org.apache.commons.io.output.ByteArrayOutputStream;\n-import org.apache.fop.util.UnitConv;\n+\n import org.apache.xmlgraphics.image.GraphicsUtil;\n \n+import org.apache.fop.util.UnitConv;\n+\n /**\n  * This class provides methods for generating PCL print files.\n  */\n@@ -355,16 +357,16 @@ protected void fillRect(int w, int h, Color col) throws IOException {\n         if (usePCLShades \n                 || Color.black.equals(col)\n                 || Color.white.equals(col)) {\n-            writeCommand(\"*c\" + formatDouble4(w / 100) + \"h\" \n-                              + formatDouble4(h / 100) + \"V\");\n+            writeCommand(\"*c\" + formatDouble4(w / 100.0) + \"h\" \n+                              + formatDouble4(h / 100.0) + \"V\");\n             int lineshade = convertToPCLShade(col);\n             writeCommand(\"*c\" + lineshade + \"G\");\n             writeCommand(\"*c2P\"); //Shaded fill\n         } else {\n             defineGrayscalePattern(col, 32, DITHER_MATRIX_4X4);\n \n-            writeCommand(\"*c\" + formatDouble4(w / 100) + \"h\" \n-                              + formatDouble4(h / 100) + \"V\");\n+            writeCommand(\"*c\" + formatDouble4(w / 100.0) + \"h\" \n+                              + formatDouble4(h / 100.0) + \"V\");\n             writeCommand(\"*c32G\");\n             writeCommand(\"*c4P\"); //User-defined pattern\n         }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLGenerator.java",
                "sha": "5ca9a8bf9edc33d298610eb08dad250cedb76f15",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 10,
                "filename": "src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "patch": "@@ -58,6 +58,7 @@\n import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n import org.apache.xmlgraphics.java2d.GraphicContext;\n import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n+import org.apache.xmlgraphics.util.QName;\n \n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.MimeConstants;\n@@ -77,6 +78,7 @@\n import org.apache.fop.area.inline.Viewport;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n@@ -85,12 +87,12 @@\n import org.apache.fop.render.PrintRenderer;\n import org.apache.fop.render.RendererContext;\n import org.apache.fop.render.RendererContextConstants;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.java2d.FontMetricsMapper;\n import org.apache.fop.render.java2d.FontSetup;\n import org.apache.fop.render.java2d.Java2DRenderer;\n import org.apache.fop.render.pcl.extensions.PCLElementMapping;\n import org.apache.fop.traits.BorderProps;\n-import org.apache.fop.util.QName;\n import org.apache.fop.util.UnitConv;\n \n /* Note:\n@@ -208,7 +210,9 @@ public void setupFontInfo(FontInfo inFontInfo) {\n      */\n     protected void handleIOTrouble(IOException ioe) {\n         if (!ioTrouble) {\n-            log.error(\"Error while writing to target file\", ioe);\n+            RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ioError(this, ioe);\n             ioTrouble = true;\n         }\n     }\n@@ -417,11 +421,15 @@ private void selectPageFormat(long pagewidth, long pageheight) throws IOExceptio\n         \n         if (this.currentPageDefinition == null) {\n             this.currentPageDefinition = PCLPageDefinition.getDefaultPageDefinition();\n-            log.warn(\"Paper type could not be determined. Falling back to: \" \n-                    + this.currentPageDefinition.getName());\n+            PCLEventProducer eventProducer = PCLEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.paperTypeUnavailable(this, pagewidth, pageheight,\n+                    this.currentPageDefinition.getName());\n+        }\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"page size: \" + currentPageDefinition.getPhysicalPageSize());\n+            log.debug(\"logical page: \" + currentPageDefinition.getLogicalPageRect());\n         }\n-        log.debug(\"page size: \" + currentPageDefinition.getPhysicalPageSize());\n-        log.debug(\"logical page: \" + currentPageDefinition.getLogicalPageRect());\n         if (this.currentPageDefinition.isLandscapeFormat()) {\n             gen.writeCommand(\"&l1O\"); //Orientation\n         } else {\n@@ -1107,12 +1115,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n             }\n \n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n         } catch (FileNotFoundException fe) {\n-            log.error(fe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            handleIOTrouble(ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLRenderer.java",
                "sha": "b89fba9c193ad89ae0260fa8212abf8715797aa5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pcl/PCLRendererContext.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "patch": "@@ -19,9 +19,10 @@\n \n package org.apache.fop.render.pcl;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.render.RendererContext;\n-import org.apache.fop.util.QName;\n \n /**\n  * Wrapper on the RendererContext to access the information structure for drawing ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pcl/PCLRendererContext.java",
                "sha": "422b9d51d48c33d2f982819717b882d85ac5f5e4",
                "status": "modified"
            },
            {
                "additions": 64,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "changes": 64,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.pdf;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PDF renderer.\n+ */\n+public interface PDFEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PDFEventProducer get(EventBroadcaster broadcaster) {\n+            return (PDFEventProducer)broadcaster.getEventProducerFor(\n+                    PDFEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * Some link targets haven't been fully resolved.\n+     * @param source the event source\n+     * @param count the number of unresolved links\n+     * @event.severity WARN\n+     */\n+    void nonFullyResolvedLinkTargets(Object source, int count);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFEventProducer.java",
                "sha": "f8b1bbb3304c894240a54c57c7ef2216e271bcda",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.pdf.PDFEventProducer.nonFullyResolvedLinkTargets\">{count} link target{count,equals,1,,s} could not be fully resolved and now point{count,equals,1,,s} to the top of the page or {count,equals,1,is,are} dysfunctional.</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFEventProducer.xml",
                "sha": "fd57d50996d6495b9a0d85248bb76451c712dfe1",
                "status": "added"
            },
            {
                "additions": 57,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "changes": 100,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 43,
                "filename": "src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "patch": "@@ -73,6 +73,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fo.extensions.xmp.XMPMetadata;\n@@ -490,13 +491,10 @@ protected void finishOpenGoTos() {\n                 PDFGoTo gt = (PDFGoTo) unfinishedGoTos.get(0);\n                 finishIDGoTo(gt, defaultPos);\n             }\n-            boolean one = count == 1;\n-            String pl = one ? \"\"    : \"s\";\n-            String ww = one ? \"was\" : \"were\";\n-            String ia = one ? \"is\"  : \"are\";\n-            log.warn(\"\" + count + \" link target\" + pl + \" could not be fully resolved and \"\n-                        + ww + \" now point to the top of the page or \"\n-                        + ia + \" dysfunctional.\");  // dysfunctional if pageref is null\n+            PDFEventProducer eventProducer = PDFEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.nonFullyResolvedLinkTargets(this, count);\n+            // dysfunctional if pageref is null\n         }\n     }\n \n@@ -555,16 +553,17 @@ public void processOffDocumentItem(OffDocumentItem odi) {\n \n     private void renderDestination(DestinationData dd) {\n         String targetID = dd.getIDRef();\n-        if (targetID != null && targetID.length() > 0) {\n-            PageViewport pv = dd.getPageViewport();\n-            if (pv == null) {\n-                log.warn(\"Unresolved destination item received: \" + dd.getIDRef());\n-            }\n+        if (targetID == null || targetID.length() == 0) {\n+            throw new IllegalArgumentException(\"DestinationData must contain a ID reference\");\n+        }\n+        PageViewport pv = dd.getPageViewport();\n+        if (pv != null) {\n             PDFGoTo gt = getPDFGoToForID(targetID, pv.getKey());\n             pdfDoc.getFactory().makeDestination(\n                     dd.getIDRef(), gt.makeReference());\n         } else {\n-            log.warn(\"DestinationData item with null or empty IDRef received.\");\n+            //Warning already issued by AreaTreeHandler (debug level is sufficient)\n+            log.debug(\"Unresolved destination item received: \" + dd.getIDRef());\n         }\n     }\n \n@@ -584,22 +583,22 @@ private void renderBookmarkItem(BookmarkData bookmarkItem,\n         PDFOutline pdfOutline = null;\n \n         String targetID = bookmarkItem.getIDRef();\n-        if (targetID != null && targetID.length() > 0) {\n-            PageViewport pv = bookmarkItem.getPageViewport();\n-            if (pv != null) {\n-                String pvKey = pv.getKey();\n-                PDFGoTo gt = getPDFGoToForID(targetID, pvKey);\n-                // create outline object:\n-                PDFOutline parent = parentBookmarkItem != null\n-                    ? parentBookmarkItem\n-                    : pdfDoc.getOutlineRoot();\n-                pdfOutline = pdfDoc.getFactory().makeOutline(parent,\n-                        bookmarkItem.getBookmarkTitle(), gt, bookmarkItem.showChildItems());\n-            } else {\n-                log.warn(\"Bookmark with IDRef \\\"\" + targetID + \"\\\" has a null PageViewport.\");\n-            }\n+        if (targetID == null || targetID.length() == 0) {\n+            throw new IllegalArgumentException(\"DestinationData must contain a ID reference\");\n+        }\n+        PageViewport pv = bookmarkItem.getPageViewport();\n+        if (pv != null) {\n+            String pvKey = pv.getKey();\n+            PDFGoTo gt = getPDFGoToForID(targetID, pvKey);\n+            // create outline object:\n+            PDFOutline parent = parentBookmarkItem != null\n+                ? parentBookmarkItem\n+                : pdfDoc.getOutlineRoot();\n+            pdfOutline = pdfDoc.getFactory().makeOutline(parent,\n+                    bookmarkItem.getBookmarkTitle(), gt, bookmarkItem.showChildItems());\n         } else {\n-            log.warn(\"Bookmark item with null or empty IDRef received.\");\n+            //Warning already issued by AreaTreeHandler (debug level is sufficient)\n+            log.debug(\"Bookmark with IDRef \\\"\" + targetID + \"\\\" has a null PageViewport.\");\n         }\n \n         for (int i = 0; i < bookmarkItem.getCount(); i++) {\n@@ -1368,15 +1367,8 @@ public void renderInlineParent(InlineParent ip) {\n                 if (annotsAllowed) {\n                     action = getPDFGoToForID(idRef, pvKey);\n                 }\n-            } else if (pvKeyOK) {\n-                log.warn(\"Internal link trait with PageViewport key \" + pvKey \n-                         + \" contains no ID reference.\");\n-            } else if (idRefOK) {\n-                log.warn(\"Internal link trait with ID reference \" + idRef \n-                         + \" contains no PageViewport key.\");\n             } else {\n-                log.warn(\"Internal link trait received with neither PageViewport key\"\n-                         + \" nor ID reference.\");\n+                //Warnings already issued by AreaTreeHandler\n             }\n         }\n \n@@ -1671,7 +1663,9 @@ protected void putImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                             x, y, posInt.width, posInt.height, foreignAttributes);\n                     handler.generateImage(context, img, origin, posInt);\n                 } catch (IOException ioe) {\n-                    log.error(\"I/O error while handling image: \" + info, ioe);\n+                    ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.imageWritingError(this, ioe);\n                     return;\n                 }\n             } else {\n@@ -1680,13 +1674,17 @@ protected void putImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n                             + info + \" (\" + img.getClass().getName() + \")\");\n             }\n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n-        } catch (FileNotFoundException fnfe) {\n-            log.error(fnfe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            log.error(\"I/O error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n \n         // output new data\n@@ -1810,18 +1808,34 @@ public String getMimeType() {\n         return MIME_TYPE;\n     }\n     \n+    /**\n+     * Sets the PDF/A mode for the PDF renderer.\n+     * @param mode the PDF/A mode\n+     */\n     public void setAMode(PDFAMode mode) {\n         this.pdfAMode = mode;\n     }\n \n+    /**\n+     * Sets the PDF/X mode for the PDF renderer.\n+     * @param mode the PDF/X mode\n+     */\n     public void setXMode(PDFXMode mode) {\n         this.pdfXMode = mode;        \n     }\n \n+    /**\n+     * Sets the output color profile for the PDF renderer.\n+     * @param outputProfileURI the URI to the output color profile\n+     */\n     public void setOutputProfileURI(String outputProfileURI) {\n         this.outputProfileURI = outputProfileURI;\n     }\n \n+    /**\n+     * Sets the filter map to be used by the PDF renderer.\n+     * @param filterMap the filter map\n+     */\n     public void setFilterMap(Map filterMap) {\n         this.filterMap = filterMap;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFRenderer.java",
                "sha": "936bf438457c799e12037c4592c58c48d48add64",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 13,
                "filename": "src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "patch": "@@ -36,6 +36,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.fo.extensions.ExtensionElementMapping;\n import org.apache.fop.fonts.FontInfo;\n@@ -51,8 +53,8 @@\n import org.apache.fop.svg.PDFAElementBridge;\n import org.apache.fop.svg.PDFBridgeContext;\n import org.apache.fop.svg.PDFGraphics2D;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n-import org.apache.fop.util.QName;\n \n /**\n  * PDF XML handler for SVG (uses Apache Batik).\n@@ -144,24 +146,23 @@ protected void renderSVGDocument(RendererContext context,\n             try {\n                 super.renderSVGDocument(context, doc);\n             } catch (IOException ioe) {\n-                log.error(\"I/O error while rendering SVG graphic: \"\n-                                       + ioe.getMessage(), ioe);\n+                SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                        context.getUserAgent().getEventBroadcaster());\n+                eventProducer.svgRenderingError(this, ioe, getDocumentURI(doc));\n             }\n             return;\n         }\n         int xOffset = pdfInfo.currentXPosition;\n         int yOffset = pdfInfo.currentYPosition;\n \n         FOUserAgent userAgent = context.getUserAgent(); \n-        log.debug(\"Generating SVG at \" \n-                + userAgent.getTargetResolution()\n-                + \"dpi.\");\n         final float deviceResolution = userAgent.getTargetResolution();\n-        log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n-        log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Generating SVG at \" + deviceResolution + \"dpi.\");\n+        }\n         \n         final float uaResolution = userAgent.getSourceResolution();\n-        SVGUserAgent ua = new SVGUserAgent(25.4f / uaResolution, new AffineTransform());\n+        SVGUserAgent ua = new SVGUserAgent(userAgent, new AffineTransform());\n \n         //Scale for higher resolution on-the-fly images from Batik\n         double s = uaResolution / deviceResolution;\n@@ -188,8 +189,9 @@ protected void renderSVGDocument(RendererContext context,\n             root = builder.build(ctx, doc);\n             builder = null;\n         } catch (Exception e) {\n-            log.error(\"svg graphic could not be built: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         // get the 'width' and 'height' attributes of the SVG document\n@@ -261,8 +263,9 @@ protected void renderSVGDocument(RendererContext context,\n             root.paint(graphics);\n             pdfInfo.currentStream.add(graphics.getString());\n         } catch (Exception e) {\n-            log.error(\"svg graphic could not be rendered: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n         }\n         pdfInfo.pdfState.pop();\n         renderer.restoreGraphicsState();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/pdf/PDFSVGHandler.java",
                "sha": "cb7c7cf89a78bd7d64c9d6908b1500660a627947",
                "status": "modified"
            },
            {
                "additions": 65,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "changes": 65,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "patch": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.ps;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Event producer interface for events generated by the PostScript renderer.\n+ */\n+public interface PSEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static PSEventProducer get(EventBroadcaster broadcaster) {\n+            return (PSEventProducer)broadcaster.getEventProducerFor(\n+                    PSEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * A PostScript dictionary could not be parsed.\n+     * @param source the event source\n+     * @param content the PostScript content\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void postscriptDictionaryParseError(Object source, String content, Exception e);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSEventProducer.java",
                "sha": "451ed1cea034f9a7b0ef02b2443716b9c209024d",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"org.apache.fop.render.ps.PSEventProducer.postscriptDictionaryParseError\">Failed to parse dictionary string. Reason: {e}, content = \"{content}\"</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSEventProducer.xml",
                "sha": "a0078223ac1f8d9549ca2e238a72813af283342e",
                "status": "added"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/render/ps/PSRenderer.java",
                "patch": "@@ -85,6 +85,7 @@\n import org.apache.fop.area.inline.TextArea;\n import org.apache.fop.area.inline.WordArea;\n import org.apache.fop.datatypes.URISpecification;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fonts.Font;\n@@ -95,6 +96,7 @@\n import org.apache.fop.render.Graphics2DAdapter;\n import org.apache.fop.render.ImageAdapter;\n import org.apache.fop.render.RendererContext;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.ps.extensions.PSCommentAfter;\n import org.apache.fop.render.ps.extensions.PSCommentBefore;\n import org.apache.fop.render.ps.extensions.PSExtensionAttachment;\n@@ -296,7 +298,9 @@ protected void writeln(String cmd) {\n      */\n     protected void handleIOTrouble(IOException ioe) {\n         if (!ioTrouble) {\n-            log.error(\"Error while writing to target file\", ioe);\n+            RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ioError(this, ioe);\n             ioTrouble = true;\n         }\n     }\n@@ -522,12 +526,17 @@ protected void drawImage(String uri, Rectangle2D pos, Map foreignAttributes) {\n             }\n \n         } catch (ImageException ie) {\n-            log.error(\"Error while processing image: \"\n-                    + (info != null ? info.toString() : uri), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n         } catch (FileNotFoundException fe) {\n-            log.error(fe.getMessage());\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n         } catch (IOException ioe) {\n-            handleIOTrouble(ioe);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n \n@@ -1070,8 +1079,9 @@ public void processOffDocumentItem(OffDocumentItem oDI) {\n                             try {\n                                 this.pageDeviceDictionary.putAll(PSDictionary.valueOf(content));\n                             } catch (PSDictionaryFormatException e) {\n-                                log.error(\"Failed to parse dictionary string: \"\n-                                        + e.getMessage() + \", content = '\" + content + \"'\");\n+                                PSEventProducer eventProducer = PSEventProducer.Provider.get(\n+                                        getUserAgent().getEventBroadcaster());\n+                                eventProducer.postscriptDictionaryParseError(this, content, e);\n                             }\n                         }\n                     } else if (attachment instanceof PSCommentBefore) {\n@@ -1169,8 +1179,9 @@ public void renderPage(PageViewport page)\n                         try {\n                             pageDeviceDictionary.putAll(PSDictionary.valueOf(content));\n                         } catch (PSDictionaryFormatException e) {\n-                            log.error(\"failed to parse dictionary string: \"\n-                                    + e.getMessage() + \", [\" + content + \"]\");\n+                            PSEventProducer eventProducer = PSEventProducer.Provider.get(\n+                                    getUserAgent().getEventBroadcaster());\n+                            eventProducer.postscriptDictionaryParseError(this, content, e);\n                         }\n                     }\n                 }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSRenderer.java",
                "sha": "e4d582ba2a9eafd955534274faf0b7d80fc5f530",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "changes": 68,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/PSSVGHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 44,
                "filename": "src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "patch": "@@ -23,31 +23,24 @@\n import java.awt.geom.AffineTransform;\n import java.io.IOException;\n \n-// DOM\n import org.w3c.dom.Document;\n-import org.w3c.dom.svg.SVGDocument;\n-import org.w3c.dom.svg.SVGSVGElement;\n \n-// Batik\n import org.apache.avalon.framework.configuration.Configuration;\n-import org.apache.batik.bridge.GVTBuilder;\n import org.apache.batik.bridge.BridgeContext;\n-import org.apache.batik.bridge.ViewBox;\n-import org.apache.batik.dom.svg.SVGDOMImplementation;\n+import org.apache.batik.bridge.GVTBuilder;\n import org.apache.batik.gvt.GraphicsNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.java2d.ps.PSGraphics2D;\n+import org.apache.xmlgraphics.ps.PSGenerator;\n \n-// FOP\n import org.apache.fop.fonts.FontInfo;\n+import org.apache.fop.render.AbstractGenericSVGHandler;\n import org.apache.fop.render.Renderer;\n-import org.apache.fop.render.XMLHandler;\n import org.apache.fop.render.RendererContext;\n+import org.apache.fop.svg.SVGEventProducer;\n import org.apache.fop.svg.SVGUserAgent;\n-import org.apache.xmlgraphics.java2d.ps.PSGraphics2D;\n-import org.apache.xmlgraphics.ps.PSGenerator;\n-\n-// Commons-Logging\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n \n /**\n  * PostScript XML handler for SVG. Uses Apache Batik for SVG processing.\n@@ -57,7 +50,8 @@\n  *\n  * @version $Id$\n  */\n-public class PSSVGHandler implements XMLHandler, PSRendererContextConstants {\n+public class PSSVGHandler extends AbstractGenericSVGHandler\n+            implements PSRendererContextConstants {\n \n     /** logging instance */\n     private static Log log = LogFactory.getLog(PSSVGHandler.class);\n@@ -68,16 +62,6 @@\n     public PSSVGHandler() {\n     }\n \n-    /** {@inheritDoc} */\n-    public void handleXML(RendererContext context, \n-                Document doc, String ns) throws Exception {\n-        PSInfo psi = getPSInfo(context);\n-\n-        if (SVGDOMImplementation.SVG_NAMESPACE_URI.equals(ns)) {\n-            renderSVGDocument(context, doc, psi);\n-        }\n-    }\n-\n     /**\n      * Get the pdf information from the render context.\n      *\n@@ -234,10 +218,10 @@ public void setHandlerConfiguration(Configuration cfg) {\n      * Render the svg document.\n      * @param context the renderer context\n      * @param doc the svg document\n-     * @param psInfo the pdf information of the current context\n      */\n     protected void renderSVGDocument(RendererContext context,\n-            Document doc, PSInfo psInfo) {\n+            Document doc) {\n+        PSInfo psInfo = getPSInfo(context);\n         int xOffset = psInfo.currentXPosition;\n         int yOffset = psInfo.currentYPosition;\n         PSGenerator gen = psInfo.psGenerator;\n@@ -250,9 +234,7 @@ protected void renderSVGDocument(RendererContext context,\n         }\n \n         SVGUserAgent ua\n-             = new SVGUserAgent(\n-                context.getUserAgent().getSourcePixelUnitToMillimeter(),\n-                new AffineTransform());\n+             = new SVGUserAgent(context.getUserAgent(), new AffineTransform());\n \n         PSGraphics2D graphics = new PSGraphics2D(strokeText, gen);\n         graphics.setGraphicContext(new org.apache.xmlgraphics.java2d.GraphicContext());\n@@ -273,8 +255,9 @@ protected void renderSVGDocument(RendererContext context,\n         try {\n             root = builder.build(ctx, doc);\n         } catch (Exception e) {\n-            log.error(\"SVG graphic could not be built: \"\n-                                   + e.getMessage(), e);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgNotBuilt(this, e, getDocumentURI(doc));\n             return;\n         }\n         // get the 'width' and 'height' attributes of the SVG document\n@@ -305,10 +288,10 @@ protected void renderSVGDocument(RendererContext context,\n             // viewBox puts it.\n             gen.concatMatrix(sx, 0, 0, sy, xOffset / 1000f, yOffset / 1000f);\n \n+            /*\n             SVGSVGElement svg = ((SVGDocument)doc).getRootElement();\n             AffineTransform at = ViewBox.getPreserveAspectRatioTransform(svg,\n-                    psInfo.getWidth() / 1000f, psInfo.getHeight() / 1000f);\n-            /*\n+                    psInfo.getWidth() / 1000f, psInfo.getHeight() / 1000f, ctx);\n             if (!at.isIdentity()) {\n                 double[] vals = new double[6];\n                 at.getMatrix(vals);\n@@ -322,15 +305,17 @@ protected void renderSVGDocument(RendererContext context,\n             try {\n                 root.paint(graphics);\n             } catch (Exception e) {\n-                log.error(\"SVG graphic could not be rendered: \"\n-                                       + e.getMessage(), e);\n+                SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                        context.getUserAgent().getEventBroadcaster());\n+                eventProducer.svgRenderingError(this, e, getDocumentURI(doc));\n             }\n \n             gen.restoreGraphicsState();\n             gen.commentln(\"%FOPEndSVG\");\n         } catch (IOException ioe) {\n-            log.error(\"SVG graphic could not be rendered: \"\n-                                   + ioe.getMessage(), ioe);\n+            SVGEventProducer eventProducer = SVGEventProducer.Provider.get(\n+                    context.getUserAgent().getEventBroadcaster());\n+            eventProducer.svgRenderingError(this, ioe, getDocumentURI(doc));\n         }\n     }\n \n@@ -339,10 +324,5 @@ public boolean supportsRenderer(Renderer renderer) {\n         return (renderer instanceof PSRenderer);\n     }\n     \n-    /** {@inheritDoc} */\n-    public String getNamespace() {\n-        return SVGDOMImplementation.SVG_NAMESPACE_URI;\n-    }\n-\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/PSSVGHandler.java",
                "sha": "ebe098282d12a768c65f9d3090283d3b6612973e",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/ResourceHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "patch": "@@ -20,8 +20,8 @@\n package org.apache.fop.render.ps;\n \n import java.awt.geom.Dimension2D;\n-import java.awt.image.RenderedImage;\n import java.awt.geom.Rectangle2D;\n+import java.awt.image.RenderedImage;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -68,6 +68,7 @@\n import org.apache.xmlgraphics.ps.dsc.tools.DSCTools;\n \n import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fonts.FontInfo;\n \n /**\n@@ -321,7 +322,10 @@ protected void generatePaintProc(PSGenerator gen)\n                     throw new UnsupportedOperationException(\"Unsupported image type: \" + img);\n                 }\n             } catch (ImageException ie) {\n-                throw new IOException(\"Error while generating form for image: \" + ie.getMessage());\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        userAgent.getEventBroadcaster());\n+                eventProducer.imageError(resTracker, (info != null ? info.toString() : uri),\n+                        ie, null);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/ResourceHandler.java",
                "sha": "1a363c90e8e0a174d9aaa2855abf5350aee80d3e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Base postscript commment element class\n@@ -46,8 +45,8 @@ public AbstractPSCommentElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         if (parent.getNameId() != Constants.FO_DECLARATIONS\n                 && parent.getNameId() != Constants.FO_SIMPLE_PAGE_MASTER) {\n-          throw new ValidationException(getName()\n-          + \" must be a child of fo:declarations or fo:simple-page-master.\");            \n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfSPMorDeclarations\");\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSCommentElement.java",
                "sha": "1eb1d9d13a5af9b26d9f7c5cd7a2882c8f5f750a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "patch": "@@ -20,14 +20,14 @@\n package org.apache.fop.render.ps.extensions;\n \n // FOP\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n \n-import org.xml.sax.Locator;\n-\n /**\n  * Base class for the PostScript-specific extension elements.\n  */\n@@ -98,7 +98,7 @@ public String getNamespaceURI() {\n      * @see org.apache.fop.fo.FONode#getNormalNamespacePrefix()\n      */\n     public String getNormalNamespacePrefix() {\n-        return \"fox\";\n+        return \"ps\";\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionElement.java",
                "sha": "31e44d2d279838779325fd02d482176d36a050fa",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "patch": "@@ -20,13 +20,14 @@\n package org.apache.fop.render.ps.extensions;\n \n // FOP\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Base class for the PostScript-specific extension elements.\n@@ -36,15 +37,15 @@\n     private PSSetupCode setupCode = new PSSetupCode();\n     \n     /**\n+     * Main constructor.\n+     * @param parent the parent node\n      * @see org.apache.fop.fo.FONode#FONode(FONode)\n      */\n     public AbstractPSExtensionObject(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     protected void validateChildNode(Locator loc, String nsURI, String localName) \n                 throws ValidationException {\n         if (FO_URI.equals(nsURI)) {\n@@ -71,7 +72,7 @@ public String getNamespaceURI() {\n     \n     /**{@inheritDoc} */\n     public String getNormalNamespacePrefix() {\n-        return \"fox\";\n+        return \"ps\";\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/AbstractPSExtensionObject.java",
                "sha": "78b2f91eb586522ac567f983fa6748d2d6b37d9a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "patch": "@@ -27,6 +27,7 @@\n  */\n public class PSCommentAfterElement extends AbstractPSCommentElement {\n \n+    /** the element name */\n     protected static final String ELEMENT = \"ps-comment-after\";\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSCommentAfterElement.java",
                "sha": "1dd0f4be66693438f7c5db9080d0b7c278c34fb4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "patch": "@@ -27,6 +27,7 @@\n  */\n public class PSCommentBeforeElement extends AbstractPSCommentElement {\n \n+    /** the element name */\n     protected static final String ELEMENT = \"ps-comment-before\";\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSCommentBeforeElement.java",
                "sha": "5d3c863f5b7f76766d93bed6ef92fcac7cbf219d",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "patch": "@@ -19,13 +19,15 @@\n \n package org.apache.fop.render.ps.extensions;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactory.ObjectBuiltListener;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.SAXException;\n-import org.xml.sax.helpers.DefaultHandler;\n \n /**\n  * ContentHandler (parser) for restoring PSExtension objects from XML.\n@@ -91,25 +93,19 @@ public void characters(char[] ch, int start, int length) throws SAXException {\n         content.append(ch, start, length);\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void endDocument() throws SAXException {\n         if (listener != null) {\n             listener.notifyObjectBuilt(getObject());\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public Object getObject() {\n         return returnedObject;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public void setObjectBuiltListener(ObjectBuiltListener listener) {\n         this.listener = listener;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSExtensionHandler.java",
                "sha": "e695007361bc3d22666e352fcc11815a96d3563b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "patch": "@@ -22,13 +22,13 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Extension element for fox:ps-page-setup-code. \n  */\n public class PSPageSetupCodeElement extends AbstractPSExtensionObject {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-page-setup-code\";\n     \n     /**\n@@ -43,7 +43,8 @@ public PSPageSetupCodeElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if (parent.getNameId() != Constants.FO_SIMPLE_PAGE_MASTER) {\n-            throw new ValidationException(getName() + \" must be a child of fo:simple-page-master.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                \"rule.childOfSPM\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSPageSetupCodeElement.java",
                "sha": "207c11e76fec18c6e6eddc751892095f4bc53a96",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "patch": "@@ -19,20 +19,21 @@\n \n package org.apache.fop.render.ps.extensions;\n \n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n import org.apache.fop.fo.PropertyList;\n-import org.apache.fop.fo.ValidationException;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n \n /**\n  * Extension element for ps:ps-setpagedevice. \n  */\n public class PSSetPageDeviceElement extends AbstractPSExtensionElement {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-setpagedevice\";\n \n     /**\n@@ -52,8 +53,8 @@ protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if ( !((parent.getNameId() == Constants.FO_DECLARATIONS)\n                 || (parent.getNameId() == Constants.FO_SIMPLE_PAGE_MASTER)) ) {\n-            throw new ValidationException( getName()\n-                    + \" must be a child of fo:declarations or fo:simple-page-master.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfSPMorDeclarations\");\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSSetPageDeviceElement.java",
                "sha": "21acc8001b5563e9e0869b7e25fc89fcf8f63825",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "patch": "@@ -22,13 +22,13 @@\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ValidationException;\n \n /**\n  * Extension element for fox:ps-setup-code. \n  */\n public class PSSetupCodeElement extends AbstractPSExtensionObject {\n \n+    /** The element name */\n     protected static final String ELEMENT = \"ps-setup-code\";\n     \n     /**\n@@ -43,7 +43,8 @@ public PSSetupCodeElement(FONode parent) {\n     protected void startOfNode() throws FOPException {\n         super.startOfNode();\n         if (parent.getNameId() != Constants.FO_DECLARATIONS) {\n-            throw new ValidationException(getName() + \" must be a child of fo:declarations.\");\n+            invalidChildError(getLocator(), parent.getName(), getNamespaceURI(), getName(),\n+                    \"rule.childOfDeclarations\");\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/ps/extensions/PSSetupCodeElement.java",
                "sha": "e76dfeb6438e33ebbe4f4e709de2281b34d30de8",
                "status": "modified"
            },
            {
                "additions": 94,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "changes": 94,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "patch": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.render.rtf;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.fo.FONode;\n+\n+/**\n+ * Event producer interface for events generated by the RTF renderer.\n+ */\n+public interface RTFEventProducer extends EventProducer {\n+\n+    /** Provider class for the event producer. */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static RTFEventProducer get(EventBroadcaster broadcaster) {\n+            return (RTFEventProducer)broadcaster.getEventProducerFor(\n+                    RTFEventProducer.class);\n+        }\n+    }\n+\n+    /** Event model factory for this event producer. */\n+    public static class EventModelFactory extends AbstractEventModelFactory {\n+\n+        /** {@inheritDoc} */\n+        public EventModel createEventModel() {\n+            return loadModel(getClass(), \"event-model.xml\");\n+        }\n+        \n+    }\n+    \n+    /**\n+     * The RTF handler only supports simple-page-masters.\n+     * @param source the event source\n+     * @param masterReference the reference page-master-set\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void onlySPMSupported(Object source, String masterReference, Locator loc);\n+    \n+    /**\n+     * No simple-page-master could be determined-\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void noSPMFound(Object source, Locator loc);\n+    \n+    /**\n+     * The RTF handler requires explicit table-columns for now.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void explicitTableColumnsRequired(Object source, Locator loc);\n+    \n+    /**\n+     * The RTF handler ignored some deferred event (i.e. an unsupported element).\n+     * @param source the event source\n+     * @param node the FO tree node being ignored\n+     * @param start true for start, false for end\n+     * @param loc the location of the error or null\n+     * @event.severity WARN\n+     */\n+    void ignoredDeferredEvent(Object source, FONode node, boolean start, Locator loc);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFEventProducer.java",
                "sha": "a2646af468e789eba6c4faa4863411db8916905a",
                "status": "added"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">[ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.onlySPMSupported\">Only simple-page-masters are supported on page-sequences. Using default simple-page-master from page-sequence-master \"{masterReference}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.noSPMFound\">No simple-page-master could be determined.</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.explicitTableColumnsRequired\">No table-columns found on table. RTF output requires that all table-columns for a table are defined. Output will be incorrect.{{locator}}</message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.ignoredDeferredEvent\">Ignored deferred event for {node} ({start,if,start,end}).{{locator}}</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFEventProducer.xml",
                "sha": "8f1f21a8152b48f35ad02408f276817e9889344b",
                "status": "added"
            },
            {
                "additions": 90,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "changes": 153,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/rtf/RTFHandler.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 63,
                "filename": "src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "patch": "@@ -21,6 +21,7 @@\n \n // Java\n import java.awt.geom.Point2D;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -51,6 +52,7 @@\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.datatypes.LengthBase;\n import org.apache.fop.datatypes.SimplePercentBaseContext;\n+import org.apache.fop.events.ResourceEventProducer;\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.fo.FONode;\n@@ -88,6 +90,7 @@\n import org.apache.fop.fo.properties.FixedLength;\n import org.apache.fop.fonts.FontSetup;\n import org.apache.fop.render.DefaultFontResolver;\n+import org.apache.fop.render.RendererEventProducer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer;\n import org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer;\n@@ -158,6 +161,16 @@ public RTFHandler(FOUserAgent userAgent, OutputStream os) {\n         FontSetup.setup(fontInfo, null, new DefaultFontResolver(userAgent));\n     }\n \n+    /**\n+     * Central exception handler for I/O exceptions.\n+     * @param ioe IOException to handle\n+     */\n+    protected void handleIOTrouble(IOException ioe) {\n+        RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                getUserAgent().getEventBroadcaster());\n+        eventProducer.ioError(this, ioe);\n+    }\n+\n     /**\n      * {@inheritDoc}\n      */\n@@ -195,9 +208,9 @@ public void startPageSequence(PageSequence pageSeq)  {\n                 this.pagemaster\n                         = pageSeq.getRoot().getLayoutMasterSet().getSimplePageMaster(reference);\n                 if (this.pagemaster == null) {\n-                    log.warn(\"Only simple-page-masters are supported on page-sequences: \" \n-                            + reference);\n-                    log.warn(\"Using default simple-page-master from page-sequence-master...\");\n+                    RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.onlySPMSupported(this, reference, pageSeq.getLocator());\n                     PageSequenceMaster master \n                         = pageSeq.getRoot().getLayoutMasterSet().getPageSequenceMaster(reference);\n                     this.pagemaster = master.getNextSimplePageMaster(\n@@ -218,17 +231,17 @@ public void startPageSequence(PageSequence pageSeq)  {\n                     PageAttributesConverter.convertPageAttributes(\n                             pagemaster));\n             } else {\n-                log.warn(\"No simple-page-master could be determined!\");\n+                RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.noSPMFound(this, pageSeq.getLocator());\n             }\n \n             builderContext.pushContainer(sect);\n \n             bHeaderSpecified = false;\n             bFooterSpecified = false;\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startPageSequence: \" + ioe.getMessage(), ioe);\n-            //TODO throw new FOPException(ioe);\n+            handleIOTrouble(ioe);\n         } catch (FOPException fope) {\n             // TODO could we throw Exception in all FOEventHandler events?\n             log.error(\"startPageSequence: \" + fope.getMessage(), fope);\n@@ -338,8 +351,7 @@ public void startFlow(Flow fl) {\n                 log.warn(\"A \" + fl.getLocalName() + \" has been skipped: \" + fl.getFlowName());\n             }\n         } catch (IOException ioe) {\n-            log.error(\"startFlow: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFlow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -396,9 +408,7 @@ public void startBlock(Block bl) {\n             textrun.pushBlockAttributes(rtfAttr);\n             textrun.addBookmark(bl.getId());\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startBlock: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -427,8 +437,7 @@ public void endBlock(Block bl) {\n             textrun.popBlockAttributes();\n \n         } catch (IOException ioe) {\n-            log.error(\"startBlock:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -457,9 +466,7 @@ public void startBlockContainer(BlockContainer blc) {\n             textrun.addParagraphBreak();\n             textrun.pushBlockAttributes(rtfAttr);\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startBlock: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -486,8 +493,7 @@ public void endBlockContainer(BlockContainer bl) {\n             textrun.popBlockAttributes();\n \n         } catch (IOException ioe) {\n-            log.error(\"startBlock:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBlock:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -530,6 +536,8 @@ public void startTable(Table tbl) {\n             table.setBorderAttributes(borderAttributes);\n             \n             builderContext.pushContainer(table);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startTable:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -590,7 +598,6 @@ public void startColumn(TableColumn tc) {\n             log.error(\"startColumn: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n         }\n-\n     }\n \n      /**\n@@ -649,8 +656,7 @@ public void startInline(Inline inl) {\n             textrun.pushInlineAttributes(rtfAttr);\n             textrun.addBookmark(inl.getId());\n         } catch (IOException ioe) {\n-            log.error(\"startInline:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (FOPException fe) {\n             log.error(\"startInline:\" + fe.getMessage());\n             throw new RuntimeException(fe.getMessage());\n@@ -677,8 +683,7 @@ public void endInline(Inline inl) {\n             RtfTextrun textrun = container.getTextrun();\n             textrun.popInlineAttributes();\n         } catch (IOException ioe) {\n-            log.error(\"startInline:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startInline:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -698,6 +703,8 @@ public void startBody(TableBody tb) {\n \n             RtfTable tbl = (RtfTable)builderContext.getContainer(RtfTable.class, true, this);\n             tbl.setHeaderAttribs(atts);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startBody: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -715,6 +722,8 @@ public void endBody(TableBody tb) {\n         try {\n             RtfTable tbl = (RtfTable)builderContext.getContainer(RtfTable.class, true, this);\n             tbl.setHeaderAttribs(null);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endBody: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -745,6 +754,8 @@ public void startRow(TableRow tr) {\n \n             // reset column iteration index to correctly access column widths\n             builderContext.getTableContext().selectFirstColumn();\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startRow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -778,6 +789,8 @@ public void endRow(TableRow tr) {\n                 \n                 tctx.selectNextColumn();\n             }\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endRow: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -870,6 +883,8 @@ public void startCell(TableCell tc) {\n             }\n             \n             builderContext.pushContainer(cell);\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startCell: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -906,8 +921,7 @@ public void startList(ListBlock lb) {\n                 ListAttributesConverter.convertAttributes(lb));\n             builderContext.pushContainer(newList);\n         } catch (IOException ioe) {\n-            log.error(\"startList: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (FOPException fe) {\n             log.error(\"startList: \" + fe.getMessage());\n             throw new RuntimeException(fe.getMessage());\n@@ -961,8 +975,7 @@ public void startListItem(ListItem li) {\n             \n             builderContext.pushContainer(list.newListItem());\n         } catch (IOException ioe) {\n-            log.error(\"startList: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startList: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -995,8 +1008,7 @@ public void startListLabel() {\n             RtfListItemLabel label = item.new RtfListItemLabel(item);\n             builderContext.pushContainer(label);\n         } catch (IOException ioe) {\n-            log.error(\"startPageNumber:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startPageNumber: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1077,8 +1089,7 @@ public void startLink(BasicLink basicLink) {\n             builderContext.pushContainer(link);\n \n         } catch (IOException ioe) {\n-            log.error(\"startLink:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startLink: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1104,21 +1115,28 @@ public void image(ExternalGraphic eg) {\n             return;\n         }\n \n+        String uri = eg.getURL();\n+        ImageInfo info = null;\n         try {\n-            String uri = eg.getURL();\n \n             //set image data\n             FOUserAgent userAgent = eg.getUserAgent();\n             ImageManager manager = userAgent.getFactory().getImageManager();\n-            ImageInfo info = manager.getImageInfo(uri, userAgent.getImageSessionContext());\n-            if (info == null) {\n-                log.error(\"Image could not be found: \" + uri);\n-                return;\n-            }\n+            info = manager.getImageInfo(uri, userAgent.getImageSessionContext());\n             \n             putGraphic(eg, info);\n-        } catch (Exception e) {\n-            log.error(\"Error while handling an external-graphic: \" + e.getMessage(), e);\n+        } catch (ImageException ie) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, (info != null ? info.toString() : uri), ie, null);\n+        } catch (FileNotFoundException fe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageNotFound(this, (info != null ? info.toString() : uri), fe, null);\n+        } catch (IOException ioe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, (info != null ? info.toString() : uri), ioe, null);\n         }\n     }\n \n@@ -1144,6 +1162,12 @@ public void foreignObject(InstreamForeignObject ifo) {\n             // Set the image size to the size of the svg.\n             Point2D csize = new Point2D.Float(-1, -1);\n             Point2D intrinsicDimensions = child.getDimension(csize);\n+            if (intrinsicDimensions == null) {\n+                ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.ifoNoIntrinsicSize(this, child.getLocator());\n+                return;\n+            }\n             size.setSizeInMillipoints(\n                     (int)Math.round(intrinsicDimensions.getX() * 1000),\n                     (int)Math.round(intrinsicDimensions.getY() * 1000));\n@@ -1157,8 +1181,14 @@ public void foreignObject(InstreamForeignObject ifo) {\n             Image converted = manager.convertImage(image, FLAVORS);\n             putGraphic(ifo, converted);\n             \n-        } catch (Exception e) {\n-            log.error(\"Error while handling an instream-foreign-object: \" + e.getMessage(), e);\n+        } catch (ImageException ie) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, null, ie, null);\n+        } catch (IOException ioe) {\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageIOError(this, null, ioe, null);\n         }\n     }\n \n@@ -1183,7 +1213,9 @@ private void putGraphic(AbstractGraphics abstractGraphic, ImageInfo info)\n \n             putGraphic(abstractGraphic, image);\n         } catch (ImageException ie) {\n-            log.error(\"Error while loading/processing image: \" + info.getOriginalURI(), ie);\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageError(this, null, ie, null);\n         }\n     }\n     \n@@ -1210,8 +1242,9 @@ private void putGraphic(AbstractGraphics abstractGraphic, Image image)\n         }\n \n         if (rawData == null) {\n-            log.warn(FONode.decorateWithContextInfo(\"Image could not be embedded: \"\n-                    + image, abstractGraphic));\n+            ResourceEventProducer eventProducer = ResourceEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.imageWritingError(this, null);\n             return;\n         }\n \n@@ -1322,9 +1355,7 @@ public void startFootnote(Footnote footnote) {\n             builderContext.pushContainer(rtfFootnote);\n \n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startFootnote: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFootnote: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1358,9 +1389,7 @@ public void startFootnoteBody(FootnoteBody body) {\n \n             rtfFootnote.startBody();\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"startFootnoteBody: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startFootnoteBody: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1383,9 +1412,7 @@ public void endFootnoteBody(FootnoteBody body) {\n \n             rtfFootnote.endBody();\n         } catch (IOException ioe) {\n-            // TODO could we throw Exception in all FOEventHandler events?\n-            log.error(\"endFootnoteBody: \" + ioe.getMessage());\n-            throw new RuntimeException(\"IOException: \" + ioe);\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"endFootnoteBody: \" + e.getMessage());\n             throw new RuntimeException(\"Exception: \" + e);\n@@ -1421,10 +1448,8 @@ public void text(FOText text, char[] data, int start, int length) {\n             textrun.pushInlineAttributes(rtfAttr);\n             textrun.addString(new String(data, start, length - start));\n             textrun.popInlineAttributes();\n-         } catch (IOException ioe) {\n-            // FIXME could we throw Exception in all FOEventHandler events?\n-            log.error(\"characters: \" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+        } catch (IOException ioe) {\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"characters:\" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1452,8 +1477,7 @@ public void startPageNumber(PageNumber pagenum) {\n             RtfTextrun textrun = container.getTextrun();\n             textrun.addPageNumber(rtfAttr);\n         } catch (IOException ioe) {\n-            log.error(\"startPageNumber:\" + ioe.getMessage());\n-            throw new RuntimeException(ioe.getMessage());\n+            handleIOTrouble(ioe);\n         } catch (Exception e) {\n             log.error(\"startPageNumber: \" + e.getMessage());\n             throw new RuntimeException(e.getMessage());\n@@ -1611,7 +1635,9 @@ private void invokeDeferredEvent(FONode foNode, boolean bStart) {\n                 endCell( (TableCell) foNode);\n             }\n         } else {\n-            log.warn(\"Ignored deferred event for \" + foNode);\n+            RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                    getUserAgent().getEventBroadcaster());\n+            eventProducer.ignoredDeferredEvent(this, foNode, bStart, foNode.getLocator());\n         }\n     }\n \n@@ -1655,8 +1681,9 @@ private void recurseFONode(FONode foNode) {\n                 }\n             } else {\n                 //TODO Implement implicit column setup handling!\n-                log.warn(\"No table-columns found on table. RTF output requires that all\"\n-                        + \" table-columns for a table are defined. Output will be incorrect.\");\n+                RTFEventProducer eventProducer = RTFEventProducer.Provider.get(\n+                        getUserAgent().getEventBroadcaster());\n+                eventProducer.explicitTableColumnsRequired(this, table.getLocator());\n             }\n \n             //recurse table-header",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/rtf/RTFHandler.java",
                "sha": "88e34e17abb0c1ef378ed889eb918e6077859681",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/render/xml/XMLRenderer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "patch": "@@ -41,6 +41,7 @@\n import org.xml.sax.ext.LexicalHandler;\n import org.xml.sax.helpers.AttributesImpl;\n \n+import org.apache.xmlgraphics.util.QName;\n import org.apache.xmlgraphics.util.XMLizable;\n \n import org.apache.fop.apps.FOPException;\n@@ -90,7 +91,6 @@\n import org.apache.fop.render.RendererContext;\n import org.apache.fop.render.XMLHandler;\n import org.apache.fop.util.ColorUtil;\n-import org.apache.fop.util.QName;\n \n /**\n  * Renderer that renders areas to XML for debugging purposes.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/render/xml/XMLRenderer.java",
                "sha": "eb3c92e1ba1998c9fa2308528409b02402c12b54",
                "status": "modified"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SVGEventProducer.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SVGEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/SVGEventProducer.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.svg;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for SVG-related events.\n+ */\n+public interface SVGEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static SVGEventProducer get(EventBroadcaster broadcaster) {\n+            return (SVGEventProducer)broadcaster.getEventProducerFor(\n+                    SVGEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Error during SVG processing. Either message or e must be set.\n+     * @param source the event source\n+     * @param message the error message (or null)\n+     * @param e the exception (or null)\n+     * @event.severity ERROR\n+     */\n+    void error(Object source, String message, Exception e);\n+    \n+    /**\n+     * Alert during SVG processing.\n+     * @param source the event source\n+     * @param message the error message\n+     * @event.severity WARN\n+     */\n+    void alert(Object source, String message);\n+    \n+    /**\n+     * Info during SVG processing.\n+     * @param source the event source\n+     * @param message the error message\n+     * @event.severity INFO\n+     */\n+    void info(Object source, String message);\n+    \n+    /**\n+     * SVG graphic could not be built due to an exception.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @param uri the URI of the SVG graphic\n+     * @event.severity ERROR\n+     */\n+    void svgNotBuilt(Object source, Exception e, String uri);\n+    \n+    /**\n+     * SVG graphic could not be rendered due to an exception.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @param uri the URI of the SVG graphic\n+     * @event.severity ERROR\n+     */\n+    void svgRenderingError(Object source, Exception e, String uri);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SVGEventProducer.java",
                "sha": "8894f3f582537dd4aa057d93c0e750f8280fe2d2",
                "status": "added"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SVGUserAgent.java",
                "changes": 131,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SVGUserAgent.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 104,
                "filename": "src/java/org/apache/fop/svg/SVGUserAgent.java",
                "patch": "@@ -19,65 +19,59 @@\n  \n package org.apache.fop.svg;\n \n-import javax.xml.parsers.SAXParserFactory;\n-import org.apache.batik.bridge.UserAgentAdapter;\n-\n-// Java\n import java.awt.geom.AffineTransform;\n-import java.awt.geom.Dimension2D;\n-import java.awt.Dimension;\n \n-// Commons-Logging\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+import org.apache.fop.apps.FOUserAgent;\n \n /**\n- * The SVG user agent.\n- * This is an implementation of the batik svg user agent\n- * for handling errors and getting user agent values.\n+ * The SVG user agent. This is an implementation of the Batik SVG user agent.\n  */\n-public class SVGUserAgent extends UserAgentAdapter {\n-    private AffineTransform currentTransform = null;\n-    private float pixelUnitToMillimeter = 0.0f;\n+public class SVGUserAgent extends SimpleSVGUserAgent {\n+    \n+    private SVGEventProducer eventProducer;\n+    private Exception lastException;\n \n     /**\n-     * logging instance\n+     * Creates a new SVGUserAgent.\n+     * @param foUserAgent the FO user agent to associate with this SVG user agent\n+     * @param at the current transform\n      */\n-    private Log logger = LogFactory.getLog(SVGUserAgent.class);\n+    public SVGUserAgent(FOUserAgent foUserAgent, AffineTransform at) {\n+        super(foUserAgent.getSourcePixelUnitToMillimeter(), at);\n+        this.eventProducer = SVGEventProducer.Provider.get(foUserAgent.getEventBroadcaster());\n+    }\n \n     /**\n      * Creates a new SVGUserAgent.\n-     * @param pixelUnitToMM the pixel to millimeter conversion factor\n-     * currently in effect\n-     * @param at the current transform\n+     * @param foUserAgent the FO user agent to associate with this SVG user agent\n      */\n-    public SVGUserAgent(float pixelUnitToMM, AffineTransform at) {\n-        pixelUnitToMillimeter = pixelUnitToMM;\n-        currentTransform = at;\n+    public SVGUserAgent(FOUserAgent foUserAgent) {\n+        this(foUserAgent, new AffineTransform());\n     }\n-\n+    \n     /**\n-     * Returns the logger associated with this user agent.\n-     * @return Logger the logger\n+     * Returns the last exception sent to the {@link #displayError(Exception)} method.\n+     * @return the last exception or null if no exception occurred\n      */\n-    protected final Log getLogger() {\n-        return logger;\n+    public Exception getLastException() {\n+        return this.lastException;\n     }\n \n     /**\n      * Displays an error message.\n      * @param message the message to display\n      */\n     public void displayError(String message) {\n-        logger.error(message);\n+        this.eventProducer.error(this, message, null);\n     }\n \n     /**\n      * Displays an error resulting from the specified Exception.\n      * @param ex the exception to display\n      */\n     public void displayError(Exception ex) {\n-        logger.error(\"SVG Error\" + ex.getMessage(), ex);\n+        this.lastException = ex;\n+        this.eventProducer.error(this, ex.getLocalizedMessage(), ex);\n     }\n \n     /**\n@@ -86,86 +80,15 @@ public void displayError(Exception ex) {\n      * @param message the message to display\n      */\n     public void displayMessage(String message) {\n-        logger.info(message);\n+        this.eventProducer.info(this, message);\n     }\n \n     /**\n      * Shows an alert dialog box.\n      * @param message the message to display\n      */\n     public void showAlert(String message) {\n-        logger.warn(message);\n-    }\n-\n-    /**\n-     * Returns a customized the pixel to mm factor.\n-     * @return the pixel unit to millimeter conversion factor\n-     */\n-    public float getPixelUnitToMillimeter() {\n-        return pixelUnitToMillimeter;\n+        this.eventProducer.alert(this, message);\n     }\n \n-    /**\n-     * Returns the language settings.\n-     * @return the languages supported\n-     */\n-    public String getLanguages() {\n-        return \"en\"; // userLanguages;\n-    }\n-\n-    /**\n-     * Returns the media type for this rendering.\n-     * @return the media for fo documents is \"print\"\n-     */\n-    public String getMedia() {\n-        return \"print\";\n-    }\n-\n-    /**\n-     * Returns the user stylesheet uri.\n-     * @return null if no user style sheet was specified.\n-     */\n-    public String getUserStyleSheetURI() {\n-        return null; // userStyleSheetURI;\n-    }\n-\n-    /**\n-     * Returns the class name of the XML parser.\n-     * @return the XML parser class name\n-     */\n-    public String getXMLParserClassName() {\n-        try {\n-            SAXParserFactory factory = SAXParserFactory.newInstance();\n-            return factory.newSAXParser().getXMLReader().getClass().getName();\n-        } catch (Exception e) {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Is the XML parser validating.\n-     * @return true if the xml parser is validating\n-     */\n-    public boolean isXMLParserValidating() {\n-        return false;\n-    }\n-\n-    /**\n-     * Get the transform of the svg document.\n-     * @return the transform\n-     */\n-    public AffineTransform getTransform() {\n-        return currentTransform;\n-    }\n-\n-    /**\n-     * Get the default viewport size for an svg document.\n-     * This returns a default value of 100x100.\n-     * @return the default viewport size\n-     */\n-    public Dimension2D getViewportSize() {\n-        return new Dimension(100, 100);\n-    }\n-\n-}\n-\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SVGUserAgent.java",
                "sha": "8d7754fcb1f6d67b845be6e713b5070823c1a9a5",
                "status": "modified"
            },
            {
                "additions": 126,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "changes": 126,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "patch": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.svg;\n+\n+import java.awt.Dimension;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Dimension2D;\n+\n+import javax.xml.parsers.SAXParserFactory;\n+\n+import org.apache.batik.bridge.UserAgentAdapter;\n+\n+/**\n+ * A simple SVG user agent.\n+ * This is an implementation of the Batik SVG user agent. It ignores any message output sent\n+ * by Batik.\n+ */\n+public class SimpleSVGUserAgent extends UserAgentAdapter {\n+    \n+    private AffineTransform currentTransform = null;\n+    private float pixelUnitToMillimeter = 0.0f;\n+\n+    /**\n+     * Creates a new user agent.\n+     * @param pixelUnitToMM the pixel to millimeter conversion factor currently in effect\n+     * @param at the current transform\n+     */\n+    public SimpleSVGUserAgent(float pixelUnitToMM, AffineTransform at) {\n+        pixelUnitToMillimeter = pixelUnitToMM;\n+        currentTransform = at;\n+    }\n+    \n+    /**\n+     * Returns a customized the pixel to mm factor.\n+     * @return the pixel unit to millimeter conversion factor\n+     */\n+    public float getPixelUnitToMillimeter() {\n+        return pixelUnitToMillimeter;\n+    }\n+\n+    /**\n+     * Returns the language settings.\n+     * @return the languages supported\n+     */\n+    public String getLanguages() {\n+        return \"en\"; // userLanguages;\n+    }\n+\n+    /**\n+     * Returns the media type for this rendering.\n+     * @return the media for FO documents is \"print\"\n+     */\n+    public String getMedia() {\n+        return \"print\";\n+    }\n+\n+    /**\n+     * Returns the user stylesheet URI.\n+     * @return null if no user style sheet was specified.\n+     */\n+    public String getUserStyleSheetURI() {\n+        return null; // userStyleSheetURI;\n+    }\n+\n+    /**\n+     * Returns the class name of the XML parser.\n+     * @return the XML parser class name\n+     */\n+    public String getXMLParserClassName() {\n+        try {\n+            SAXParserFactory factory = SAXParserFactory.newInstance();\n+            return factory.newSAXParser().getXMLReader().getClass().getName();\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Is the XML parser validating.\n+     * @return true if the XML parser is validating\n+     */\n+    public boolean isXMLParserValidating() {\n+        return false;\n+    }\n+\n+    /**\n+     * Get the transform of the SVG document.\n+     * @return the transform\n+     */\n+    public AffineTransform getTransform() {\n+        return currentTransform;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void setTransform(AffineTransform at) {\n+        this.currentTransform = at;\n+    }\n+\n+    /**\n+     * Get the default viewport size for an SVG document.\n+     * This returns a default value of 100x100.\n+     * @return the default viewport size\n+     */\n+    public Dimension2D getViewportSize() {\n+        return new Dimension(100, 100);\n+    }\n+\n+}\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/svg/SimpleSVGUserAgent.java",
                "sha": "4df1af34e18c49f40d263f426fc10bcbf1b43f35",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/QName.java",
                "changes": 94,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/QName.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 90,
                "filename": "src/java/org/apache/fop/util/QName.java",
                "patch": "@@ -19,40 +19,25 @@\n \n package org.apache.fop.util;\n \n-import java.io.Serializable;\n-\n /**\n  * Represents a qualified name of an XML element or an XML attribute.\n  * <p>\n  * Note: This class allows to carry a namespace prefix but it is not used in the equals() and \n  * hashCode() methods.\n+ * @deprecated Use the XML Graphics Commons variant instead!\n  */\n-public class QName implements Serializable {\n+public class QName extends org.apache.xmlgraphics.util.QName {\n \n     private static final long serialVersionUID = -5225376740044770690L;\n     \n-    private String namespaceURI;\n-    private String localName;\n-    private String prefix;\n-    private int hashCode;\n-    \n     /**\n      * Main constructor.\n      * @param namespaceURI the namespace URI\n      * @param prefix the namespace prefix, may be null\n      * @param localName the local name\n      */\n     public QName(String namespaceURI, String prefix, String localName) {\n-        if (localName == null) {\n-            throw new NullPointerException(\"Parameter localName must not be null\");\n-        }\n-        if (localName.length() == 0) {\n-            throw new IllegalArgumentException(\"Parameter localName must not be empty\");\n-        }\n-        this.namespaceURI = namespaceURI;\n-        this.prefix = prefix;\n-        this.localName = localName;\n-        this.hashCode = toHashString().hashCode();\n+        super(namespaceURI, prefix, localName);\n     }\n     \n     /**\n@@ -61,78 +46,7 @@ public QName(String namespaceURI, String prefix, String localName) {\n      * @param qName the qualified name\n      */\n     public QName(String namespaceURI, String qName) {\n-        if (qName == null) {\n-            throw new NullPointerException(\"Parameter localName must not be null\");\n-        }\n-        if (qName.length() == 0) {\n-            throw new IllegalArgumentException(\"Parameter localName must not be empty\");\n-        }\n-        this.namespaceURI = namespaceURI;\n-        int p = qName.indexOf(':');\n-        if (p > 0) {\n-            this.prefix = qName.substring(0, p);\n-            this.localName = qName.substring(p + 1);\n-        } else {\n-            this.prefix = null;\n-            this.localName = qName;\n-        }\n-        this.hashCode = toHashString().hashCode();\n+        super(namespaceURI, qName);\n     }\n     \n-    /** @return the namespace URI */\n-    public String getNamespaceURI() {\n-        return this.namespaceURI;\n-    }\n-    \n-    /** @return the namespace prefix */\n-    public String getPrefix() {\n-        return this.prefix;\n-    }\n-    \n-    /** @return the local name */\n-    public String getLocalName() {\n-        return this.localName;\n-    }\n-    \n-    /** @return the fully qualified name */\n-    public String getQName() {\n-        return getPrefix() != null ? getPrefix() + ':' + getLocalName() : getLocalName();\n-    }\n-\n-    /** {@inheritDoc} */\n-    public int hashCode() {\n-        return this.hashCode;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        } else if (obj == this) {\n-            return true;\n-        } else {\n-            if (obj instanceof QName) {\n-                QName other = (QName)obj;\n-                if ((getNamespaceURI() == null && other.getNamespaceURI() == null)\n-                        || getNamespaceURI().equals(other.getNamespaceURI())) {\n-                    return getLocalName().equals(other.getLocalName());\n-                }\n-            }\n-        }\n-        return false;\n-    }\n-\n-    /** {@inheritDoc} */\n-    public String toString() {\n-        return prefix != null\n-                ? (prefix + \":\" + localName)\n-                : toHashString();\n-    }\n-\n-    private String toHashString() {\n-        return (namespaceURI != null \n-                ? (\"{\" + namespaceURI + \"}\" + localName) \n-                : localName);\n-    }\n-\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/QName.java",
                "sha": "132f5b4dcc06a2567e01aa5fe24b569befa3131e",
                "status": "modified"
            },
            {
                "additions": 398,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/XMLResourceBundle.java",
                "changes": 398,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/XMLResourceBundle.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/XMLResourceBundle.java",
                "patch": "@@ -0,0 +1,398 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.MissingResourceException;\n+import java.util.Properties;\n+import java.util.ResourceBundle;\n+import java.util.Stack;\n+\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import org.apache.xmlgraphics.util.QName;\n+\n+/**\n+ * This class is a ResourceBundle that loads its contents from XML files instead of properties\n+ * files (like PropertiesResourceBundle).\n+ * <p>\n+ * The XML format for this resource bundle implementation is the following\n+ * (the same as Apache Cocoon's XMLResourceBundle):\n+ * <pre>\n+ * &lt;catalogue xml:lang=\"en\"&gt;\n+ *   &lt;message key=\"key1\"&gt;Message &lt;br/&gt; Value 1&lt;/message&gt;\n+ *   &lt;message key=\"key2\"&gt;Message &lt;br/&gt; Value 1&lt;/message&gt;\n+ *   ...\n+ * &lt;/catalogue&gt;\n+ * </pre>\n+ */\n+public class XMLResourceBundle extends ResourceBundle {\n+\n+    //Note: Some code here has been copied and adapted from Apache Harmony!\n+    \n+    private Properties resources = new Properties();\n+\n+    private Locale locale;\n+    \n+    private static SAXTransformerFactory tFactory \n+        = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+\n+    /**\n+     * Creates a resource bundle from an InputStream.\n+     * @param in the stream to read from\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public XMLResourceBundle(InputStream in) throws IOException {\n+        try {\n+            Transformer transformer = tFactory.newTransformer();\n+            StreamSource src = new StreamSource(in);\n+            SAXResult res = new SAXResult(new CatalogueHandler());\n+            transformer.transform(src, res);\n+        } catch (TransformerException e) {\n+            throw new IOException(\"Error while parsing XML resource bundle: \" + e.getMessage());\n+        }\n+    }\n+    \n+    /**\n+     * Gets a resource bundle using the specified base name, default locale, and class loader.\n+     * @param baseName the base name of the resource bundle, a fully qualified class name\n+     * @param loader the class loader from which to load the resource bundle\n+     * @return a resource bundle for the given base name and the default locale\n+     * @throws MissingResourceException if no resource bundle for the specified base name can be\n+     *                                          found\n+     * @see java.util.ResourceBundle#getBundle(String)\n+     */\n+    public static ResourceBundle getXMLBundle(String baseName, ClassLoader loader)\n+                throws MissingResourceException {\n+        return getXMLBundle(baseName, Locale.getDefault(), loader);\n+    }\n+    \n+    /**\n+     * Gets a resource bundle using the specified base name, locale, and class loader.\n+     * @param baseName the base name of the resource bundle, a fully qualified class name\n+     * @param locale the locale for which a resource bundle is desired\n+     * @param loader the class loader from which to load the resource bundle\n+     * @return a resource bundle for the given base name and locale\n+     * @throws MissingResourceException if no resource bundle for the specified base name can be\n+     *                                          found\n+     * @see java.util.ResourceBundle#getBundle(String, Locale, ClassLoader)\n+     */\n+    public static ResourceBundle getXMLBundle(String baseName, Locale locale, ClassLoader loader)\n+                throws MissingResourceException {\n+        if (loader == null) {\n+            throw new NullPointerException(\"loader must not be null\");\n+        }\n+        if (baseName == null) {\n+            throw new NullPointerException(\"baseName must not be null\");\n+        }\n+            \n+        ResourceBundle bundle;\n+        if (!locale.equals(Locale.getDefault())) {\n+            bundle = handleGetXMLBundle(baseName, \"_\" + locale, false, loader);\n+            if (bundle != null) {\n+                return bundle;\n+            }\n+        }\n+        bundle = handleGetXMLBundle(baseName, \"_\" + Locale.getDefault(), true, loader);\n+        if (bundle != null) {\n+            return bundle;\n+        }\n+        throw new MissingResourceException(\n+                baseName + \" (\" + locale + \")\", baseName + '_' + locale, null);\n+    }\n+\n+    static class MissingBundle extends ResourceBundle {\n+        public Enumeration getKeys() {\n+            return null;\n+        }\n+\n+        public Object handleGetObject(String name) {\n+            return null;\n+        }\n+    }\n+\n+    private static final ResourceBundle MISSING = new MissingBundle();\n+    private static final ResourceBundle MISSINGBASE = new MissingBundle();\n+    \n+    private static Map cache = new java.util.WeakHashMap();\n+    //<Object, Hashtable<String, ResourceBundle>>\n+    \n+    private static ResourceBundle handleGetXMLBundle(String base, String locale,\n+            boolean loadBase, final ClassLoader loader) {\n+        XMLResourceBundle bundle = null;\n+        String bundleName = base + locale;\n+        Object cacheKey = loader != null ? (Object) loader : (Object) \"null\";\n+        Hashtable loaderCache; //<String, ResourceBundle>\n+        synchronized (cache) {\n+            loaderCache = (Hashtable)cache.get(cacheKey);\n+            if (loaderCache == null) {\n+                loaderCache = new Hashtable();\n+                cache.put(cacheKey, loaderCache);\n+            }\n+        }\n+        ResourceBundle result = (ResourceBundle)loaderCache.get(bundleName);\n+        if (result != null) {\n+            if (result == MISSINGBASE) {\n+                return null;\n+            }\n+            if (result == MISSING) {\n+                if (!loadBase) {\n+                    return null;\n+                }\n+                String extension = strip(locale);\n+                if (extension == null) {\n+                    return null;\n+                }\n+                return handleGetXMLBundle(base, extension, loadBase, loader);\n+            }\n+            return result;\n+        }\n+\n+        final String fileName = bundleName.replace('.', '/') + \".xml\";\n+        InputStream stream = (InputStream)AccessController\n+                .doPrivileged(new PrivilegedAction() {\n+                    public Object run() {\n+                        return loader == null\n+                            ? ClassLoader.getSystemResourceAsStream(fileName)\n+                            : loader.getResourceAsStream(fileName);\n+                    }\n+                });\n+        if (stream != null) {\n+            try {\n+                try {\n+                    bundle = new XMLResourceBundle(stream);\n+                } finally {\n+                    stream.close();\n+                }\n+                bundle.setLocale(locale);\n+            } catch (IOException e) {\n+                throw new MissingResourceException(e.getMessage(), base, null);\n+            }\n+        }\n+\n+        String extension = strip(locale);\n+        if (bundle != null) {\n+            if (extension != null) {\n+                ResourceBundle parent = handleGetXMLBundle(base, extension, true,\n+                        loader);\n+                if (parent != null) {\n+                    bundle.setParent(parent);\n+                }\n+            }\n+            loaderCache.put(bundleName, bundle);\n+            return bundle;\n+        }\n+\n+        if (extension != null) {\n+            ResourceBundle fallback = handleGetXMLBundle(base, extension, loadBase, loader);\n+            if (fallback != null) {\n+                loaderCache.put(bundleName, fallback);\n+                return fallback;\n+            }\n+        }\n+        loaderCache.put(bundleName, loadBase ? MISSINGBASE : MISSING);\n+        return null;\n+    }    \n+    \n+    private void setLocale(String name) {\n+        String language = \"\", country = \"\", variant = \"\";\n+        if (name.length() > 1) {\n+            int nextIndex = name.indexOf('_', 1);\n+            if (nextIndex == -1) {\n+                nextIndex = name.length();\n+            }\n+            language = name.substring(1, nextIndex);\n+            if (nextIndex + 1 < name.length()) {\n+                int index = nextIndex;\n+                nextIndex = name.indexOf('_', nextIndex + 1);\n+                if (nextIndex == -1) {\n+                    nextIndex = name.length();\n+                }\n+                country = name.substring(index + 1, nextIndex);\n+                if (nextIndex + 1 < name.length()) {\n+                    variant = name.substring(nextIndex + 1, name.length());\n+                }\n+            }\n+        }\n+        this.locale = new Locale(language, country, variant);\n+    }\n+    \n+    private static String strip(String name) {\n+        int index = name.lastIndexOf('_');\n+        if (index != -1) {\n+            return name.substring(0, index);\n+        }\n+        return null;\n+    }\n+    \n+    private Enumeration getLocalKeys() {\n+        return (Enumeration)resources.propertyNames();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Locale getLocale() {\n+        return this.locale;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Enumeration getKeys() {\n+        if (parent == null) {\n+            return getLocalKeys();\n+        }\n+        return new Enumeration() {\n+            private Enumeration local = getLocalKeys();\n+            private Enumeration pEnum = parent.getKeys();\n+\n+            private Object nextElement;\n+\n+            private boolean findNext() {\n+                if (nextElement != null) {\n+                    return true;\n+                }\n+                while (pEnum.hasMoreElements()) {\n+                    Object next = pEnum.nextElement();\n+                    if (!resources.containsKey(next)) {\n+                        nextElement = next;\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            }\n+\n+            public boolean hasMoreElements() {\n+                if (local.hasMoreElements()) {\n+                    return true;\n+                }\n+                return findNext();\n+            }\n+\n+            public Object nextElement() {\n+                if (local.hasMoreElements()) {\n+                    return local.nextElement();\n+                }\n+                if (findNext()) {\n+                    Object result = nextElement;\n+                    nextElement = null;\n+                    return result;\n+                }\n+                // Cause an exception\n+                return pEnum.nextElement();\n+            }\n+        };\n+    }\n+\n+    /** {@inheritDoc} */\n+    protected Object handleGetObject(String key) {\n+        if (key == null) {\n+            throw new NullPointerException(\"key must not be null\");\n+        }\n+        return resources.get(key);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"XMLResourceBundle: \" + getLocale();\n+    }\n+\n+    private class CatalogueHandler extends DefaultHandler {\n+        \n+        private static final String CATALOGUE = \"catalogue\";\n+        private static final String MESSAGE = \"message\";\n+        \n+        private StringBuffer valueBuffer = new StringBuffer();\n+        private Stack elementStack = new Stack();\n+        private String currentKey = null;\n+\n+        private boolean isOwnNamespace(String uri) {\n+            return (\"\".equals(uri));\n+        }\n+        \n+        private QName getParentElementName() {\n+            return (QName)elementStack.peek();\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void startElement(String uri, String localName, String qName, \n+                Attributes atts) throws SAXException {\n+            super.startElement(uri, localName, qName, atts);\n+            QName elementName = new QName(uri, qName);\n+            if (isOwnNamespace(uri)) {\n+                if (CATALOGUE.equals(localName)) {\n+                    //nop\n+                } else if (MESSAGE.equals(localName)) {\n+                    if (!CATALOGUE.equals(getParentElementName().getLocalName())) {\n+                        throw new SAXException(MESSAGE + \" must be a child of \" + CATALOGUE);\n+                    }\n+                    this.currentKey = atts.getValue(\"key\");\n+                } else {\n+                    throw new SAXException(\"Invalid element name: \" + elementName);\n+                }\n+            } else {\n+                //ignore\n+            }\n+            this.valueBuffer.setLength(0);\n+            elementStack.push(elementName);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void endElement(String uri, String localName, String qName) throws SAXException {\n+            super.endElement(uri, localName, qName);\n+            elementStack.pop();\n+            if (isOwnNamespace(uri)) {\n+                if (CATALOGUE.equals(localName)) {\n+                    //nop\n+                } else if (MESSAGE.equals(localName)) {\n+                    if (this.currentKey == null) {\n+                        throw new SAXException(\n+                                \"current key is null (attribute 'key' might be mistyped)\");\n+                    }\n+                    resources.put(this.currentKey, this.valueBuffer.toString());\n+                    this.currentKey = null;\n+                }\n+            } else {\n+                //ignore\n+            }\n+            this.valueBuffer.setLength(0);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public void characters(char[] ch, int start, int length) throws SAXException {\n+            super.characters(ch, start, length);\n+            valueBuffer.append(ch, start, length);\n+        }\n+        \n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/XMLResourceBundle.java",
                "sha": "1b320816bcc0a1842906a09319019dbd816545f1",
                "status": "added"
            },
            {
                "additions": 487,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "changes": 487,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "patch": "@@ -0,0 +1,487 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+\n+/**\n+ * Formats messages based on a template and with a set of named parameters. This is similar to\n+ * {@link java.util.MessageFormat} but uses named parameters and supports conditional sub-groups.\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <p><code>Missing field \"{fieldName}\"[ at location: {location}]!</code></p>\n+ * <ul>\n+ *   <li>Curly brackets (\"{}\") are used for fields.</li>\n+ *   <li>Square brackets (\"[]\") are used to delimit conditional sub-groups. A sub-group is\n+ *     conditional when all fields inside the sub-group have a null value. In the case, everything\n+ *     between the brackets is skipped.</li>\n+ * </ul>\n+ */\n+public class AdvancedMessageFormat {\n+\n+    /** Regex that matches \",\" but not \"\\,\" (escaped comma) */\n+    static final Pattern COMMA_SEPARATOR_REGEX = Pattern.compile(\"(?<!\\\\\\\\),\");\n+    \n+    private static final Map PART_FACTORIES = new java.util.HashMap();\n+    private static final List OBJECT_FORMATTERS = new java.util.ArrayList();\n+    private static final Map FUNCTIONS = new java.util.HashMap();\n+    \n+    private CompositePart rootPart;\n+    \n+    static {\n+        Iterator iter;\n+        iter = Service.providers(PartFactory.class, true);\n+        while (iter.hasNext()) {\n+            PartFactory factory = (PartFactory)iter.next();\n+            PART_FACTORIES.put(factory.getFormat(), factory);\n+        }\n+        iter = Service.providers(ObjectFormatter.class, true);\n+        while (iter.hasNext()) {\n+            OBJECT_FORMATTERS.add((ObjectFormatter)iter.next());\n+        }\n+        iter = Service.providers(Function.class, true);\n+        while (iter.hasNext()) {\n+            Function function = (Function)iter.next();\n+            FUNCTIONS.put(function.getName(), function);\n+        }\n+    }\n+    \n+    /**\n+     * Construct a new message format.\n+     * @param pattern the message format pattern.\n+     */\n+    public AdvancedMessageFormat(CharSequence pattern) {\n+        parsePattern(pattern);\n+    }\n+    \n+    private void parsePattern(CharSequence pattern) {\n+        rootPart = new CompositePart(false);\n+        StringBuffer sb = new StringBuffer();\n+        parseInnerPattern(pattern, rootPart, sb, 0);\n+    }\n+    \n+    private int parseInnerPattern(CharSequence pattern, CompositePart parent,\n+            StringBuffer sb, int start) {\n+        assert sb.length() == 0;\n+        int i = start;\n+        int len = pattern.length();\n+        loop:\n+        while (i < len) {\n+            char ch = pattern.charAt(i);\n+            switch (ch) {\n+            case '{':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                i++;\n+                int nesting = 1;\n+                while (i < len) {\n+                    ch = pattern.charAt(i);\n+                    if (ch == '{') {\n+                        nesting++;\n+                    } else if (ch == '}') {\n+                        nesting--;\n+                        if (nesting == 0) {\n+                            i++;\n+                            break;\n+                        }\n+                    }\n+                    sb.append(ch);\n+                    i++;\n+                }\n+                parent.addChild(parseField(sb.toString()));\n+                sb.setLength(0);\n+                break;\n+            case ']':\n+                i++;\n+                break loop; //Current composite is finished\n+            case '[':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                i++;\n+                CompositePart composite = new CompositePart(true);\n+                parent.addChild(composite);\n+                i += parseInnerPattern(pattern, composite, sb, i);\n+                break;\n+            case '|':\n+                if (sb.length() > 0) {\n+                    parent.addChild(new TextPart(sb.toString()));\n+                    sb.setLength(0);\n+                }\n+                parent.newSection();\n+                i++;\n+                break;\n+            case '\\\\':\n+                if (i < len - 1) {\n+                    i++;\n+                    ch = pattern.charAt(i);\n+                }\n+                //no break here! Must be right before \"default\" section\n+            default:\n+                sb.append(ch);\n+                i++;\n+            }\n+        }\n+        if (sb.length() > 0) {\n+            parent.addChild(new TextPart(sb.toString()));\n+            sb.setLength(0);\n+        }\n+        return i - start;\n+    }\n+    \n+    private Part parseField(String field) {\n+        String[] parts = COMMA_SEPARATOR_REGEX.split(field, 3);\n+        String fieldName = parts[0];\n+        if (parts.length == 1) {\n+            if (fieldName.startsWith(\"#\")) {\n+                return new FunctionPart(fieldName.substring(1));\n+            } else {\n+                return new SimpleFieldPart(fieldName);\n+            }\n+        } else {\n+            String format = parts[1];\n+            PartFactory factory = (PartFactory)PART_FACTORIES.get(format);\n+            if (factory == null) {\n+                throw new IllegalArgumentException(\n+                        \"No PartFactory available under the name: \" + format);\n+            }\n+            if (parts.length == 2) {\n+                return factory.newPart(fieldName, null);\n+            } else {\n+                return factory.newPart(fieldName, parts[2]);\n+            }\n+        }\n+    }\n+\n+    private static Function getFunction(String functionName) {\n+        return (Function)FUNCTIONS.get(functionName);\n+    }\n+\n+    /**\n+     * Formats a message with the given parameters.\n+     * @param params a Map of named parameters (Contents: <String, Object>)\n+     * @return the formatted message\n+     */\n+    public String format(Map params) {\n+        StringBuffer sb = new StringBuffer();\n+        format(params, sb);\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Formats a message with the given parameters.\n+     * @param params a Map of named parameters (Contents: <String, Object>)\n+     * @param target the target StringBuffer to write the formatted message to\n+     */\n+    public void format(Map params, StringBuffer target) {\n+        rootPart.write(target, params);\n+    }\n+    \n+    /**\n+     * Represents a message template part. This interface is implemented by various variants of\n+     * the single curly braces pattern ({field}, {field,if,yes,no} etc.).\n+     */\n+    public interface Part {\n+        \n+        /**\n+         * Writes the formatted part to a string buffer.\n+         * @param sb the target string buffer\n+         * @param params the parameters to work with\n+         */\n+        void write(StringBuffer sb, Map params);\n+        \n+        /**\n+         * Indicates whether there is any content that is generated by this message part.\n+         * @param params the parameters to work with\n+         * @return true if the part has content\n+         */\n+        boolean isGenerated(Map params);\n+    }\n+    \n+    /**\n+     * Implementations of this interface parse a field part and return message parts.\n+     */\n+    public interface PartFactory {\n+        \n+        /**\n+         * Creates a new part by parsing the values parameter to configure the part.\n+         * @param fieldName the field name\n+         * @param values the unparsed parameter values\n+         * @return the new message part\n+         */\n+        Part newPart(String fieldName, String values);\n+        \n+        /**\n+         * Returns the name of the message part format.\n+         * @return the name of the message part format\n+         */\n+        String getFormat();\n+    }\n+    \n+    /**\n+     * Implementations of this interface format certain objects to strings.\n+     */\n+    public interface ObjectFormatter {\n+        \n+        /**\n+         * Formats an object to a string and writes the result to a string buffer.\n+         * @param sb the target string buffer\n+         * @param obj the object to be formatted\n+         */\n+        void format(StringBuffer sb, Object obj);\n+        \n+        /**\n+         * Indicates whether a given object is supported.\n+         * @param obj the object\n+         * @return true if the object is supported by the formatter\n+         */\n+        boolean supportsObject(Object obj);\n+    }\n+    \n+    /**\n+     * Implementations of this interface do some computation based on the message parameters\n+     * given to it. Note: at the moment, this has to be done in a local-independent way since\n+     * there is no locale information.\n+     */\n+    public interface Function {\n+        \n+        /**\n+         * Executes the function.\n+         * @param params the message parameters\n+         * @return the function result\n+         */\n+        Object evaluate(Map params);\n+        \n+        /**\n+         * Returns the name of the function.\n+         * @return the name of the function\n+         */\n+        Object getName();\n+    }\n+    \n+    private static class TextPart implements Part {\n+        \n+        private String text;\n+        \n+        public TextPart(String text) {\n+            this.text = text;\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            sb.append(text);\n+        }\n+        \n+        public boolean isGenerated(Map params) {\n+            return true;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return this.text;\n+        }\n+    }\n+    \n+    private static class SimpleFieldPart implements Part {\n+        \n+        private String fieldName;\n+        \n+        public SimpleFieldPart(String fieldName) {\n+            this.fieldName = fieldName;\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            if (!params.containsKey(fieldName)) {\n+                throw new IllegalArgumentException(\n+                        \"Message pattern contains unsupported field name: \" + fieldName);\n+            }\n+            Object obj = params.get(fieldName);\n+            formatObject(obj, sb);\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            Object obj = params.get(fieldName);\n+            return obj != null;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{\" + this.fieldName + \"}\";\n+        }\n+    }\n+    \n+    /**\n+     * Formats an object to a string and writes the result to a string buffer. This method\n+     * usually uses the object's <code>toString()</code> method unless there is an\n+     * {@link ObjectFormatter} that supports the object. {@link ObjectFormatter}s are registered\n+     * through the service provider mechanism defined by the JAR specification.\n+     * @param obj the object to be formatted\n+     * @param target the target string buffer\n+     */\n+    public static void formatObject(Object obj, StringBuffer target) {\n+        if (obj instanceof String) {\n+            target.append(obj);\n+        } else {\n+            boolean handled = false;\n+            Iterator iter = OBJECT_FORMATTERS.iterator();\n+            while (iter.hasNext()) {\n+                ObjectFormatter formatter = (ObjectFormatter)iter.next();\n+                if (formatter.supportsObject(obj)) {\n+                    formatter.format(target, obj);\n+                    handled = true;\n+                    break;\n+                }\n+            }\n+            if (!handled) {\n+                target.append(String.valueOf(obj));\n+            }\n+        }\n+    }\n+    \n+    private static class FunctionPart implements Part {\n+        \n+        private Function function;\n+        \n+        public FunctionPart(String functionName) {\n+            this.function = getFunction(functionName);\n+            if (this.function == null) {\n+                throw new IllegalArgumentException(\"Unknown function: \" + functionName);\n+            }\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            Object obj = this.function.evaluate(params);\n+            formatObject(obj, sb);\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            Object obj = this.function.evaluate(params);\n+            return obj != null;\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{#\" + this.function.getName() + \"}\";\n+        }\n+    }\n+    \n+    private static class CompositePart implements Part {\n+        \n+        protected List parts = new java.util.ArrayList();\n+        private boolean conditional;\n+        private boolean hasSections = false;\n+        \n+        public CompositePart(boolean conditional) {\n+            this.conditional = conditional;\n+        }\n+        \n+        private CompositePart(List parts) {\n+            this.parts.addAll(parts);\n+            this.conditional = true;\n+        }\n+        \n+        public void addChild(Part part) {\n+            if (part == null) {\n+                throw new NullPointerException(\"part must not be null\");\n+            }\n+            if (hasSections) {\n+                CompositePart composite = (CompositePart)this.parts.get(this.parts.size() - 1);\n+                composite.addChild(part);\n+            } else {\n+                this.parts.add(part);\n+            }\n+        }\n+        \n+        public void newSection() {\n+            if (!hasSections) {\n+                List p = this.parts;\n+                //Dropping into a different mode...\n+                this.parts = new java.util.ArrayList();\n+                this.parts.add(new CompositePart(p));\n+                hasSections = true;\n+            }\n+            this.parts.add(new CompositePart(true));\n+        }\n+        \n+        public void write(StringBuffer sb, Map params) {\n+            if (hasSections) {\n+                Iterator iter = this.parts.iterator();\n+                while (iter.hasNext()) {\n+                    CompositePart part = (CompositePart)iter.next();\n+                    if (part.isGenerated(params)) {\n+                        part.write(sb, params);\n+                        break;\n+                    }\n+                }\n+            } else {\n+                if (isGenerated(params)) {\n+                    Iterator iter = this.parts.iterator();\n+                    while (iter.hasNext()) {\n+                        Part part = (Part)iter.next();\n+                        part.write(sb, params);\n+                    }\n+                }\n+            }\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            if (hasSections) {\n+                Iterator iter = this.parts.iterator();\n+                while (iter.hasNext()) {\n+                    Part part = (Part)iter.next();\n+                    if (part.isGenerated(params)) {\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            } else {\n+                if (conditional) {\n+                    Iterator iter = this.parts.iterator();\n+                    while (iter.hasNext()) {\n+                        Part part = (Part)iter.next();\n+                        if (!part.isGenerated(params)) {\n+                            return false;\n+                        }\n+                    }\n+                }\n+                return true;\n+            }\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return this.parts.toString();\n+        }\n+    }\n+    \n+    \n+    static String unescapeComma(String string) {\n+        return string.replaceAll(\"\\\\\\\\,\", \",\");\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/AdvancedMessageFormat.java",
                "sha": "a2169156aec439871931c7e088ed2ec979dd7b9c",
                "status": "added"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/ChoiceFieldPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.text.ChoiceFormat;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines a \"choice\" field part that works like {@link ChoiceFormat}.\n+ */\n+public class ChoiceFieldPart implements Part {\n+    \n+    private static final Pattern VARIABLE_REGEX = Pattern.compile(\"\\\\{([^\\\\}]+)\\\\}\");\n+    \n+    private String fieldName;\n+    private ChoiceFormat choiceFormat;\n+    \n+    /**\n+     * Creates a new choice part.\n+     * @param fieldName the field name to work on\n+     * @param choicesPattern the choices pattern (as used by {@link ChoiceFormat})\n+     */\n+    public ChoiceFieldPart(String fieldName, String choicesPattern) {\n+        this.fieldName = fieldName;\n+        this.choiceFormat = new ChoiceFormat(choicesPattern);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        Object obj = params.get(fieldName);\n+        Number num = (Number)obj;\n+        String result = this.choiceFormat.format(num.doubleValue());\n+        Matcher m = VARIABLE_REGEX.matcher(result);\n+        if (m.find()) {\n+            //Resolve inner variables\n+            AdvancedMessageFormat f = new AdvancedMessageFormat(result);\n+            f.format(params, sb);\n+        } else {\n+            sb.append(result);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",choice, ....}\";\n+    }\n+    \n+    /** Factory for ChoiceFieldPart. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new ChoiceFieldPart(fieldName, values);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"choice\";\n+        }\n+        \n+    }\n+\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/ChoiceFieldPart.java",
                "sha": "df457a02b5b451577c524f2486299f5fc8890251",
                "status": "added"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/EqualsFieldPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines an \"equals\" field part that can compare a field's string value against another string.\n+ * It returns either of two possible values attached as additional part parameters. Example:\n+ * <code>{field,equals,new,This is new!,This is old!}</code>\n+ */\n+public class EqualsFieldPart extends IfFieldPart {\n+    \n+    private String equalsValue;\n+    \n+    /**\n+     * Creates a new \"equals\" field part.\n+     * @param fieldName the field name\n+     * @param values the unparsed parameter values\n+     */\n+    public EqualsFieldPart(String fieldName, String values) {\n+        super(fieldName, values);\n+    }\n+\n+    /** {@inheritDoc} */\n+    protected void parseValues(String values) {\n+        String[] parts = AdvancedMessageFormat.COMMA_SEPARATOR_REGEX.split(values, 3);\n+        this.equalsValue = parts[0];\n+        if (parts.length == 1) {\n+            throw new IllegalArgumentException(\n+                    \"'equals' format must have at least 2 parameters\");\n+        }\n+        if (parts.length == 3) {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+            elseValue = AdvancedMessageFormat.unescapeComma(parts[2]);\n+        } else {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+        }\n+    }\n+    \n+    /** {@inheritDoc} */\n+    protected boolean isTrue(Map params) {\n+        Object obj = params.get(fieldName);\n+        if (obj != null) {\n+            return String.valueOf(obj).equals(this.equalsValue);\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \", equals \" + this.equalsValue + \"}\";\n+    }\n+    \n+    /**\n+     * Part factory for \"equals\".\n+     */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new EqualsFieldPart(fieldName, values);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"equals\";\n+        }\n+        \n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/EqualsFieldPart.java",
                "sha": "2114b0d0087ce185c7ff274c2a0d3f53a47bc1bd",
                "status": "added"
            },
            {
                "additions": 89,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.fonts.Glyphs;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Function formatting a character to a glyph name.\n+ */\n+public class GlyphNameFieldPart implements Part {\n+\n+    private String fieldName;\n+    \n+    /**\n+     * Creates a new glyph name field part\n+     * @param fieldName the field name\n+     */\n+    public GlyphNameFieldPart(String fieldName) {\n+        this.fieldName = fieldName;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null && getGlyphName(obj).length() > 0;\n+    }\n+    \n+    private String getGlyphName(Object obj) {\n+        if (obj instanceof Character) {\n+            return Glyphs.charToGlyphName(((Character)obj).charValue());\n+        } else {\n+            throw new IllegalArgumentException(\n+                    \"Value for glyph name part must be a Character but was: \"\n+                        + obj.getClass().getName());\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        if (!params.containsKey(fieldName)) {\n+            throw new IllegalArgumentException(\n+                    \"Message pattern contains unsupported field name: \" + fieldName);\n+        }\n+        Object obj = params.get(fieldName);\n+        sb.append(getGlyphName(obj));\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",glyph-name}\";\n+    }\n+    \n+    /** Factory for {@link GlyphNameFieldPart}. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new GlyphNameFieldPart(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"glyph-name\";\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/GlyphNameFieldPart.java",
                "sha": "5d78cdfadbf398ffbf57397c597a00e408038a3e",
                "status": "added"
            },
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/HexFieldPart.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/HexFieldPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/HexFieldPart.java",
                "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Function formatting a number or character to a hex value.\n+ */\n+public class HexFieldPart implements Part {\n+\n+    private String fieldName;\n+    \n+    /**\n+     * Creates a new hex field part\n+     * @param fieldName the field name\n+     */\n+    public HexFieldPart(String fieldName) {\n+        this.fieldName = fieldName;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        Object obj = params.get(fieldName);\n+        return obj != null;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        if (!params.containsKey(fieldName)) {\n+            throw new IllegalArgumentException(\n+                    \"Message pattern contains unsupported field name: \" + fieldName);\n+        }\n+        Object obj = params.get(fieldName);\n+        if (obj instanceof Character) {\n+            sb.append(Integer.toHexString(((Character)obj).charValue()));\n+        } else if (obj instanceof Number) {\n+            sb.append(Integer.toHexString(((Number)obj).intValue()));\n+        } else {\n+            throw new IllegalArgumentException(\"Incompatible value for hex field part: \"\n+                    + obj.getClass().getName());\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \",hex}\";\n+    }\n+    \n+    /** Factory for {@link HexFieldPart}. */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new HexFieldPart(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"hex\";\n+        }\n+        \n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/HexFieldPart.java",
                "sha": "19f47f3d7d007fdffc4bce701e2179743741010a",
                "status": "added"
            },
            {
                "additions": 116,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/IfFieldPart.java",
                "changes": 116,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/IfFieldPart.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/IfFieldPart.java",
                "patch": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import java.util.Map;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Defines an \"if\" field part that checks if field's value is true or false.\n+ * It returns either of two possible values attached as additional part parameters. Example:\n+ * <code>{field,if,Yes,No}</code>\n+ */\n+public class IfFieldPart implements Part {\n+    \n+    /** the field name for the part */\n+    protected String fieldName;\n+    /** the value being returned if the field is true */\n+    protected String ifValue;\n+    /** the value being returned if the field is false */\n+    protected String elseValue;\n+    \n+    /**\n+     * Creates a new \"if\" field part.\n+     * @param fieldName the field name\n+     * @param values the unparsed parameter values\n+     */\n+    public IfFieldPart(String fieldName, String values) {\n+        this.fieldName = fieldName;\n+        parseValues(values);\n+    }\n+\n+    /**\n+     * Parses the parameter values\n+     * @param values the unparsed parameter values\n+     */\n+    protected void parseValues(String values) {\n+        String[] parts = AdvancedMessageFormat.COMMA_SEPARATOR_REGEX.split(values, 2);\n+        if (parts.length == 2) {\n+            ifValue = AdvancedMessageFormat.unescapeComma(parts[0]);\n+            elseValue = AdvancedMessageFormat.unescapeComma(parts[1]);\n+        } else {\n+            ifValue = AdvancedMessageFormat.unescapeComma(values);\n+        }\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void write(StringBuffer sb, Map params) {\n+        boolean isTrue = isTrue(params);\n+        if (isTrue) {\n+            sb.append(ifValue);\n+        } else if (elseValue != null) {\n+            sb.append(elseValue);\n+        }\n+    }\n+\n+    /**\n+     * Indicates whether the field's value is true. If the field is not a boolen, it is true\n+     * if the field is not null.\n+     * @param params the message parameters\n+     * @return true the field's value as boolean\n+     */\n+    protected boolean isTrue(Map params) {\n+        Object obj = params.get(fieldName);\n+        if (obj instanceof Boolean) {\n+            return ((Boolean)obj).booleanValue();\n+        } else {\n+            return (obj != null);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean isGenerated(Map params) {\n+        return isTrue(params) || (elseValue != null);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return \"{\" + this.fieldName + \", if...}\";\n+    }\n+    \n+    /**\n+     * Part factory for \"if\".\n+     */\n+    public static class Factory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new IfFieldPart(fieldName, values);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"if\";\n+        }\n+        \n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/IfFieldPart.java",
                "sha": "31cd8f36cc9697c6af358a7fd665b8a8ef875be1",
                "status": "added"
            },
            {
                "additions": 42,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/util/text/LocatorFormatter.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util.text;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.util.text.AdvancedMessageFormat.ObjectFormatter;\n+\n+/**\n+ * Object formatter for the SAX Locator object.\n+ */\n+public class LocatorFormatter implements ObjectFormatter {\n+\n+    /** {@inheritDoc} */\n+    public void format(StringBuffer sb, Object obj) {\n+        Locator loc = (Locator)obj;\n+        sb.append(loc.getLineNumber()).append(\":\").append(loc.getColumnNumber());\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean supportsObject(Object obj) {\n+        return obj instanceof Locator;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/src/java/org/apache/fop/util/text/LocatorFormatter.java",
                "sha": "d9532c66d31b256512491921ea3e24f26363c45a",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.events.FOPTestEventModelFactory\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "sha": "a40d5658a4403b8a0afaae7111414a81d406953e",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/UtilityCodeTestSuite.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "patch": "@@ -23,12 +23,14 @@\n import junit.framework.TestSuite;\n \n import org.apache.fop.pdf.PDFObjectTestCase;\n+import org.apache.fop.events.BasicEventTestCase;\n import org.apache.fop.traits.BorderPropsTestCase;\n import org.apache.fop.util.DataURIResolverTestCase;\n import org.apache.fop.util.ElementListUtilsTestCase;\n import org.apache.fop.util.PDFNumberTestCase;\n import org.apache.fop.util.ColorUtilTestCase;\n import org.apache.fop.util.UnitConvTestCase;\n+import org.apache.fop.util.XMLResourceBundleTestCase;\n \n /**\n  * Test suite for FOP's utility classes.\n@@ -50,6 +52,8 @@ public static Test suite() {\n         suite.addTest(new TestSuite(BorderPropsTestCase.class));\n         suite.addTest(new TestSuite(ElementListUtilsTestCase.class));\n         suite.addTest(new TestSuite(DataURIResolverTestCase.class));\n+        suite.addTest(new TestSuite(BasicEventTestCase.class));\n+        suite.addTest(new TestSuite(XMLResourceBundleTestCase.class));\n         //$JUnit-END$\n         return suite;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/UtilityCodeTestSuite.java",
                "sha": "d2577c251ad109894e1bbc3afb565ea2eec78a0d",
                "status": "modified"
            },
            {
                "additions": 95,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/BasicEventTestCase.java",
                "changes": 95,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/BasicEventTestCase.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/BasicEventTestCase.java",
                "patch": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+public class BasicEventTestCase extends TestCase {\n+\n+    public void testBasics() throws Exception {\n+        \n+        MyEventListener listener = new MyEventListener();\n+\n+        EventBroadcaster broadcaster = new DefaultEventBroadcaster();\n+        broadcaster.addEventListener(listener);\n+        assertTrue(broadcaster.hasEventListeners());\n+        \n+        Event ev = new Event(this, \"123\", EventSeverity.INFO,\n+                Event.paramsBuilder()\n+                    .param(\"reason\", \"I'm tired\")\n+                    .param(\"blah\", new Integer(23))\n+                    .build());\n+        broadcaster.broadcastEvent(ev);\n+        \n+        ev = listener.event;\n+        assertNotNull(ev);\n+        assertEquals(\"123\", listener.event.getEventID());\n+        assertEquals(EventSeverity.INFO, listener.event.getSeverity());\n+        assertEquals(\"I'm tired\", ev.getParam(\"reason\"));\n+        assertEquals(new Integer(23), ev.getParam(\"blah\"));\n+        \n+        broadcaster.removeEventListener(listener);\n+        assertFalse(broadcaster.hasEventListeners());\n+\n+        //Just check that there are no NPEs\n+        broadcaster.broadcastEvent(ev);\n+    }\n+\n+    public void testEventProducer() throws Exception {\n+        MyEventListener listener = new MyEventListener();\n+\n+        EventBroadcaster broadcaster = new DefaultEventBroadcaster();\n+        broadcaster.addEventListener(listener);\n+        assertTrue(broadcaster.hasEventListeners());\n+        \n+        \n+        TestEventProducer producer = TestEventProducer.Provider.get(broadcaster);\n+        producer.complain(this, \"I'm tired\", 23);\n+        \n+        Event ev = listener.event;\n+        assertNotNull(ev);\n+        assertEquals(\"org.apache.fop.events.TestEventProducer.complain\",\n+                listener.event.getEventID());\n+        assertEquals(EventSeverity.WARN, listener.event.getSeverity());\n+        assertEquals(\"I'm tired\", ev.getParam(\"reason\"));\n+        assertEquals(new Integer(23), ev.getParam(\"blah\"));\n+        \n+        broadcaster.removeEventListener(listener);\n+        assertFalse(broadcaster.hasEventListeners());\n+\n+        //Just check that there are no NPEs\n+        broadcaster.broadcastEvent(ev);\n+    }\n+    \n+    private class MyEventListener implements EventListener {\n+\n+        private Event event;\n+        \n+        public void processEvent(Event event) {\n+            if (this.event != null) {\n+                fail(\"Multiple events received\");\n+            }\n+            this.event = event;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/BasicEventTestCase.java",
                "sha": "d365ca0ec68160c9f47ac754310f62e6fbf35ff6",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/FOPTestEventModelFactory.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n+\n+/**\n+ * Factory for FOP's test event model.\n+ */\n+public class FOPTestEventModelFactory extends AbstractEventModelFactory {\n+\n+    private static final String EVENT_MODEL_FILENAME = \"test-event-model.xml\";\n+\n+    /** {@inheritDoc} */\n+    public EventModel createEventModel() {\n+        return loadModel(getClass(), EVENT_MODEL_FILENAME);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/FOPTestEventModelFactory.java",
                "sha": "796a9cfb51f8cae137fd23ef11e8404bc7bb76ff",
                "status": "added"
            },
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/TestEventProducer.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/events/TestEventProducer.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/events/TestEventProducer.java",
                "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+public interface TestEventProducer extends EventProducer {\n+\n+    /**\n+     * Complain about something.\n+     * @param source the event source\n+     * @param reason the reason for the complaint\n+     * @param blah the complaint\n+     * @event.severity WARN\n+     */\n+    void complain(Object source, String reason, int blah);\n+    \n+    /**\n+     * Express joy about something.\n+     * @param source the event source\n+     * @param what the cause for the joy\n+     * @event.severity INFO\n+     */\n+    void enjoy(Object source, String what);\n+ \n+    public class Provider {\n+        \n+        public static TestEventProducer get(EventBroadcaster broadcaster) {\n+            return (TestEventProducer)broadcaster.getEventProducerFor(TestEventProducer.class);\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/events/TestEventProducer.java",
                "sha": "7dfba75bad173f7eccd241200de982c6f2ac07f7",
                "status": "added"
            },
            {
                "additions": 183,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "changes": 183,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "patch": "@@ -0,0 +1,183 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.util.Map;\n+\n+import junit.framework.TestCase;\n+\n+import org.xml.sax.helpers.LocatorImpl;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+import org.apache.fop.util.text.AdvancedMessageFormat;\n+\n+/**\n+ * Tests for EventFormatter.\n+ */\n+public class AdvancedMessageFormatTestCase extends TestCase {\n+\n+    public void testFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        String pattern\n+            = \"Element \\\"{elementName}\\\" is missing[ required property \\\"{propertyName}\\\"]!\";\n+        format = new AdvancedMessageFormat(pattern);\n+\n+        Map params = new java.util.HashMap();\n+        params.put(\"node\", new Object());\n+        params.put(\"elementName\", \"fo:external-graphic\");\n+        params.put(\"propertyName\", \"src\");\n+        \n+        msg = format.format(params);\n+        assertEquals(\"Element \\\"fo:external-graphic\\\" is missing required property \\\"src\\\"!\", msg);\n+        \n+        params.remove(\"propertyName\");\n+        msg = format.format(params);\n+        assertEquals(\"Element \\\"fo:external-graphic\\\" is missing!\", msg);\n+        \n+        pattern\n+            = \"Testing \\\\{escaped \\\\[characters\\\\], now a normal field {elementName}!\";\n+        format = new AdvancedMessageFormat(pattern);\n+        msg = format.format(params);\n+        assertEquals(\"Testing {escaped [characters], now a normal field fo:external-graphic!\", msg);\n+\n+        pattern = \"Multi-conditional: [case1: {var1}|case2: {var2}|case3: {var3}]\";\n+        format = new AdvancedMessageFormat(pattern);\n+        \n+        params = new java.util.HashMap();\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: \", msg);\n+        \n+        params.put(\"var3\", \"value3\");\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: case3: value3\", msg);\n+        params.put(\"var1\", \"value1\");\n+        msg = format.format(params);\n+        assertEquals(\"Multi-conditional: case1: value1\", msg);\n+    }\n+    \n+    public void testObjectFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        String pattern\n+            = \"Here's a Locator: {locator}\";\n+        format = new AdvancedMessageFormat(pattern);\n+\n+        Map params = new java.util.HashMap();\n+        LocatorImpl loc = new LocatorImpl();\n+        loc.setColumnNumber(7);\n+        loc.setLineNumber(12);\n+        params.put(\"locator\", loc);\n+        \n+        msg = format.format(params);\n+        assertEquals(\"Here\\'s a Locator: 12:7\", msg);\n+    }\n+    \n+    public void testIfFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\"You are{isBad,if, not} nice!\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"isBad\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isBad\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are not nice!\", msg);\n+\n+        format = new AdvancedMessageFormat(\"You are{isGood,if, very, not so} nice!\");\n+\n+        params = new java.util.HashMap();\n+\n+        msg = format.format(params); //isGood is missing\n+        assertEquals(\"You are not so nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are not so nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are very nice!\", msg);\n+\n+        format = new AdvancedMessageFormat(\"You are{isGood,if, very\\\\, very} nice!\");\n+\n+        params = new java.util.HashMap();\n+\n+        msg = format.format(params); //isGood is missing\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.FALSE);\n+        msg = format.format(params);\n+        assertEquals(\"You are nice!\", msg);\n+\n+        params.put(\"isGood\", Boolean.TRUE);\n+        msg = format.format(params);\n+        assertEquals(\"You are very, very nice!\", msg);\n+    }\n+    \n+    public void testEqualsFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\n+                \"Error{severity,equals,EventSeverity:FATAL,,\\nSome explanation!}\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"severity\", EventSeverity.FATAL);\n+        msg = format.format(params);\n+        assertEquals(\"Error\", msg);\n+\n+        params.put(\"severity\", EventSeverity.WARN);\n+        msg = format.format(params);\n+        assertEquals(\"Error\\nSome explanation!\", msg);\n+    }\n+    \n+    public void testChoiceFormatting() throws Exception {\n+        String msg;\n+        AdvancedMessageFormat format;\n+        \n+        format = new AdvancedMessageFormat(\n+                \"You have {amount,choice,0#nothing|0<{amount} bucks|100<more than enough}.\");\n+\n+        Map params = new java.util.HashMap();\n+\n+        params.put(\"amount\", new Integer(0));\n+        msg = format.format(params);\n+        assertEquals(\"You have nothing.\", msg);\n+\n+        params.put(\"amount\", new Integer(7));\n+        msg = format.format(params);\n+        assertEquals(\"You have 7 bucks.\", msg);\n+\n+        params.put(\"amount\", new Integer(140));\n+        msg = format.format(params);\n+        assertEquals(\"You have more than enough.\", msg);\n+\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/AdvancedMessageFormatTestCase.java",
                "sha": "c0e003573f8b1d918e9af030d0c6c579007f2ea8",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.util;\n+\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests for XMLResourceBundle.\n+ */\n+public class XMLResourceBundleTestCase extends TestCase {\n+\n+    public void testWithValidFile() throws Exception {\n+        ResourceBundle bundle = XMLResourceBundle.getXMLBundle(\n+                getClass().getName(), Locale.ENGLISH, getClass().getClassLoader());\n+        ResourceBundle bundleDE = XMLResourceBundle.getXMLBundle(\n+                getClass().getName(), Locale.GERMAN, getClass().getClassLoader());\n+        \n+        assertEquals(\"\", bundle.getLocale().getLanguage());\n+        assertEquals(\"de\", bundleDE.getLocale().getLanguage());\n+\n+        assertEquals(\"Hello World!\", bundle.getString(\"hello-world\"));\n+        assertEquals(\"Hallo Welt!\", bundleDE.getString(\"hello-world\"));\n+\n+        //Check fallback to English\n+        assertEquals(\"Untranslatable\", bundle.getString(\"untranslatable\"));\n+        assertEquals(\"Untranslatable\", bundleDE.getString(\"untranslatable\"));\n+    }\n+    \n+    public void testWithInvalidFile() throws Exception {\n+        try {\n+            ResourceBundle bundle = XMLResourceBundle.getXMLBundle(\n+                    \"org.apache.fop.util.invalid-translation-file\", getClass().getClassLoader());\n+            fail(\"Expected exception\");\n+        } catch (MissingResourceException e) {\n+            //expected\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase.java",
                "sha": "a1ced32a26a10688dc432dc9c90f91ccdcedd70b",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"hello-world\">Hello World!</message>\n+  <message key=\"untranslatable\">Untranslatable</message>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase.xml",
                "sha": "5cdee49ec4af0e29840a2a31f87226f9bc52901e",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"de\">\n+  <message key=\"hello-world\">Hallo Welt!</message>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/XMLResourceBundleTestCase_de.xml",
                "sha": "44cf5a5b41d45234d8338bf5dba5d927ad9d89bd",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/invalid-translation-file.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/test/java/org/apache/fop/util/invalid-translation-file.xml?ref=53a32144019d2158cd14336ff83d131337a1cb84",
                "deletions": 0,
                "filename": "test/java/org/apache/fop/util/invalid-translation-file.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key1=\"hello-world\">Hello World!</message>\n+  <something>blah</something>\n+</catalogue>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/53a32144019d2158cd14336ff83d131337a1cb84/test/java/org/apache/fop/util/invalid-translation-file.xml",
                "sha": "09306b7cca48c49a7ccac08a09d2aca0a5849d4b",
                "status": "added"
            }
        ],
        "message": "Merged branch\nhttps://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ProcessingFeedback\ninto Trunk.\n\nChanges on branch:\n........\n  r615153 | jeremias | 2008-01-25 10:07:21 +0100 (Fr, 25 Jan 2008) | 1 line\n  \n  Created temporary branch for processing feedback.\n........\n  r615155 | jeremias | 2008-01-25 10:11:59 +0100 (Fr, 25 Jan 2008) | 1 line\n  \n  Initial commit of what I've built already for those who prefer code to minimalistic design docs.\n........\n  r615278 | jeremias | 2008-01-25 18:25:00 +0100 (Fr, 25 Jan 2008) | 1 line\n  \n  EventProducer interfaces now operational.\n........\n  r615773 | jeremias | 2008-01-28 10:06:16 +0100 (Mo, 28 Jan 2008) | 1 line\n  \n  No casting in client code when creating EventProducer instances.\n........\n  r616242 | vhennebert | 2008-01-29 11:34:45 +0100 (Di, 29 Jan 2008) | 3 lines\n  \n  Trick to avoid hard-coding the class name of EventProducer in the source file.\n  Feel free to revert if it's not ok.\n........\n  r616900 | jeremias | 2008-01-30 21:59:31 +0100 (Mi, 30 Jan 2008) | 1 line\n  \n  Generate event model XMLs in to the build directory: build/gensrc and build/test-gensrc (the latter is new and needs to be setup as source folder in your IDE!)\n........\n  r616907 | jeremias | 2008-01-30 22:12:59 +0100 (Mi, 30 Jan 2008) | 1 line\n  \n  Added an XMLResourceBundle that uses an XML file instead of a properties file to load the translations. The XML format is the same as for Cocoon's XMLResourceBundle.\n........\n  r617097 | vhennebert | 2008-01-31 11:53:21 +0100 (Do, 31 Jan 2008) | 2 lines\n  \n  Minor typo + slight improvement of Javadoc\n........\n  r617176 | jeremias | 2008-01-31 19:14:19 +0100 (Do, 31 Jan 2008) | 5 lines\n  \n  Renamed FopEvent to Event as suggested by Simon.\n  EventProducerCollectorTask.java now reads the EventSeverity from a doclet tag.\n  Added generation of EventProducer translations (including simple merging, no validation, yet)\n  EventFormatter introduced (only basic functionality, yet).\n  Added a simple EventListener implementation that uses EventFormatter to convert the events to human-readable, localized messages that are sent to the log via Commons Logging.\n........\n  r617362 | jeremias | 2008-02-01 08:18:07 +0100 (Fr, 01 Feb 2008) | 1 line\n  \n  Some remaining rename operations based on an earlier discussion.\n........\n  r617413 | jeremias | 2008-02-01 10:46:26 +0100 (Fr, 01 Feb 2008) | 2 lines\n  \n  Extracted formatting functionality into utility class AdvancedMessageFormat.java.\n  AdvancedMessageFormat.java now supports conditional sub-groups (delimited by []).\n........\n  r618682 | jeremias | 2008-02-05 17:07:08 +0100 (Di, 05 Feb 2008) | 1 line\n  \n  Add support for special object formatters (where toString() isn't good enough). ATM, it's hard-coded but could later be hooked into dynamic discovery if we have multiple such formatters. The SAX Locator is the only example for now.\n........\n  r618686 | jeremias | 2008-02-05 17:12:56 +0100 (Di, 05 Feb 2008) | 3 lines\n  \n  Hooked most of FONode into the new event mechanism. The FOUserAgent provides a DefaultEventBroadcaster instance.\n  If a producer method declares throwing an exception, the event is automatically marked FATAL and the dynamic proxy throws an exception right after notifying the listeners.\n  The exceptions are created through the EventExceptionManager. It currently contains only one exception factory for ValidationException. If we need more such factories it's better to register them dynamically. Right now, they're hard-coded.\n........\n  r619313 | jeremias | 2008-02-07 10:14:15 +0100 (Do, 07 Feb 2008) | 1 line\n  \n  Make sure no events are now just silently swallowed because after upgrading a user doesn't know about the event system.\n........\n  r619314 | jeremias | 2008-02-07 10:14:46 +0100 (Do, 07 Feb 2008) | 1 line\n  \n  Log what translation file is being written.\n........\n  r619320 | jeremias | 2008-02-07 10:31:00 +0100 (Do, 07 Feb 2008) | 2 lines\n  \n  FObj hooked into the event system.\n  Code reduction using a protected method on FONode to acquire a FOValidationEventProducer.\n........\n  r619359 | jeremias | 2008-02-07 11:59:19 +0100 (Do, 07 Feb 2008) | 2 lines\n  \n  Fop's QName now extends XGCommons' QName to initiate a transition.\n  Hooked PropertyList into the event mechanism.\n........\n  r631252 | jeremias | 2008-02-26 16:24:33 +0100 (Di, 26 Feb 2008) | 1 line\n  \n  Removed superfluous warning.\n........\n  r631268 | jeremias | 2008-02-26 17:08:11 +0100 (Di, 26 Feb 2008) | 1 line\n  \n  Deprecated two methods which are a problem for localization. Also helps finding additional spots to switch over to the event mechanism.\n........\n  r633852 | jeremias | 2008-03-05 15:20:24 +0100 (Mi, 05 Mrz 2008) | 1 line\n  \n  Add severity to formatting parameters.\n........\n  r633855 | jeremias | 2008-03-05 15:21:57 +0100 (Mi, 05 Mrz 2008) | 4 lines\n  \n  Added support for additional field styles:\n  {<fieldname>,if,<true-text>,<false-text>}\n  {<fieldname>,equals,<test-string>,<true-text>,<false-text>}\n........\n  r633856 | jeremias | 2008-03-05 15:24:04 +0100 (Mi, 05 Mrz 2008) | 2 lines\n  \n  Javadocs and TODOs.\n  EventListeners can change the event severity.\n........\n  r633857 | jeremias | 2008-03-05 15:27:08 +0100 (Mi, 05 Mrz 2008) | 4 lines\n  \n  Javadocs.\n  Moved out event listener registration into a CompositeEventListener.\n  Event broadcaster uses the events effective severity, not the initial value (for the case where listeners override the initial value).\n  Set up a special EventBroadCaster in the FOUserAgent that filters events through a class (FOValidationEventListenerProxy) that adjusts the event severity for relaxed validation.\n........\n  r633858 | jeremias | 2008-03-05 15:32:07 +0100 (Mi, 05 Mrz 2008) | 2 lines\n  \n  Instead of always decentrally checking whether strict validation is enabled or not, this is now done in a special event listener. The event producer method caller simply indicates whether it can recover from the error condition and continue.\n  Started switching to event production in table FOs.\n........\n  r634027 | jeremias | 2008-03-05 21:58:35 +0100 (Mi, 05 Mrz 2008) | 7 lines\n  \n  Moved AdvancedMessageFormat into its own package.\n  AdvancedMessageFormat got the following added functionality:\n  - Alternative conditional regions [ bla {field}] -> [ bla {field1}| even more bla {field2}]\n  - Functions: functions get access to the parameters and they can produce an object that is then formatted ({#gatherContextInfo})\n  - \"if\" and \"equals\" format moved to top-level classes and added by dynamic registration.\n  EventFormatter now supports includes in the form {{includeName}} so you can include other entries from the resource bundle for better reuse.\n  Some more events in table code.\n........\n  r634031 | jeremias | 2008-03-05 22:05:22 +0100 (Mi, 05 Mrz 2008) | 1 line\n  \n  SVN Props\n........\n  r634208 | jeremias | 2008-03-06 11:26:52 +0100 (Do, 06 Mrz 2008) | 2 lines\n  \n  Improved context gathering.\n  Moved GatherContextInfoFunction to an inner class of FONode to reduce visibilities.\n........\n  r634209 | jeremias | 2008-03-06 11:28:14 +0100 (Do, 06 Mrz 2008) | 1 line\n  \n  Made FOPException localizable.\n........\n  r634280 | jeremias | 2008-03-06 15:38:30 +0100 (Do, 06 Mrz 2008) | 2 lines\n  \n  ExceptionFactory is now dynamically registered.\n  More table warnings and errors switch to events.\n........\n  r634326 | jeremias | 2008-03-06 17:08:16 +0100 (Do, 06 Mrz 2008) | 1 line\n  \n  Remaining table FOs switched to events.\n........\n  r634328 | jeremias | 2008-03-06 17:09:21 +0100 (Do, 06 Mrz 2008) | 1 line\n  \n  Deprecated FOP's QName. Mixing with Commons' variant only produces problems.\n........\n  r634381 | jeremias | 2008-03-06 20:12:57 +0100 (Do, 06 Mrz 2008) | 2 lines\n  \n  Made the \"invalidChild\" event fully localizable by adding a \"lookup\" field for the optional rule to be displayed.\n  And a few switches to the event system.\n........\n  r634692 | jeremias | 2008-03-07 15:31:43 +0100 (Fr, 07 Mrz 2008) | 1 line\n  \n  More FO tree stuff switched to events.\n........\n  r634712 | jeremias | 2008-03-07 16:19:21 +0100 (Fr, 07 Mrz 2008) | 1 line\n  \n  Avoid an NPE that says nothing (ex. could happen if the message template is wrong).\n........\n  r634738 | jeremias | 2008-03-07 17:38:21 +0100 (Fr, 07 Mrz 2008) | 2 lines\n  \n  Non-FO children were not properly run through validation by FOTreeBuilder.\n  Unified the way that non-FO elements are validated. Some FOs were already fixed. I now fixed the rest, so foreign elements can occur everywhere.\n........\n  r637833 | jeremias | 2008-03-17 12:01:41 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Exception while cloning for RetrieveMarker to be handled by user as suggested by Andreas.\n........\n  r637835 | jeremias | 2008-03-17 12:03:31 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Throw a RuntimeException of no other Exception class is specified for an event as a fallback if someone just sets the event severity to FATAL.\n........\n  r637838 | jeremias | 2008-03-17 12:06:10 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Throw a meaningful exception when the property name is wrong. Otherwise, there will be an ArrayIndexOutOfBoundsException.\n........\n  r637859 | jeremias | 2008-03-17 13:35:26 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Throw a meaningful exception when the property name is wrong. Otherwise, there will be an ArrayIndexOutOfBoundsException.\n........\n  r637938 | jeremias | 2008-03-17 16:19:51 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Switched pagination package to events.\n........\n  r637947 | jeremias | 2008-03-17 16:45:16 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Removed unlocalizable validation helper methods.\n........\n  r637952 | jeremias | 2008-03-17 16:59:02 +0100 (Mo, 17 Mrz 2008) | 1 line\n  \n  Events on FOTreeBuilder.\n........\n  r638299 | jeremias | 2008-03-18 11:09:30 +0100 (Di, 18 Mrz 2008) | 2 lines\n  \n  Added support for java.util.text's ChoiceFormat to AdvancedMessageFormat.\n  Reuse the regexes as constants.\n........\n  r638302 | jeremias | 2008-03-18 11:17:06 +0100 (Di, 18 Mrz 2008) | 1 line\n  \n  Events for inline-level layout managers.\n........\n  r638774 | jeremias | 2008-03-19 11:17:36 +0100 (Mi, 19 Mrz 2008) | 1 line\n  \n  Added DEBUG level.\n........\n  r638777 | jeremias | 2008-03-19 11:23:40 +0100 (Mi, 19 Mrz 2008) | 3 lines\n  \n  Generalized FOValidationEventListenerProxy into FOPEventListenerProxy, the main proxy for FOP's own event manipulation proxy. Done because of support for overflow=\"hidden\" vs. overflow=\"error-if-overflow\".\n  Switched block-level layout managers to events.\n  Some cleanup along the way.\n........\n  r639222 | jeremias | 2008-03-20 10:27:34 +0100 (Do, 20 Mrz 2008) | 2 lines\n  \n  Some initial work for event forwarding from Batik.\n  Missing errors/exceptions converted to events in PageSequenceMaster.\n........\n  r639270 | jeremias | 2008-03-20 13:50:35 +0100 (Do, 20 Mrz 2008) | 1 line\n  \n  Removed DEBUG event severity again. Promoted constrained geometry adjustment event to INFO level as per discussion.\n........\n  r640395 | jeremias | 2008-03-24 13:39:13 +0100 (Mo, 24 Mrz 2008) | 3 lines\n  \n  Moved the creation of the fallback LoggingEventListener to FOUserAgent so event before the startDocument() SAX event arrive in the log.\n  Dynamic discovery of event models. Renderers and extensions can register renderer-specific event models.\n  Switched the most important parts of the renderers to events (maybe not everything is converted).\n........\n  r640397 | jeremias | 2008-03-24 13:43:04 +0100 (Mo, 24 Mrz 2008) | 1 line\n  \n  Remaining fixcrlfs. Xalan likes to mix CRLF and LF on Windows.\n........\n  r640398 | jeremias | 2008-03-24 13:43:54 +0100 (Mo, 24 Mrz 2008) | 1 line\n  \n  Ignore namespace declarations for property handling.\n........\n  r640463 | jeremias | 2008-03-24 17:59:52 +0100 (Mo, 24 Mrz 2008) | 2 lines\n  \n  Event in area package.\n  Exposed getUserAgent() in Renderer interface (was already public in AbstractRenderer).\n........\n  r642972 | jeremias | 2008-03-31 14:18:39 +0200 (Mo, 31 Mrz 2008) | 1 line\n  \n  Code restructured a bit.\n........\n  r642975 | jeremias | 2008-03-31 14:24:07 +0200 (Mo, 31 Mrz 2008) | 2 lines\n  \n  Plugged fonts package into the event subsystem. Note: I did not follow the same pattern as for the rest as the font package is to be considered FOP-external, so I just added a manual adapter for the FontEventListener. This demonstrates how an external library can be integrated with the event system.\n  Missing warning for unknown formatting objects added. Warning is not issued by the ElementMappingRegistry anymore but by FOTreeBuilder which has access to more context information.\n........\n  r642997 | jeremias | 2008-03-31 16:10:08 +0200 (Mo, 31 Mrz 2008) | 1 line\n  \n  Added an example to demonstrate how to write your own event listener and how to deal with the exceptions thrown in the process.\n........\n  r642998 | jeremias | 2008-03-31 16:13:40 +0200 (Mo, 31 Mrz 2008) | 1 line\n  \n  Removed unused method. Event formatting should not be part of the Event class. Use EventFormatter.format(Event) instead.\n........\n  r643066 | jeremias | 2008-03-31 19:18:54 +0200 (Mo, 31 Mrz 2008) | 1 line\n  \n  First part of the event subsystem documentation (DRAFT).\n........\n  r643784 | jeremias | 2008-04-02 10:05:33 +0200 (Mi, 02 Apr 2008) | 1 line\n  \n  More documentation.\n........\n  r643785 | jeremias | 2008-04-02 10:06:38 +0200 (Mi, 02 Apr 2008) | 1 line\n  \n  Some nits.\n........\n  r643787 | jeremias | 2008-04-02 10:24:41 +0200 (Mi, 02 Apr 2008) | 1 line\n  \n  Completed javadocs\n........\n  r643824 | jeremias | 2008-04-02 12:00:30 +0200 (Mi, 02 Apr 2008) | 1 line\n  \n  Javadocs.\n........\n  r645847 | vhennebert | 2008-04-08 12:54:16 +0200 (Di, 08 Apr 2008) | 2 lines\n  \n  Minor typo fixes\n........\n  r645848 | vhennebert | 2008-04-08 12:58:30 +0200 (Di, 08 Apr 2008) | 2 lines\n  \n  Another small typo fix\n........\n  r647678 | jeremias | 2008-04-14 09:20:26 +0200 (Mo, 14 Apr 2008) | 1 line\n  \n  Renamed *EventProducer.Factory.create() to *EventProducer.Provider.get() to better reflect what the method does (instances may be cached and reused).\n........\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk@647742 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/2a1ef4b5bd84594aee2e788d3eef044fcbd81875",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestEventProducer.java",
            "TestElementMapping.java"
        ]
    },
    "xmlgraphics-fop_cb82679": {
        "bug_id": "xmlgraphics-fop_cb82679",
        "commit": "https://github.com/apache/xmlgraphics-fop/commit/cb82679d9f56be1fa4d8f198366e472da23709a2",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/KEYS",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/KEYS?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "KEYS",
                "patch": "@@ -19,7 +19,8 @@ pub  1024D/5F298824 2006-09-30 Simon Pepping <spepping@leverkruid.eu>\n sub  2048g/40F32100 2006-09-30\n pub  1024D/4358C584 2006-12-08 Vincent Hennebert <vhennebert@apache.org>\n sub  2048g/0BD6AC9B 2006-12-08\n-\n+pub   1024D/CC31AE97 2008-03-27 [expires: 2011-01-01]\n+uid                  Maximilian Berger <maxberger@apache.org>\n \n -----BEGIN PGP PUBLIC KEY BLOCK-----\n Version: GnuPG v1.0.6 (GNU/Linux)\n@@ -167,3 +168,24 @@ SQQYEQIACQUCRXmZwgIbDAAKCRCgctTQQ1jFhBc3AKCQ1X7oIVR8g7GvSGEUw6DE\n HgEaUgCgkl30lcl9gGa9hqk4cuGYn1OTyks=\n =XphF\n -----END PGP PUBLIC KEY BLOCK-----\n+\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.7 (OpenBSD)\n+\n+mQGiBEfrX/ARBADulGs9V7StbfK8CFfClihdh4lRpw2tktMuYiQJ/rIsNq4zghkT\n+UGxFU0eUC2ZVPYvwG6sXgZ5SSm6i8Ii79YdIIxUG7oNwXaY/e9rK+xX193xqmDgl\n+Vh5vm4LUtncHi9TZDSF+g1YU1DVHbSjTd2oQEHxbBppL0CLfaLv3U1qr2wCgxeGw\n+ZIwb6KD6yesRLx6vGDkDzAMEAL99p0m4sNnjZdKC25Rrt6NZ7CROXWs89/+dkewg\n+JCZiVEoAcdSa0z5d8+XaSzmqR8BJWM1PBPjG48eEdqOevwypd0F/U1mwZ42MvQEw\n+oBayUY+7/pptW7C5L3Fjk18drE0a8lIzt9VBGX5fe3GoXtZKuOzDv0hEuHyzR9q9\n+JLXsA/sELFfrHf0tBfXAdE7pj/Mahalu17/GAyb0RHSvuOfoUvXSXZA91cFg8ycB\n+4x265NtYZk52M32wi5ePrYeSJIZ6vWRvPuWVAXDg5S6HCMjcXc6ElkgLcUt1NoPI\n+DmRXe4FIDZkGSYSXdLTUByu7+8fCuWQHCFG2sALdOyVlucij2LQoTWF4aW1pbGlh\n+biBCZXJnZXIgPG1heGJlcmdlckBhcGFjaGUub3JnPohmBBMRAgAmBQJH61/wAhsD\n+BQkFM4sABgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQ4+RAT8wxrpcs1wCeIAoI\n+B0MwZfWLV+wD3pt1wDkPXbsAnjuOsyZ7EeNOcpoqSteB17aPRGeLiEYEEBECAAYF\n+Akfrb00ACgkQByq3OugVkrx76ACgqJ8W64IhBYgBvp3dTDLS825gCQQAnjB6X5+4\n+eW/0pQUpJcvolxbT9xvF\n+=bbQO\n+-----END PGP PUBLIC KEY BLOCK-----\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/KEYS",
                "sha": "c11ca63c310106f8e502de61c129a450b44edb5f",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/README",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/README?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "README",
                "patch": "@@ -90,6 +90,46 @@ http://xmlgraphics.apache.org/fop/stable/running.html\n   RELEASE NOTES\n ==============================================================================\n \n+Version 0.95beta\n+================\n+\n+This is a pre-version of the third production grade release of the new FOP\n+codebase. It contains many bug fixes and new features. See below for details.\n+\n+Compliance\n+----------\n+\n+This release implements the XSL 1.0 and 1.1 recommendations to a high\n+degree of compliance. See the compliance page\n+http://xmlgraphics.apache.org/fop/compliance.html for a detailed\n+overview.\n+\n+Known issues\n+------------\n+\n+The known issues of this release are listed at\n+http://xmlgraphics.apache.org/fop/0.95/knownissues_overview.html.\n+\n+Major Changes in Version 0.95\n+-----------------------------\n+\n+* Add new fox:external-document extension element that allows to insert whole\n+  documents into a page-sequence (JM)\n+* Add support for background on fo:table-column and fo:table-header/footer/body\n+  elements (VH)\n+* Add support for conditional borders in tables (VH)\n+* Add support for scale-down-to-fit and scale-up-to-fit (JM)\n+* Fix various bugs and performance problems with external graphics by\n+  introducing a new image loading framework (JM)\n+\n+The long list of changes in this release is available at\n+http://xmlgraphics.apache.org/fop/0.95/changes_0.95.html.\n+\n+The long list of changes in this and earlier releases is available at\n+http://xmlgraphics.apache.org/fop/changes.html.\n+\n+\n+\n Version 0.94\n ============\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/README",
                "sha": "133232276b97017aa251c676321fce56df29ed7c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/build.properties",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.properties?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "build.properties",
                "patch": "@@ -24,8 +24,8 @@\n # javac.debug = on\n # javac.optimize = off\n # javac.deprecation = on\n-# javac.source = 1.3\n-# javac.target = 1.3\n+# javac.source = 1.4\n+# javac.target = 1.4\n # javac.fork = on\n \n ## JUnit task switches",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/build.properties",
                "sha": "2a8b4c80c010367e5d52a789acc4c1b01bbe526d",
                "status": "modified"
            },
            {
                "additions": 167,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/build.xml",
                "changes": 263,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/build.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 96,
                "filename": "build.xml",
                "patch": "@@ -118,23 +118,21 @@ list of possible build targets.\n     </fileset>\n   </path>\n \n-  <path id=\"libs-run-classpath\">\n-    <fileset dir=\"${basedir}/lib\">\n-      <include name=\"*.jar\"/>\n-    </fileset>\n-    <fileset dir=\"${optional.lib.dir}\">\n+  <path id=\"libs-build-tools-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n+    <fileset dir=\"${basedir}/lib/build\">\n       <include name=\"*.jar\"/>\n     </fileset>\n+  </path>\n+  \n+  <path id=\"libs-run-classpath\">\n+    <path refid=\"libs-build-classpath\"/>\n     <fileset dir=\"${basedir}/build\">\n       <include name=\"fop.jar\"/>\n       <include name=\"fop-hyph.jar\" />\n     </fileset>\n   </path>\n \n-  <patternset id=\"exclude-jimi\">\n-    <exclude name=\"org/apache/fop/image/JimiImage.java\" unless=\"jimi.present\"/>\n-  </patternset>\n-\n   <patternset id=\"exclude-jai\">\n     <exclude name=\"org/apache/fop/image/JAIImage.java\" unless=\"jai.present\"/>\n     <exclude name=\"org/apache/fop/render/pcl/JAIMonochromeBitmapConverter.java\" unless=\"jai.present\"/>\n@@ -148,7 +146,7 @@ list of possible build targets.\n   <property name=\"name\" value=\"fop\"/>\n   <property name=\"NAME\" value=\"FOP\"/>\n   <property name=\"version\" value=\"svn-trunk\"/>\n-  <property name=\"year\" value=\"1999-2007\"/>\n+  <property name=\"year\" value=\"1999-2008\"/>\n \n   <property name=\"javac.debug\" value=\"on\"/>\n   <property name=\"javac.optimize\" value=\"off\"/>\n@@ -214,7 +212,7 @@ list of possible build targets.\n   <!-- =================================================================== -->\n   <!-- Initialization target                                               -->\n   <!-- =================================================================== -->\n-  <target name=\"init\" depends=\"init-avail, init-filters-jdk14, init-filters-jdk13\">\n+  <target name=\"init\" depends=\"init-avail\">\n   </target>\n \n   <target name=\"init-avail\">\n@@ -224,18 +222,6 @@ list of possible build targets.\n     <echo message=\"VM: ${java.vm.version}, ${java.vm.vendor}\"/>\n     <echo message=\"JAVA_HOME: ${env.JAVA_HOME}\"/>\n \n-    <available property=\"jimi.present\" classname=\"com.sun.jimi.core.Jimi\"\n-        classpathref=\"libs-build-classpath\"/>\n-    <condition property=\"jimi.message\" value=\"Jimi Support PRESENT\">\n-      <equals arg1=\"${jimi.present}\" arg2=\"true\"/>\n-    </condition>\n-    <condition property=\"jimi.message\" value=\"Jimi Support NOT Present\">\n-      <not>\n-        <equals arg1=\"${jimi.present}\" arg2=\"true\"/>\n-      </not>\n-    </condition>\n-    <echo message=\"${jimi.message}\"/>\n-\n     <available property=\"jai.present\" classname=\"javax.media.jai.JAI\"\n         classpathref=\"libs-build-classpath\"/>\n     <condition property=\"jai.message\" value=\"JAI Support PRESENT\">\n@@ -261,7 +247,8 @@ list of possible build targets.\n     <echo message=\"${jce.message}\"/>\n \n     <available property=\"jdk14.present\" classname=\"java.lang.CharSequence\"/>\n-\n+    <fail message=\"${Name} requires at least Java 1.4!\" unless=\"jdk14.present\"/>\n+    \n     <available property=\"junit.present\" classname=\"junit.framework.TestCase\"\n         classpathref=\"libs-build-classpath\"/>\n     <condition property=\"junit.message\" value=\"JUnit Support PRESENT\">\n@@ -292,22 +279,6 @@ list of possible build targets.\n    \n   </target>\n \n-  <target name=\"init-filters-jdk13\" depends=\"init-avail\" unless=\"jdk14.present\">\n-    <echo message=\"Use GraphicsConfiguration adapter for JDK 1.3 or earlier.\"/>\n-    <path id=\"graphics-configuration-adapter\">\n-      <pathelement location=\"src/java-1.3\"/>\n-    </path>\n-    <property name=\"src.java.version.dir\" value=\"${basedir}/src/java-1.3\"/>\n-  </target>\n-\n-  <target name=\"init-filters-jdk14\" depends=\"init-avail\" if=\"jdk14.present\">\n-    <echo message=\"Use GraphicsConfiguration adapter for JDK 1.4.\"/>\n-    <path id=\"graphics-configuration-adapter\">\n-      <pathelement location=\"src/java-1.4\"/>\n-    </path>\n-    <property name=\"src.java.version.dir\" value=\"${basedir}/src/java-1.4\"/>\n-  </target>\n-\n   <!-- =================================================================== -->\n   <!-- Help on usage                                                       -->\n   <!-- =================================================================== -->\n@@ -393,28 +364,131 @@ list of possible build targets.\n   <!-- =================================================================== -->\n   <!-- Compiles the source directory                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-java\" depends=\"init, codegen\" description=\"Compiles the source code\">\n+  <target name=\"compile-java\" depends=\"init, codegen\">\n     <!-- create directories -->\n     <mkdir dir=\"${build.classes.dir}\"/>\n     <javac destdir=\"${build.classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n            deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n            source=\"${javac.source}\" target=\"${javac.target}\">\n       <src path=\"${build.gensrc.dir}\"/>\n       <src path=\"${src.java.dir}\"/>\n-      <src refid=\"graphics-configuration-adapter\"/>\n       <patternset includes=\"**/*.java\"/>\n-      <!--patternset includes=\"org/apache/fop/svg/GraphicsConfiguration.java\"/-->\n       <patternset refid=\"exclude-jce-dependencies\"/>\n       <patternset refid=\"exclude-jai\"/>\n-      <patternset refid=\"exclude-jimi\"/>\n       <classpath refid=\"libs-build-classpath\"/>\n     </javac>\n+\n+    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n+    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+           source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.sandbox.dir}\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <patternset refid=\"exclude-jai\"/>\n+      <classpath>\n+        <path refid=\"libs-build-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+  </target>\n+\n+  <target name=\"resourcegen\" depends=\"compile-java\">\n+    <mkdir dir=\"${build.codegen-classes.dir}\"/>\n+    <javac destdir=\"${build.codegen-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n+      deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n+      source=\"${javac.source}\" target=\"${javac.target}\">\n+      <src path=\"${src.codegen.dir}/java\"/>\n+      <patternset includes=\"**/*.java\"/>\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+      </classpath>\n+    </javac>\n+    <copy todir=\"${build.codegen-classes.dir}\">\n+      <fileset dir=\"${src.codegen.dir}/java\">\n+        <include name=\"**/*.xsl\"/>\n+      </fileset>\n+    </copy>\n+    \n+    <taskdef name=\"eventResourceGenerator\"\n+      classname=\"org.apache.fop.tools.EventProducerCollectorTask\">\n+      <classpath>\n+        <path refid=\"libs-build-tools-classpath\"/>\n+        <pathelement location=\"${build.classes.dir}\"/>\n+        <pathelement location=\"${build.codegen-classes.dir}\"/>\n+      </classpath>\n+    </taskdef>\n+  \n+    <eventResourceGenerator\n+        modelfile=\"${build.gensrc.dir}/org/apache/fop/events/event-model.xml\"\n+        translationfile=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"**/*.java\"/>\n+        <exclude name=\"org/apache/fop/render/*/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/events/EventFormatter.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/afp/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/afp/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/afp/AFPEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/bitmap/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/bitmap/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/bitmap/BitmapRendererEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pcl/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pcl/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pcl/PCLEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/pdf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/pdf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/pdf/PDFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/ps/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/ps/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/ps/PSEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+    <eventResourceGenerator\n+      modelfile=\"${build.gensrc.dir}/org/apache/fop/render/rtf/event-model.xml\"\n+      translationfile=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\">\n+      <fileset dir=\"${src.java.dir}\">\n+        <include name=\"org/apache/fop/render/rtf/**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <fixcrlf file=\"${src.java.dir}/org/apache/fop/render/rtf/RTFEventProducer.xml\" tab=\"remove\" tablength=\"2\"/>\n+  </target>\n+  \n+  <target name=\"compile-copy-resources\" depends=\"resourcegen\">\n     <copy todir=\"${build.classes.dir}\">\n       <fileset dir=\"${src.java.dir}\">\n         <include name=\"META-INF/**\"/>\n         <include name=\"**/*.icm\"/>\n+        <include name=\"**/*.xml\"/>\n         <include name=\"**/*.LICENSE.txt\"/>\n       </fileset>\n+      <fileset dir=\"${build.gensrc.dir}\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n     </copy>\n     <mkdir dir=\"${build.viewer.resources.dir}\"/>\n     <copy todir=\"${build.viewer.resources.dir}\">\n@@ -424,31 +498,22 @@ list of possible build targets.\n     <copy todir=\"${build.viewer.images.dir}\">\n       <fileset dir=\"${src.viewer.images.dir}\"/>\n     </copy>\n-\n-    <mkdir dir=\"${build.sandbox-classes.dir}\"/>\n-    <javac destdir=\"${build.sandbox-classes.dir}\" fork=\"${javac.fork}\" debug=\"${javac.debug}\"\n-           deprecation=\"${javac.deprecation}\" optimize=\"${javac.optimize}\"\n-           source=\"${javac.source}\" target=\"${javac.target}\">\n-      <src path=\"${src.sandbox.dir}\"/>\n-      <patternset includes=\"**/*.java\"/>\n-      <patternset refid=\"exclude-jai\"/>\n-      <classpath>\n-        <path refid=\"libs-build-classpath\"/>\n-        <pathelement location=\"${build.classes.dir}\"/>\n-      </classpath>\n-    </javac>\n+    \n+    <!-- sandbox -->\n     <copy todir=\"${build.sandbox-classes.dir}\">\n       <fileset dir=\"${src.sandbox.dir}\">\n         <include name=\"META-INF/**\"/>\n       </fileset>\n     </copy>\n+    \n   </target>\n-\n+  \n+  <target name=\"compile\" depends=\"compile-java, compile-copy-resources\" description=\"Compiles the source code\"/>\n \n   <!-- =================================================================== -->\n   <!-- compiles hyphenation patterns                                       -->\n   <!-- =================================================================== -->\n-  <target name=\"compile-hyphenation\" depends=\"compile-java\">\n+  <target name=\"compile-hyphenation\" depends=\"compile\">\n     <path id=\"hyph-classpath\">\n       <path refid=\"libs-build-classpath\"/>\n       <pathelement location=\"${build.classes.dir}\"/>\n@@ -486,13 +551,13 @@ list of possible build targets.\n   <!-- main FOP JARs                                                       -->\n   <!-- =================================================================== -->\n \n-  <target name=\"uptodate-jar-main\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-main\" depends=\"compile\">\n     <uptodate property=\"jar.main.uptodate\" targetfile=\"${build.dir}/fop.jar\">\n       <srcfiles dir= \"${build.classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-main\" depends=\"compile-java,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n+  <target name=\"jar-main\" depends=\"compile,uptodate-jar-main\" description=\"Generates the main jar file\" unless=\"jar.main.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -521,13 +586,13 @@ list of possible build targets.\n     </jar>\n   </target>\n \n-  <target name=\"uptodate-jar-sandbox\" depends=\"compile-java\">\n+  <target name=\"uptodate-jar-sandbox\" depends=\"compile\">\n     <uptodate property=\"jar.sandbox.uptodate\" targetfile=\"${build.dir}/fop-sandbox.jar\">\n       <srcfiles dir= \"${build.sandbox-classes.dir}\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"jar-sandbox\" depends=\"compile-java,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n+  <target name=\"jar-sandbox\" depends=\"compile,uptodate-jar-sandbox\" description=\"Generates the sandbox jar file\" unless=\"jar.sandbox.uptodate\">\n     <tstamp>\n       <format property=\"ts\" pattern=\"yyyyMMdd-HHmmss-z\"/>\n     </tstamp>\n@@ -543,7 +608,6 @@ list of possible build targets.\n     <uptodate property=\"jar.sources.uptodate\" targetfile=\"${build.dir}/fop-sources.jar\">\n       <srcfiles dir=\"${build.gensrc.dir}\"/>\n       <srcfiles dir=\"${src.java.dir}\"/>\n-      <srcfiles refid=\"graphics-configuration-adapter\"/>\n     </uptodate>\n   </target>\n \n@@ -609,7 +673,7 @@ list of possible build targets.\n       <include name=\"org/apache/fop/image/Abstract*\"/>\n       <include name=\"org/apache/fop/image/analyser/*.class\"/>\n       <include name=\"org/apache/fop/util/CMYKColorSpace*.class\"/>\n-      <include name=\"org/apache/fop/util/ColorExt*.class\"/>\n+      <include name=\"org/apache/fop/util/Color*.class\"/>\n       <include name=\"org/apache/fop/util/ASCII*.class\"/>\n       <include name=\"org/apache/fop/util/*OutputStream.class\"/>\n       <include name=\"org/apache/fop/util/SubInputStream.class\"/>\n@@ -643,14 +707,14 @@ list of possible build targets.\n     <include name=\"xmlgraphics-commons*.jar\"/>\n   </fileset>\n   \n-  <target name=\"uptodate-transcoder-pkg\" depends=\"compile-java\">\n+  <target name=\"uptodate-transcoder-pkg\" depends=\"compile\">\n     <uptodate property=\"transcoder.pkg.uptodate\" targetfile=\"${build.dir}/fop-transcoder.jar\">\n       <srcfiles refid=\"transcoder-classes-files\"/>\n       <srcfiles refid=\"transcoder-lib-files\"/>\n     </uptodate>\n   </target>\n \n-  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile-java\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n+  <target name=\"transcoder-pkg\" depends=\"uptodate-transcoder-pkg, compile\" description=\"Generates the jar for the transcoder package for Batik\" unless=\"transcoder.pkg.uptodate\">\n     <echo message=\"Creating the jar file ${build.dir}/fop-transcoder.jar\"/>\n \n     <property name=\"fop-transcoder.name\" value=\"FOP Transcoder Package\"/>\n@@ -726,8 +790,10 @@ list of possible build targets.\n       <exclude name=\"**/intermediate/*\"/>\n     </patternset>\n   </target>\n-  <target name=\"junit-compile\" depends=\"package, transcoder-pkg, junit-with-xmlunit, junit-without-xmlunit\" description=\"Runs FOP's JUnit tests\" if=\"junit.present\">\n+\n+  <target name=\"junit-compile-java\" depends=\"package, transcoder-pkg, junit-with-xmlunit, junit-without-xmlunit\" if=\"junit.present\">\n     <mkdir dir=\"${build.dir}/test-classes\"/>\n+    <mkdir dir=\"${build.dir}/test-gensrc\"/>\n     <mkdir dir=\"${junit.reports.dir}\"/>\n     <javac destdir=\"${build.dir}/test-classes\" fork=\"${javac.fork}\"\n            debug=\"${javac.debug}\" deprecation=\"${javac.deprecation}\"\n@@ -744,6 +810,25 @@ list of possible build targets.\n     </javac>\n   </target>\n \n+  <target name=\"junit-compile-copy-resources\" if=\"junit.present\">\n+    <eventResourceGenerator modelfile=\"${build.dir}/test-gensrc/org/apache/fop/events/test-event-model.xml\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"**/*.java\"/>\n+      </fileset>\n+    </eventResourceGenerator>\n+    <copy todir=\"${build.dir}/test-classes\">\n+      <fileset dir=\"${basedir}/test/java\">\n+        <include name=\"META-INF/**\"/>\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+      <fileset dir=\"${build.dir}/test-gensrc\">\n+        <include name=\"**/*.xml\"/>\n+      </fileset>\n+    </copy>\n+  </target>\n+\n+  <target name=\"junit-compile\" depends=\"junit-compile-java, junit-compile-copy-resources\" description=\"Compiles FOP's JUnit tests\" if=\"junit.present\"/>\n+\n   <target name=\"junit-transcoder\" depends=\"junit-compile\" description=\"Runs FOP's JUnit transcoder tests\" if=\"junit.present\">\n     <echo message=\"Running basic functionality tests for fop-transcoder.jar\"/>\n     <junit dir=\"${basedir}\" haltonfailure=\"${junit.haltonfailure}\" fork=\"${junit.fork}\">\n@@ -845,7 +930,7 @@ list of possible build targets.\n     <echo message=\"${hyphenation.message}\"/>\n   </target>\n \n-  <target name=\"junit-layout-standard\" depends=\"junit-compile\" if=\"junit.present\" description=\"Runs FOP's standard JUnit layout tests\">\n+  <target name=\"junit-layout-standard\" depends=\"junit-compile, junit-fotree\" if=\"junit.present\" description=\"Runs FOP's standard JUnit layout tests\">\n     <echo message=\"Running standard layout engine tests\"/>\n     <junit dir=\"${basedir}\" haltonfailure=\"${junit.haltonfailure}\" fork=\"${junit.fork}\" errorproperty=\"fop.junit.error\" failureproperty=\"fop.junit.failure\">\n       <sysproperty key=\"basedir\" value=\"${basedir}\"/>\n@@ -903,7 +988,7 @@ list of possible build targets.\n     </junit>\n   </target>\n \n-  <target name=\"junit-intermediate-format\" depends=\"junit-compile\" description=\"Runs FOP's intermediate format JUnit tests\" if=\"xmlunit.present\">\n+  <target name=\"junit-intermediate-format\" depends=\"junit-compile, junit-layout\" description=\"Runs FOP's intermediate format JUnit tests\" if=\"xmlunit.present\">\n     <echo message=\"Running intermediate format tests\"/>\n     <junit dir=\"${basedir}\" haltonfailure=\"${junit.haltonfailure}\" fork=\"${junit.fork}\" errorproperty=\"fop.junit.error\" failureproperty=\"fop.junit.failure\">\n       <sysproperty key=\"basedir\" value=\"${basedir}\"/>\n@@ -1018,6 +1103,7 @@ NOTE:\n         overview=\"${src.dir}/java/org/apache/fop/overview.html\"\n         use=\"true\"\n         failonerror=\"true\"\n+        source=\"${javac.source}\"\n         public=\"${javadoc.public}\"\n         package=\"${javadoc.package}\"\n         private=\"${javadoc.private}\">\n@@ -1031,7 +1117,6 @@ NOTE:\n         <pathelement path=\"${src.java.dir}\"/>\n         <pathelement path=\"${src.sandbox.dir}\"/>\n         <pathelement path=\"${build.gensrc.dir}\"/>\n-        <path refid=\"graphics-configuration-adapter\"/>\n       </sourcepath>\n       <tag name=\"todo\" scope=\"all\" description=\"To do:\"/>\n       <group title=\"Control and Startup\">\n@@ -1205,37 +1290,24 @@ NOTE:\n     -->\n     <echo message=\"Make sure you have a proper Forrest installation (see http://forrest.apache.org/)\"/>\n \n-    <!--<antcall target=\"site\"/>-->\n-    \n-    <!-- You can provide a JDK 1.4 for a JDK 1.3 build by adding \"javahome.jdk14\" to build-local.properties -->\n-    <condition property=\"javahome.jdk14.override\" value=\"${javahome.jdk14}\">\n-      <isset property=\"javahome.jdk14\"/>\n-    </condition>\n-    <echo message=\"java home: ${javahome.jdk14.override}\"/>\n-    <condition property=\"javahome.jdk14.override\" value=\"${env.JAVA_HOME}\">\n-      <not>\n-        <isset property=\"javahome.jdk14.override\"/>\n-      </not>\n-    </condition>\n-    <echo message=\"java home: ${javahome.jdk14.override}\"/>\n     <condition property=\"forrest.call\" value=\"forrest.bat\" else=\"forrest\">\n       <os family=\"windows\"/>\n     </condition>\n-    <exec executable=\"${forrest.call}\">\n-      <env key=\"JAVA_HOME\" value=\"${javahome.jdk14.override}\"/>\n-    </exec>\n+    <exec executable=\"${forrest.call}\"/>\n   </target>\n   \n   <!-- =================================================================== -->\n   <!-- Creates the distribution                                            -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"dist-src,dist-bin\" description=\"Generates the distribution package\"/>\n+  <target name=\"dist\" depends=\"dist-prereq,dist-src,dist-bin\" description=\"Generates the distribution package\"/>\n \n-  <target name=\"dist-bin\" depends=\"all,javadocs,docs\">\n-    <echo message=\"Building the binary distribution files (zip,tar)\"/>\n-    <fail message=\"A complete binary build requires Jimi\" unless=\"jimi.present\"/>\n+  <target name=\"dist-prereq\" depends=\"init\">\n     <fail message=\"A complete binary build requires JAI\" unless=\"jai.present\"/>\n     <fail message=\"A complete binary build requires JCE\" unless=\"jce.present\"/>\n+  </target>\n+\n+  <target name=\"dist-bin\" depends=\"all,javadocs,docs\">\n+    <echo message=\"Building the binary distribution files (zip,tar)\"/>\n     <mkdir dir=\"${dist.bin.result.dir}\"/>\n     <copy todir=\"${dist.bin.result.dir}\">\n       <fileset refid=\"dist.bin\"/>\n@@ -1251,10 +1323,9 @@ NOTE:\n     <copy todir=\"${dist.bin.result.dir}/build\" file=\"build/fop.jar\"/>\n     <chmod file=\"${dist.bin.result.dir}/fop\" perm=\"ugo+rx\"/>\n \n-    <property name=\"bin.suffix\" value=\"bin-jdk${java.specification.version}\"/>\n-    <zip zipfile=\"${name}-${version}-${bin.suffix}.zip\" basedir=\"${dist.bin.dir}\" includes=\"**\"/>\n+    <zip zipfile=\"${name}-${version}-bin.zip\" basedir=\"${dist.bin.dir}\" includes=\"**\"/>\n     <tar longfile=\"gnu\"\n-         destfile=\"${name}-${version}-${bin.suffix}.tar\">\n+         destfile=\"${name}-${version}-bin.tar\">\n       <tarfileset dir=\"${dist.bin.dir}\" mode=\"755\">\n         <include name=\"${name}-${version}/fop\"/>\n       </tarfileset>\n@@ -1263,8 +1334,8 @@ NOTE:\n         <exclude name=\"${name}-${version}/fop\"/>\n       </tarfileset>\n     </tar>\n-    <gzip zipfile=\"${name}-${version}-${bin.suffix}.tar.gz\" src=\"${name}-${version}-${bin.suffix}.tar\"/>\n-    <delete file=\"${name}-${version}-${bin.suffix}.tar\"/>\n+    <gzip zipfile=\"${name}-${version}-bin.tar.gz\" src=\"${name}-${version}-bin.tar\"/>\n+    <delete file=\"${name}-${version}-bin.tar\"/>\n   </target>\n \n   <target name=\"dist-src\" depends=\"all\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/build.xml",
                "sha": "c4eb1e94d911258914da64c63b25a1910c894eaa",
                "status": "modified"
            },
            {
                "additions": 113,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleAWTViewer.java",
                "changes": 226,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/ExampleAWTViewer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 113,
                "filename": "examples/embedding/java/embedding/ExampleAWTViewer.java",
                "patch": "@@ -1,113 +1,113 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n- \r\n-package embedding;\r\n-\r\n-//Java\r\n-import java.io.File;\r\n-import java.io.IOException;\r\n-\r\n-//JAXP\r\n-import javax.xml.transform.Transformer;\r\n-import javax.xml.transform.TransformerFactory;\r\n-import javax.xml.transform.TransformerException;\r\n-import javax.xml.transform.Source;\r\n-import javax.xml.transform.Result;\r\n-import javax.xml.transform.stream.StreamSource;\r\n-import javax.xml.transform.sax.SAXResult;\r\n-\r\n-//Avalon\r\n-import org.apache.avalon.framework.ExceptionUtil;\r\n-\r\n-//FOP\r\n-import org.apache.fop.apps.FOPException;\r\n-import org.apache.fop.apps.Fop;\r\n-import org.apache.fop.apps.FopFactory;\r\n-import org.apache.fop.apps.MimeConstants;\r\n-\r\n-/**\r\n- * This class demonstrates the use of the AWT Viewer.\r\n- */\r\n-public class ExampleAWTViewer {\r\n-\r\n-    // configure fopFactory as desired\r\n-    private FopFactory fopFactory = FopFactory.newInstance();\r\n-\r\n-    /**\r\n-     * Display an FO file in the AWT Preview.\r\n-     * @param fo the FO file\r\n-     * @throws IOException In case of an I/O problem\r\n-     * @throws FOPException In case of a problem during layout\r\n-     * @throws TransformerException In case of a problem during XML processing\r\n-     */\r\n-    public void viewFO(File fo)\r\n-                throws IOException, FOPException, TransformerException {\r\n-\r\n-        //Setup FOP\r\n-        Fop fop = fopFactory.newFop(MimeConstants.MIME_FOP_AWT_PREVIEW);\r\n-\r\n-        try {\r\n-\r\n-            //Load XSL-FO file (you can also do an XSL transformation here)\r\n-            TransformerFactory factory = TransformerFactory.newInstance();\r\n-            Transformer transformer = factory.newTransformer();\r\n-            Source src = new StreamSource(fo);\r\n-            Result res = new SAXResult(fop.getDefaultHandler());\r\n-            transformer.transform(src, res);\r\n-\r\n-        } catch (Exception e) {\r\n-            if (e instanceof FOPException) {\r\n-                throw (FOPException)e;\r\n-            }\r\n-            throw new FOPException(e);\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * Main method.\r\n-     * @param args the command-line arguments\r\n-     */\r\n-    public static void main(String[] args) {\r\n-        try {\r\n-            System.out.println(\"FOP ExampleAWTViewer\\n\");\r\n-            System.out.println(\"Preparing...\");\r\n-\r\n-            //Setup directories\r\n-            File baseDir = new File(\".\");\r\n-            File outDir = new File(baseDir, \"out\");\r\n-            outDir.mkdirs();\r\n-\r\n-            //Setup input and output files\r\n-            File fofile = new File(baseDir, \"xml/fo/helloworld.fo\");\r\n-\r\n-            System.out.println(\"Input: XSL-FO (\" + fofile + \")\");\r\n-            System.out.println(\"Output: AWT Viewer\");\r\n-            System.out.println();\r\n-            System.out.println(\"Starting AWT Viewer...\");\r\n-\r\n-            ExampleAWTViewer app = new ExampleAWTViewer();\r\n-            app.viewFO(fofile);\r\n-\r\n-            System.out.println(\"Success!\");\r\n-        } catch (Exception e) {\r\n-            System.err.println(ExceptionUtil.printStackTrace(e));\r\n-            System.exit(-1);\r\n-        }\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding;\n+\n+//Java\n+import java.io.File;\n+import java.io.IOException;\n+\n+//JAXP\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Result;\n+import javax.xml.transform.stream.StreamSource;\n+import javax.xml.transform.sax.SAXResult;\n+\n+//Avalon\n+import org.apache.avalon.framework.ExceptionUtil;\n+\n+//FOP\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.apps.MimeConstants;\n+\n+/**\n+ * This class demonstrates the use of the AWT Viewer.\n+ */\n+public class ExampleAWTViewer {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+\n+    /**\n+     * Display an FO file in the AWT Preview.\n+     * @param fo the FO file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a problem during layout\n+     * @throws TransformerException In case of a problem during XML processing\n+     */\n+    public void viewFO(File fo)\n+                throws IOException, FOPException, TransformerException {\n+\n+        //Setup FOP\n+        Fop fop = fopFactory.newFop(MimeConstants.MIME_FOP_AWT_PREVIEW);\n+\n+        try {\n+\n+            //Load XSL-FO file (you can also do an XSL transformation here)\n+            TransformerFactory factory = TransformerFactory.newInstance();\n+            Transformer transformer = factory.newTransformer();\n+            Source src = new StreamSource(fo);\n+            Result res = new SAXResult(fop.getDefaultHandler());\n+            transformer.transform(src, res);\n+\n+        } catch (Exception e) {\n+            if (e instanceof FOPException) {\n+                throw (FOPException)e;\n+            }\n+            throw new FOPException(e);\n+        }\n+    }\n+\n+    /**\n+     * Main method.\n+     * @param args the command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleAWTViewer\\n\");\n+            System.out.println(\"Preparing...\");\n+\n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files\n+            File fofile = new File(baseDir, \"xml/fo/helloworld.fo\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fofile + \")\");\n+            System.out.println(\"Output: AWT Viewer\");\n+            System.out.println();\n+            System.out.println(\"Starting AWT Viewer...\");\n+\n+            ExampleAWTViewer app = new ExampleAWTViewer();\n+            app.viewFO(fofile);\n+\n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            System.err.println(ExceptionUtil.printStackTrace(e));\n+            System.exit(-1);\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleAWTViewer.java",
                "sha": "716ea14878e60b1b5a94a94bbbf43587c200f9a1",
                "status": "modified"
            },
            {
                "additions": 143,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleFO2JPSPrint.java",
                "changes": 143,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/ExampleFO2JPSPrint.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/ExampleFO2JPSPrint.java",
                "patch": "@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding;\n+\n+// Java\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.print.Doc;\n+import javax.print.DocFlavor;\n+import javax.print.DocPrintJob;\n+import javax.print.PrintException;\n+import javax.print.PrintService;\n+import javax.print.PrintServiceLookup;\n+import javax.print.ServiceUI;\n+import javax.print.SimpleDoc;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.render.print.PageableRenderer;\n+\n+/**\n+ * This class demonstrates printing an FO file using JPS (Java Printing System).\n+ */\n+public class ExampleFO2JPSPrint {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+    \n+    private DocPrintJob createDocPrintJob() {\n+        PrintService[] services = PrintServiceLookup.lookupPrintServices(\n+                DocFlavor.SERVICE_FORMATTED.PAGEABLE, null);\n+        PrintRequestAttributeSet attributes = new HashPrintRequestAttributeSet();\n+        PrintService printService = ServiceUI.printDialog(null, 50, 50, \n+                services, services[0], null, attributes);\n+        if (printService != null) {\n+            return printService.createPrintJob();\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Prints an FO file using JPS.\n+     * @param fo the FO file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a FOP problem\n+     * @throws TransformerException In case of a problem during XSLT processing\n+     * @throws PrintException If an error occurs while printing\n+     */\n+    public void printFO(File fo)\n+            throws IOException, FOPException, TransformerException, PrintException {\n+        \n+        //Set up DocPrintJob instance\n+        DocPrintJob printJob = createDocPrintJob();\n+\n+        //Set up a custom user agent so we can supply our own renderer instance\n+        FOUserAgent userAgent = fopFactory.newFOUserAgent();\n+\n+        PageableRenderer renderer = new PageableRenderer();\n+        renderer.setUserAgent(userAgent);\n+        userAgent.setRendererOverride(renderer);\n+        \n+        // Construct FOP with desired output format\n+        Fop fop = fopFactory.newFop(userAgent);\n+\n+        // Setup JAXP using identity transformer\n+        TransformerFactory factory = TransformerFactory.newInstance();\n+        Transformer transformer = factory.newTransformer(); // identity transformer\n+        \n+        // Setup input stream\n+        Source src = new StreamSource(fo);\n+\n+        // Resulting SAX events (the generated FO) must be piped through to FOP\n+        Result res = new SAXResult(fop.getDefaultHandler());\n+        \n+        // Start XSLT transformation and FOP processing\n+        transformer.transform(src, res);\n+\n+        Doc doc = new SimpleDoc(renderer, DocFlavor.SERVICE_FORMATTED.PAGEABLE, null);\n+        printJob.print(doc, null);\n+    }\n+\n+    /**\n+     * Main method.\n+     * @param args command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleFO2JPSPrint\\n\");\n+            System.out.println(\"Preparing...\");\n+            \n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files            \n+            File fofile = new File(baseDir, \"xml/fo/helloworld.fo\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fofile + \")\");\n+            System.out.println(\"Output: JPS (Java Printing System)\");\n+            System.out.println();\n+            System.out.println(\"Transforming...\");\n+            \n+            ExampleFO2JPSPrint app = new ExampleFO2JPSPrint();\n+            app.printFO(fofile);\n+            \n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleFO2JPSPrint.java",
                "sha": "a67e2bdadbc830d516e7bdc4f49d39476e94add5",
                "status": "added"
            },
            {
                "additions": 119,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleFO2OldStylePrint.java",
                "changes": 246,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/ExampleFO2OldStylePrint.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 127,
                "filename": "examples/embedding/java/embedding/ExampleFO2OldStylePrint.java",
                "patch": "@@ -1,127 +1,119 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n- \r\n-package embedding;\r\n-\r\n-// Java\r\n-import java.awt.print.PrinterJob;\r\n-import java.io.File;\r\n-import java.io.IOException;\r\n-\r\n-//JAXP\r\n-import javax.xml.transform.Transformer;\r\n-import javax.xml.transform.TransformerFactory;\r\n-import javax.xml.transform.Source;\r\n-import javax.xml.transform.Result;\r\n-import javax.xml.transform.stream.StreamSource;\r\n-import javax.xml.transform.sax.SAXResult;\r\n-\r\n-\r\n-// FOP\r\n-import org.apache.fop.apps.FOUserAgent;\r\n-import org.apache.fop.apps.Fop;\r\n-import org.apache.fop.apps.FOPException;\r\n-import org.apache.fop.apps.FopFactory;\r\n-import org.apache.fop.render.print.PrintRenderer;\r\n-\r\n-/**\r\n- * This class demonstrates printing an FO file to a PrinterJob instance.\r\n- */\r\n-public class ExampleFO2OldStylePrint {\r\n-\r\n-    // configure fopFactory as desired\r\n-    private FopFactory fopFactory = FopFactory.newInstance();\r\n-    \r\n-    /**\r\n-     * Prints an FO file using an old-style PrinterJob.\r\n-     * @param fo the FO file\r\n-     * @throws IOException In case of an I/O problem\r\n-     * @throws FOPException In case of a FOP problem\r\n-     */\r\n-    public void printFO(File fo) throws IOException, FOPException {\r\n-        \r\n-        //Set up PrinterJob instance\r\n-        PrinterJob printerJob = PrinterJob.getPrinterJob();\r\n-        printerJob.setJobName(\"FOP Printing Example\");\r\n-\r\n-        try {\r\n-            //Set up a custom user agent so we can supply our own renderer instance\r\n-            FOUserAgent userAgent = fopFactory.newFOUserAgent();\r\n-\r\n-            //Set up our own PrintRenderer instance so we can supply a special PrinterJob instance.\r\n-            PrintRenderer renderer = new PrintRenderer(printerJob);\r\n-            renderer.setUserAgent(userAgent);\r\n-            \r\n-            userAgent.setRendererOverride(renderer);\r\n-            \r\n-            // Construct fop with desired output format (here, it is set through the user agent)\r\n-            Fop fop = fopFactory.newFop(userAgent);\r\n-\r\n-            // Setup JAXP using identity transformer\r\n-            TransformerFactory factory = TransformerFactory.newInstance();\r\n-            Transformer transformer = factory.newTransformer(); // identity transformer\r\n-            \r\n-            // Setup input stream\r\n-            Source src = new StreamSource(fo);\r\n-\r\n-            // Resulting SAX events (the generated FO) must be piped through to FOP\r\n-            Result res = new SAXResult(fop.getDefaultHandler());\r\n-            \r\n-            // Start XSLT transformation and FOP processing\r\n-            transformer.transform(src, res);\r\n-\r\n-        } catch (Exception e) {\r\n-            e.printStackTrace(System.err);\r\n-            System.exit(-1);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Main method.\r\n-     * @param args command-line arguments\r\n-     */\r\n-    public static void main(String[] args) {\r\n-        try {\r\n-            System.out.println(\"FOP ExampleFO2OldStylePrint\\n\");\r\n-            System.out.println(\"Preparing...\");\r\n-            \r\n-            //Setup directories\r\n-            File baseDir = new File(\".\");\r\n-            File outDir = new File(baseDir, \"out\");\r\n-            outDir.mkdirs();\r\n-\r\n-            //Setup input and output files            \r\n-            File fofile = new File(baseDir, \"xml/fo/helloworld.fo\");\r\n-\r\n-            System.out.println(\"Input: XSL-FO (\" + fofile + \")\");\r\n-            System.out.println(\"Output: old-style printing using PrinterJob\");\r\n-            System.out.println();\r\n-            System.out.println(\"Transforming...\");\r\n-            \r\n-            ExampleFO2OldStylePrint app = new ExampleFO2OldStylePrint();\r\n-            app.printFO(fofile);\r\n-            \r\n-            System.out.println(\"Success!\");\r\n-        } catch (Exception e) {\r\n-            e.printStackTrace(System.err);\r\n-            System.exit(-1);\r\n-        }\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding;\n+\n+// Java\n+import java.awt.print.PrinterJob;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.apps.MimeConstants;\n+\n+/**\n+ * This class demonstrates printing an FO file to a PrinterJob instance.\n+ */\n+public class ExampleFO2OldStylePrint {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+    \n+    /**\n+     * Prints an FO file using an old-style PrinterJob.\n+     * @param fo the FO file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a FOP problem\n+     */\n+    public void printFO(File fo) throws IOException, FOPException {\n+        \n+        //Set up PrinterJob instance\n+        PrinterJob printerJob = PrinterJob.getPrinterJob();\n+        printerJob.setJobName(\"FOP Printing Example\");\n+\n+        try {\n+            //Set up a custom user agent so we can supply our own renderer instance\n+            FOUserAgent userAgent = fopFactory.newFOUserAgent();\n+            userAgent.getRendererOptions().put(\"printerjob\", printerJob);\n+\n+            // Construct FOP with desired output format\n+            Fop fop = fopFactory.newFop(MimeConstants.MIME_FOP_PRINT, userAgent);\n+\n+            // Setup JAXP using identity transformer\n+            TransformerFactory factory = TransformerFactory.newInstance();\n+            Transformer transformer = factory.newTransformer(); // identity transformer\n+            \n+            // Setup input stream\n+            Source src = new StreamSource(fo);\n+\n+            // Resulting SAX events (the generated FO) must be piped through to FOP\n+            Result res = new SAXResult(fop.getDefaultHandler());\n+            \n+            // Start XSLT transformation and FOP processing\n+            transformer.transform(src, res);\n+\n+        } catch (Exception e) {\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+\n+\n+    /**\n+     * Main method.\n+     * @param args command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleFO2OldStylePrint\\n\");\n+            System.out.println(\"Preparing...\");\n+            \n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files            \n+            File fofile = new File(baseDir, \"xml/fo/helloworld.fo\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fofile + \")\");\n+            System.out.println(\"Output: old-style printing using PrinterJob\");\n+            System.out.println();\n+            System.out.println(\"Transforming...\");\n+            \n+            ExampleFO2OldStylePrint app = new ExampleFO2OldStylePrint();\n+            app.printFO(fofile);\n+            \n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/ExampleFO2OldStylePrint.java",
                "sha": "d9bc1d11df6e56001c3c365267166ecd4b37cec9",
                "status": "modified"
            },
            {
                "additions": 227,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/events/ExampleEvents.java",
                "changes": 227,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/ExampleEvents.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/ExampleEvents.java",
                "patch": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package embedding.events;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.URL;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.apps.Fop;\n+import org.apache.fop.apps.FopFactory;\n+import org.apache.fop.apps.MimeConstants;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This class demonstrates how to register an event listener with FOP so you can customize\n+ * FOP's error behaviour.\n+ */\n+public class ExampleEvents {\n+\n+    // configure fopFactory as desired\n+    private FopFactory fopFactory = FopFactory.newInstance();\n+\n+    /**\n+     * Converts an FO file to a PDF file using FOP\n+     * @param fo the FO file\n+     * @param pdf the target PDF file\n+     * @throws IOException In case of an I/O problem\n+     * @throws FOPException In case of a FOP problem\n+     * @throws TransformerException In case of a problem with XSLT\n+     */\n+    public void convertFO2PDF(URL fo, File pdf)\n+            throws IOException, FOPException, TransformerException {\n+        \n+        OutputStream out = null;\n+        \n+        try {\n+            //Create the user agent for this processing run\n+            FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+            \n+            //Adding a simple logging listener that writes to stdout and stderr\n+            foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());\n+            \n+            // Add your own event listener\n+            foUserAgent.getEventBroadcaster().addEventListener(new MyEventListener());\n+            \n+            // configure foUserAgent further as desired\n+    \n+            // Setup output stream.  Note: Using BufferedOutputStream\n+            // for performance reasons (helpful with FileOutputStreams).\n+            out = new FileOutputStream(pdf);\n+            out = new BufferedOutputStream(out);\n+\n+            // Construct fop with desired output format\n+            Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, foUserAgent, out);\n+\n+            // Setup JAXP using identity transformer\n+            TransformerFactory factory = TransformerFactory.newInstance();\n+            Transformer transformer = factory.newTransformer(); // identity transformer\n+            \n+            // Setup input stream\n+            Source src = new StreamSource(fo.toExternalForm());\n+\n+            // Resulting SAX events (the generated FO) must be piped through to FOP\n+            Result res = new SAXResult(fop.getDefaultHandler());\n+            \n+            // Start XSLT transformation and FOP processing\n+            transformer.transform(src, res);\n+\n+        } finally {\n+            IOUtils.closeQuietly(out);\n+        }\n+    }\n+\n+    private static class MyEventListener implements EventListener {\n+\n+        public void processEvent(Event event) {\n+            if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                    .equals(event.getEventID())) {\n+                \n+                //Get the FileNotFoundException that's part of the event's parameters\n+                FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+                System.out.println(\"---=== imageNotFound Event for \" + event.getParam(\"uri\")\n+                        + \"!!! ===---\");\n+                //Stop processing when an image could not be found. Otherwise, FOP would just\n+                //continue without the image!\n+                \n+                System.out.println(\"Throwing a RuntimeException...\");\n+                throw new RuntimeException(EventFormatter.format(event), fnfe);\n+            } else {\n+                //ignore all other events\n+            }\n+        }\n+        \n+    }\n+    \n+    /** A simple event listener that writes the events to stdout and sterr. */\n+    private static class SysOutEventListener implements EventListener {\n+\n+        /** {@inheritDoc} */\n+        public void processEvent(Event event) {\n+            String msg = EventFormatter.format(event);\n+            EventSeverity severity = event.getSeverity();\n+            if (severity == EventSeverity.INFO) {\n+                System.out.println(\"[INFO ] \" + msg);\n+            } else if (severity == EventSeverity.WARN) {\n+                System.out.println(\"[WARN ] \" + msg);\n+            } else if (severity == EventSeverity.ERROR) {\n+                System.err.println(\"[ERROR] \" + msg);\n+            } else if (severity == EventSeverity.FATAL) {\n+                System.err.println(\"[FATAL] \" + msg);\n+            } else {\n+                assert false;\n+            }\n+        }\n+    }\n+    \n+\n+    /**\n+     * This method extracts the original exception from some exception. The exception\n+     * might be nested multiple levels deep.\n+     * @param t the Throwable to inspect\n+     * @return the original Throwable or the method parameter t if there are no nested Throwables.\n+     */\n+    private static Throwable getOriginalThrowable(Throwable t) {\n+        if (t instanceof SAXException) {\n+            SAXException saxe = (SAXException)t;\n+            if (saxe.getException() != null) {\n+                return getOriginalThrowable(saxe.getException());\n+            } else {\n+                return saxe;\n+            }\n+        } else {\n+            if (t.getCause() != null) {\n+                return getOriginalThrowable(t.getCause());\n+            } else {\n+                return t;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Main method.\n+     * @param args command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            System.out.println(\"FOP ExampleEvents\\n\");\n+            System.out.println(\"Preparing...\");\n+            \n+            //Setup directories\n+            File baseDir = new File(\".\");\n+            File outDir = new File(baseDir, \"out\");\n+            outDir.mkdirs();\n+\n+            //Setup input and output files\n+            URL fo = ExampleEvents.class.getResource(\"missing-image.fo\");\n+            File pdffile = new File(outDir, \"out.pdf\");\n+\n+            System.out.println(\"Input: XSL-FO (\" + fo.toExternalForm() + \")\");\n+            System.out.println(\"Output: PDF (\" + pdffile + \")\");\n+            System.out.println();\n+            System.out.println(\"Transforming...\");\n+            \n+            ExampleEvents app = new ExampleEvents();\n+            \n+            try {\n+                app.convertFO2PDF(fo, pdffile);\n+            } catch (TransformerException te) {\n+                //Note: We don't get the original exception here!\n+                //FOP needs to embed the exception in a SAXException and the TraX transformer\n+                //again wraps the SAXException in a TransformerException. Even our own\n+                //RuntimeException just wraps the original FileNotFoundException.\n+                //So we need to unpack to get the original exception (about three layers deep).\n+                Throwable originalThrowable = getOriginalThrowable(te);\n+                originalThrowable.printStackTrace(System.err);\n+                System.out.println(\"Aborted!\");\n+                System.exit(-1);\n+            }\n+            \n+            System.out.println(\"Success!\");\n+        } catch (Exception e) {\n+            //Some other error (shouldn't happen in this example)\n+            e.printStackTrace(System.err);\n+            System.exit(-1);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/events/ExampleEvents.java",
                "sha": "9c52e4ba1f6a7c0e45f33ced5ce3fcccaaa4f71d",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/events/missing-image.fo",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/events/missing-image.fo?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/embedding/java/embedding/events/missing-image.fo",
                "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n+  <fo:layout-master-set>\n+    <fo:simple-page-master master-name=\"A4\" page-height=\"29.7cm\" page-width=\"21cm\" margin=\"2cm\">\n+      <fo:region-body/>\n+    </fo:simple-page-master>\n+  </fo:layout-master-set>\n+  <fo:page-sequence master-reference=\"A4\">\n+    <fo:flow flow-name=\"xsl-region-body\">\n+      <fo:block>\n+        The following image is not available:\n+        <fo:external-graphic src=\"my-missing-image.png\"/>\n+      </fo:block>\n+    </fo:flow>\n+  </fo:page-sequence>\n+</fo:root>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/events/missing-image.fo",
                "sha": "2c55f66ce70474b6391d8e5dc951eb9ce56e447b",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/intermediate/ExampleConcat.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/intermediate/ExampleConcat.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "examples/embedding/java/embedding/intermediate/ExampleConcat.java",
                "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-/* $Id: ExampleDOM2PDF.java 332791 2005-11-12 15:58:07Z jeremias $ */\n+/* $Id$ */\n  \n package embedding.intermediate;\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/intermediate/ExampleConcat.java",
                "sha": "07790309d0f417f3a3ae38757f3766d45448b838",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/intermediate/ExampleStamp.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/embedding/java/embedding/intermediate/ExampleStamp.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "examples/embedding/java/embedding/intermediate/ExampleStamp.java",
                "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-/* $Id: ExampleDOM2PDF.java 332791 2005-11-12 15:58:07Z jeremias $ */\n+/* $Id$ */\n  \n package embedding.intermediate;\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/embedding/java/embedding/intermediate/ExampleStamp.java",
                "sha": "b1b0b77e7d469c6ed249595dbe4912e44f43da8f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.mathml.ImageLoaderFactoryMathML\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "sha": "ab58234d46f94d4cef2d21cd64f488b908646177",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.mathml.PreloaderMathML\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "sha": "870684c8fecf2362688949761767c5a1710f706e",
                "status": "added"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/ImageLoaderFactoryMathML.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/ImageLoaderFactoryMathML.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/mathml/src/org/apache/fop/mathml/ImageLoaderFactoryMathML.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.mathml;\n+\n+import org.apache.xmlgraphics.image.loader.ImageFlavor;\n+import org.apache.xmlgraphics.image.loader.impl.AbstractImageLoaderFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageLoader;\n+\n+/**\n+ * Factory class for the ImageLoader for MathML.\n+ */\n+public class ImageLoaderFactoryMathML extends AbstractImageLoaderFactory {\n+\n+    /** MathML MIME type */\n+    public static final String MIME_MATHML = \"text/mathml\";\n+    \n+    private static final ImageFlavor[] FLAVORS = new ImageFlavor[] {\n+        ImageFlavor.GRAPHICS2D};\n+    \n+    private static final String[] MIMES = new String[] {\n+        MIME_MATHML};\n+    \n+    /** {@inheritDoc} */\n+    public String[] getSupportedMIMETypes() {\n+        return MIMES;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public ImageFlavor[] getSupportedFlavors(String mime) {\n+        return FLAVORS;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public ImageLoader newImageLoader(ImageFlavor targetFlavor) {\n+        return new ImageLoaderMathML(targetFlavor);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public int getUsagePenalty(String mime, ImageFlavor flavor) {\n+        return 0;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean isAvailable() {\n+        //TODO Refine!\n+        return true;\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/ImageLoaderFactoryMathML.java",
                "sha": "b0e94222a0113010ed59c078bd5af9befae5eb1f",
                "status": "added"
            },
            {
                "additions": 71,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/ImageLoaderMathML.java",
                "changes": 71,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/ImageLoaderMathML.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/mathml/src/org/apache/fop/mathml/ImageLoaderMathML.java",
                "patch": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.mathml;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.image.loader.Image;\n+import org.apache.xmlgraphics.image.loader.ImageException;\n+import org.apache.xmlgraphics.image.loader.ImageFlavor;\n+import org.apache.xmlgraphics.image.loader.ImageInfo;\n+import org.apache.xmlgraphics.image.loader.ImageSessionContext;\n+import org.apache.xmlgraphics.image.loader.impl.AbstractImageLoader;\n+import org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;\n+\n+/**\n+ * ImageLoader for MathML (using JEuclid).\n+ */\n+public class ImageLoaderMathML extends AbstractImageLoader {\n+\n+    private ImageFlavor targetFlavor;\n+\n+    /**\n+     * Main constructor.\n+     * @param targetFlavor the target flavor\n+     */\n+    public ImageLoaderMathML(ImageFlavor targetFlavor) {\n+        if (!(ImageFlavor.GRAPHICS2D.equals(targetFlavor))) {\n+            throw new IllegalArgumentException(\"Unsupported target ImageFlavor: \" + targetFlavor);\n+        }\n+        this.targetFlavor = targetFlavor;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public ImageFlavor getTargetFlavor() {\n+        return this.targetFlavor;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public Image loadImage(ImageInfo info, Map hints, ImageSessionContext session)\n+                throws ImageException, IOException {\n+        if (!ImageLoaderFactoryMathML.MIME_MATHML.equals(info.getMimeType())) {\n+            throw new IllegalArgumentException(\"ImageInfo must be from an MathML image\");\n+        }\n+        Image img = info.getOriginalImage();\n+        if (!(img instanceof ImageGraphics2D)) {\n+            throw new IllegalArgumentException(\n+                    \"ImageInfo was expected to contain the MathML document as Graphics2D image\");\n+        }\n+        ImageGraphics2D g2dImage = (ImageGraphics2D)img;\n+        return g2dImage;\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/ImageLoaderMathML.java",
                "sha": "900b9d6142bc00e1b92d0adb95af3634c258b2e3",
                "status": "added"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLElement.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/MathMLElement.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 16,
                "filename": "examples/mathml/src/org/apache/fop/mathml/MathMLElement.java",
                "patch": "@@ -23,9 +23,9 @@\n import java.awt.Dimension;\n import java.awt.geom.Point2D;\n \n-import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.PropertyList;\n+import net.sourceforge.jeuclid.DOMMathBuilder;\n+import net.sourceforge.jeuclid.MathBase;\n+\n import org.w3c.dom.DOMImplementation;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n@@ -34,11 +34,12 @@\n import org.xml.sax.Attributes;\n import org.xml.sax.Locator;\n \n-import org.apache.batik.svggen.SVGGraphics2D;\n import org.apache.batik.dom.svg.SVGDOMImplementation;\n+import org.apache.batik.svggen.SVGGraphics2D;\n \n-import net.sourceforge.jeuclid.MathBase;\n-import net.sourceforge.jeuclid.DOMMathBuilder;\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.PropertyList;\n \n /**\n  * Defines the top-level element for MathML.\n@@ -57,9 +58,7 @@ public MathMLElement(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FONode#processNode\n-     */\n+    /** {@inheritDoc} */\n     public void processNode(String elementName, \n                             Locator locator, \n                             Attributes attlist, \n@@ -141,25 +140,21 @@ public static Document createSVG(MathBase base) {\n \n     }\n \n-    /** @see org.apache.fop.fo.XMLObj#getDOMDocument() */\n+    /** {@inheritDoc} */\n     public Document getDOMDocument() {\n         convertToSVG();\n         return doc;\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FONode#getNamespaceURI()\n-     */\n+    /** {@inheritDoc} */\n     public String getNamespaceURI() {\n         if (svgDoc == null) {\n             return MathMLElementMapping.NAMESPACE;\n         }\n         return \"http://www.w3.org/2000/svg\";\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.XMLObj#getDimension(Point2D)\n-     */\n+    /** {@inheritDoc} */\n     public Point2D getDimension(Point2D view) {\n         convertToSVG();\n         return new Point2D.Float(width, height);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLElement.java",
                "sha": "82bd85a17ceb9aeefa37c28489f4e4333bee533c",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLElementMapping.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/MathMLElementMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 47,
                "filename": "examples/mathml/src/org/apache/fop/mathml/MathMLElementMapping.java",
                "patch": "@@ -19,17 +19,12 @@\n  \n package org.apache.fop.mathml;\n \n-import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ElementMapping;\n-import org.apache.fop.image.analyser.XMLReader;\n-import org.apache.fop.image.FopImage;\n-import org.w3c.dom.DOMImplementation;\n-import org.w3c.dom.Document;\n-\n import java.util.HashMap;\n \n-import net.sourceforge.jeuclid.MathBase;\n-import net.sourceforge.jeuclid.DOMMathBuilder;\n+import org.w3c.dom.DOMImplementation;\n+\n+import org.apache.fop.fo.ElementMapping;\n+import org.apache.fop.fo.FONode;\n \n /**\n  * This class provides the element mapping for FOP.\n@@ -44,19 +39,17 @@ public MathMLElementMapping() {\n         this.namespaceURI = NAMESPACE;\n     }\n \n-    /** @see org.apache.fop.fo.ElementMapping#getDOMImplementation() */\n+    /** {@inheritDoc} */\n     public DOMImplementation getDOMImplementation() {\n         return getDefaultDOMImplementation();\n     }\n \n-    /** @see org.apache.fop.fo.ElementMapping#initialize() */\n+    /** {@inheritDoc} */\n     protected void initialize() {\n         if (foObjs == null) {\n             foObjs = new HashMap();\n             foObjs.put(\"math\", new ME());\n             foObjs.put(DEFAULT, new MathMLMaker());\n-\n-            XMLReader.setConverter(this.namespaceURI, new MathMLConverter());\n         }\n     }\n \n@@ -72,38 +65,4 @@ public FONode make(FONode parent) {\n         }\n     }\n \n-    static class MathMLConverter implements XMLReader.Converter {\n-        public FopImage.ImageInfo convert(Document doc) {\n-            try {\n-                FopImage.ImageInfo info = new FopImage.ImageInfo();\n-                String fontname = \"Helvetica\";\n-                int fontstyle = 0;\n-                int inlinefontstyle = 0;\n-                int inlinefontsize = 12;\n-                int displayfontsize = 12;\n-\n-                MathBase base = new MathBase(\n-                                  (new DOMMathBuilder(doc)).getMathRootElement(),\n-                                  fontname, fontstyle, inlinefontsize,\n-                                  displayfontsize);\n-\n-                base.setDebug(false);\n-\n-                info.data = MathMLElement.createSVG(base);\n-\n-                info.width = base.getWidth();\n-                info.height = base.getHeight();\n-\n-                info.mimeType = \"image/svg+xml\";\n-                info.str = \"http://www.w3.org/2000/svg\";\n-\n-                return info;\n-            } catch (Throwable t) {\n-                /**@todo log that properly */\n-            }\n-            return null;\n-\n-        }\n-    }\n-\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLElementMapping.java",
                "sha": "fdfa0b5c7806bc9bef5dfc2b4f54306da90a4bd1",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLObj.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/MathMLObj.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "examples/mathml/src/org/apache/fop/mathml/MathMLObj.java",
                "patch": "@@ -35,12 +35,12 @@ public MathMLObj(FONode parent) {\n         super(parent);\n     }\n \n-    /** @see org.apache.fop.fo.FONode#getNamespaceURI() */\n+    /** {@inheritDoc} */\n     public String getNamespaceURI() {\n         return MathMLElementMapping.NAMESPACE;\n     }\n \n-    /** @see org.apache.fop.fo.FONode#getNormalNamespacePrefix() */\n+    /** {@inheritDoc} */\n     public String getNormalNamespacePrefix() {\n         return \"mathml\";\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/MathMLObj.java",
                "sha": "9d2b78047e86f74ba479f22f967afd48bae6fe44",
                "status": "modified"
            },
            {
                "additions": 189,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/PreloaderMathML.java",
                "changes": 189,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/mathml/src/org/apache/fop/mathml/PreloaderMathML.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/mathml/src/org/apache/fop/mathml/PreloaderMathML.java",
                "patch": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.mathml;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.geom.Rectangle2D;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import net.sourceforge.jeuclid.MathBase;\n+import net.sourceforge.jeuclid.SAXMathBuilder;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.image.loader.Image;\n+import org.apache.xmlgraphics.image.loader.ImageContext;\n+import org.apache.xmlgraphics.image.loader.ImageInfo;\n+import org.apache.xmlgraphics.image.loader.ImageSize;\n+import org.apache.xmlgraphics.image.loader.impl.AbstractImagePreloader;\n+import org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;\n+import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n+import org.apache.xmlgraphics.java2d.Graphics2DImagePainter;\n+\n+import org.apache.fop.util.UnclosableInputStream;\n+\n+/**\n+ * Image preloader for MathML images.\n+ */\n+public class PreloaderMathML extends AbstractImagePreloader {\n+\n+    /** Logger instance */\n+    private static Log log = LogFactory.getLog(PreloaderMathML.class);\n+\n+    private boolean jeuclidAvailable = true;\n+    \n+    /** {@inheritDoc} */ \n+    public ImageInfo preloadImage(String uri, Source src, ImageContext context)\n+            throws IOException {\n+        if (!ImageUtil.hasInputStream(src)) {\n+            //TODO Remove this and support DOMSource and possibly SAXSource\n+            return null;\n+        }\n+        ImageInfo info = null;\n+        if (jeuclidAvailable) {\n+            try {\n+                Loader loader = new Loader();\n+                info = loader.getImage(uri, src, context);\n+            } catch (NoClassDefFoundError e) {\n+                jeuclidAvailable = false;\n+                log.warn(\"JEuclid not in class path\", e);\n+                return null;\n+            }\n+        }\n+        if (info != null) {\n+            ImageUtil.closeQuietly(src); //Image is fully read\n+        }\n+        return info;\n+    }\n+\n+    /**\n+     * This method is put in another class so that the class loader does not\n+     * attempt to load JEuclid related classes when constructing the MathMLPreloader\n+     * class.\n+     */\n+    class Loader {\n+        \n+        private ImageInfo getImage(String uri, Source src, ImageContext context) {\n+\n+            InputStream in = new UnclosableInputStream(ImageUtil.needInputStream(src));\n+            try {\n+                int length = in.available();\n+                in.mark(length + 1);\n+                \n+                TransformerFactory tFactory = TransformerFactory.newInstance();\n+                Transformer transformer = tFactory.newTransformer();\n+                Source source = new StreamSource(in);\n+                SAXMathBuilder mathBuilder = new SAXMathBuilder();\n+                SAXResult res = new SAXResult(mathBuilder);\n+                transformer.transform(source, res);\n+                \n+                String fontname = \"Helvetica\";\n+                int fontstyle = 0;\n+                int displayfontsize = 12;\n+                int inlinefontsize = 12;\n+\n+                if (mathBuilder.getMathRootElement() == null) {\n+                    //not a MathML document\n+                    try {\n+                        in.reset();\n+                    } catch (IOException ioe) {\n+                        log.error(\"Error while resetting ImageInputStream\", ioe);\n+                    }\n+                    return null;\n+                }\n+                final MathBase base = new MathBase(\n+                                  mathBuilder.getMathRootElement(),\n+                                  fontname, fontstyle, inlinefontsize,\n+                                  displayfontsize);\n+                \n+                ImageInfo info = new ImageInfo(uri, \"text/mathml\");\n+                final ImageSize size = new ImageSize();\n+                size.setSizeInMillipoints(\n+                        Math.round(base.getWidth() * 1000),\n+                        Math.round(base.getHeight() * 1000));\n+                //Set the resolution to that of the FOUserAgent\n+                size.setResolution(context.getSourceResolution());\n+                size.calcPixelsFromSize();\n+                info.setSize(size);\n+\n+                Graphics2DImagePainter painter = new Graphics2DImagePainter() {\n+\n+                    public Dimension getImageSize() {\n+                        return size.getDimensionMpt();\n+                    }\n+\n+                    public void paint(Graphics2D g2d, Rectangle2D area) {\n+                        base.paint(g2d);\n+                    }\n+                    \n+                };\n+                \n+                //The whole image had to be loaded for this, so keep it\n+                Image image = new ImageGraphics2D(info, painter);\n+                info.getCustomObjects().put(ImageInfo.ORIGINAL_IMAGE, image);\n+                \n+                return info;\n+            } catch (NoClassDefFoundError ncdfe) {\n+                try {\n+                    in.reset();\n+                } catch (IOException ioe) {\n+                    // we're more interested in the original exception\n+                }\n+                jeuclidAvailable = false;\n+                log.warn(\"JEuclid not in class path\", ncdfe);\n+                return null;\n+            } catch (IOException e) {\n+                // If the MathML is invalid then it throws an IOException\n+                // so there is no way of knowing if it is an svg document\n+\n+                log.debug(\"Error while trying to load stream as an MathML file: \"\n+                                       + e.getMessage());\n+                // assuming any exception means this document is not svg\n+                // or could not be loaded for some reason\n+                try {\n+                    in.reset();\n+                } catch (IOException ioe) {\n+                    // we're more interested in the original exception\n+                }\n+                return null;\n+            } catch (TransformerException e) {\n+                try {\n+                    in.reset();\n+                } catch (IOException ioe) {\n+                    // we're more interested in the original exception\n+                }\n+                log.debug(\"Error while trying to parsing a MathML file: \"\n+                        + e.getMessage());\n+                return null;\n+            }\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/mathml/src/org/apache/fop/mathml/PreloaderMathML.java",
                "sha": "3015462ce6b760220637c355ac22614cc06e2245",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/plan/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/plan/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.plan.PreloaderPlan\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/resources/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "sha": "44408009060e8625d1a74b7c77c26f1358fa62af",
                "status": "added"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanElement.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/plan/src/org/apache/fop/plan/PlanElement.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 14,
                "filename": "examples/plan/src/org/apache/fop/plan/PlanElement.java",
                "patch": "@@ -21,14 +21,15 @@\n \n import java.awt.geom.Point2D;\n \n-import org.apache.fop.apps.FOPException;\n-import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.PropertyList;\n-\n import org.w3c.dom.Document;\n+\n import org.xml.sax.Attributes;\n import org.xml.sax.Locator;\n \n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.fo.FONode;\n+import org.apache.fop.fo.PropertyList;\n+\n /**\n  * This class defines the plan element.\n  */\n@@ -46,9 +47,7 @@ public PlanElement(FONode parent) {\n         super(parent);\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.FONode#processNode\n-     */\n+    /** {@inheritDoc} */\n     public void processNode(String elementName, Locator locator, \n                             Attributes attlist, PropertyList propertyList)\n         throws FOPException {\n@@ -79,25 +78,21 @@ public void convertToSVG() {\n \n     }\n \n-    /**\n-     * @see org.apache.fop.fo.XMLObj#getDOMDocument()\n-     */\n+    /** {@inheritDoc} */\n     public Document getDOMDocument() {\n         convertToSVG();\n         return doc;\n     }\n \n-    /** @see org.apache.fop.fo.FONode#getNamespaceURI() */\n+    /** {@inheritDoc} */\n     public String getNamespaceURI() {\n         if (svgDoc == null) {\n             return PlanElementMapping.NAMESPACE;\n         }\n         return \"http://www.w3.org/2000/svg\";\n     }\n \n-    /**\n-     * @see org.apache.fop.fo.XMLObj#getDimension(Point2D)\n-     */\n+    /** {@inheritDoc} */\n     public Point2D getDimension(Point2D view) {\n         convertToSVG();\n         return new Point2D.Float(width, height);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanElement.java",
                "sha": "d910076c62b0fa44e6617e88b2b5c3e0c51ca7fa",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanElementMapping.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/plan/src/org/apache/fop/plan/PlanElementMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 29,
                "filename": "examples/plan/src/org/apache/fop/plan/PlanElementMapping.java",
                "patch": "@@ -19,12 +19,10 @@\n  \n package org.apache.fop.plan;\n \n-import org.apache.fop.fo.FONode;\n-import org.apache.fop.fo.ElementMapping;\n-import org.apache.fop.image.analyser.XMLReader;\n-import org.apache.fop.image.FopImage;\n import org.w3c.dom.DOMImplementation;\n-import org.w3c.dom.Document;\n+\n+import org.apache.fop.fo.ElementMapping;\n+import org.apache.fop.fo.FONode;\n \n /**\n  * This class provides the element mapping for FOP.\n@@ -39,19 +37,17 @@ public PlanElementMapping() {\n         this.namespaceURI = NAMESPACE;\n     }\n \n-    /** @see org.apache.fop.fo.ElementMapping#getDOMImplementation() */\n+    /** {@inheritDoc} */\n     public DOMImplementation getDOMImplementation() {\n         return getDefaultDOMImplementation();\n     }\n \n-    /** @see org.apache.fop.fo.ElementMapping#initialize() */\n+    /** {@inheritDoc} */\n     protected void initialize() {\n         if (foObjs == null) {\n             foObjs = new java.util.HashMap();\n             foObjs.put(\"plan\", new PE());\n             foObjs.put(DEFAULT, new PlanMaker());\n-\n-            XMLReader.setConverter(this.namespaceURI, new PlanConverter());\n         }\n     }\n \n@@ -67,24 +63,4 @@ public FONode make(FONode parent) {\n         }\n     }\n \n-    static class PlanConverter implements XMLReader.Converter {\n-        public FopImage.ImageInfo convert(Document doc) {\n-            try {\n-                PlanRenderer pr = new PlanRenderer();\n-                pr.setFontInfo(\"Helvetica\", 12);\n-                FopImage.ImageInfo info = new FopImage.ImageInfo();\n-                info.data = pr.createSVGDocument(doc);\n-                info.width = (int)pr.getWidth();\n-                info.height = (int)pr.getHeight();\n-                info.mimeType = \"image/svg+xml\";\n-                info.str = \"http://www.w3.org/2000/svg\";\n-    \n-                return info;\n-            } catch (Throwable t) {\n-                /**@todo Log this properly! */\n-            }\n-            return null;\n-        }\n-    }\n-\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanElementMapping.java",
                "sha": "c33c25edf002588858cdc64d220147be12b39350",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanObj.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/plan/src/org/apache/fop/plan/PlanObj.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "examples/plan/src/org/apache/fop/plan/PlanObj.java",
                "patch": "@@ -38,12 +38,12 @@ public PlanObj(FONode parent) {\n         super(parent);\n     }\n \n-    /** @see org.apache.fop.fo.FONode#getNamespaceURI() */\n+    /** {@inheritDoc} */\n     public String getNamespaceURI() {\n         return PlanElementMapping.NAMESPACE;\n     }\n \n-    /** @see org.apache.fop.fo.FONode#getNormalNamespacePrefix() */\n+    /** {@inheritDoc} */\n     public String getNormalNamespacePrefix() {\n         return \"plan\";\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PlanObj.java",
                "sha": "36f3243a640997ab3405dffda2973cd477a21f20",
                "status": "modified"
            },
            {
                "additions": 114,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PreloaderPlan.java",
                "changes": 114,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/examples/plan/src/org/apache/fop/plan/PreloaderPlan.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "examples/plan/src/org/apache/fop/plan/PreloaderPlan.java",
                "patch": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+ \n+package org.apache.fop.plan;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.w3c.dom.Document;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.image.loader.Image;\n+import org.apache.xmlgraphics.image.loader.ImageContext;\n+import org.apache.xmlgraphics.image.loader.ImageInfo;\n+import org.apache.xmlgraphics.image.loader.ImageSize;\n+import org.apache.xmlgraphics.image.loader.impl.AbstractImagePreloader;\n+import org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM;\n+import org.apache.xmlgraphics.image.loader.util.ImageUtil;\n+\n+import org.apache.fop.util.UnclosableInputStream;\n+\n+/**\n+ * Image preloader for Plan images.\n+ */\n+public class PreloaderPlan extends AbstractImagePreloader {\n+\n+    /** Logger instance */\n+    private static Log log = LogFactory.getLog(PreloaderPlan.class);\n+\n+    /** {@inheritDoc} */ \n+    public ImageInfo preloadImage(String uri, Source src, ImageContext context)\n+            throws IOException {\n+        if (!ImageUtil.hasInputStream(src)) {\n+            //TODO Remove this and support DOMSource and possibly SAXSource\n+            return null;\n+        }\n+        ImageInfo info = getImage(uri, src, context);\n+        if (info != null) {\n+            ImageUtil.closeQuietly(src); //Image is fully read\n+        }\n+        return info;\n+    }\n+\n+    private ImageInfo getImage(String uri, Source src, ImageContext context) {\n+\n+        InputStream in = new UnclosableInputStream(ImageUtil.needInputStream(src));\n+        try {\n+            TransformerFactory tFactory = TransformerFactory.newInstance();\n+            Transformer transformer = tFactory.newTransformer();\n+            Source source = new StreamSource(in);\n+            DOMResult res = new DOMResult();\n+            transformer.transform(source, res);\n+            \n+            //Have to render the plan to know its size\n+            PlanRenderer pr = new PlanRenderer();\n+            Document svgDoc = pr.createSVGDocument((Document)res.getNode());\n+            float width = pr.getWidth();\n+            float height = pr.getHeight();\n+            \n+            //Return converted SVG image\n+            ImageInfo info = new ImageInfo(uri, \"image/svg+xml\");\n+            final ImageSize size = new ImageSize();\n+            size.setSizeInMillipoints(\n+                    Math.round(width * 1000),\n+                    Math.round(height * 1000));\n+            //Set the resolution to that of the FOUserAgent\n+            size.setResolution(context.getSourceResolution());\n+            size.calcPixelsFromSize();\n+            info.setSize(size);\n+\n+            //The whole image had to be loaded for this, so keep it\n+            Image image = new ImageXMLDOM(info, svgDoc,\n+                    svgDoc.getDocumentElement().getNamespaceURI());\n+            info.getCustomObjects().put(ImageInfo.ORIGINAL_IMAGE, image);\n+            \n+            return info;\n+        } catch (TransformerException e) {\n+            try {\n+                in.reset();\n+            } catch (IOException ioe) {\n+                // we're more interested in the original exception\n+            }\n+            log.debug(\"Error while trying to parsing a Plan file: \"\n+                    + e.getMessage());\n+            return null;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/examples/plan/src/org/apache/fop/plan/PreloaderPlan.java",
                "sha": "58d5be477d5f49ae96fa10a35b1a66b8fbd3b63a",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/fixsvnprops.sh",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/fixsvnprops.sh?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "fixsvnprops.sh",
                "patch": "@@ -0,0 +1,7 @@\n+#!/bin/sh\n+\n+find . -name \\*.java -exec svn ps svn:keywords \"Id\" '{}' \\;\n+find . -name \\*.xml -exec svn ps svn:keywords \"Revision Id\" '{}' \\;\n+find . -name \\*.java -exec svn ps svn:eol-style native '{}' \\;\n+find . -name \\*.xml -exec svn ps svn:eol-style native '{}' \\;\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/fixsvnprops.sh",
                "sha": "c5688a238a991fcf0b388171215b45152a27cd27",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/fop.bat",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/fop.bat?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "fop.bat",
                "patch": "@@ -56,17 +56,16 @@ set LOCALCLASSPATH=%LOCAL_FOP_HOME%build\\fop.jar\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LOCAL_FOP_HOME%build\\fop-sandbox.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LOCAL_FOP_HOME%build\\fop-hyph.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xml-apis-1.3.02.jar\r\n+set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xml-apis-ext.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xercesImpl-2.7.1.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xalan-2.7.0.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\serializer-2.7.0.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\batik-all-1.6.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xmlgraphics-commons-1.3svn.jar\r\n+set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\batik-all-1.7.jar\r\n+set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\xmlgraphics-commons-1.4svn.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\avalon-framework-4.2.0.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\commons-io-1.3.1.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\commons-logging-1.0.4.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\jimi-1.0.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\jai_core.jar\r\n-set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\jai_codec.jar\r\n+set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\jai_imageio.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%LIBDIR%\\fop-hyph.jar\r\n set LOCALCLASSPATH=%LOCALCLASSPATH%;%FOP_HYPHENATION_PATH%\r\n \r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/fop.bat",
                "sha": "c2444a083b762c68a8d6417141394976fb52efce",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/forrest.properties",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/forrest.properties?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "forrest.properties",
                "patch": "@@ -56,7 +56,7 @@ project.skin=pelt\n #project.images-dir=${project.resources-dir}/images\n #project.schema-dir=${project.resources-dir}/schema\n #project.skins-dir=${project.content-dir}/skins\n-#project.skinconf=${project.content-dir}/skinconf.xml\n+project.skinconf=${project.content-dir}/skinconf.xml\n #project.lib-dir=${project.content-dir}/lib\n #project.classes-dir=${project.content-dir}/classes\n #project.translations-dir=${project.content-dir}/translations\n@@ -97,7 +97,8 @@ forrest.validate.skins.stylesheets=${forrest.validate.skins}\n # server, set to -Djava.awt.headless=true\n #forrest.jvmargs=\n # The bugtracking URL - the issue number will be appended\n-#project.bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n+project.bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n+bugtracking-url=http://issues.apache.org/bugzilla/show_bug.cgi?id=\n #project.bugtracking-url=http://issues.apache.org/jira/browse/\n # The issues list as rss\n #project.issues-rss-url=\n@@ -106,4 +107,4 @@ forrest.validate.skins.stylesheets=${forrest.validate.skins}\n # The names of plugins that are required to build the project\n # comma separated list (no spaces)\n # project.required.plugins=\n-project.required.plugins=org.apache.forrest.plugin.output.pdf-0.1\n+project.required.plugins=org.apache.forrest.plugin.input.projectInfo,org.apache.forrest.plugin.output.pdf",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/forrest.properties",
                "sha": "add0807831ad1e71753749494f1bbe51a751d1dd",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/forrest.properties.xml",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/forrest.properties.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "forrest.properties.xml",
                "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<properties>\n+<!-- Project identity -->\n+  <property name=\"projectInfo.project.fullname\" value=\"Apache FOP\"/>\n+  <property name=\"projectInfo.project.url\" value=\"http://xmlgraphics.apache.org/fop/\"/>\n+</properties>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/forrest.properties.xml",
                "sha": "d0c01bf4ad0e16e517dbfc7c7397c9bc5d29a674",
                "status": "added"
            },
            {
                "additions": 67,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/README.txt",
                "changes": 95,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/README.txt?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 28,
                "filename": "lib/README.txt",
                "patch": "@@ -51,22 +51,7 @@ Normal Dependencies\n     \n     Apache License v2.0\n \n-\n-\n-Special Dependencies\n------------------------\n-\n-The special dependencies are the whole JAXP set which required for users\n-on JDK 1.3.x which doesn't include JAXP. But it is also interesting for\n-users on JDKs >= 1.4 if they want to replace the default JAXP \n-implementation delivered by the JDK.\n-\n-Replacing the default implementations involves understanding the \n-\"Endorsed Standards Override Mechanism\".\n-More information can be found here:\n-http://java.sun.com/j2se/1.4.2/docs/guide/standards/index.html\n-\n-- JAXP API\n+- Apache XML Commons Externals (JAXP API)\n \n     xml-apis.jar\n     http://xml.apache.org/commons/components/external/\n@@ -82,13 +67,16 @@ http://java.sun.com/j2se/1.4.2/docs/guide/standards/index.html\n         http://www.w3.org/Consortium/Legal/copyright-documents\n         http://www.w3.org/Consortium/Legal/\n \n-- Apache Xerces-J\n-\n-    xercesImpl-*.jar\n-    http://xerces.apache.org\n-    (JAXP-compliant XML parser and DOM Level 3 implementation)\n+    xml-apis-ext-*.jar\n+    http://xml.apache.org/commons/components/external/\n+    (additional DOM APIs from W3C, like SVG, SMIL and Simple API for CSS)\n     \n-    Apache License v2.0\n+    Apache License v2.0 (applies to the distribution)\n+    W3C Software Notice and License (applies to the various DOM Java bindings)\n+    W3C Document License (applies to the DOM documentation)\n+        http://www.w3.org/Consortium/Legal/copyright-software\n+        http://www.w3.org/Consortium/Legal/copyright-documents\n+        http://www.w3.org/Consortium/Legal/\n \n - Apache Xalan-J\n \n@@ -103,22 +91,67 @@ http://java.sun.com/j2se/1.4.2/docs/guide/standards/index.html\n         (see xalan.runtime.LICENSE.txt)\n \n \n+Special Dependencies\n+-----------------------\n+\n+- Apache Xerces-J\n+\n+    xercesImpl-*.jar\n+    http://xerces.apache.org\n+    (JAXP-compliant XML parser and DOM Level 3 implementation)\n+    \n+    Apache License v2.0\n+    \n+    Xerces-J is not directly referenced by FOP or any of its dependencies.\n+    \n+\n+A note on JAXP\n+-----------------------\n+\n+Since Java 1.4, JAXP (Java API for XML Processing) is part of the \n+JRE/JDK. Every JVM includes the APIs and an implementation. However, \n+older JREs often contain implementations with bugs that are triggered \n+by code in Apache FOP and therefore need to be overridden. Now, since \n+JAXP is part of the class library, special precautions are necessary \n+to replace the original implementations. This is not done by simply \n+adding new JARs to the classpath as these classes would never be \n+loaded (due to Java's class loader hierarchy). \n+\n+Replacing the default implementations involves understanding the \n+\"Endorsed Standards Override Mechanism\".\n+More information can be found here:\n+http://java.sun.com/j2se/1.4.2/docs/guide/standards/index.html\n+\n+See also:\n+http://xml.apache.org/xalan-j/faq.html#faq-N100EF\n+\n+Essentially, you have two different possibilities:\n+- add the replacement JARs in the jre/lib/endorsed directory of your JRE.\n+- Use the -Xbootclasspath/p: option when starting the JVM (may not be\n+  available for every JVM).\n+\n \n Optional Dependencies\n ------------------------\n \n The following libraries are not bundled with FOP and must be installed manually.\n Please make sure you've read the license of each package.\n \n-- JIMI Image library\n+- JAI Image I/O Tools\n \n-    http://java.sun.com/products/jimi\n-    Sun Binary Code License\n+    https://jai-imageio.dev.java.net/\n+    BSD license\n+    \n+    Note: This is not the same as JAI! Only the ImageIO-compatible codecs\n+    are packaged as \"Image I/O Tools\". The name may be misleading.\n \n-- JAI (Java Advanced Imaging API)\n+ - JAI (Java Advanced Imaging API) \n \n-    http://java.sun.com/products/java-media/jai\n+    http://java.sun.com/products/java-media/jai \t \n     Java Research License and Java Distribution License (Check which one applies to you!)\n+    \n+    Currently used for:\n+    - Grayscale error diffusion dithering in the PCL Renderer\n \n - JEuclid (MathML implementation, for the MathML extension)\n \n@@ -151,4 +184,10 @@ Additional development-time dependencies\n \n     (not bundled, provided by Apache Ant or your IDE)\n     http://www.junit.org\n-    Common Public License V1.0\n\\ No newline at end of file\n+    Common Public License V1.0\n+\n+- XMLUnit (optional)\n+\n+    (not bundled, to be added to your Apache Ant installation)\n+    http://xmlunit.sourceforge.net/\n+    BSD style license\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/README.txt",
                "sha": "2f307b2cf461c9fa391eef0332ea8a075a22704e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/lib/batik-all-1.6.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/batik-all-1.6.jar?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 0,
                "filename": "lib/batik-all-1.6.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/lib/batik-all-1.6.jar",
                "sha": "7b59021db86b60bb0fe65fa8537a871e2785e8b0",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/batik-all-1.7.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/batik-all-1.7.jar?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "lib/batik-all-1.7.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/batik-all-1.7.jar",
                "sha": "5893285819635b41819ddaa3ee2b1fc1d0752d46",
                "status": "added"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/batik.NOTICE.txt",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/batik.NOTICE.txt?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "lib/batik.NOTICE.txt",
                "patch": "@@ -1,8 +1,18 @@\n-This product includes software developed by\n+Apache Batik\n+Copyright 1999-2007 The Apache Software Foundation\n+\n+This product includes software developed at\n The Apache Software Foundation (http://www.apache.org/).\n \n This software contains code from the World Wide Web Consortium (W3C) for the \n Document Object Model API (DOM API) and SVG Document Type Definition (DTD).\n \n-This software contains code from the International Organisation for Standardization\n-for the definition of character entities used in the software's documentation.\n+This software contains code from the International Organisation for\n+Standardization for the definition of character entities used in the software's\n+documentation.\n+\n+This product includes images from the Tango Desktop Project\n+(http://tango.freedesktop.org/).\n+\n+This product includes images from the Pasodoble Icon Theme\n+(http://www.jesusda.com/projects/pasodoble).",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/batik.NOTICE.txt",
                "sha": "662188f3570b9c2a594c97e3e2408e84ddda1f81",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/build/qdox-1.6.3.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox-1.6.3.jar?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "lib/build/qdox-1.6.3.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/build/qdox-1.6.3.jar",
                "sha": "3e99cb06491b1aa501e46bbca4fafdad78a997d5",
                "status": "added"
            },
            {
                "additions": 201,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/build/qdox.LICENSE.txt",
                "changes": 201,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/build/qdox.LICENSE.txt?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "lib/build/qdox.LICENSE.txt",
                "patch": "@@ -0,0 +1,201 @@\n+                                  Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/build/qdox.LICENSE.txt",
                "sha": "3e4e3d004084793138c1383213a0bb1b07f424a5",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/xml-apis-ext.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/xml-apis-ext.jar?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "lib/xml-apis-ext.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/xml-apis-ext.jar",
                "sha": "a7869d68aacd655c782bb373c7334e5ff667ca58",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/lib/xmlgraphics-commons-1.3svn.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/xmlgraphics-commons-1.3svn.jar?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 0,
                "filename": "lib/xmlgraphics-commons-1.3svn.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/lib/xmlgraphics-commons-1.3svn.jar",
                "sha": "0b63c1815f1c65b2972b054269cdf8250483b87f",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/xmlgraphics-commons-1.4svn.jar",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/lib/xmlgraphics-commons-1.4svn.jar?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "lib/xmlgraphics-commons-1.4svn.jar",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/lib/xmlgraphics-commons-1.4svn.jar",
                "sha": "d7f9092eac5243c643a896c5535cf5a09f20110d",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/Symbol.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/fonts/Symbol.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/codegen/fonts/Symbol.xml",
                "patch": "@@ -124,6 +124,7 @@\n     <char name=\"bar\" width=\"200\"/>\n     <char name=\"braceright\" width=\"480\"/>\n     <char name=\"similar\" width=\"549\"/>\n+    <char name=\"Euro\" width=\"750\"/>\n     <char name=\"Upsilon1\" width=\"620\"/>\n     <char name=\"minute\" width=\"247\"/>\n     <char name=\"lessequal\" width=\"549\"/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/Symbol.xml",
                "sha": "c0dce043a398e07c41d11584fd30a5736c3ec52c",
                "status": "modified"
            },
            {
                "additions": 88,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/code-point-mapping.xsl",
                "changes": 147,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/fonts/code-point-mapping.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 59,
                "filename": "src/codegen/fonts/code-point-mapping.xsl",
                "patch": "@@ -43,86 +43,41 @@ package org.apache.fop.fonts;\n import java.util.Map;\n import java.util.Collections;\n \n-public class CodePointMapping {\n-    private char[] latin1Map;\n-    private char[] characters;\n-    private char[] codepoints;\n+public class CodePointMapping extends AbstractCodePointMapping {\n \n-    private CodePointMapping(int [] table) {\n-        int nonLatin1 = 0;\n-        latin1Map = new char[256];\n-        for (int i = 0; i &lt; table.length; i += 2) {\n-           if (table[i + 1] &lt; 256) {\n-               latin1Map[table[i + 1]] = (char) table[i];\n-           } else {\n-               ++nonLatin1;\n-           }\n-        }\n-        characters = new char[nonLatin1];\n-        codepoints = new char[nonLatin1];\n-        int top = 0;\n-        for (int i = 0; i &lt; table.length; i += 2) {\n-            char c = (char) table[i + 1];\n-            if (c >= 256) {\n-               ++top;\n-               for (int j = top - 1; j >= 0; --j) {\n-                   if (j > 0 &amp;&amp; characters[j - 1] >= c) {\n-                       characters[j] = characters[j - 1];\n-                       codepoints[j] = codepoints[j - 1];\n-                   } else {\n-                       characters[j] = c;\n-                       codepoints[j] = (char) table[i];\n-                       break;\n-                   }\n-               }\n-            }\n-        }\n-    }\n+<xsl:apply-templates mode=\"constant\"/>\n \n-    public final char mapChar(char c) {\n-        if (c &lt; 256) {\n-            return latin1Map[c];\n-        } else {\n-            int bot = 0, top = characters.length - 1;\n-            while (top >= bot) {\n-                int mid = (bot + top) / 2;\n-                char mc = characters[mid];\n+    public CodePointMapping(String name, int[] table) {\n+        super(name, table);\n+    }\n \n-                if (c == mc) {\n-                    return codepoints[mid];\n-                } else if (c &lt; mc) {\n-                    top = mid - 1;\n-                } else {\n-                    bot = mid + 1;\n-                }\n-            }\n-            return 0;\n-        }\n+    public CodePointMapping(String name, int[] table, String[] charNameMap) {\n+        super(name, table, charNameMap);\n     }\n \n     private static Map mappings;\n     static {\n         mappings = Collections.synchronizedMap(new java.util.HashMap());\n     }\n+\n     public static CodePointMapping getMapping(String encoding) {\n         CodePointMapping mapping = (CodePointMapping) mappings.get(encoding);\n         if (mapping != null) {\n             return mapping;\n         } <xsl:apply-templates mode=\"get\"/>\n-        //TODO: Implement support for Expert and ExpertSubset encoding\n-        else if (encoding.startsWith(\"Expert\")) {\n-            throw new UnsupportedOperationException(encoding + \" not implemented yet\");\n-        }\n         throw new UnsupportedOperationException(\"Unknown encoding: \" + encoding);\n     }\n <xsl:apply-templates mode=\"table\"/>\n+<xsl:apply-templates select=\"encoding\" mode=\"names\"/>\n }\n   </xsl:template>\n \n+  <xsl:template match=\"encoding\" mode=\"constant\">    public static final String <xsl:value-of select=\"@constant\"/> = \"<xsl:value-of select=\"@id\"/>\";</xsl:template>\n+  \n   <xsl:template match=\"encoding\" mode=\"get\">\n-        else if (encoding.equals(\"<xsl:value-of select=\"@id\"/>\")) {\n-            mapping = new CodePointMapping(enc<xsl:value-of select=\"@id\"/>);\n-            mappings.put(\"<xsl:value-of select=\"@id\"/>\", mapping);\n+        else if (encoding.equals(<xsl:value-of select=\"@constant\"/>)) {\n+    mapping = new CodePointMapping(<xsl:value-of select=\"@constant\"/>, enc<xsl:value-of select=\"@id\"/>, names<xsl:value-of select=\"@id\"/>);\n+            mappings.put(<xsl:value-of select=\"@constant\"/>, mapping);\n             return mapping;\n         }\n   </xsl:template>\n@@ -139,4 +94,78 @@ public class CodePointMapping {\n </xsl:for-each></xsl:for-each>\n         };\n   </xsl:template>\n+  \n+  <xsl:template match=\"encoding\" mode=\"names\">\n+    private static final String[] names<xsl:value-of select=\"@id\"/>\n+    = {\n+<xsl:call-template name=\"charname\">\n+  <xsl:with-param name=\"idx\" select=\"0\"/>\n+</xsl:call-template>\n+        };\n+  </xsl:template>\n+  \n+  <xsl:template name=\"charname\">\n+    <xsl:param name=\"idx\"/>\n+    <xsl:variable name=\"idxHEXraw\">\n+      <xsl:call-template name=\"toHex\">\n+        <xsl:with-param name=\"decimalNumber\" select=\"$idx\"/>\n+      </xsl:call-template>\n+    </xsl:variable>\n+    <xsl:variable name=\"idxHEX\">\n+      <xsl:call-template name=\"padnumber\">\n+        <xsl:with-param name=\"num\" select=\"$idxHEXraw\"/>\n+      </xsl:call-template>\n+    </xsl:variable>\n+    <xsl:variable name=\"idxhex\" select=\"translate($idxHEX, 'ABCDEF', 'abcdef')\"></xsl:variable>\n+    <!--\n+    <xsl:value-of select=\"$idx\"/>-<xsl:value-of select=\"$idxHEXraw\"/>-<xsl:value-of select=\"$idxHEX\"/>-<xsl:value-of select=\"$idxhex\"/>\n+    -->\n+    <xsl:if test=\"($idx mod 4) = 0\">\n+      <xsl:text>&#x0D;    /*</xsl:text><xsl:value-of select=\"$idxHEX\"/><xsl:text>*/ </xsl:text>\n+    </xsl:if>\n+    <xsl:variable name=\"v\">\n+      <xsl:value-of select=\"child::glyph[@codepoint = $idxHEX or @codepoint = $idxhex]/@name\"/><!--<xsl:value-of select=\"glyph[@codepoint = $idxhex]/@name\"/>-->\n+    </xsl:variable>\n+    <xsl:choose>\n+      <xsl:when test=\"string-length($v) > 0\">\n+        <xsl:text>\"</xsl:text><xsl:value-of select=\"$v\"/><xsl:text>\"</xsl:text>\n+      </xsl:when>\n+      <xsl:otherwise>null</xsl:otherwise>\n+    </xsl:choose>\n+    \n+    <xsl:if test=\"$idx &lt; 255\">\n+      <xsl:text>, </xsl:text>\n+      <xsl:call-template name=\"charname\">\n+        <xsl:with-param name=\"idx\" select=\"$idx + 1\"/>\n+      </xsl:call-template>\n+    </xsl:if>\n+  </xsl:template>\n+  \n+  <xsl:variable name=\"hexDigits\" select=\"'0123456789ABCDEF'\"/>\n+  <xsl:template name=\"toHex\">\n+    <xsl:param name=\"decimalNumber\" />\n+    <xsl:if test=\"$decimalNumber >= 16\">\n+      <xsl:call-template name=\"toHex\">\n+        <xsl:with-param name=\"decimalNumber\" select=\"floor($decimalNumber div 16)\" />\n+      </xsl:call-template>\n+    </xsl:if>\n+    <xsl:value-of select=\"substring($hexDigits, ($decimalNumber mod 16) + 1, 1)\" />\n+  </xsl:template>\n+  \n+  <xsl:template name=\"padnumber\">\n+    <xsl:param name=\"num\"/>\n+    <xsl:param name=\"len\" select=\"2\"/>\n+    <!--\n+    <xsl:text> </xsl:text><xsl:value-of select=\"$num\"/>/<xsl:value-of select=\"$len\"/>\n+    -->\n+    <xsl:choose>\n+      <xsl:when test=\"string-length($num) &lt; $len\">\n+        <xsl:call-template name=\"padnumber\">\n+          <xsl:with-param name=\"num\" select=\"concat('0',$num)\"/>\n+          <xsl:with-param name=\"len\" select=\"$len\"/>\n+        </xsl:call-template>\n+      </xsl:when>\n+      <xsl:otherwise><xsl:value-of select=\"$num\"/></xsl:otherwise>\n+    </xsl:choose>\n+  </xsl:template>\n </xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/code-point-mapping.xsl",
                "sha": "55b84c742e6f5420d1f4be8fb8b2ec300c98a55b",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/encodings.xml",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/fonts/encodings.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 9,
                "filename": "src/codegen/fonts/encodings.xml",
                "patch": "@@ -19,12 +19,12 @@\n <!DOCTYPE encoding-set [\n   <!ELEMENT encoding-set (encoding+)>\n   <!ELEMENT encoding (glyph+)>\n-  <!ATTLIST encoding id ID #REQUIRED glyphlist CDATA \"AGL\">\n+  <!ATTLIST encoding id ID #REQUIRED constant CDATA #REQUIRED glyphlist CDATA \"AGL\">\n   <!ELEMENT glyph EMPTY>\n   <!ATTLIST glyph codepoint CDATA #REQUIRED name CDATA #REQUIRED>\n ]>\n <encoding-set>\n-  <encoding id='StandardEncoding' glyphlist='AGL'>\n+  <encoding id='StandardEncoding' constant=\"STANDARD_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='quotedbl'/>\n@@ -175,7 +175,7 @@\n     <glyph codepoint='fa' name='oe'/>\n     <glyph codepoint='fb' name='germandbls'/>\n   </encoding>\n-  <encoding id='ISOLatin1Encoding' glyphlist='AGL'>\n+  <encoding id='ISOLatin1Encoding' constant=\"ISOLATIN1_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='quotedbl'/>\n@@ -377,7 +377,7 @@\n     <glyph codepoint='fe' name='thorn'/>\n     <glyph codepoint='ff' name='ydieresis'/>\n   </encoding>\n-  <encoding id='CEEncoding' glyphlist='AGL'>\n+  <encoding id='CEEncoding' constant=\"CE_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='quotedbl'/>\n@@ -594,7 +594,7 @@\n     <glyph codepoint='fe' name='tcommaaccent'/>\n     <glyph codepoint='ff' name='dotaccent'/>\n   </encoding>\n-  <encoding id='MacRomanEncoding' glyphlist='AGL'>\n+  <encoding id='MacRomanEncoding' constant=\"MAC_ROMAN_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='quotedbl'/>\n@@ -803,7 +803,7 @@\n     <glyph codepoint='b4' name='yen'/>\n     <glyph codepoint='7a' name='z'/>\n   </encoding>\n-  <encoding id='WinAnsiEncoding' glyphlist='AGL'>\n+  <encoding id='WinAnsiEncoding' constant=\"WIN_ANSI_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='quotedbl'/>\n@@ -1021,7 +1021,7 @@\n     <glyph codepoint='fe' name='thorn'/>\n     <glyph codepoint='ff' name='ydieresis'/>\n   </encoding>\n-  <encoding id='PDFDocEncoding' glyphlist='AGL'>\n+  <encoding id='PDFDocEncoding' constant=\"PDF_DOC_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='18' name='breve'/>\n     <glyph codepoint='19' name='caron'/>\n     <glyph codepoint='1a' name='circumflex'/>\n@@ -1252,7 +1252,7 @@\n     <glyph codepoint='fe' name='thorn'/>\n     <glyph codepoint='ff' name='ydieresis'/>\n   </encoding>\n-  <encoding id='SymbolEncoding' glyphlist='AGL'>\n+  <encoding id='SymbolEncoding' constant=\"SYMBOL_ENCODING\" glyphlist='AGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='exclam'/>\n     <glyph codepoint='22' name='universal'/>\n@@ -1443,7 +1443,7 @@\n     <glyph codepoint='fd' name='bracerightmid'/>\n     <glyph codepoint='fe' name='bracerightbt'/>\n   </encoding>\n-  <encoding id='ZapfDingbatsEncoding' glyphlist='ZGL'>\n+  <encoding id='ZapfDingbatsEncoding' constant=\"ZAPF_DINGBATS_ENCODING\" glyphlist='ZGL'>\n     <glyph codepoint='20' name='space'/>\n     <glyph codepoint='21' name='a1'/>\n     <glyph codepoint='22' name='a2'/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/encodings.xml",
                "sha": "d7855000e4876d93e173a70a5c635932f4cb767b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/font-file.xsl",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/fonts/font-file.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 4,
                "filename": "src/codegen/fonts/font-file.xsl",
                "patch": "@@ -40,10 +40,11 @@ import java.util.Map;\n </xsl:if>\n import java.util.Set;\n import org.apache.fop.fonts.FontType;\n-import org.apache.fop.fonts.Typeface;\n+import org.apache.fop.fonts.Base14Font;\n import org.apache.fop.fonts.CodePointMapping;\n+import org.apache.fop.fonts.Typeface;;\n \n-public class <xsl:value-of select=\"class-name\"/> extends Typeface {\n+public class <xsl:value-of select=\"class-name\"/> extends Base14Font {\n     private final static String fontName = \"<xsl:value-of select=\"font-name\"/>\";\n     private final static String fullName = \"<xsl:value-of select=\"full-name\"/>\";\n     private final static Set familyNames;\n@@ -84,7 +85,7 @@ public class <xsl:value-of select=\"class-name\"/> extends Typeface {\n         this.enableKerning = enableKerning;\n     }\n \n-    public String getEncoding() {\n+    public String getEncodingName() {\n         return encoding;\n     }\n \n@@ -169,7 +170,8 @@ public class <xsl:value-of select=\"class-name\"/> extends Typeface {\n         if (d != 0) {\n             return d;\n         } else {\n-            return '#';\n+            this.warnMissingGlyph(c);\n+            return Typeface.NOT_FOUND;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/fonts/font-file.xsl",
                "sha": "85b968808acb2bc71a36411da4b0c2ec5b9b16c2",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventConventionException.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 15,
                "filename": "src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "patch": "@@ -15,27 +15,23 @@\n  * limitations under the License.\n  */\n \n-/* $Id: $ */\n-\n-package org.apache.fop.render.afp.modca.goca;\n+/* $Id$ */\n \n+package org.apache.fop.tools;\n \n /**\n- * Sets the current painting position of the graphics object\n+ * This exception is used to indicate a violation of the conventions for event producers.\n  */\n-public class GraphicsSetCurrentPosition extends AbstractGraphicsCoord {\n+public class EventConventionException extends Exception {\n \n-    /**\n-     * @param coords the x/y coordinates for this object\n-     */\n-    public GraphicsSetCurrentPosition(int[] coords) {\n-        super(coords);\n-    }\n+    private static final long serialVersionUID = 117244726033986628L;\n \n     /**\n-     * {@inheritDoc}\n+     * Creates a new EventConventionException\n+     * @param message the error message\n      */\n-    protected byte getOrderCode() {\n-        return (byte)0x21;\n+    public EventConventionException(String message) {\n+        super(message);\n     }\n-}\n\\ No newline at end of file\n+    \n+}",
                "previous_filename": "src/java/org/apache/fop/render/afp/modca/goca/GraphicsSetCurrentPosition.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventConventionException.java",
                "sha": "27a7fcd503a853344ebcfe4799bd8442237fd974",
                "status": "renamed"
            },
            {
                "additions": 205,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "changes": 205,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "patch": "@@ -0,0 +1,205 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.apache.fop.events.EventProducer;\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+import com.thoughtworks.qdox.JavaDocBuilder;\n+import com.thoughtworks.qdox.model.DefaultDocletTagFactory;\n+import com.thoughtworks.qdox.model.DocletTag;\n+import com.thoughtworks.qdox.model.DocletTagFactory;\n+import com.thoughtworks.qdox.model.JavaClass;\n+import com.thoughtworks.qdox.model.JavaMethod;\n+import com.thoughtworks.qdox.model.JavaParameter;\n+import com.thoughtworks.qdox.model.Type;\n+\n+/**\n+ * Finds EventProducer interfaces and builds the event model for them.\n+ */\n+public class EventProducerCollector {\n+\n+    private static final String CLASSNAME_EVENT_PRODUCER = EventProducer.class.getName();\n+    private static final Map PRIMITIVE_MAP;\n+    \n+    static {\n+        Map m = new java.util.HashMap();\n+        m.put(\"boolean\", Boolean.class);\n+        m.put(\"byte\", Byte.class);\n+        m.put(\"char\", Character.class);\n+        m.put(\"short\", Short.class);\n+        m.put(\"int\", Integer.class);\n+        m.put(\"long\", Long.class);\n+        m.put(\"float\", Float.class);\n+        m.put(\"double\", Double.class);\n+        PRIMITIVE_MAP = Collections.unmodifiableMap(m);\n+    }\n+    \n+    private DocletTagFactory tagFactory;\n+    private EventModel model = new EventModel();\n+\n+    /**\n+     * Creates a new EventProducerCollector.\n+     */\n+    public EventProducerCollector() {\n+        this.tagFactory = createDocletTagFactory();\n+    }\n+\n+    /**\n+     * Creates the {@link DocletTagFactory} to be used by the collector.\n+     * @return the doclet tag factory\n+     */\n+    protected DocletTagFactory createDocletTagFactory() {\n+        return new DefaultDocletTagFactory();\n+    }\n+\n+    /**\n+     * Scans a file and processes it if it extends the {@link EventProducer} interface.\n+     * @param src the source file (a Java source file)\n+     * @throws IOException if an I/O error occurs\n+     * @throws EventConventionException if the EventProducer conventions are violated\n+     * @throws ClassNotFoundException if a required class cannot be found\n+     */\n+    public void scanFile(File src)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        JavaDocBuilder builder = new JavaDocBuilder(this.tagFactory);\n+        builder.addSource(src);\n+        JavaClass[] classes = builder.getClasses();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass clazz = classes[i];\n+            if (clazz.isInterface() && implementsInterface(clazz, CLASSNAME_EVENT_PRODUCER)) {\n+                processEventProducerInterface(clazz);\n+            }\n+        }\n+    }\n+\n+    private boolean implementsInterface(JavaClass clazz, String intf) {\n+        JavaClass[] classes = clazz.getImplementedInterfaces();\n+        for (int i = 0, c = classes.length; i < c; i++) {\n+            JavaClass cl = classes[i];\n+            if (cl.getFullyQualifiedName().equals(intf)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Processes an EventProducer interface and creates an EventProducerModel from it.\n+     * @param clazz the EventProducer interface\n+     * @throws EventConventionException if the event producer conventions are violated\n+     * @throws ClassNotFoundException if a required class cannot be found\n+     */\n+    protected void processEventProducerInterface(JavaClass clazz)\n+                throws EventConventionException, ClassNotFoundException {\n+        EventProducerModel prodMeta = new EventProducerModel(clazz.getFullyQualifiedName());\n+        JavaMethod[] methods = clazz.getMethods(true);\n+        for (int i = 0, c = methods.length; i < c; i++) {\n+            JavaMethod method = methods[i];\n+            EventMethodModel methodMeta = createMethodModel(method);\n+            prodMeta.addMethod(methodMeta);\n+        }\n+        this.model.addProducer(prodMeta);\n+    }\n+\n+    private EventMethodModel createMethodModel(JavaMethod method)\n+            throws EventConventionException, ClassNotFoundException {\n+        JavaClass clazz = method.getParentClass();\n+        //Check EventProducer conventions\n+        if (!method.getReturns().isVoid()) {\n+            throw new EventConventionException(\"All methods of interface \"\n+                    + clazz.getFullyQualifiedName() + \" must have return type 'void'!\");\n+        }\n+        String methodSig = clazz.getFullyQualifiedName() + \".\" + method.getCallSignature();\n+        JavaParameter[] params = method.getParameters();\n+        if (params.length < 1) {\n+            throw new EventConventionException(\"The method \" + methodSig\n+                    + \" must have at least one parameter: 'Object source'!\");\n+        }\n+        Type firstType = params[0].getType();\n+        if (firstType.isPrimitive() || !\"source\".equals(params[0].getName())) {\n+            throw new EventConventionException(\"The first parameter of the method \" + methodSig\n+                    + \" must be: 'Object source'!\");\n+        }\n+        \n+        //build method model\n+        DocletTag tag = method.getTagByName(\"event.severity\");\n+        EventSeverity severity;\n+        if (tag != null) {\n+            severity = EventSeverity.valueOf(tag.getValue());\n+        } else { \n+            severity = EventSeverity.INFO;\n+        }\n+        EventMethodModel methodMeta = new EventMethodModel(\n+                method.getName(), severity);\n+        if (params.length > 1) {\n+            for (int j = 1, cj = params.length; j < cj; j++) {\n+                JavaParameter p = params[j];\n+                Class type;\n+                JavaClass pClass = p.getType().getJavaClass();\n+                if (p.getType().isPrimitive()) {\n+                    type = (Class)PRIMITIVE_MAP.get(pClass.getName());\n+                    if (type == null) {\n+                        throw new UnsupportedOperationException(\n+                                \"Primitive datatype not supported: \" + pClass.getName());\n+                    }\n+                } else {\n+                    String className = pClass.getFullyQualifiedName();\n+                    type = Class.forName(className);\n+                }\n+                methodMeta.addParameter(type, p.getName());\n+            }\n+        }\n+        Type[] exceptions = method.getExceptions();\n+        if (exceptions != null && exceptions.length > 0) {\n+            //We only use the first declared exception because that is always thrown\n+            JavaClass cl = exceptions[0].getJavaClass();\n+            methodMeta.setExceptionClass(cl.getFullyQualifiedName());\n+            methodMeta.setSeverity(EventSeverity.FATAL); //In case it's not set in the comments\n+        }\n+        return methodMeta;\n+    }\n+\n+    /**\n+     * Returns the event model that has been accumulated.\n+     * @return the event model.\n+     */\n+    public EventModel getModel() {\n+        return this.model;\n+    }\n+    \n+    /**\n+     * Saves the accumulated event model to an XML file.\n+     * @param modelFile the target model file\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public void saveModelToXML(File modelFile) throws IOException {\n+        getModel().saveToXML(modelFile);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventProducerCollector.java",
                "sha": "ebb960a8effd0bb4e0d86c8c9b143a9d12e20390",
                "status": "added"
            },
            {
                "additions": 241,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "changes": 241,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "patch": "@@ -0,0 +1,241 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.tools;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.URIResolver;\n+import javax.xml.transform.dom.DOMResult;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.sax.SAXTransformerFactory;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.w3c.dom.Node;\n+\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.DirectoryScanner;\n+import org.apache.tools.ant.Project;\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.types.FileSet;\n+import org.apache.tools.ant.types.selectors.FilenameSelector;\n+\n+/**\n+ * Ant task which inspects a file set for Java interfaces which extend the\n+ * {@link org.apache.fop.events.EventProducer} interface. For all such interfaces an event model\n+ * file and a translation file for the human-readable messages generated by the events is\n+ * created and/or updated.\n+ */\n+public class EventProducerCollectorTask extends Task {\n+\n+    private List filesets = new java.util.ArrayList();\n+    private File modelFile;\n+    private File translationFile;\n+    \n+    /** {@inheritDoc} */\n+    public void execute() throws BuildException {\n+        try {\n+            EventProducerCollector collector = new EventProducerCollector();\n+            processFileSets(collector);\n+            getModelFile().getParentFile().mkdirs();\n+            collector.saveModelToXML(getModelFile());\n+            log(\"Event model written to \" + getModelFile());\n+            if (getTranslationFile() != null) {\n+                updateTranslationFile();\n+            }\n+        } catch (ClassNotFoundException e) {\n+            throw new BuildException(e);\n+        } catch (EventConventionException ece) {\n+            throw new BuildException(ece);\n+        } catch (IOException ioe) {\n+            throw new BuildException(ioe);\n+        }\n+    }\n+    \n+    private static final String MODEL2TRANSLATION = \"model2translation.xsl\";\n+    private static final String MERGETRANSLATION = \"merge-translation.xsl\";\n+    \n+    /**\n+     * Updates the translation file with new entries for newly found event producer methods.\n+     * @throws IOException if an I/O error occurs\n+     */\n+    protected void updateTranslationFile() throws IOException {\n+        try {\n+            boolean resultExists = getTranslationFile().exists();\n+            SAXTransformerFactory tFactory\n+                = (SAXTransformerFactory)SAXTransformerFactory.newInstance();\n+            \n+            //Generate fresh generated translation file as template\n+            Source src = new StreamSource(getModelFile());\n+            StreamSource xslt1 = new StreamSource(\n+                    getClass().getResourceAsStream(MODEL2TRANSLATION));\n+            if (xslt1.getInputStream() == null) {\n+                throw new FileNotFoundException(MODEL2TRANSLATION + \" not found\");\n+            }\n+            DOMResult domres = new DOMResult();\n+            Transformer transformer = tFactory.newTransformer(xslt1);\n+            transformer.transform(src, domres);\n+            final Node generated = domres.getNode();\n+            \n+            Node sourceDocument;\n+            if (resultExists) {\n+                //Load existing translation file into memory (because we overwrite it later)\n+                src = new StreamSource(getTranslationFile());\n+                domres = new DOMResult();\n+                transformer = tFactory.newTransformer();\n+                transformer.transform(src, domres);\n+                sourceDocument = domres.getNode();\n+            } else {\n+                //Simply use generated as source document\n+                sourceDocument = generated;\n+            }\n+\n+            //Generate translation file (with potentially new translations)\n+            src = new DOMSource(sourceDocument);\n+            Result res = new StreamResult(getTranslationFile());\n+            StreamSource xslt2 = new StreamSource(\n+                    getClass().getResourceAsStream(MERGETRANSLATION));\n+            if (xslt2.getInputStream() == null) {\n+                throw new FileNotFoundException(MERGETRANSLATION + \" not found\");\n+            }\n+            transformer = tFactory.newTransformer(xslt2);\n+            transformer.setURIResolver(new URIResolver() {\n+                public Source resolve(String href, String base) throws TransformerException {\n+                    if (\"my:dom\".equals(href)) {\n+                        return new DOMSource(generated);\n+                    }\n+                    return null;\n+                }\n+            });\n+            if (resultExists) {\n+                transformer.setParameter(\"generated-url\", \"my:dom\");\n+            }\n+            transformer.transform(src, res);\n+            if (resultExists) {\n+                log(\"Translation file updated: \" + getTranslationFile());\n+            } else {\n+                log(\"Translation file generated: \" + getTranslationFile());\n+            }\n+        } catch (TransformerException te) {\n+            throw new IOException(te.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Processes the file sets defined for the task.\n+     * @param collector the collector to use for collecting the event producers\n+     * @throws IOException if an I/O error occurs\n+     * @throws EventConventionException if the EventProducer conventions are violated\n+     * @throws ClassNotFoundException if a required class cannot be found\n+     */\n+    protected void processFileSets(EventProducerCollector collector)\n+            throws IOException, EventConventionException, ClassNotFoundException {\n+        Iterator iter = filesets.iterator();\n+        while (iter.hasNext()) {\n+            FileSet fs = (FileSet)iter.next();\n+            DirectoryScanner ds = fs.getDirectoryScanner(getProject());\n+            String[] srcFiles = ds.getIncludedFiles();\n+            File directory = fs.getDir(getProject());\n+            for (int i = 0, c = srcFiles.length; i < c; i++) {\n+                String filename = srcFiles[i];\n+                File src = new File(directory, filename);\n+                collector.scanFile(src);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Adds a file set.\n+     * @param set the file set\n+     */\n+    public void addFileset(FileSet set) {\n+        filesets.add(set);\n+    }\n+    \n+    /**\n+     * Sets the model file to be written.\n+     * @param f the model file\n+     */\n+    public void setModelFile(File f) {\n+        this.modelFile = f;\n+    }\n+    \n+    /**\n+     * Returns the model file to be written.\n+     * @return the model file\n+     */\n+    public File getModelFile() {\n+        return this.modelFile;\n+    }\n+    \n+    /**\n+     * Sets the translation file for the event producer methods.\n+     * @param f the translation file\n+     */\n+    public void setTranslationFile(File f) {\n+        this.translationFile = f;\n+    }\n+    \n+    /**\n+     * Returns the translation file for the event producer methods.\n+     * @return the translation file\n+     */\n+    public File getTranslationFile() {\n+        return this.translationFile;\n+    }\n+    \n+    /**\n+     * Command-line interface for testing purposes.\n+     * @param args the command-line arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            Project project = new Project();\n+\n+            EventProducerCollectorTask generator = new EventProducerCollectorTask();\n+            generator.setProject(project);\n+            project.setName(\"Test\");\n+            FileSet fileset = new FileSet();\n+            fileset.setDir(new File(\"test/java\"));\n+            \n+            FilenameSelector selector = new FilenameSelector();\n+            selector.setName(\"**/*.java\");\n+            fileset.add(selector);\n+            generator.addFileset(fileset);\n+            \n+            File targetDir = new File(\"build/codegen1\");\n+            targetDir.mkdirs();\n+            \n+            generator.setModelFile(new File(\"D:/out.xml\"));\n+            generator.setTranslationFile(new File(\"D:/out1.xml\"));\n+            generator.execute();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java",
                "sha": "60ffaf10358b9b57bbd6feeff179d8ddcfcbf873",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/merge-translation.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:param name=\"generated-url\" select=\"''\"/>\n+  \n+  <xsl:template match=\"catalogue\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\"><xsl:value-of select=\"@xml:lang\"/></xsl:attribute>\n+      <xsl:apply-templates/>\n+      <xsl:if test=\"$generated-url != ''\">\n+        <xsl:variable name=\"generated\" select=\"document($generated-url)\"/>\n+        <xsl:call-template name=\"add-new-messages\">\n+          <xsl:with-param name=\"existing\" select=\".\"/>\n+          <xsl:with-param name=\"new\" select=\"$generated/catalogue\"/>\n+        </xsl:call-template>\n+      </xsl:if>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"add-new-messages\">\n+    <xsl:param name=\"existing\"/>\n+    <xsl:param name=\"new\"/>\n+    <xsl:for-each select=\"$new/message\">\n+      <xsl:variable name=\"k\" select=\"@key\"/>\n+      <xsl:if test=\"not(boolean($existing/message[@key = $k]))\">\n+        <xsl:apply-templates select=\".\"></xsl:apply-templates>\n+      </xsl:if>\n+    </xsl:for-each>\n+  </xsl:template>  \n+  \n+  <xsl:template match=\"@*|node()\">\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"/>\n+    </xsl:copy>\n+  </xsl:template>\n+\n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/merge-translation.xsl",
                "sha": "d15d22fd3ad8ad7e3abda1817f7d6a975e137b9a",
                "status": "added"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/codegen/java/org/apache/fop/tools/model2translation.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+  <xsl:output indent=\"yes\" method=\"xml\" encoding=\"UTF-8\"/>\n+\n+  <xsl:template match=\"event-model\">\n+    <catalogue>\n+      <xsl:attribute name=\"xml:lang\">en</xsl:attribute>\n+      <xsl:apply-templates select=\"//method\"></xsl:apply-templates>\n+    </catalogue>\n+  </xsl:template>\n+  \n+  <xsl:template match=\"method\">\n+    <message>\n+      <xsl:attribute name=\"key\"><xsl:value-of select=\"../@name\"/>.<xsl:value-of select=\"@name\"/></xsl:attribute>\n+    </message>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/codegen/java/org/apache/fop/tools/model2translation.xsl",
                "sha": "a1cf404ee1c67670c254115da689eca71aadb8df",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/.htaccess",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/.htaccess?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/content/.htaccess",
                "patch": "@@ -18,8 +18,8 @@ RedirectMatch Permanent ^/fop/upgrading(.*) http://xmlgraphics.apache.org/fop/0.\n \n # redirect to versioned documentation\n Redirect Temp /fop/stable http://xmlgraphics.apache.org/fop/0.94\n-Redirect Temp /fop/current http://xmlgraphics.apache.org/fop/0.94\n-Redirect Temp /fop/unstable http://xmlgraphics.apache.org/fop/trunk\n+Redirect Temp /fop/current http://xmlgraphics.apache.org/fop/0.95\n+Redirect Temp /fop/unstable http://xmlgraphics.apache.org/fop/0.95\n Redirect Temp /fop/latest http://xmlgraphics.apache.org/fop/trunk\n Redirect Temp /fop/maintenance http://xmlgraphics.apache.org/fop/0.93\n Redirect Temp /fop/previous http://xmlgraphics.apache.org/fop/0.93",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/.htaccess",
                "sha": "561900fdee7fa6669da4fb0efa5c524efd42bbc7",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/doap.rdf",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/doap.rdf?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "src/documentation/content/doap.rdf",
                "patch": "@@ -76,16 +76,23 @@\n     </asfext:implements>\n     <release>\n       <Version>\n-        <name>Previous release</name>\n-        <created>2003-07-16</created>\n-        <revision>0.20.5</revision>\n+        <name>Previous stable release</name>\n+        <created>2007-01-02</created>\n+        <revision>0.93</revision>\n+      </Version>\n+    </release>\n+    <release>\n+      <Version>\n+        <name>Previous development release</name>\n+        <created>2008-25-08</created>\n+        <revision>0.95beta</revision>\n       </Version>\n     </release>\n     <release>\n       <Version>\n         <name>Latest stable release</name>\n-        <created>2007-01-02</created>\n-        <revision>0.93</revision>\n+        <created>2007-08-23</created>\n+        <revision>0.94</revision>\n       </Version>\n     </release>\n     <repository>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/doap.rdf",
                "sha": "c677ecbc88de71d4d119627131a6a3ea7d96269d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/extensions.xml",
                "changes": 125,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/extensions.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 125,
                "filename": "src/documentation/content/xdocs/0.93/extensions.xml",
                "patch": "@@ -1,125 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Standard FOP Extensions</title>\n-    <version>$Revision$</version>\n-  </header>\n-  <body>\n-    <p>\n-      By \"extension\", we mean any data that can be placed in the input XML document that \n-      is not addressed by the XSL-FO standard.\n-      By having a mechanism for supporting extensions, FOP is able to add features that \n-      are not covered in the specification.\n-    </p>\n-    <p>\n-      The extensions documented here are included with FOP, and are automatically available \n-      to you. If you wish to add an extension of your own to FOP, please see the \n-      <a href=\"../dev/extensions.html\">Developers' Extension Page</a>.\n-    </p>\n-    <note>All extensions required the correct use of an appropriate namespace in your input document.</note>\n-    <section id=\"svg\">\n-      <title>SVG</title>\n-      <p>\n-        Please see the <a href=\"graphics.html#svg\">SVG documentation</a> for more details.\n-      </p>\n-    </section>\n-    <section id=\"fo-extensions\">\n-      <title>FO Extensions</title>\n-      <section id=\"fox-namespace\">\n-        <title>Namespace</title>\n-        <p>\n-          By convention, FO extensions in FOP use the \"fox\" namespace prefix.\n-          To use any of the FO extensions, add a namespace entry for \n-          <code>http://xml.apache.org/fop/extensions</code> to the root element:\n-        </p>\n-        <source><![CDATA[<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n-               xmlns:fox=\"http://xmlgraphics.apache.org/fop/extensions\">]]></source>\n-        <note>\n-          Currently, no extension elements are implemented in FOP Trunk which use the \n-          FOP extension namespace.\n-        </note>\n-      </section>\n-      <section id=\"bookmarks\">\n-        <title>PDF Bookmarks</title>\n-        <p>\n-          In previous versions of Apache FOP there was a <code>fox:outline</code> element\n-          which was used to create outlines in PDF files. The redesigned code makes use\n-          of the new <a href=\"http://www.w3.org/TR/xsl11/#fo_bookmark-tree\">bookmark feature defined in the latest XSL 1.1 working draft</a>.\n-        </p>\n-      </section>\n-      <section id=\"named-destinations\">\n-        <title>Anchors or Named Destinations</title>\n-        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n-        <!--p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n-These are useful as fragment identifiers, e.g. \"http://server/document.pdf#anchor-name\".\n-fox:destination elements can be placed almost anywhere in the fo document, including a child of\n-root, a block-level element, or an inline-level element.\n-For the destination to actually work, it must correspond to an \"id\" attribute on some fo element\n-within the document. In other words, the \"id\" attribute actually creates the \"view\" within the\n-PDF document. The fox:destination simply gives that view an independent name.\n-</p>\n-        <source><![CDATA[<fox:destination internal-destination=\"table-of-contents\"/>\n-...\n-<fo:block id=\"table-of-contents\">Table of Contents</fo:block>]]></source>\n-        <warning>It is possible that in some future release of FOP, <em>all </em>elements with\n-\"id\" attributes will generate named-destinations, which will eliminate the need for\n-fox:destination.</warning-->\n-      </section>\n-      <section id=\"table-continue-label\">\n-        <title>Table Continuation Label</title>\n-        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n-        <!--p>Use the fox:continued-label element to create content in table-header and\n-table-footer cells that will appear only on pages after the first page that the table\n-appears. fox:continued-label is itself inline content, and is a container of fo:inline\n-content. This content will be laid out only if the table does not fit on a single page and flows\n-to following pages. Here is an example of FO code creating such a table-header:</p>\n-<source><![CDATA[<fo:table-header>\n-  <fo:table-row>\n-    <fo:table-cell>\n-      <fo:block>Header column 1 with continued label\n-          <fox:continued-label><fo:inline> (cont.)</fo:inline></fox:continued-label>\n-      </fo:block>\n-    </fo:table-cell>\n-    <fo:table-cell>\n-      <fo:block>Header column 2 with no continued label</fo:block>\n-    </fo:table-cell>\n-  </fo:table-row>\n-</fo:table-header>]]></source-->\n-      </section>\n-      <section id=\"widow-orphan-content-limit\">\n-        <title>fox:orphan-content-limit and fox:widow-content-limit</title>\n-        <p>\n-          The two proprietary extension properties, fox:orphan-content-limit and\n-          fox:widow-content-limit, are used to improve the layout of list-blocks and tables.\n-          If you have a table with many entries, you don't want a single row to be left over\n-          on a page. You will want to make sure that at least two or three lines are kept\n-          together. The properties take an absolute length which specifies the area at the\n-          beginning (fox:widow-content-limit) or at the end (fox:orphan-content-limit) of a\n-          table or list-block. The properties are inherited and only have an effect on fo:table\n-          and fo:list-block. An example: fox:widow-content-limit=\"3 * 1.2em\" would make sure\n-          the you'll have at least three lines (assuming line-height=\"1.2\") together on a table\n-          or list-block.\n-        </p>\n-      </section>\n-    </section>\n-  </body>\n-</document>\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/extensions.xml",
                "sha": "0c22ca12375e656293ec65382f36b9bfcd704e9e",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/fonts.xml",
                "changes": 309,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/fonts.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 309,
                "filename": "src/documentation/content/xdocs/0.93/fonts.xml",
                "patch": "@@ -1,309 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Apache FOP: Fonts</title>\n-    <version>$Revision$</version>\n-    <authors>\n-      <person name=\"Jeremias M\u00e4rki\" email=\"\"/>\n-      <person name=\"Tore Engvig\" email=\"\"/>\n-    </authors>\n-  </header>\n-  <body>\n-    <section id=\"intro\">\n-      <title>Summary</title>\n-      <note>The FOP Font subsystem is currently undergoing a significant change.\n-        The details provided here especially related to the generation of FOP Font\n-        Metrics files and the FOP Font configuration are likely to change substantially\n-        in the future.\n-      </note>\n-      <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n-      <table>\n-        <tr>\n-          <th>Renderer</th>\n-          <th>Base-14</th>\n-          <th>AWT/OS</th>\n-          <th>Custom</th>\n-          <th>Custom Embedding</th>\n-        </tr>\n-        <tr>\n-          <td>PDF</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-        </tr>\n-        <tr>\n-          <td>PostScript</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-        </tr>\n-        <!--tr> NOT AVAILABLE YET!!!\n-          <td>PCL</td>\n-          <td>yes (modified)</td>\n-          <td>no</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr-->\n-        <tr>\n-          <td>TXT</td>\n-          <td>yes (used for layout but not for output)</td>\n-          <td>no</td>\n-          <td>yes (used for layout but not for output)</td>\n-          <td>no</td>\n-        </tr>\n-        <tr>\n-          <td>AWT</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-          <td>n/a (display only)</td>\n-        </tr>\n-        <tr>\n-          <td>Print</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>yes</td>\n-          <td>controlled by OS printer driver</td>\n-        </tr>\n-        <tr>\n-          <td>RTF</td>\n-          <td>n/a (font metrics not needed)</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-        </tr>\n-        <tr>\n-          <td>MIF</td>\n-          <td>n/a (font metrics not needed)</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-          <td>n/a</td>\n-        </tr>\n-        <tr>\n-          <td>SVG</td>\n-          <td>if available from OS</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr>\n-        <tr>\n-          <td>XML</td>\n-          <td>yes</td>\n-          <td>no</td>\n-          <td>yes</td>\n-          <td>n/a</td>\n-        </tr>\n-      </table>\n-    </section>\n-    <section>\n-      <title>Base-14 Fonts</title>\n-      <p>The Adobe PDF Specification specifies a set of 14 fonts that must be available to every PDF reader: Helvetica (normal, bold, italic, bold italic), Times (normal, bold, italic, bold italic), Courier (normal, bold, italic, bold italic), Symbol and ZapfDingbats.</p>\n-    </section>\n-    <section id=\"awt\">\n-      <title>AWT/Operating System Fonts</title>\n-      <p>The AWT family of renderers (AWT, Print, SVG), use the Java AWT libraries for font metric information. Through operating system registration, the AWT libraries know what fonts are available on the system, and the font metrics for each one.</p>\n-    </section>\n-    <section id=\"custom\">\n-      <title>Custom Fonts</title>\n-      <p>Support for custom fonts is added by creating font metric files (written in XML) from the actual font files, and registering them with FOP. Currently only Type 1 and TrueType fonts can be added.\n-More information about fonts can be found at:</p>\n-      <ul>\n-        <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n-        <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a>\n-</li>\n-      </ul>\n-      <section id=\"type1-metrics\">\n-        <title>Type 1 Font Metrics</title>\n-        <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n-To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n-        <p>Windows (on JDK 1.4 and later):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Windows (on JDK 1.3.x):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar;lib\\xml-apis.jar;\n-         lib\\xercesImpl.jar;lib\\xalan.jar;lib\\serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.4 and later):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.3.1):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar:lib/xml-apis.jar:\n-         lib/xercesImpl.jar:lib/xalan.jar:lib/serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>PFMReader [options]:</p>\n-        <ul>\n-          <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n-.pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n-chosen. This may be useful in some cases to ensure that applications using the output document\n-(Acrobat Reader for example) use the embedded font instead of a local font with the same\n-name.</li>\n-        </ul>\n-        <note>The classpath in the above example has been simplified for readability.\n-You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n-xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n-        <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n-FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n-The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n-The constructed values however appear to have no visible influence.</note>\n-      </section>\n-      <section id=\"truetype-metrics\">\n-        <title>TrueType Font Metrics</title>\n-        <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n-Use it in a similar manner to PFMReader.\n-For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader [options]\n-             C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n-        <p>TTFReader [options]:</p>\n-        <ul>\n-          <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n-INFO).</li>\n-          <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n-          <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n-TrueType Collection (.ttc file) you must specify which font from the collection you will read\n-metrics from.\n-If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n-          <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n-Without this option, a CID-keyed font metrics file is created.\n-The table below summarizes the differences between these two encoding options as currently\n-used within FOP.\n-Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n-        </ul>\n-        <table id=\"ttf-encoding\">\n-          <tr>\n-            <th>Issue</th>\n-            <th>WinAnsi</th>\n-            <th>CID-keyed</th>\n-          </tr>\n-          <tr>\n-            <td>Usable Character Set</td>\n-            <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n-            <td>Limited only by the characters in the font itself.</td>\n-          </tr>\n-          <tr>\n-            <td>Character Encoding in the Output Document.</td>\n-            <td>Correct.</td>\n-            <td>Never correct. Search, index, and cut-and-paste operations in the output document\n-will produce incorrect results.</td>\n-          </tr>\n-          <tr>\n-            <td>Character Display</td>\n-            <td>Correct.</td>\n-            <td>Correct, but copy/paste won't work in Acrobat Reader. (FOP currently doesn't emit the /ToUnicode table which is necessary for copy/paste to work.)</td>\n-          </tr>\n-          <tr>\n-            <td>Embedding the Font</td>\n-            <td>Optional.</td>\n-            <td>Mandatory. Not embedding the font produces invalid PDF documents.</td>\n-          </tr>\n-        </table>\n-        <warning>\n-          You may experience failures with certain TrueType fonts, especially if they don't contain \n-          the so-called \"cmap\" table. TTFReader can currently not deal with font like this.\n-        </warning>\n-      </section>\n-      <section id=\"truetype-collections-metrics\">\n-        <title>TrueType Collections Font Metrics</title>\n-        <p>TrueType collections (.ttc files) contain more than one font.\n-To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n-        <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n-It will display all of the font names and exit with an Exception.</p>\n-        <p>Here is an example of generating a metrics file for a .ttc file:</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n-             msmincho.ttc msminch.xml</source>\n-      </section>\n-      <section id=\"register\">\n-        <title>Register Fonts with FOP</title>\n-        <p>You must tell FOP how to find and use the font metrics files by registering them in the <a href=\"configuration.html\">FOP Configuration</a>. Add entries for your custom fonts, regardless of font type, to the configuration file in a manner similar to the following:</p>\n-        <source><![CDATA[<font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\"\n-      embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n-  <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n-</font>]]></source>\n-        <note>Review the documentation for <a href=\"configuration.html\">FOP Configuration</a> for instructions on making the FOP configuration available to FOP when it runs. Otherwise, FOP has no way of finding your custom font information.</note>\n-        <ul>\n-          <li>\n-            URLs are used to access the font metric and font files.\n-            Relative URLs are resolved relative to the font-base property (or base) if available.\n-            See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n-          </li>\n-          <li>The \"kerning\" and \"embed-url\" attributes are optional. Kerning is currently not used at all. If embedding is off, the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n-          <li>When setting the embed-url attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n-          <li>\n-            If relative URLs are specified, they are evaluated relative to the value of the \n-            \"font-base\" setting. If there is no \"font-base\" setting, the fonts are evaluated \n-            relative to the base directory.\n-          </li>\n-        </ul>\n-        <!--note>Cocoon users will need to setup the config, see FOPSerializer for more information.</note-->\n-      </section>\n-      <section id=\"embedding\">\n-        <title>Embedding</title>\n-        <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n-        <note>The font is simply embedded into the PDF file, it is not converted.</note>\n-        <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n-If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n-        <warning>\n-          Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n-          PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n-          the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n-        </warning>\n-        <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n-This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n-        <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n-        <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the original font, containing only the glyphs used, is embedded in the output document.\n-Currently, this embedded font contains only the minimum data needed to be embedded in a pdf document, and does not contain any codepage information.\n-The PDF document contains indexes to the glyphs in the font instead of to encoded characters.\n-While the document will be displayed correctly, the net effect of this is that searching, indexing, and cut-and-paste will not work properly.</p>\n-        <p>One workaround for this behavior is to use the \"-enc ansi\" option when generating metrics with TTFReader.\n-This will cause the whole font to be embedded in the pdf document.\n-Characters will be WinAnsi encoded (as specified in the PDF spec), so you lose the ability to use characters from other character sets.\n-See <a href=\"#ttf-encoding\">Table of TTF Encoding Options</a> for more details.</p>\n-      </section>\n-      <section id=\"embedding-base14\">\n-        <title>Explicitely embedding the base 14 fonts</title>\n-        <p>\n-          There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n-          can normally be considered available on the target platform (viewer, printer). One of these cases is\n-          PDF/A which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n-          Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n-          problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n-          the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n-          PFMReader application writes \"UnknownEncoding\" to the generated XML file. In order to embed \"Symbol\"\n-          and \"ZapfDingbats\" you have to manually change the XML font metrics file and specify \"SymbolEncoding\"\n-          or \"ZapfdingbatsEncoding\" encoding respectively as the value for the \"encoding\" element.\n-        </p>\n-        <p>Example:</p>\n-        <source><![CDATA[\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<font-metrics type=\"TYPE1\">\n-  <font-name>Symbol</font-name>\n-  <embed/>\n-  <encoding>SymbolEncoding</encoding>\n-  <cap-height>673</cap-height>\n-  <x-height>766</x-height>\n-  [..]]]></source>\n-      </section>\n-    </section>\n-  </body>\n-</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/fonts.xml",
                "sha": "ca6209c6d7ca2a5b7fabd7386e86194f5249a7fd",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/graphics.xml",
                "changes": 338,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.93/graphics.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 338,
                "filename": "src/documentation/content/xdocs/0.93/graphics.xml",
                "patch": "@@ -1,338 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n-<document>\n-  <header>\n-    <title>Apache FOP: Graphics Formats</title>\n-    <version>$Revision$</version>\n-  </header>\n-  <body>\n-    <section id=\"support-overview\">\n-      <title>Overview of Graphics Support</title>\n-      <p>\n-        The table below summarizes the <em>theoretical</em> support for graphical formats within FOP. In other words, within the constraints of the limitations listed here, these formats <em>should</em> work. However, many of them have not been tested, and there may be limitations that have not yet been discovered or documented. The packages needed to support some formats are not included in the FOP distribution and must be installed separately. Follow the links in the \"Support Thru\" column for more details.\n-      </p>\n-      <table>\n-        <tr>\n-          <th>Format</th>\n-          <th>Type</th>\n-          <th><a href=\"#native\">FOP native support</a></th>\n-          <th><a href=\"#batik\">Batik SVG</a></th>\n-          <th><a href=\"#batik-codecs\">Batik codecs</a></th>\n-          <th><a href=\"#imageio\">Image I/O</a></th>\n-          <th><a href=\"#jai\">JAI</a></th>\n-          <th><a href=\"#jimi\">JIMI</a></th>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n-          <td>bitmap</td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n-          <td>metafile (both bitmap and vector), probably most frequently used for vector drawings</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td>GIF (Graphics Interchange Format)</td>\n-          <td>bitmap</td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td>X</td>\n-          <td>X</td>\n-          <td>X</td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n-          <td>bitmap</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n-          <td>bitmap</td>\n-          <td></td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n-          <td>vector (with embedded bitmaps)</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n-        </tr>\n-        <tr>\n-          <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n-          <td>bitmap</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <td>X</td>\n-          <td></td>\n-          <!--td><a href=\"#native\">FOP native</a> or <a href=\"#jai\">JAI</a>, depending on the subformat. See <a href=\"#tiff\">TIFF</a> for more details.(JIMI also supports TIFF, but this has not been implemented within FOP).</td-->\n-        </tr>\n-      </table>\n-      <note>\"(X)\" means restricted support. Please see the details below.</note>\n-    </section>\n-    <section id=\"packages\">\n-      <title>Graphics Packages</title>\n-      <section id=\"native\">\n-        <title>FOP Native</title>\n-        <p>\n-          FOP has native ability to handle some graphic file formats.\n-        </p>\n-      </section>\n-      <section id=\"batik-codecs\">\n-        <title>Batik codecs</title>\n-        <p>\n-          Apache Batik contains codecs for PNG and TIFF access. FOP can use these.\n-        </p>\n-      </section>\n-      <section id=\"imageio\">\n-        <title>Image I/O (JDK 1.4 or higher)</title>\n-        <p>\n-          For JDKs 1.4 or higher, FOP provides a wrapper to load images through the \n-          <a class=\"fork\" href=\"http://java.sun.com/j2se/1.4.2/docs/guide/imageio/index.html\">JDK's Image I/O API</a> (JSR 015).\n-          Image I/O allows to dynamically add additional image codecs. An example of such an add-on library are the\n-          <a class=\"fork\" href=\"http://java.sun.com/products/java-media/jai/\">JAI Image I/O Tools</a> available from Sun.\n-        </p>\n-      </section>\n-      <section id=\"jimi\">\n-        <title>JIMI</title>\n-        <p>\n-          Because of licensing issues, the JIMI image library is not included in the FOP distribution. First, <a class=\"fork\" href=\"http://java.sun.com/products/jimi\">download</a> and install it.\n-Then, copy the file \"JimiProClasses.zip\" from the archive to {fop-install-dir}/lib/jimi-1.0.jar. Please note that FOP binary distributions are compiled with JIMI support, so there is no need for you to build FOP to add the support. If jimi-1.0.jar is installed in the right place, it will automatically be used by FOP, otherwise it will not.\n-        </p>\n-      </section>\n-      <section id=\"jai\">\n-        <title>JAI (Java Advanced Imaging API)</title>\n-        <warning>JAI support is available for Release 0.20.5 and later. The comments in this section do not apply to releases earlier than 0.20.5.</warning>\n-        <p>\n-          FOP has been compiled with JAI support, but JAI is not included in the FOP distribution.\n-To use it, install <a href=\"http://java.sun.com/products/java-media/jai\">JAI</a>, then copy the jai_core.jar and the jai_codec.jar files to {fop-install-dir}/lib.\n-JAI is much faster than JIMI, but is not available for all platforms. See <a href=\"http://java.sun.com/products/java-media/jai/forDevelopers/jaifaq.html#platforms\">What platforms are supported?</a> on the JAI FAQ page for more details.\n-        </p>\n-      </section>\n-      <section id=\"batik\">\n-        <title>Batik</title>\n-        <p>Current FOP distributions include a distribution of the Apache <a class=\"fork\" href=\"ext:batik\">Batik</a> version 1.6.\n-It is automatically installed with FOP.\n-Because Batik's API changes frequently, it is highly recommended that you use the version that ships with FOP, at least when running FOP.</p>\n-        <warning>Batik must be run in a graphical environment.</warning>\n-        <p>Batik must be run in a graphical environment.\n-It uses AWT classes for rendering SVG, which in turn require an X server on Unixish systems.\n-If you run a server without X, or if you can't connect to the X server due to security restrictions or policies (a so-called \"headless\" environment), SVG rendering will fail.</p>\n-        <p>Here are some workarounds:</p>\n-        <ul>\n-          <li>If you are using JDK 1.4, start it with the <code>-Djava.awt.headless=true</code> command line option.</li>\n-          <li>Install an X server which provides an in-memory framebuffer without actually using a screen device or any display hardware. One example is Xvfb.</li>\n-          <li>Install a toolkit which emulates AWT without the need for an underlying X server. One example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free and comes with detailed installation instructions.</li>\n-        </ul>\n-      </section>\n-    </section>\n-    <section id=\"bmp\">\n-      <title>BMP</title>\n-      <p>FOP native support for BMP images is limited to the RGB color-space.</p>\n-    </section>\n-    <section id=\"eps\">\n-      <title>EPS</title>\n-      <p>FOP provides support for two output targets:</p>\n-      <ul>\n-        <li>PostScript (full support).</li>\n-        <li>\n-          PDF (partial support). Due to the lack of a built-in PostScript interpreter, FOP \n-          can only embed the EPS file into the PDF. Acrobat Reader will not currently display \n-          the EPS (it doesn't have a PostScript interpreter, either) but it will be shown \n-          correctly when you print the PDF on a PostScript-capable printer. PostScript devices \n-          (including GhostScript) will render the EPS correctly.\n-        </li>\n-      </ul>\n-      <p>\n-        Other output targets can't be supported at the moment because\n-        FOP lacks a PostScript interpreter. Furthermore, FOP is not able\n-        to parse the preview bitmaps sometimes contained in EPS files.\n-      </p>\n-    </section>\n-    <section id=\"jpeg\">\n-      <title>JPEG</title>\n-      <p>FOP native support of JPEG does not include all variants, especially those containing unusual color lookup tables and color profiles.\n-If you have trouble with a JPEG image in FOP, try opening it with an image processing program (such as Photoshop or Gimp) and then saving it.\n-Specifying 24-bit color output may also help.\n-For the PDF and PostScript renderers most JPEG images can be passed through without decompression.\n-User reports indicate that grayscale, RGB, and CMYK color-spaces are all rendered properly.\n-      </p>\n-    </section>\n-    <section id=\"png\">\n-      <title>PNG</title>\n-      <p>If using JAI for PNG support, only RGB and RGBA color-spaces are supported for FOP rendering.</p>\n-    </section>\n-    <section id=\"svg\">\n-      <title>SVG</title>\n-      <section id=\"svg-intro\">\n-        <title>Introduction</title>\n-        <p>FOP uses <a href=\"#batik\">Batik</a> for SVG support.\n-This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n-file referenced with <code>fo:external-graphic</code>.</p>\n-      <note>   \n-Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n-documents into PDF.  For more information please see the\n-<a href=\"http://xml.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n-on the Batik site.\n-      </note>\n-      </section>\n-      <section id=\"svg-pdf-graphics\">\n-        <title>Placing SVG Graphics into PDF</title>\n-        <p>\n-The SVG is rendered into PDF by using PDF commands to draw and fill\n-lines and curves. This means that the graphical objects created with\n-this remain as vector graphics.\n-        </p>\n-        <p>\n-There are a number of SVG things that cannot be converted directly into\n-PDF. Parts of the graphic such as effects, patterns and images are inserted\n-into the PDF as a raster graphic. The resolution of this graphic may not\n-be ideal depending on the FOP dpi (72dpi) and the scaling for that graphic.\n-We hope to improve this in the future.</p>\n-        <p>\n-Currently transparency is not supported in PDF so many svg images that\n-contain effects or graphics with transparent areas will not be displayed\n-correctly.\n-        </p>\n-      </section>\n-      <section id=\"svg-pdf-text\">\n-        <title>Placing SVG Text into PDF</title>\n-        <p>If possible, Batik will use normal PDF text when inserting text. It does\n-this by checking if the text can be drawn normally and the font is\n-supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n-<!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n-shows how various types and effects with text are handled.\n-Note that tspan and outlined text are not yet implemented.</p>\n-        <p>\n-Otherwise, text is converted and drawn as a set of shapes by batik, using the stroking text painter.\n-This means that a typical character will\n-have about 10 curves (each curve consists of at least 20 characters).\n-This can make the pdf files large and when the pdf is viewed the\n-viewer does not normally draw those fine curves very well (turning on\n-Smooth Line Art in the Acrobat preferences will fix this).\n-If the text is inserted into the PDF using the inbuilt text commands\n-for PDF it will use a single character.\n-        </p>\n-        <p>Note that because SVG text can be rendered as either text or a vector graphic, you may need to consider settings in your viewer for both.\n-The Acrobat viewer has both \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images to be displayed nicely on your screen (see Edit / Preferences / Display).\n-This setting will not affect the printing of your document, which should be OK in any case, but will only affect the quality of the screen display.</p>\n-      </section>\n-      <section id=\"svg-scaling\">\n-        <title>Scaling</title>\n-        <p>Currently, SVG images are rendered with the dimensions specified <em>in the SVG file</em>, within the viewport specified in the fo:external-graphic element.\n-For everything to work properly, the two should be equal.\n-The SVG standard leaves this issue as an implementation detail.\n-FOP will probably implement a scaling mechanism in the future.</p>\n-      </section>\n-      <section id=\"svg-problems\">\n-        <title>Known Problems</title>\n-        <ul>\n-          <li>\n-soft mask transparency is combined with white so that it looks better\n-on pdf 1.3 viewers but this causes the soft mask to be slightly lighter\n-or darker on pdf 1.4 viewers\n-          </li>\n-          <li>\n-there is some problem with a gradient inside a pattern causing a pdf\n-error when viewed in acrobat 5\n-          </li>\n-          <li>\n-text is not always handled correctly, it may select the wrong font\n-especially if characters have multiple fonts in the font list\n-          </li>\n-          <li>\n-more pdf text handling could be implemented\n-It could draw the string using the attributed character iterator\n-to handle tspans and other simple changes of text.\n-          </li>\n-          <li>\n-JPEG images are not inserted directly into the pdf document\n-This area has not been implemented yet since the appropriate\n-method in batik is static\n-          </li>\n-          <li>\n-Uniform transparency for images and other svg elements that are converted\n-into a raster graphic are not drawn properly in PDF. The image is opaque.\n-          </li>\n-        </ul>\n-      </section>\n-    </section>\n-    <section id=\"tiff\">\n-      <title>TIFF</title>\n-      <p>FOP-native TIFF support is limited to PDF and PostScript output only. Also, according to user reports, FOP's native support for TIFF is limited to images with the following characteristics (all must be true for successful rendering):</p>\n-      <ul>\n-        <li>single channel images (i.e., bi-level and grayscale only)</li>\n-        <li>uncompressed images, or images using CCITT T.4, CCITT T.6, or JPEG compression</li>\n-        <li>images using white-is-zero encoding in the TIFF PhotometricInterpretation tag</li>\n-      </ul>\n-      <p><em>JAI:</em> Supports RGB and RGBA only for FOP rendering.</p>\n-    </section>\n-    <section id=\"resolution\">\n-      <title>Graphics Resolution</title>\n-      <p>Some bitmapped image file formats store a dots-per-inch (dpi) or other resolution value. Since PDF and most output formats do not have a concept of resolution, but only of absolute image units (i.e. pixels) FOP ignores the resolution values as well. Instead, FOP uses the dimensions of the image as specified in the fo:external-graphic element to render the image:</p>\n-      <ul>\n-        <li>If no dimensions are given, FOP uses a default value of 72 dpi to compute the graphic's dimensions. For example, suppose a graphic 300 pixels wide and 400 pixels high. FOP will render the graphic at 4.167 inches wide, 5.555 inches high, with an apparent resolution of 72 dpi.</li>\n-        <li>If only one dimension is given, FOP by default uses the same aspect ratio to compute the other dimension (to avoid the appearance of stretching). For example, suppose a graphic 300 pixels wide and 400 pixels high, for which content-width = \".5in\". FOP will compute the content-height = .667 inches, and will render the graphic at that size, with an apparent resolution of 600 dpi.</li>\n-        <li>If both dimensions are given, FOP simply renders the image in that space. For example, suppose a graphic 300 pixels wide and 400 pixels high, for which content-width = \"3in\" and content-height = \"4in\". FOP will render the graphic at that size, with an apparent resolution of 100 dpi.</li>\n-      </ul>\n-      <p>If you need a higher apparent output resolution for bitmapped images, first make sure that at least one dimension of the image is defined in your XSL-FO input. Apart from that, resolution problems are in the image file itself, and must be corrected there: use or create a higher-resolution image file.</p>\n-      <note>The explanation above describes only the basic default behavior. There are other attributes of the fo:external-graphic element that can affect the behavior described above.</note>\n-    </section>\n-    <section id=\"caching\">\n-      <title>Image caching</title>\n-      <p>\n-        FOP caches images between runs. The URL is used as a key to identify images which means that when\n-        a particular URL appears again, the image is taken from the cache. If you have a servlet that\n-        generates a different image each time it is called with the same URL you need to use a constantly \n-        changing dummy parameter on the URL to avoid caching.\n-      </p>\n-      <p>\n-        The image cache has been improved considerably in the redesigned code. Therefore, a resetCache() method\n-        has become unnecessary. If you still experience OutOfMemoryErrors, please notify us.\n-      </p>\n-    </section>\n-  </body>\n-</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/content/xdocs/0.93/graphics.xml",
                "sha": "beb86022362d4cd0b6c64e5edaa686ed1c8ff93c",
                "status": "removed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/fonts.xml",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.94/fonts.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 12,
                "filename": "src/documentation/content/xdocs/0.94/fonts.xml",
                "patch": "@@ -200,17 +200,6 @@ Please note that this information only applies to TrueType fonts and TrueType co\n             <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n             <td>Limited only by the characters in the font itself.</td>\n           </tr>\n-          <tr>\n-            <td>Character Encoding in the Output Document.</td>\n-            <td>Correct.</td>\n-            <td>Never correct. Search, index, and cut-and-paste operations in the output document\n-will produce incorrect results.</td>\n-          </tr>\n-          <tr>\n-            <td>Character Display</td>\n-            <td>Correct.</td>\n-            <td>Correct, but copy/paste won't work in Acrobat Reader. (FOP currently doesn't emit the /ToUnicode table which is necessary for copy/paste to work.)</td>\n-          </tr>\n           <tr>\n             <td>Embedding the Font</td>\n             <td>Optional.</td>\n@@ -219,7 +208,7 @@ will produce incorrect results.</td>\n         </table>\n         <warning>\n           You may experience failures with certain TrueType fonts, especially if they don't contain \n-          the so-called \"cmap\" table. TTFReader can currently not deal with font like this.\n+          the so-called Unicode \"cmap\" table. TTFReader can currently not deal with font like this.\n         </warning>\n       </section>\n       <section id=\"truetype-collections-metrics\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/fonts.xml",
                "sha": "1f1c66b31abaa9eb071b07fcb288eb70a6a4092f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/index.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.94/index.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/content/xdocs/0.94/index.xml",
                "patch": "@@ -20,7 +20,7 @@\n <document>\n   <header>\n     <title>Apache FOP Version 0.94</title>\n-    <version>$Revision: 201586 $</version>\n+    <version>$Revision$</version>\n   </header>\n   <body>\n     <section id=\"intro\">\n@@ -32,7 +32,7 @@\n       </p>\n       <p>\n         This fifth release contains many bug fix release and new features compared\n-        to 0.92beta. To see what has changed since the last release, please visit the \n+        to 0.93. To see what has changed since the last release, please visit the \n         <a href=\"changes_0.94.html\">Changes Page</a> and the <a href=\"releaseNotes_0.94.html\">Release Notes</a>.\n       </p>\n     </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/index.xml",
                "sha": "9bf46ccf5c4a71a11e77e52ca336c293095ee0ba",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/pdfa.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.94/pdfa.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.94/pdfa.xml",
                "patch": "@@ -20,7 +20,7 @@\n <document>\n   <header>\n     <title>PDF/A (ISO 19005)</title>\n-    <version>$Revision: 389563 $</version>\n+    <version>$Revision$</version>\n     <authors>\n       <person name=\"Jeremias M\u00e4rki\" email=\"jeremias@apache.org\"/>\n     </authors>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/pdfa.xml",
                "sha": "1b3b75561c397c94f7c805819443b90e83397673",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/upgrading.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.94/upgrading.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.94/upgrading.xml",
                "patch": "@@ -77,7 +77,7 @@\n         </li>\n         <li>\n           Extensions and Renderers written for version 0.20.5 will not work with the new code! The new FOP \n-          extension for <a href=\"http://barcode4j.krysalis.org\">Barcode4J</a> is available since \n+          extension for <a href=\"http://barcode4j.sourceforge.net\">Barcode4J</a> is available since \n           January 2007.\n         </li>\n         <li>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.94/upgrading.xml",
                "sha": "3446dcab338e00e353a10c6527b4bfc36b514ef7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/anttask.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/anttask.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/anttask.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/anttask.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/anttask.xml",
                "sha": "44550c3d7e9d4d1dc3769ff181c1766c63135234",
                "status": "renamed"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/compiling.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/compiling.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/0.95/compiling.xml",
                "patch": "@@ -41,7 +41,7 @@\n       <section id=\"env-jdk\">\n         <title>JDK</title>\n         <p>\n-          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.3\n+          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.4\n           (A Java Runtime Environment is not sufficient).\n         </p>\n       </section>\n@@ -59,7 +59,7 @@\n         <p>\n           The build script uses <a href=\"ext:ant\">Apache Ant</a>, a popular \n           Java-based build tool, which usually requires that the environment variable JAVA_HOME point to \n-          your local JDK root directory. This is true even if you use JDK 1.2 or above, which normally \n+          your local JDK root directory. This is true even if you use JDK 1.4 or above, which normally \n           does not need this setting.\n         </p>\n       </section>\n@@ -103,7 +103,8 @@\n           needed, but may be helpful if you are having problems with the build process itself.\n         </li>\n         <li>\n-          <strong>javadocs</strong>: Generates javadocs. This creates the FOP API documentation.\n+          <strong>javadocs</strong>: Creates the FOP API documentation.\n+          <note>A minimum JDK version of 1.4.2 is required for generating the javadocs.</note>\n         </li>\n       </ul>\n       <p>To run the build:</p>",
                "previous_filename": "src/documentation/content/xdocs/0.93/compiling.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/compiling.xml",
                "sha": "57761429f6e42ce5642968013acf3f88accc1054",
                "status": "renamed"
            },
            {
                "additions": 72,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/configuration.xml",
                "changes": 85,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/configuration.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 13,
                "filename": "src/documentation/content/xdocs/0.95/configuration.xml",
                "patch": "@@ -64,19 +64,21 @@\n       <tr>\n         <th>Element</th>\n         <th>Data Type (for the value)</th>\n+        <th>Description</th>\n         <th>Default Value</th>\n       </tr>\n       <tr>\n         <td>base</td>\n         <td>URL or directory</td>\n         <td>Specifies the base URL based on which relative URL will be resolved.</td>\n+        <td>current directory</td>\n       </tr>\n       <tr>\n         <td>font-base</td>\n         <td>URL or directory</td>\n         <td>Specifies the base URL based on which relative font URLs will be resolved.\n-        If not specified defaults to the base URL above.\n         </td>\n+        <td>base URL/directory (above)</td>\n       </tr>\n       <tr>\n         <td>hyphenation-base</td>\n@@ -85,6 +87,7 @@\n         files will be resolved. If not specified, support for user-supplied hyphenation \n         patterns remains disabled.\n         </td>\n+        <td>disabled</td>\n       </tr>\n       <tr>\n         <td>source-resolution</td>\n@@ -93,6 +96,7 @@\n           Resolution in dpi (dots per inch) which is used internally to determine the pixel \n           size for SVG images and bitmap images without resolution information.\n         </td>\n+        <td>72 dpi</td>\n       </tr>\n       <tr>\n         <td>target-resolution</td>\n@@ -102,6 +106,17 @@\n           images generated by bitmap renderers (such as the TIFF renderer) and by bitmaps\n           generated by Apache Batik for filter effects and such.\n         </td>\n+        <td>72 dpi</td>\n+      </tr>\n+      <tr>\n+        <td>strict-configuration</td>\n+        <td>Boolean (true, false)</td>\n+        <td>\n+          Setting this option to 'true' will cause FOP to strictly verify the contents of the\n+          FOP configuration file to ensure that defined resources (such as fonts and base\n+          URLs/directories) are valid and available to FOP.  Any errors found will cause FOP to\n+          immediately raise an exception.</td>\n+        <td>false</td>\n       </tr>\n       <tr>\n         <td>strict-validation</td>\n@@ -111,6 +126,7 @@\n           for example, you're allowed to specify a border on a region-body which is supported \n           by some FO implementations but is non-standard. Note that such a border would \n           currently have no effect in Apache FOP.</td>\n+        <td>true</td>\n       </tr>\n       <tr>\n         <td>break-indent-inheritance</td>\n@@ -124,6 +140,7 @@\n           the desired behaviour and because the behaviour among the commercial implementations\n           varies. The default for this option (i.e. false) is to behave exactly like the \n           specification describes.</td>\n+        <td>false</td>\n       </tr>\n       <tr>\n         <td>default-page-settings</td>\n@@ -132,11 +149,31 @@\n           Specifies the default width and height of a page if \"auto\" is specified \n           for either or both values. Use \"height\" and \"width\" attributes on the \n           default-page-settings element to specify the two values.</td>\n+        <td>\"height\" 11 inches, \"width\" 8.26 inches</td>\n+      </tr>\n+      <tr>\n+        <td>use-cache</td>\n+        <td>boolean (true, false)</td>\n+        <td>All fonts information that has been gathered as a result of \"directory\"\n+        or \"auto-detect\" font configurations will be cached for future rendering runs.\n+        This setting should improve performance on systems where\n+        fonts have been configured using the \"directory\" or \"auto-detect\" tag mechanisms.\n+        By default this option is switched on.</td>\n+        <td>true</td>\n+      </tr>\n+      <tr>\n+        <td>cache-file</td>\n+        <td>String</td>\n+        <td>This options specifies the file/directory path of the fop cache file.\n+        This option can also be specified on the command-line using the -cache option.\n+        This file is currently only used to cache font triplet information for future reference.</td>\n+        <td>${base}/conf/fop.cache</td>\n       </tr>\n       <tr>\n         <td>renderers</td>\n         <td>(see text below)</td>\n         <td>Contains the configuration for each renderer. See below.</td>\n+        <td>N/A</td>\n       </tr>\n     </table>\n     <p>\n@@ -145,6 +182,12 @@\n     <source><![CDATA[\n <fop version=\"1.0\">\n \n+  <!-- Strict user configuration -->\n+  <strict-configuration>true</strict-configuration>\n+\n+  <!-- Strict FO validation -->\n+  <strict-validation>true</strict-validation>\n+\n   <!-- Base URL for resolving relative URLs -->\n   <base>./</base>\n \n@@ -234,7 +277,23 @@\n       <output-profile>C:\\FOP\\Color\\EuropeISOCoatedFOGRA27.icc</output-profile>\n       \n       <fonts....\n-    </renderer>]]></source>\n+      </renderer>]]></source>\n+      <p>\n+        Some people don't have high requirements on color fidelity but instead want the smallest\n+        PDF file sizes possible. In this case it's possible to disable the default sRGB color space\n+        which XSL-FO requires. This will cause RGB colors to be generated as device-specific RGB.\n+        Please note that this option is unavailable (and will cause an error) if you enable\n+        PDF/A or PDF/X functionality or if you specify an output profile. This setting will make the\n+        PDF about 4KB smaller. To disable the sRGB color space add the following setting:\n+      </p>\n+      <source><![CDATA[\n+    <renderer mime=\"application/pdf\">\n+      <filterList...\n+      \n+      <disable-srgb-colorspace>true</disable-srgb-colorspace>\n+      \n+      <fonts....\n+      </renderer>]]></source>\n     </section>\n     <section id=\"ps-renderer\">\n       <title>Special Settings for the PostScript Renderer</title>\n@@ -268,7 +327,7 @@\n         offered by Java.\n       </p>\n       <p>\n-        Additionally, there are certain settings that control who the renderer handles various elements.\n+        Additionally, there are certain settings that control how the renderer handles various elements.\n       </p>\n <source><![CDATA[<renderer mime=\"application/vnd.hp-PCL\">\n   <rendering>quality</rendering>\n@@ -290,25 +349,25 @@\n     </section>\n   </section>\n \n-  <section>\n-    <title>When it does not work</title>\n+        <section>\n+          <title>When it does not work</title>\n \n-    <p>FOP searches the configuration file for the information it\n+          <p>FOP searches the configuration file for the information it\n expects, at the position it expects. When that information is not\n present, FOP will not complain, it will just continue. When there is\n other information in the file, FOP will not complain, it will just\n ignore it. That means that when your configuration information is in\n the file but in a different XML element, or in a different XML path,\n than FOP expects, it will be silently ignored.</p>\n \n-    <p>Check the following possibilities:</p>\n+          <p>Check the following possibilities:</p>\n \n-    <ul>\n-    <li>The format of the configuration file has changed\n+          <ul>\n+            <li>The format of the configuration file has changed\n considerably between FOP 0.20.5 and FOP 1.0 and its beta versions. Did\n you convert your file to the new format?</li>\n \n-    <li>The FOP distribution contains a schema for configuration\n+            <li>The FOP distribution contains a schema for configuration\n files, at src/foschema/fop-configuration.xsd. Did you validate your\n configuration file against it? Add the following schema location to\n the <code>schema</code> element:\n@@ -323,13 +382,13 @@ and run the configuration file through a validating schema\n parser. Note that the schema cannot detect all errors, and that it is\n stricter about the order of some elements than FOP itself is.</li>\n \n-    <li>Run FOP in debug mode (command line option\n+            <li>Run FOP in debug mode (command line option\n <code>-d</code>). This makes FOP report which configuration\n information it finds. Check if FOP finds what you expect.</li>\n \n-    </ul>\n+          </ul>\n \n-  </section>\n+        </section>\n   </body>\n </document>\n ",
                "previous_filename": "src/documentation/content/xdocs/0.93/configuration.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/configuration.xml",
                "sha": "e82a6e862c9557b9630c87083c8bcca54271a307",
                "status": "renamed"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/embedding.xml",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/embedding.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/0.95/embedding.xml",
                "patch": "@@ -166,7 +166,7 @@ try {\n       <title>Logging</title>\n       <p>\n         Logging is now a little different than it was in FOP 0.20.5. We've switched from\n-        Avalon Logging to <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a>.\n+        Avalon Logging to <a href=\"ext:commons-logging\">Jakarta Commons Logging</a>.\n         While with Avalon Logging the loggers were directly given to FOP, FOP now retrieves\n         its logger(s) through a statically available LogFactory. This is similar to the\n         general pattern that you use when you work with Apache Log4J directly, for example.\n@@ -187,10 +187,10 @@ try {\n         which documents what we're going to build.\n       </note>\n       <p>\n-        By default, <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a> uses\n+        By default, <a href=\"ext:commons-logging\">Jakarta Commons Logging</a> uses\n         JDK logging (available in JDKs 1.4 or higher) as its backend. You can configure Commons\n         Logging to use an alternative backend, for example Log4J. Please consult the\n-        <a href=\"ext:jakarta/commons/logging\">documentation for Jakarta Commons Logging</a> on\n+        <a href=\"ext:commons-logging\">documentation for Jakarta Commons Logging</a> on\n         how to configure alternative backends.\n       </p>\n     </section>\n@@ -291,6 +291,13 @@ try {\n           </p>\n           <source>fopFactory.setFontBaseURL(\"file:///C:/Temp/fonts\");</source>\n         </li>\n+        <li>\n+          <p>\n+            The <strong>hyphenation base URL</strong> to use when resolving relative URLs for \n+            hyphenation patterns. Example:\n+          </p>\n+          <source>fopFactory.setHyphenBaseURL(\"file:///C:/Temp/hyph\");</source>\n+        </li>\n         <li>\n           <p>\n             Disable <strong>strict validation</strong>. When disabled FOP is less strict about the rules ",
                "previous_filename": "src/documentation/content/xdocs/0.93/embedding.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/embedding.xml",
                "sha": "b2c802db7c88941a8f1e3bd4891f4d7b8ae11be3",
                "status": "renamed"
            },
            {
                "additions": 234,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/extensions.xml",
                "changes": 234,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/extensions.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/extensions.xml",
                "patch": "@@ -0,0 +1,234 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Standard FOP Extensions</title>\n+    <version>$Revision$</version>\n+  </header>\n+  <body>\n+    <p>\n+      By \"extension\", we mean any data that can be placed in the input XML document that \n+      is not addressed by the XSL-FO standard.\n+      By having a mechanism for supporting extensions, FOP is able to add features that \n+      are not covered in the specification.\n+    </p>\n+    <p>\n+      The extensions documented here are included with FOP, and are automatically available \n+      to you. If you wish to add an extension of your own to FOP, please see the \n+      <a href=\"../dev/extensions.html\">Developers' Extension Page</a>.\n+    </p>\n+    <note>All extensions require the correct use of an appropriate namespace in your input document.</note>\n+    <section id=\"svg\">\n+      <title>SVG</title>\n+      <p>\n+        Please see the <a href=\"graphics.html#svg\">SVG documentation</a> for more details.\n+      </p>\n+    </section>\n+    <section id=\"fo-extensions\">\n+      <title>FO Extensions</title>\n+      <section id=\"fox-namespace\">\n+        <title>Namespace</title>\n+        <p>\n+          By convention, FO extensions in FOP use the \"fox\" namespace prefix.\n+          To use any of the FO extensions, add a namespace entry for \n+          <code>http://xml.apache.org/fop/extensions</code> to the root element:\n+        </p>\n+        <source><![CDATA[<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+               xmlns:fox=\"http://xmlgraphics.apache.org/fop/extensions\">]]></source>\n+      </section>\n+      <section id=\"bookmarks\">\n+        <title>PDF Bookmarks</title>\n+        <p>\n+          In previous versions of Apache FOP there was a <code>fox:outline</code> element\n+          which was used to create outlines in PDF files. The redesigned code makes use\n+          of the new <a href=\"http://www.w3.org/TR/xsl11/#fo_bookmark-tree\">bookmark feature defined in the latest XSL 1.1 working draft</a>.\n+        </p>\n+      </section>\n+      <section id=\"named-destinations\">\n+        <title>Anchors or Named Destinations</title>\n+        <p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n+These are useful as fragment identifiers, e.g. \"http://server/document.pdf#anchor-name\".\n+fox:destination elements can be placed almost anywhere in the fo document, including a child of\n+root, a block-level element, or an inline-level element.\n+For the destination to actually work, it must correspond to an \"id\" attribute on some fo element\n+within the document. In other words, the \"id\" attribute actually creates the \"view\" within the\n+PDF document. The fox:destination simply gives that view an independent name.\n+</p>\n+        <source><![CDATA[<fox:destination internal-destination=\"table-of-contents\"/>\n+...\n+<fo:block id=\"table-of-contents\">Table of Contents</fo:block>]]></source>\n+        <warning>It is possible that in some future release of FOP, <em>all </em>elements with\n+\"id\" attributes will generate named-destinations, which will eliminate the need for\n+fox:destination.</warning>\n+      </section>\n+      <section id=\"table-continue-label\">\n+        <title>Table Continuation Label</title>\n+        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n+        <!--p>Use the fox:continued-label element to create content in table-header and\n+table-footer cells that will appear only on pages after the first page that the table\n+appears. fox:continued-label is itself inline content, and is a container of fo:inline\n+content. This content will be laid out only if the table does not fit on a single page and flows\n+to following pages. Here is an example of FO code creating such a table-header:</p>\n+<source><![CDATA[<fo:table-header>\n+  <fo:table-row>\n+    <fo:table-cell>\n+      <fo:block>Header column 1 with continued label\n+          <fox:continued-label><fo:inline> (cont.)</fo:inline></fox:continued-label>\n+      </fo:block>\n+    </fo:table-cell>\n+    <fo:table-cell>\n+      <fo:block>Header column 2 with no continued label</fo:block>\n+    </fo:table-cell>\n+  </fo:table-row>\n+</fo:table-header>]]></source-->\n+      </section>\n+      <section id=\"widow-orphan-content-limit\">\n+        <title>fox:orphan-content-limit and fox:widow-content-limit</title>\n+        <p>\n+          The two proprietary extension properties, fox:orphan-content-limit and\n+          fox:widow-content-limit, are used to improve the layout of list-blocks and tables.\n+          If you have a table with many entries, you don't want a single row to be left over\n+          on a page. You will want to make sure that at least two or three lines are kept\n+          together. The properties take an absolute length which specifies the area at the\n+          beginning (fox:widow-content-limit) or at the end (fox:orphan-content-limit) of a\n+          table or list-block. The properties are inherited and only have an effect on fo:table\n+          and fo:list-block. An example: fox:widow-content-limit=\"3 * 1.2em\" would make sure\n+          the you'll have at least three lines (assuming line-height=\"1.2\") together on a table\n+          or list-block.\n+        </p>\n+      </section>\n+      <section id=\"external-document\">\n+        <title>fox:external-document</title>\n+        <note>\n+          This feature is incomplete. Support for multi-page documents will be added shortly.\n+          At the moment, only single-page images will work. And this will not work with RTF output.\n+        </note>\n+        <p>\n+          This is a proprietary extension element which allows to add whole images as pages to\n+          an FO document. For example, if you have a scanned document or a fax as multi-page TIFF\n+          file, you can append or insert this document using the <code>fox:external-document</code>\n+          element. Each page of the external document will create one full page in the target\n+          format.\n+        </p>\n+        <p>\n+          The <code>fox:external-document</code> element is structurally a peer to\n+          <code>fo:page-sequence</code>, so wherever you can put an <code>fo:page-sequence</code>\n+          you could also place a <code>fox:external-document</code>.\n+          Therefore, the specified contents for <code>fo:root</code> change to: \n+        </p>\n+        <p>\n+          <code>\n+            (layout-master-set, declarations?, bookmark-tree?, (page-sequence|page-sequence-wrapper|fox:external-document|fox:destination)+)\n+          </code>\n+        </p>\n+        <section>\n+          <title>Specification</title>\n+          <p>\n+            The <code>fox:external-document</code> extension formatting object is used to specify\n+            how to create a (sub-)sequence of pages within a document. The content of these pages\n+            comes from the individual subimages/pages of an image or paged document (for example:\n+            multi-page TIFF in the form of faxes or scanned documents, or PDF files). The\n+            formatting object creates the necessary areas to display one image per page.\n+          </p>\n+          <p>\n+            In terms of page numbers, the behaviour is the same as for\n+            <code>fo:page-sequence</code>. The placement of the image inside the page is similar\n+            to that of <code>fo:external-graphic</code> or <code>fo:instream-foreign-object</code>,\n+            i.e. the viewport (and therefore the page size) is defined by either the intrinsic\n+            size of the image or by the size properties that apply to this formatting object.\n+          </p>\n+          <p>Content: EMPTY</p>\n+          <p>The following properties apply to this formatting object:</p>\n+          <ul>\n+            <li>(Common Accessibility Properties) (not implemented, yet)</li>\n+            <li>(Common Aural Properties) (not implemented, yet)</li>\n+            <li>block-progression-dimension</li>\n+            <li>content-height</li>\n+            <li>content-type</li>\n+            <li>content-width</li>\n+            <li>display-align</li>\n+            <li>height</li>\n+            <li>id</li>\n+            <li>inline-progression-dimension</li>\n+            <li>overflow</li>\n+            <li>pages: &lt;page-set&gt; (see below) (not implemented, yet)</li>\n+            <li>reference-orientation</li>\n+            <li>scaling</li>\n+            <li>scaling-method</li>\n+            <li>src</li>\n+            <li>text-align</li>\n+            <li>width</li>\n+          </ul>\n+          <p>\n+            Datatype \"page-set\": Value: auto | &lt;integer-range&gt;,\n+            Default: \"auto\" which means all pages/subimages of the document.\n+            &lt;integer-range&gt; allows values such as \"7\" or \"1-3\"\n+          </p>\n+          <note>\n+            <code>fox:external-document</code> is not suitable for concatenating FO documents.\n+            For this, XInclude is recommended.\n+          </note>\n+        </section>\n+      </section>\n+      <section id=\"transform\">\n+        <title>Free-form Transformation for fo:block-container</title>\n+        <p>\n+          For <code>fo:block-container</code> elements whose <code>absolute-position</code> set to\n+          \"absolute\" or \"fixed\" you can use the extension attribute <code>fox:transform</code>\n+          to apply a free-form transformation to the whole block-container. The content of the\n+          <code>fox:transform</code> attribute is the same as for\n+          <a href=\"http://www.w3.org/TR/SVG/coords.html#TransformAttribute\">SVG's transform attribute</a>.\n+          The transformation specified here is performed in addition to other implicit\n+          transformations of the block-container (resulting from top, left and other properties)\n+          and after them.\n+        </p>\n+        <p>\n+          Examples: <code>fox:transform=\"rotate(45)\"</code> would rotate the block-container\n+          by 45 degrees clock-wise around its upper-left corner.\n+          <code>fox:transform=\"translate(10000,0)\"</code> would move the block-container to the\n+          right by 10 points (=10000 millipoints, FOP uses millipoints internally!).\n+        </p>\n+        <note>\n+          This extension attribute doesn't work for all output formats! It's currently only\n+          supported for PDF, PS and Java2D-based renderers.\n+        </note>\n+      </section>\n+      <section id=\"color-functions\">\n+        <title>Color functions</title>\n+        <p>\n+          XSL-FO supports specifying color using the rgb(), rgb-icc() and system-color() functions.\n+          Apache FOP provides additional color functions for special use cases. Please note that\n+          using these functions compromises the interoperability of an FO document.\n+        </p>\n+        <section id=\"color-function-cmyk\">\n+          <title>cmyk()</title>\n+          <p><code>color cmyk(numeric, numeric, numeric, numeric)</code></p>\n+          <p>\n+            This function will construct a color in device-specific CMYK color space. The numbers\n+            must be between 0.0 and 1.0. For output formats that don't support device-specific\n+            color space the CMYK value is converted to an sRGB value.\n+          </p>\n+        </section>\n+      </section>\n+      \n+    </section>\n+  </body>\n+</document>\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/extensions.xml",
                "sha": "483866e61d7895f12fa7ac485b0c76f90c047425",
                "status": "added"
            },
            {
                "additions": 410,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/fonts.xml",
                "changes": 410,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/fonts.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/fonts.xml",
                "patch": "@@ -0,0 +1,410 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Apache FOP: Fonts</title>\n+    <version>$Revision$</version>\n+    <authors>\n+      <person name=\"Jeremias M\u00e4rki\" email=\"\"/>\n+      <person name=\"Tore Engvig\" email=\"\"/>\n+      <person name=\"Adrian Cumiskey\" email=\"\"/>\n+      <person name=\"Max Berger\" email=\"\"/>\n+    </authors>\n+  </header>\n+  <body>\n+    <section id=\"intro\">\n+      <title>Summary</title>\n+      <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n+      <table>\n+        <tr>\n+          <th>Renderer</th>\n+          <th>Base-14</th>\n+          <th>AWT/OS</th>\n+          <th>Custom</th>\n+          <th>Custom Embedding</th>\n+        </tr>\n+        <tr>\n+          <td>PDF</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>PostScript</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>PCL</td>\n+          <td>yes (modified)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>no</td>\n+        </tr>\n+        <tr>\n+          <td>AFP</td>\n+          <td>no</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+        </tr>\n+        <tr>\n+          <td>Java2D/AWT/Bitmap</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+          <td>n/a (display only)</td>\n+        </tr>\n+        <tr>\n+          <td>Print</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>yes</td>\n+          <td>controlled by OS printer driver</td>\n+        </tr>\n+        <tr>\n+          <td>RTF</td>\n+          <td>n/a (font metrics not needed)</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+        </tr>\n+        <tr>\n+          <td>TXT</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+        </tr>\n+        <!--tr> NOT AVAILABLE\n+          <td>MIF</td>\n+          <td>n/a (font metrics not needed)</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+          <td>n/a</td>\n+        </tr-->\n+        <!--tr> NOT AVAILABLE\n+          <td>SVG</td>\n+          <td>if available from OS</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>no</td>\n+        </tr-->\n+        <tr>\n+          <td>XML</td>\n+          <td>yes</td>\n+          <td>no</td>\n+          <td>yes</td>\n+          <td>n/a</td>\n+        </tr>\n+      </table>\n+    </section>\n+    <section>\n+      <title>Base-14 Fonts</title>\n+      <p>\n+        The Adobe PostScript and PDF Specification specify a set of 14 fonts that must be\n+        available to every PostScript interpreter and PDF reader:\n+        Helvetica (normal, bold, italic, bold italic),\n+        Times (normal, bold, italic, bold italic),\n+        Courier (normal, bold, italic, bold italic),\n+        Symbol and ZapfDingbats.\n+      </p>\n+      <p>\n+        Please note that recent versions of Adobe Acrobat Reader replace\n+        \"Helvetica\" with \"Arial\" and \"Times\" with \"Times New Roman\" internally.\n+        GhostScript replaces \"Helvetica\" with \"Nimbus Sans L\" and \"Times\" with \n+        \"Nimbus Roman No9 L\". Other document viewers may do similar font\n+        substitutions. If you need to make sure that there are no such\n+        substitutions, you need to specify an explicit font and embed it in\n+        the target document.\n+      </p>\n+    </section>\n+    <section>\n+      <title>Missing Fonts</title>\n+      <p>\n+        When FOP does not have a specific font at its disposal (because it's \n+        not installed in the operating system or set up in FOP's configuration),\n+        the font is replaced with \"any\". \"any\" is internally mapped to the\n+        Base-14 font \"Times\" (see above).\n+      </p>\n+    </section>\n+    <section id=\"awt\">\n+      <title>Java2D/AWT/Operating System Fonts</title>\n+      <p>\n+        The Java2D family of renderers (Java2D, AWT, Print, TIFF, PNG), use the\n+        Java AWT subsystem for font metric information. Through operating system\n+        registration, the AWT subsystem knows what fonts are available on the system,\n+        and the font metrics for each one.\n+      </p>\n+      <p>\n+        When working with one of these output formats and you're missing a font, just\n+        install it in your operating system and they should be available for these\n+        renderers. Please note that this is not true for other output formats such as\n+        PDF or PostScript.\n+      </p>\n+    </section>\n+    \n+    <section id=\"custom\">\n+      <title>Custom Fonts</title>\n+      <p>\n+        Support for custom fonts is highly output format dependent (see above table).\n+        This section shows how to add Type 1 and TrueType fonts to the PDF, PostScript and\n+        Java2D-based renderers. Other renderers (like AFP) support other font formats. Details\n+        in this case can be found on the page about <a href=\"output.html\">output formats</a>.\n+      </p>\n+      <p>\n+        Prior to FOP version 0.94, it was always necessary to create an XML font metrics file\n+        if you wanted to add a custom font. This unconvenient step has been removed and in\n+        addition to that, FOP supports auto-registration of fonts, i.e. FOP can find fonts\n+        installed in your operating system or can scan user-specified directories for fonts.\n+        Font registration via XML font metrics file is still supported and is still necessary\n+        if you want to use a TrueType Collection (*.ttc). Direct support for TrueType\n+        collections may be added later. Furthermore, the XML font metrics files are still\n+        required if you don't want to embed, but only reference a font.\n+      </p>\n+      <p>\n+        Basic information about fonts can be found at:\n+      </p>\n+      <ul>\n+        <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n+        <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a></li>\n+      </ul>\n+    </section>\n+    \n+    <section id=\"basics\">\n+      <title>Basic font configuration</title>\n+      <p>\n+        If you want FOP to use custom fonts, you need to tell it where to find them. This\n+        is done in the configuration file and once per renderer (because each output format\n+        is a little different). In the basic form, you can either tell FOP to find your\n+        operating system fonts or you can specify directories that it will search for\n+        support fonts. These fonts will then automatically be registered.\n+      </p>\n+      <source><![CDATA[\n+<fonts>\n+  <!-- register all the fonts found in a directory -->\n+  <directory>C:\\MyFonts1</directory>\n+  \n+  <!-- register all the fonts found in a directory\n+       and all of its sub directories (use with care) -->\n+  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+  <!-- automatically detect operating system installed fonts -->\n+  <auto-detect/>  \n+</fonts>]]></source>\n+      <note>\n+        Review the documentation for <a href=\"configuration.html\">FOP Configuration</a>\n+        for instructions on making the FOP configuration available to FOP when it runs.\n+        Otherwise, FOP has no way of finding your custom font information. It is currently\n+        not possible to easily configure fonts from Java code.\n+      </note>\n+    </section>\n+    \n+    <section id=\"advanced\">\n+      <title>Advanced font configuration</title>\n+      <p>\n+        The instructions found above should be sufficient for most users. Below are some\n+        additional instructions in case the basic font configuration doesn't lead to\n+        the desired results.\n+      </p>\n+      <section id=\"type1-metrics\">\n+        <title>Type 1 Font Metrics</title>\n+        <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n+          To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n+        <p>Windows:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>Unix:</p>\n+        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>PFMReader [options]:</p>\n+        <ul>\n+          <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n+            .pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n+            chosen. This may be useful in some cases to ensure that applications using the output document\n+            (Acrobat Reader for example) use the embedded font instead of a local font with the same\n+            name.</li>\n+        </ul>\n+        <note>The classpath in the above example has been simplified for readability.\n+          You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n+          xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n+        <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n+          FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n+          The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n+          The constructed values however appear to have no visible influence.</note>\n+      </section>\n+      <section id=\"truetype-metrics\">\n+        <title>TrueType Font Metrics</title>\n+        <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n+          Use it in a similar manner to PFMReader.\n+          For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.TTFReader [options]\n+          C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n+        <p>TTFReader [options]:</p>\n+        <ul>\n+          <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n+            INFO).</li>\n+          <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n+          <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n+            TrueType Collection (.ttc file) you must specify which font from the collection you will read\n+            metrics from.\n+            If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n+          <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n+            Without this option, a CID-keyed font metrics file is created.\n+            The table below summarizes the differences between these two encoding options as currently\n+            used within FOP.\n+            Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n+        </ul>\n+        <table id=\"ttf-encoding\">\n+          <tr>\n+            <th>Issue</th>\n+            <th>WinAnsi</th>\n+            <th>CID-keyed</th>\n+          </tr>\n+          <tr>\n+            <td>Usable Character Set</td>\n+            <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n+            <td>Limited only by the characters in the font itself.</td>\n+          </tr>\n+          <tr>\n+            <td>Embedding the Font</td>\n+            <td>Optional.</td>\n+            <td>Mandatory. Not embedding the font produces invalid PDF documents.</td>\n+          </tr>\n+        </table>\n+        <warning>\n+          You may experience failures with certain TrueType fonts, especially if they don't contain \n+          the so-called Unicode \"cmap\" table. TTFReader can currently not deal with font like this.\n+        </warning>\n+      </section>\n+      <section id=\"truetype-collections-metrics\">\n+        <title>TrueType Collections Font Metrics</title>\n+        <p>TrueType collections (.ttc files) contain more than one font.\n+          To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n+        <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n+          It will display all of the font names and exit with an Exception.</p>\n+        <p>Here is an example of generating a metrics file for a .ttc file:</p>\n+        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n+          org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n+          msmincho.ttc msminch.xml</source>\n+      </section>\n+      <section id=\"register\">\n+        <title>Register Fonts with FOP</title>\n+        <p>You must tell FOP how to find and use the font metrics files by registering them in the <a href=\"configuration.html\">FOP Configuration</a>. Add entries for your custom fonts, regardless of font type, to the configuration file in a manner similar to the following:</p>\n+        <source><![CDATA[\n+<fonts>\n+  <!-- register a particular font -->\n+  <font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\"\n+      embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n+     <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n+  </font>\n+  \n+  <!-- register all the fonts found in a directory -->\n+  <directory>C:\\MyFonts1</directory>\n+  \n+  <!-- register all the fonts found in a directory\n+       and all of its sub directories (use with care) -->\n+  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+  <!-- automatically detect operating system installed fonts -->\n+  <auto-detect/>  \n+</fonts>]]></source>\n+        <ul>\n+          <li>\n+            URLs are used to access the font metric and font files.\n+            Relative URLs are resolved relative to the font-base property (or base) if available.\n+            See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n+          </li>\n+          <li>The \"metrics-url\" attribute is generally not necessary except if you run into problems with certain fonts.</li>\n+          <li>Either an \"embed-url\" or a \"metrics-url\" must be specified for font tag configurations.</li>\n+          <li>The font \"kerning\" attribute is optional. Default is \"true\".</li>\n+          <li>If embedding is off (i.e. embed-url is not set), the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n+          <li>When setting the \"embed-url\" attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n+          <li>The fonts \"directory\" tag can be used to register fonts contained within a single or list of directory paths.  The \"recursive\" attribute can be specified to recursively add fonts from all sub directories.</li>\n+          <li>The fonts \"auto-detect\" tag can be used to automatically register fonts that are found to be installed on the native operating system.</li>\n+          <li>Fonts registered with \"font\" tag configurations override fonts found by means of \"directory\" tag definitions.</li>\n+          <li>Fonts found as a result of a \"directory\" tag configuration override fonts found as a result of the \"auto-detect\" tag being specified.</li>\n+          <li>\n+            If relative URLs are specified, they are evaluated relative to the value of the \n+            \"font-base\" setting. If there is no \"font-base\" setting, the fonts are evaluated \n+            relative to the base directory.\n+          </li>\n+        </ul>\n+        <!--note>Cocoon users will need to setup the config, see FOPSerializer for more information.</note-->\n+      </section>\n+      <section id=\"autodetect\">\n+        <title>Auto-Detect and auto-embedd feature</title>\n+        <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n+        <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n+        <source>Manifest-Version: 1.0\n+          \n+          Name: font/myfont.ttf\n+          Content-Type: application/x-font</source>\n+        <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n+      </section>\n+      <section id=\"embedding\">\n+        <title>Embedding</title>\n+        <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n+        <note>The font is simply embedded into the PDF file, it is not converted.</note>\n+        <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n+          If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n+        <warning>\n+          Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n+          PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n+          the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n+        </warning>\n+        <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n+          This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n+        <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n+        <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the\n+          original font, containing only the glyphs used, is embedded in the output document.</p>\n+      </section>\n+      <!-- The following section should no longer be required\n+      <section id=\"embedding-base14\">\n+        <title>Explicitly embedding the base 14 fonts</title>\n+        <p>\n+          There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n+          can normally be considered available on the target platform (viewer, printer). One of these cases is\n+          <a href=\"pdfa.html\">PDF/A</a> which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n+          Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n+          problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n+          the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n+          PFMReader application writes \"UnknownEncoding\" to the generated XML file. In order to embed \"Symbol\"\n+          and \"ZapfDingbats\" you have to manually change the XML font metrics file and specify \"SymbolEncoding\"\n+          or \"ZapfdingbatsEncoding\" encoding respectively as the value for the \"encoding\" element.\n+        </p>\n+        <p>Example:</p>\n+        <source><![CDATA[\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<font-metrics type=\"TYPE1\">\n+  <font-name>Symbol</font-name>\n+  <embed/>\n+  <encoding>SymbolEncoding</encoding>\n+  <cap-height>673</cap-height>\n+  <x-height>766</x-height>\n+  [..]]]></source>\n+      </section-->\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/fonts.xml",
                "sha": "423eaad11b229fcb9fc5a3b13f36d9fd368663d9",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "patch": "@@ -17,11 +17,6 @@\n -->\n <!-- $Id$ -->\n <disabled-testcases>\n-  <testcase>\n-    <name>demo test failure</name>\n-    <file>demo-test-failure.fo</file>\n-    <description></description>\n-  </testcase>\n   <testcase>\n     <name>Markers and core function evaluation</name>\n     <file>from-table-column_marker.fo</file>",
                "previous_filename": "src/documentation/content/xdocs/0.93/fotree/disabled-testcases.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/fotree/disabled-testcases.xml",
                "sha": "f6f78dcf769046bdf4d3f6a02889e0a1a376009e",
                "status": "renamed"
            },
            {
                "additions": 563,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/graphics.xml",
                "changes": 563,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/graphics.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/graphics.xml",
                "patch": "@@ -0,0 +1,563 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Apache FOP: Graphics Formats</title>\n+    <version>$Revision$</version>\n+  </header>\n+  <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        After the Apache FOP 0.94 release, the image handling subsystem has been rewritten in\n+        order to improve the range of supported images and image subtypes, to lower the\n+        overall memory consumption when handling images, to produce smaller output files and to\n+        increase the performance in certain areas. Of course, this causes a few changes most of\n+        which the user will probably not notice. The most important changes are:\n+      </p>\n+      <ul>\n+        <li>\n+          The image libraries Jimi and JAI are no longer supported. Instead, Apache FOP uses the\n+          Image I/O API that was introduced with Java 1.4 for all bitmap codecs.\n+        </li>\n+        <li>\n+          Some bitmap images are no longer converted to a standardized 24 bit RGB image but are\n+          instead handled in their native format.\n+        </li>\n+        <li>\n+          A plug-in mechanism offers a possibility to add support for new formats without changing\n+          the FOP's source code.\n+        </li>\n+      </ul>\n+      <p>\n+        The actual <a href=\"http://xmlgraphics.apache.org/commons/image-loader.html\">image loading framework</a>\n+        no longer resides in Apache FOP, but was instead placed in\n+        <a href=\"ext:xmlgraphics.apache.org/commons/\">XML Graphics Commons</a>.\n+      </p>\n+    </section>\n+    <section id=\"support-overview\">\n+      <title>Overview of Graphics Support</title>\n+      <p>\n+        The table below summarizes the <em>theoretical</em> support for graphical formats\n+        within FOP. In other words, within the constraints of the limitations listed here,\n+        these formats <em>should</em> work. However, many of them have not been tested,\n+        and there may be limitations that have not yet been discovered or documented.\n+        The packages needed to support some formats are not included in the FOP distribution\n+        and must be installed separately. Follow the links in the \"Support Through\" columns\n+        for more details.\n+      </p>\n+      <table>\n+        <tr>\n+          <th rowspan=\"2\">Format</th>\n+          <th rowspan=\"2\">Type</th>\n+          <th colspan=\"3\">Support Through</th>\n+        </tr>\n+        <tr>\n+          <th><a href=\"#native\">Apache FOP (native)</a></th>\n+          <th><a href=\"#batik\">Apache Batik</a></th>\n+          <th><a href=\"#imageio\">Image I/O</a></th>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X [1]</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n+          <td>metafile (both bitmap and vector), most frequently used for vector drawings</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td>GIF (Graphics Interchange Format)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n+          <td>bitmap</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n+          <td>bitmap</td>\n+          <td></td>\n+          <td></td>\n+          <td>X</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td></td>\n+          <td>X</td>\n+          <td></td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n+          <td>bitmap</td>\n+          <td>(X)</td>\n+          <td></td>\n+          <td>X [1]</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td></td>\n+          <td>(X)</td>\n+          <td></td>\n+        </tr>\n+      </table>\n+      <p>\n+        Legend:\n+      </p>\n+      <ul>\n+        <li>\"(X)\" means restricted support. Please see the details below.</li>\n+        <li>\n+          [1]: Requires the presence of <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a>\n+          (or an equivalent Image I/O compatible codec) in the classpath. JAI Image I/O Tools also\n+          adds support for JPEG 2000, WBMP, RAW and PNM. Other Image I/O codecs may provide\n+          support for additional formats.\n+        </li>\n+      </ul>\n+      <note>\n+        <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a> is not the same as the\n+        <a href=\"http://java.sun.com/javase/technologies/desktop/media/jai/\">JAI library</a>! The\n+        former simply exposes JAI's codecs using the Image&nbsp;I/O API but does not include all\n+        the image manipulation functionality.\n+      </note>\n+      <section id=\"format-map\">\n+        <title>Map of supported image formats by output format</title>\n+        <p>\n+          Not all image formats are supported for all output formats! For example, while you can\n+          use EPS (Encapsulated PostScript) files when you generate PostScript output, this format\n+          will not be supported by any other output format. Here's an overview of which image\n+          formats are supported by which output format:\n+        </p>\n+        <table>\n+          <tr>\n+            <th>Image Format</th>\n+            <th>PDF</th>\n+            <th>PostScript</th>\n+            <th>Java2D, PNG, TIFF, AWT</th>\n+            <th>PCL</th>\n+            <th>AFP</th>\n+            <th>RTF</th>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td>X [1]</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n+            <td></td>\n+            <td>X [1]</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+          </tr>\n+          <tr>\n+            <td>GIF (Graphics Interchange Format)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n+            <td>X [1]</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n+            <td>X [2]</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+        </table>\n+        <p>\n+          Legend:\n+        </p>\n+        <ul>\n+          <li>\n+            [1]: Supported without the need to decode the image.\n+          </li>\n+          <li>\n+            [2]: Supported without the need to decode the image, but only for certain subtypes.\n+          </li>\n+        </ul>\n+      </section>\n+    </section>\n+    <section id=\"packages\">\n+      <title>Graphics Packages</title>\n+      <section id=\"native\">\n+        <title>XML Graphics Commons Native</title>\n+        <p>\n+          <a href=\"ext:xmlgraphics.apache.org/commons\">XML Graphics Commons</a> supports a number\n+          of graphic file formats natively as basic functionality: all bitmap formats for which\n+          there are Image I/O codecs available (JPEG, PNG, GIF, TIFF, etc.), EPS and EMF.\n+        </p>\n+      </section>\n+      <section id=\"fop-native\">\n+        <title>FOP Native</title>\n+        <p>\n+          FOP has no native image plug-ins for the image loading framework of its own but currently\n+          hosts the Batik-dependent SVG and WMF plug-ins until they can be moved to\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n+        </p>\n+      </section>\n+      <section id=\"batik\">\n+        <title>Apache Batik</title>\n+        <p>\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a> will later receive the\n+          SVG and WMF plug-ins for the image loading framework that are currently hosted inside\n+          FOP.\n+        </p>\n+        <p>\n+          Current FOP distributions include a distribution of the\n+          <a class=\"fork\" href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n+          Because Batik's API changes frequently, it is highly recommended that you use the\n+          version that ships with FOP, at least when running FOP.\n+        </p>\n+        <warning>Batik must be run in a graphical environment.</warning>\n+        <p>\n+          Batik must be run in a graphical environment.\n+          It uses AWT classes for rendering SVG, which in turn require an X server on Unixish\n+          systems. If you run a server without X, or if you can't connect to the X server due to\n+          security restrictions or policies (a so-called \"headless\" environment), SVG rendering\n+          will fail.\n+        </p>\n+        <p>Here are some workarounds:</p>\n+        <ul>\n+          <li>\n+            Start Java with the <code>-Djava.awt.headless=true</code> command line option.\n+          </li>\n+          <li>\n+            Install an X server which provides an in-memory framebuffer without actually using a\n+            screen device or any display hardware. One example is Xvfb.\n+          </li>\n+          <li>\n+            Install a toolkit which emulates AWT without the need for an underlying X server. One\n+            example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free\n+            and comes with detailed installation instructions.\n+          </li>\n+        </ul>\n+      </section>\n+      <section id=\"imageio\">\n+        <title>Image I/O</title>\n+        <p>\n+          The image loading framework in <a href=\"ext:xmlgraphics.apache.org/commons\">XML Graphics Commons</a>\n+          provides a wrapper to load images through the \n+          <a class=\"fork\" href=\"http://java.sun.com/j2se/1.4.2/docs/guide/imageio/index.html\">JDK's Image I/O API</a> (JSR 015).\n+          Image I/O allows to dynamically add additional image codecs. An example of such an\n+          add-on library are the\n+          <a class=\"fork\" href=\"http://java.sun.com/products/java-media/jai/\">JAI Image I/O Tools</a>\n+          available from Sun.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"image-formats\">\n+      <title>Details on image formats</title>\n+      <section id=\"bmp\">\n+        <title>BMP</title>\n+        <p>\n+          BMP images are supported through an Image I/O codec. There may be limitations of the\n+          codec which are outside the control of Apache FOP.\n+        </p>\n+      </section>\n+      <section id=\"emf\">\n+        <title>EMF</title>\n+        <p>\n+          Windows Enhanced Metafiles (EMF) are only supported in RTF output where they are\n+          embedded without decoding.\n+        </p>\n+      </section>\n+      <section id=\"eps\">\n+        <title>EPS</title>\n+        <p>Apache FOP allows to use EPS files when generating PostScript output only.</p>\n+        <p>\n+          Other output targets can't be supported at the moment because\n+          FOP lacks a PostScript interpreter. Furthermore, FOP is currently not able\n+          to parse the preview bitmaps sometimes contained in EPS files.\n+        </p>\n+      </section>\n+      <section id=\"gif\">\n+        <title>GIF</title>\n+        <p>\n+          GIF images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n+        </p>\n+      </section>\n+      <section id=\"jpeg\">\n+        <title>JPEG</title>\n+        <p>\n+          FOP native support (i.e. the handling of undecoded images) of JPEG does not include all\n+          variants, especially those containing unusual color lookup tables and color profiles.\n+          If you have trouble with a JPEG image in FOP, try opening it with an image processing \n+          program (such as Photoshop or Gimp) and then saving it. Specifying 24-bit color output \n+          may also help. For the PDF and PostScript renderers most JPEG images can be passed \n+          through without decompression. User reports indicate that grayscale, RGB, and \n+          CMYK color spaces are all rendered properly. However, for other output formats, the\n+          JPEG images have to be decompressed. Tests have shown that there are some limitation\n+          in some Image&nbsp;I/O codecs concerning images in the CMYK color space. Work-arounds are\n+          in place but may not always work as expected.\n+        </p>\n+      </section>\n+      <section id=\"png\">\n+        <title>PNG</title>\n+        <p>\n+          PNG images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n+        </p>\n+      </section>\n+      <section id=\"svg\">\n+        <title>SVG</title>\n+        <section id=\"svg-intro\">\n+          <title>Introduction</title>\n+          <p>FOP uses <a href=\"#batik\"> Apache Batik</a> for SVG support.\n+            This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n+            file referenced with <code>fo:external-graphic</code>.</p>\n+          <note>   \n+            Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n+            documents into PDF.  For more information please see the\n+            <a href=\"http://xmlgraphics.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n+            on the Batik site.\n+          </note>\n+        </section>\n+        <section id=\"svg-pdf-graphics\">\n+          <title>Placing SVG Graphics into PDF</title>\n+          <p>\n+            The SVG is rendered into PDF by using PDF commands to draw and fill\n+            lines and curves. This means that the graphical objects created with\n+            this remain as vector graphics. The same applies to PostScript output.\n+            For other output formats the SVG graphic may be converted to a bitmap\n+            image.\n+          </p>\n+          <p>\n+            There are a number of SVG things that cannot be converted directly into\n+            PDF. Parts of the graphic such as effects, patterns and images are inserted\n+            into the PDF as a raster graphic. The resolution of these raster images can\n+            be controlled through the \"target resolution\" setting in the \n+            <a href=\"configuration.html\">configuration</a>.</p>\n+          <p>\n+            Currently transparency is limited in PDF so many SVG images that\n+            contain effects or graphics with transparent areas may not be displayed\n+            correctly.\n+          </p>\n+        </section>\n+        <section id=\"svg-pdf-text\">\n+          <title>Placing SVG Text into PDF and PostScript</title>\n+          <p>If possible, Batik will use normal PDF or PostScript text when inserting text. It does\n+            this by checking if the text can be drawn normally and the font is\n+            supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n+            <!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n+            shows how various types and effects with text are handled.\n+            Note that tspan and outlined text are not yet implemented.</p>\n+          <p>\n+            Otherwise, text is converted and drawn as a set of shapes by Batik, using the\n+            stroking text painter. This means that a typical character will\n+            have about 10 curves (each curve consists of at least 20 characters).\n+            This can make the output files large and when it is viewed the\n+            viewer may not normally draw those fine curves very well (In Adobe Acrobat, turning on\n+            \"Smooth Line Art\" in the preferences will fix this). Copy/paste functionality\n+            will not be supported in this case.\n+            If the text is inserted into the output file using the inbuilt text commands\n+            it will use a single character.\n+          </p>\n+          <p>\n+            Note that because SVG text can be rendered as either text or a vector graphic, you \n+            may need to consider settings in your viewer for both. The Acrobat viewer has both \n+            \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images \n+            to be displayed nicely on your screen (see Edit / Preferences / Display).\n+            This setting will not affect the printing of your document, which should be OK in \n+            any case, but will only affect the quality of the screen display.</p>\n+        </section>\n+        <section id=\"svg-scaling\">\n+          <title>Scaling</title>\n+          <p>\n+            Currently, SVG images are rendered with the dimensions specified <em>in the SVG \n+              file</em>, within the viewport specified in the fo:external-graphic element.\n+            For everything to work properly, the two should be equal. The SVG standard leaves \n+            this issue as an implementation detail. Additional scaling options are available\n+            through XSL-FO means.\n+          </p>\n+          <p>\n+            If you use pixels to specify the size of an SVG graphic the \"source resolution\" setting\n+            in the <a href=\"configuration.html\">configuration</a> will be used to determine the\n+            size of a pixel. The use of pixels to specify sizes is discouraged as they may\n+            be interpreted differently in different environments.\n+          </p>\n+        </section>\n+        <section id=\"svg-problems\">\n+          <title>Known Problems</title>\n+          <ul>\n+            <li>\n+              Soft mask transparency is combined with white so that it looks better\n+              on PDF 1.3 viewers but this causes the soft mask to be slightly lighter\n+              or darker on PDF 1.4 viewers.\n+            </li>\n+            <li>\n+              There is some problem with a gradient inside a pattern which may cause a PDF\n+              error when viewed in Acrobat 5.\n+            </li>\n+            <li>\n+              Text is not always handled correctly, it may select the wrong font\n+              especially if characters have multiple fonts in the font list.\n+            </li>\n+            <li>\n+              Uniform transparency for images and other SVG elements that are converted\n+              into a raster graphic are not drawn properly in PDF. The image is opaque.\n+            </li>\n+          </ul>\n+        </section>\n+      </section>\n+      <section id=\"tiff\">\n+        <title>TIFF</title>\n+        <p>\n+          FOP can embed TIFF images without decompression into PDF, PostScript and AFP if they\n+          have either CCITT T.4, CCITT T.6, or JPEG compression. Otherwise, a TIFF-capable\n+          Image&nbsp;I/O codec is necessary for decoding the image.\n+        </p>\n+        <p>\n+          There may be some limitation concerning images in the CMYK color space.\n+        </p>\n+      </section>\n+      <section id=\"wmf\">\n+        <title>WMF</title>\n+        <p>\n+          Windows Metafiles (WMF) are supported through classes in \n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>. At the moment, support\n+          for this format is experimental and may not always work as expected.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"resolution\">\n+      <title>Graphics Resolution</title>\n+      <p>\n+        Some bitmapped image file formats store a dots-per-inch (dpi) or other resolution \n+        values. FOP tries to use this resolution information whenever possible to determine\n+        the image's intrinsic size. This size is used during the layout process when it is not\n+        superseded by an explicit size on fo:external-graphic (content-width and content-height \n+        properties).\n+      </p>\n+      <p>\n+        Please note that not all images contain resolution information. If it's not available\n+        the source resolution set on the FopFactory (or through the user configuration XML) is used.\n+        The default here is 72 dpi.\n+      </p>\n+      <p>\n+        Bitmap images are generally embedded into the output format at their original resolution\n+        (as is). No resampling of the image is performed. Explicit resampling is on our wishlist, \n+        but hasn't been implemented, yet. Bitmaps included in SVG graphics may be resampled to \n+        the resolution specified in the \"target resolution\" setting in the \n+        <a href=\"configuration.html\">configuration</a> if SVG filters are applied. This can be\n+        used as a work-around to resample images in FO documents. \n+      </p>\n+    </section>\n+    <section id=\"page-selection\">\n+      <title>Page selection for multi-page formats</title>\n+      <p>\n+        Some image formats such as TIFF support multiple pages/sub-images per file. You can\n+        select a particular page using a special URI fragment in the form:\n+        &lt;uri&gt;#page=&lt;nr&gt;\n+        (for example: <code>http://localhost/images/myimage.tiff#page=3</code>)\n+      </p>\n+    </section>\n+    <section id=\"caching\">\n+      <title>Image caching</title>\n+      <p>\n+        FOP caches images between runs. There is one cache per FopFactory instance. The URI is \n+        used as a key to identify images which means that when a particular URI appears again, \n+        the image is taken from the cache. If you have a servlet that generates a different \n+        image each time it is called with the same URI you need to use a constantly \n+        changing dummy parameter on the URI to avoid caching.\n+      </p>\n+      <p>\n+        The image cache has been improved considerably in the redesigned code. Therefore, a \n+        resetCache() method like in earlier versions of FOP has become unnecessary. If you \n+        still experience OutOfMemoryErrors, please notify us.\n+      </p>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/graphics.xml",
                "sha": "dce05aa470bb113afdc1785522aa51766187a6b4",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/hyphenation.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/hyphenation.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/hyphenation.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/hyphenation.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/hyphenation.xml",
                "sha": "ed97c68685e4b47be98d678faf93a417562006b7",
                "status": "renamed"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/index.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/index.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 8,
                "filename": "src/documentation/content/xdocs/0.95/index.xml",
                "patch": "@@ -19,22 +19,22 @@\n <!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n <document>\n   <header>\n-    <title>Apache FOP Version 0.93</title>\n-    <version>$Revision: 201586 $</version>\n+    <title>Apache FOP Version 0.95</title>\n+    <version>$Revision$</version>\n   </header>\n   <body>\n     <section id=\"intro\">\n       <title>Introduction</title>\n       <p>\n-        The Apache FOP team is proud to present to you this production quality release. It has taken\n-        over three years to get this far and over two years without a new release from the FOP\n-        project. We're still in the process of adding new features. We welcome any feedback you\n+        The Apache FOP team is proud to present to you this production quality release.\n+        We're still in the process of adding new features. We welcome any feedback you\n         might have and even more, any other form of help to get the project forward.\n       </p>\n       <p>\n-        This fourth release contains many bug fix release and new features compared\n-        to 0.92beta. To see what has changed since the last release, please visit the \n-        <a href=\"changes_0.93.html\">Changes Page</a> and the <a href=\"releaseNotes_0.93.html\">Release Notes</a>.\n+        This sixth release contains many bug fix release and new features compared\n+        to 0.94. To see what has changed since the last release, please visit the \n+        <a href=\"changes_0.95.html\">Changes Page</a> and the\n+        <a href=\"releaseNotes_0.95.html\">Release Notes</a>.\n       </p>\n     </section>\n     <section id=\"upgrading\">",
                "previous_filename": "src/documentation/content/xdocs/0.93/index.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/index.xml",
                "sha": "3bc718b34d1133a97eed3d67dd01307af6a91cde",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/intermediate.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/intermediate.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/intermediate.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/intermediate.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/intermediate.xml",
                "sha": "4744185aa9fbb05ffa1db95419ffd6f2951cbdde",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/known-issues.xml",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/known-issues.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 32,
                "filename": "src/documentation/content/xdocs/0.95/known-issues.xml",
                "patch": "@@ -20,17 +20,9 @@\n       <known-issue>\n         MIF and SVG output support have not been restored, yet.\n       </known-issue>\n-      <known-issue>\n-        Java2D/AWT support has been improved, but some problems remain,\n-        for example with block-containers.\n-      </known-issue>\n       <known-issue>\n         Auto table layout is not implemented, yet.\n       </known-issue>\n-      <known-issue>\n-        The collapsing border model on tables is not implemented, yet. Please \n-        use border-collapse=\"separate\" for now.\n-      </known-issue>\n       <known-issue>\n         Footnotes may overlap with text of the region-body in multi-column \n         documents.\n@@ -56,22 +48,9 @@\n       <known-issue>\n         There are several small problems around white space handling.\n       </known-issue>\n-      <known-issue>\n-        Images currently don't shrink so they fit on a page when they are \n-        too big and shrinking is allowed to happen.\n-      </known-issue>\n-      <known-issue>\n-        inline-container may not work as expected.\n-      </known-issue>\n-      <known-issue>\n-        letter-spacing and word-spacing properties may not work as expected.\n-      </known-issue>\n       <known-issue>\n         leaders with leader-pattern=\"use-content\" may not work as expected.\n       </known-issue>\n-      <known-issue>\n-        keep-with-previous doesn't work inside tables and lists, yet.\n-      </known-issue>\n       <known-issue>\n         If two consecutive pages don't have the same available width, the \n         content currently isn't properly fit into the available space on\n@@ -84,19 +63,8 @@\n         Not all FO elements can be referenced by their \"id\", most notably:\n         table-body, table-header, table-footer and table-row.\n       </known-issue>\n-      <known-issue>\n-        The backgrounds of table-body, table-header, table-footer and \n-        table-column are not painted, yet.\n-      </known-issue>\n-      <known-issue>\n-        Border and padding conditionality are not supported on table-cells, yet.\n-      </known-issue>\n       <known-issue>\n         Column balancing in multi-column documents may not work as expected\n         (<a href=\"http://issues.apache.org/bugzilla/show_bug.cgi?id=36356\">Bugzilla #36356</a>)\n       </known-issue>\n-      <known-issue>\n-        Internal basic-links don't point to the exact location on a page, yet, as they\n-        did in 0.20.5. Currently you land in the upper left corner of the page.\n-      </known-issue>\n </known-issues>",
                "previous_filename": "src/documentation/content/xdocs/0.93/known-issues.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/known-issues.xml",
                "sha": "6e28e3fb788e71c038b3f2086e63e23f383579e5",
                "status": "renamed"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/knownissues_overview.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 9,
                "filename": "src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "patch": "@@ -46,25 +46,23 @@\n   <section>\n     <title>FO Tree</title>\n     <p>\n-      This section lists currently disabled test cases in the test suite for the FO tree tests.\n-      The data for this section comes from \n-      <a href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/test/fotree/disabled-testcases.xml\">test/fotree/disabled-testcases.xml</a>.\n+      This section lists disabled test cases in the test suite for the FO tree tests, at the time\n+      of the release.\n     </p>\n-    <xi:include href=\"cocoon://knownissues-raw-fotree_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-fotree_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n   <section>\n     <title>Layout Engine</title>\n     <p>\n-      This section lists currently disabled test cases in the test suite for the layout engine tests.\n-      The data for this section comes from \n-      <a href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/test/layoutengine/disabled-testcases.xml\">test/layoutengine/disabled-testcases.xml</a>.\n+      This section lists disabled test cases in the test suite for the layout engine tests, at the\n+      time of the release.\n     </p>\n-    <xi:include href=\"cocoon://knownissues-raw-layoutengine_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-layoutengine_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n   <section>\n     <title>Other known issues</title>\n     <p>This section lists other known issues.</p>\n-    <xi:include href=\"cocoon://knownissues-raw-static_0.93.xml#xpointer(/document/body/*)\"/>\n+    <xi:include href=\"cocoon://knownissues-raw-static_0.95.xml#xpointer(/document/body/*)\"/>\n   </section>\n </section>\n </body>",
                "previous_filename": "src/documentation/content/xdocs/0.93/knownissues_overview.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/knownissues_overview.xml",
                "sha": "7247e6b79e85243774639f43ae3ba32f4ea335a3",
                "status": "renamed"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "changes": 88,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 78,
                "filename": "src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "patch": "@@ -26,13 +26,6 @@\n     is not sized correctly if it wraps an image that is higher than the \n     nominal line.</description>\n   </testcase>\n-  <testcase>\n-    <name>Bugzilla #36391: reference-orientation</name>\n-    <file>block-container_reference-orientation_bug36391.xml</file>\n-    <description>There's a problem involving nested block-containers\n-    and reference-orientation 180/-180.</description>\n-    <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=36391</reference>\n-  </testcase>\n   <testcase>\n     <name>Auto-height block-containers produce fences</name>\n     <file>block-container_space-before_space-after_3.xml</file>\n@@ -48,8 +41,8 @@\n   <testcase>\n     <name>Hyphenation with preserved linefeeds</name>\n     <file>block_hyphenation_linefeed_preserve.xml</file>\n-    <description>When hyphenation is enabled and linefeeds are preserved linefeeds \n-    are painted as '#' and the text is output multiple times.</description>\n+    <description>When hyphenation is enabled and linefeeds are preserved,\n+    the text is output multiple times.</description>\n   </testcase>\n   <testcase>\n     <name>linefeed-treatment</name>\n@@ -104,12 +97,6 @@\n     <description>Space resolution does not work between footnote\n     regions.</description>\n   </testcase>\n-  <testcase>\n-    <name>Footnotes swallowed in hyphenated fo:inlines</name>\n-    <file>footnote_in_inline.xml</file>\n-    <description>getChangedKnuthElements probably loses the footnote \n-    layout manager somewhere along the way.</description>\n-  </testcase>\n   <testcase>\n     <name>Footnotes swallowed in lists</name>\n     <file>footnote_in_list.xml</file>\n@@ -128,11 +115,6 @@\n     element list.</description>\n     <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=37579</reference>\n   </testcase>\n-  <testcase>\n-    <name>keeps on inlines NYI</name>\n-    <file>inline_keep-together.xml</file>\n-    <description>Keeps are not implemented in inline-level elements, yet.</description>\n-  </testcase>\n   <testcase>\n     <name>NPE for table inside an inline</name>\n     <file>inline_block_nested_3.xml</file>\n@@ -250,54 +232,6 @@\n     <file>region-body_column-count_bug36356.xml</file>\n     <description>Column balancing doesn't work as expected.</description>\n   </testcase>\n-  <testcase>\n-    <name>No background-images on table-body</name>\n-    <file>table-body_background-image.xml</file>\n-    <description>The backgrounds of table-body, table-header,\n-    table-footer and table-column are not painted, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Collapsing Border Model NYI</name>\n-    <file>table_border-collapse_collapse_1.xml</file>\n-    <description>Border-collapse=\"collapse\" is not yet\n-    implemented.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Collapsing Border Model NYI</name>\n-    <file>table_border-collapse_collapse_2.xml</file>\n-    <description>Border-collapse=\"collapse\" is not yet\n-    implemented.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Problems with border and padding on tables</name>\n-    <file>table_border_padding.xml</file>\n-    <description>The element list seems to not be fully correct, yet, causing\n-    the layout to look odd.</description>\n-  </testcase>\n-  <testcase>\n-    <name>keep-with-previous doesn't work inside tables</name>\n-    <file>table-cell_block_keep-with-previous.xml</file>\n-    <description>Keep-with-previous doesn't work inside tables and\n-    lists, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>Border and padding conditionality is NYI on table-cells</name>\n-    <file>table-cell_border_padding_conditionality.xml</file>\n-    <description>Border and padding conditionality are not supported\n-    on table-cells, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>No background-images on table-header</name>\n-    <file>table-header_background-image.xml</file>\n-    <description>The backgrounds of table-body, table-header,\n-    table-footer and table-column are not painted, yet.</description>\n-  </testcase>\n-  <testcase>\n-    <name>keep-with-previous doesn't work on table-rows</name>\n-    <file>table-row_keep-with-previous.xml</file>\n-    <description>Keep-with-previous doesn't work inside tables and\n-    lists, yet.</description>\n-  </testcase>\n   <testcase>\n     <name>table-cell empty area with marker.xml</name>\n     <file>table-cell_empty_area_with_marker.xml</file>\n@@ -312,17 +246,15 @@\n     case should be revisited.</description>\n   </testcase>\n   <testcase>\n-    <name>fo:wrapper around block-level content</name>\n-    <file>wrapper_block.xml</file>\n-    <description>A ClassCastException occurs when fo:wrapper directly surrounds a \n-    block-level element because its layout manager is written to handle only \n-    inline content.</description>\n+    <name>fo:wrapper around block-level content (with id)</name>\n+    <file>wrapper_block_id.xml</file>\n+    <description>\"id\" attributes on fo:wrapper around block-level content don't get\n+    added to the area tree.</description>\n   </testcase>\n   <testcase>\n-    <name>Bugzilla #40230: invalid extra page break</name>\n-    <file>block_break-after_bug40230.xml</file>\n-    <description>Currently an extra page is created even if there is nothing\n-      after a block with break-after=\"page\"</description>\n-    <reference>http://issues.apache.org/bugzilla/show_bug.cgi?id=40230</reference>\n+    <name>Soft hyphen with normal hyphenation enabled</name>\n+    <file>block_shy_linebreaking_hyph.xml</file>\n+    <description>A soft hyphen should be a preferred as break compared to a\n+    normal hyphenation point but is not.</description>\n   </testcase>\n </disabled-testcases>",
                "previous_filename": "src/documentation/content/xdocs/0.93/layoutengine/disabled-testcases.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/layoutengine/disabled-testcases.xml",
                "sha": "b4de16ef4a2b423739d40ff2d6801f0ce22660ee",
                "status": "renamed"
            },
            {
                "additions": 124,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/output.xml",
                "changes": 132,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/output.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 8,
                "filename": "src/documentation/content/xdocs/0.95/output.xml",
                "patch": "@@ -48,6 +48,35 @@\n           The net effect is that the layout of a given FO document can be quite different between \n           renderers that do not use the same font information.\n         </p>\n+        <p>\n+          Theoretically, there's some potential to make the output of the PDF/PS renderers match\n+          the output of the Java2D-based renderers. If FOP used the font metrics from its own\n+          font subsystem but still used Java2D for text painting in the Java2D-based renderers,\n+          this could probably be achieved. However, this approach hasn't been implemented, yet.\n+        </p>\n+        <p>\n+          With a work-around, it is possible to match the PDF/PS output in a Java2D-based\n+          renderer pretty closely. The clue is to use the\n+          <a href=\"intermediate.html\">intermediate format</a>. The trick is to layout the\n+          document using FOP's own font subsystem but then render the document using Java2D.\n+          Here are the necessary steps (using the command-line):\n+        </p>\n+        <ol>\n+          <li>\n+            Produce an IF file: <code>fop -fo myfile.fo -at application/pdf myfile.at.xml</code><br/>\n+            Specifying \"application/pdf\" for the \"-at\" parameter causes FOP to use FOP's own\n+            font subsystem (which is used by the PDF renderer). Note that no PDF file is created\n+            in this step.\n+          </li>\n+          <li>Render to a PDF file: <code>fop -atin myfile.at.xml -pdf myfile.pdf</code></li>\n+          <li>Render to a Java2D-based renderer:\n+            <ul>\n+              <li><code>fop -atin myfile.at.xml -print</code></li>\n+              <li><code>fop -atin myfile.at.xml -awt</code></li>\n+              <li><code>fop -atin myfile.at.xml -tiff myfile.tiff</code></li>\n+            </ul>\n+          </li>\n+        </ol>\n       </section>\n       <section id=\"general-direct-output\">\n         <title>Output to a Printer or Other Device</title>\n@@ -105,7 +134,7 @@ out = proc.getOutputStream();]]></source>\n       <section id=\"pdf-postprocess\">\n         <title>Post-processing</title>\n         <p>\n-          FOP does not currently support several desirable PDF features: XMP metadata and watermarks. \n+          FOP does not currently support several desirable PDF features: watermarks and signatures. \n           One workaround is to use Adobe Acrobat (the full version, not the Reader) to process \n           the file manually or with scripting that it supports.\n         </p>\n@@ -199,8 +228,54 @@ out = proc.getOutputStream();]]></source>\n     support for most text and layout.\n     Images and SVG are not fully supported, yet. Currently, the PostScript\n     renderer generates PostScript Level 3 with most DSC comments. Actually,\n-    the only Level 3 feature used is FlateDecode, everything else is Level 2.\n+    the only Level 3 features used are the FlateDecode and DCTDecode \n+    filter (the latter is used for 1:1 embedding of JPEG images), everything \n+    else is Level 2.\n   </p>\n+    <section id=\"ps-configuration\">\n+      <title>Configuration</title>\n+      <p>\n+        The PostScript renderer configuration currently allows the following settings:\n+      </p>\n+<source><![CDATA[<renderer mime=\"application/postscript\">\n+  <auto-rotate-landscape>false</auto-rotate-landscape>\n+  <language-level>3</language-level>\n+  <optimize-resources>false</optimize-resources>\n+  <safe-set-page-device>false</safe-set-page-device>\n+  <dsc-compliant>true</dsc-compliant>\n+</renderer>]]></source>\n+      <p>\n+        The default value for the \"auto-rotate-landscape\" setting is \"false\". Setting it\n+        to \"true\" will automatically rotate landscape pages and will mark them as landscape.\n+      </p>\n+      <p>\n+        The default value for the \"language-level\" setting is \"3\". This setting specifies\n+        the PostScript language level which should be used by FOP. Set this to \"2\"\n+        only if you don't have a Level 3 capable interpreter.\n+      </p>\n+      <p>\n+        The default value for the \"optimize-resources\" setting is \"false\". Setting it\n+        to \"true\" will produce the PostScript file in two steps. A temporary file will be\n+        written first which will then be processed to add only the fonts which were really\n+        used and images are added to the stream only once as PostScript forms. This will\n+        reduce file size but can potentially increase the memory needed in the interpreter\n+        to process.\n+      </p>\n+      <p>\n+        The default value for the \"safe-set-page-device\" setting is \"false\". Setting it\n+        to \"true\" will cause the renderer to invoke a postscript macro which guards against\n+        the possibility of invalid/unsupported postscript key/values being issued to the\n+        implementing postscript page device. \n+      </p>\n+      <p>\n+        The default value for the \"dsc-compliant\" setting is \"true\". Setting it\n+        to \"false\" will break DSC compliance by minimizing the number of setpagedevice\n+        calls in the postscript document output.  This feature may be useful when unwanted\n+        blank pages are experienced in your postscript output.  This problem is caused by\n+        the particular postscript implementation issuing unwanted postscript subsystem\n+        initgraphics/erasepage calls on each setpagedevice call.\n+      </p>\n+    </section>\n   <section id=\"ps-limitations\">\n     <title>Limitations</title>\n     <ul>\n@@ -283,6 +358,7 @@ out = proc.getOutputStream();]]></source>\n <source><![CDATA[<renderer mime=\"application/vnd.hp-PCL\">\n   <rendering>quality</rendering>\n   <text-rendering>bitmap</text-rendering>\n+  <disable-pjl>false</disable-pjl>\n </renderer>]]></source>\n       <p>\n         The default value for the \"rendering\" setting is \"speed\" which causes borders \n@@ -297,6 +373,12 @@ out = proc.getOutputStream();]]></source>\n         If the mix of painting methods results in unwelcome output, you can set this\n         to \"bitmap\" which causes all text to be rendered as bitmaps.\n       </p>\n+      <p>\n+        The default value for the \"disable-pjl\" setting is \"false\". This means that\n+        the PCL renderer usually generates PJL commands before and after the document\n+        in order to switch a printer into PCL language. PJL commands can be disabled\n+        if you set this value to \"true\".\n+      </p>\n       <p>\n         You can control the output resolution for the PCL using the \"target resolution\" \n         setting on the FOUserAgent. The actual value will be rounded up to the next\n@@ -498,6 +580,13 @@ out = proc.getOutputStream();]]></source>\n         <font-triplet name=\"Courier\" style=\"normal\" weight=\"bold\"/>\n       </font>]]></source>\n       </section>\n+      <section id=\"afp-renderer-resolution-config\">\n+        <title>Output Resolution</title>\n+        <p>By default the AFP Renderer creates output with a resolution of 240 dpi.\n+          This can be overridden by the &lt;renderer-resolution/&gt; configuration element. Example:</p>\n+      <source><![CDATA[\n+      <renderer-resolution>240</renderer-resolution>]]></source>\n+      </section>\n       <section id=\"afp-image-config\">\n         <title>Images</title>\n         <p>By default the AFP Renderer converts all images to 8 bit grey level.\n@@ -560,8 +649,7 @@ out = proc.getOutputStream();]]></source>\n       </section>\n       <section id=\"afp-tag-logical-element\">\n         <title>Tag Logical Element Extension</title>\n-        <p>The tag-logical-element extension element allows to injects TLEs into the AFP output stream. Example: \n-          Example:</p>\n+        <p>The tag-logical-element extension element allows to injects TLEs into the AFP output stream. Example:</p>\n       <source><![CDATA[\n     <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n      xmlns:afp=\"http://xmlgraphics.apache.org/fop/extensions/afp\">\n@@ -577,17 +665,44 @@ out = proc.getOutputStream();]]></source>\n         The name and value attributes are mandatory.\n         </p>\n       </section>\n+      <section id=\"afp-no-operation\">\n+        <title>No Operation Extension</title>\n+        <p>The no-operation extension provides the ability to carry up to 32K of comments or any other type\n+        of unarchitected data into the AFP output stream. Example:</p>\n+      <source><![CDATA[\n+    <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+     xmlns:afp=\"http://xmlgraphics.apache.org/fop/extensions/afp\">\n+      <fo:layout-master-set>\n+        <fo:simple-page-master master-name=\"simple\">\n+          <afp:no-operation name=\"My NOP\">insert up to 32k of character data here!</afp:no-operation>\n+        </fo:simple-page-master>\n+      </fo:layout-master-set>\n+]]></source>\n+        <p>The no-operation extension element can only occur within a simple-page-master.\n+        Multiple no-operation extension elements within a simple-page-master are allowed.\n+        The name attribute is mandatory.\n+        </p>\n+      </section>\n     </section>\n   </section>\n <section id=\"rtf\">\n   <title>RTF</title>\n   <p>\n     JFOR, an open source XSL-FO to RTF converter has been integrated into Apache FOP.\n     This will create an RTF (rich text format) document that will\n-    attempt to contain as much information from the fo document as\n-    possible. The RTF output follows Microsoft's RTF specifications\n+    attempt to contain as much information from the XSL-FO document as\n+    possible. It should be noted that is not possible (due to RTF's limitations) to map all\n+    XSL-FO features to RTF. For complex documents, the RTF output will never reach the feature\n+    level from PDF, for example. Thus, using RTF output is only recommended for simple documents\n+    such as letters.\n+  </p>\n+  <p>\n+    The RTF output follows Microsoft's RTF specifications\n     and produces best results on Microsoft Word.\n   </p>\n+  <note>RTF output is currently unmaintained and lacks many features compared to other output\n+    formats. Using other editable formats like Open Document Format, instead of producing XSL-FO\n+    then RTF through FOP, might give better results.</note>\n </section>\n <section id=\"xml\">\n   <title>XML (Area Tree XML)</title>\n@@ -662,8 +777,8 @@ out = proc.getOutputStream();]]></source>\n   <fonts><!-- described elsewhere --></fonts>\n </renderer>]]></source>\n       <p>\n-        The default value for the \"compression\" setting is \"PackBits\" which is a \n-        widely supported RLE compression scheme for TIFF. The set of compression\n+        The default value for the \"compression\" setting is \"PackBits\" which \n+        which is a widely supported RLE compression scheme for TIFF. The set of compression\n         names to be used here matches the set that the Image I/O API uses. Note that\n         not all compression schemes may be available during runtime. This depends on the\n         actual codecs being available. Here is a list of possible values:\n@@ -770,3 +885,4 @@ out = proc.getOutputStream();]]></source>\n   </body>\n </document>\n \n+",
                "previous_filename": "src/documentation/content/xdocs/0.93/output.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/output.xml",
                "sha": "628df12480b556dcd406303b7b146c40975ce43d",
                "status": "renamed"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfa.xml",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfa.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.95/pdfa.xml",
                "patch": "@@ -20,7 +20,7 @@\n <document>\n   <header>\n     <title>PDF/A (ISO 19005)</title>\n-    <version>$Revision: 389563 $</version>\n+    <version>$Revision$</version>\n     <authors>\n       <person name=\"Jeremias M\u00e4rki\" email=\"jeremias@apache.org\"/>\n     </authors>\n@@ -129,5 +129,31 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n         activated at the same time.\n       </p>\n     </section>\n+    <section id=\"interoperability\">\n+      <title>Interoperability</title>\n+      <p>\n+        There has been some confusion about the namespace for the PDF/A indicator in the XMP\n+        metadata. At least three variants have been seen in the wild:\n+      </p>\n+      <table>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id.html</td>\n+          <td><strong>obsolete</strong>, from an early draft of ISO-19005-1, used by Adobe Acrobat 7.x</td>\n+        </tr>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id</td>\n+          <td><strong>obsolete</strong>, found in the original ISO 19005-1:2005 document</td>\n+        </tr>\n+        <tr>\n+          <td>http://www.aiim.org/pdfa/ns/id/</td>\n+          <td><strong>correct</strong>, found in the technical corrigendum 1 of ISO 19005-1:2005</td>\n+        </tr>\n+      </table>\n+      <p>\n+        If you get an error validating a PDF/A file in Adobe Acrobat 7.x it doesn't mean that\n+        FOP did something wrong. It's Acrobat that is at fault. This is fixed in Adobe Acrobat 8.x\n+        which uses the correct namespace as described in the technical corrigendum 1.\n+      </p>\n+    </section>\n   </body>\n </document>",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfa.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfa.xml",
                "sha": "1b3b75561c397c94f7c805819443b90e83397673",
                "status": "renamed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfencryption.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 10,
                "filename": "src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "patch": "@@ -29,10 +29,6 @@\n   <body>\n     <section>\n       <title>Overview</title>\n-      <warning>\n-        PDF Encryption is available in Release 0.20.5 and later. The comments on this page do \n-        not apply to releases earlier than 0.20.5.\n-      </warning>\n       <p>\n         FOP supports encryption of PDF output, thanks to Patrick\n         C. Lankswert. This feature is commonly used to prevent\n@@ -207,16 +203,11 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n         install.\n       </p>\n       <ol>\n-        <li>\n-          Download the binary distribution for your JDK version. If you have JDK\n-          1.3 or earlier you must also download a JCE from the same page.\n-        </li>\n         <li>\n           Unpack the distribution. Add the jar file to your classpath. A\n           convenient way to use the jar on Linux is to simply drop it into the\n           FOP lib directory, it will be automatically picked up by\n-          <code>fop.sh</code>.  If you have JDK 1.3 or earlier don't forget to\n-          install the JCE as well.\n+          <code>fop.sh</code>.\n         </li>\n         <li>\n           Open the <code>java.security</code> file and add<br/>",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfencryption.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfencryption.xml",
                "sha": "cda301aabf08893b697451c1f0d0842e95a9bb9b",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfx.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/pdfx.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/0.95/pdfx.xml",
                "previous_filename": "src/documentation/content/xdocs/0.93/pdfx.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/pdfx.xml",
                "sha": "cf796c74dbf3c150c9bffc0e8e1ce16ce981fa2d",
                "status": "renamed"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/running.xml",
                "changes": 65,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/running.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 32,
                "filename": "src/documentation/content/xdocs/0.95/running.xml",
                "patch": "@@ -28,29 +28,33 @@\n       <title>System Requirements</title>\n       <p>The following software must be installed:</p>\n       <ul>\n-        <li>Java 1.3.x or later Runtime Environment.</li>\n+        <li>\n+          Java 1.4.x or later Runtime Environment.\n+          <ul>\n+            <li>\n+              Many JREs >=1.4 contain older JAXP implementations (which often contain bugs). It's\n+              usually a good idea to replace them with a current implementation.\n+            </li>\n+          </ul>\n+        </li>\n         <li>\n           Apache FOP. The <a href=\"../download.html\">FOP distribution</a> includes all libraries that you will \n           need to run a basic FOP installation. These can be found in the [fop-root]/lib directory. These \n           libraries include the following:\n           <ul>\n-            <li>\n-              A JAXP-compatible XML Parser (FOP comes with <a class=\"fork\" href=\"ext:xerces\">Apache Xerces-J</a>).\n-            </li>\n-            <li>\n-              A JAXP-compatible XSLT Processor (FOP comes with <a class=\"fork\" href=\"ext:xalan\">Apache Xalan-J</a>).\n-            </li>\n+            <li><a class=\"fork\" href=\"ext:xmlgraphics.apache.org/commons\">Apache XML Graphics Commons</a>, an shared library for Batik and FOP.</li>\n             <li><a class=\"fork\" href=\"ext:batik\">Apache Batik</a>, an SVG library.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/logging\">Apache Jakarta Commons Logging</a>, a logger abstraction kit.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/io\">Apache Jakarta Commons IO</a>, a library with I/O utilities.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-logging\">Apache Commons Logging</a>, a logger abstraction kit.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-io\">Apache Commons IO</a>, a library with I/O utilities.</li>\n             <li><a class=\"fork\" href=\"ext:excalibur/framework\">Apache Excalibur/Avalon Framework</a>, for XML configuration handling.</li>\n           </ul>\n         </li>\n       </ul>\n       <p>The following software is optional, depending on your needs:</p>\n       <ul>\n         <li>\n-          Graphics libraries. Support for some graphics formats requires additional packages. See \n+          Graphics libraries. Generally, FOP contains direct support for the most important\n+          bitmap image formats (including PNG, JPEG and GIF). See \n           <a href=\"graphics.html\">FOP: Graphics Formats</a> for details.\n         </li>\n         <li>\n@@ -178,7 +182,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n   Fop foo.fo -awt]]></source>\n       <p>\n         PDF encryption is only available if FOP was compiled with encryption support \n-        <strong>and</strong> if compatible encryption support is availabe at run time. \n+        <strong>and</strong> if compatible encryption support is available at run time. \n         Currently, only the JCE is supported. Check the <a href=\"pdfencryption.html\">Details</a>.\n       </p>\n       </section>\n@@ -220,25 +224,27 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n         <title>FOP's dynamical classpath construction</title>\n \n         <p>If FOP is started without a proper classpath, it tries to\n-        add its dependencies dynamically. FOP uses the current working\n-        directory as the base directory for its search. If the base\n-        directory is called <code>build</code>, then its parent\n-        directory becomes the base directory.</p>\n+          add its dependencies dynamically. If the system property\n+          <code>fop.home</code> contains the name of a directory, then\n+          FOP uses that directory as the base directory for its\n+          search. Otherwise the current working directory is the base\n+          directory. If the base directory is called <code>build</code>,\n+          then its parent directory becomes the base directory.</p>\n \n         <p>FOP expects to find <code>fop.jar</code> in the\n-        <code>build</code> subdirectory of the base directory, and\n-        adds it to the classpath. Subsequently FOP adds all\n-        <code>jar</code> files in the lib directory to the\n-        classpath. The lib directory is either the <code>lib</code>\n-        subdirectory of the base directory, or, if that does not\n-        exist, the base directory itself.</p>\n+          <code>build</code> subdirectory of the base directory, and\n+          adds it to the classpath. Subsequently FOP adds all\n+          <code>jar</code> files in the lib directory to the\n+          classpath. The lib directory is either the <code>lib</code>\n+          subdirectory of the base directory, or, if that does not\n+          exist, the base directory itself.</p>\n \n         <p>If the system property <code>fop.optional.lib</code>\n-        contains the name of a directory, then all <code>jar</code>\n-        files in that directory are also added to the classpath. See\n-        the methods <code>getJARList</code> and\n-        <code>checkDependencies</code> in\n-        <code>org.apache.fop.cli.Main</code>.</p>\n+          contains the name of a directory, then all <code>jar</code>\n+          files in that directory are also added to the classpath. See\n+          the methods <code>getJARList</code> and\n+          <code>checkDependencies</code> in\n+          <code>org.apache.fop.cli.Main</code>.</p>\n \n       </section>\n     </section>\n@@ -299,7 +305,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n       <ul>\n         <li>\n           Increase memory available to the JVM. See \n-          <a href=\"http://java.sun.com/j2se/1.3/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n+          <a href=\"http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n           for more information.\n           <warning>\n             It is usually unwise to increase the memory allocated to the JVM beyond the amount of \n@@ -335,11 +341,6 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n           This can be substantial if the page sequence contains lots of FO elements.\n         </li>\n       </ul>\n-      <p>\n-        One of FOP's stated design goals is to be able to process input of arbitrary size.\n-        Addressing this goal is one of the prime motivations behind the \n-        <a href=\"../dev/index.html\">FOP Redesign</a>.\n-      </p>\n     </section>\n     <section id=\"problems\">\n       <title>Problems</title>",
                "previous_filename": "src/documentation/content/xdocs/0.93/running.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/running.xml",
                "sha": "38e31cc6c288cee6755a9ea3b35905eeefcff563",
                "status": "renamed"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/servlets.xml",
                "changes": 67,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/servlets.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/0.95/servlets.xml",
                "patch": "@@ -161,7 +161,7 @@ public void init() throws ServletException {\n         <ul>\n           <li>\n             Instead of java.io.ByteArrayOutputStream consider using the ByteArrayOutputStream\n-            implementation from the <a href=\"ext:jakarta/commons/io\">Jakarta Commons IO project</a> which allocates less memory.\n+            implementation from the <a href=\"ext:commons-io\">Jakarta Commons IO project</a> which allocates less memory.\n             The full class name is: <code>org.apache.commons.io.output.ByteArrayOutputStream</code>\n           </li>\n           <li>\n@@ -177,6 +177,71 @@ public void init() throws ServletException {\n           apply here, too.\n         </p>\n       </section>\n+      <section id=\"uriresolver\">\n+        <title>Accessing resources in your web application</title>\n+        <p>\n+          Often, you will want to use resources (stylesheets, images etc.) which are bundled with\n+          your web application. FOP provides a URIResolver implementation that lets you access\n+          files via the Servlet's ServletContext. The class is called \n+          <code>org.apache.fop.servlet.ServletContextURIResolver</code>.\n+        </p>\n+        <p>\n+          Here's how to set it up in your servlet. Instantiate a new instance in the servlet's \n+          init() method:\n+        </p>\n+        <source><![CDATA[\n+    /** URIResolver for use by this servlet */\n+    protected URIResolver uriResolver; \n+\n+    public void init() throws ServletException {\n+        this.uriResolver = new ServletContextURIResolver(getServletContext());\n+        [..]\n+    }]]></source>\n+        <p>\n+          The ServletContextURIResolver reacts on URIs beginning with \"servlet-context:\". If you\n+          want to access an image in a subdirectory of your web application, you could, for\n+          example, use: \"servlet-context:/images/myimage.png\". Don't forget the leading slash\n+          after the colon!\n+        </p>\n+        <p>\n+          Further down, you can use the URIResolver for various things:\n+        </p>\n+        <ul>\n+          <li>\n+            With the Transformer (JAXP/XSLT) so things like document() functions can resolver \n+            \"servlet-context:\" URIs.\n+          </li>\n+          <li>\n+            With the FopFactory so every resource FOP loads can be loaded using a \"servlet-context:\"\n+            URI.\n+          </li>\n+          <li>\n+            You can the ServletContextURIResolver yourself in your servlet code to access\n+            stylesheets or XML files bundled with your web application.\n+          </li>\n+        </ul>\n+        <p>\n+          Here are some example snippets:\n+        </p>\n+        <source><![CDATA[\n+//Setting up the JAXP TransformerFactory\n+this.transFactory = TransformerFactory.newInstance();\n+this.transFactory.setURIResolver(this.uriResolver);\n+\n+[..]\n+\n+//Setting up the FOP factory\n+this.fopFactory = FopFactory.newInstance();\n+this.fopFactory.setURIResolver(this.uriResolver);\n+\n+[..]\n+\n+//The stylesheet for the JAXP Transfomer\n+Source xsltSrc = this.uriResolver.resolve(\n+    \"servlet-context:/xslt/mystylesheet.xsl\", null);\n+Transformer transformer = this.transFactory.newTransformer(xsltSrc);\n+transformer.setURIResolver(this.uriResolver);]]></source>\n+      </section>\n     </section>\n     <section id=\"ie\">\n       <title>Notes on Microsoft Internet Explorer</title>",
                "previous_filename": "src/documentation/content/xdocs/0.93/servlets.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/servlets.xml",
                "sha": "07c22312dec61fe9fa14270a1629288805c1d488",
                "status": "renamed"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/upgrading.xml",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/0.95/upgrading.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 26,
                "filename": "src/documentation/content/xdocs/0.95/upgrading.xml",
                "patch": "@@ -31,7 +31,10 @@\n       </p>\n       <ul>\n         <li>\n-          More than half of the codebase has been rewritten over the last three years. With version 0.93 the code has reached <strong>production level</strong>.\n+          More than half of the codebase has been rewritten over the\n+          last four years. With version 0.93 the code has reached\n+          <strong>production level</strong>, and continues to improve with\n+          version 0.94 and 0.95.\n         </li>\n         <li>\n           The API of FOP has changed considerably and is not\n@@ -52,13 +55,12 @@\n           src/foschema/fop-configuration.xsd.\n         </li>\n         <li>\n-          If you are using font metrics files for version 0.20.5 or\n-          0.92 or earlier, you have to regenerate them in the new\n-          format. The new format is characterized by a version\n-          attribute on the top-level font-metrics element, whose value\n-          is 2.0. The absence of a version attribute will be\n-          interpreted as version 1.0, and such metrics files will no\n-          longer be parsed.\n+          Beginning with version 0.94 you can skip the generation of\n+          font metric files and remove the \"font-metrics\" attribute\n+          in the font configuration. The font metrics files are, for\n+          the moment, still required if you use a TrueType Collection (*.ttc)\n+          and in that case you need to regenerate the font metrics file\n+          if yours are from a FOP version before 0.93.\n         </li>\n         <li>\n           <p>\n@@ -76,36 +78,28 @@\n         </li>\n         <li>\n           Extensions and Renderers written for version 0.20.5 will not work with the new code! The new FOP \n-          extension for <a href=\"http://barcode4j.krysalis.org\">Barcode4J</a> will be available in \n+          extension for <a href=\"http://barcode4j.sourceforge.net\">Barcode4J</a> is available since \n           January 2007.\n         </li>\n         <li>\n-          The PCL Renderer and the MIF Handler have not been resurrected, yet! They are currently non-functional\n+          The SVG Renderer and the MIF Handler have not been resurrected, yet! They are currently non-functional\n           and hope for someone to step up and reimplement them.\n         </li>\n-        <li>\n-          By looking at the <a href=\"../compliance.html\">Compliance page</a> you might get the impression\n-          that the new code is much more advanced than version 0.20.5. That's true but there may still\n-          be a few things that may not be handled as gracefully by the new code as by version 0.20.5.\n-        </li>\n       </ul>\n     </section>\n     <section id=\"issues\">\n       <title>What you need to know when you upgrade!</title>\n       <p>\n         When you use your existing FO files or XML/XSL files which work fine with FOP version\n         0.20.5 against this FOP version some things may not work as expected. The following\n-        list will hopefully help you to identify and correct those problems.\n+        list will hopefully help you to identify and correct those problems. This does not mean\n+        that the new FOP is at fault. Quite the opposite actually! See below:\n       </p>\n       <ul>\n         <li>\n           Check the <a href=\"../compliance.html\">Compliance page</a> for the feature causing\n           trouble. It may contain the necessary information to understand and resolve the problem.\n         </li>\n-        <li>\n-          Not all 0.20.5 output formats are supported. PDF and Postscript should be fully supported.\n-          See <a href=\"output.html\">Output Targets</a> for a more complete description.\n-        </li>\n         <li>\n           As stated above empty table cells <code>&lt;fo:table-cell&gt;&lt;/fo:table-cell&gt;</code>\n           are not allowed by the specification. The same applies to empty <code>static-content</code>\n@@ -123,12 +117,8 @@\n         </li>\n         <li>\n           The <code>fox:outline</code> extension is not implemented in this version anymore. \n-          It has been superseded by the new bookmark elements from XSL-FO 1.1.\n-        </li>\n-        <li>\n-          The <code>fox:destination</code> extension is also not implemented in this version\n-          although it may be added in the future. See also\n-          <a href=\"http://issues.apache.org/bugzilla/show_bug.cgi?id=37157\">Bug 37157</a>.\n+          It has been superseded by the new bookmark elements from XSL-FO 1.1. So please\n+          update your stylesheets accordingly.\n         </li>\n       </ul>\n     </section>",
                "previous_filename": "src/documentation/content/xdocs/0.93/upgrading.xml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/0.95/upgrading.xml",
                "sha": "d2f808c57bd61c09f90bfc61b603e154a431729a",
                "status": "renamed"
            },
            {
                "additions": 7171,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/compliance.ihtml",
                "changes": 12765,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/compliance.ihtml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5594,
                "filename": "src/documentation/content/xdocs/compliance.ihtml",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/compliance.ihtml",
                "sha": "181f1fe1d338f8a4f16095f008a4be9efac31362",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/dev/doc.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/dev/doc.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/content/xdocs/dev/doc.xml",
                "patch": "@@ -97,9 +97,9 @@ Maintenance branch releases either copy the trunk content to the maintenance bra\n           Step-by-step instructions for the deployment process again:\n         </p>\n         <note>\n-          Please make sure you use Forrest from the 0.7 branch for the time being. You will need\n+          Please make sure you use Forrest from the Trunk (revision 632959 or later) for the time being. You will need\n           to download it directly from SVN:\n-          <link href=\"http://svn.apache.org/repos/asf/forrest/branches/forrest_07_branch\">http://svn.apache.org/repos/asf/forrest/branches/forrest_07_branch</link>\n+          <link href=\"http://svn.apache.org/repos/asf/forrest/trunk\">http://svn.apache.org/repos/asf/forrest/trunk</link>\n         </note>\n         <ul>\n           <li>Modify the sources of the website and check locally with Forrest (run \"forrest run\" or just \"forrest\").</li>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/dev/doc.xml",
                "sha": "4fd6bce78b62e20e8568626a14d1d55f9616c295",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/dev/release.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/dev/release.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/dev/release.xml",
                "patch": "@@ -73,7 +73,7 @@ The purpose of documenting it here is to facilitate consistency, ensure that the\n         <code>fop-hyph.jar</code> to lib/ (e.g. from\n         <code>http://sourceforge.net/projects/offo</code></li>\n         <li>Alternatively, create a build-local.properties file that points to the above libs.</li>\n-        <li>Run build[.sh] dist. Do this once using Sun JDK 1.3.1_15 or later and once with Sun JDK 1.4.2_08 or later. A Forrest installation is needed.</li>\n+        <li>Run build[.sh] dist. Do this using Sun JDK 1.4.2_08 or later. A Forrest installation is needed.</li>\n         <li>Create signatures. Don't forget to upload your KEY:\n           <code>gpg -a -b --force-v3-sigs fop-0.94-src.tar.gz</code> etc.</li>\n         <li>Upload the dist and signature files to your web directory",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/dev/release.xml",
                "sha": "641758d781475846da6ce592f515929eada3b9dd",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/download.xml",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/download.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/download.xml",
                "patch": "@@ -84,7 +84,7 @@\n       <p/>\n       <table>\n         <tr>\n-          <th colspan=\"2\">Latest Release</th>\n+          <th colspan=\"2\">Latest Stable Release</th>\n         </tr>\n         <tr>\n           <td>Repository URL</td>\n@@ -102,6 +102,25 @@\n             </link>\n           </td>\n         </tr>\n+        <tr>\n+          <th colspan=\"2\">Latest Release</th>\n+        </tr>\n+        <tr>\n+          <td>Repository URL</td>\n+          <td>\n+            <link href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-0_95beta/\">\n+              <code>http://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-0_95beta/</code>\n+            </link>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td>Web view</td>\n+          <td>\n+            <link href=\"http://svn.apache.org/viewvc/xmlgraphics/fop/tags/fop-0_95beta/\">\n+              <code>http://svn.apache.org/viewvc/xmlgraphics/fop/tags/fop-0_95beta/</code>\n+            </link>\n+          </td>\n+        </tr>\n         <tr>\n           <th colspan=\"2\">Trunk</th>\n         </tr>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/download.xml",
                "sha": "f0a2a0a61ed618b58ce066ca6b8bceb0e26a4730",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/faq.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/faq.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/faq.xml",
                "patch": "@@ -645,6 +645,21 @@ Check the following:</p>\n         </p>\n       </answer>\n     </faq>\n+    <faq id=\"pdf-ps-java2d-differences\">\n+      <question>Why is the output of Java2D/AWT-based renderers different than, for example, PDF or PS?</question>\n+      <answer>\n+        <p>\n+          If you render the same document once to a PNG or TIFF and once into a PDF, the output\n+          may not be the same, i.e. line breaks are different or lines may have different heights.\n+          The reason for this: The Java2D-based renderers use the font subsystem of Java2D/AWT. The\n+          PDF and PS renderers use FOP's own font subsystem which provides much better font metrics\n+          than Java2D. These can lead to different layout decisions when the same document is\n+          rendered with different renderers. An alternative approach to fix this problem might be\n+          available but it hasn't been tested, yet. See also the\n+          <link href=\"0.95/output.html#general-fonts\">notes on fonts in the various output formats</link>.\n+        </p>\n+      </answer>\n+    </faq>\n   </part>\n   <part id=\"part-embedding\">\n     <title>Embedding FOP. Using FOP in a servlet.</title>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/faq.xml",
                "sha": "a75cd41e05cc77f86e5195122a2d68e3bacc77cf",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/index.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/index.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/index.xml",
                "patch": "@@ -29,14 +29,15 @@\n       <p>Apache FOP (Formatting Objects Processor) is a print formatter driven by XSL\n         formatting objects (XSL-FO) and an output independent formatter. It is a Java\n         application that reads a formatting object (FO) tree and renders the resulting\n-        pages to a specified output. <link href=\"0.94/output.html\">Output formats</link>\n+        pages to a specified output. <link href=\"0.95/output.html\">Output formats</link>\n         currently supported include PDF, PS, PCL, AFP, XML (area tree representation),\n         Print, AWT and PNG, and to a lesser extent, RTF and TXT. The primary output target is PDF.\n       </p>\n         <figure width=\"480\" height=\"260\" src=\"images/document.jpg\" alt=\"Render Diagram\" />\n     <p>\n-      The latest stable version of FOP (<link href=\"0.94/\">0.94</link>) is the second\n-      stable release after a large redesign effort and implements a large subset of the\n+      A beta release of the latest version of FOP (<link href=\"0.95/\">0.95</link>) is now\n+      available. After a short testing period it will become the third\n+      stable release after the large redesign effort and will implement a large subset of the\n       <link href=\"http://www.w3.org/TR/xsl11/\">XSL-FO Version 1.1 W3C\n         Recommendation</link>.\n     </p>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/index.xml",
                "sha": "9ed040184f7038bc61270f8463647f4a5e2fa0d3",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/news.xml",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/news.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 16,
                "filename": "src/documentation/content/xdocs/news.xml",
                "patch": "@@ -16,9 +16,7 @@\n   limitations under the License.\n -->\n <!-- $Id$ -->\n-<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V1.1//EN\"\n-    \"http://svn.apache.org/viewvc/forrest/trunk/main/webapp/resources/schema/dtd/document-v12.dtd?view=co\">\n-\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n <document>\n   <header>\n     <title>News</title>\n@@ -87,7 +85,7 @@\n       </p>\n       <p>\n         Please see also the \n-        <link href=\"http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-users/200511.mbox/%3c20051123002157.0EB0.JEREMIAS@apache.org%3e\">announcement</link>.\n+        <a href=\"http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-users/200511.mbox/%3c20051123002157.0EB0.JEREMIAS@apache.org%3e\">announcement</a>.\n         <!-- TODO re-enable and the <link href=\"relnotes.html#FOP+0.90+alpha+1\">release notes</link>.-->\n       </p>\n     </section>\n@@ -99,7 +97,7 @@\n       <title>20 October 2004 - Creation of the Apache XML Graphics project</title>\n       <p>\n         The Apache Board of Directors agreed to the creation of the \n-        <link href=\"http://xmlgraphics.apache.org\">Apache XML Graphics</link>\n+        <a href=\"http://xmlgraphics.apache.org\">Apache XML Graphics</a>\n         project which will be comprised of Batik and FOP. Both former \n         Apache XML subprojects are in this way complying with the Board's desire\n         to improve project oversight. Both project teams also see additional\n@@ -152,8 +150,8 @@\n       </ul>\n       <p>\n       See also the full text of the\n-      <link href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=6067\">\n-        announcement</link>.\n+      <a href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=6067\">\n+        announcement</a>.\n       <!-- TODO re-enable  and the <link href=\"relnotes.html#FOP+0.20.5\">release notes</link>.-->\n       </p>\n     </section>\n@@ -164,15 +162,15 @@\n     <section>\n       <title>23 May 2003 - FOP 0.20.5 Release Candidate 3 available</title>\n       <p>\n-      See the full text of the <link\n-      href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=5429\">announcement</link>.\n+      See the full text of the <a\n+      href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=5429\">announcement</a>.\n       </p>\n     </section>\n     <section>\n       <title>18 February 2003 - FOP 0.20.5 Release Candidate 2 available</title>\n       <p>\n-      See the full text of the <link\n-      href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=4509\">announcement</link>.\n+      See the full text of the <a\n+      href=\"http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&amp;msgNo=4509\">announcement</a>.\n       </p>\n     </section>\n     <section>\n@@ -189,24 +187,24 @@\n     <section>\n       <title>23 December 2002 - Official FOP Wiki</title>\n       <p>\n-      See <link href=\"http://wiki.apache.org/xmlgraphics-fop/FOPProjectPages\"\n-      >FOP project pages</link> at the ApacheWiki.\n+      See <a href=\"http://wiki.apache.org/xmlgraphics-fop/FOPProjectPages\"\n+      >FOP project pages</a> at the ApacheWiki.\n       </p>\n     </section>\n     <section>\n       <title>10 December 2002 - FOP 0.20.5 Release Candidate available</title>\n       <p>\n-      See the full text of the <link\n+      See the full text of the <a\n       href=\"http://marc.theaimsgroup.com/?l=fop-user&amp;m=103954279712704&amp;w=2\"\n-      >announcement</link>.\n+      >announcement</a>.\n       </p>\n     </section>\n     <section>\n       <title>23 November 2002 - EXLSFO project has been created</title>\n       <p>\n       The EXSLFO project is a community effort to define functional extensions\n       to thet XSL Formatting Objects specification. See the\n-      <link href=\"http://exslfo.sourceforge.net\">EXSLFO website</link> for details.\n+      <a href=\"http://exslfo.sourceforge.net\">EXSLFO website</a> for details.\n       </p>\n     </section>\n     <section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/news.xml",
                "sha": "0a4467e664936dc1460215a406e973a74830a3e0",
                "status": "modified"
            },
            {
                "additions": 124,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/quickstartguide.xml",
                "changes": 124,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/quickstartguide.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/quickstartguide.xml",
                "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id: gethelp.xml 627324 2008-02-13 09:35:01Z maxberger $ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V1.3//EN\" \"http://forrest.apache.org/dtd/document-v13.dtd\">\n+<document>\n+  <header>\n+    <title>FOP: Quick Start Guide</title>\n+    <subtitle>Everything you need to start using and appreciating Apache FOP quickly.</subtitle>\n+    <version>$Revision: 627324 $</version>\n+  </header>\n+  <body>\n+    <section id=\"essentials\">\n+      <title>FOP Essentials</title>\n+      <p>The goal of this <strong>Quick Start Guide</strong> is to help novice users get Apache FOP up and running quickly. Typically, you'll need to:</p>\n+      <ol>\n+        <li><link href=\"download.html\">Download FOP</link></li>\n+        <li><link href=\"0.95/compiling.html\">Build FOP</link> (you can skip this step if you download the binary distribution!)</li>\n+        <li><link href=\"0.95/configuration.html\">Configure FOP</link></li>\n+        <li><link href=\"0.95/running.html\">Run FOP</link></li>\n+      </ol>\n+      <p>Here are some links to help you find out what FOP can do, as well as how and where to get help:</p>\n+      <ul>\n+        <li><link href=\"0.95/embedding.html\">Calling FOP from a Java Application</link></li>\n+        <li><link href=\"0.95/servlets.html\">Using FOP in Servlets</link></li>\n+        <li><link href=\"0.95/anttask.html\">Using FOP in an 'Ant' Build Script</link></li>\n+        <li><link href=\"compliance.html\" title=\"FOP Compliance\">XSL-FO Compliance</link> (what FOP supports and what it doesn't)</li>\n+        <li><link href=\"faq.html\">FAQs</link></li>\n+        <li><link href=\"gethelp.html\">Getting Help</link></li>\n+        <li><link href=\"maillist.html\">Mailing Lists</link></li>\n+      </ul>\n+      <p>\n+        Once you've familiarized yourself with the basics, you can get more detailed information,\n+        in the detailed FOP <link href=\"0.95/index.html\">product documentation</link>.\n+      </p>\n+    </section>\n+    \n+    <section id=\"hello-world\">\n+      <title>Hello World with FOP</title>\n+      <p>\n+        This section walks you through a \"Hello World!\" page with Apache FOP. We're assuming you\n+        download the binary distribution and that you have a Java Runtime Environment (version 1.4\n+        or later) installed.\n+      </p>\n+      <ol>\n+        <li>\n+          Unpack the downloaded binary distribution to a directory of your choice (for example,\n+          <code>C:\\FOP</code> if you're on Windows). Let's call that\n+          directory &lt;fop-home&gt;.\n+        </li>\n+        <li>\n+          Get a command prompt in the &lt;fop-home&gt; directory and write:<br/>\n+          Windows: <code>fop -fo examples/fo/basic/readme.fo -awt</code><br/>\n+          Unix: <code>./fop.sh -fo examples/fo/basic/readme.fo -awt</code><br/>\n+        </li>\n+        <li>\n+          If all went well, this should open a window showing you a \"readme\"-style document.\n+          This is just to verify that FOP runs correctly.\n+        </li>\n+        <li>\n+          Now, take your favorite XML editor and create a small XML file like the following. Replace\n+          \"Frank\" with your own first name to make it a bit more personal and save it as\n+          <code>name.xml</code>:<br/>\n+          <source><![CDATA[<name>Frank</name>]]></source>\n+        </li>\n+        <li>\n+          To produce a PDF file from this XML file, we need an XSLT stylesheet that converts the\n+          XML to XSL-FO. This is the first step in the processing chain. The second step will be\n+          done by FOP when it reads the generated XSL-FO document and formats it to a PDF document.\n+          You can copy the following minimal XSLT stylesheet, which takes your first name and\n+          produces a \"Hello World!\"-style document (save it as <code>name2fo.xsl</code>):<br/>\n+          <source><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<xsl:stylesheet version=\"1.0\"\n+      xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+      xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n+  <xsl:output method=\"xml\" indent=\"yes\"/>\n+  <xsl:template match=\"/\">\n+    <fo:root>\n+      <fo:layout-master-set>\n+        <fo:simple-page-master master-name=\"A4-portrait\"\n+              page-height=\"29.7cm\" page-width=\"21.0cm\" margin=\"2cm\">\n+          <fo:region-body/>\n+        </fo:simple-page-master>\n+      </fo:layout-master-set>\n+      <fo:page-sequence master-reference=\"A4-portrait\">\n+        <fo:flow flow-name=\"xsl-region-body\">\n+          <fo:block>\n+            Hello, <xsl:value-of select=\"name\"/>!\n+          </fo:block>\n+        </fo:flow>\n+      </fo:page-sequence>\n+    </fo:root>\n+  </xsl:template>\n+</xsl:stylesheet>]]></source>\n+          \n+        </li>\n+        <li>\n+          Finally, let's put the previous two steps together: Go back to the command prompt and\n+          enter the following command:<br/>\n+          Windows: <code>fop -xml name.xml -xsl name2fo.xsl -pdf name.pdf</code><br/>\n+          Unix: <code>./fop.sh -xml name.xml -xsl name2fo.xsl -pdf name.pdf</code><br/>\n+        </li>\n+        <li>\n+          You've produced your first PDF with Apache FOP! Please open <code>name.pdf</code>\n+          in your favorite PDF viewer.\n+        </li>\n+      </ol>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/quickstartguide.xml",
                "sha": "ca205f5a243a80c01459ba3c37c40b33614c2a2b",
                "status": "added"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/site.xml",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/site.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 32,
                "filename": "src/documentation/content/xdocs/site.xml",
                "patch": "@@ -15,13 +15,15 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n+<!-- $Id$ -->\n <site label=\"FOP\" href=\"\" xmlns=\"http://apache.org/forrest/linkmap/1.0\" tab=\"home\">\n   <!--\n   BEGIN Home tab\n   -->\n   <about label=\"About\">\n     <index label=\"Introduction\" href=\"index.html\"/>\n     <download label=\"Download\" href=\"download.html\"/>\n+    <quickstartguide label=\"Quick Start Guide\" href=\"quickstartguide.html\"/>\n     <compliance label=\"Compliance\" href=\"compliance.html\" description=\"FOP Compliance\"/>\n     <help label=\"Getting Help\" href=\"gethelp.html\"/>\n     <faqs label=\"FAQs\" href=\"faq.html\"/>\n@@ -34,7 +36,6 @@\n     <all_sitePDF label=\"Full PDF\" href=\"wholesite.pdf\"/>\n     -->\n   </about>\n-   \n \n   <resources label=\"Resources\">\n     <xsl-fo label=\"XSL-FO\" href=\"fo.html\"/>\n@@ -57,12 +58,12 @@\n   -->\n \n   <!--\n-  BEGIN Version 0.93 documentation tab\n+  BEGIN Version 0.94 documentation tab\n   -->\n-  <trunk label=\"FOP 0.93\" href=\"0.93/\" tab=\"oldstableversion\">\n+  <trunk label=\"FOP 0.94\" href=\"0.94/\" tab=\"previousversion\">\n     <about label=\"About\" href=\"index.html\"/>\n-    <release label=\"Release Notes\" href=\"releaseNotes_0.93.html\"/>\n-    <changes label=\"Changes\" href=\"changes_0.93.html\"/>\n+    <release label=\"Release Notes\" href=\"releaseNotes_0.94.html\"/>\n+    <changes label=\"Changes\" href=\"changes_0.94.html\"/>\n     <knownissues label=\"Known Issues\" href=\"knownissues_overview.html\"/>\n     <upgrading label=\"Upgrading\" href=\"upgrading.html\"/>\n     \n@@ -89,16 +90,16 @@\n     \n   </trunk>\n   <!--\n-  END Version 0.93 documentation tab\n+  END Version 0.94 documentation tab\n   -->\n   \n   <!--\n-  BEGIN Version 0.94 documentation tab\n+  BEGIN Version 0.95 documentation tab\n   -->\n-  <trunk label=\"FOP 0.94\" href=\"0.94/\" tab=\"stableversion\">\n+  <trunk label=\"FOP 0.95beta\" href=\"0.95/\" tab=\"stableversion\">\n     <about label=\"About\" href=\"index.html\"/>\n-    <release label=\"Release Notes\" href=\"releaseNotes_0.94.html\"/>\n-    <changes label=\"Changes\" href=\"changes_0.94.html\"/>\n+    <release label=\"Release Notes\" href=\"releaseNotes_0.95beta.html\"/>\n+    <changes label=\"Changes\" href=\"changes_0.95beta.html\"/>\n     <knownissues label=\"Known Issues\" href=\"knownissues_overview.html\"/>\n     <upgrading label=\"Upgrading\" href=\"upgrading.html\"/>\n     \n@@ -125,9 +126,9 @@\n     \n   </trunk>\n   <!--\n-  END Version 0.94 documentation tab\n+  END Version 0.95 documentation tab\n   -->\n-  \n+\n   <!--\n   BEGIN Trunk documentation tab\n   -->\n@@ -154,6 +155,7 @@\n       <fonts label=\"Fonts\" href=\"fonts.html\"/>\n       <hyphenation label=\"Hyphenation\" href=\"hyphenation.html\"/>    \n       <extensions label=\"Extensions\" href=\"extensions.html\"/>\n+      <events label=\"Events\" href=\"events.html\"/>\n     </features>\n     \n   </trunk>\n@@ -231,37 +233,20 @@\n   END Development tab\n   -->\n \n-  <!-- references label=\"Related Projects\">\n-    <forrest label=\"Apache Forrest\" href=\"http://forrest.apache.org/\"/>\n-    <gump label=\"Apache Gump\" href=\"http://jakarta.apache.org/gump/\"/>\n-    <cocoon label=\"Apache Cocoon\" href=\"http://cocoon.apache.org/\"/>\n-    <lenya label=\"Apache Lenya\" href=\"http://cocoon.apache.org/lenya/\"/>\n-    <centipede label=\"Krysalis Centipede\" href=\"http://www.krysalis.org/\"/>\n-  </references -->\n-\n   <external-refs>\n-    <!--cocoon href=\"http://cocoon.apache.org/2.1/\">\n-      <ml href=\"mail-lists.html\"/>\n-      <actions href=\"userdocs/concepts/actions.html\"/>\n-      <catalogs href=\"userdocs/concepts/catalog.html\"/>\n-      <sitemap href=\"userdocs/concepts/sitemap.html\"/>\n-      <input-modules href=\"userdocs/concepts/modules.html\"/>\n-      <views href=\"userdocs/concepts/views.html\"/>\n-    </cocoon-->\n     <xmlgraphics.apache.org href=\"http://xmlgraphics.apache.org/\">\n       <fop href=\"fop/\"/>\n       <batik href=\"batik/\"/>\n+      <commons href=\"commons/\"/>\n     </xmlgraphics.apache.org>\n     <svn-repo href=\"http://svn.apache.org/repos/asf/xmlgraphics/fop/\">\n       <trunk href=\"trunk/\"/>\n-      <stable href=\"tags/fop-0_93\"/>\n+      <stable href=\"tags/fop-0_94\"/>\n       <maintenance href=\"branches/fop-0_20_2-maintain/\"/>\n     </svn-repo>\n+    <forrest.apache.org href=\"http://forrest.apache.org/\"/>\n     <xml.apache.org href=\"http://xml.apache.org/\">\n-      <forrest href=\"forrest/\"/>\n       <xindice href=\"xindice/\"/>\n-      <fop href=\"fop/\"/>\n-      <batik href=\"batik/\"/>\n       <commons href=\"commons/\">\n         <resolver href=\"components/resolver/\"/>\n       </commons>\n@@ -270,6 +255,8 @@\n     <xerces href=\"http://xerces.apache.org\"/>\n     <mail-archive href=\"http://marc.theaimsgroup.com\"/>\n     <xpath-tut href=\"http://www.w3schools.com/xpath/\"/>\n+    <commons-logging href=\"http://commons.apache.org/logging/\"/>\n+    <commons-io href=\"http://commons.apache.org/io/\"/>\n     <jakarta href=\"http://jakarta.apache.org/\">\n       <commons href=\"commons/\">\n         <io href=\"io/\"/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/site.xml",
                "sha": "b0a3214e7892b1ce9f3e9b05096132ccad18b37c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/status.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/status.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 4,
                "filename": "src/documentation/content/xdocs/status.xml",
                "patch": "@@ -27,13 +27,13 @@\n   <body>\n     <section>\n       <title>Status</title>\n-      <p>[last updated 9 January 2007]</p>\n+      <p>[last updated 4 March 2008]</p>\n       <figure width=\"585\" height=\"175\" src=\"images/track.png\" alt=\"Planning and branches of FOP development\"/>\n       <p>\n         This is the development status of Apache FOP. Development on\n         the maintenance branch where FOP 0.20.5 came from has been\n         halted. The code base has been largely redesigned. The new\n-        code base has reached release 0.94.\n+        code base has reached release 0.95.\n       </p>\n     </section>\n     <section>\n@@ -44,7 +44,7 @@\n         handle large documents.</p>\n       <p>The redesign of the code base has largely been completed. The\n         new code reached production quality with release 0.93. In the\n-        course of 2007 we plan to release version 1.0.</p>\n+        course of 2008 or 2009 we hope to release version 1.0.</p>\n       <p>\n         If you're looking for a long-term road-map we have to disappoint you. This is Open\n         Source and we're mostly volunteers working in their free time. What we have\n@@ -122,7 +122,7 @@\n           </tr>\n           <tr>\n             <td>Image Support</td>\n-            <td>stable, but in need of a redesign</td>\n+            <td>beta (recently rewritten)</td>\n           </tr>\n           <tr>\n             <td>Hyphenation Subsystem</td>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/status.xml",
                "sha": "fa3e2e6439e8edd2a3dc7ed468fef0be5af868f1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/tabs.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/tabs.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 7,
                "filename": "src/documentation/content/xdocs/tabs.xml",
                "patch": "@@ -21,14 +21,8 @@\n     \n <tabs software=\"FOP\" title=\"FOP\" copyright=\"@year@ The Apache Software Foundation\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n   <tab label=\"Home\" dir=\"\"/>\n-  <tab label=\"Version 0.93\" dir=\"0.93/\"/>\n   <tab label=\"Version 0.94\" dir=\"0.94/\"/>\n+  <tab label=\"Version 0.95beta\" dir=\"0.95/\"/>\n   <tab label=\"FOP Trunk\" dir=\"trunk/\"/>\n   <tab label=\"Development\" dir=\"dev/\"/>\n-  <!--\n-  <tab label=\"Design\" dir=\"design/\"/>\n-  -->\n-  <!--\n-  <tab label=\"Alt Design\" dir=\"design/alt.design/\"/>\n-  -->\n </tabs>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/tabs.xml",
                "sha": "a42fc9bd715cfd755ca8f7cc3d9b1216f542e945",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/team.xml",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/team.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 13,
                "filename": "src/documentation/content/xdocs/team.xml",
                "patch": "@@ -31,7 +31,6 @@\n       <title>Active Committers</title>\n       <note label=\"Important\">Please don't write to any developer directly if you need help on using FOP. Only if you submit questions to the <link href=\"maillist.html#fop-user\">FOP User Mailing List</link> will other FOP users be able to profit from answers given to your question. Another point is that a developer may have gone inactive or is on holidays in which case you may not get an answer in time.</note>\n       <ul>\n-        <li id=\"fb\"><link href=\"mailto:bckfnn@worldonline.dk\">Finn Bock</link> (FB)</li>\n         <li id=\"cb\"><link href=\"mailto:bowditch_chris@hotmail.com\">Chris Bowditch</link> (CB)\n             is a Java/VB Programmer from England.</li>\n         <li id=\"jb\"><link href=\"mailto:jay@bryantcs.com\">Jay Bryant</link> (JB) is a\n@@ -51,10 +50,6 @@\n         <li id=\"vh\"><link href=\"mailto:vhennebert@apache.org\">Vincent Hennebert</link>\n           (VH), a Java developer from France; with an interest in typography, and in using\n           Fop as a pdf renderer for book-like documents.</li>\n-        <li id=\"ph\"><link href=\"mailto:pherweg@web.de\">Peter Herweg</link> (PH) is helping to \n-            integrate the jfor project's RTF support into the upcoming FOP 1.0 version.\n-            Born in 1978, he has been serving as an application developer for a small \n-            industrial company in Germany since 1999.</li>\n         <li id=\"cl\"><link href=\"mailto:clay@apache.org\">Clay Leeds</link> (CL)\n           is a web/WAP/Palm developer from Laguna Beach, California, USA. A \n           recent XML/XSL-FO convert, he has been nit-picking FAQs &amp; assorted web \n@@ -70,25 +65,24 @@\n         </li>\n         <li id=\"jm\"><link href=\"mailto:jeremias@apache.org\">Jeremias M&#x00E4;rki</link> (JM)\n           is an independent software engineer and consultant from Lucerne, Switzerland. He's also\n-          the creator of <fork href=\"http://barcode4j.krysalis.org\">Barcode4J</fork>. \n+          the creator of <fork href=\"http://barcode4j.sourceforge.net\">Barcode4J</fork>. \n           See his <fork href=\"http://www.jeremias-maerki.ch\">home page</fork> for more information\n           about him.\n         </li>\n         <li id=\"sp\"><link href=\"mailto:spepping@apache.org\">Simon Pepping</link> (SP) came to FOP\n             from the TeX/LaTeX world. See his <fork href=\"http://www.leverkruid.eu\">home\n             page</fork> for some of his private projects.</li>\n         <li id=\"jp\"><link href=\"mailto:pietsch@apache.org\">J&#x00F6;rg Pietschmann</link> (JP)</li>\n-        <li id=\"ot\"><link href=\"mailto:olegt@apache.org\">Oleg Tkachenko</link> (OT)</li>\n+        <li id=\"mb\"><link href=\"mailto:max AT berger DOT name\">Max Berger</link> (MB) is currently a\n+          PostDoc pursuing an academic career in computer science. His main interest in FOP is to\n+          improve the DocBook to PDF tool-chain to produce high quality output, while still\n+          conforming to given style-guides. See his <link href=\"http://max.berger.name\">home\n+            page</link> for more information.</li>\n       </ul>\n     </section>\n     <section id=\"contribute-active\">\n       <title>Active Contributors</title>\n       <ul>\n-        <li id=\"mb\"><link href=\"mailto:max AT berger DOT name\">Max Berger</link> is currently a\n-          PostDoc pursuing an academic career in computer science. His main interest in FOP is to\n-          improve the DocBook to PDF tool-chain to produce high quality output, while still\n-          conforming to given style-guides. See his <link href=\"http://max.berger.name\">home\n-            page</link> for more information.</li>\n     <li id=\"lm\">Louis Masters</li>\n     <li id=\"mn\">Manoj Nair, Currently consulting for Sony Pictures Entertainment in Los Angeles, CA USA. Previously he worked with Java &amp; related technologies specializing in developing n-tier Web applications.</li>\n         <li id=\"rr\"><link href=\"mailto:renaud.richardet AT gmail DOT com\">Renaud Richardet</link> (RR)\n@@ -109,11 +103,16 @@\n     <section id=\"commit-inactive\">\n       <title>Inactive Committers</title>\n       <ul>\n+        <li id=\"fb\"><link href=\"mailto:bckfnn@worldonline.dk\">Finn Bock</link> (FB)</li>\n         <li id=\"kc\"><link href=\"mailto:kellyc@apache.org\">Kelly Campbell</link></li>\n         <li id=\"sc\"><link href=\"mailto:gears@apache.org\">Steven Coffman</link></li>\n         <li id=\"bd\"><link href=\"mailto:bdelacretaz@apache.org\">Bertrand Delacretaz</link></li>\n         <li id=\"te\"><link href=\"mailto:tore@apache.org\">Tore Engvig</link></li>\n         <li id=\"sg\"><link href=\"mailto:stanislav@apache.org\">Stanislav Gorkhover</link></li>\n+        <li id=\"ph\"><link href=\"mailto:pherweg@web.de\">Peter Herweg</link> (PH)<!-- is helping to \n+          integrate the jfor project's RTF support into the upcoming FOP 1.0 version.\n+          Born in 1978, he has been serving as an application developer for a small \n+          industrial company in Germany since 1999.--></li>\n         <li id=\"fj\"><link href=\"mailto:fotis@apache.org\">Fotis Jannidis</link></li>\n         <li id=\"kl\"><link href=\"mailto:klease@apache.org\">Karen Lease</link></li>\n         <li id=\"kll\"><link href=\"mailto:keiron@apache.org\">Keiron Liddle</link></li>\n@@ -122,6 +121,7 @@\n         <li id=\"jn\"><link href=\"mailto:jordan@apache.org\">Jordan Naftolin</link></li>\n         <li id=\"as\"><link href=\"mailto:arved@apache.org\">Arved Sandstrom</link></li>\n         <li id=\"es\"><link href=\"mailto:eschaeffer@apache.org\">Eric Schaeffer</link></li>\n+        <li id=\"ot\"><link href=\"mailto:olegt@apache.org\">Oleg Tkachenko</link> (OT)</li>\n         <li id=\"aw\"><link href=\"mailto:artw@apache.org\">Art Welch</link></li>\n         <li id=\"pbw\"><link href=\"mailto:pbwest@apache.org\">Peter B. West</link></li>\n       </ul>\n@@ -264,7 +264,7 @@\n           <td/>\n           <td/>\n           <td/>\n-          <td/>\n+          <td>X</td>\n           <td/>\n           <td/>\n           <td/>\n@@ -298,6 +298,19 @@\n           <td/>\n           <td/>\n         </tr>\n+        <tr>\n+          <td>AFP</td>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+          <td/>\n+        </tr>\n         <tr>\n           <td>Forrest</td>\n           <td/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/team.xml",
                "sha": "e493e7f11cad9b9e1a99bc952eb488d05625b28a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/compiling.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/compiling.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/content/xdocs/trunk/compiling.xml",
                "patch": "@@ -41,7 +41,7 @@\n       <section id=\"env-jdk\">\n         <title>JDK</title>\n         <p>\n-          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.3\n+          Building FOP requires a minimum Java Development Kit (JDK/SDK) of 1.4\n           (A Java Runtime Environment is not sufficient).\n         </p>\n       </section>\n@@ -59,7 +59,7 @@\n         <p>\n           The build script uses <a href=\"ext:ant\">Apache Ant</a>, a popular \n           Java-based build tool, which usually requires that the environment variable JAVA_HOME point to \n-          your local JDK root directory. This is true even if you use JDK 1.3 or above, which normally \n+          your local JDK root directory. This is true even if you use JDK 1.4 or above, which normally \n           does not need this setting.\n         </p>\n       </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/compiling.xml",
                "sha": "57761429f6e42ce5642968013acf3f88accc1054",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/configuration.xml",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/configuration.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/configuration.xml",
                "patch": "@@ -277,7 +277,23 @@\n       <output-profile>C:\\FOP\\Color\\EuropeISOCoatedFOGRA27.icc</output-profile>\n       \n       <fonts....\n-    </renderer>]]></source>\n+      </renderer>]]></source>\n+      <p>\n+        Some people don't have high requirements on color fidelity but instead want the smallest\n+        PDF file sizes possible. In this case it's possible to disable the default sRGB color space\n+        which XSL-FO requires. This will cause RGB colors to be generated as device-specific RGB.\n+        Please note that this option is unavailable (and will cause an error) if you enable\n+        PDF/A or PDF/X functionality or if you specify an output profile. This setting will make the\n+        PDF about 4KB smaller. To disable the sRGB color space add the following setting:\n+      </p>\n+      <source><![CDATA[\n+    <renderer mime=\"application/pdf\">\n+      <filterList...\n+      \n+      <disable-srgb-colorspace>true</disable-srgb-colorspace>\n+      \n+      <fonts....\n+      </renderer>]]></source>\n     </section>\n     <section id=\"ps-renderer\">\n       <title>Special Settings for the PostScript Renderer</title>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/configuration.xml",
                "sha": "e82a6e862c9557b9630c87083c8bcca54271a307",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/embedding.xml",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/embedding.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 14,
                "filename": "src/documentation/content/xdocs/trunk/embedding.xml",
                "patch": "@@ -166,7 +166,7 @@ try {\n       <title>Logging</title>\n       <p>\n         Logging is now a little different than it was in FOP 0.20.5. We've switched from\n-        Avalon Logging to <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a>.\n+        Avalon Logging to <a href=\"ext:commons-logging\">Jakarta Commons Logging</a>.\n         While with Avalon Logging the loggers were directly given to FOP, FOP now retrieves\n         its logger(s) through a statically available LogFactory. This is similar to the\n         general pattern that you use when you work with Apache Log4J directly, for example.\n@@ -175,24 +175,34 @@ try {\n         processing run anymore. The log output of multiple, simultaneously running FOP instances\n         is sent to the same logger.\n       </p>\n-      <note>\n-        We know this may be an issue in multi-threaded server environments if you'd like to \n-        know what's going on in every single FOP processing run. We're planning to add an\n-        additional feedback facility to FOP which can be used to obtain all sorts of specific\n-        feedback (validation messages, layout problems etc.). \"Static logging\" is mainly \n-        interesting for a developer working on FOP and for advanced users who are debugging \n-        FOP. We don't consider the logging output to be useful to normal FOP users. Please\n-        have some patience until we can add this feature or jump in and help us build it. We've\n-        set up a <a href=\"http://wiki.apache.org/xmlgraphics-fop/ProcessingFeedback\">Wiki page</a>\n-        which documents what we're going to build.\n-      </note>\n       <p>\n-        By default, <a href=\"ext:jakarta/commons/logging\">Jakarta Commons Logging</a> uses\n+        By default, <a href=\"ext:commons-logging\">Jakarta Commons Logging</a> uses\n         JDK logging (available in JDKs 1.4 or higher) as its backend. You can configure Commons\n         Logging to use an alternative backend, for example Log4J. Please consult the\n-        <a href=\"ext:jakarta/commons/logging\">documentation for Jakarta Commons Logging</a> on\n+        <a href=\"ext:commons-logging\">documentation for Jakarta Commons Logging</a> on\n         how to configure alternative backends.\n       </p>\n+      <p>\n+        As a result of the above we differentiate between two kinds of \"logging\":\n+      </p>\n+      <ul>\n+        <li>(FOP-)Developer-oriented logging</li>\n+        <li><a href=\"events.html\">User/Integrator-oriented feedback</a> (NEW!)</li>\n+      </ul>\n+      <p>\n+        The use of \"feedback\" instead of \"logging\" is intentional. Most people were using\n+        log output as a means to get feedback from events within FOP. Therefore, FOP now\n+        includes an <code>event</code> package which can be used to receive feedback from\n+        the layout engine and other components within FOP <strong>per rendering run</strong>.\n+        This feedback is not just some\n+        text but event objects with parameters so these events can be interpreted by code.\n+        Of course, there is a facility to turn these events into normal human-readable\n+        messages. For details, please read on on the <a href=\"events.html\">Events page</a>.\n+        This leaves normal logging to be mostly a thing used by the FOP developers\n+        although anyone can surely activate certain logging categories but the feedback\n+        from the loggers won't be separated by processing runs. If this is required,\n+        the <a href=\"events.html\">Events subsystem</a> is the right approach.\n+      </p>\n     </section>\n   \n     <section id=\"render\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/embedding.xml",
                "sha": "95e96104b393a505d44d94249b64c5e8a58ba2ea",
                "status": "modified"
            },
            {
                "additions": 428,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/events.xml",
                "changes": 428,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/events.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/trunk/events.xml",
                "patch": "@@ -0,0 +1,428 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<!DOCTYPE document PUBLIC \"-//APACHE//DTD Documentation V2.0//EN\" \"http://forrest.apache.org/dtd/document-v20.dtd\">\n+<document>\n+  <header>\n+    <title>Events/Processing Feedback</title>\n+    <version>$Revision: 634267 $</version>\n+  </header>\n+  <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        In versions until 0.20.5, FOP used\n+        <a href=\"http://excalibur.apache.org/framework/index.html\">Avalon-style Logging</a> where\n+        it was possible to supply a logger per processing run. During the redesign\n+        the logging infrastructure was switched over to\n+        <a href=\"http://commons.apache.org/logging/\">Commons Logging</a> which is (like Log4J or\n+        java.util.logging) a \"static\" logging framework (the logger is accessed through static\n+        variables). This made it very difficult in a multi-threaded system to retrieve information\n+        for a single processing run.\n+      </p>\n+      <p>\n+        With FOP's event subsystem, we'd like to close this gap again and even go further. The\n+        first point is to realize that we have two kinds of \"logging\". Firstly, we have the logging\n+        infrastructure for the (FOP) developer who needs to be able to enable finer log messages\n+        for certain parts of FOP to track down a certain problem. Secondly, we have the user who\n+        would like to be informed about missing images, overflowing lines or substituted fonts.\n+        These messages (or events) are targeted at less technical people and may ideally be\n+        localized (translated). Furthermore, tool and solution builders would like to integrate\n+        FOP into their own solutions. For example, an FO editor should be able to point the user\n+        to the right place where a particular problem occurred while developing a document template.\n+        Finally, some integrators would like to abort processing if a resource (an image or a font)\n+        has not been found, while others would simply continue. The event system allows to\n+        react on these events.\n+      </p>\n+      <p>\n+        On this page, we won't discuss logging as such. We will show how the event subsystem can\n+        be used for various tasks. We'll first look at the event subsystem from the consumer side.\n+        Finally, the production of events inside FOP will be discussed (this is mostly interesting\n+        for FOP developers only).\n+      </p>\n+    </section>\n+    <section id=\"consumer\">\n+      <title>The consumer side</title>\n+      <p>\n+        The event subsystem is located in the <code>org.apache.fop.events</code> package and its\n+        base is the <code>Event</code> class. An instance is created for each event and is sent\n+        to a set of <code>EventListener</code> instances by the <code>EventBroadcaster</code>.\n+        An <code>Event</code> contains:\n+      </p>\n+      <ul>\n+        <li>an event ID,</li>\n+        <li>a source object (which generated the event),</li>\n+        <li>a severity level (Info, Warning, Error and Fatal Error) and</li>\n+        <li>a map of named parameters.</li>\n+      </ul>\n+      <p>\n+        The <code>EventFormatter</code> class can be used to translate the events into\n+        human-readable, localized messages.\n+      </p>\n+      <p>\n+        A full example of what is shown here can be found in the\n+        <code>examples/embedding/java/embedding/events</code> directory in the FOP distribution.\n+        The example can also be accessed\n+        <a href=\"http://svn.apache.org/viewvc/xmlgraphics/fop/trunk/examples/embedding/java/embedding/events/\">via the web</a>.\n+      </p>\n+      <section id=\"write-listener\">\n+        <title>Writing an EventListener</title>\n+        <p>\n+          The following code sample shows a very simple EventListener. It basically just sends\n+          all events to System.out (stdout) or System.err (stderr) depending on the event severity.\n+        </p>\n+        <source><![CDATA[import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventFormatter;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/** A simple event listener that writes the events to stdout and stderr. */\n+public class SysOutEventListener implements EventListener {\n+\n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            System.out.println(\"[INFO ] \" + msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            System.out.println(\"[WARN ] \" + msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            System.err.println(\"[ERROR] \" + msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            System.err.println(\"[FATAL] \" + msg);\n+        } else {\n+            assert false;\n+        }\n+    }\n+}]]></source>\n+        <p>\n+          You can see that for every event the method <code>processEvent</code> of the\n+          <code>EventListener</code> will be called. Inside this method you can do whatever\n+          processing you would like including throwing a <code>RuntimeException</code>, if you want\n+          to abort the current processing run.\n+        </p>\n+        <p>\n+          The code above also shows how you can turn an event into a human-readable, localized\n+          message that can be presented to a user. The <code>EventFormatter</code> class does\n+          this for you. It provides additional methods if you'd like to explicitly specify\n+          the locale.\n+        </p>\n+        <p>\n+          It is possible to gather all events for a whole processing run so they can be\n+          evaluated afterwards. However, care should be taken about memory consumption since\n+          the events provide references to objects inside FOP which may themselves have\n+          references to other objects. So holding on to these objects may mean that whole\n+          object trees cannot be released!\n+        </p>\n+      </section>\n+      <section id=\"add-listener\">\n+        <title>Adding an EventListener</title>\n+        <p>\n+          To register the event listener with FOP, get the <code>EventBroadcaster</code> which\n+          is associated with the user agent (<code>FOUserAgent</code>) and add it there:\n+        </p>\n+        <source><![CDATA[FOUserAgent foUserAgent = fopFactory.newFOUserAgent();\n+foUserAgent.getEventBroadcaster().addEventListener(new SysOutEventListener());]]></source>\n+        <p>\n+          Please note that this is done separately for each processing run, i.e. for each\n+          new user agent.\n+        </p>\n+      </section>\n+      <section id=\"listener-example1\">\n+        <title>An additional listener example</title>\n+        <p>\n+          Here's an additional example of an event listener:\n+        </p>\n+        <p>\n+          By default, FOP continues processing even if an image wasn't found. If you have\n+          more strict requirements and want FOP to stop if an image is not available, you can\n+          do something like the following:\n+        </p>\n+        <source><![CDATA[public class MyEventListener implements EventListener {\n+\n+    public void processEvent(Event event) {\n+        if (\"org.apache.fop.events.ResourceEventProducer.imageNotFound\"\n+                .equals(event.getEventID())) {\n+            \n+            //Get the FileNotFoundException that's part of the event's parameters\n+            FileNotFoundException fnfe = (FileNotFoundException)event.getParam(\"fnfe\");\n+\n+            throw new RuntimeException(EventFormatter.format(event), fnfe);\n+        } else {\n+            //ignore all other events (or do something of your choice)\n+        }\n+    }\n+    \n+}]]></source>\n+        <p>\n+          This throws a <code>RuntimeException</code> with the <code>FileNotFoundException</code>\n+          as the cause. Further processing effectively stops in FOP. You can catch the exception\n+          in your code and react as you see necessary.\n+        </p>\n+      </section>\n+    </section>\n+    <section id=\"producer\">\n+      <title>The producer side (for FOP developers)</title>\n+      <p>\n+        This section is primarily for FOP and FOP plug-in developers. It describes how to use\n+        the event subsystem for producing events.\n+      </p>\n+      <note>\n+        The event package has been designed in order to be theoretically useful for use cases\n+        outside FOP. If you think this is interesting independently from FOP, please talk to\n+        <a href=\"mailto:fop-dev@xmlgraphics.apache.org\">us</a>.\n+      </note>\n+      <section id=\"basic-event-production\">\n+        <title>Producing and sending an event</title>\n+        <p>\n+          The basics are very simple. Just instantiate an <code>Event</code> object and fill\n+          it with the necessary parameters. Then pass it to the <code>EventBroadcaster</code>\n+          which distributes the events to the interested listeneners. Here's a code example:\n+        </p>\n+        <source><![CDATA[Event ev = new Event(this, \"complain\", EventSeverity.WARN,\n+        Event.paramsBuilder()\n+            .param(\"reason\", \"I'm tired\")\n+            .param(\"blah\", new Integer(23))\n+            .build());\n+EventBroadcaster broadcaster = [get it from somewhere];\n+broadcaster.broadcastEvent(ev);\n+]]></source>\n+        <p>\n+          The <code>Event.paramsBuilder()</code> is a\n+          <a href=\"http://en.wikipedia.org/wiki/Fluent_interface\">fluent interface</a>\n+          to help with the build-up of the parameters. You could just as well instantiate a\n+          <code>Map</code> (<code>Map&lt;String, Object&gt;</code>) and fill it with values.\n+        </p>\n+      </section>\n+      <section id=\"event-producer\">\n+        <title>The EventProducer interface</title>\n+        <p>\n+          To simplify event production, the event subsystem provides the <code>EventProducer</code>\n+          interface. You can create interfaces which extend <code>EventProducer</code>. These\n+          interfaces will contain one method per event to be generated. By contract, each event\n+          method must have as its first parameter a parameter named \"source\" (Type Object) which\n+          indicates the object that generated the event. After that come an arbitrary number of\n+          parameters of any type as needed by the event.\n+        </p>\n+        <p>\n+          The event producer interface does not need to have any implementation. The implementation\n+          is produced at runtime by a dynamic proxy created by <code>DefaultEventBroadcaster</code>.\n+          The dynamic proxy creates <code>Event</code> instances for each method call against\n+          the event producer interface. Each parameter (except \"source\") is added to the event's\n+          parameter map.\n+        </p>\n+        <p>\n+          To simplify the code needed to get an instance of the event producer interface it is\n+          suggested to create a public inner provider class inside the interface.\n+        </p>\n+        <p>\n+          Here's an example of such an event producer interface:\n+        </p>\n+        <source><![CDATA[public interface MyEventProducer extends EventProducer {\n+\n+    public class Provider {\n+        \n+        public static MyEventProducer get(EventBroadcaster broadcaster) {\n+            return (MyEventProducer)broadcaster.getEventProducerFor(MyEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Complain about something.\n+     * @param source the event source\n+     * @param reason the reason for the complaint\n+     * @param blah the complaint\n+     * @event.severity WARN\n+     */\n+    void complain(Object source, String reason, int blah);\n+    \n+}]]></source>\n+        <p>\n+          To produce the same event as in the first example above, you'd use the following code:\n+        </p>\n+        <source><![CDATA[EventBroadcaster broadcaster = [get it from somewhere];\n+TestEventProducer producer = TestEventProducer.Provider.get(broadcaster);\n+producer.complain(this, \"I'm tired\", 23);]]></source>\n+      </section>\n+      <section id=\"event-model\">\n+        <title>The event model</title>\n+        <p>\n+          Inside an invocation handler for a dynamic proxy, there's no information about\n+          the names of each parameter. The JVM doesn't provide it. The only thing you know is\n+          the interface and method name. In order to properly fill the <code>Event</code>'s\n+          parameter map we need to know the parameter names. These are retrieved from an\n+          event object model. This is found in the <code>org.apache.fop.events.model</code>\n+          package. The data for the object model is retrieved from an XML representation of the\n+          event model that is loaded as a resource. The XML representation is generated using an\n+          Ant task at build time (<code>ant resourcegen</code>). The Ant task (found in\n+          <code>src/codegen/java/org/apache/fop/tools/EventProducerCollectorTask.java</code>)\n+          scans FOP's sources for descendants of the <code>EventProducer</code> interface and\n+          uses <a href=\"http://qdox.codehaus.org/\">QDox</a> to parse these interfaces.\n+        </p>\n+        <p>\n+          The event model XML files are generated during build by the Ant task mentioned above when\n+          running the \"resourcegen\" task. So just run <code>\"ant resourcegen\"</code> if you receive\n+          a <code>MissingResourceException</code> at runtime indicating that\n+          <code>\"event-model.xml\"</code> is missing.\n+        </p>\n+        <p>\n+          Primarily, the QDox-based collector task records the parameters' names and types.\n+          Furthermore, it extracts additional attributes embedded as Javadoc comments from\n+          the methods. At the moment, the only such attribute is \"@event.severity\" which indicates\n+          the default event severity (which can be changed by event listeners). The example event\n+          producer above shows the Javadocs for an event method.\n+        </p>\n+        <p>\n+          There's one more information that is extracted from the event producer information for\n+          the event model: an optional primary exception. The first exception in the \"throws\"\n+          declaration of an event method is noted. It is used to throw an exception from\n+          the invocation handler if the event has an event severity of \"FATAL\" when all\n+          listeners have been called (listeners can update the event severity). Please note\n+          that an implementation of\n+          <code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code> has to be\n+          registered for the <code>EventExceptionManager</code> to be able to construct the\n+          exception from an event.\n+        </p>\n+        <p>\n+          For a given application, there can be multiple event models active at the same time.\n+          In FOP, each renderer is considered to be a plug-in and provides its own specific\n+          event model. The individual event models are provided through an\n+          <code>EventModelFactory</code>. This interface is implemented for each event model\n+          and registered through the service provider mechanism\n+          (see the <a href=\"#plug-ins\">plug-ins section</a> for details).\n+        </p>\n+      </section>\n+      <section id=\"event-severity\">\n+        <title>Event severity</title>\n+        <p>\n+          Four different levels of severity for events has been defined:\n+        </p>\n+        <ol>\n+          <li>INFO: informational only</li>\n+          <li>WARN: a Warning</li>\n+          <li>ERROR: an error condition from which FOP can recover. FOP will continue processing.</li>\n+          <li>FATAL: a fatal error which causes an exception in the end and FOP will stop processing.</li>\n+        </ol>\n+        <p>\n+          Event listeners can choose to ignore certain events based on their event severity.\n+          Please note that you may recieve an event \"twice\" in a specific case: if there is\n+          a fatal error an event is generated and sent to the listeners. After that an exception\n+          is thrown with the same information and processing stops. If the fatal event is\n+          shown to the user and the following exception is equally presented to the user it\n+          may appear that the event is duplicated. Of course, the same information is just\n+          published through two different channels.\n+        </p>\n+      </section>\n+      <section id=\"plug-ins\">\n+        <title>Plug-ins to the event subsystem</title>\n+        <p>\n+          The event subsystem is extensible. There are a number of extension points:\n+        </p>\n+        <ul>\n+          <li>\n+            <strong><code>org.apache.fop.events.model.EventModelFactory</code>:</strong> Provides\n+            an event model to the event subsystem.\n+          </li>\n+          <li>\n+            <strong><code>org.apache.fop.events.EventExceptionManager$ExceptionFactory</code>:</strong>\n+            Creates exceptions for events, i.e. turns an event into a specific exception.\n+          </li>\n+        </ul>\n+        <p>\n+          The names in bold above are used as filenames for the service provider files that\n+          are placed in the <code>META-INF/services</code> directory. That way, they are\n+          automatically detected. This is a mechanism defined by the\n+          <a href=\"http://java.sun.com/j2se/1.4.2/docs/guide/jar/jar.html#Service%20Provider\">JAR file specification</a>.\n+        </p>\n+      </section>\n+      <section id=\"l10n\">\n+        <title>Localization (L10n)</title>\n+        <p>\n+          One goal of the event subsystem was to have localized (translated) event messages.\n+          The <code>EventFormatter</code> class can be used to convert an event to a\n+          human-readable message. Each <code>EventProducer</code> can provide its own XML-based\n+          translation file. If there is none, a central translation file is used, called\n+          \"EventFormatter.xml\" (found in the same directory as the <code>EventFormatter</code>\n+          class).\n+        </p>\n+        <p>\n+          The XML format used by the <code>EventFormatter</code> is the same as\n+          <a href=\"ext:cocoon\">Apache Cocoon's</a> catalog format. Here's an example:\n+        </p>\n+        <source><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">\n+    [ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.explicitTableColumnsRequired\">\n+    RTF output requires that all table-columns for a table are defined. Output will be incorrect.{{locator}}\n+  </message>\n+  <message key=\"org.apache.fop.render.rtf.RTFEventProducer.ignoredDeferredEvent\">\n+    Ignored deferred event for {node} ({start,if,start,end}).{{locator}}\n+  </message>\n+</catalogue>\n+]]></source>\n+        <p>\n+          The example (extracted from the RTF handler's event producer) has message templates for\n+          two event methods. The class used to do variable replacement in the templates is\n+          <code>org.apache.fop.util.text.AdvancedMessageFormat</code> which is more powerful\n+          than the <code>MessageFormat</code> classes provided by the Java class library\n+          (<code>java.util.text</code> package).\n+        </p>\n+        <p>\n+          \"locator\" is a template that is reused by the other message templates\n+          by referencing it through \"{{locator}}\". This is some kind of include command.\n+        </p>\n+        <p>\n+          Normal event parameters are accessed by name inside single curly braces, for example:\n+          \"{node}\". For objects, this format just uses the <code>toString()</code> method to turn\n+          the object into a string, unless there is an <code>ObjectFormatter</code> registered\n+          for that type (there's an example for <code>org.xml.sax.Locator</code>).\n+        </p>\n+        <p>\n+          The single curly braces pattern supports additional features. For example, it is possible\n+          to do this: \"{start,if,start,end}\". \"if\" here is a special field modifier that evaluates\n+          \"start\" as a boolean and if that is true returns the text right after the second comma\n+          (\"start\"). Otherwise it returns the text after the third comma (\"end\"). The \"equals\"\n+          modifier is similar to \"if\" but it takes as an additional (comma-separated) parameter\n+          right after the \"equals\" modifier, a string that is compared to the value of the variable.\n+          An example: {severity,equals,EventSeverity:FATAL,,some text} (this adds \"some text\" if\n+          the severity is not FATAL).\n+        </p>\n+        <p>\n+          Additional such modifiers can be added by implementing the\n+          <code>AdvancedMessageFormat$Part</code> and <code>AdvancedMessageFormat$PartFactory</code>\n+          interfaces.\n+        </p>\n+        <p>\n+          Square braces can be used to specify optional template sections. The whole section will\n+          be omitted if any of the variables used within are unavailable. Pipe (|) characters can\n+          be used to specify alternative sub-templates (see \"locator\" above for an example).\n+        </p>\n+        <p>\n+          Developers can also register a function (in the above example:\n+          <code>{#gatherContextInfo})</code>\n+          to do more complex information rendering. These functions are implementations of the\n+          <code>AdvancedMessageFormat$Function</code> interface. Please take care that this is\n+          done in a locale-independent way as there is no locale information available, yet.\n+        </p>\n+      </section>\n+    </section>\n+  </body>\n+</document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/events.xml",
                "sha": "51a1bb6cc37a5e96f214df76bae2b9ce1c2d8ba4",
                "status": "added"
            },
            {
                "additions": 116,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/extensions.xml",
                "changes": 119,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/extensions.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/trunk/extensions.xml",
                "patch": "@@ -63,8 +63,7 @@\n       </section>\n       <section id=\"named-destinations\">\n         <title>Anchors or Named Destinations</title>\n-        <p>This extension element hasn't been reimplemented for the redesigned code, yet.</p>\n-        <!--p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n+        <p>Use the fox:destination element to define \"named destinations\" inside a PDF document.\n These are useful as fragment identifiers, e.g. \"http://server/document.pdf#anchor-name\".\n fox:destination elements can be placed almost anywhere in the fo document, including a child of\n root, a block-level element, or an inline-level element.\n@@ -77,7 +76,7 @@ PDF document. The fox:destination simply gives that view an independent name.\n <fo:block id=\"table-of-contents\">Table of Contents</fo:block>]]></source>\n         <warning>It is possible that in some future release of FOP, <em>all </em>elements with\n \"id\" attributes will generate named-destinations, which will eliminate the need for\n-fox:destination.</warning-->\n+fox:destination.</warning>\n       </section>\n       <section id=\"table-continue-label\">\n         <title>Table Continuation Label</title>\n@@ -115,6 +114,120 @@ to following pages. Here is an example of FO code creating such a table-header:<\n           or list-block.\n         </p>\n       </section>\n+      <section id=\"external-document\">\n+        <title>fox:external-document</title>\n+        <note>\n+          This feature is incomplete. Support for multi-page documents will be added shortly.\n+          At the moment, only single-page images will work. And this will not work with RTF output.\n+        </note>\n+        <p>\n+          This is a proprietary extension element which allows to add whole images as pages to\n+          an FO document. For example, if you have a scanned document or a fax as multi-page TIFF\n+          file, you can append or insert this document using the <code>fox:external-document</code>\n+          element. Each page of the external document will create one full page in the target\n+          format.\n+        </p>\n+        <p>\n+          The <code>fox:external-document</code> element is structurally a peer to\n+          <code>fo:page-sequence</code>, so wherever you can put an <code>fo:page-sequence</code>\n+          you could also place a <code>fox:external-document</code>.\n+          Therefore, the specified contents for <code>fo:root</code> change to: \n+        </p>\n+        <p>\n+          <code>\n+            (layout-master-set, declarations?, bookmark-tree?, (page-sequence|page-sequence-wrapper|fox:external-document|fox:destination)+)\n+          </code>\n+        </p>\n+        <section>\n+          <title>Specification</title>\n+          <p>\n+            The <code>fox:external-document</code> extension formatting object is used to specify\n+            how to create a (sub-)sequence of pages within a document. The content of these pages\n+            comes from the individual subimages/pages of an image or paged document (for example:\n+            multi-page TIFF in the form of faxes or scanned documents, or PDF files). The\n+            formatting object creates the necessary areas to display one image per page.\n+          </p>\n+          <p>\n+            In terms of page numbers, the behaviour is the same as for\n+            <code>fo:page-sequence</code>. The placement of the image inside the page is similar\n+            to that of <code>fo:external-graphic</code> or <code>fo:instream-foreign-object</code>,\n+            i.e. the viewport (and therefore the page size) is defined by either the intrinsic\n+            size of the image or by the size properties that apply to this formatting object.\n+          </p>\n+          <p>Content: EMPTY</p>\n+          <p>The following properties apply to this formatting object:</p>\n+          <ul>\n+            <li>(Common Accessibility Properties) (not implemented, yet)</li>\n+            <li>(Common Aural Properties) (not implemented, yet)</li>\n+            <li>block-progression-dimension</li>\n+            <li>content-height</li>\n+            <li>content-type</li>\n+            <li>content-width</li>\n+            <li>display-align</li>\n+            <li>height</li>\n+            <li>id</li>\n+            <li>inline-progression-dimension</li>\n+            <li>overflow</li>\n+            <li>pages: &lt;page-set&gt; (see below) (not implemented, yet)</li>\n+            <li>reference-orientation</li>\n+            <li>scaling</li>\n+            <li>scaling-method</li>\n+            <li>src</li>\n+            <li>text-align</li>\n+            <li>width</li>\n+          </ul>\n+          <p>\n+            Datatype \"page-set\": Value: auto | &lt;integer-range&gt;,\n+            Default: \"auto\" which means all pages/subimages of the document.\n+            &lt;integer-range&gt; allows values such as \"7\" or \"1-3\"\n+          </p>\n+          <note>\n+            <code>fox:external-document</code> is not suitable for concatenating FO documents.\n+            For this, XInclude is recommended.\n+          </note>\n+        </section>\n+      </section>\n+      <section id=\"transform\">\n+        <title>Free-form Transformation for fo:block-container</title>\n+        <p>\n+          For <code>fo:block-container</code> elements whose <code>absolute-position</code> set to\n+          \"absolute\" or \"fixed\" you can use the extension attribute <code>fox:transform</code>\n+          to apply a free-form transformation to the whole block-container. The content of the\n+          <code>fox:transform</code> attribute is the same as for\n+          <a href=\"http://www.w3.org/TR/SVG/coords.html#TransformAttribute\">SVG's transform attribute</a>.\n+          The transformation specified here is performed in addition to other implicit\n+          transformations of the block-container (resulting from top, left and other properties)\n+          and after them.\n+        </p>\n+        <p>\n+          Examples: <code>fox:transform=\"rotate(45)\"</code> would rotate the block-container\n+          by 45 degrees clock-wise around its upper-left corner.\n+          <code>fox:transform=\"translate(10000,0)\"</code> would move the block-container to the\n+          right by 10 points (=10000 millipoints, FOP uses millipoints internally!).\n+        </p>\n+        <note>\n+          This extension attribute doesn't work for all output formats! It's currently only\n+          supported for PDF, PS and Java2D-based renderers.\n+        </note>\n+      </section>\n+      <section id=\"color-functions\">\n+        <title>Color functions</title>\n+        <p>\n+          XSL-FO supports specifying color using the rgb(), rgb-icc() and system-color() functions.\n+          Apache FOP provides additional color functions for special use cases. Please note that\n+          using these functions compromises the interoperability of an FO document.\n+        </p>\n+        <section id=\"color-function-cmyk\">\n+          <title>cmyk()</title>\n+          <p><code>color cmyk(numeric, numeric, numeric, numeric)</code></p>\n+          <p>\n+            This function will construct a color in device-specific CMYK color space. The numbers\n+            must be between 0.0 and 1.0. For output formats that don't support device-specific\n+            color space the CMYK value is converted to an sRGB value.\n+          </p>\n+        </section>\n+      </section>\n+      \n     </section>\n   </body>\n </document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/extensions.xml",
                "sha": "483866e61d7895f12fa7ac485b0c76f90c047425",
                "status": "modified"
            },
            {
                "additions": 232,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/fonts.xml",
                "changes": 345,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/fonts.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 113,
                "filename": "src/documentation/content/xdocs/trunk/fonts.xml",
                "patch": "@@ -31,11 +31,6 @@\n   <body>\n     <section id=\"intro\">\n       <title>Summary</title>\n-      <note>The FOP Font subsystem is currently undergoing a significant change.\n-        The details provided here especially related to the generation of FOP Font\n-        Metrics files and the FOP Font configuration are likely to change substantially\n-        in the future.\n-      </note>\n       <p>The following table summarizes the font capabilities of the various FOP renderers:</p>\n       <table>\n         <tr>\n@@ -59,22 +54,22 @@\n           <td>yes</td>\n           <td>yes</td>\n         </tr>\n-        <!--tr> NOT AVAILABLE YET!!!\n+        <tr>\n           <td>PCL</td>\n           <td>yes (modified)</td>\n+          <td>yes (painted as bitmaps)</td>\n+          <td>yes (painted as bitmaps)</td>\n           <td>no</td>\n-          <td>no</td>\n-          <td>no</td>\n-        </tr-->\n+        </tr>\n         <tr>\n-          <td>TXT</td>\n-          <td>yes (used for layout but not for output)</td>\n+          <td>AFP</td>\n           <td>no</td>\n-          <td>yes (used for layout but not for output)</td>\n           <td>no</td>\n+          <td>yes</td>\n+          <td>yes</td>\n         </tr>\n         <tr>\n-          <td>AWT</td>\n+          <td>Java2D/AWT/Bitmap</td>\n           <td>if available from OS</td>\n           <td>yes</td>\n           <td>yes</td>\n@@ -95,19 +90,26 @@\n           <td>n/a</td>\n         </tr>\n         <tr>\n+          <td>TXT</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+          <td>yes (used for layout but not for output)</td>\n+          <td>no</td>\n+        </tr>\n+        <!--tr> NOT AVAILABLE\n           <td>MIF</td>\n           <td>n/a (font metrics not needed)</td>\n           <td>n/a</td>\n           <td>n/a</td>\n           <td>n/a</td>\n-        </tr>\n-        <tr>\n+        </tr-->\n+        <!--tr> NOT AVAILABLE\n           <td>SVG</td>\n           <td>if available from OS</td>\n           <td>yes</td>\n           <td>no</td>\n           <td>no</td>\n-        </tr>\n+        </tr-->\n         <tr>\n           <td>XML</td>\n           <td>yes</td>\n@@ -120,8 +122,8 @@\n     <section>\n       <title>Base-14 Fonts</title>\n       <p>\n-        The Adobe PDF Specification specifies a set of 14 fonts that must be\n-        available to every PDF reader:\n+        The Adobe PostScript and PDF Specification specify a set of 14 fonts that must be\n+        available to every PostScript interpreter and PDF reader:\n         Helvetica (normal, bold, italic, bold italic),\n         Times (normal, bold, italic, bold italic),\n         Courier (normal, bold, italic, bold italic),\n@@ -147,73 +149,133 @@\n       </p>\n     </section>\n     <section id=\"awt\">\n-      <title>AWT/Operating System Fonts</title>\n-      <p>The AWT family of renderers (AWT, Print, SVG), use the Java AWT libraries for font metric information. Through operating system registration, the AWT libraries know what fonts are available on the system, and the font metrics for each one.</p>\n+      <title>Java2D/AWT/Operating System Fonts</title>\n+      <p>\n+        The Java2D family of renderers (Java2D, AWT, Print, TIFF, PNG), use the\n+        Java AWT subsystem for font metric information. Through operating system\n+        registration, the AWT subsystem knows what fonts are available on the system,\n+        and the font metrics for each one.\n+      </p>\n+      <p>\n+        When working with one of these output formats and you're missing a font, just\n+        install it in your operating system and they should be available for these\n+        renderers. Please note that this is not true for other output formats such as\n+        PDF or PostScript.\n+      </p>\n     </section>\n+    \n     <section id=\"custom\">\n       <title>Custom Fonts</title>\n-      <p>Support for custom fonts is added by creating font metric files (written in XML) from the actual font files, and registering them with FOP. Currently only Type 1 and TrueType fonts can be added.\n-More information about fonts can be found at:</p>\n+      <p>\n+        Support for custom fonts is highly output format dependent (see above table).\n+        This section shows how to add Type 1 and TrueType fonts to the PDF, PostScript and\n+        Java2D-based renderers. Other renderers (like AFP) support other font formats. Details\n+        in this case can be found on the page about <a href=\"output.html\">output formats</a>.\n+      </p>\n+      <p>\n+        Prior to FOP version 0.94, it was always necessary to create an XML font metrics file\n+        if you wanted to add a custom font. This unconvenient step has been removed and in\n+        addition to that, FOP supports auto-registration of fonts, i.e. FOP can find fonts\n+        installed in your operating system or can scan user-specified directories for fonts.\n+        Font registration via XML font metrics file is still supported and may still be necessary\n+        for some very special cases as fallback variant while we stabilize font auto-detection.\n+      </p>\n+      <p>\n+        Basic information about fonts can be found at:\n+      </p>\n       <ul>\n         <li><a href=\"http://partners.adobe.com/asn/developer/type/ftypes.html\">Adobe font types</a></li>\n         <li><a href=\"http://partners.adobe.com/asn/developer/technotes/fonts.html\">Adobe Font Technote</a></li>\n       </ul>\n+    </section>\n+    \n+    <section id=\"basics\">\n+      <title>Basic font configuration</title>\n+      <p>\n+        If you want FOP to use custom fonts, you need to tell it where to find them. This\n+        is done in the configuration file and once per renderer (because each output format\n+        is a little different). In the basic form, you can either tell FOP to find your\n+        operating system fonts or you can specify directories that it will search for\n+        support fonts. These fonts will then automatically be registered.\n+      </p>\n+      <source><![CDATA[\n+<renderers>\n+   <renderer mime=\"application/pdf\">\n+      <fonts>\n+         <!-- register all the fonts found in a directory -->\n+         <directory>C:\\MyFonts1</directory>\n+  \n+         <!-- register all the fonts found in a directory and all of its sub directories (use with care) -->\n+         <directory recursive=\"true\">C:\\MyFonts2</directory>\n+\n+         <!-- automatically detect operating system installed fonts -->\n+         <auto-detect/>  \n+      </fonts>\n+   </renderer>\n+</renderers>]]></source>\n+      <note>\n+        Review the documentation for <a href=\"configuration.html\">FOP Configuration</a>\n+        for instructions on making the FOP configuration available to FOP when it runs.\n+        Otherwise, FOP has no way of finding your custom font information. It is currently\n+        not possible to easily configure fonts from Java code.\n+      </note>\n+    </section>\n+    \n+    <section id=\"advanced\">\n+      <title>Advanced font configuration</title>\n+      <p>\n+        The instructions found above should be sufficient for most users. Below are some\n+        additional instructions in case the basic font configuration doesn't lead to\n+        the desired results.\n+      </p>\n       <section id=\"type1-metrics\">\n         <title>Type 1 Font Metrics</title>\n         <p>FOP includes PFMReader, which reads the PFM file that normally comes with a Type 1 font, and generates an appropriate font metrics file for it.\n-To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n-        <p>Windows (on JDK 1.4 and later):</p>\n+          To use it, run the class org.apache.fop.fonts.apps.PFMReader:</p>\n+        <p>Windows:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Windows (on JDK 1.3.x):</p>\n-        <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar;lib\\xml-apis.jar;\n-         lib\\xercesImpl.jar;lib\\xalan.jar;lib\\serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.4 and later):</p>\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+        <p>Unix:</p>\n         <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n-        <p>Unix (on JDK 1.3.1):</p>\n-        <source>java -cp build/fop.jar:lib/avalon-framework.jar:lib/commons-logging.jar:lib/commons-io.jar:lib/xml-apis.jar:\n-         lib/xercesImpl.jar:lib/xalan.jar:lib/serializer.jar\n-           org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n+          org.apache.fop.fonts.apps.PFMReader [options] pfm-file xml-file</source>\n         <p>PFMReader [options]:</p>\n         <ul>\n           <li><strong>-fn &lt;fontname&gt;</strong> By default, FOP uses the fontname from the\n-.pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n-chosen. This may be useful in some cases to ensure that applications using the output document\n-(Acrobat Reader for example) use the embedded font instead of a local font with the same\n-name.</li>\n+            .pfm file when embedding the font. Use the \"-fn\" option to override this name with one you have\n+            chosen. This may be useful in some cases to ensure that applications using the output document\n+            (Acrobat Reader for example) use the embedded font instead of a local font with the same\n+            name.</li>\n         </ul>\n         <note>The classpath in the above example has been simplified for readability.\n-You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n-xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n+          You will have to adjust the classpath to the names of the actual JAR files in the lib directory.\n+          xml-apis.jar, xercesImpl.jar, xalan.jar and serializer.jar are not necessary for JDK version 1.4 or later.</note>\n         <note>The tool will construct some values (FontBBox, StemV and ItalicAngle) based on assumptions and calculations which are only an approximation to the real values.\n-FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n-The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n-The constructed values however appear to have no visible influence.</note>\n+          FontBBox and Italic Angle can be found in the human-readable part of the PFB file or in the AFM file.\n+          The PFMReader tool does not yet interpret PFB or AFM files, so if you want to be correct, you may have to adjust the values in the XML file manually.\n+          The constructed values however appear to have no visible influence.</note>\n       </section>\n       <section id=\"truetype-metrics\">\n         <title>TrueType Font Metrics</title>\n         <p>FOP includes TTFReader, which reads the TTF file and generates an appropriate font metrics file for it.\n-Use it in a similar manner to PFMReader.\n-For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n+          Use it in a similar manner to PFMReader.\n+          For example, to create such a metrics file in Windows from the TrueType font at c:\\myfonts\\cmr10.ttf:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader [options]\n-             C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n+          org.apache.fop.fonts.apps.TTFReader [options]\n+          C:\\myfonts\\cmr10.ttf ttfcm.xml</source>\n         <p>TTFReader [options]:</p>\n         <ul>\n           <li><strong>-d &lt;DEBUG | INFO &gt;</strong> Sets the debug level (default is\n-INFO).</li>\n+            INFO).</li>\n           <li><strong>-fn &lt;fontname&gt;</strong> Same as for PFMReader.</li>\n           <li><strong>-ttcname &lt;fontname&gt;</strong> If you're reading data from a\n-TrueType Collection (.ttc file) you must specify which font from the collection you will read\n-metrics from.\n-If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n+            TrueType Collection (.ttc file) you must specify which font from the collection you will read\n+            metrics from.\n+            If you read from a .ttc file without this option, the fontnames will be listed for you.</li>\n           <li><strong>-enc ansi</strong> Creates a WinAnsi-encoded font metrics file.\n-Without this option, a CID-keyed font metrics file is created.\n-The table below summarizes the differences between these two encoding options as currently\n-used within FOP.\n-Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n+            Without this option, a CID-keyed font metrics file is created.\n+            The table below summarizes the differences between these two encoding options as currently\n+            used within FOP.\n+            Please note that this information only applies to TrueType fonts and TrueType collections:</li>\n         </ul>\n         <table id=\"ttf-encoding\">\n           <tr>\n@@ -226,17 +288,6 @@ Please note that this information only applies to TrueType fonts and TrueType co\n             <td>Limited to WinAnsi character set, which is roughly equivalent to iso-8889-1.</td>\n             <td>Limited only by the characters in the font itself.</td>\n           </tr>\n-          <tr>\n-            <td>Character Encoding in the Output Document.</td>\n-            <td>Correct.</td>\n-            <td>Never correct. Search, index, and cut-and-paste operations in the output document\n-will produce incorrect results.</td>\n-          </tr>\n-          <tr>\n-            <td>Character Display</td>\n-            <td>Correct.</td>\n-            <td>Correct, but copy/paste won't work in Acrobat Reader. (FOP currently doesn't emit the /ToUnicode table which is necessary for copy/paste to work.)</td>\n-          </tr>\n           <tr>\n             <td>Embedding the Font</td>\n             <td>Optional.</td>\n@@ -245,51 +296,58 @@ will produce incorrect results.</td>\n         </table>\n         <warning>\n           You may experience failures with certain TrueType fonts, especially if they don't contain \n-          the so-called \"cmap\" table. TTFReader can currently not deal with font like this.\n+          the so-called Unicode \"cmap\" table. TTFReader can currently not deal with font like this.\n         </warning>\n       </section>\n       <section id=\"truetype-collections-metrics\">\n         <title>TrueType Collections Font Metrics</title>\n         <p>TrueType collections (.ttc files) contain more than one font.\n-To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n+          To create metrics files for these fonts, you must specify which font in the collection should be generated, by using the \"-ttcname\" option with the TTFReader.</p>\n         <p>To get a list of the fonts in a collection, just start the TTFReader as if it were a normal TrueType file (without the -ttcname option).\n-It will display all of the font names and exit with an Exception.</p>\n+          It will display all of the font names and exit with an Exception.</p>\n         <p>Here is an example of generating a metrics file for a .ttc file:</p>\n         <source>java -cp build\\fop.jar;lib\\avalon-framework.jar;lib\\commons-logging.jar;lib\\commons-io.jar\n-           org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n-             msmincho.ttc msminch.xml</source>\n+          org.apache.fop.fonts.apps.TTFReader -ttcname \"MS Mincho\"\n+          msmincho.ttc msminch.xml</source>\n+        <p>\n+          Alternatively, the individual sub-fonts of a TrueType Collections can be selected\n+          using the \"sub-font\" attribute on the \"font\" element. That means that generating\n+          an XML font metrics file for TrueType collections is not necessary anymore.\n+        </p>\n       </section>\n       <section id=\"register\">\n         <title>Register Fonts with FOP</title>\n         <p>You must tell FOP how to find and use the font metrics files by registering them in the <a href=\"configuration.html\">FOP Configuration</a>. Add entries for your custom fonts, regardless of font type, to the configuration file in a manner similar to the following:</p>\n         <source><![CDATA[\n-<fonts>\n-  <!-- register a particular font -->\n-  <font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\"\n-      embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n-     <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n-  </font>\n+<renderers>\n+   <renderer mime=\"application/pdf\">\n+      <fonts>\n+         <!-- register a particular font -->\n+         <font metrics-url=\"file:///C:/myfonts/FTL_____.xml\" kerning=\"yes\" embed-url=\"file:///C:/myfonts/FTL_____.pfb\">\n+            <font-triplet name=\"FrutigerLight\" style=\"normal\" weight=\"normal\"/>\n+         </font>\n   \n-  <!-- register all the fonts found in a directory -->\n-  <directory>C:\\MyFonts1</directory>\n+         <!-- register all the fonts found in a directory -->\n+         <directory>C:\\MyFonts1</directory>\n   \n-  <!-- register all the fonts found in a directory\n-       and all of its sub directories (use with care) -->\n-  <directory recursive=\"true\">C:\\MyFonts2</directory>\n+         <!-- register all the fonts found in a directory and all of its sub directories (use with care) -->\n+         <directory recursive=\"true\">C:\\MyFonts2</directory>\n \n-  <!-- automatically detect operating system installed fonts -->\n-  <auto-detect/>  \n-</fonts>]]></source>\n-        <note>Review the documentation for <a href=\"configuration.html\">FOP Configuration</a> for instructions on making the FOP configuration available to FOP when it runs. Otherwise, FOP has no way of finding your custom font information.</note>\n+         <!-- automatically detect operating system installed fonts -->\n+         <auto-detect/>  \n+      </fonts>\n+   </renderer>\n+</renderers>]]></source>\n         <ul>\n           <li>\n             URLs are used to access the font metric and font files.\n             Relative URLs are resolved relative to the font-base property (or base) if available.\n             See <a href=\"configuration.html\">FOP: Configuration</a> for more information.\n           </li>\n+          <li>The \"metrics-url\" attribute is generally not necessary except if you run into problems with certain fonts.</li>\n           <li>Either an \"embed-url\" or a \"metrics-url\" must be specified for font tag configurations.</li>\n-          <li>The font \"kerning\" attribute is optional.</li>\n-          <li>If embedding is off, the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n+          <li>The font \"kerning\" attribute is optional. Default is \"true\".</li>\n+          <li>If embedding is off (i.e. embed-url is not set), the output will position the text correctly (from the metrics file), but it will not be displayed or printed correctly unless the viewer has the applicable font available to their local system.</li>\n           <li>When setting the \"embed-url\" attribute for Type 1 fonts, be sure to specify the PFB (actual font data), not PFM (font metrics) file that you used to generate the XML font metrics file.</li>\n           <li>The fonts \"directory\" tag can be used to register fonts contained within a single or list of directory paths.  The \"recursive\" attribute can be specified to recursively add fonts from all sub directories.</li>\n           <li>The fonts \"auto-detect\" tag can be used to automatically register fonts that are found to be installed on the native operating system.</li>\n@@ -304,38 +362,99 @@ It will display all of the font names and exit with an Exception.</p>\n         <!--note>Cocoon users will need to setup the config, see FOPSerializer for more information.</note-->\n       </section>\n       <section id=\"autodetect\">\n-        <title>Auto-Detect and auto-embedd feature</title>\n-      <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n-      <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n-      <source>Manifest-Version: 1.0\n-\n-Name: font/myfont.ttf\n-Content-Type: application/x-font</source>\n-      <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n+        <title>Auto-Detect and auto-embed feature</title>\n+        <p>When the \"auto-detect\" flag is set in the configuration, FOP will automatically search for fonts in the default paths for your operating system.</p>\n+        <p>FOP will also auto-detect fonts which are available in the classpath, if they are described as \"application/x-font\" in the MANIFEST.MF file. For example, if your .jar file contains font/myfont.ttf:</p>\n+        <source>Manifest-Version: 1.0\n+          \n+          Name: font/myfont.ttf\n+          Content-Type: application/x-font</source>\n+        <p>This feature allows you to create JAR files containing fonts. The JAR files can be added to fop by providem them in the classpath, e.g. copying them into the lib/ directory.</p>\n       </section>\n       <section id=\"embedding\">\n         <title>Embedding</title>\n-        <note>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</note>\n-        <note>The font is simply embedded into the PDF file, it is not converted.</note>\n-        <p>Font embedding is enabled in the userconfig.xml file and controlled by the embed-url attribute.\n-If you don't specify the embed-url attribute the font will not be embedded, but will only be referenced.</p>\n-        <warning>\n-          Omitting the embed-url attribute for CID-encoded TrueType fonts will currently produce invalid \n-          PDF files! If you create the XML font metric file using the \"-enc ansi\" option, you can omit \n-          the embed-url attribute for TrueType fonts but you're restricted to the WinAnsi character set.\n-        </warning>\n-        <p>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n-This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</p>\n-        <p>When embedding PostScript fonts, the entire font is always embedded.</p>\n-        <p>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the\n-          original font, containing only the glyphs used, is embedded in the output document.</p>\n+        <p>\n+          By default, all fonts are embedded if an output format supports font embedding. In some\n+          cases, however, it is preferred that some fonts are only referenced. When working\n+          with referenced fonts it is important to be in control of the target environment where\n+          the produced document is consumed, i.e. the necessary fonts have to be installed there.\n+        </p>\n+        <p>\n+          There are two different ways how you can specify that a font should be referenced:\n+        </p>\n+        <ol>\n+          <li>\n+            When using the old-style \"font\" element to configure a single font, font referencing\n+            is controlled by the embed-url attribute. If you don't specify the embed-url attribute\n+            the font will not be embedded, but will only be referenced.\n+          </li>\n+          <li>\n+            For automatically configured fonts there's a different mechanism to specify which\n+            fonts should be referenced rather than embedded. This is done in the \"referenced-fonts\"\n+            element in the configuration. Here's an example:\n+          </li>\n+        </ol>\n+        <source><![CDATA[\n+<fop version=\"1.0\">\n+   <fonts>\n+      <referenced-fonts>\n+        <match font-family=\"Helvetica\"/>\n+        <match font-family=\"DejaVu.*\"/>\n+      </referenced-fonts>\n+   </fonts>\n+</fop>]]></source>\n+        <p>\n+          At the moment, you can only match fonts against their font-family. It is possible to use\n+          regular expressions as is shown in the second example above (\"DejaVu.*\"). The syntax for\n+          the regular expressions used here are the one used by the\n+          <a href=\"http://java.sun.com/j2se/1.4/docs/api/java/util/regex/package-summary.html\"><code>java.util.regex</code> package</a>.\n+          So, in the above snippet \"Helvetica\" and all variants of the \"DejaVu\" font family are\n+          referenced. If you want to reference all fonts, just specify <code>font-family=\".*\"</code>.\n+        </p>\n+        <p>\n+          Various notes related to embedded fonts:\n+        </p>\n+        <ul>\n+          <li>The PostScript renderer does not yet support TrueType fonts, but can embed Type 1 fonts.</li>\n+          <li>The font is simply embedded into the PDF file, it is not converted.</li>\n+          <li>When FOP embeds a font, it adds a prefix to the fontname to ensure that the name will not match the fontname of an installed font.\n+            This is helpful with older versions of Acrobat Reader that preferred installed fonts over embedded fonts.</li>\n+          <li>When embedding PostScript fonts, the entire font is always embedded.</li>\n+          <li>When embedding TrueType fonts (ttf) or TrueType Collections (ttc), a subset of the\n+          original font, containing only the glyphs used, is embedded in the output document.</li>\n+        </ul>\n       </section>\n+      <section id=\"substitution\">\n+         <title>Substitution</title>\n+         <p>When a &lt;substitutions/&gt; section is defined in the configuration, FOP will re-map any font-family references found in your FO input to a given substitution font.</p>\n+         <ul>\n+            <li>If a &lt;substitution/&gt; is declared, it is mandatory that both a &lt;from/&gt; and &lt;to/&gt; child element is declared with a font-family attribute.</li>\n+            <li>Both font-weight and font-style are optional attributes, if they are provided then a value of 'normal' is assumed.</li>\n+         </ul>\n+         <p>For example you could make all FO font-family references to 'Arial' with weights between 700 and 900 reference the normal 'Arial Black' font.</p>\n+         <source><![CDATA[\n+<fop version=\"1.0\">\n+   <fonts>\n+      <substitutions>\n+         <substitution>\n+            <from font-family=\"Arial\" font-weight=\"700..900\"/>\n+            <to font-family=\"Arial Black\"/>\n+         </substitution>\n+         <substitution>\n+            <from font-family=\"FrutigerLight\"/>\n+            <to font-family=\"Times\" font-weight=\"bold\" font-style=\"italic\"/>\n+         </substitution>\n+      </substitutions>\n+   </fonts>\n+</fop>]]></source>\n+      </section>\n+      <!-- The following section should no longer be required\n       <section id=\"embedding-base14\">\n         <title>Explicitly embedding the base 14 fonts</title>\n         <p>\n           There are cases where you might want to force the embedding of one or more of the base 14 fonts that\n           can normally be considered available on the target platform (viewer, printer). One of these cases is\n-          PDF/A which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n+          <a href=\"pdfa.html\">PDF/A</a> which mandates the embedding of even the base 14 fonts. Embedding a font such as Helvetica or\n           Courier is straight-forward. The \"Symbol\" and \"ZapfDingbats\" fonts, however, currently present a \n           problem because FOP cannot correctly determine the encoding of these two single-byte fonts through\n           the PFM file. FOP now correctly interprets the \"encoding\" value in the XML font metrics file, but the\n@@ -353,7 +472,7 @@ This is helpful with older versions of Acrobat Reader that preferred installed f\n   <cap-height>673</cap-height>\n   <x-height>766</x-height>\n   [..]]]></source>\n-      </section>\n+      </section-->\n     </section>\n   </body>\n </document>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/fonts.xml",
                "sha": "30b72ffac82ae2e280899141ef46f9b878f965b7",
                "status": "modified"
            },
            {
                "additions": 402,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/graphics.xml",
                "changes": 642,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/graphics.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 240,
                "filename": "src/documentation/content/xdocs/trunk/graphics.xml",
                "patch": "@@ -23,355 +23,508 @@\n     <version>$Revision$</version>\n   </header>\n   <body>\n+    <section id=\"introduction\">\n+      <title>Introduction</title>\n+      <p>\n+        After the Apache FOP 0.94 release, the image handling subsystem has been rewritten in\n+        order to improve the range of supported images and image subtypes, to lower the\n+        overall memory consumption when handling images, to produce smaller output files and to\n+        increase the performance in certain areas. Of course, this causes a few changes most of\n+        which the user will probably not notice. The most important changes are:\n+      </p>\n+      <ul>\n+        <li>\n+          The image libraries Jimi and JAI are no longer supported. Instead, Apache FOP uses the\n+          Image I/O API that was introduced with Java 1.4 for all bitmap codecs.\n+        </li>\n+        <li>\n+          Some bitmap images are no longer converted to a standardized 24 bit RGB image but are\n+          instead handled in their native format.\n+        </li>\n+        <li>\n+          A plug-in mechanism offers a possibility to add support for new formats without changing\n+          the FOP's source code.\n+        </li>\n+      </ul>\n+      <p>\n+        The actual <a href=\"http://xmlgraphics.apache.org/commons/image-loader.html\">image loading framework</a>\n+        no longer resides in Apache FOP, but was instead placed in\n+        <a href=\"ext:xmlgraphics.apache.org/commons/\">XML Graphics Commons</a>.\n+      </p>\n+    </section>\n     <section id=\"support-overview\">\n       <title>Overview of Graphics Support</title>\n       <p>\n-        The table below summarizes the <em>theoretical</em> support for graphical formats within FOP. In other words, within the constraints of the limitations listed here, these formats <em>should</em> work. However, many of them have not been tested, and there may be limitations that have not yet been discovered or documented. The packages needed to support some formats are not included in the FOP distribution and must be installed separately. Follow the links in the \"Support Thru\" column for more details.\n+        The table below summarizes the <em>theoretical</em> support for graphical formats\n+        within FOP. In other words, within the constraints of the limitations listed here,\n+        these formats <em>should</em> work. However, many of them have not been tested,\n+        and there may be limitations that have not yet been discovered or documented.\n+        The packages needed to support some formats are not included in the FOP distribution\n+        and must be installed separately. Follow the links in the \"Support Through\" columns\n+        for more details.\n       </p>\n       <table>\n         <tr>\n-          <th>Format</th>\n-          <th>Type</th>\n-          <th><a href=\"#native\">FOP native support</a></th>\n-          <th><a href=\"#batik\">Batik SVG</a></th>\n-          <th><a href=\"#batik-codecs\">Batik codecs</a></th>\n+          <th rowspan=\"2\">Format</th>\n+          <th rowspan=\"2\">Type</th>\n+          <th colspan=\"3\">Support Through</th>\n+        </tr>\n+        <tr>\n+          <th><a href=\"#native\">Apache FOP (native)</a></th>\n+          <th><a href=\"#batik\">Apache Batik</a></th>\n           <th><a href=\"#imageio\">Image I/O</a></th>\n-          <th><a href=\"#jai\">JAI</a></th>\n-          <th><a href=\"#jimi\">JIMI</a></th>\n         </tr>\n         <tr>\n           <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n           <td>bitmap</td>\n-          <td>X</td>\n-          <td></td>\n           <td></td>\n           <td></td>\n+          <td>X [1]</td>\n+        </tr>\n+        <tr>\n+          <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+          <td>vector (with embedded bitmaps)</td>\n+          <td>(X)</td>\n           <td></td>\n           <td></td>\n         </tr>\n         <tr>\n           <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n-          <td>metafile (both bitmap and vector), probably most frequently used for vector drawings</td>\n+          <td>metafile (both bitmap and vector), most frequently used for vector drawings</td>\n           <td>(X)</td>\n           <td></td>\n           <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n         </tr>\n         <tr>\n           <td>GIF (Graphics Interchange Format)</td>\n           <td>bitmap</td>\n-          <td>X</td>\n           <td></td>\n           <td></td>\n           <td>X</td>\n-          <td>X</td>\n-          <td>X</td>\n         </tr>\n         <tr>\n           <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n           <td>bitmap</td>\n           <td>(X)</td>\n           <td></td>\n-          <td></td>\n           <td>X</td>\n-          <td></td>\n-          <td></td>\n         </tr>\n         <tr>\n           <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n           <td>bitmap</td>\n           <td></td>\n           <td></td>\n           <td>X</td>\n-          <td>X</td>\n-          <td></td>\n-          <td></td>\n         </tr>\n         <tr>\n           <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n           <td>vector (with embedded bitmaps)</td>\n           <td></td>\n           <td>X</td>\n           <td></td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n         </tr>\n         <tr>\n           <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n           <td>bitmap</td>\n           <td>(X)</td>\n           <td></td>\n-          <td>X</td>\n-          <td>X</td>\n-          <td>X</td>\n-          <td></td>\n-          <!--td><a href=\"#native\">FOP native</a> or <a href=\"#jai\">JAI</a>, depending on the subformat. See <a href=\"#tiff\">TIFF</a> for more details.(JIMI also supports TIFF, but this has not been implemented within FOP).</td-->\n+          <td>X [1]</td>\n         </tr>\n         <tr>\n-          <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+          <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n           <td>vector (with embedded bitmaps)</td>\n-          <td>(X)</td>\n-          <td></td>\n-          <td></td>\n-          <td></td>\n           <td></td>\n+          <td>(X)</td>\n           <td></td>\n         </tr>\n       </table>\n-      <note>\"(X)\" means restricted support. Please see the details below.</note>\n+      <p>\n+        Legend:\n+      </p>\n+      <ul>\n+        <li>\"(X)\" means restricted support. Please see the details below.</li>\n+        <li>\n+          [1]: Requires the presence of <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a>\n+          (or an equivalent Image I/O compatible codec) in the classpath. JAI Image I/O Tools also\n+          adds support for JPEG 2000, WBMP, RAW and PNM. Other Image I/O codecs may provide\n+          support for additional formats.\n+        </li>\n+      </ul>\n+      <note>\n+        <a href=\"http://jai-imageio.dev.java.net/\">JAI Image I/O Tools</a> is not the same as the\n+        <a href=\"http://java.sun.com/javase/technologies/desktop/media/jai/\">JAI library</a>! The\n+        former simply exposes JAI's codecs using the Image&nbsp;I/O API but does not include all\n+        the image manipulation functionality.\n+      </note>\n+      <section id=\"format-map\">\n+        <title>Map of supported image formats by output format</title>\n+        <p>\n+          Not all image formats are supported for all output formats! For example, while you can\n+          use EPS (Encapsulated PostScript) files when you generate PostScript output, this format\n+          will not be supported by any other output format. Here's an overview of which image\n+          formats are supported by which output format:\n+        </p>\n+        <table>\n+          <tr>\n+            <th>Image Format</th>\n+            <th>PDF</th>\n+            <th>PostScript</th>\n+            <th>Java2D, PNG, TIFF, AWT</th>\n+            <th>PCL</th>\n+            <th>AFP</th>\n+            <th>RTF</th>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#bmp\">BMP</a> (Microsoft Windows Bitmap)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#emf\">EMF</a> (Windows Enhanced Metafile)</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td>X [1]</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#eps\">EPS</a> (Encapsulated PostScript)</td>\n+            <td></td>\n+            <td>X [1]</td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+            <td></td>\n+          </tr>\n+          <tr>\n+            <td>GIF (Graphics Interchange Format)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#jpeg\">JPEG</a> (Joint Photographic Experts Group)</td>\n+            <td>X [1]</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [1]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#png\">PNG</a> (Portable Network Graphic)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#svg\">SVG</a> (Scalable Vector Graphics)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#tiff\">TIFF</a> (Tag Image Format File)</td>\n+            <td>X [2]</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X [2]</td>\n+            <td>X</td>\n+          </tr>\n+          <tr>\n+            <td><a href=\"#wmf\">WMF</a> (Windows Metafile)</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+            <td>X</td>\n+          </tr>\n+        </table>\n+        <p>\n+          Legend:\n+        </p>\n+        <ul>\n+          <li>\n+            [1]: Supported without the need to decode the image.\n+          </li>\n+          <li>\n+            [2]: Supported without the need to decode the image, but only for certain subtypes.\n+          </li>\n+        </ul>\n+      </section>\n     </section>\n     <section id=\"packages\">\n       <title>Graphics Packages</title>\n       <section id=\"native\">\n-        <title>FOP Native</title>\n+        <title>XML Graphics Commons Native</title>\n         <p>\n-          FOP has native ability to handle some graphic file formats.\n+          <a href=\"ext:xmlgraphics.apache.org/commons\">XML Graphics Commons</a> supports a number\n+          of graphic file formats natively as basic functionality: all bitmap formats for which\n+          there are Image I/O codecs available (JPEG, PNG, GIF, TIFF, etc.), EPS and EMF.\n         </p>\n       </section>\n-      <section id=\"batik-codecs\">\n-        <title>\"Internal\" codecs</title>\n+      <section id=\"fop-native\">\n+        <title>FOP Native</title>\n         <p>\n-          Apache XML Graphics Commons contains codecs for PNG and TIFF access. FOP can use these.\n+          FOP has no native image plug-ins for the image loading framework of its own but currently\n+          hosts the Batik-dependent SVG and WMF plug-ins until they can be moved to\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n         </p>\n       </section>\n-      <section id=\"imageio\">\n-        <title>Image I/O (JDK 1.4 or higher)</title>\n+      <section id=\"batik\">\n+        <title>Apache Batik</title>\n         <p>\n-          For JDKs 1.4 or higher, FOP provides a wrapper to load images through the \n-          <a class=\"fork\" href=\"http://java.sun.com/j2se/1.4.2/docs/guide/imageio/index.html\">JDK's Image I/O API</a> (JSR 015).\n-          Image I/O allows to dynamically add additional image codecs. An example of such an add-on library are the\n-          <a class=\"fork\" href=\"http://java.sun.com/products/java-media/jai/\">JAI Image I/O Tools</a> available from Sun.\n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a> will later receive the\n+          SVG and WMF plug-ins for the image loading framework that are currently hosted inside\n+          FOP.\n         </p>\n-      </section>\n-      <section id=\"jimi\">\n-        <title>JIMI</title>\n         <p>\n-          Because of licensing issues, the JIMI image library is not included in the FOP distribution. First, <a class=\"fork\" href=\"http://java.sun.com/products/jimi\">download</a> and install it.\n-Then, copy the file \"JimiProClasses.zip\" from the archive to {fop-install-dir}/lib/jimi-1.0.jar. Please note that FOP binary distributions are compiled with JIMI support, so there is no need for you to build FOP to add the support. If jimi-1.0.jar is installed in the right place, it will automatically be used by FOP, otherwise it will not.\n+          Current FOP distributions include a distribution of the\n+          <a class=\"fork\" href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>.\n+          Because Batik's API changes frequently, it is highly recommended that you use the\n+          version that ships with FOP, at least when running FOP.\n         </p>\n-      </section>\n-      <section id=\"jai\">\n-        <title>JAI (Java Advanced Imaging API)</title>\n+        <warning>Batik must be run in a graphical environment.</warning>\n         <p>\n-          FOP has been compiled with JAI support, but JAI is not included in the FOP distribution.\n-To use it, install <a href=\"http://java.sun.com/products/java-media/jai\">JAI</a>, then copy the jai_core.jar and the jai_codec.jar files to {fop-install-dir}/lib.\n-JAI is much faster than JIMI, but is not available for all platforms. See <a href=\"http://java.sun.com/products/java-media/jai/forDevelopers/jaifaq.html#platforms\">What platforms are supported?</a> on the JAI FAQ page for more details.\n+          Batik must be run in a graphical environment.\n+          It uses AWT classes for rendering SVG, which in turn require an X server on Unixish\n+          systems. If you run a server without X, or if you can't connect to the X server due to\n+          security restrictions or policies (a so-called \"headless\" environment), SVG rendering\n+          will fail.\n         </p>\n-      </section>\n-      <section id=\"batik\">\n-        <title>Apache Batik</title>\n-        <p>Current FOP distributions include a distribution of the Apache <a class=\"fork\" href=\"ext:batik\">Batik</a> version 1.6.\n-It is automatically installed with FOP.\n-Because Batik's API changes frequently, it is highly recommended that you use the version that ships with FOP, at least when running FOP.</p>\n-        <warning>Batik must be run in a graphical environment.</warning>\n-        <p>Batik must be run in a graphical environment.\n-It uses AWT classes for rendering SVG, which in turn require an X server on Unixish systems.\n-If you run a server without X, or if you can't connect to the X server due to security restrictions or policies (a so-called \"headless\" environment), SVG rendering will fail.</p>\n         <p>Here are some workarounds:</p>\n         <ul>\n-          <li>If you are using JDK 1.4, start it with the <code>-Djava.awt.headless=true</code> command line option.</li>\n-          <li>Install an X server which provides an in-memory framebuffer without actually using a screen device or any display hardware. One example is Xvfb.</li>\n-          <li>Install a toolkit which emulates AWT without the need for an underlying X server. One example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free and comes with detailed installation instructions.</li>\n+          <li>\n+            Start Java with the <code>-Djava.awt.headless=true</code> command line option.\n+          </li>\n+          <li>\n+            Install an X server which provides an in-memory framebuffer without actually using a\n+            screen device or any display hardware. One example is Xvfb.\n+          </li>\n+          <li>\n+            Install a toolkit which emulates AWT without the need for an underlying X server. One\n+            example is the <a href=\"http://www.eteks.com/pja/en\">PJA toolkit</a>, which is free\n+            and comes with detailed installation instructions.\n+          </li>\n         </ul>\n       </section>\n+      <section id=\"imageio\">\n+        <title>Image I/O</title>\n+        <p>\n+          The image loading framework in <a href=\"ext:xmlgraphics.apache.org/commons\">XML Graphics Commons</a>\n+          provides a wrapper to load images through the \n+          <a class=\"fork\" href=\"http://java.sun.com/j2se/1.4.2/docs/guide/imageio/index.html\">JDK's Image I/O API</a> (JSR 015).\n+          Image I/O allows to dynamically add additional image codecs. An example of such an\n+          add-on library are the\n+          <a class=\"fork\" href=\"http://java.sun.com/products/java-media/jai/\">JAI Image I/O Tools</a>\n+          available from Sun.\n+        </p>\n+      </section>\n     </section>\n-    <section id=\"bmp\">\n-      <title>BMP</title>\n-      <p>FOP native support for BMP images is limited to the RGB color-space.</p>\n-    </section>\n-    <section id=\"eps\">\n-      <title>EPS</title>\n-      <p>FOP provides support for two output targets:</p>\n-      <ul>\n-        <li>PostScript (full support).</li>\n-        <li>\n-          PDF (partial support). Due to the lack of a built-in PostScript interpreter, FOP \n-          can only embed the EPS file into the PDF. Acrobat Reader will not currently display \n-          the EPS (it doesn't have a PostScript interpreter, either) but it will be shown \n-          correctly when you print the PDF on a PostScript-capable printer. PostScript devices \n-          (including GhostScript) will render the EPS correctly.\n-        </li>\n-      </ul>\n-      <warning>\n-        Please note that the EPS embedding feature has been <strong>deprecated</strong> in the\n-        PDF specification version 1.4. You should not use this feature anymore, especially \n-        since newer PDF tools don't support embedded EPS files anymore.\n-      </warning>\n-      <p>\n-        Other output targets can't be supported at the moment because\n-        FOP lacks a PostScript interpreter. Furthermore, FOP is not able\n-        to parse the preview bitmaps sometimes contained in EPS files.\n-      </p>\n-    </section>\n-    <section id=\"jpeg\">\n-      <title>JPEG</title>\n-      <p>\n-        FOP native support of JPEG does not include all variants, especially those containing \n-        unusual color lookup tables and color profiles.\n-        If you have trouble with a JPEG image in FOP, try opening it with an image processing \n-        program (such as Photoshop or Gimp) and then saving it. Specifying 24-bit color output \n-        may also help. For the PDF and PostScript renderers most JPEG images can be passed \n-        through without decompression. User reports indicate that grayscale, RGB, and \n-        CMYK color-spaces are all rendered properly.\n-      </p>\n-    </section>\n-    <section id=\"png\">\n-      <title>PNG</title>\n-      <p>\n-        If using JAI for PNG support, only RGB and RGBA color-spaces are supported for \n-        FOP rendering.\n-      </p>\n-      <p>\n-        Transparency is supported but not guaranteed to work with every output format.\n-      </p>\n-    </section>\n-    <section id=\"svg\">\n-      <title>SVG</title>\n-      <section id=\"svg-intro\">\n-        <title>Introduction</title>\n-        <p>FOP uses <a href=\"#batik\"> Apache Batik</a> for SVG support.\n-This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n-file referenced with <code>fo:external-graphic</code>.</p>\n-      <note>   \n-Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n-documents into PDF.  For more information please see the\n-<a href=\"http://xmlgraphics.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n-on the Batik site.\n-      </note>\n+    <section id=\"image-formats\">\n+      <title>Details on image formats</title>\n+      <section id=\"bmp\">\n+        <title>BMP</title>\n+        <p>\n+          BMP images are supported through an Image I/O codec. There may be limitations of the\n+          codec which are outside the control of Apache FOP.\n+        </p>\n       </section>\n-      <section id=\"svg-pdf-graphics\">\n-        <title>Placing SVG Graphics into PDF</title>\n+      <section id=\"emf\">\n+        <title>EMF</title>\n         <p>\n-The SVG is rendered into PDF by using PDF commands to draw and fill\n-lines and curves. This means that the graphical objects created with\n-this remain as vector graphics. The same applies to PostScript output.\n-For other output formats the SVG graphic will be converted to a bitmap\n-image.\n+          Windows Enhanced Metafiles (EMF) are only supported in RTF output where they are\n+          embedded without decoding.\n         </p>\n+      </section>\n+      <section id=\"eps\">\n+        <title>EPS</title>\n+        <p>Apache FOP allows to use EPS files when generating PostScript output only.</p>\n         <p>\n-There are a number of SVG things that cannot be converted directly into\n-PDF. Parts of the graphic such as effects, patterns and images are inserted\n-into the PDF as a raster graphic. The resolution of these raster images can\n-          be controlled through the \"target resolution\" setting in the \n-          <a href=\"configuration.html\">configuration</a>.</p>\n+          Other output targets can't be supported at the moment because\n+          FOP lacks a PostScript interpreter. Furthermore, FOP is currently not able\n+          to parse the preview bitmaps sometimes contained in EPS files.\n+        </p>\n+      </section>\n+      <section id=\"gif\">\n+        <title>GIF</title>\n         <p>\n-Currently transparency is limited in PDF so many svg images that\n-contain effects or graphics with transparent areas may not be displayed\n-correctly.\n+          GIF images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n         </p>\n       </section>\n-      <section id=\"svg-pdf-text\">\n-        <title>Placing SVG Text into PDF and PostScript</title>\n-        <p>If possible, Batik will use normal PDF or PostScript text when inserting text. It does\n-this by checking if the text can be drawn normally and the font is\n-supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n-<!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n-shows how various types and effects with text are handled.\n-Note that tspan and outlined text are not yet implemented.</p>\n+      <section id=\"jpeg\">\n+        <title>JPEG</title>\n         <p>\n-Otherwise, text is converted and drawn as a set of shapes by Batik, using the stroking text painter.\n-This means that a typical character will\n-have about 10 curves (each curve consists of at least 20 characters).\n-This can make the output files large and when it is viewed the\n-viewer may not normally draw those fine curves very well (In Adobe Acrobat, turning on\n-\"Smooth Line Art\" in the preferences will fix this).\n-If the text is inserted into the output file using the inbuilt text commands\n-it will use a single character.\n+          FOP native support (i.e. the handling of undecoded images) of JPEG does not include all\n+          variants, especially those containing unusual color lookup tables and color profiles.\n+          If you have trouble with a JPEG image in FOP, try opening it with an image processing \n+          program (such as Photoshop or Gimp) and then saving it. Specifying 24-bit color output \n+          may also help. For the PDF and PostScript renderers most JPEG images can be passed \n+          through without decompression. User reports indicate that grayscale, RGB, and \n+          CMYK color spaces are all rendered properly. However, for other output formats, the\n+          JPEG images have to be decompressed. Tests have shown that there are some limitation\n+          in some Image&nbsp;I/O codecs concerning images in the CMYK color space. Work-arounds are\n+          in place but may not always work as expected.\n         </p>\n+      </section>\n+      <section id=\"png\">\n+        <title>PNG</title>\n         <p>\n-          Note that because SVG text can be rendered as either text or a vector graphic, you \n-          may need to consider settings in your viewer for both. The Acrobat viewer has both \n-          \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images \n-          to be displayed nicely on your screen (see Edit / Preferences / Display).\n-          This setting will not affect the printing of your document, which should be OK in \n-          any case, but will only affect the quality of the screen display.</p>\n+          PNG images are supported through an Image&nbsp;I/O codec. Transparency is supported but\n+          not guaranteed to work with every output format.\n+        </p>\n       </section>\n-      <section id=\"svg-scaling\">\n-        <title>Scaling</title>\n+      <section id=\"svg\">\n+        <title>SVG</title>\n+        <section id=\"svg-intro\">\n+          <title>Introduction</title>\n+          <p>FOP uses <a href=\"#batik\"> Apache Batik</a> for SVG support.\n+            This format can be handled as an <code>fo:instream-foreign-object</code> or in a separate\n+            file referenced with <code>fo:external-graphic</code>.</p>\n+          <note>   \n+            Batik's SVG Rasterizer utility may also be used to convert standalone SVG\n+            documents into PDF.  For more information please see the\n+            <a href=\"http://xmlgraphics.apache.org/batik/svgrasterizer.html\">SVG Rasterizer documentation</a>\n+            on the Batik site.\n+          </note>\n+        </section>\n+        <section id=\"svg-pdf-graphics\">\n+          <title>Placing SVG Graphics into PDF</title>\n+          <p>\n+            The SVG is rendered into PDF by using PDF commands to draw and fill\n+            lines and curves. This means that the graphical objects created with\n+            this remain as vector graphics. The same applies to PostScript output.\n+            For other output formats the SVG graphic may be converted to a bitmap\n+            image.\n+          </p>\n+          <p>\n+            There are a number of SVG things that cannot be converted directly into\n+            PDF. Parts of the graphic such as effects, patterns and images are inserted\n+            into the PDF as a raster graphic. The resolution of these raster images can\n+            be controlled through the \"target resolution\" setting in the \n+            <a href=\"configuration.html\">configuration</a>.</p>\n+          <p>\n+            Currently transparency is limited in PDF so many SVG images that\n+            contain effects or graphics with transparent areas may not be displayed\n+            correctly.\n+          </p>\n+        </section>\n+        <section id=\"svg-pdf-text\">\n+          <title>Placing SVG Text into PDF and PostScript</title>\n+          <p>If possible, Batik will use normal PDF or PostScript text when inserting text. It does\n+            this by checking if the text can be drawn normally and the font is\n+            supported. This example svg <a href=\"../dev/svg/text.svg\">text.svg</a> /\n+            <!--link href=\"../dev/svg/text.pdf\"-->text.pdf<!--/link-->\n+            shows how various types and effects with text are handled.\n+            Note that tspan and outlined text are not yet implemented.</p>\n+          <p>\n+            Otherwise, text is converted and drawn as a set of shapes by Batik, using the\n+            stroking text painter. This means that a typical character will\n+            have about 10 curves (each curve consists of at least 20 characters).\n+            This can make the output files large and when it is viewed the\n+            viewer may not normally draw those fine curves very well (In Adobe Acrobat, turning on\n+            \"Smooth Line Art\" in the preferences will fix this). Copy/paste functionality\n+            will not be supported in this case.\n+            If the text is inserted into the output file using the inbuilt text commands\n+            it will use a single character.\n+          </p>\n+          <p>\n+            Note that because SVG text can be rendered as either text or a vector graphic, you \n+            may need to consider settings in your viewer for both. The Acrobat viewer has both \n+            \"smooth line art\" and \"smooth text\" settings that may need to be set for SVG images \n+            to be displayed nicely on your screen (see Edit / Preferences / Display).\n+            This setting will not affect the printing of your document, which should be OK in \n+            any case, but will only affect the quality of the screen display.</p>\n+        </section>\n+        <section id=\"svg-scaling\">\n+          <title>Scaling</title>\n+          <p>\n+            Currently, SVG images are rendered with the dimensions specified <em>in the SVG \n+              file</em>, within the viewport specified in the fo:external-graphic element.\n+            For everything to work properly, the two should be equal. The SVG standard leaves \n+            this issue as an implementation detail. Additional scaling options are available\n+            through XSL-FO means.\n+          </p>\n+          <p>\n+            If you use pixels to specify the size of an SVG graphic the \"source resolution\" setting\n+            in the <a href=\"configuration.html\">configuration</a> will be used to determine the\n+            size of a pixel. The use of pixels to specify sizes is discouraged as they may\n+            be interpreted differently in different environments.\n+          </p>\n+        </section>\n+        <section id=\"svg-problems\">\n+          <title>Known Problems</title>\n+          <ul>\n+            <li>\n+              Soft mask transparency is combined with white so that it looks better\n+              on PDF 1.3 viewers but this causes the soft mask to be slightly lighter\n+              or darker on PDF 1.4 viewers.\n+            </li>\n+            <li>\n+              There is some problem with a gradient inside a pattern which may cause a PDF\n+              error when viewed in Acrobat 5.\n+            </li>\n+            <li>\n+              Text is not always handled correctly, it may select the wrong font\n+              especially if characters have multiple fonts in the font list.\n+            </li>\n+            <li>\n+              Uniform transparency for images and other SVG elements that are converted\n+              into a raster graphic are not drawn properly in PDF. The image is opaque.\n+            </li>\n+          </ul>\n+        </section>\n+      </section>\n+      <section id=\"tiff\">\n+        <title>TIFF</title>\n         <p>\n-          Currently, SVG images are rendered with the dimensions specified <em>in the SVG \n-          file</em>, within the viewport specified in the fo:external-graphic element.\n-          For everything to work properly, the two should be equal. The SVG standard leaves \n-          this issue as an implementation detail. FOP will probably implement a scaling \n-          mechanism in the future. \n+          FOP can embed TIFF images without decompression into PDF, PostScript and AFP if they\n+          have either CCITT T.4, CCITT T.6, or JPEG compression. Otherwise, a TIFF-capable\n+          Image&nbsp;I/O codec is necessary for decoding the image.\n         </p>\n         <p>\n-          If you use pixels to specify the size of an SVG graphic the \"source resolution\" setting\n-          in the <a href=\"configuration.html\">configuration</a> will be used to determine the\n-          size of a pixel. The use of pixels to specify sizes is discouraged as they may\n-          be interpreted differently in different environments.\n+          There may be some limitation concerning images in the CMYK color space.\n         </p>\n       </section>\n-      <section id=\"svg-problems\">\n-        <title>Known Problems</title>\n-        <ul>\n-          <li>\n-Soft mask transparency is combined with white so that it looks better\n-on pdf 1.3 viewers but this causes the soft mask to be slightly lighter\n-or darker on pdf 1.4 viewers.\n-          </li>\n-          <li>\n-There is some problem with a gradient inside a pattern causing a PDF\n-error when viewed in acrobat 5.\n-          </li>\n-          <li>\n-Text is not always handled correctly, it may select the wrong font\n-especially if characters have multiple fonts in the font list.\n-          </li>\n-          <li>\n-More PDF text handling could be implemented.\n-It could draw the string using the attributed character iterator\n-to handle tspans and other simple changes of text.\n-          </li>\n-          <li>\n-JPEG images are not inserted directly into the pdf document.\n-This area has not been implemented yet since the appropriate\n-method in batik is static.\n-          </li>\n-          <li>\n-Uniform transparency for images and other svg elements that are converted\n-into a raster graphic are not drawn properly in PDF. The image is opaque.\n-          </li>\n-        </ul>\n+      <section id=\"wmf\">\n+        <title>WMF</title>\n+        <p>\n+          Windows Metafiles (WMF) are supported through classes in \n+          <a href=\"ext:xmlgraphics.apache.org/batik\">Apache Batik</a>. At the moment, support\n+          for this format is experimental and may not always work as expected.\n+        </p>\n       </section>\n     </section>\n-    <section id=\"tiff\">\n-      <title>TIFF</title>\n-      <p>\n-        FOP-native TIFF support is limited to PDF and PostScript output only. Also, \n-        according to user reports, FOP's native support for TIFF is limited to images with the \n-        following characteristics (all must be true for successful rendering):\n-      </p>\n-      <ul>\n-        <li>single channel images (i.e., bi-level and grayscale only)</li>\n-        <li>uncompressed images, or images using CCITT T.4, CCITT T.6, or JPEG compression</li>\n-        <li>images using white-is-zero encoding in the TIFF PhotometricInterpretation tag</li>\n-      </ul>\n-      <note>\n-        Native support in this case means that the images can be embedded into the output format\n-        without decoding it.\n-      </note>\n-      <p><em>JAI:</em> Supports RGB and RGBA only for FOP rendering.</p>\n-    </section>\n-    <section id=\"emf\">\n-      <title>EMF</title>\n-      <p>Windows Enhanced Metafiles (EMF) are only supported in RTF output.</p>\n-    </section>\n     <section id=\"resolution\">\n       <title>Graphics Resolution</title>\n       <p>\n         Some bitmapped image file formats store a dots-per-inch (dpi) or other resolution \n         values. FOP tries to use this resolution information whenever possible to determine\n         the image's intrinsic size. This size is used during the layout process when it is not\n-        superceeded by an explicit size on fo:external-graphic (content-width and content-height \n+        superseded by an explicit size on fo:external-graphic (content-width and content-height \n         properties).\n       </p>\n       <p>\n         Please note that not all images contain resolution information. If it's not available\n-        72 dpi is assumed (the default resolution of PDF and PostScript).\n+        the source resolution set on the FopFactory (or through the user configuration XML) is used.\n+        The default here is 72 dpi.\n       </p>\n       <p>\n         Bitmap images are generally embedded into the output format at their original resolution\n@@ -382,14 +535,23 @@ into a raster graphic are not drawn properly in PDF. The image is opaque.\n         used as a work-around to resample images in FO documents. \n       </p>\n     </section>\n+    <section id=\"page-selection\">\n+      <title>Page selection for multi-page formats</title>\n+      <p>\n+        Some image formats such as TIFF support multiple pages/sub-images per file. You can\n+        select a particular page using a special URI fragment in the form:\n+        &lt;uri&gt;#page=&lt;nr&gt;\n+        (for example: <code>http://localhost/images/myimage.tiff#page=3</code>)\n+      </p>\n+    </section>\n     <section id=\"caching\">\n       <title>Image caching</title>\n       <p>\n         FOP caches images between runs. There is one cache per FopFactory instance. The URI is \n         used as a key to identify images which means that when a particular URI appears again, \n         the image is taken from the cache. If you have a servlet that generates a different \n-        image each time it is called with the same URL you need to use a constantly \n-        changing dummy parameter on the URL to avoid caching.\n+        image each time it is called with the same URI you need to use a constantly \n+        changing dummy parameter on the URI to avoid caching.\n       </p>\n       <p>\n         The image cache has been improved considerably in the redesigned code. Therefore, a ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/graphics.xml",
                "sha": "dce05aa470bb113afdc1785522aa51766187a6b4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/index.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/index.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/index.xml",
                "patch": "@@ -20,7 +20,7 @@\n <document>\n   <header>\n     <title>Apache FOP Trunk (Development code)</title>\n-    <version>$Revision: 201586 $</version>\n+    <version>$Revision$</version>\n   </header>\n   <body>\n     <section id=\"intro\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/index.xml",
                "sha": "c152701addab3db626211b8f547cd231ace71a40",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/output.xml",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/output.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/content/xdocs/trunk/output.xml",
                "patch": "@@ -48,6 +48,35 @@\n           The net effect is that the layout of a given FO document can be quite different between \n           renderers that do not use the same font information.\n         </p>\n+        <p>\n+          Theoretically, there's some potential to make the output of the PDF/PS renderers match\n+          the output of the Java2D-based renderers. If FOP used the font metrics from its own\n+          font subsystem but still used Java2D for text painting in the Java2D-based renderers,\n+          this could probably be achieved. However, this approach hasn't been implemented, yet.\n+        </p>\n+        <p>\n+          With a work-around, it is possible to match the PDF/PS output in a Java2D-based\n+          renderer pretty closely. The clue is to use the\n+          <a href=\"intermediate.html\">intermediate format</a>. The trick is to layout the\n+          document using FOP's own font subsystem but then render the document using Java2D.\n+          Here are the necessary steps (using the command-line):\n+        </p>\n+        <ol>\n+          <li>\n+            Produce an IF file: <code>fop -fo myfile.fo -at application/pdf myfile.at.xml</code><br/>\n+            Specifying \"application/pdf\" for the \"-at\" parameter causes FOP to use FOP's own\n+            font subsystem (which is used by the PDF renderer). Note that no PDF file is created\n+            in this step.\n+          </li>\n+          <li>Render to a PDF file: <code>fop -atin myfile.at.xml -pdf myfile.pdf</code></li>\n+          <li>Render to a Java2D-based renderer:\n+            <ul>\n+              <li><code>fop -atin myfile.at.xml -print</code></li>\n+              <li><code>fop -atin myfile.at.xml -awt</code></li>\n+              <li><code>fop -atin myfile.at.xml -tiff myfile.tiff</code></li>\n+            </ul>\n+          </li>\n+        </ol>\n       </section>\n       <section id=\"general-direct-output\">\n         <title>Output to a Printer or Other Device</title>\n@@ -105,7 +134,7 @@ out = proc.getOutputStream();]]></source>\n       <section id=\"pdf-postprocess\">\n         <title>Post-processing</title>\n         <p>\n-          FOP does not currently support several desirable PDF features: XMP metadata and watermarks. \n+          FOP does not currently support several desirable PDF features: watermarks and signatures. \n           One workaround is to use Adobe Acrobat (the full version, not the Reader) to process \n           the file manually or with scripting that it supports.\n         </p>\n@@ -661,8 +690,14 @@ out = proc.getOutputStream();]]></source>\n   <p>\n     JFOR, an open source XSL-FO to RTF converter has been integrated into Apache FOP.\n     This will create an RTF (rich text format) document that will\n-    attempt to contain as much information from the fo document as\n-    possible. The RTF output follows Microsoft's RTF specifications\n+    attempt to contain as much information from the XSL-FO document as\n+    possible. It should be noted that is not possible (due to RTF's limitations) to map all\n+    XSL-FO features to RTF. For complex documents, the RTF output will never reach the feature\n+    level from PDF, for example. Thus, using RTF output is only recommended for simple documents\n+    such as letters.\n+  </p>\n+  <p>\n+    The RTF output follows Microsoft's RTF specifications\n     and produces best results on Microsoft Word.\n   </p>\n   <note>RTF output is currently unmaintained and lacks many features compared to other output",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/output.xml",
                "sha": "628df12480b556dcd406303b7b146c40975ce43d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/pdfa.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/pdfa.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/pdfa.xml",
                "patch": "@@ -20,7 +20,7 @@\n <document>\n   <header>\n     <title>PDF/A (ISO 19005)</title>\n-    <version>$Revision: 389563 $</version>\n+    <version>$Revision$</version>\n     <authors>\n       <person name=\"Jeremias M\u00e4rki\" email=\"jeremias@apache.org\"/>\n     </authors>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/pdfa.xml",
                "sha": "1b3b75561c397c94f7c805819443b90e83397673",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/pdfencryption.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 4,
                "filename": "src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "patch": "@@ -204,15 +204,13 @@ Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, userAgent);\n       </p>\n       <ol>\n         <li>\n-          Download the binary distribution for your JDK version. If you have JDK\n-          1.3 or earlier you must also download a JCE from the same page.\n+          Download the binary distribution for your JDK version.\n         </li>\n         <li>\n           Unpack the distribution. Add the jar file to your classpath. A\n           convenient way to use the jar on Linux is to simply drop it into the\n           FOP lib directory, it will be automatically picked up by\n-          <code>fop.sh</code>.  If you have JDK 1.3 or earlier don't forget to\n-          install the JCE as well.\n+          <code>fop.sh</code>.\n         </li>\n         <li>\n           Open the <code>java.security</code> file and add<br/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/pdfencryption.xml",
                "sha": "22d96505777b1a920e847a3dd9d1812b2ae7a8bd",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/running.xml",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/running.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 12,
                "filename": "src/documentation/content/xdocs/trunk/running.xml",
                "patch": "@@ -28,21 +28,24 @@\n       <title>System Requirements</title>\n       <p>The following software must be installed:</p>\n       <ul>\n-        <li>Java 1.3.x or later Runtime Environment.</li>\n+        <li>\n+          Java 1.4.x or later Runtime Environment.\n+          <ul>\n+            <li>\n+              Many JREs >=1.4 contain older JAXP implementations (which often contain bugs). It's\n+              usually a good idea to replace them with a current implementation.\n+            </li>\n+          </ul>\n+        </li>\n         <li>\n           Apache FOP. The <a href=\"../download.html\">FOP distribution</a> includes all libraries that you will \n           need to run a basic FOP installation. These can be found in the [fop-root]/lib directory. These \n           libraries include the following:\n           <ul>\n-            <li>\n-              A JAXP-compatible XML Parser (FOP comes with <a class=\"fork\" href=\"ext:xerces\">Apache Xerces-J</a>).\n-            </li>\n-            <li>\n-              A JAXP-compatible XSLT Processor (FOP comes with <a class=\"fork\" href=\"ext:xalan\">Apache Xalan-J</a>).\n-            </li>\n+            <li><a class=\"fork\" href=\"ext:xmlgraphics.apache.org/commons\">Apache XML Graphics Commons</a>, an shared library for Batik and FOP.</li>\n             <li><a class=\"fork\" href=\"ext:batik\">Apache Batik</a>, an SVG library.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/logging\">Apache Jakarta Commons Logging</a>, a logger abstraction kit.</li>\n-            <li><a class=\"fork\" href=\"ext:jakarta/commons/io\">Apache Jakarta Commons IO</a>, a library with I/O utilities.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-logging\">Apache Commons Logging</a>, a logger abstraction kit.</li>\n+            <li><a class=\"fork\" href=\"ext:commons-io\">Apache Commons IO</a>, a library with I/O utilities.</li>\n             <li><a class=\"fork\" href=\"ext:excalibur/framework\">Apache Excalibur/Avalon Framework</a>, for XML configuration handling.</li>\n           </ul>\n         </li>\n@@ -51,8 +54,7 @@\n       <ul>\n         <li>\n           Graphics libraries. Generally, FOP contains direct support for the most important\n-          bitmap image formats (including PNG, TIFF, JPEG and GIF). If you're using JDK 1.3, \n-          you may need additional packages to get GIF images to work. See \n+          bitmap image formats (including PNG, JPEG and GIF). See \n           <a href=\"graphics.html\">FOP: Graphics Formats</a> for details.\n         </li>\n         <li>\n@@ -303,7 +305,7 @@ Fop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl\n       <ul>\n         <li>\n           Increase memory available to the JVM. See \n-          <a href=\"http://java.sun.com/j2se/1.3/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n+          <a href=\"http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/java.html\">the -Xmx option</a> \n           for more information.\n           <warning>\n             It is usually unwise to increase the memory allocated to the JVM beyond the amount of ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/running.xml",
                "sha": "38e31cc6c288cee6755a9ea3b35905eeefcff563",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/servlets.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/servlets.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/servlets.xml",
                "patch": "@@ -161,7 +161,7 @@ public void init() throws ServletException {\n         <ul>\n           <li>\n             Instead of java.io.ByteArrayOutputStream consider using the ByteArrayOutputStream\n-            implementation from the <a href=\"ext:jakarta/commons/io\">Jakarta Commons IO project</a> which allocates less memory.\n+            implementation from the <a href=\"ext:commons-io\">Jakarta Commons IO project</a> which allocates less memory.\n             The full class name is: <code>org.apache.commons.io.output.ByteArrayOutputStream</code>\n           </li>\n           <li>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/servlets.xml",
                "sha": "07c22312dec61fe9fa14270a1629288805c1d488",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/upgrading.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/content/xdocs/trunk/upgrading.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/content/xdocs/trunk/upgrading.xml",
                "patch": "@@ -79,7 +79,7 @@\n         </li>\n         <li>\n           Extensions and Renderers written for version 0.20.5 will not work with the new code! The new FOP \n-          extension for <a href=\"http://barcode4j.krysalis.org\">Barcode4J</a> is available since \n+          extension for <a href=\"http://barcode4j.sourceforge.net\">Barcode4J</a> is available since \n           January 2007.\n         </li>\n         <li>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/content/xdocs/trunk/upgrading.xml",
                "sha": "8b4f109a306c5a1dc3a66c922142baf382596d91",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/README.txt",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/README.txt?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/poster/README.txt",
                "patch": "@@ -5,7 +5,8 @@ created for OpenExpo '06 (http://www.openexpo.ch).\n \n To create the PDF just call go.bat.\n \n-The fully reconstruct the PDF you need to copy some fonts into \n-the cfg directory. Please see the README.txt there for details.\n+The fully reconstruct the PDF you need some fonts installed in\n+your operating system: Verdana and Lucida Console which are\n+available in every Windows installation.\n \n You will also need English hyphenation patterns.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/README.txt",
                "sha": "d5ef2c0a2710151b2f8793008c650a2f93a1bedc",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/README.txt",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/README.txt?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 7,
                "filename": "src/documentation/poster/cfg/README.txt",
                "patch": "@@ -1,7 +0,0 @@\n-The following files are missing here for license reasons:\n-\n-lucon.ttf - Lucida Console Font\n-verdana.ttf - Verdana Font\n-verdanab.ttf - Verdana Bold Font\n-\n-They can be found in every MS Windows installation.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/README.txt",
                "sha": "b63dc83dd38911b48071c21146cbc902cff43df7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/VERDANA.ttf.xml",
                "changes": 1817,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/VERDANA.ttf.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 1817,
                "filename": "src/documentation/poster/cfg/VERDANA.ttf.xml",
                "patch": "@@ -1,1817 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>Verdana</font-name>\n-  <embed/>\n-  <cap-height>727</cap-height>\n-  <x-height>545</x-height>\n-  <ascender>764</ascender>\n-  <descender>-206</descender>\n-  <bbox>\n-    <left>-49</left>\n-    <bottom>-206</bottom>\n-    <right>1446</right>\n-    <top>1000</top>\n-  </bbox>\n-  <flags>33</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"3\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"892\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"16\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"256\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"257\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"172\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"173\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"174\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"183\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"185\"/>\n-      <bf us=\"256\" ue=\"257\" gi=\"324\"/>\n-      <bf us=\"258\" ue=\"261\" gi=\"258\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"326\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"262\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"279\" gi=\"330\"/>\n-      <bf us=\"280\" ue=\"283\" gi=\"265\"/>\n-      <bf us=\"284\" ue=\"285\" gi=\"336\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"338\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"307\" gi=\"312\"/>\n-      <bf us=\"308\" ue=\"312\" gi=\"354\"/>\n-      <bf us=\"313\" ue=\"314\" gi=\"269\"/>\n-      <bf us=\"315\" ue=\"316\" gi=\"359\"/>\n-      <bf us=\"317\" ue=\"320\" gi=\"271\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"324\" gi=\"275\"/>\n-      <bf us=\"325\" ue=\"326\" gi=\"361\"/>\n-      <bf us=\"327\" ue=\"328\" gi=\"277\"/>\n-      <bf us=\"329\" ue=\"329\" gi=\"314\"/>\n-      <bf us=\"330\" ue=\"335\" gi=\"363\"/>\n-      <bf us=\"336\" ue=\"337\" gi=\"279\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"175\"/>\n-      <bf us=\"340\" ue=\"341\" gi=\"281\"/>\n-      <bf us=\"342\" ue=\"343\" gi=\"369\"/>\n-      <bf us=\"344\" ue=\"347\" gi=\"283\"/>\n-      <bf us=\"348\" ue=\"349\" gi=\"371\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"357\" gi=\"287\"/>\n-      <bf us=\"358\" ue=\"365\" gi=\"373\"/>\n-      <bf us=\"366\" ue=\"369\" gi=\"291\"/>\n-      <bf us=\"370\" ue=\"375\" gi=\"381\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"186\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"295\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"387\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"416\" ue=\"417\" gi=\"582\"/>\n-      <bf us=\"431\" ue=\"432\" gi=\"584\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"388\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"768\" ue=\"769\" gi=\"588\"/>\n-      <bf us=\"771\" ue=\"771\" gi=\"891\"/>\n-      <bf us=\"777\" ue=\"777\" gi=\"586\"/>\n-      <bf us=\"803\" ue=\"803\" gi=\"587\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"30\"/>\n-      <bf us=\"900\" ue=\"902\" gi=\"413\"/>\n-      <bf us=\"903\" ue=\"903\" gi=\"394\"/>\n-      <bf us=\"904\" ue=\"906\" gi=\"416\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"419\"/>\n-      <bf us=\"910\" ue=\"914\" gi=\"420\"/>\n-      <bf us=\"915\" ue=\"915\" gi=\"299\"/>\n-      <bf us=\"916\" ue=\"919\" gi=\"425\"/>\n-      <bf us=\"920\" ue=\"920\" gi=\"300\"/>\n-      <bf us=\"921\" ue=\"929\" gi=\"429\"/>\n-      <bf us=\"931\" ue=\"933\" gi=\"438\"/>\n-      <bf us=\"934\" ue=\"934\" gi=\"301\"/>\n-      <bf us=\"935\" ue=\"944\" gi=\"441\"/>\n-      <bf us=\"945\" ue=\"945\" gi=\"302\"/>\n-      <bf us=\"946\" ue=\"947\" gi=\"451\"/>\n-      <bf us=\"948\" ue=\"949\" gi=\"303\"/>\n-      <bf us=\"950\" ue=\"959\" gi=\"453\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"570\"/>\n-      <bf us=\"961\" ue=\"962\" gi=\"463\"/>\n-      <bf us=\"963\" ue=\"964\" gi=\"305\"/>\n-      <bf us=\"965\" ue=\"965\" gi=\"465\"/>\n-      <bf us=\"966\" ue=\"966\" gi=\"307\"/>\n-      <bf us=\"967\" ue=\"974\" gi=\"466\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"474\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"486\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"552\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"564\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"566\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"395\"/>\n-      <bf us=\"7840\" ue=\"7883\" gi=\"605\"/>\n-      <bf us=\"7884\" ue=\"7921\" gi=\"844\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"401\"/>\n-      <bf us=\"7924\" ue=\"7929\" gi=\"884\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"177\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"568\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"308\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"181\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8219\" ue=\"8219\" gi=\"403\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"179\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8242\" ue=\"8243\" gi=\"315\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"309\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"404\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"187\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"310\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"405\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"311\"/>\n-      <bf us=\"8363\" ue=\"8363\" gi=\"890\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"188\"/>\n-      <bf us=\"8453\" ue=\"8453\" gi=\"317\"/>\n-      <bf us=\"8467\" ue=\"8467\" gi=\"318\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"569\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8494\" ue=\"8494\" gi=\"406\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"407\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8725\" ue=\"8725\" gi=\"187\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"9633\" ue=\"9633\" gi=\"319\"/>\n-      <bf us=\"9642\" ue=\"9643\" gi=\"320\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"184\"/>\n-      <bf us=\"9679\" ue=\"9679\" gi=\"322\"/>\n-      <bf us=\"9702\" ue=\"9702\" gi=\"323\"/>\n-      <bf us=\"61441\" ue=\"61442\" gi=\"191\"/>\n-      <bf us=\"61444\" ue=\"61445\" gi=\"411\"/>\n-      <bf us=\"61446\" ue=\"61453\" gi=\"571\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"1000\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"393\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"1076\"/>\n-      <wx w=\"726\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"574\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"972\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"634\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"634\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"976\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"984\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"641\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"707\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"955\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"393\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1069\"/>\n-      <wx w=\"981\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"1521\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"561\"/>\n-      <wx w=\"284\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"611\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"363\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"647\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"295\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"458\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"525\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"607\"/>\n-      <wx w=\"512\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"496\"/>\n-      <wx w=\"790\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"624\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"1163\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"613\"/>\n-      <wx w=\"730\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"557\"/>\n-      <wx w=\"1076\"/>\n-      <wx w=\"323\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"775\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"695\"/>\n-      <wx w=\"426\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"394\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"630\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"300\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"984\"/>\n-      <wx w=\"955\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"988\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"268\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"717\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"210\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"539\"/>\n-      <wx w=\"880\"/>\n-      <wx w=\"753\"/>\n-      <wx w=\"907\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"703\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"648\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"672\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"870\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"512\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"457\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"624\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"639\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"502\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"625\"/>\n-      <wx w=\"507\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"589\"/>\n-      <wx w=\"821\"/>\n-      <wx w=\"813\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"631\"/>\n-      <wx w=\"813\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"792\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"700\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"454\"/>\n-      <wx w=\"1118\"/>\n-      <wx w=\"1103\"/>\n-      <wx w=\"817\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"745\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"973\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"750\"/>\n-      <wx w=\"692\"/>\n-      <wx w=\"734\"/>\n-      <wx w=\"842\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"751\"/>\n-      <wx w=\"603\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"818\"/>\n-      <wx w=\"685\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"711\"/>\n-      <wx w=\"1030\"/>\n-      <wx w=\"1044\"/>\n-      <wx w=\"783\"/>\n-      <wx w=\"920\"/>\n-      <wx w=\"680\"/>\n-      <wx w=\"701\"/>\n-      <wx w=\"1034\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"614\"/>\n-      <wx w=\"594\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"621\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"797\"/>\n-      <wx w=\"524\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"620\"/>\n-      <wx w=\"696\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"534\"/>\n-      <wx w=\"496\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"840\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"644\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"875\"/>\n-      <wx w=\"887\"/>\n-      <wx w=\"640\"/>\n-      <wx w=\"794\"/>\n-      <wx w=\"570\"/>\n-      <wx w=\"546\"/>\n-      <wx w=\"838\"/>\n-      <wx w=\"599\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"546\"/>\n-      <wx w=\"520\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"566\"/>\n-      <wx w=\"471\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1171\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"541\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"600\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"595\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"420\"/>\n-      <wx w=\"274\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"806\"/>\n-      <wx w=\"606\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"731\"/>\n-      <wx w=\"632\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"756\"/>\n-      <wx w=\"659\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"615\"/>\n-      <wx w=\"591\"/>\n-      <wx w=\"623\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"635\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-  <kerning kpx1=\"93\">\n-    <pair kpx2=\"111\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"84\" kern=\"-4\"/>\n-    <pair kpx2=\"82\" kern=\"-5\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-5\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-4\"/>\n-    <pair kpx2=\"161\" kern=\"-5\"/>\n-  </kerning>\n-  <kerning kpx1=\"92\">\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"111\" kern=\"-8\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"17\" kern=\"-92\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"176\" kern=\"-7\"/>\n-    <pair kpx2=\"84\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-92\"/>\n-    <pair kpx2=\"82\" kern=\"-8\"/>\n-    <pair kpx2=\"171\" kern=\"-87\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-8\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-8\"/>\n-    <pair kpx2=\"161\" kern=\"-8\"/>\n-  </kerning>\n-  <kerning kpx1=\"91\">\n-    <pair kpx2=\"111\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"176\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-11\"/>\n-    <pair kpx2=\"74\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-11\"/>\n-    <pair kpx2=\"71\" kern=\"-4\"/>\n-    <pair kpx2=\"70\" kern=\"-9\"/>\n-    <pair kpx2=\"161\" kern=\"-11\"/>\n-  </kerning>\n-  <kerning kpx1=\"90\">\n-    <pair kpx2=\"171\" kern=\"-34\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-34\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-34\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"89\">\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"17\" kern=\"-87\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"176\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-87\"/>\n-    <pair kpx2=\"82\" kern=\"-8\"/>\n-    <pair kpx2=\"171\" kern=\"-87\"/>\n-    <pair kpx2=\"72\" kern=\"-8\"/>\n-    <pair kpx2=\"161\" kern=\"-8\"/>\n-  </kerning>\n-  <kerning kpx1=\"182\">\n-    <pair kpx2=\"87\" kern=\"19\"/>\n-    <pair kpx2=\"17\" kern=\"-102\"/>\n-    <pair kpx2=\"86\" kern=\"-34\"/>\n-    <pair kpx2=\"15\" kern=\"-102\"/>\n-    <pair kpx2=\"60\" kern=\"53\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"58\" kern=\"29\"/>\n-    <pair kpx2=\"57\" kern=\"48\"/>\n-    <pair kpx2=\"171\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"53\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"87\">\n-    <pair kpx2=\"182\" kern=\"9\"/>\n-    <pair kpx2=\"16\" kern=\"-19\"/>\n-    <pair kpx2=\"180\" kern=\"9\"/>\n-    <pair kpx2=\"92\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-19\"/>\n-    <pair kpx2=\"177\" kern=\"-19\"/>\n-  </kerning>\n-  <kerning kpx1=\"181\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"180\">\n-    <pair kpx2=\"87\" kern=\"19\"/>\n-    <pair kpx2=\"17\" kern=\"-102\"/>\n-    <pair kpx2=\"86\" kern=\"-34\"/>\n-    <pair kpx2=\"15\" kern=\"-102\"/>\n-    <pair kpx2=\"60\" kern=\"53\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"58\" kern=\"29\"/>\n-    <pair kpx2=\"57\" kern=\"48\"/>\n-    <pair kpx2=\"171\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"53\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"85\">\n-    <pair kpx2=\"68\" kern=\"-17\"/>\n-    <pair kpx2=\"160\" kern=\"-19\"/>\n-    <pair kpx2=\"182\" kern=\"14\"/>\n-    <pair kpx2=\"180\" kern=\"14\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-  </kerning>\n-  <kerning kpx1=\"179\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"178\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"83\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-2\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"177\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"82\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"81\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"80\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"78\">\n-    <pair kpx2=\"161\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-48\"/>\n-    <pair kpx2=\"178\" kern=\"-48\"/>\n-    <pair kpx2=\"177\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"171\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"75\">\n-    <pair kpx2=\"92\" kern=\"-9\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"73\">\n-    <pair kpx2=\"182\" kern=\"24\"/>\n-    <pair kpx2=\"180\" kern=\"24\"/>\n-    <pair kpx2=\"64\" kern=\"48\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"63\" kern=\"48\"/>\n-    <pair kpx2=\"17\" kern=\"-58\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-63\"/>\n-    <pair kpx2=\"13\" kern=\"24\"/>\n-    <pair kpx2=\"12\" kern=\"48\"/>\n-    <pair kpx2=\"34\" kern=\"53\"/>\n-    <pair kpx2=\"171\" kern=\"-58\"/>\n-    <pair kpx2=\"10\" kern=\"29\"/>\n-    <pair kpx2=\"5\" kern=\"29\"/>\n-    <pair kpx2=\"96\" kern=\"48\"/>\n-    <pair kpx2=\"92\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"72\">\n-    <pair kpx2=\"55\" kern=\"-68\"/>\n-  </kerning>\n-  <kerning kpx1=\"70\">\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"69\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-2\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"68\">\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"90\" kern=\"-4\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"161\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-7\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-7\"/>\n-  </kerning>\n-  <kerning kpx1=\"61\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"90\" kern=\"-19\"/>\n-    <pair kpx2=\"42\" kern=\"-9\"/>\n-    <pair kpx2=\"38\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-29\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-29\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-29\"/>\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-29\"/>\n-    <pair kpx2=\"61\" kern=\"-4\"/>\n-    <pair kpx2=\"100\" kern=\"-9\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"60\">\n-    <pair kpx2=\"89\" kern=\"-48\"/>\n-    <pair kpx2=\"88\" kern=\"-53\"/>\n-    <pair kpx2=\"86\" kern=\"-53\"/>\n-    <pair kpx2=\"85\" kern=\"-48\"/>\n-    <pair kpx2=\"178\" kern=\"-68\"/>\n-    <pair kpx2=\"84\" kern=\"-63\"/>\n-    <pair kpx2=\"177\" kern=\"-68\"/>\n-    <pair kpx2=\"36\" kern=\"-39\"/>\n-    <pair kpx2=\"83\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-63\"/>\n-    <pair kpx2=\"82\" kern=\"-63\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"81\" kern=\"-48\"/>\n-    <pair kpx2=\"80\" kern=\"-48\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"30\" kern=\"-97\"/>\n-    <pair kpx2=\"29\" kern=\"-97\"/>\n-    <pair kpx2=\"74\" kern=\"-63\"/>\n-    <pair kpx2=\"72\" kern=\"-63\"/>\n-    <pair kpx2=\"71\" kern=\"-58\"/>\n-    <pair kpx2=\"68\" kern=\"-68\"/>\n-    <pair kpx2=\"161\" kern=\"-63\"/>\n-    <pair kpx2=\"160\" kern=\"-68\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-68\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-39\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"59\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"88\" kern=\"-14\"/>\n-    <pair kpx2=\"42\" kern=\"-4\"/>\n-    <pair kpx2=\"178\" kern=\"-39\"/>\n-    <pair kpx2=\"177\" kern=\"-39\"/>\n-    <pair kpx2=\"16\" kern=\"-39\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"38\" kern=\"-4\"/>\n-    <pair kpx2=\"175\" kern=\"-4\"/>\n-    <pair kpx2=\"82\" kern=\"-29\"/>\n-    <pair kpx2=\"100\" kern=\"-4\"/>\n-    <pair kpx2=\"145\" kern=\"-4\"/>\n-    <pair kpx2=\"50\" kern=\"-4\"/>\n-    <pair kpx2=\"72\" kern=\"-29\"/>\n-    <pair kpx2=\"161\" kern=\"-29\"/>\n-    <pair kpx2=\"92\" kern=\"-39\"/>\n-  </kerning>\n-  <kerning kpx1=\"58\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"88\" kern=\"-29\"/>\n-    <pair kpx2=\"85\" kern=\"-29\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-48\"/>\n-    <pair kpx2=\"30\" kern=\"-39\"/>\n-    <pair kpx2=\"171\" kern=\"-107\"/>\n-    <pair kpx2=\"29\" kern=\"-39\"/>\n-    <pair kpx2=\"72\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"161\" kern=\"-48\"/>\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-107\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"144\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"57\">\n-    <pair kpx2=\"92\" kern=\"-31\"/>\n-    <pair kpx2=\"88\" kern=\"-29\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-29\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-48\"/>\n-    <pair kpx2=\"30\" kern=\"-39\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"29\" kern=\"-39\"/>\n-    <pair kpx2=\"72\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"161\" kern=\"-48\"/>\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"144\" kern=\"-34\"/>\n-  </kerning>\n-  <kerning kpx1=\"56\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-4\"/>\n-    <pair kpx2=\"144\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"55\">\n-    <pair kpx2=\"93\" kern=\"-83\"/>\n-    <pair kpx2=\"92\" kern=\"-97\"/>\n-    <pair kpx2=\"90\" kern=\"-97\"/>\n-    <pair kpx2=\"89\" kern=\"-97\"/>\n-    <pair kpx2=\"42\" kern=\"-19\"/>\n-    <pair kpx2=\"88\" kern=\"-97\"/>\n-    <pair kpx2=\"86\" kern=\"-87\"/>\n-    <pair kpx2=\"85\" kern=\"-97\"/>\n-    <pair kpx2=\"38\" kern=\"-19\"/>\n-    <pair kpx2=\"178\" kern=\"-73\"/>\n-    <pair kpx2=\"177\" kern=\"-73\"/>\n-    <pair kpx2=\"36\" kern=\"-58\"/>\n-    <pair kpx2=\"176\" kern=\"-107\"/>\n-    <pair kpx2=\"82\" kern=\"-107\"/>\n-    <pair kpx2=\"175\" kern=\"-24\"/>\n-    <pair kpx2=\"34\" kern=\"29\"/>\n-    <pair kpx2=\"171\" kern=\"-141\"/>\n-    <pair kpx2=\"30\" kern=\"-97\"/>\n-    <pair kpx2=\"29\" kern=\"-97\"/>\n-    <pair kpx2=\"74\" kern=\"-102\"/>\n-    <pair kpx2=\"72\" kern=\"-107\"/>\n-    <pair kpx2=\"70\" kern=\"-107\"/>\n-    <pair kpx2=\"68\" kern=\"-117\"/>\n-    <pair kpx2=\"161\" kern=\"-107\"/>\n-    <pair kpx2=\"160\" kern=\"-117\"/>\n-    <pair kpx2=\"17\" kern=\"-141\"/>\n-    <pair kpx2=\"16\" kern=\"-73\"/>\n-    <pair kpx2=\"15\" kern=\"-141\"/>\n-    <pair kpx2=\"55\" kern=\"-34\"/>\n-    <pair kpx2=\"54\" kern=\"-5\"/>\n-    <pair kpx2=\"100\" kern=\"-19\"/>\n-    <pair kpx2=\"145\" kern=\"-24\"/>\n-    <pair kpx2=\"144\" kern=\"-63\"/>\n-    <pair kpx2=\"50\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"54\">\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-14\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-9\"/>\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"54\" kern=\"-10\"/>\n-    <pair kpx2=\"144\" kern=\"-9\"/>\n-    <pair kpx2=\"92\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"53\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-19\"/>\n-    <pair kpx2=\"182\" kern=\"-34\"/>\n-    <pair kpx2=\"180\" kern=\"-34\"/>\n-    <pair kpx2=\"88\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-48\"/>\n-    <pair kpx2=\"177\" kern=\"-48\"/>\n-    <pair kpx2=\"16\" kern=\"-48\"/>\n-    <pair kpx2=\"176\" kern=\"-29\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-    <pair kpx2=\"92\" kern=\"-26\"/>\n-  </kerning>\n-  <kerning kpx1=\"52\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"51\">\n-    <pair kpx2=\"160\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-24\"/>\n-    <pair kpx2=\"17\" kern=\"-146\"/>\n-    <pair kpx2=\"176\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-146\"/>\n-    <pair kpx2=\"60\" kern=\"9\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"171\" kern=\"-146\"/>\n-    <pair kpx2=\"144\" kern=\"-34\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"145\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"50\">\n-    <pair kpx2=\"171\" kern=\"-14\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-14\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"47\">\n-    <pair kpx2=\"92\" kern=\"-53\"/>\n-    <pair kpx2=\"45\" kern=\"48\"/>\n-    <pair kpx2=\"42\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-53\"/>\n-    <pair kpx2=\"182\" kern=\"-78\"/>\n-    <pair kpx2=\"180\" kern=\"-78\"/>\n-    <pair kpx2=\"38\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-78\"/>\n-    <pair kpx2=\"177\" kern=\"-78\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"-78\"/>\n-    <pair kpx2=\"60\" kern=\"-78\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"10\" kern=\"-58\"/>\n-    <pair kpx2=\"57\" kern=\"-53\"/>\n-    <pair kpx2=\"55\" kern=\"-83\"/>\n-    <pair kpx2=\"100\" kern=\"-9\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"46\">\n-    <pair kpx2=\"160\" kern=\"-29\"/>\n-    <pair kpx2=\"68\" kern=\"-29\"/>\n-    <pair kpx2=\"90\" kern=\"-34\"/>\n-    <pair kpx2=\"89\" kern=\"-39\"/>\n-    <pair kpx2=\"88\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-53\"/>\n-    <pair kpx2=\"177\" kern=\"-53\"/>\n-    <pair kpx2=\"16\" kern=\"-53\"/>\n-    <pair kpx2=\"176\" kern=\"-34\"/>\n-    <pair kpx2=\"175\" kern=\"-9\"/>\n-    <pair kpx2=\"82\" kern=\"-34\"/>\n-    <pair kpx2=\"145\" kern=\"-9\"/>\n-    <pair kpx2=\"50\" kern=\"-9\"/>\n-    <pair kpx2=\"72\" kern=\"-34\"/>\n-    <pair kpx2=\"161\" kern=\"-34\"/>\n-    <pair kpx2=\"92\" kern=\"-39\"/>\n-  </kerning>\n-  <kerning kpx1=\"45\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"36\" kern=\"-4\"/>\n-    <pair kpx2=\"144\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"44\">\n-    <pair kpx2=\"16\" kern=\"-14\"/>\n-    <pair kpx2=\"178\" kern=\"-14\"/>\n-    <pair kpx2=\"177\" kern=\"-14\"/>\n-  </kerning>\n-  <kerning kpx1=\"41\">\n-    <pair kpx2=\"160\" kern=\"-48\"/>\n-    <pair kpx2=\"68\" kern=\"-48\"/>\n-    <pair kpx2=\"17\" kern=\"-146\"/>\n-    <pair kpx2=\"176\" kern=\"-24\"/>\n-    <pair kpx2=\"15\" kern=\"-146\"/>\n-    <pair kpx2=\"82\" kern=\"-24\"/>\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"34\" kern=\"29\"/>\n-    <pair kpx2=\"171\" kern=\"-146\"/>\n-    <pair kpx2=\"55\" kern=\"14\"/>\n-    <pair kpx2=\"30\" kern=\"-29\"/>\n-    <pair kpx2=\"144\" kern=\"-53\"/>\n-    <pair kpx2=\"29\" kern=\"-29\"/>\n-    <pair kpx2=\"72\" kern=\"-24\"/>\n-    <pair kpx2=\"161\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"39\">\n-    <pair kpx2=\"171\" kern=\"-24\"/>\n-    <pair kpx2=\"61\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-24\"/>\n-    <pair kpx2=\"60\" kern=\"-9\"/>\n-    <pair kpx2=\"59\" kern=\"-4\"/>\n-    <pair kpx2=\"15\" kern=\"-24\"/>\n-    <pair kpx2=\"58\" kern=\"-9\"/>\n-    <pair kpx2=\"55\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"38\">\n-    <pair kpx2=\"175\" kern=\"-12\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"37\">\n-    <pair kpx2=\"171\" kern=\"-9\"/>\n-    <pair kpx2=\"17\" kern=\"-9\"/>\n-    <pair kpx2=\"16\" kern=\"4\"/>\n-    <pair kpx2=\"15\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"4\"/>\n-    <pair kpx2=\"177\" kern=\"4\"/>\n-    <pair kpx2=\"55\" kern=\"-29\"/>\n-  </kerning>\n-  <kerning kpx1=\"36\">\n-    <pair kpx2=\"92\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-14\"/>\n-    <pair kpx2=\"89\" kern=\"-24\"/>\n-    <pair kpx2=\"182\" kern=\"-58\"/>\n-    <pair kpx2=\"88\" kern=\"-4\"/>\n-    <pair kpx2=\"87\" kern=\"-9\"/>\n-    <pair kpx2=\"181\" kern=\"-24\"/>\n-    <pair kpx2=\"180\" kern=\"-58\"/>\n-    <pair kpx2=\"179\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"60\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-29\"/>\n-    <pair kpx2=\"56\" kern=\"-4\"/>\n-    <pair kpx2=\"55\" kern=\"-58\"/>\n-    <pair kpx2=\"54\" kern=\"-4\"/>\n-  </kerning>\n-  <kerning kpx1=\"29\">\n-    <pair kpx2=\"178\" kern=\"-68\"/>\n-  </kerning>\n-  <kerning kpx1=\"17\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"16\" kern=\"-78\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-    <pair kpx2=\"15\" kern=\"-63\"/>\n-    <pair kpx2=\"178\" kern=\"-58\"/>\n-    <pair kpx2=\"177\" kern=\"-58\"/>\n-  </kerning>\n-  <kerning kpx1=\"111\">\n-    <pair kpx2=\"16\" kern=\"-9\"/>\n-    <pair kpx2=\"178\" kern=\"-9\"/>\n-    <pair kpx2=\"177\" kern=\"-9\"/>\n-  </kerning>\n-  <kerning kpx1=\"16\">\n-    <pair kpx2=\"93\" kern=\"-19\"/>\n-    <pair kpx2=\"92\" kern=\"-19\"/>\n-    <pair kpx2=\"45\" kern=\"-48\"/>\n-    <pair kpx2=\"44\" kern=\"-14\"/>\n-    <pair kpx2=\"91\" kern=\"-24\"/>\n-    <pair kpx2=\"90\" kern=\"-9\"/>\n-    <pair kpx2=\"89\" kern=\"-19\"/>\n-    <pair kpx2=\"36\" kern=\"-24\"/>\n-    <pair kpx2=\"68\" kern=\"-9\"/>\n-    <pair kpx2=\"160\" kern=\"-9\"/>\n-    <pair kpx2=\"61\" kern=\"-14\"/>\n-    <pair kpx2=\"60\" kern=\"-68\"/>\n-    <pair kpx2=\"59\" kern=\"-39\"/>\n-    <pair kpx2=\"58\" kern=\"-24\"/>\n-    <pair kpx2=\"57\" kern=\"-24\"/>\n-    <pair kpx2=\"55\" kern=\"-73\"/>\n-    <pair kpx2=\"54\" kern=\"-9\"/>\n-    <pair kpx2=\"144\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"15\">\n-    <pair kpx2=\"182\" kern=\"-102\"/>\n-    <pair kpx2=\"180\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"10\">\n-    <pair kpx2=\"36\" kern=\"-48\"/>\n-    <pair kpx2=\"144\" kern=\"-48\"/>\n-  </kerning>\n-  <kerning kpx1=\"196\">\n-    <pair kpx2=\"60\" kern=\"-102\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"57\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"195\">\n-    <pair kpx2=\"60\" kern=\"-102\"/>\n-    <pair kpx2=\"58\" kern=\"-48\"/>\n-    <pair kpx2=\"57\" kern=\"-102\"/>\n-    <pair kpx2=\"55\" kern=\"-102\"/>\n-  </kerning>\n-  <kerning kpx1=\"100\">\n-    <pair kpx2=\"175\" kern=\"-12\"/>\n-    <pair kpx2=\"16\" kern=\"-24\"/>\n-    <pair kpx2=\"178\" kern=\"-24\"/>\n-    <pair kpx2=\"177\" kern=\"-24\"/>\n-  </kerning>\n-  <kerning kpx1=\"4\">\n-    <pair kpx2=\"182\" kern=\"-48\"/>\n-    <pair kpx2=\"180\" kern=\"-48\"/>\n-  </kerning>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/VERDANA.ttf.xml",
                "sha": "1c113be9d7c0265337e06365d06bd936d4aa397b",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "changes": 1167,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/VERDANAB.ttf.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 1167,
                "filename": "src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "patch": "@@ -1,1167 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>Verdana,Bold</font-name>\n-  <embed/>\n-  <cap-height>727</cap-height>\n-  <x-height>548</x-height>\n-  <ascender>764</ascender>\n-  <descender>-206</descender>\n-  <bbox>\n-    <left>-73</left>\n-    <bottom>-207</bottom>\n-    <right>1707</right>\n-    <top>1000</top>\n-  </bbox>\n-  <flags>33</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"3\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"892\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"16\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"256\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"257\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"172\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"173\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"174\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"183\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"185\"/>\n-      <bf us=\"256\" ue=\"257\" gi=\"324\"/>\n-      <bf us=\"258\" ue=\"261\" gi=\"258\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"326\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"262\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"279\" gi=\"330\"/>\n-      <bf us=\"280\" ue=\"283\" gi=\"265\"/>\n-      <bf us=\"284\" ue=\"285\" gi=\"336\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"338\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"307\" gi=\"312\"/>\n-      <bf us=\"308\" ue=\"312\" gi=\"354\"/>\n-      <bf us=\"313\" ue=\"314\" gi=\"269\"/>\n-      <bf us=\"315\" ue=\"316\" gi=\"359\"/>\n-      <bf us=\"317\" ue=\"320\" gi=\"271\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"324\" gi=\"275\"/>\n-      <bf us=\"325\" ue=\"326\" gi=\"361\"/>\n-      <bf us=\"327\" ue=\"328\" gi=\"277\"/>\n-      <bf us=\"329\" ue=\"329\" gi=\"314\"/>\n-      <bf us=\"330\" ue=\"335\" gi=\"363\"/>\n-      <bf us=\"336\" ue=\"337\" gi=\"279\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"175\"/>\n-      <bf us=\"340\" ue=\"341\" gi=\"281\"/>\n-      <bf us=\"342\" ue=\"343\" gi=\"369\"/>\n-      <bf us=\"344\" ue=\"347\" gi=\"283\"/>\n-      <bf us=\"348\" ue=\"349\" gi=\"371\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"357\" gi=\"287\"/>\n-      <bf us=\"358\" ue=\"365\" gi=\"373\"/>\n-      <bf us=\"366\" ue=\"369\" gi=\"291\"/>\n-      <bf us=\"370\" ue=\"375\" gi=\"381\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"186\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"295\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"387\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"416\" ue=\"417\" gi=\"582\"/>\n-      <bf us=\"431\" ue=\"432\" gi=\"584\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"388\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"768\" ue=\"769\" gi=\"588\"/>\n-      <bf us=\"771\" ue=\"771\" gi=\"891\"/>\n-      <bf us=\"777\" ue=\"777\" gi=\"586\"/>\n-      <bf us=\"803\" ue=\"803\" gi=\"587\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"30\"/>\n-      <bf us=\"900\" ue=\"902\" gi=\"413\"/>\n-      <bf us=\"903\" ue=\"903\" gi=\"394\"/>\n-      <bf us=\"904\" ue=\"906\" gi=\"416\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"419\"/>\n-      <bf us=\"910\" ue=\"914\" gi=\"420\"/>\n-      <bf us=\"915\" ue=\"915\" gi=\"299\"/>\n-      <bf us=\"916\" ue=\"919\" gi=\"425\"/>\n-      <bf us=\"920\" ue=\"920\" gi=\"300\"/>\n-      <bf us=\"921\" ue=\"929\" gi=\"429\"/>\n-      <bf us=\"931\" ue=\"933\" gi=\"438\"/>\n-      <bf us=\"934\" ue=\"934\" gi=\"301\"/>\n-      <bf us=\"935\" ue=\"944\" gi=\"441\"/>\n-      <bf us=\"945\" ue=\"945\" gi=\"302\"/>\n-      <bf us=\"946\" ue=\"947\" gi=\"451\"/>\n-      <bf us=\"948\" ue=\"949\" gi=\"303\"/>\n-      <bf us=\"950\" ue=\"959\" gi=\"453\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"570\"/>\n-      <bf us=\"961\" ue=\"962\" gi=\"463\"/>\n-      <bf us=\"963\" ue=\"964\" gi=\"305\"/>\n-      <bf us=\"965\" ue=\"965\" gi=\"465\"/>\n-      <bf us=\"966\" ue=\"966\" gi=\"307\"/>\n-      <bf us=\"967\" ue=\"974\" gi=\"466\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"474\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"486\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"552\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"564\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"566\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"395\"/>\n-      <bf us=\"7840\" ue=\"7883\" gi=\"605\"/>\n-      <bf us=\"7884\" ue=\"7921\" gi=\"844\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"401\"/>\n-      <bf us=\"7924\" ue=\"7929\" gi=\"884\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"177\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"568\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"308\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"181\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8219\" ue=\"8219\" gi=\"403\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"179\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8242\" ue=\"8243\" gi=\"315\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"309\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"404\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"187\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"310\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"405\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"311\"/>\n-      <bf us=\"8363\" ue=\"8363\" gi=\"890\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"188\"/>\n-      <bf us=\"8453\" ue=\"8453\" gi=\"317\"/>\n-      <bf us=\"8467\" ue=\"8467\" gi=\"318\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"569\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8494\" ue=\"8494\" gi=\"406\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"407\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8725\" ue=\"8725\" gi=\"187\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"9633\" ue=\"9633\" gi=\"319\"/>\n-      <bf us=\"9642\" ue=\"9643\" gi=\"320\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"184\"/>\n-      <bf us=\"9679\" ue=\"9679\" gi=\"322\"/>\n-      <bf us=\"9702\" ue=\"9702\" gi=\"323\"/>\n-      <bf us=\"61441\" ue=\"61442\" gi=\"191\"/>\n-      <bf us=\"61444\" ue=\"61445\" gi=\"411\"/>\n-      <bf us=\"61446\" ue=\"61450\" gi=\"571\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"1000\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"1271\"/>\n-      <wx w=\"862\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"479\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"689\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"689\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"422\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"1058\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"668\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"963\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"1093\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"1058\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"721\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"698\"/>\n-      <wx w=\"869\"/>\n-      <wx w=\"708\"/>\n-      <wx w=\"538\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"843\"/>\n-      <wx w=\"1018\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"805\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"1048\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"1135\"/>\n-      <wx w=\"1067\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"439\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"730\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"1777\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"642\"/>\n-      <wx w=\"351\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"543\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"679\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"734\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"867\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"361\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"879\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"522\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"556\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"465\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"596\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"952\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"584\"/>\n-      <wx w=\"725\"/>\n-      <wx w=\"535\"/>\n-      <wx w=\"914\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"703\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"1343\"/>\n-      <wx w=\"1007\"/>\n-      <wx w=\"727\"/>\n-      <wx w=\"825\"/>\n-      <wx w=\"352\"/>\n-      <wx w=\"616\"/>\n-      <wx w=\"1271\"/>\n-      <wx w=\"414\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"604\"/>\n-      <wx w=\"354\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"588\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"811\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"782\"/>\n-      <wx w=\"497\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"455\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"344\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"1093\"/>\n-      <wx w=\"1018\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"1128\"/>\n-      <wx w=\"979\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"748\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"1181\"/>\n-      <wx w=\"332\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"797\"/>\n-      <wx w=\"847\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"705\"/>\n-      <wx w=\"968\"/>\n-      <wx w=\"939\"/>\n-      <wx w=\"970\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"805\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"714\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"976\"/>\n-      <wx w=\"843\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"584\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"716\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"549\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"700\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"721\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"580\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"562\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"635\"/>\n-      <wx w=\"941\"/>\n-      <wx w=\"894\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"894\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"910\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"555\"/>\n-      <wx w=\"1222\"/>\n-      <wx w=\"1214\"/>\n-      <wx w=\"936\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"757\"/>\n-      <wx w=\"761\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"841\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"1115\"/>\n-      <wx w=\"706\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"770\"/>\n-      <wx w=\"845\"/>\n-      <wx w=\"947\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"837\"/>\n-      <wx w=\"732\"/>\n-      <wx w=\"723\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"952\"/>\n-      <wx w=\"763\"/>\n-      <wx w=\"849\"/>\n-      <wx w=\"787\"/>\n-      <wx w=\"1163\"/>\n-      <wx w=\"1177\"/>\n-      <wx w=\"907\"/>\n-      <wx w=\"1062\"/>\n-      <wx w=\"757\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"1195\"/>\n-      <wx w=\"794\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"696\"/>\n-      <wx w=\"677\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"691\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"999\"/>\n-      <wx w=\"587\"/>\n-      <wx w=\"720\"/>\n-      <wx w=\"720\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"709\"/>\n-      <wx w=\"830\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"598\"/>\n-      <wx w=\"535\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"965\"/>\n-      <wx w=\"668\"/>\n-      <wx w=\"729\"/>\n-      <wx w=\"684\"/>\n-      <wx w=\"1002\"/>\n-      <wx w=\"1012\"/>\n-      <wx w=\"743\"/>\n-      <wx w=\"937\"/>\n-      <wx w=\"649\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"994\"/>\n-      <wx w=\"681\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"605\"/>\n-      <wx w=\"593\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"402\"/>\n-      <wx w=\"1012\"/>\n-      <wx w=\"1019\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"670\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"637\"/>\n-      <wx w=\"531\"/>\n-      <wx w=\"1000\"/>\n-      <wx w=\"1293\"/>\n-      <wx w=\"719\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"597\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"710\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"776\"/>\n-      <wx w=\"667\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"683\"/>\n-      <wx w=\"664\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"545\"/>\n-      <wx w=\"341\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"850\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"913\"/>\n-      <wx w=\"686\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"812\"/>\n-      <wx w=\"712\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"846\"/>\n-      <wx w=\"741\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"736\"/>\n-      <wx w=\"650\"/>\n-      <wx w=\"699\"/>\n-      <wx w=\"0\"/>\n-      <wx w=\"710\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/VERDANAB.ttf.xml",
                "sha": "0666d19b2fd17ee1b500be53921d674a6e308fdd",
                "status": "removed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/cfg/fop.xconf",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/fop.xconf?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 11,
                "filename": "src/documentation/poster/cfg/fop.xconf",
                "patch": "@@ -17,23 +17,13 @@\n -->\n <!-- $Id$ -->\n <fop>\n-  <base>.</base>\n   <source-resolution>72</source-resolution>\n   <target-resolution>300</target-resolution>\n-  <default-page-settings height=\"11in\" width=\"8.26in\"/>\n   <renderers>\n     <renderer mime=\"application/pdf\">\n       <!--output-profile>cfg/ISOuncoated.icc</output-profile-->\n       <fonts>\n-        <font metrics-url=\"cfg\\VERDANA.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\VERDANA.ttf\">\n-          <font-triplet name=\"Verdana\" style=\"normal\" weight=\"normal\"/>\n-        </font>\n-        <font metrics-url=\"cfg\\VERDANAB.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\VERDANAB.ttf\">\n-          <font-triplet name=\"Verdana\" style=\"normal\" weight=\"bold\"/>\n-        </font>\n-        <font metrics-url=\"cfg\\LUCON.ttf.xml\" kerning=\"yes\" embed-url=\"cfg\\LUCON.ttf\">\n-          <font-triplet name=\"Lucida Console\" style=\"normal\" weight=\"normal\"/>\n-        </font>\n+        <auto-detect/>\n       </fonts>\n     </renderer>\n   </renderers>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/cfg/fop.xconf",
                "sha": "788d589208a5d0e2b3eec224e0c212a4487a5eae",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/lucon.ttf.xml",
                "changes": 925,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/cfg/lucon.ttf.xml?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 925,
                "filename": "src/documentation/poster/cfg/lucon.ttf.xml",
                "patch": "@@ -1,925 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- $Id$ -->\n-<font-metrics type=\"TYPE0\">\n-  <font-name>LucidaConsole</font-name>\n-  <embed/>\n-  <cap-height>626</cap-height>\n-  <x-height>530</x-height>\n-  <ascender>783</ascender>\n-  <descender>-205</descender>\n-  <bbox>\n-    <left>0</left>\n-    <bottom>-210</bottom>\n-    <right>602</right>\n-    <top>789</top>\n-  </bbox>\n-  <flags>35</flags>\n-  <stemv>0</stemv>\n-  <italicangle>0</italicangle>\n-  <subtype>TYPE0</subtype>\n-  <multibyte-extras>\n-    <cid-type>CIDFontType2</cid-type>\n-    <default-width>0</default-width>\n-    <bfranges>\n-      <bf us=\"32\" ue=\"126\" gi=\"3\"/>\n-      <bf us=\"160\" ue=\"160\" gi=\"172\"/>\n-      <bf us=\"161\" ue=\"161\" gi=\"163\"/>\n-      <bf us=\"162\" ue=\"163\" gi=\"132\"/>\n-      <bf us=\"164\" ue=\"164\" gi=\"188\"/>\n-      <bf us=\"165\" ue=\"165\" gi=\"150\"/>\n-      <bf us=\"166\" ue=\"166\" gi=\"230\"/>\n-      <bf us=\"167\" ue=\"167\" gi=\"134\"/>\n-      <bf us=\"168\" ue=\"168\" gi=\"142\"/>\n-      <bf us=\"169\" ue=\"169\" gi=\"139\"/>\n-      <bf us=\"170\" ue=\"170\" gi=\"157\"/>\n-      <bf us=\"171\" ue=\"171\" gi=\"169\"/>\n-      <bf us=\"172\" ue=\"172\" gi=\"164\"/>\n-      <bf us=\"173\" ue=\"173\" gi=\"256\"/>\n-      <bf us=\"174\" ue=\"174\" gi=\"138\"/>\n-      <bf us=\"175\" ue=\"175\" gi=\"257\"/>\n-      <bf us=\"176\" ue=\"176\" gi=\"131\"/>\n-      <bf us=\"177\" ue=\"177\" gi=\"147\"/>\n-      <bf us=\"178\" ue=\"179\" gi=\"240\"/>\n-      <bf us=\"180\" ue=\"180\" gi=\"141\"/>\n-      <bf us=\"181\" ue=\"181\" gi=\"151\"/>\n-      <bf us=\"182\" ue=\"182\" gi=\"136\"/>\n-      <bf us=\"183\" ue=\"183\" gi=\"258\"/>\n-      <bf us=\"184\" ue=\"184\" gi=\"220\"/>\n-      <bf us=\"185\" ue=\"185\" gi=\"239\"/>\n-      <bf us=\"186\" ue=\"186\" gi=\"158\"/>\n-      <bf us=\"187\" ue=\"187\" gi=\"170\"/>\n-      <bf us=\"188\" ue=\"188\" gi=\"243\"/>\n-      <bf us=\"189\" ue=\"189\" gi=\"242\"/>\n-      <bf us=\"190\" ue=\"190\" gi=\"244\"/>\n-      <bf us=\"191\" ue=\"191\" gi=\"162\"/>\n-      <bf us=\"192\" ue=\"192\" gi=\"173\"/>\n-      <bf us=\"193\" ue=\"193\" gi=\"200\"/>\n-      <bf us=\"194\" ue=\"194\" gi=\"198\"/>\n-      <bf us=\"195\" ue=\"195\" gi=\"174\"/>\n-      <bf us=\"196\" ue=\"197\" gi=\"98\"/>\n-      <bf us=\"198\" ue=\"198\" gi=\"144\"/>\n-      <bf us=\"199\" ue=\"199\" gi=\"100\"/>\n-      <bf us=\"200\" ue=\"200\" gi=\"202\"/>\n-      <bf us=\"201\" ue=\"201\" gi=\"101\"/>\n-      <bf us=\"202\" ue=\"202\" gi=\"199\"/>\n-      <bf us=\"203\" ue=\"203\" gi=\"201\"/>\n-      <bf us=\"204\" ue=\"204\" gi=\"206\"/>\n-      <bf us=\"205\" ue=\"207\" gi=\"203\"/>\n-      <bf us=\"208\" ue=\"208\" gi=\"231\"/>\n-      <bf us=\"209\" ue=\"209\" gi=\"102\"/>\n-      <bf us=\"210\" ue=\"210\" gi=\"209\"/>\n-      <bf us=\"211\" ue=\"212\" gi=\"207\"/>\n-      <bf us=\"213\" ue=\"213\" gi=\"175\"/>\n-      <bf us=\"214\" ue=\"214\" gi=\"103\"/>\n-      <bf us=\"215\" ue=\"215\" gi=\"238\"/>\n-      <bf us=\"216\" ue=\"216\" gi=\"145\"/>\n-      <bf us=\"217\" ue=\"217\" gi=\"212\"/>\n-      <bf us=\"218\" ue=\"219\" gi=\"210\"/>\n-      <bf us=\"220\" ue=\"220\" gi=\"104\"/>\n-      <bf us=\"221\" ue=\"221\" gi=\"233\"/>\n-      <bf us=\"222\" ue=\"222\" gi=\"235\"/>\n-      <bf us=\"223\" ue=\"223\" gi=\"137\"/>\n-      <bf us=\"224\" ue=\"224\" gi=\"106\"/>\n-      <bf us=\"225\" ue=\"225\" gi=\"105\"/>\n-      <bf us=\"226\" ue=\"226\" gi=\"107\"/>\n-      <bf us=\"227\" ue=\"227\" gi=\"109\"/>\n-      <bf us=\"228\" ue=\"228\" gi=\"108\"/>\n-      <bf us=\"229\" ue=\"229\" gi=\"110\"/>\n-      <bf us=\"230\" ue=\"230\" gi=\"160\"/>\n-      <bf us=\"231\" ue=\"231\" gi=\"111\"/>\n-      <bf us=\"232\" ue=\"232\" gi=\"113\"/>\n-      <bf us=\"233\" ue=\"233\" gi=\"112\"/>\n-      <bf us=\"234\" ue=\"235\" gi=\"114\"/>\n-      <bf us=\"236\" ue=\"236\" gi=\"117\"/>\n-      <bf us=\"237\" ue=\"237\" gi=\"116\"/>\n-      <bf us=\"238\" ue=\"239\" gi=\"118\"/>\n-      <bf us=\"240\" ue=\"240\" gi=\"232\"/>\n-      <bf us=\"241\" ue=\"241\" gi=\"120\"/>\n-      <bf us=\"242\" ue=\"242\" gi=\"122\"/>\n-      <bf us=\"243\" ue=\"243\" gi=\"121\"/>\n-      <bf us=\"244\" ue=\"244\" gi=\"123\"/>\n-      <bf us=\"245\" ue=\"245\" gi=\"125\"/>\n-      <bf us=\"246\" ue=\"246\" gi=\"124\"/>\n-      <bf us=\"247\" ue=\"247\" gi=\"184\"/>\n-      <bf us=\"248\" ue=\"248\" gi=\"161\"/>\n-      <bf us=\"249\" ue=\"249\" gi=\"127\"/>\n-      <bf us=\"250\" ue=\"250\" gi=\"126\"/>\n-      <bf us=\"251\" ue=\"252\" gi=\"128\"/>\n-      <bf us=\"253\" ue=\"253\" gi=\"234\"/>\n-      <bf us=\"254\" ue=\"254\" gi=\"236\"/>\n-      <bf us=\"255\" ue=\"255\" gi=\"186\"/>\n-      <bf us=\"256\" ue=\"261\" gi=\"259\"/>\n-      <bf us=\"262\" ue=\"263\" gi=\"251\"/>\n-      <bf us=\"264\" ue=\"267\" gi=\"265\"/>\n-      <bf us=\"268\" ue=\"269\" gi=\"253\"/>\n-      <bf us=\"270\" ue=\"272\" gi=\"269\"/>\n-      <bf us=\"273\" ue=\"273\" gi=\"255\"/>\n-      <bf us=\"274\" ue=\"285\" gi=\"272\"/>\n-      <bf us=\"286\" ue=\"287\" gi=\"246\"/>\n-      <bf us=\"288\" ue=\"303\" gi=\"284\"/>\n-      <bf us=\"304\" ue=\"304\" gi=\"248\"/>\n-      <bf us=\"305\" ue=\"305\" gi=\"213\"/>\n-      <bf us=\"306\" ue=\"320\" gi=\"300\"/>\n-      <bf us=\"321\" ue=\"322\" gi=\"224\"/>\n-      <bf us=\"323\" ue=\"337\" gi=\"315\"/>\n-      <bf us=\"338\" ue=\"339\" gi=\"176\"/>\n-      <bf us=\"340\" ue=\"349\" gi=\"330\"/>\n-      <bf us=\"350\" ue=\"351\" gi=\"249\"/>\n-      <bf us=\"352\" ue=\"353\" gi=\"226\"/>\n-      <bf us=\"354\" ue=\"375\" gi=\"340\"/>\n-      <bf us=\"376\" ue=\"376\" gi=\"187\"/>\n-      <bf us=\"377\" ue=\"380\" gi=\"362\"/>\n-      <bf us=\"381\" ue=\"382\" gi=\"228\"/>\n-      <bf us=\"383\" ue=\"383\" gi=\"366\"/>\n-      <bf us=\"402\" ue=\"402\" gi=\"166\"/>\n-      <bf us=\"506\" ue=\"511\" gi=\"367\"/>\n-      <bf us=\"710\" ue=\"710\" gi=\"214\"/>\n-      <bf us=\"711\" ue=\"711\" gi=\"223\"/>\n-      <bf us=\"713\" ue=\"713\" gi=\"216\"/>\n-      <bf us=\"728\" ue=\"730\" gi=\"217\"/>\n-      <bf us=\"731\" ue=\"731\" gi=\"222\"/>\n-      <bf us=\"732\" ue=\"732\" gi=\"215\"/>\n-      <bf us=\"733\" ue=\"733\" gi=\"221\"/>\n-      <bf us=\"894\" ue=\"894\" gi=\"373\"/>\n-      <bf us=\"900\" ue=\"906\" gi=\"374\"/>\n-      <bf us=\"908\" ue=\"908\" gi=\"381\"/>\n-      <bf us=\"910\" ue=\"929\" gi=\"382\"/>\n-      <bf us=\"931\" ue=\"959\" gi=\"402\"/>\n-      <bf us=\"960\" ue=\"960\" gi=\"155\"/>\n-      <bf us=\"961\" ue=\"974\" gi=\"431\"/>\n-      <bf us=\"1025\" ue=\"1036\" gi=\"445\"/>\n-      <bf us=\"1038\" ue=\"1103\" gi=\"457\"/>\n-      <bf us=\"1105\" ue=\"1116\" gi=\"523\"/>\n-      <bf us=\"1118\" ue=\"1119\" gi=\"535\"/>\n-      <bf us=\"1168\" ue=\"1169\" gi=\"537\"/>\n-      <bf us=\"7808\" ue=\"7813\" gi=\"539\"/>\n-      <bf us=\"7922\" ue=\"7923\" gi=\"545\"/>\n-      <bf us=\"8211\" ue=\"8212\" gi=\"178\"/>\n-      <bf us=\"8213\" ue=\"8213\" gi=\"547\"/>\n-      <bf us=\"8215\" ue=\"8215\" gi=\"548\"/>\n-      <bf us=\"8216\" ue=\"8217\" gi=\"182\"/>\n-      <bf us=\"8218\" ue=\"8218\" gi=\"195\"/>\n-      <bf us=\"8220\" ue=\"8221\" gi=\"180\"/>\n-      <bf us=\"8222\" ue=\"8222\" gi=\"196\"/>\n-      <bf us=\"8224\" ue=\"8224\" gi=\"130\"/>\n-      <bf us=\"8225\" ue=\"8225\" gi=\"193\"/>\n-      <bf us=\"8226\" ue=\"8226\" gi=\"135\"/>\n-      <bf us=\"8230\" ue=\"8230\" gi=\"171\"/>\n-      <bf us=\"8240\" ue=\"8240\" gi=\"197\"/>\n-      <bf us=\"8249\" ue=\"8250\" gi=\"189\"/>\n-      <bf us=\"8252\" ue=\"8252\" gi=\"549\"/>\n-      <bf us=\"8254\" ue=\"8254\" gi=\"550\"/>\n-      <bf us=\"8260\" ue=\"8260\" gi=\"551\"/>\n-      <bf us=\"8319\" ue=\"8319\" gi=\"552\"/>\n-      <bf us=\"8355\" ue=\"8355\" gi=\"245\"/>\n-      <bf us=\"8356\" ue=\"8356\" gi=\"553\"/>\n-      <bf us=\"8359\" ue=\"8359\" gi=\"554\"/>\n-      <bf us=\"8364\" ue=\"8364\" gi=\"665\"/>\n-      <bf us=\"8470\" ue=\"8470\" gi=\"555\"/>\n-      <bf us=\"8482\" ue=\"8482\" gi=\"140\"/>\n-      <bf us=\"8486\" ue=\"8486\" gi=\"159\"/>\n-      <bf us=\"8539\" ue=\"8542\" gi=\"556\"/>\n-      <bf us=\"8592\" ue=\"8597\" gi=\"560\"/>\n-      <bf us=\"8616\" ue=\"8616\" gi=\"566\"/>\n-      <bf us=\"8706\" ue=\"8706\" gi=\"152\"/>\n-      <bf us=\"8710\" ue=\"8710\" gi=\"168\"/>\n-      <bf us=\"8719\" ue=\"8719\" gi=\"154\"/>\n-      <bf us=\"8721\" ue=\"8721\" gi=\"153\"/>\n-      <bf us=\"8722\" ue=\"8722\" gi=\"237\"/>\n-      <bf us=\"8729\" ue=\"8729\" gi=\"194\"/>\n-      <bf us=\"8730\" ue=\"8730\" gi=\"165\"/>\n-      <bf us=\"8734\" ue=\"8734\" gi=\"146\"/>\n-      <bf us=\"8735\" ue=\"8735\" gi=\"567\"/>\n-      <bf us=\"8745\" ue=\"8745\" gi=\"568\"/>\n-      <bf us=\"8747\" ue=\"8747\" gi=\"156\"/>\n-      <bf us=\"8776\" ue=\"8776\" gi=\"167\"/>\n-      <bf us=\"8800\" ue=\"8800\" gi=\"143\"/>\n-      <bf us=\"8801\" ue=\"8801\" gi=\"569\"/>\n-      <bf us=\"8804\" ue=\"8805\" gi=\"148\"/>\n-      <bf us=\"8962\" ue=\"8962\" gi=\"570\"/>\n-      <bf us=\"8976\" ue=\"8976\" gi=\"571\"/>\n-      <bf us=\"8992\" ue=\"8993\" gi=\"572\"/>\n-      <bf us=\"9472\" ue=\"9472\" gi=\"574\"/>\n-      <bf us=\"9474\" ue=\"9474\" gi=\"575\"/>\n-      <bf us=\"9484\" ue=\"9484\" gi=\"576\"/>\n-      <bf us=\"9488\" ue=\"9488\" gi=\"577\"/>\n-      <bf us=\"9492\" ue=\"9492\" gi=\"578\"/>\n-      <bf us=\"9496\" ue=\"9496\" gi=\"579\"/>\n-      <bf us=\"9500\" ue=\"9500\" gi=\"580\"/>\n-      <bf us=\"9508\" ue=\"9508\" gi=\"581\"/>\n-      <bf us=\"9516\" ue=\"9516\" gi=\"582\"/>\n-      <bf us=\"9524\" ue=\"9524\" gi=\"583\"/>\n-      <bf us=\"9532\" ue=\"9532\" gi=\"584\"/>\n-      <bf us=\"9552\" ue=\"9580\" gi=\"585\"/>\n-      <bf us=\"9600\" ue=\"9600\" gi=\"614\"/>\n-      <bf us=\"9604\" ue=\"9604\" gi=\"615\"/>\n-      <bf us=\"9608\" ue=\"9608\" gi=\"616\"/>\n-      <bf us=\"9612\" ue=\"9612\" gi=\"617\"/>\n-      <bf us=\"9616\" ue=\"9619\" gi=\"618\"/>\n-      <bf us=\"9632\" ue=\"9632\" gi=\"622\"/>\n-      <bf us=\"9644\" ue=\"9644\" gi=\"623\"/>\n-      <bf us=\"9650\" ue=\"9650\" gi=\"624\"/>\n-      <bf us=\"9658\" ue=\"9658\" gi=\"625\"/>\n-      <bf us=\"9660\" ue=\"9660\" gi=\"626\"/>\n-      <bf us=\"9668\" ue=\"9668\" gi=\"627\"/>\n-      <bf us=\"9674\" ue=\"9674\" gi=\"185\"/>\n-      <bf us=\"9675\" ue=\"9675\" gi=\"628\"/>\n-      <bf us=\"9688\" ue=\"9689\" gi=\"629\"/>\n-      <bf us=\"9786\" ue=\"9788\" gi=\"631\"/>\n-      <bf us=\"9792\" ue=\"9792\" gi=\"634\"/>\n-      <bf us=\"9794\" ue=\"9794\" gi=\"635\"/>\n-      <bf us=\"9824\" ue=\"9824\" gi=\"636\"/>\n-      <bf us=\"9827\" ue=\"9827\" gi=\"637\"/>\n-      <bf us=\"9829\" ue=\"9830\" gi=\"638\"/>\n-      <bf us=\"9834\" ue=\"9835\" gi=\"640\"/>\n-      <bf us=\"61443\" ue=\"61453\" gi=\"642\"/>\n-      <bf us=\"63512\" ue=\"63523\" gi=\"653\"/>\n-      <bf us=\"64257\" ue=\"64258\" gi=\"191\"/>\n-      <bf us=\"65535\" ue=\"65535\" gi=\"0\"/>\n-    </bfranges>\n-    <cid-widths start-index=\"0\">\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"602\"/>\n-      <wx w=\"603\"/>\n-    </cid-widths>\n-  </multibyte-extras>\n-</font-metrics>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/documentation/poster/cfg/lucon.ttf.xml",
                "sha": "27daebf6ceae0271328875ab53def0833e47b642",
                "status": "removed"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/svg/pepe-business-card.svg",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/svg/pepe-business-card.svg?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/poster/svg/pepe-business-card.svg",
                "patch": "@@ -16,7 +16,8 @@\n   limitations under the License.\n -->\n <!-- $Id$ -->\n-<svg xml:space=\"preserve\" x=\"-3.05102in\" y=\"-2.2459in\" width=\"3.31009in\" height=\"2.08961in\" \n+<svg xmlns=\"http://www.w3.org/2000/svg\"\n+    xml:space=\"preserve\" x=\"-3.05102in\" y=\"-2.2459in\" width=\"3.31009in\" height=\"2.08961in\" \n     style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality\" viewBox=\"-30510 0 33101 20896\">\n   <g>\n     <g>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/svg/pepe-business-card.svg",
                "sha": "559c87abe78caf50f975bea118d2c1b804124f3e",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/business-card-demo.xml",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/business-card-demo.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 9,
                "filename": "src/documentation/poster/xml/business-card-demo.xml",
                "patch": "@@ -37,13 +37,13 @@\n     <fo:instream-foreign-object xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n       <svg:svg width=\"150mm\" height=\"70mm\" viewBox=\"0 0 150 70\">\n         <svg:g transform=\"rotate(-7)\">\n-          <svg:image x=\"0\" y=\"12\" width=\"84\" height=\"53\" xlink:href=\"svg/pepe-business-card.svg\"/>\n+          <svg:image x=\"0\" y=\"12\" width=\"84\" height=\"53\" xlink:href=\"../svg/pepe-business-card.svg\"/>\n         </svg:g>\n       </svg:svg>\n     </fo:instream-foreign-object>\n   </p>\n-  <fo:block-container absolute-position=\"absolute\" left=\"80mm\" top=\"20mm\" width=\"2cm\" height=\"10cm\">\n-    <fo:block>\n+  <fo:block-container absolute-position=\"absolute\" left=\"80mm\" top=\"20mm\" width=\"3cm\" height=\"10cm\">\n+    <fo:block font-size=\"0\" line-height=\"0\">\n       <fo:instream-foreign-object xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n         <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"1.8cm\" height=\"10cm\" viewBox=\"0 0 20 100\">\n           <defs>\n@@ -65,19 +65,20 @@\n       </fo:instream-foreign-object>\n     </fo:block>\n   </fo:block-container>\n-  <fo:block-container absolute-position=\"absolute\" width=\"100%\" height=\"100%\">\n-  <fo:block start-indent=\"112mm\">\n-  <p>The XSLT stylesheet which contains the rules to convert the business card XML to XSL-FO:</p>\n-  <fo:block text-align=\"start\" font-family=\"'Lucida Console'\" font-size=\"10pt\" white-space=\"pre\"\n-  ><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+  <fo:block-container absolute-position=\"absolute\" width=\"100%\">\n+    <fo:block start-indent=\"112mm\">\n+      <p>The XSLT stylesheet which contains the rules to convert the business card XML to XSL-FO:</p>\n+      <fo:block text-align=\"start\" font-family=\"'Lucida Console'\" font-size=\"10pt\" white-space=\"pre\"\n+        ><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <xsl:stylesheet version=\"1.0\"\n     xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n     xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <xsl:output method=\"xml\" indent=\"yes\"/>\n   <xsl:template match=\"/\">\n     <fo:root font-family=\"Helvetica\" font-size=\"10pt\">\n       <fo:layout-master-set>\n-        <fo:simple-page-master master-name=\"bc\" page-height=\"53mm\" page-width=\"84mm\" margin=\"3mm\">\n+        <fo:simple-page-master master-name=\"bc\"\n+              page-height=\"53mm\" page-width=\"84mm\" margin=\"3mm\">\n           <fo:region-body/>\n         </fo:simple-page-master>\n       </fo:layout-master-set>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/business-card-demo.xml",
                "sha": "9b7f80029849f7be271517231ce4ca60e3849c9e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-history.xml",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-history.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 6,
                "filename": "src/documentation/poster/xml/fop-history.xml",
                "patch": "@@ -39,13 +39,12 @@\n   </p>\n   <p>\n     In 2005, the redesign finally took a leap forward, which resulted in the first release from\n-    the new codebase (FOP&#160;0.90alpha). Shortly thereafter, FOP&#160;0.91beta was released in December\n-    2005 and FOP&#160;0.92beta in April&#160;2006. Although 0.92beta still carries the beta tag,\n-    it has many advantages over the old version 0.20.5.\n+    the new codebase (FOP&#160;0.90alpha). The project team has published a number of releases\n+    since then. FOP made big steps forward.\n   </p>\n   <p>\n-    The next version, to be released shortly, will be 0.93. This version should be the last release \n-    before the long-awaited version 1.0, for which the team only has to implement a handful of \n-    additional features.\n+    The next version, to be released in March&#160;2008, will be 0.95. Although FOP still carries\n+    pre&#160;1.0 version numbers it is production-ready. Some features are still missing before\n+    version&#160;1.0 can be released.\n   </p>\n </section>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-history.xml",
                "sha": "0baa6340f474c8d4cbc588047d5febae044c4647",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-poster.xml",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-poster.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "src/documentation/poster/xml/fop-poster.xml",
                "patch": "@@ -21,11 +21,11 @@\n   <section href=\"fop-overview.xml\" width=\"165\" height=\"118\"/>\n   <section href=\"fop-output-formats.xml\" width=\"165\" height=\"103\"/>\n   <section href=\"fop-foreign-xml-support.xml\" width=\"165\" height=\"55\"/>\n-  <section href=\"fop-image-support.xml\" width=\"165\" height=\"65\"/>\n-  <section href=\"fop-use-cases.xml\" width=\"165\" height=\"96\"/>\n-  <section href=\"fop-history.xml\" width=\"165\" height=\"181\"/>\n+  <section href=\"fop-image-support.xml\" width=\"165\" height=\"66\"/>\n+  <section href=\"fop-use-cases.xml\" width=\"165\" height=\"98\"/>\n+  <section href=\"fop-history.xml\" width=\"165\" height=\"180\"/>\n   <section href=\"fop-getting-help.xml\" width=\"165\" height=\"67\"/>\n-  <section href=\"fop-transformation-chain.xml\" width=\"335\" height=\"167\"/>\n+  <section href=\"fop-transformation-chain.xml\" width=\"335\" height=\"166\"/>\n   <!-- section href=\"hello-world-in-fo.xml\" width=\"165\" height=\"115\"/-->\n-  <section href=\"business-card-demo.xml\" width=\"335\" height=\"181\"/>\n+  <section href=\"business-card-demo.xml\" width=\"335\" height=\"185\"/>\n </poster>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-poster.xml",
                "sha": "419378b271c0aeedad8e50e0db7021a8df49fc0e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-transformation-chain.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-transformation-chain.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/documentation/poster/xml/fop-transformation-chain.xml",
                "patch": "@@ -19,7 +19,7 @@\n <section xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <title tab-width=\"80\">Transformation Chain</title>\n   <fo:block space-before=\"10pt\" space-before.conditionality=\"retain\" space-after=\"10pt\" text-align=\"center\">\n-    <fo:external-graphic src=\"svg/fop-transformation-chain.svg\" width=\"70%\" content-width=\"scale-to-fit\"/>\n+    <fo:external-graphic src=\"../svg/fop-transformation-chain.svg\" width=\"70%\" content-width=\"scale-to-fit\"/>\n   </fo:block>\n   <p>\n     This diagram shows a complete transformation chain (exemplary). It begins with your data source,",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-transformation-chain.xml",
                "sha": "58c8de856432aafde55fb9ee5ae7c79100f30607",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-use-cases.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xml/fop-use-cases.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/documentation/poster/xml/fop-use-cases.xml",
                "patch": "@@ -19,8 +19,7 @@\n <section xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <title tab-width=\"50\">Use Cases</title>\n   <fo:table table-layout=\"fixed\" width=\"100%\" border-collapse=\"separate\">\n-    <fo:table-column/>\n-    <fo:table-column/>\n+    <fo:table-column column-width=\"proportional-column-width(1)\" number-columns-repeated=\"2\"/>\n     <fo:table-header>\n       <fo:table-row font-weight=\"bold\">\n         <fo:table-cell border-bottom=\"solid 0.5mm black\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xml/fop-use-cases.xml",
                "sha": "d2f4878a5b5aaf2b895795af73b7dd508743bcba",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xslt/common.xsl",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xslt/common.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/documentation/poster/xslt/common.xsl",
                "patch": "@@ -37,14 +37,14 @@\n     <xsl:choose>\n       <xsl:when test=\"ancestor::li and not(preceding-sibling::*)\">\n         <fo:block\n-          space-after=\"4pt\">\n+          space-after.optimum=\"0.3em\" space-after.maximum=\"1em\">\n           <xsl:apply-templates/>\n         </fo:block>\n       </xsl:when>\n       <xsl:otherwise>\n         <fo:block\n-          space-before=\"4pt\"\n-          space-after=\"4pt\">\n+          space-before.optimum=\"0.3em\" space-before.maximum=\"1em\"\n+          space-after.optimum=\"0.3em\" space-after.maximum=\"1em\">\n           <xsl:apply-templates/>\n         </fo:block>\n       </xsl:otherwise>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xslt/common.xsl",
                "sha": "5b02f52fd85c881861b66a7ab7c6d2cf2f2c3988",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xslt/fop-poster.xsl",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/poster/xslt/fop-poster.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 7,
                "filename": "src/documentation/poster/xslt/fop-poster.xsl",
                "patch": "@@ -60,9 +60,6 @@\n               </fo:static-content>\n \t\t\t  <fo:flow flow-name=\"xsl-region-body\">\n                 <xsl:apply-templates select=\"section\"/>\n-                <fo:block-container width=\"1cm\" height=\"5cm\">\n-                  <fo:block/>\n-                </fo:block-container>\n \t\t\t  </fo:flow>\n \t\t\t</fo:page-sequence>\n \t\t</fo:root>\n@@ -84,14 +81,14 @@\n               <path\n                  d=\"M 840,575 L 280,575 c -40,0 -60,-50 -100,-50 L 0,525\"\n                  style=\"fill:none; stroke:blue; stroke-width:5;\" />\n-              <image x=\"680\" y=\"7\" width=\"140\" height=\"60\" xlink:href=\"svg/fop-logo-reconstructed.svg\"/>\n+              <image x=\"680\" y=\"7\" width=\"140\" height=\"60\" xlink:href=\"../svg/fop-logo-reconstructed.svg\"/>\n               <text x=\"15\" y=\"35\" style=\"fill:black; font-weight:bold; font-size:17\">\n                 Apache FOP - The leading open source XSL-FO formatter\n               </text>\n               <text x=\"685\" y=\"74\" style=\"fill:black; font-size:5.5\">\n                 A product of the Apache XML Graphics Project\n               </text>\n-              <image x=\"15\" y=\"530\" width=\"160\" height=\"60\" xlink:href=\"svg/asf-logo.svg\"/>\n+              <image x=\"15\" y=\"530\" width=\"160\" height=\"60\" xlink:href=\"../svg/asf-logo.svg\"/>\n               <text x=\"360\" y=\"560\" style=\"fill:blue; font-size:12\">\n                 For more details, please visit: <a xlink:href=\"http://xmlgraphics.apache.org/fop/\">http://xmlgraphics.apache.org/fop/</a>\n               </text>\n@@ -111,7 +108,7 @@\n \t</xsl:template>\n \t\n \t<xsl:template match=\"section\">\n-\t  <xsl:variable name=\"section-content\" select=\"exslt:node-set(document(@href))\"/>\n+\t  <xsl:variable name=\"section-content\" select=\"exslt:node-set(document(@href, .))\"/>\n       <fo:block \n           space-before.minimum=\"2mm\" space-before.optimum=\"5mm\" space-before.maximum=\"30mm\" \n           space-before.conditionality=\"discard\" space-after.conditionality=\"discard\"\n@@ -129,7 +126,9 @@\n \t        </fo:instream-foreign-object>\n \t    </fo:block>\n \t  </fo:block-container>\n-\t  <fo:block-container width=\"{@width}mm - 8mm\" height=\"{@height}mm - 20mm\" padding=\"4mm\" padding-top=\"16mm\" margin=\"0pt\">\n+\t  <fo:block-container width=\"{@width}mm - 8mm\" height=\"{@height}mm - 24mm\"\n+\t    padding=\"4mm\" padding-top=\"16mm\" padding-bottom=\"8mm\" margin=\"0pt\"\n+\t      display-align=\"distribute\" id=\"section{position()}\">\n \t    <fo:block>\n \t      <xsl:apply-templates select=\"$section-content/section/*[local-name() != 'title']\"/>\n \t    </fo:block>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/poster/xslt/fop-poster.xsl",
                "sha": "dca0f6cfce92a1c768576d923aca98cc83e84cbf",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/sitemap.xmap",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/sitemap.xmap?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 37,
                "filename": "src/documentation/sitemap.xmap",
                "patch": "@@ -20,58 +20,27 @@\n   </map:components>\n \n   <map:pipelines>\n-    <map:pipeline>\n-    \n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)changes.xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/changes2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-    \n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)changes_(.*).xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/changes2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-          <map:parameter name=\"versionNumber\" value=\"{3}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-\n-      <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)releaseNotes_(.*).xml$\">\n-        <map:generate type=\"file\" src=\"{project:status}\" />\n-        <map:transform src=\"resources/stylesheets/releaseNotes2document.xsl\">\n-          <map:parameter name=\"versionNumber\" value=\"{3}\"/>\n-          <map:parameter name=\"path\" value=\"{1}{2}\"/>\n-        </map:transform>\n-        <map:serialize type=\"xml-document\"/>\n-      </map:match>\n-\n-    </map:pipeline>\n     \n     <!-- This is used by xinclude statements in knownissues.xml -->\n     <map:pipeline internal-only=\"true\">\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-layoutengine.xml$\">\n         <map:generate type=\"file\" src=\"../../test/layoutengine/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-fotree.xml$\">\n         <map:generate type=\"file\" src=\"../../test/fotree/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-static.xml$\">\n-        <!--<map:generate type=\"file\" src=\"{project:knownissues}\"/>-->\n+        <!--<map:generate type=\"file\" src=\"{properties:knownissues}\"/>-->\n         <map:generate type=\"file\" src=\"../../known-issues.xml\"/>\n         <map:transform src=\"resources/stylesheets/known-issues2document.xsl\"/>\n         <map:serialize type=\"xml-document\"/>\n@@ -80,21 +49,21 @@\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-layoutengine_(.*).xml$\">\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/layoutengine/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-fotree_(.*).xml$\">\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/fotree/disabled-testcases.xml\"/>\n         <map:transform src=\"resources/stylesheets/disabled-testcases2document.xsl\" >\n-          <map:parameter name=\"bugtracking-url\" value=\"{defaults:bugtracking-url}\"/>\n+          <map:parameter name=\"bugtracking-url\" value=\"{properties:bugtracking-url}\"/>\n           <map:parameter name=\"path\" value=\"{1}{2}\"/>\n         </map:transform>\n         <map:serialize type=\"xml-document\"/>\n       </map:match>\n       <map:match type=\"regexp\" pattern=\"^(.*?)([^/]*)knownissues-raw-static_(.*).xml$\">\n-        <!--<map:generate type=\"file\" src=\"{project:knownissues}\"/>-->\n+        <!--<map:generate type=\"file\" src=\"{properties:knownissues}\"/>-->\n         <map:generate type=\"file\" src=\"content/xdocs/{3}/known-issues.xml\"/>\n         <map:transform src=\"resources/stylesheets/known-issues2document.xsl\"/>\n         <map:serialize type=\"xml-document\"/>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/sitemap.xmap",
                "sha": "470db0b7b3a67d8d10722bf0ace1b3745b0e2fbd",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/skinconf.xml",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/documentation/skinconf.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 6,
                "filename": "src/documentation/skinconf.xml",
                "patch": "@@ -91,7 +91,7 @@ which will be used to configure the chosen Forrest skin.\n   <favicon-url></favicon-url>\n \n   <!-- The following used to construct a copyright statement -->\n-  <year>1999-2007</year>\n+  <year>1999-2008</year>\n   <vendor>The Apache Software Foundation.</vendor>\n   <copyright-link>http://www.apache.org/licenses/</copyright-link>\n   \n@@ -164,6 +164,7 @@ which will be used to configure the chosen Forrest skin.\n     .ForrestTable td.partial    { background-color: #FFFFCC; text-align: center; }\n     .ForrestTable td.category   { /*background-color: #CFDCED;*/\n                                        font-size: 1.2em }\n+    .menuitemgroup{ display: block;}\n \n   </extra-css>\n \n@@ -311,8 +312,8 @@ which will be used to configure the chosen Forrest skin.\n        portrait).\n        Supported text alignments are left, right, justify (default left).\n     -->\n-    <page size=\"letter\" orientation=\"portrait\" text-align=\"left\"/>\n-\n+    <page size=\"letter\" orientation=\"portrait\" text-align=\"justify\"/>\n+    <page-numbering-format>1</page-numbering-format>\n     <!--\n        Margins can be specified for top, bottom, inner, and outer\n        edges. If double-sided=\"false\", the inner edge is always left\n@@ -322,10 +323,10 @@ which will be used to configure the chosen Forrest skin.\n        Specified below are the default settings.\n     -->\n     <margins double-sided=\"false\">\n-      <top>1in</top>\n-      <bottom>1in</bottom>\n+      <top>0.5in</top>\n+      <bottom>0.5in</bottom>\n       <inner>1in</inner>\n-      <outer>1in</outer>\n+      <outer>0.5in</outer>\n     </margins>\n \n     <!--\n@@ -375,6 +376,13 @@ which will be used to configure the chosen Forrest skin.\n       <width>125</width>\n       <height>125</height>\n     </credit>\n+    <credit box-location=\"alt2\">\n+      <name>ApacheCon US 2008</name>\n+      <url>http://us.apachecon.com/</url>\n+      <image>http://apache.org/ads/ApacheCon/2008-usa-125x125.png</image>\n+      <width>125</width>\n+      <height>125</height>\n+    </credit>\n     \n     <credit role=\"pdf\">\n       <name>PDF created by Apache FOP</name>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/documentation/skinconf.xml",
                "sha": "e87baab34bd844e9682ead3d59a5fad3147de833",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/foschema/fop-configuration.xsd",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/foschema/fop-configuration.xsd?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/foschema/fop-configuration.xsd",
                "patch": "@@ -210,6 +210,7 @@\n     </xsd:sequence>\n     <xsd:attribute name=\"metrics-url\" type=\"xsd:anyURI\" use=\"optional\"/>\n     <xsd:attribute name=\"embed-url\" type=\"xsd:anyURI\" use=\"optional\"/>\n+    <xsd:attribute name=\"sub-font\" type=\"xsd:string\" use=\"optional\"/>\n     <xsd:attribute name=\"kerning\" use=\"optional\" default=\"no\">\n       <xsd:simpleType>\n         <xsd:restriction base=\"xsd:string\">",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/foschema/fop-configuration.xsd",
                "sha": "94f6903427fab451efa8f7095ef11947e22edf16",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "changes": 237,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java-1.4/org/apache/fop/image/ImageIOImage.java?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 237,
                "filename": "src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "patch": "@@ -1,237 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// AWT\n-import java.awt.Color;\n-import java.awt.color.ColorSpace;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.BufferedImage;\n-import java.util.Iterator;\n-\n-// ImageIO\n-import javax.imageio.ImageIO;\n-import javax.imageio.ImageReadParam;\n-import javax.imageio.ImageReader;\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.stream.ImageInputStream;\n-\n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.util.UnitConv;\n-import org.w3c.dom.Element;\n-import org.w3c.dom.NodeList;\n-\n-/**\n- * FopImage object using ImageIO.\n- * @see AbstractFopImage\n- * @see FopImage\n- */\n-public class ImageIOImage extends AbstractFopImage {\n-\n-    private byte[] softMask = null;\n-\n-    /**\n-     * Creates a new ImageIOImage.\n-     * @param info the image info from the ImageReader\n-     */\n-    public ImageIOImage(FopImage.ImageInfo info) {\n-        super(info);\n-        if (\"image/png\".equals(info.mimeType)\n-                || \"image/tiff\".equals(info.mimeType)) {\n-            this.loaded = 0; //TODO The PNG and TIFF Readers cannot read the resolution, yet. \n-        }\n-    }\n-\n-    /**\n-     * @see org.apache.fop.image.AbstractFopImage#loadDimensions()\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            return loadBitmap();\n-        }\n-        return true;\n-    }\n-    \n-    private Element getChild(Element el, String name) {\n-        NodeList nodes = el.getElementsByTagName(name);\n-        if (nodes.getLength() > 0) {\n-            return (Element)nodes.item(0);\n-        } else {\n-            return null;\n-        }\n-    }\n-    \n-    /** @see org.apache.fop.image.AbstractFopImage#loadBitmap() */\n-    protected boolean loadBitmap() {\n-        if (this.bitmaps != null) {\n-            return true;\n-        }\n-        try {\n-            inputStream.reset();\n-            ImageInputStream imgStream = ImageIO.createImageInputStream(inputStream);\n-            Iterator iter = ImageIO.getImageReaders(imgStream);\n-            if (!iter.hasNext()) {\n-                log.error(\"No ImageReader found.\");\n-                return false;\n-            }\n-            ImageReader reader = (ImageReader)iter.next();\n-            ImageReadParam param = reader.getDefaultReadParam();\n-            reader.setInput(imgStream, true, false);\n-            BufferedImage imageData = reader.read(0, param);\n-            \n-            //Read image resolution\n-            IIOMetadata iiometa = reader.getImageMetadata(0);\n-            if (iiometa != null && iiometa.isStandardMetadataFormatSupported()) {\n-                Element metanode = (Element)iiometa.getAsTree(\"javax_imageio_1.0\");\n-                Element dim = getChild(metanode, \"Dimension\");\n-                if (dim != null) {\n-                    Element child;\n-                    child = getChild(dim, \"HorizontalPixelSize\");\n-                    if (child != null) {\n-                        this.dpiHorizontal = UnitConv.IN2MM\n-                                / Float.parseFloat(child.getAttribute(\"value\"));\n-                    }\n-                    child = getChild(dim, \"VerticalPixelSize\");\n-                    if (child != null) {\n-                        this.dpiVertical = UnitConv.IN2MM\n-                                / Float.parseFloat(child.getAttribute(\"value\"));\n-                    }\n-                }\n-            }\n-            imgStream.close();\n-            reader.dispose();\n-            \n-            this.height = imageData.getHeight();\n-            this.width = imageData.getWidth();\n-\n-            ColorModel cm = imageData.getColorModel();\n-            this.bitsPerPixel = cm.getComponentSize(0); //only use first, we assume all are equal\n-            //this.colorSpace = cm.getColorSpace();\n-            //We currently force the image to sRGB\n-            this.colorSpace = ColorSpace.getInstance(ColorSpace.CS_sRGB);\n-\n-            int[] tmpMap = imageData.getRGB(0, 0, this.width,\n-                                            this.height, null, 0, this.width);\n-\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-                \n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        //TODO Is there another case?\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    // TRANSLUCENT\n-                    this.softMask = new byte[width * height];\n-                    imageData.getAlphaRaster().getDataElements(\n-                            0, 0, width, height, this.softMask);\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-\n-            // Should take care of the ColorSpace and bitsPerPixel\n-            this.bitmaps = new byte[this.width * this.height * 3];\n-            for (int i = 0; i < this.height; i++) {\n-                for (int j = 0; j < this.width; j++) {\n-                    int p = tmpMap[i * this.width + j];\n-                    int r = (p >> 16) & 0xFF;\n-                    int g = (p >> 8) & 0xFF;\n-                    int b = (p) & 0xFF;\n-                    this.bitmaps[3 * (i * this.width + j)] \n-                        = (byte)(r & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 1] \n-                        = (byte)(g & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 2] \n-                        = (byte)(b & 0xFF);\n-                }\n-            }\n-\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image: \" + ex.getMessage(), ex);\n-            return false; \n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-        return true;\n-    }\n-\n-    /** @see org.apache.fop.image.AbstractFopImage#loadOriginalData() */\n-    protected boolean loadOriginalData() {\n-        if (inputStream == null && getBitmaps() != null) {\n-            return false;\n-        } else {\n-            return loadDefaultOriginalData();\n-        }\n-    }\n-    \n-    /** @see org.apache.fop.image.FopImage#hasSoftMask() */\n-    public boolean hasSoftMask() {\n-        if (this.bitmaps == null && this.raw == null) {\n-            loadBitmap();\n-        }\n-\n-        return (this.softMask != null);\n-    }\n-\n-    /** @see org.apache.fop.image.FopImage#getSoftMask() */\n-    public byte[] getSoftMask() {\n-        if (this.bitmaps == null) {\n-            loadBitmap();\n-        }\n-\n-        return this.softMask;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/java-1.4/org/apache/fop/image/ImageIOImage.java",
                "sha": "7ec6b90048ec9a9bbd716f7a416a41286c847ff7",
                "status": "removed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/9411abb3e7861258684ae435bf8f1e7020576426/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "changes": 161,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java?ref=9411abb3e7861258684ae435bf8f1e7020576426",
                "deletions": 161,
                "filename": "src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "patch": "@@ -1,161 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-/* $Id$ */\n-\n-package org.apache.fop.image;\n-\n-// AWT\n-import java.awt.Color;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.BufferedImage;\n-\n-// ImageIO\n-import javax.imageio.ImageIO;\n-\n-import org.apache.commons.io.IOUtils;\n-\n-/**\n- * FopImage object using ImageIO.\n- * Special class to allow the use of JpegImage for those\n- * renderers which can embed Jpeg directly but for renderers\n- * which require the decoded data this class delivers it.\n- * @see AbstractFopImage\n- * @see JpegImage\n- */\n-public class JpegImageIOImage extends JpegImage {\n-\n-    /**\n-     * Creates a new JpegImageIOImage.\n-     * @param info the image info from the ImageReader\n-     */\n-    public JpegImageIOImage(FopImage.ImageInfo info) {\n-        super(info);\n-    }\n-\n-    /**\n-     * @see org.apache.fop.image.AbstractFopImage#loadDimensions()\n-     */\n-    protected boolean loadDimensions() {\n-        if (this.bitmaps == null) {\n-            return loadBitmap();\n-        }\n-        return true;\n-    }\n-    \n-    /** @see org.apache.fop.image.AbstractFopImage#loadBitmap() */\n-    protected boolean loadBitmap() {\n-        try {\n-            inputStream.reset();\n-            BufferedImage imageData = ImageIO.read(inputStream);\n-\n-            this.height = imageData.getHeight();\n-            this.width = imageData.getWidth();\n-\n-            ColorModel cm = imageData.getColorModel();\n-            this.bitsPerPixel = cm.getComponentSize(0); //only use first, we assume all are equal\n-            this.colorSpace = cm.getColorSpace();\n-\n-            int[] tmpMap = imageData.getRGB(0, 0, this.width,\n-                                            this.height, null, 0, this.width);\n-\n-            if (cm.hasAlpha()) {\n-                // java.awt.Transparency. BITMASK or OPAQUE or TRANSLUCENT\n-                int transparencyType = cm.getTransparency();\n-                \n-                if (transparencyType == java.awt.Transparency.OPAQUE) {\n-                    this.isTransparent = false;\n-                } else if (transparencyType == java.awt.Transparency.BITMASK) {\n-                    if (cm instanceof IndexColorModel) {\n-                        this.isTransparent = false;\n-                        byte[] alphas = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] reds = new byte[\n-                                        ((IndexColorModel) cm).getMapSize()];\n-                        byte[] greens = new byte[\n-                                          ((IndexColorModel) cm).getMapSize()];\n-                        byte[] blues = new byte[\n-                                         ((IndexColorModel) cm).getMapSize()];\n-                        ((IndexColorModel) cm).getAlphas(alphas);\n-                        ((IndexColorModel) cm).getReds(reds);\n-                        ((IndexColorModel) cm).getGreens(greens);\n-                        ((IndexColorModel) cm).getBlues(blues);\n-                        for (int i = 0;\n-                                i < ((IndexColorModel) cm).getMapSize();\n-                                i++) {\n-                            if ((alphas[i] & 0xFF) == 0) {\n-                                this.isTransparent = true;\n-                                this.transparentColor = new Color(\n-                                                            (int)(reds[i] & 0xFF),\n-                                                            (int)(greens[i] & 0xFF),\n-                                                            (int)(blues[i] & 0xFF));\n-                                break;\n-                            }\n-                        }\n-                    } else {\n-                        // TRANSLUCENT\n-                        /*\n-                         * this.isTransparent = false;\n-                         * for (int i = 0; i < this.width * this.height; i++) {\n-                         * if (cm.getAlpha(tmpMap[i]) == 0) {\n-                         * this.isTransparent = true;\n-                         * this.transparentColor = new PDFColor(cm.getRed(tmpMap[i]), \n-                         * cm.getGreen(tmpMap[i]), cm.getBlue(tmpMap[i]));\n-                         * break;\n-                         * }\n-                         * }\n-                         * // or use special API...\n-                         */\n-                        this.isTransparent = false;\n-                    }\n-                } else {\n-                    this.isTransparent = false;\n-                }\n-            } else {\n-                this.isTransparent = false;\n-            }\n-\n-            // Should take care of the ColorSpace and bitsPerPixel\n-            this.bitmaps = new byte[this.width * this.height * 3];\n-            for (int i = 0; i < this.height; i++) {\n-                for (int j = 0; j < this.width; j++) {\n-                    int p = tmpMap[i * this.width + j];\n-                    int r = (p >> 16) & 0xFF;\n-                    int g = (p >> 8) & 0xFF;\n-                    int b = (p) & 0xFF;\n-                    this.bitmaps[3 * (i * this.width + j)] \n-                        = (byte)(r & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 1] \n-                        = (byte)(g & 0xFF);\n-                    this.bitmaps[3 * (i * this.width + j) + 2] \n-                        = (byte)(b & 0xFF);\n-                }\n-            }\n-\n-        } catch (Exception ex) {\n-            log.error(\"Error while loading image: \" + ex.getMessage(), ex);\n-            return false; \n-        } finally {\n-            IOUtils.closeQuietly(inputStream);\n-            inputStream = null;\n-        }\n-        return true;\n-    }\n-\n-}\n-",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/9411abb3e7861258684ae435bf8f1e7020576426/src/java-1.4/org/apache/fop/image/JpegImageIOImage.java",
                "sha": "86d78f66615418b4398dad65f86cd30ef50c7c8c",
                "status": "removed"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "patch": "@@ -0,0 +1,5 @@\n+org.apache.fop.events.ValidationExceptionFactory\r\n+org.apache.fop.events.PropertyExceptionFactory\r\n+org.apache.fop.events.UnsupportedOperationExceptionFactory\r\n+org.apache.fop.layoutmgr.LayoutException$LayoutExceptionFactory\r\n+org.apache.fop.fo.pagination.PageProductionException$PageProductionExceptionFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.events.EventExceptionManager$ExceptionFactory",
                "sha": "1ad959188b1ed8774bddd37e245d9b7c2689eaa4",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "patch": "@@ -0,0 +1,7 @@\n+org.apache.fop.events.FOPEventModelFactory\r\n+org.apache.fop.render.afp.AFPEventProducer$EventModelFactory\r\n+org.apache.fop.render.bitmap.BitmapRendererEventProducer$EventModelFactory\r\n+org.apache.fop.render.pcl.PCLEventProducer$EventModelFactory\r\n+org.apache.fop.render.pdf.PDFEventProducer$EventModelFactory\r\n+org.apache.fop.render.ps.PSEventProducer$EventModelFactory\r\n+org.apache.fop.render.rtf.RTFEventProducer$EventModelFactory\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.events.model.EventModelFactory",
                "sha": "8dc13dbfd9dc7bf552df0b33a38c892ec46de790",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.render.pdf.PDFImageHandler",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.render.pdf.PDFImageHandler?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.render.pdf.PDFImageHandler",
                "patch": "@@ -0,0 +1,5 @@\n+org.apache.fop.render.pdf.PDFImageHandlerRawJPEG\r\n+org.apache.fop.render.pdf.PDFImageHandlerRawCCITTFax\r\n+org.apache.fop.render.pdf.PDFImageHandlerGraphics2D\r\n+org.apache.fop.render.pdf.PDFImageHandlerRenderedImage\r\n+org.apache.fop.render.pdf.PDFImageHandlerXML\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.render.pdf.PDFImageHandler",
                "sha": "b72796c2d00fb57076704197fa2a48a692fb0193",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.fo.FONode$GatherContextInfoFunction",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$Function",
                "sha": "375130f2ac4421e308438b621a95e489b4212844",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "patch": "@@ -0,0 +1 @@\n+org.apache.fop.util.text.LocatorFormatter",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$ObjectFormatter",
                "sha": "9e3860b313d1a2c9cd79b98b049425df3ef5715b",
                "status": "added"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "patch": "@@ -0,0 +1,6 @@\n+org.apache.fop.util.text.IfFieldPart$Factory\n+org.apache.fop.util.text.EqualsFieldPart$Factory\n+org.apache.fop.util.text.ChoiceFieldPart$Factory\n+org.apache.fop.util.text.HexFieldPart$Factory\n+org.apache.fop.util.text.GlyphNameFieldPart$Factory\n+org.apache.fop.events.EventFormatter$LookupFieldPartFactory",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.fop.util.text.AdvancedMessageFormat$PartFactory",
                "sha": "1647fb8d515c6eed66382f33d815b43a56bef175",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageConverter",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageConverter?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageConverter",
                "patch": "@@ -0,0 +1,2 @@\n+org.apache.fop.image.loader.batik.ImageConverterSVG2G2D\r\n+org.apache.fop.image.loader.batik.ImageConverterWMF2G2D\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageConverter",
                "sha": "c3c688a2c325da34d19f98297413094768ee0582",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "patch": "@@ -0,0 +1,2 @@\n+org.apache.fop.image.loader.batik.ImageLoaderFactorySVG\r\n+org.apache.fop.image.loader.batik.ImageLoaderFactoryWMF\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory",
                "sha": "b607a5e643f11e130de1d289f90e30ba81cabbf4",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "patch": "@@ -0,0 +1,2 @@\n+org.apache.fop.image.loader.batik.PreloaderWMF\r\n+org.apache.fop.image.loader.batik.PreloaderSVG\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/META-INF/services/org.apache.xmlgraphics.image.loader.spi.ImagePreloader",
                "sha": "c64d899b752c76beb9b5caf4c036bb06ca996565",
                "status": "added"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOPException.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOPException.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/apps/FOPException.java",
                "patch": "@@ -32,6 +32,8 @@\n     private String systemId;\n     private int line;\n     private int column;\n+    \n+    private String localizedMessage;\n \n     /**\n      * Constructs a new FOP exception with the specified detail message.\n@@ -101,7 +103,7 @@ public void setLocator(Locator locator) {\n      * @param systemId the system id of the FO document which is associated with the exception;\n      *                 may be null.\n      * @param line line number in the FO document which is associated with the exception.\n-     * @param column clolumn number in the line which is associated with the exception.\n+     * @param column column number in the line which is associated with the exception.\n      */\n     public void setLocation(String systemId, int line, int column) {\n         this.systemId = systemId;\n@@ -210,5 +212,24 @@ public void printStackTrace(java.io.PrintWriter writer) {\n             }\n         }\n     }\n+    \n+    /**\n+     * Sets the localized message for this exception.\n+     * @param msg the localized message\n+     */\n+    public void setLocalizedMessage(String msg) {\n+        this.localizedMessage = msg;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        if (this.localizedMessage != null) {\n+            return this.localizedMessage;\n+        } else {\n+            return super.getLocalizedMessage();\n+        }\n+    }\n \n+    \n+    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOPException.java",
                "sha": "d8ac2e2f73e9b63e7d4f2e823636d9712e7a6a39",
                "status": "modified"
            },
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOURIResolver.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOURIResolver.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/apps/FOURIResolver.java",
                "patch": "@@ -32,13 +32,13 @@\n import javax.xml.transform.URIResolver;\n import javax.xml.transform.stream.StreamSource;\n \n-// commons logging\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.fop.util.DataURIResolver;\n \n import org.apache.xmlgraphics.util.io.Base64EncodeStream;\n \n+import org.apache.fop.util.DataURIResolver;\n+\n /**\n  * Provides FOP specific URI resolution. This is the default URIResolver\n  * {@link FOUserAgent} will use unless overidden.\n@@ -52,13 +52,41 @@\n \n     /** URIResolver for RFC 2397 data URLs */\n     private URIResolver dataURIResolver = new DataURIResolver();\n-    \n+\n     /** A user settable URI Resolver */\n     private URIResolver uriResolver = null;\n \n     /** true if exceptions are to be thrown if the URIs cannot be resolved. */\n     private boolean throwExceptions = false;\n \n+    /**\n+     * Checks if the given base URL is acceptable. It also normalizes the URL.\n+     * @param base the base URL to check\n+     * @return the normalized URL\n+     * @throws MalformedURLException if there's a problem with a file URL\n+     */\n+    public String checkBaseURL(String base) throws MalformedURLException {\n+        if (!base.endsWith(\"/\")) {\n+            // The behavior described by RFC 3986 regarding resolution of relative\n+            // references may be misleading for normal users:\n+            // file://path/to/resources + myResource.res -> file://path/to/myResource.res\n+            // file://path/to/resources/ + myResource.res -> file://path/to/resources/myResource.res\n+            // We assume that even when the ending slash is missing, users have the second\n+            // example in mind\n+            base += \"/\";\n+        }\n+        File dir = new File(base);\n+        try {\n+            base = (dir.isDirectory() ? dir.toURL() : new URL(base)).toExternalForm();\n+        } catch (MalformedURLException mfue) {\n+            if (throwExceptions) {\n+                throw mfue;\n+            }\n+            log.error(mfue.getMessage());\n+        }\n+        return base;\n+    }\n+\n     /**\n      * Default constructor\n      */\n@@ -119,11 +147,11 @@ private void handleException(Exception e, String errorStr, boolean strict)\n      */\n     public Source resolve(String href, String base) throws TransformerException {\n         Source source = null;\n-        \n+\n         // data URLs can be quite long so evaluate early and don't try to build a File\n         // (can lead to problems)\n         source = dataURIResolver.resolve(href, base);\n-        \n+\n         // Custom uri resolution\n         if (source == null && uriResolver != null) {\n             source = uriResolver.resolve(href, base);\n@@ -132,10 +160,23 @@ public Source resolve(String href, String base) throws TransformerException {\n         // Fallback to default resolution mechanism\n         if (source == null) {\n             URL absoluteURL = null;\n-            File file = new File(href);\n+            int hashPos = href.indexOf('#');\n+            String fileURL, fragment;\n+            if (hashPos >= 0) {\n+                fileURL = href.substring(0, hashPos);\n+                fragment = href.substring(hashPos);\n+            } else {\n+                fileURL = href;\n+                fragment = null;\n+            }\n+            File file = new File(fileURL);\n             if (file.canRead() && file.isFile()) {\n                 try {\n-                    absoluteURL = file.toURL();\n+                    if (fragment != null) {\n+                        absoluteURL = new URL(file.toURL().toExternalForm() + fragment);\n+                    } else {\n+                        absoluteURL = file.toURL();\n+                    }\n                 } catch (MalformedURLException mfue) {\n                     handleException(mfue, \"Could not convert filename '\" + href\n                             + \"' to URL\", throwExceptions);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOURIResolver.java",
                "sha": "76b0bedd52813c0c2d5e0de4b6e6c446afbf50e5",
                "status": "modified"
            },
            {
                "additions": 111,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOUserAgent.java",
                "changes": 182,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FOUserAgent.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 71,
                "filename": "src/java/org/apache/fop/apps/FOUserAgent.java",
                "patch": "@@ -23,22 +23,29 @@\n import java.io.File;\n import java.util.Date;\n import java.util.Map;\n+\n import javax.xml.transform.Source;\n import javax.xml.transform.TransformerException;\n import javax.xml.transform.URIResolver;\n \n-// commons logging\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-// FOP\n+import org.apache.xmlgraphics.image.loader.ImageContext;\n+import org.apache.xmlgraphics.image.loader.ImageSessionContext;\n+import org.apache.xmlgraphics.image.loader.impl.AbstractImageSessionContext;\n+\n import org.apache.fop.Version;\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+import org.apache.fop.events.Event;\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventListener;\n+import org.apache.fop.events.FOPEventListenerProxy;\n+import org.apache.fop.events.LoggingEventListener;\n import org.apache.fop.fo.FOEventHandler;\n-import org.apache.fop.pdf.PDFEncryptionParams;\n import org.apache.fop.render.Renderer;\n import org.apache.fop.render.RendererFactory;\n import org.apache.fop.render.XMLHandlerRegistry;\n-import org.apache.fop.render.pdf.PDFRenderer;\n \n /**\n  * This is the user agent for FOP.\n@@ -63,12 +70,13 @@\n public class FOUserAgent {\n \n     /** Defines the default target resolution (72dpi) for FOP */\n-    public static final float DEFAULT_TARGET_RESOLUTION = FopFactoryConfigurator.DEFAULT_TARGET_RESOLUTION;\n+    public static final float DEFAULT_TARGET_RESOLUTION\n+            = FopFactoryConfigurator.DEFAULT_TARGET_RESOLUTION;\n \n     private static Log log = LogFactory.getLog(\"FOP\");\n \n     private FopFactory factory;\n-    \n+\n     /**\n      *  The base URL for all URL resolutions, especially for\n      *  external-graphics.\n@@ -80,14 +88,15 @@\n \n     /** A user settable URI Resolver */\n     private URIResolver uriResolver = null;\n-    \n+\n     private float targetResolution = FopFactoryConfigurator.DEFAULT_TARGET_RESOLUTION;\n     private Map rendererOptions = new java.util.HashMap();\n     private File outputFile = null;\n     private Renderer rendererOverride = null;\n     private FOEventHandler foEventHandlerOverride = null;\n     private boolean locatorEnabled = true; // true by default (for error messages).\n-    \n+    private EventBroadcaster eventBroadcaster = new FOPEventBroadcaster();\n+\n     /** Producer:  Metadata element for the system/software that produces\n      * the document. (Some renderers can store this in the document.)\n      */\n@@ -98,30 +107,36 @@\n      */\n     protected String creator = null;\n \n-    /** Creation Date:  Override of the date the document was created. \n+    /** Creation Date:  Override of the date the document was created.\n      * (Some renderers can store this in the document.)\n      */\n     protected Date creationDate = null;\n-    \n+\n     /** Author of the content of the document. */\n     protected String author = null;\n     /** Title of the document. */\n     protected String title = null;\n     /** Set of keywords applicable to this document. */\n     protected String keywords = null;\n-    \n-    /**\n-     * Default constructor\n-     * @see org.apache.fop.apps.FopFactory\n-     * @deprecated Provided for compatibility only. Please use the methods from \n-     *             FopFactory to construct FOUserAgent instances!\n-     */\n-    public FOUserAgent() throws FOPException {\n-        this(FopFactory.newInstance());\n-    }\n-    \n+\n+    private ImageSessionContext imageSessionContext = new AbstractImageSessionContext() {\n+\n+        public ImageContext getParentContext() {\n+            return getFactory();\n+        }\n+\n+        public float getTargetResolution() {\n+            return FOUserAgent.this.getTargetResolution();\n+        }\n+\n+        public Source resolveURI(String uri) {\n+            return FOUserAgent.this.resolveURI(uri);\n+        }\n+\n+    };\n+\n     /**\n-     * Main constructor. <b>This constructor should not be called directly. Please use the \n+     * Main constructor. <b>This constructor should not be called directly. Please use the\n      * methods from FopFactory to construct FOUserAgent instances!</b>\n      * @param factory the factory that provides environment-level information\n      * @see org.apache.fop.apps.FopFactory\n@@ -132,20 +147,20 @@ public FOUserAgent(FopFactory factory) {\n         }\n         this.factory = factory;\n         setBaseURL(factory.getBaseURL());\n-        setFontBaseURL(factory.getFontBaseURL());\n+        setFontBaseURL(factory.getFontManager().getFontBaseURL());\n         setTargetResolution(factory.getTargetResolution());\n     }\n-    \n+\n     /** @return the associated FopFactory instance */\n     public FopFactory getFactory() {\n         return this.factory;\n     }\n-    \n+\n     // ---------------------------------------------- rendering-run dependent stuff\n-    \n+\n     /**\n-     * Sets an explicit renderer to use which overrides the one defined by the \n-     * render type setting.  \n+     * Sets an explicit renderer to use which overrides the one defined by the\n+     * render type setting.\n      * @param renderer the Renderer instance to use\n      */\n     public void setRendererOverride(Renderer renderer) {\n@@ -162,7 +177,7 @@ public Renderer getRendererOverride() {\n \n     /**\n      * Sets an explicit FOEventHandler instance which overrides the one\n-     * defined by the render type setting.  \n+     * defined by the render type setting.\n      * @param handler the FOEventHandler instance\n      */\n     public void setFOEventHandlerOverride(FOEventHandler handler) {\n@@ -178,7 +193,7 @@ public FOEventHandler getFOEventHandlerOverride() {\n     }\n \n     /**\n-     * Sets the producer of the document.  \n+     * Sets the producer of the document.\n      * @param producer source of document\n      */\n     public void setProducer(String producer) {\n@@ -194,7 +209,7 @@ public String getProducer() {\n     }\n \n     /**\n-     * Sets the creator of the document.  \n+     * Sets the creator of the document.\n      * @param creator of document\n      */\n     public void setCreator(String creator) {\n@@ -210,7 +225,7 @@ public String getCreator() {\n     }\n \n     /**\n-     * Sets the creation date of the document.  \n+     * Sets the creation date of the document.\n      * @param creationDate date of document\n      */\n     public void setCreationDate(Date creationDate) {\n@@ -226,7 +241,7 @@ public Date getCreationDate() {\n     }\n \n     /**\n-     * Sets the author of the document.  \n+     * Sets the author of the document.\n      * @param author of document\n      */\n     public void setAuthor(String author) {\n@@ -243,7 +258,7 @@ public String getAuthor() {\n \n     /**\n      * Sets the title of the document. This will override any title coming from\n-     * an fo:title element.  \n+     * an fo:title element.\n      * @param title of document\n      */\n     public void setTitle(String title) {\n@@ -259,7 +274,7 @@ public String getTitle() {\n     }\n \n     /**\n-     * Sets the keywords for the document.  \n+     * Sets the keywords for the document.\n      * @param keywords for the document\n      */\n     public void setKeywords(String keywords) {\n@@ -281,7 +296,7 @@ public String getKeywords() {\n     public Map getRendererOptions() {\n         return rendererOptions;\n     }\n-    \n+\n     /**\n      * Sets the base URL.\n      * @param baseUrl base URL\n@@ -322,36 +337,13 @@ public URIResolver getURIResolver() {\n         return this.uriResolver;\n     }\n \n-    /**\n-     * Returns the parameters for PDF encryption.\n-     * @return the PDF encryption parameters, null if not applicable\n-     * @deprecated Use (PDFEncryptionParams)getRendererOptions().get(\"encryption-params\") \n-     *             instead.\n-     */\n-    public PDFEncryptionParams getPDFEncryptionParams() {\n-        return (PDFEncryptionParams)getRendererOptions().get(PDFRenderer.ENCRYPTION_PARAMS);\n-    }\n-\n-    /**\n-     * Sets the parameters for PDF encryption.\n-     * @param pdfEncryptionParams the PDF encryption parameters, null to\n-     * disable PDF encryption\n-     * @deprecated Use getRendererOptions().put(\"encryption-params\", \n-     *             new PDFEncryptionParams(..)) instead or set every parameter separately: \n-     *             getRendererOptions().put(\"noprint\", Boolean.TRUE).\n-     */\n-    public void setPDFEncryptionParams(PDFEncryptionParams pdfEncryptionParams) {\n-        getRendererOptions().put(PDFRenderer.ENCRYPTION_PARAMS, pdfEncryptionParams);\n-    }\n-\n-\n     /**\n      * Attempts to resolve the given URI.\n      * Will use the configured resolver and if not successful fall back\n      * to the default resolver.\n      * @param uri URI to access\n      * @return A {@link javax.xml.transform.Source} object, or null if the URI\n-     * cannot be resolved. \n+     * cannot be resolved.\n      * @see org.apache.fop.apps.FOURIResolver\n      */\n     public Source resolveURI(String uri) {\n@@ -365,7 +357,7 @@ public Source resolveURI(String uri) {\n      * @param href URI to access\n      * @param base the base URI to resolve against\n      * @return A {@link javax.xml.transform.Source} object, or null if the URI\n-     * cannot be resolved. \n+     * cannot be resolved.\n      * @see org.apache.fop.apps.FOURIResolver\n      */\n     public Source resolveURI(String href, String base) {\n@@ -410,9 +402,9 @@ public File getOutputFile() {\n      * @see #getTargetResolution()\n      */\n     public float getTargetPixelUnitToMillimeter() {\n-        return 25.4f / this.targetResolution; \n+        return 25.4f / this.targetResolution;\n     }\n-    \n+\n     /** @return the resolution for resolution-dependant output */\n     public float getTargetResolution() {\n         return this.targetResolution;\n@@ -427,7 +419,7 @@ public float getTargetResolution() {\n     public void setTargetResolution(float dpi) {\n         this.targetResolution = dpi;\n         if (log.isDebugEnabled()) {\n-            log.debug(\"target-resolution set to: \" + targetResolution \n+            log.debug(\"target-resolution set to: \" + targetResolution\n                     + \"dpi (px2mm=\" + getTargetPixelUnitToMillimeter() + \")\");\n         }\n     }\n@@ -441,7 +433,15 @@ public void setTargetResolution(float dpi) {\n     public void setTargetResolution(int dpi) {\n         setTargetResolution((float)dpi);\n     }\n-    \n+\n+    /**\n+     * Returns the image session context for the image package.\n+     * @return the ImageSessionContext instance for this rendering run\n+     */\n+    public ImageSessionContext getImageSessionContext() {\n+        return this.imageSessionContext;\n+    }\n+\n     // ---------------------------------------------- environment-level stuff\n     //                                                (convenience access to FopFactory methods)\n \n@@ -457,9 +457,9 @@ public String getFontBaseURL() {\n      * @see #getSourceResolution()\n      */\n     public float getSourcePixelUnitToMillimeter() {\n-        return getFactory().getSourcePixelUnitToMillimeter(); \n+        return getFactory().getSourcePixelUnitToMillimeter();\n     }\n-    \n+\n     /** @return the resolution for resolution-dependant input */\n     public float getSourceResolution() {\n         return getFactory().getSourceResolution();\n@@ -475,7 +475,7 @@ public float getSourceResolution() {\n     public String getPageHeight() {\n         return getFactory().getPageHeight();\n     }\n-    \n+\n     /**\n      * Gets the default page-width to use as fallback,\n      * in case page-width=\"auto\"\n@@ -486,7 +486,7 @@ public String getPageHeight() {\n     public String getPageWidth() {\n         return getFactory().getPageWidth();\n     }\n-    \n+\n     /**\n      * Returns whether FOP is strictly validating input XSL\n      * @return true of strict validation turned on, false otherwise\n@@ -497,7 +497,7 @@ public boolean validateStrictly() {\n     }\n \n     /**\n-     * @return true if the indent inheritance should be broken when crossing reference area \n+     * @return true if the indent inheritance should be broken when crossing reference area\n      *         boundaries (for more info, see the javadoc for the relative member variable)\n      * @see FopFactory#isBreakIndentInheritanceOnReferenceAreaBoundary()\n      */\n@@ -518,7 +518,7 @@ public RendererFactory getRendererFactory() {\n     public XMLHandlerRegistry getXMLHandlerRegistry() {\n         return getFactory().getXMLHandlerRegistry();\n     }\n-    \n+\n     /**\n      * Controls the use of SAXLocators to provide location information in error\n      * messages.\n@@ -537,5 +537,45 @@ public boolean isLocatorEnabled() {\n         return locatorEnabled;\n     }\n \n+    /**\n+     * Returns the event broadcaster that control events sent inside a processing run. Clients\n+     * can register event listeners with the event broadcaster to listen for events that occur\n+     * while a document is being processed.\n+     * @return the event broadcaster.\n+     */\n+    public EventBroadcaster getEventBroadcaster() {\n+        return this.eventBroadcaster;\n+    }\n+\n+    private class FOPEventBroadcaster extends DefaultEventBroadcaster {\n+\n+        private EventListener rootListener;\n+\n+        public FOPEventBroadcaster() {\n+            //Install a temporary event listener that catches the first event to\n+            //do some initialization.\n+            this.rootListener = new EventListener() {\n+                public void processEvent(Event event) {\n+                    if (!listeners.hasEventListeners()) {\n+                        //Backwards-compatibility: Make sure at least the LoggingEventListener is\n+                        //plugged in so no events are just silently swallowed.\n+                        addEventListener(\n+                                new LoggingEventListener(LogFactory.getLog(FOUserAgent.class)));\n+                    }\n+                    //Replace with final event listener\n+                    rootListener = new FOPEventListenerProxy(\n+                            listeners, FOUserAgent.this);\n+                    rootListener.processEvent(event);\n+                }\n+            };\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void broadcastEvent(Event event) {\n+            rootListener.processEvent(event);\n+        }\n+\n+    }\n+\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FOUserAgent.java",
                "sha": "c7a904f298e58fadd2098000ae76336f759bf5ef",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/Fop.java",
                "changes": 64,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/Fop.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 60,
                "filename": "src/java/org/apache/fop/apps/Fop.java",
                "patch": "@@ -22,10 +22,8 @@\n // Java\n import java.io.OutputStream;\n \n-// XML\n import org.xml.sax.helpers.DefaultHandler;\n \n-// FOP\n import org.apache.fop.fo.FOTreeBuilder;\n \n /**\n@@ -66,10 +64,8 @@\n      * @param ua FOUserAgent object\n      * @param stream the output stream\n      * @throws FOPException if setting up the DefaultHandler fails\n-     * @deprecated End-users should use {@link FopFactory#newFop(String, FOUserAgent, OutputStream)} \n-     *             instead! This constructor will become invisible with FOP 1.0.\n      */\n-    public Fop(String outputFormat, FOUserAgent ua, OutputStream stream) throws FOPException {\n+    Fop(String outputFormat, FOUserAgent ua, OutputStream stream) throws FOPException {\n         this.outputFormat = outputFormat;\n \n         foUserAgent = ua;\n@@ -83,56 +79,13 @@ public Fop(String outputFormat, FOUserAgent ua, OutputStream stream) throws FOPE\n     }\n \n     /**\n-     * Constructor for use with already-created FOUserAgents. It uses MIME types to select the \n-     * output format (ex. \"application/pdf\" for PDF).\n-     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n-     * @param ua FOUserAgent object\n-     * @throws FOPException if setting up the DefaultHandler fails\n-     * @deprecated End-users should use {@link FopFactory#newFop(String, FOUserAgent)} instead!\n-     *             This constructor will become invisible with FOP 1.0.\n-     */\n-    public Fop(String outputFormat, FOUserAgent ua) throws FOPException {\n-        this.outputFormat = outputFormat;\n-\n-        foUserAgent = ua;\n-        if (foUserAgent == null) {\n-            foUserAgent = FopFactory.newInstance().newFOUserAgent();\n-        }\n-        \n-        createDefaultHandler();\n-    }\n-\n-    /**\n-     * Constructor for FOP with a default FOUserAgent. It uses MIME types to select the \n-     * output format (ex. \"application/pdf\" for PDF).\n-     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n-     * @deprecated End-users should use {@link FopFactory#newFop(String)} instead!\n-     *             This constructor will become invisible with FOP 1.0.\n-     */\n-    public Fop(String outputFormat) {\n-        this.outputFormat = outputFormat;\n-        foUserAgent = FopFactory.newInstance().newFOUserAgent();\n-    }\n-\n-    /**\n-     * Get the FOUserAgent instance for this process\n+     * Get the FOUserAgent instance associated with the rendering run represented by this instance.\n      * @return the user agent\n      */\n     public FOUserAgent getUserAgent() {\n         return foUserAgent;\n     }\n \n-    /**\n-     * Set the OutputStream to use to output the result of the Render\n-     * (if applicable)\n-     * @param stream the stream to output the result of rendering to\n-     * @deprecated Use one of the factory methods on {@link FopFactory} with an OutputStream\n-     *             parameter instead. This method will be removed with FOP 1.0.\n-     */\n-    public void setOutputStream(OutputStream stream) {\n-        this.stream = stream;\n-    }\n-\n     /**\n      * Creates a DefaultHandler object used to generate the document.\n      * Note this object implements the ContentHandler interface.\n@@ -148,8 +101,8 @@ private void createDefaultHandler() throws FOPException {\n     }\n \n     /**\n-     * Returns the DefaultHandler object used to generate the document.\n-     * Checking for null and the exception is only for the deprecated constructor.\n+     * Returns the DefaultHandler object that will receive the SAX stream containing the\n+     * FO document to be rendered.\n      * @return the SAX DefaultHandler for handling the SAX events.\n      * @throws FOPException if setting up the DefaultHandler fails\n      */\n@@ -178,13 +131,4 @@ public FormattingResults getResults() {\n         }\n     }\n \n-    /**\n-     * Get the version of FOP\n-     * @return the version string\n-     * @deprecated Use {@link org.apache.fop.Version#getVersion()} instead!\n-     *             This method will be removed with FOP 1.0.\n-     */\n-    public static String getVersion() {\n-        return org.apache.fop.Version.getVersion();\n-    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/Fop.java",
                "sha": "d1a56789f2fd3af8fe9b56ce07319c2b6c642790",
                "status": "modified"
            },
            {
                "additions": 141,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FopFactory.java",
                "changes": 287,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FopFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 146,
                "filename": "src/java/org/apache/fop/apps/FopFactory.java",
                "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-/* $Id: $ */\n+/* $Id$ */\n \n package org.apache.fop.apps;\n \n@@ -24,7 +24,6 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.net.MalformedURLException;\n-import java.net.URL;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Set;\n@@ -36,15 +35,17 @@\n import org.xml.sax.SAXException;\n \n import org.apache.avalon.framework.configuration.Configuration;\n-\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n+import org.apache.xmlgraphics.image.loader.ImageContext;\n+import org.apache.xmlgraphics.image.loader.ImageManager;\n+\n import org.apache.fop.fo.ElementMapping;\n import org.apache.fop.fo.ElementMappingRegistry;\n import org.apache.fop.fonts.FontCache;\n+import org.apache.fop.fonts.FontManager;\n import org.apache.fop.hyphenation.HyphenationTreeResolver;\n-import org.apache.fop.image.ImageFactory;\n import org.apache.fop.layoutmgr.LayoutManagerMaker;\n import org.apache.fop.render.RendererFactory;\n import org.apache.fop.render.XMLHandlerRegistry;\n@@ -57,53 +58,53 @@\n  * Information that may potentially be different for each rendering run can be\n  * found and managed in the FOUserAgent.\n  */\n-public class FopFactory {\n-    \n+public class FopFactory implements ImageContext {\n+\n     /** logger instance */\n     private static Log log = LogFactory.getLog(FopFactory.class);\n-    \n+\n     /** Factory for Renderers and FOEventHandlers */\n     private RendererFactory rendererFactory;\n-    \n+\n     /** Registry for XML handlers */\n     private XMLHandlerRegistry xmlHandlers;\n-    \n+\n     /** The registry for ElementMapping instances */\n     private ElementMappingRegistry elementMappingRegistry;\n \n-    /** The registry for ContentHandlerFactory instance */ \n-    private ContentHandlerFactoryRegistry contentHandlerFactoryRegistry \n+    /** The registry for ContentHandlerFactory instance */\n+    private ContentHandlerFactoryRegistry contentHandlerFactoryRegistry\n                 = new ContentHandlerFactoryRegistry();\n-    \n+\n     /** The resolver for user-supplied hyphenation patterns */\n     private HyphenationTreeResolver hyphResolver = null;\n \n     private ColorSpaceCache colorSpaceCache = null;\n-    \n-    /** Image factory for creating fop image objects */\n-    private ImageFactory imageFactory;\n+\n+    /** Image manager for loading and caching image objects */\n+    private ImageManager imageManager;\n+\n+    /** Font manager for font substitution, autodetection and caching **/\n+    private FontManager fontManager;\n \n     /** Configuration layer used to configure fop */\n     private FopFactoryConfigurator config = null;\n-        \n+\n     /**\n      *  The base URL for all URL resolutions, especially for\n      *  external-graphics.\n      */\n     private String base = null;\n \n-    /** The base URL for all font URL resolutions. */\n-    private String fontBase = null;\n-\n     /** The base URL for all hyphen URL resolutions. */\n     private String hyphenBase = null;\n \n     /**\n      * FOP has the ability, for some FO's, to continue processing even if the\n-     * input XSL violates that FO's content model.  This is the default  \n+     * input XSL violates that FO's content model.  This is the default\n      * behavior for FOP.  However, this flag, if set, provides the user the\n      * ability for FOP to halt on all content model violations if desired.\n-     */ \n+     */\n     private boolean strictFOValidation = FopFactoryConfigurator.DEFAULT_STRICT_FO_VALIDATION;\n \n     /**\n@@ -113,12 +114,6 @@\n     private boolean strictUserConfigValidation\n         = FopFactoryConfigurator.DEFAULT_STRICT_USERCONFIG_VALIDATION;\n \n-    /** Font cache to speed up auto-font configuration (null if disabled) */\n-    private FontCache fontCache = null;\n-\n-    /** Allows enabling kerning on the base 14 fonts, default is false */\n-    private boolean enableBase14Kerning = false;\n-    \n     /** Source resolution in dpi */\n     private float sourceResolution = FopFactoryConfigurator.DEFAULT_SOURCE_RESOLUTION;\n \n@@ -127,7 +122,7 @@\n \n     /** Page height */\n     private String pageHeight = FopFactoryConfigurator.DEFAULT_PAGE_HEIGHT;\n-    \n+\n     /** Page width */\n     private String pageWidth = FopFactoryConfigurator.DEFAULT_PAGE_WIDTH;\n \n@@ -141,89 +136,93 @@\n     private Set ignoredNamespaces;\n \n     private FOURIResolver foURIResolver;\n-    \n+\n     /**\n      * Main constructor.\n      */\n     protected FopFactory() {\n         this.config = new FopFactoryConfigurator(this);\n         this.elementMappingRegistry = new ElementMappingRegistry(this);\n         this.foURIResolver = new FOURIResolver(validateUserConfigStrictly());\n+        this.fontManager = new FontManager() {\n+\n+            /** {@inheritDoc} */\n+            public void setFontBaseURL(String fontBase) throws MalformedURLException {\n+                super.setFontBaseURL(getFOURIResolver().checkBaseURL(fontBase));\n+            }\n+\n+        };\n         this.colorSpaceCache = new ColorSpaceCache(foURIResolver);\n-        this.imageFactory = new ImageFactory();        \n+        this.imageManager = new ImageManager(this);\n         this.rendererFactory = new RendererFactory();\n         this.xmlHandlers = new XMLHandlerRegistry();\n         this.ignoredNamespaces = new java.util.HashSet();\n-        setUseCache(FopFactoryConfigurator.DEFAULT_USE_CACHE);\n     }\n-    \n+\n     /**\n      * Returns a new FopFactory instance.\n      * @return the requested FopFactory instance.\n      */\n     public static FopFactory newInstance() {\n         return new FopFactory();\n     }\n-    \n+\n     /**\n      * Returns a new FOUserAgent instance. Use the FOUserAgent to configure special values that\n      * are particular to a rendering run. Don't reuse instances over multiple rendering runs but\n      * instead create a new one each time and reuse the FopFactory.\n      * @return the newly created FOUserAgent instance initialized with default values\n-     * @throws FOPException \n+     * @throws FOPException\n      */\n     public FOUserAgent newFOUserAgent() {\n         FOUserAgent userAgent = new FOUserAgent(this);\n         return userAgent;\n     }\n \n     /**\n-     * Returns a new {@link Fop} instance. FOP will be configured with a default user agent \n+     * Returns a new {@link Fop} instance. FOP will be configured with a default user agent\n      * instance.\n      * <p>\n      * MIME types are used to select the output format (ex. \"application/pdf\" for PDF). You can\n      * use the constants defined in {@link MimeConstants}.\n-     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").     \n+     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n      * @return the new Fop instance\n      * @throws FOPException when the constructor fails\n      */\n     public Fop newFop(String outputFormat) throws FOPException {\n-        return new Fop(outputFormat, newFOUserAgent());\n+        return newFop(outputFormat, newFOUserAgent());\n     }\n \n     /**\n-     * Returns a new {@link Fop} instance. Use this factory method if you want to configure this \n+     * Returns a new {@link Fop} instance. Use this factory method if you want to configure this\n      * very rendering run, i.e. if you want to set some metadata like the title and author of the\n-     * document you want to render. In that case, create a new {@link FOUserAgent} \n+     * document you want to render. In that case, create a new {@link FOUserAgent}\n      * instance using {@link #newFOUserAgent()}.\n      * <p>\n      * MIME types are used to select the output format (ex. \"application/pdf\" for PDF). You can\n      * use the constants defined in {@link MimeConstants}.\n      * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n-     * @param userAgent the user agent that will be used to control the rendering run     \n+     * @param userAgent the user agent that will be used to control the rendering run\n      * @return the new Fop instance\n      * @throws FOPException  when the constructor fails\n      */\n     public Fop newFop(String outputFormat, FOUserAgent userAgent) throws FOPException {\n-        if (userAgent == null) {\n-            throw new NullPointerException(\"The userAgent parameter must not be null!\");\n-        }\n-        return new Fop(outputFormat, userAgent);\n+        return newFop(outputFormat, userAgent, null);\n     }\n-    \n+\n     /**\n-     * Returns a new {@link Fop} instance. FOP will be configured with a default user agent \n+     * Returns a new {@link Fop} instance. FOP will be configured with a default user agent\n      * instance. Use this factory method if your output type requires an output stream.\n      * <p>\n      * MIME types are used to select the output format (ex. \"application/pdf\" for PDF). You can\n      * use the constants defined in {@link MimeConstants}.\n-     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\"). \n+     * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n      * @param stream the output stream\n      * @return the new Fop instance\n      * @throws FOPException when the constructor fails\n      */\n     public Fop newFop(String outputFormat, OutputStream stream) throws FOPException {\n-        return new Fop(outputFormat, newFOUserAgent(), stream);\n+        return newFop(outputFormat, newFOUserAgent(), stream);\n     }\n \n     /**\n@@ -236,30 +235,30 @@ public Fop newFop(String outputFormat, OutputStream stream) throws FOPException\n      * MIME types are used to select the output format (ex. \"application/pdf\" for PDF). You can\n      * use the constants defined in {@link MimeConstants}.\n      * @param outputFormat the MIME type of the output format to use (ex. \"application/pdf\").\n-     * @param userAgent the user agent that will be used to control the rendering run     \n+     * @param userAgent the user agent that will be used to control the rendering run\n      * @param stream the output stream\n      * @return the new Fop instance\n      * @throws FOPException when the constructor fails\n      */\n-    public Fop newFop(String outputFormat, FOUserAgent userAgent, OutputStream stream) \n+    public Fop newFop(String outputFormat, FOUserAgent userAgent, OutputStream stream)\n                 throws FOPException {\n         if (userAgent == null) {\n             throw new NullPointerException(\"The userAgent parameter must not be null!\");\n         }\n         return new Fop(outputFormat, userAgent, stream);\n     }\n-    \n+\n     /**\n      * Returns a new {@link Fop} instance. Use this factory method if you want to supply your\n-     * own {@link org.apache.fop.render.Renderer Renderer} or \n-     * {@link org.apache.fop.fo.FOEventHandler FOEventHandler} \n+     * own {@link org.apache.fop.render.Renderer Renderer} or\n+     * {@link org.apache.fop.fo.FOEventHandler FOEventHandler}\n      * instance instead of the default ones created internally by FOP.\n-     * @param userAgent the user agent that will be used to control the rendering run     \n+     * @param userAgent the user agent that will be used to control the rendering run\n      * @return the new Fop instance\n      * @throws FOPException when the constructor fails\n      */\n     public Fop newFop(FOUserAgent userAgent) throws FOPException {\n-        if (userAgent.getRendererOverride() == null \n+        if (userAgent.getRendererOverride() == null\n                 && userAgent.getFOEventHandlerOverride() == null) {\n             throw new IllegalStateException(\"Either the overriding renderer or the overriding\"\n                     + \" FOEventHandler must be set when this factory method is used!\");\n@@ -276,7 +275,7 @@ public RendererFactory getRendererFactory() {\n     public XMLHandlerRegistry getXMLHandlerRegistry() {\n         return this.xmlHandlers;\n     }\n-    \n+\n     /** @return the element mapping registry */\n     public ElementMappingRegistry getElementMappingRegistry() {\n         return this.elementMappingRegistry;\n@@ -287,9 +286,12 @@ public ContentHandlerFactoryRegistry getContentHandlerFactoryRegistry() {\n         return this.contentHandlerFactoryRegistry;\n     }\n \n-    /** @return the image factory */\n-    public ImageFactory getImageFactory() {\n-        return this.imageFactory;\n+    /**\n+     * Returns the image manager.\n+     * @return the image manager\n+     */\n+    public ImageManager getImageManager() {\n+        return this.imageManager;\n     }\n \n     /**\n@@ -317,43 +319,13 @@ public LayoutManagerMaker getLayoutManagerMakerOverride() {\n         return this.lmMakerOverride;\n     }\n \n-    /**\n-     * cleans the base url\n-     * @param base\n-     * @return\n-     * @throws MalformedURLException\n-     * @throws URISyntaxException \n-     */\n-    private String checkBaseURL(String base) throws MalformedURLException {\n-        if (!base.endsWith(\"/\")) {\n-            // The behavior described by RFC 3986 regarding resolution of relative\n-            // references may be misleading for normal users:\n-            // file://path/to/resources + myResource.res -> file://path/to/myResource.res\n-            // file://path/to/resources/ + myResource.res -> file://path/to/resources/myResource.res\n-            // We assume that even when the ending slash is missing, users have the second\n-            // example in mind\n-            base += \"/\";\n-        }\n-        File dir = new File(base);\n-        try {\n-            base = (dir.isDirectory() ? dir.toURL() : new URL(base)).toExternalForm(); \n-        } catch (MalformedURLException mfue) {\n-            if (strictUserConfigValidation) {\n-                throw mfue;\n-            }\n-            log.error(mfue.getMessage());\n-        }\n-        return base;\n-    }\n-    \n     /**\n      * Sets the base URL.\n-     * @param base base URL\n-     * @throws MalformedURLException \n-     * @throws URISyntaxException \n+     * @param base the base URL\n+     * @throws MalformedURLException if there's a problem with a file URL\n      */\n     public void setBaseURL(String base) throws MalformedURLException {\n-        this.base = checkBaseURL(base);\n+        this.base = foURIResolver.checkBaseURL(base);\n     }\n \n     /**\n@@ -363,20 +335,23 @@ public void setBaseURL(String base) throws MalformedURLException {\n     public String getBaseURL() {\n         return this.base;\n     }\n-    \n+\n     /**\n      * Sets the font base URL.\n      * @param fontBase font base URL\n-     * @throws MalformedURLException \n-     * @throws URISyntaxException \n+     * @throws MalformedURLException if there's a problem with a file URL\n+     * @deprecated use getFontManager().setFontBaseURL(fontBase) instead\n      */\n     public void setFontBaseURL(String fontBase) throws MalformedURLException {\n-        this.fontBase = checkBaseURL(fontBase);\n+        getFontManager().setFontBaseURL(fontBase);\n     }\n \n-    /** @return the font base URL */\n+    /**\n+     * @return the font base URL\n+     * @deprecated use getFontManager().setFontBaseURL(fontBase) instead\n+     */\n     public String getFontBaseURL() {\n-        return this.fontBase;\n+        return getFontManager().getFontBaseURL();\n     }\n \n     /** @return the hyphen base URL */\n@@ -387,8 +362,7 @@ public String getHyphenBaseURL() {\n     /**\n      * Sets the hyphen base URL.\n      * @param hyphenBase hythen base URL\n-     * @throws MalformedURLException \n-     * @throws URISyntaxException \n+     * @throws MalformedURLException if there's a problem with a file URL\n      * */\n     public void setHyphenBaseURL(final String hyphenBase) throws MalformedURLException {\n         if (hyphenBase != null) {\n@@ -399,12 +373,12 @@ public Source resolve(String href) {\n                 }\n             });\n         }\n-        this.hyphenBase = checkBaseURL(hyphenBase);\n+        this.hyphenBase = foURIResolver.checkBaseURL(hyphenBase);\n     }\n-    \n+\n     /**\n      * Sets the URI Resolver. It is used for resolving factory-level URIs like hyphenation\n-     * patterns and as backup for URI resolution performed during a rendering run. \n+     * patterns and as backup for URI resolution performed during a rendering run.\n      * @param uriResolver the new URI resolver\n      */\n     public void setURIResolver(URIResolver uriResolver) {\n@@ -419,14 +393,22 @@ public URIResolver getURIResolver() {\n         return foURIResolver;\n     }\n \n+    /**\n+     * Returns the FO URI Resolver.\n+     * @return the FO URI Resolver\n+     */\n+    public FOURIResolver getFOURIResolver() {\n+        return foURIResolver;\n+    }\n+\n     /** @return the HyphenationTreeResolver for resolving user-supplied hyphenation patterns. */\n     public HyphenationTreeResolver getHyphenationTreeResolver() {\n         return this.hyphResolver;\n     }\n-    \n+\n     /**\n-     * sets the HyphenationTreeResolver\n-     * @param hyphResolver\n+     * Sets the HyphenationTreeResolver to be used for resolving user-supplied hyphenation files.\n+     * @param hyphResolver the HyphenationTreeResolver instance\n      */\n     public void setHyphenationTreeResolver(HyphenationTreeResolver hyphResolver) {\n         this.hyphResolver = hyphResolver;\n@@ -450,7 +432,7 @@ public boolean validateStrictly() {\n     }\n \n     /**\n-     * @return true if the indent inheritance should be broken when crossing reference area \n+     * @return true if the indent inheritance should be broken when crossing reference area\n      *         boundaries (for more info, see the javadoc for the relative member variable)\n      */\n     public boolean isBreakIndentInheritanceOnReferenceAreaBoundary() {\n@@ -473,20 +455,24 @@ public boolean isBreakIndentInheritanceOnReferenceAreaBoundary() {\n     public void setBreakIndentInheritanceOnReferenceAreaBoundary(boolean value) {\n         this.breakIndentInheritanceOnReferenceAreaBoundary = value;\n     }\n-    \n-    /** @return true if kerning on base 14 fonts is enabled */\n+\n+    /**\n+     * @return true if kerning on base 14 fonts is enabled\n+     * @deprecated use getFontManager().isBase14KerningEnabled() instead\n+     */\n     public boolean isBase14KerningEnabled() {\n-        return this.enableBase14Kerning;\n+        return getFontManager().isBase14KerningEnabled();\n     }\n-    \n+\n     /**\n      * Controls whether kerning is activated on base 14 fonts.\n      * @param value true if kerning should be activated\n+     * @deprecated use getFontManager().setBase14KerningEnabled(boolean) instead\n      */\n     public void setBase14KerningEnabled(boolean value) {\n-        this.enableBase14Kerning = value;\n+        getFontManager().setBase14KerningEnabled(value);\n     }\n-    \n+\n     /** @return the resolution for resolution-dependant input */\n     public float getSourceResolution() {\n         return this.sourceResolution;\n@@ -499,7 +485,7 @@ public float getSourceResolution() {\n      * @see #getSourceResolution()\n      */\n     public float getSourcePixelUnitToMillimeter() {\n-        return 25.4f / getSourceResolution(); \n+        return 25.4f / getSourceResolution();\n     }\n \n     /**\n@@ -510,7 +496,7 @@ public float getSourcePixelUnitToMillimeter() {\n     public void setSourceResolution(float dpi) {\n         this.sourceResolution = dpi;\n         if (log.isDebugEnabled()) {\n-            log.debug(\"source-resolution set to: \" + sourceResolution \n+            log.debug(\"source-resolution set to: \" + sourceResolution\n                     + \"dpi (px2mm=\" + getSourcePixelUnitToMillimeter() + \")\");\n         }\n     }\n@@ -527,7 +513,7 @@ public float getTargetResolution() {\n      * @see #getTargetResolution()\n      */\n     public float getTargetPixelUnitToMillimeter() {\n-        return 25.4f / this.targetResolution; \n+        return 25.4f / this.targetResolution;\n     }\n \n     /**\n@@ -547,7 +533,7 @@ public void setTargetResolution(float dpi) {\n     public void setSourceResolution(int dpi) {\n         setSourceResolution((float)dpi);\n     }\n-    \n+\n     /**\n      * Gets the default page-height to use as fallback,\n      * in case page-height=\"auto\"\n@@ -557,7 +543,7 @@ public void setSourceResolution(int dpi) {\n     public String getPageHeight() {\n         return this.pageHeight;\n     }\n-    \n+\n     /**\n      * Sets the page-height to use as fallback, in case\n      * page-height=\"auto\"\n@@ -570,7 +556,7 @@ public void setPageHeight(String pageHeight) {\n             log.debug(\"Default page-height set to: \" + pageHeight);\n         }\n     }\n-    \n+\n     /**\n      * Gets the default page-width to use as fallback,\n      * in case page-width=\"auto\"\n@@ -580,7 +566,7 @@ public void setPageHeight(String pageHeight) {\n     public String getPageWidth() {\n         return this.pageWidth;\n     }\n-    \n+\n     /**\n      * Sets the page-width to use as fallback, in case\n      * page-width=\"auto\"\n@@ -593,27 +579,27 @@ public void setPageWidth(String pageWidth) {\n             log.debug(\"Default page-width set to: \" + pageWidth);\n         }\n     }\n-    \n+\n     /**\n      * Adds a namespace to the set of ignored namespaces.\n-     * If FOP encounters a namespace which it cannot handle, it issues a warning except if this \n+     * If FOP encounters a namespace which it cannot handle, it issues a warning except if this\n      * namespace is in the ignored set.\n      * @param namespaceURI the namespace URI\n      */\n     public void ignoreNamespace(String namespaceURI) {\n         this.ignoredNamespaces.add(namespaceURI);\n     }\n-    \n+\n     /**\n      * Adds a collection of namespaces to the set of ignored namespaces.\n-     * If FOP encounters a namespace which it cannot handle, it issues a warning except if this \n+     * If FOP encounters a namespace which it cannot handle, it issues a warning except if this\n      * namespace is in the ignored set.\n      * @param namespaceURIs the namespace URIs\n      */\n     public void ignoreNamespaces(Collection namespaceURIs) {\n         this.ignoredNamespaces.addAll(namespaceURIs);\n     }\n-    \n+\n     /**\n      * Indicates whether a namespace URI is on the ignored list.\n      * @param namespaceURI the namespace URI\n@@ -622,14 +608,14 @@ public void ignoreNamespaces(Collection namespaceURIs) {\n     public boolean isNamespaceIgnored(String namespaceURI) {\n         return this.ignoredNamespaces.contains(namespaceURI);\n     }\n-    \n+\n     /** @return the set of namespaces that are ignored by FOP */\n     public Set getIgnoredNamespace() {\n         return Collections.unmodifiableSet(this.ignoredNamespaces);\n     }\n \n     //------------------------------------------- Configuration stuff\n-    \n+\n     /**\n      * Set the user configuration.\n      * @param userConfigFile the configuration file\n@@ -649,11 +635,11 @@ public void setUserConfig(File userConfigFile) throws SAXException, IOException\n     public void setUserConfig(String uri) throws SAXException, IOException {\n         config.setUserConfig(uri);\n     }\n-    \n+\n     /**\n      * Set the user configuration.\n      * @param userConfig configuration\n-     * @throws FOPException if a configuration problem occurs \n+     * @throws FOPException if a configuration problem occurs\n      */\n     public void setUserConfig(Configuration userConfig) throws FOPException {\n         config.setUserConfig(userConfig);\n@@ -684,43 +670,51 @@ public boolean validateUserConfigStrictly() {\n         return this.strictUserConfigValidation;\n     }\n \n-    //------------------------------------------- Cache related stuff\n+    //------------------------------------------- Font related stuff\n \n     /**\n      * Whether or not to cache results of font triplet detection/auto-config\n      * @param useCache use cache or not\n+     * @deprecated use getFontManager().setUseCache(boolean) instead\n      */\n     public void setUseCache(boolean useCache) {\n-        if (useCache) {\n-            this.fontCache = FontCache.load();\n-            if (this.fontCache == null) {\n-                this.fontCache = new FontCache();\n-            }\n-        } else {\n-            this.fontCache = null;\n-        }\n+        getFontManager().setUseCache(useCache);\n     }\n \n     /**\n      * Cache results of font triplet detection/auto-config?\n      * @return whether this factory is uses the cache\n+     * @deprecated use getFontManager().useCache() instead\n      */\n     public boolean useCache() {\n-        return (this.fontCache != null);\n+        return getFontManager().useCache();\n     }\n \n+    /**\n+     * Returns the font cache instance used by this factory.\n+     * @return the font cache\n+     * @deprecated use getFontManager().getFontCache() instead\n+     */\n     public FontCache getFontCache() {\n-        return this.fontCache;\n+        return getFontManager().getFontCache();\n     }\n-    \n+\n+    /**\n+     * Returns the font manager.\n+     * @return the font manager\n+     */\n+    public FontManager getFontManager() {\n+        return this.fontManager;\n+    }\n+\n     /**\n      * Attempts to resolve the given URI.\n      * Will use the configured resolver and if not successful fall back\n      * to the default resolver.\n      * @param href URI to access\n      * @param baseUri the base URI to resolve against\n      * @return A {@link javax.xml.transform.Source} object, or null if the URI\n-     * cannot be resolved. \n+     * cannot be resolved.\n      * @see org.apache.fop.apps.FOURIResolver\n      */\n     public Source resolveURI(String href, String baseUri) {\n@@ -732,21 +726,22 @@ public Source resolveURI(String href, String baseUri) {\n         }\n         return source;\n     }\n-        \n+\n     /**\n      * Create (if needed) and return an ICC ColorSpace instance.\n      * \n      * The ICC profile source is taken from the src attribute of the color-profile FO element.\n      * If the ICC ColorSpace is not yet in the cache a new one is created and stored in the cache.\n      * \n-     * The FOP URI resolver is used to try and locate the ICC file. \n+     * The FOP URI resolver is used to try and locate the ICC file.\n      * If that fails null is returned.\n      * \n      * @param baseUri a base URI to resolve relative URIs\n      * @param iccProfileSrc ICC Profile source to return a ColorSpace for\n-     * @return ICC ColorSpace object or null if ColorSpace could not be created \n+     * @return ICC ColorSpace object or null if ColorSpace could not be created\n      */\n     public ColorSpace getColorSpace(String baseUri, String iccProfileSrc) {\n         return colorSpaceCache.get(baseUri, iccProfileSrc);\n-    }    \n+    }\n+\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FopFactory.java",
                "sha": "2d4029da87ecc784cc29cccb09c059bad3c0c148",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FopFactoryConfigurator.java",
                "changes": 76,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FopFactoryConfigurator.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 44,
                "filename": "src/java/org/apache/fop/apps/FopFactoryConfigurator.java",
                "patch": "@@ -15,21 +15,25 @@\n  * limitations under the License.\n  */\n \n-/* $Id: $ */\n+/* $Id$ */\n \n package org.apache.fop.apps;\n \n import java.io.File;\n import java.io.IOException;\n import java.net.MalformedURLException;\n \n+import org.xml.sax.SAXException;\n+\n import org.apache.avalon.framework.configuration.Configuration;\n import org.apache.avalon.framework.configuration.ConfigurationException;\n import org.apache.avalon.framework.configuration.DefaultConfigurationBuilder;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.fonts.FontManager;\n+import org.apache.fop.fonts.FontManagerConfigurator;\n import org.apache.fop.util.LogUtil;\n-import org.xml.sax.SAXException;\n \n /**\n  * FopFactory configurator\n@@ -38,27 +42,24 @@\n \n     /** Defines if FOP should use an alternative rule to determine text indents */\n     public static final boolean DEFAULT_BREAK_INDENT_INHERITANCE = false;\n-    \n+\n     /** Defines if FOP should validate the user config strictly */\n     public static final boolean DEFAULT_STRICT_USERCONFIG_VALIDATION = true;\n-    \n+\n     /** Defines if FOP should use strict validation for FO and user config */\n     public static final boolean DEFAULT_STRICT_FO_VALIDATION = true;\n-    \n+\n     /** Defines the default page-width */\n     public static final String DEFAULT_PAGE_WIDTH = \"8.26in\";\n-    \n+\n     /** Defines the default page-height */\n     public static final String DEFAULT_PAGE_HEIGHT = \"11in\";\n-    \n+\n     /** Defines the default source resolution (72dpi) for FOP */\n     public static final float DEFAULT_SOURCE_RESOLUTION = 72.0f; //dpi\n-    \n+\n     /** Defines the default target resolution (72dpi) for FOP */\n     public static final float DEFAULT_TARGET_RESOLUTION = 72.0f; //dpi\n-    \n-    /** Use cache (record previously detected font triplet info) */\n-    public static final boolean DEFAULT_USE_CACHE = true;\n \n     /** logger instance */\n     private final Log log = LogFactory.getLog(FopFactoryConfigurator.class);\n@@ -77,7 +78,7 @@ public FopFactoryConfigurator(FopFactory factory) {\n         super();\n         this.factory = factory;\n     }\n-    \n+\n     /**\n      * Initializes user agent settings from the user configuration\n      * file, if present: baseURL, resolution, default page size,...\n@@ -86,7 +87,7 @@ public FopFactoryConfigurator(FopFactory factory) {\n      */\n     public void configure(FopFactory factory) throws FOPException {\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Initializing FopFactory Configuration\");        \n+            log.debug(\"Initializing FopFactory Configuration\");\n         }\n \n         // strict configuration\n@@ -97,9 +98,9 @@ public void configure(FopFactory factory) throws FOPException {\n             } catch (ConfigurationException e) {\n                 LogUtil.handleException(log, e, false);\n             }\n-        }        \n+        }\n         boolean strict = factory.validateUserConfigStrictly();\n-        \n+\n         // strict fo validation\n         if (cfg.getChild(\"strict-validation\", false) != null) {\n             try {\n@@ -119,14 +120,6 @@ public void configure(FopFactory factory) throws FOPException {\n                 LogUtil.handleException(log, mfue, strict);\n             }\n         }\n-        if (cfg.getChild(\"font-base\", false) != null) {\n-            try {\n-                factory.setFontBaseURL(\n-                        cfg.getChild(\"font-base\").getValue(null));\n-            } catch (MalformedURLException mfue) {\n-                LogUtil.handleException(log, mfue, strict);\n-            }\n-        }\n         if (cfg.getChild(\"hyphenation-base\", false) != null) {\n             try {\n                 factory.setHyphenBaseURL(\n@@ -135,14 +128,14 @@ public void configure(FopFactory factory) throws FOPException {\n                 LogUtil.handleException(log, mfue, strict);\n             }\n         }\n-        \n+\n         // renderer options\n         if (cfg.getChild(\"source-resolution\", false) != null) {\n             factory.setSourceResolution(\n                     cfg.getChild(\"source-resolution\").getValueAsFloat(\n                             FopFactoryConfigurator.DEFAULT_SOURCE_RESOLUTION));\n             if (log.isDebugEnabled()) {\n-                log.debug(\"source-resolution set to: \" + factory.getSourceResolution() \n+                log.debug(\"source-resolution set to: \" + factory.getSourceResolution()\n                     + \"dpi (px2mm=\" + factory.getSourcePixelUnitToMillimeter() + \")\");\n             }\n         }\n@@ -151,9 +144,9 @@ public void configure(FopFactory factory) throws FOPException {\n                     cfg.getChild(\"target-resolution\").getValueAsFloat(\n                             FopFactoryConfigurator.DEFAULT_TARGET_RESOLUTION));\n             if (log.isDebugEnabled()) {\n-                log.debug(\"target-resolution set to: \" + factory.getTargetResolution() \n+                log.debug(\"target-resolution set to: \" + factory.getTargetResolution()\n                         + \"dpi (px2mm=\" + factory.getTargetPixelUnitToMillimeter()\n-                        + \")\");                \n+                        + \")\");\n             }\n         }\n         if (cfg.getChild(\"break-indent-inheritance\", false) != null) {\n@@ -163,13 +156,13 @@ public void configure(FopFactory factory) throws FOPException {\n             } catch (ConfigurationException e) {\n                 LogUtil.handleException(log, e, strict);\n             }\n-        }     \n+        }\n         Configuration pageConfig = cfg.getChild(\"default-page-settings\");\n         if (pageConfig.getAttribute(\"height\", null) != null) {\n             factory.setPageHeight(\n                     pageConfig.getAttribute(\"height\", FopFactoryConfigurator.DEFAULT_PAGE_HEIGHT));\n             if (log.isInfoEnabled()) {\n-                log.info(\"Default page-height set to: \" + factory.getPageHeight());        \n+                log.info(\"Default page-height set to: \" + factory.getPageHeight());\n             }\n         }\n         if (pageConfig.getAttribute(\"width\", null) != null) {\n@@ -180,17 +173,12 @@ public void configure(FopFactory factory) throws FOPException {\n             }\n         }\n \n-        // caching (fonts)\n-        if (cfg.getChild(\"use-cache\", false) != null) {\n-            try {\n-                factory.setUseCache(\n-                        cfg.getChild(\"use-cache\").getValueAsBoolean());\n-            } catch (ConfigurationException mfue) {\n-                LogUtil.handleException(log, mfue, strict);\n-            }\n-        }\n+        // configure font manager\n+        FontManager fontManager = factory.getFontManager();\n+        FontManagerConfigurator fontManagerConfigurator = new FontManagerConfigurator(cfg);\n+        fontManagerConfigurator.configure(fontManager, strict);\n     }\n-    \n+\n     /**\n      * Set the user configuration.\n      * @param userConfigFile the configuration file\n@@ -205,7 +193,7 @@ public void setUserConfig(File userConfigFile) throws SAXException, IOException\n             throw new FOPException(e);\n         }\n     }\n-    \n+\n     /**\n      * Set the user configuration from an URI.\n      * @param uri the URI to the configuration file\n@@ -220,22 +208,22 @@ public void setUserConfig(String uri) throws SAXException, IOException {\n             throw new FOPException(e);\n         }\n     }\n-    \n+\n     /**\n      * Set the user configuration.\n      * @param cfg avalon configuration\n-     * @throws FOPException if a configuration problem occurs \n+     * @throws FOPException if a configuration problem occurs\n      */\n     public void setUserConfig(Configuration cfg) throws FOPException {\n         this.cfg = cfg;\n         configure(this.factory);\n     }\n-    \n+\n     /**\n      * Get the avalon user configuration.\n      * @return the user configuration\n      */\n     public Configuration getUserConfig() {\n         return this.cfg;\n-    }    \n+    }\n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FopFactoryConfigurator.java",
                "sha": "ffcc1332b0ab490dce7c40cd03d927150c6aa069",
                "status": "modified"
            },
            {
                "additions": 85,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FormattingResults.java",
                "changes": 170,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/FormattingResults.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 85,
                "filename": "src/java/org/apache/fop/apps/FormattingResults.java",
                "patch": "@@ -1,85 +1,85 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n-\r\n-package org.apache.fop.apps;\r\n-\r\n-import java.util.List;\r\n-\r\n-import org.apache.fop.fo.pagination.PageSequence;\r\n-\r\n-/**\r\n- * Class for reporting back formatting results to the calling application.\r\n- */\r\n-public class FormattingResults {\r\n-\r\n-    private int pageCount = 0;\r\n-    private List pageSequences = null;\r\n-\r\n-    /**\r\n-     * Constructor for the FormattingResults object\r\n-     */\r\n-    public FormattingResults() {\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the number of pages rendered\r\n-     *\r\n-     * @return   The number of pages overall\r\n-     */\r\n-    public int getPageCount() {\r\n-        return this.pageCount;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the results for the individual page-sequences.\r\n-     *\r\n-     * @return   A List with PageSequenceResults objects\r\n-     */\r\n-    public List getPageSequences() {\r\n-        return this.pageSequences;\r\n-    }\r\n-\r\n-    /**\r\n-     * Resets this object\r\n-     */\r\n-    public void reset() {\r\n-        this.pageCount = 0;\r\n-        if (this.pageSequences != null) {\r\n-            this.pageSequences.clear();\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * Reports the result of one page sequence rendering\r\n-     * back into this object.\r\n-     *\r\n-     * @param pageSequence  the PageSequence which just completed rendering\r\n-     * @param pageCount     the number of pages rendered for that PageSequence\r\n-     */\r\n-    public void haveFormattedPageSequence(PageSequence pageSequence, int pageCount) {\r\n-        this.pageCount += pageCount;\r\n-        if (this.pageSequences == null) {\r\n-            this.pageSequences = new java.util.ArrayList();\r\n-        }\r\n-        this.pageSequences.add(\r\n-                new PageSequenceResults(pageSequence.getId(),\r\n-                                        pageCount));\r\n-    }\r\n-}\r\n-\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.apps;\n+\n+import java.util.List;\n+\n+import org.apache.fop.fo.pagination.AbstractPageSequence;\n+\n+/**\n+ * Class for reporting back formatting results to the calling application.\n+ */\n+public class FormattingResults {\n+\n+    private int pageCount = 0;\n+    private List pageSequences = null;\n+\n+    /**\n+     * Constructor for the FormattingResults object\n+     */\n+    public FormattingResults() {\n+    }\n+\n+    /**\n+     * Gets the number of pages rendered\n+     *\n+     * @return   The number of pages overall\n+     */\n+    public int getPageCount() {\n+        return this.pageCount;\n+    }\n+\n+    /**\n+     * Gets the results for the individual page-sequences.\n+     *\n+     * @return   A List with PageSequenceResults objects\n+     */\n+    public List getPageSequences() {\n+        return this.pageSequences;\n+    }\n+\n+    /**\n+     * Resets this object\n+     */\n+    public void reset() {\n+        this.pageCount = 0;\n+        if (this.pageSequences != null) {\n+            this.pageSequences.clear();\n+        }\n+    }\n+\n+    /**\n+     * Reports the result of one page sequence rendering\n+     * back into this object.\n+     *\n+     * @param pageSequence  the page sequence which just completed rendering\n+     * @param pageCount     the number of pages rendered for that PageSequence\n+     */\n+    public void haveFormattedPageSequence(AbstractPageSequence pageSequence, int pageCount) {\n+        this.pageCount += pageCount;\n+        if (this.pageSequences == null) {\n+            this.pageSequences = new java.util.ArrayList();\n+        }\n+        this.pageSequences.add(\n+                new PageSequenceResults(pageSequence.getId(),\n+                                        pageCount));\n+    }\n+}\n+",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/FormattingResults.java",
                "sha": "af421f4ace305069a0dfd27ec87021baf802419a",
                "status": "modified"
            },
            {
                "additions": 80,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/MimeConstants.java",
                "changes": 160,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/MimeConstants.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 80,
                "filename": "src/java/org/apache/fop/apps/MimeConstants.java",
                "patch": "@@ -1,80 +1,80 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n-\r\n-package org.apache.fop.apps;\r\n-\r\n-/**\r\n- * Frequently used MIME types for various file formats used when working with Apache FOP.\r\n- */\r\n-public interface MimeConstants {\r\n-\r\n-    /** Portable Document Format */\r\n-    String MIME_PDF             = \"application/pdf\";\r\n-    \r\n-    /** PostScript */\r\n-    String MIME_POSTSCRIPT      = \"application/postscript\";\r\n-    /** Encapsulated PostScript (same MIME type as PostScript) */\r\n-    String MIME_EPS             = MIME_POSTSCRIPT;\r\n-    \r\n-    /** HP's PCL */\r\n-    String MIME_PCL             = \"application/x-pcl\";\r\n-    /** HP's PCL (alternative MIME type) */\r\n-    String MIME_PCL_ALT         = \"application/vnd.hp-PCL\";\r\n-    \r\n-    /** IBM's AFP */\r\n-    String MIME_AFP             = \"application/x-afp\";\r\n-    /** IBM's AFP (alternative MIME type) */\r\n-    String MIME_AFP_ALT         = \"application/vnd.ibm.modcap\";\r\n-    \r\n-    /** Plain text */\r\n-    String MIME_PLAIN_TEXT      = \"text/plain\";\r\n-    \r\n-    /** Rich text format */\r\n-    String MIME_RTF             = \"application/rtf\";\r\n-    /** Rich text format (alternative 1) */\r\n-    String MIME_RTF_ALT1        = \"text/richtext\";\r\n-    /** Rich text format (alternative 2) */\r\n-    String MIME_RTF_ALT2        = \"text/rtf\";\r\n-    \r\n-    /** FrameMaker's MIF */\r\n-    String MIME_MIF             = \"application/mif\";\r\n-    \r\n-    /** Structured Vector Graphics */\r\n-    String MIME_SVG             = \"image/svg+xml\";\r\n-    \r\n-    /** GIF images */\r\n-    String MIME_GIF             = \"image/gif\";\r\n-    /** PNG images */\r\n-    String MIME_PNG             = \"image/png\";\r\n-    /** JPEG images */\r\n-    String MIME_JPEG            = \"image/jpeg\";\r\n-    /** TIFF images */\r\n-    String MIME_TIFF            = \"image/tiff\";\r\n-       \r\n-    /** Apache FOP's AWT preview (non-standard MIME type) */\r\n-    String MIME_FOP_AWT_PREVIEW = \"application/X-fop-awt-preview\";\r\n-    /** Apache FOP's Direct Printing (non-standard MIME type) */\r\n-    String MIME_FOP_PRINT       = \"application/X-fop-print\";\r\n-    /** Apache FOP's area tree XML */\r\n-    String MIME_FOP_AREA_TREE   = \"application/X-fop-areatree\";\r\n-\r\n-    /** Proposed but non-registered MIME type for XSL-FO */\r\n-    String MIME_XSL_FO          = \"text/xsl\";\r\n-    \r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.apps;\n+\n+/**\n+ * Frequently used MIME types for various file formats used when working with Apache FOP.\n+ */\n+public interface MimeConstants {\n+\n+    /** Portable Document Format */\n+    String MIME_PDF             = \"application/pdf\";\n+    \n+    /** PostScript */\n+    String MIME_POSTSCRIPT      = \"application/postscript\";\n+    /** Encapsulated PostScript (same MIME type as PostScript) */\n+    String MIME_EPS             = MIME_POSTSCRIPT;\n+    \n+    /** HP's PCL */\n+    String MIME_PCL             = \"application/x-pcl\";\n+    /** HP's PCL (alternative MIME type) */\n+    String MIME_PCL_ALT         = \"application/vnd.hp-PCL\";\n+    \n+    /** IBM's AFP */\n+    String MIME_AFP             = \"application/x-afp\";\n+    /** IBM's AFP (alternative MIME type) */\n+    String MIME_AFP_ALT         = \"application/vnd.ibm.modcap\";\n+    \n+    /** Plain text */\n+    String MIME_PLAIN_TEXT      = \"text/plain\";\n+    \n+    /** Rich text format */\n+    String MIME_RTF             = \"application/rtf\";\n+    /** Rich text format (alternative 1) */\n+    String MIME_RTF_ALT1        = \"text/richtext\";\n+    /** Rich text format (alternative 2) */\n+    String MIME_RTF_ALT2        = \"text/rtf\";\n+    \n+    /** FrameMaker's MIF */\n+    String MIME_MIF             = \"application/mif\";\n+    \n+    /** Structured Vector Graphics */\n+    String MIME_SVG             = \"image/svg+xml\";\n+    \n+    /** GIF images */\n+    String MIME_GIF             = \"image/gif\";\n+    /** PNG images */\n+    String MIME_PNG             = \"image/png\";\n+    /** JPEG images */\n+    String MIME_JPEG            = \"image/jpeg\";\n+    /** TIFF images */\n+    String MIME_TIFF            = \"image/tiff\";\n+       \n+    /** Apache FOP's AWT preview (non-standard MIME type) */\n+    String MIME_FOP_AWT_PREVIEW = \"application/X-fop-awt-preview\";\n+    /** Apache FOP's Direct Printing (non-standard MIME type) */\n+    String MIME_FOP_PRINT       = \"application/X-fop-print\";\n+    /** Apache FOP's area tree XML */\n+    String MIME_FOP_AREA_TREE   = \"application/X-fop-areatree\";\n+\n+    /** Proposed but non-registered MIME type for XSL-FO */\n+    String MIME_XSL_FO          = \"text/xsl\";\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/MimeConstants.java",
                "sha": "31bdaaab175a19b66d23722b1bb566a223e130ad",
                "status": "modified"
            },
            {
                "additions": 59,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/PageSequenceResults.java",
                "changes": 118,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/apps/PageSequenceResults.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 59,
                "filename": "src/java/org/apache/fop/apps/PageSequenceResults.java",
                "patch": "@@ -1,59 +1,59 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n-\r\n-package org.apache.fop.apps;\r\n-\r\n-/**\r\n- * Class for reporting back formatting results to the calling application. This\r\n- * particular class is used to report the results of a single page-sequence.\r\n- */\r\n-public class PageSequenceResults {\r\n-\r\n-    private String id;\r\n-    private int pageCount;\r\n-\r\n-    /**\r\n-     * Constructor for the PageSequenceResults object\r\n-     *\r\n-     * @param id         ID of the page-sequence, if available\r\n-     * @param pageCount  The number of resulting pages\r\n-     */\r\n-    public PageSequenceResults(String id, int pageCount) {\r\n-        this.id = id;\r\n-        this.pageCount = pageCount;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the ID of the page-sequence if one was specified.\r\n-     *\r\n-     * @return   The ID\r\n-     */\r\n-    public String getID() {\r\n-        return this.id;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the number of pages that resulted by processing the page-sequence.\r\n-     *\r\n-     * @return   The number of pages generated\r\n-     */\r\n-    public int getPageCount() {\r\n-        return this.pageCount;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.apps;\n+\n+/**\n+ * Class for reporting back formatting results to the calling application. This\n+ * particular class is used to report the results of a single page-sequence.\n+ */\n+public class PageSequenceResults {\n+\n+    private String id;\n+    private int pageCount;\n+\n+    /**\n+     * Constructor for the PageSequenceResults object\n+     *\n+     * @param id         ID of the page-sequence, if available\n+     * @param pageCount  The number of resulting pages\n+     */\n+    public PageSequenceResults(String id, int pageCount) {\n+        this.id = id;\n+        this.pageCount = pageCount;\n+    }\n+\n+    /**\n+     * Gets the ID of the page-sequence if one was specified.\n+     *\n+     * @return   The ID\n+     */\n+    public String getID() {\n+        return this.id;\n+    }\n+\n+    /**\n+     * Gets the number of pages that resulted by processing the page-sequence.\n+     *\n+     * @return   The number of pages generated\n+     */\n+    public int getPageCount() {\n+        return this.pageCount;\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/apps/PageSequenceResults.java",
                "sha": "16c74f66bdfb40501f55316eac657d03393a75d5",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Area.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/Area.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 12,
                "filename": "src/java/org/apache/fop/area/Area.java",
                "patch": "@@ -367,18 +367,6 @@ public int getSpaceEnd() {\n     public void addChildArea(Area child) {\n     }\n \n-    /**\n-     * Add a trait property to this area.\n-     *\n-     * @param prop the Trait to add\n-     */\n-    public void addTrait(Trait prop) {\n-        if (props == null) {\n-            props = new java.util.HashMap(20);\n-        }\n-        props.put(prop.getPropType(), prop.getData());\n-    }\n-\n     /**\n      * Add a trait to this area.\n      *",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Area.java",
                "sha": "ff9f5c7d0daed340bbfab28cf9d963b10687f732",
                "status": "modified"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaEventProducer.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaEventProducer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/AreaEventProducer.java",
                "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.area;\n+\n+import org.apache.fop.events.EventBroadcaster;\n+import org.apache.fop.events.EventProducer;\n+\n+/**\n+ * Event producer interface for events related to the area tree.\n+ */\n+public interface AreaEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the event producer\n+         */\n+        public static AreaEventProducer get(EventBroadcaster broadcaster) {\n+            return (AreaEventProducer)broadcaster.getEventProducerFor(\n+                    AreaEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * An unresolved ID reference was encountered.\n+     * @param source the event source\n+     * @param type the type of reference\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReference(Object source, String type, String id);\n+    \n+    /**\n+     * An unresolved ID reference was encountered on a page.\n+     * @param source the event source\n+     * @param page the page the ID reference was found on\n+     * @param id the unresolved ID\n+     * @event.severity WARN\n+     */\n+    void unresolvedIDReferenceOnPage(Object source, String page, String id);\n+    \n+    /**\n+     * A page could not be loaded/deserialized from a file.\n+     * @param source the event source\n+     * @param page the page to be loaded\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageLoadError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be saved/serialized to a file.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageSaveError(Object source, String page, Exception e);\n+    \n+    /**\n+     * A page could not be rendered.\n+     * @param source the event source\n+     * @param page the page to be serialized\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void pageRenderingError(Object source, String page, Exception e);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaEventProducer.java",
                "sha": "7747d2d79c6e05dc64958cb97eead4c4195f78e9",
                "status": "added"
            },
            {
                "additions": 34,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeHandler.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 9,
                "filename": "src/java/org/apache/fop/area/AreaTreeHandler.java",
                "patch": "@@ -35,13 +35,17 @@\n import org.apache.fop.datatypes.Numeric;\n import org.apache.fop.fo.FOEventHandler;\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n+import org.apache.fop.fo.extensions.ExternalDocument;\n import org.apache.fop.fo.extensions.destination.Destination;\n+import org.apache.fop.fo.pagination.AbstractPageSequence;\n import org.apache.fop.fo.pagination.PageSequence;\n import org.apache.fop.fo.pagination.Root;\n import org.apache.fop.fo.pagination.bookmarks.BookmarkTree;\n+import org.apache.fop.layoutmgr.ExternalDocumentLayoutManager;\n import org.apache.fop.layoutmgr.LayoutManagerMaker;\n import org.apache.fop.layoutmgr.LayoutManagerMapping;\n import org.apache.fop.layoutmgr.PageSequenceLayoutManager;\n+import org.apache.fop.layoutmgr.TopLevelLayoutManager;\n \n /**\n  * Area tree handler for formatting objects.\n@@ -78,7 +82,7 @@\n     // The formatting results to be handed back to the caller.\n     private FormattingResults results = new FormattingResults();\n \n-    private PageSequenceLayoutManager prevPageSeqLM;\n+    private TopLevelLayoutManager prevPageSeqLM;\n \n     private int idGen = 0;\n \n@@ -185,12 +189,12 @@ private void finishPrevPageSequence(Numeric initialPageNumber) {\n         }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     * @param pageSequence\n-     *            is the pageSequence being started\n-     */\n+    /** {@inheritDoc} */\n     public void startPageSequence(PageSequence pageSequence) {\n+        startAbstractPageSequence(pageSequence);\n+    }\n+    \n+    private void startAbstractPageSequence(AbstractPageSequence pageSequence) {\n         rootFObj = pageSequence.getRoot();\n         finishPrevPageSequence(pageSequence.getInitialPageNumber());\n         pageSequence.initPageNumber();\n@@ -234,14 +238,34 @@ public void endPageSequence(PageSequence pageSequence) {\n         }\n     }\n \n+    /** {@inheritDoc} */\n+    public void startExternalDocument(ExternalDocument document) {\n+        startAbstractPageSequence(document);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void endExternalDocument(ExternalDocument document) {\n+        if (statistics != null) {\n+            statistics.end();\n+        }\n+        \n+        ExternalDocumentLayoutManager edLM;\n+        edLM = getLayoutManagerMaker().makeExternalDocumentLayoutManager(this, document);\n+        edLM.activateLayout();\n+        // preserve the current PageSequenceLayoutManger for the\n+        // force-page-count check at the beginning of the next PageSequence\n+        prevPageSeqLM = edLM;\n+        \n+    }\n+\n     /**\n      * Called by the PageSequenceLayoutManager when it is finished with a\n      * page-sequence.\n      * \n      * @param pageSequence the page-sequence just finished\n      * @param pageCount The number of pages generated for the page-sequence\n      */\n-    public void notifyPageSequenceFinished(PageSequence pageSequence,\n+    public void notifyPageSequenceFinished(AbstractPageSequence pageSequence,\n             int pageCount) {\n         this.results.haveFormattedPageSequence(pageSequence, pageCount);\n         if (log.isDebugEnabled()) {\n@@ -301,8 +325,9 @@ private void addOffDocumentItem(OffDocumentItem odi) {\n                 if (pageVPList != null) {\n                     res.resolveIDRef(ids[count], pageVPList);\n                 } else {\n-                    log.warn(odi.getName() + \": Unresolved id reference \\\"\"\n-                            + ids[count] + \"\\\" found.\");\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReference(this, odi.getName(), ids[count]);\n                     idTracker.addUnresolvedIDRef(ids[count], res);\n                 }\n             }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeHandler.java",
                "sha": "d3ea4155480403b00f340b0b99f42eee985412a2",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeModel.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/area/AreaTreeModel.java",
                "patch": "@@ -22,10 +22,8 @@\n // Java\n import java.util.List;\n \n-// XML\n import org.xml.sax.SAXException;\n \n-// Apache\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -55,10 +53,13 @@ public AreaTreeModel() {\n \n     /**\n      * Start a page sequence on this model.\n-     * @param title the title of the new page sequence\n+     * @param pageSequence the page sequence about to start\n      */\n-    public void startPageSequence(LineArea title) {\n-        currentPageSequence = new PageSequence(title);\n+    public void startPageSequence(PageSequence pageSequence) {\n+        if (pageSequence == null) {\n+            throw new NullPointerException(\"pageSequence must not be null\");\n+        }\n+        this.currentPageSequence = pageSequence;\n         pageSequenceList.add(currentPageSequence);\n         currentPageSequenceIndex = pageSequenceList.size() - 1;\n     }\n@@ -90,6 +91,14 @@ public void addPage(PageViewport page) {\n      */\n     public void endDocument() throws SAXException {};\n \n+    /**\n+     * Returns the currently active page-sequence.\n+     * @return the currently active page-sequence\n+     */\n+    public PageSequence getCurrentPageSequence() {\n+        return this.currentPageSequence;\n+    }\n+    \n     /**\n      * Get the page sequence count.\n      * @return the number of page sequences in the document.",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeModel.java",
                "sha": "c43db31bb1cf30a95d11175e232f8e778dfb0ffe",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeObject.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeObject.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 5,
                "filename": "src/java/org/apache/fop/area/AreaTreeObject.java",
                "patch": "@@ -23,7 +23,7 @@\n import java.util.Iterator;\n import java.util.Map;\n \n-import org.apache.fop.util.QName;\n+import org.apache.xmlgraphics.util.QName;\n \n /**\n  * Abstract base class for all area tree objects.\n@@ -53,12 +53,12 @@ public void setForeignAttributes(Map atts) {\n         if (atts.size() == 0) {\n             return;\n         }\n-        Iterator iter = atts.keySet().iterator();\n+        Iterator iter = atts.entrySet().iterator();\n         while (iter.hasNext()) {\n-            QName qName = (QName)iter.next();\n-            String value = (String)atts.get(qName);\n+            Map.Entry entry = (Map.Entry)iter.next();\n+            String value = (String)entry.getValue();\n             //The casting is only to ensure type safety (too bad we can't use generics, yet) \n-            setForeignAttribute(qName, value);\n+            setForeignAttribute((QName)entry.getKey(), value);\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeObject.java",
                "sha": "1c2269a01a7d3cf3cc0da5ed135791de40788b1f",
                "status": "modified"
            },
            {
                "additions": 64,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeParser.java",
                "changes": 100,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/AreaTreeParser.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 36,
                "filename": "src/java/org/apache/fop/area/AreaTreeParser.java",
                "patch": "@@ -36,16 +36,30 @@\n import javax.xml.transform.sax.SAXTransformerFactory;\n import javax.xml.transform.sax.TransformerHandler;\n \n+import org.w3c.dom.DOMImplementation;\n+import org.w3c.dom.Document;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.xmlgraphics.image.loader.ImageInfo;\n+import org.apache.xmlgraphics.image.loader.ImageManager;\n+import org.apache.xmlgraphics.image.loader.ImageSessionContext;\n+import org.apache.xmlgraphics.util.QName;\n+\n import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.area.Trait.InternalLink;\n import org.apache.fop.area.Trait.Background;\n-import org.apache.fop.area.inline.InlineArea;\n+import org.apache.fop.area.Trait.InternalLink;\n import org.apache.fop.area.inline.AbstractTextArea;\n import org.apache.fop.area.inline.Character;\n import org.apache.fop.area.inline.ForeignObject;\n import org.apache.fop.area.inline.Image;\n+import org.apache.fop.area.inline.InlineArea;\n import org.apache.fop.area.inline.InlineBlockParent;\n import org.apache.fop.area.inline.InlineParent;\n import org.apache.fop.area.inline.Leader;\n@@ -60,20 +74,11 @@\n import org.apache.fop.fo.extensions.ExtensionAttachment;\n import org.apache.fop.fonts.Font;\n import org.apache.fop.fonts.FontInfo;\n-import org.apache.fop.image.FopImage;\n-import org.apache.fop.image.ImageFactory;\n import org.apache.fop.traits.BorderProps;\n import org.apache.fop.util.ColorUtil;\n import org.apache.fop.util.ContentHandlerFactory;\n import org.apache.fop.util.ContentHandlerFactoryRegistry;\n import org.apache.fop.util.DefaultErrorListener;\n-import org.apache.fop.util.QName;\n-import org.w3c.dom.DOMImplementation;\n-import org.w3c.dom.Document;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.ContentHandler;\n-import org.xml.sax.SAXException;\n-import org.xml.sax.helpers.DefaultHandler;\n \n /**\n  * This is a parser for the area tree XML (intermediate format) which is used to reread an area\n@@ -136,7 +141,6 @@ public ContentHandler getContentHandler(AreaTreeModel treeModel, FOUserAgent use\n \n         private Stack areaStack = new Stack();\n         private boolean firstFlow;\n-        private boolean pendingStartPageSequence;\n \n         private Stack delegateStack = new Stack();\n         private ContentHandler delegate;\n@@ -179,6 +183,7 @@ public Handler(AreaTreeModel treeModel, FOUserAgent userAgent,\n             makers.put(\"foreignObject\", new ForeignObjectMaker());\n             makers.put(\"bookmarkTree\", new BookmarkTreeMaker());\n             makers.put(\"bookmark\", new BookmarkMaker());\n+            makers.put(\"destination\", new DestinationMaker());\n         }\n \n         private static Rectangle2D parseRect(String rect) {\n@@ -343,8 +348,12 @@ public void startElement(Attributes attributes) {\n         private class PageSequenceMaker extends AbstractMaker {\n \n             public void startElement(Attributes attributes) {\n-                pendingStartPageSequence = true;\n-                //treeModel.startPageSequence(null); Done after title or on the first viewport\n+                PageSequence pageSequence = new PageSequence(null);\n+                String lang = attributes.getValue(\"language\");\n+                pageSequence.setLanguage(lang);\n+                String country = attributes.getValue(\"country\");\n+                pageSequence.setCountry(country);\n+                areaStack.push(pageSequence);\n             }\n         }\n \n@@ -358,19 +367,19 @@ public void startElement(Attributes attributes) {\n \n             public void endElement() {\n                 LineArea line = (LineArea)areaStack.pop();\n-                treeModel.startPageSequence(line);\n-                pendingStartPageSequence = false;\n+                PageSequence pageSequence = (PageSequence)areaStack.peek();\n+                pageSequence.setTitle(line);\n             }\n \n-\n         }\n \n         private class PageViewportMaker extends AbstractMaker {\n \n             public void startElement(Attributes attributes) {\n-                if (pendingStartPageSequence) {\n-                    treeModel.startPageSequence(null);\n-                    pendingStartPageSequence = false;\n+                if (!areaStack.isEmpty()) {\n+                    PageSequence pageSequence = (PageSequence)areaStack.peek();\n+                    treeModel.startPageSequence(pageSequence);\n+                    areaStack.pop();\n                 }\n                 if (currentPageViewport != null) {\n                     throw new IllegalStateException(\"currentPageViewport must be null\");\n@@ -922,6 +931,26 @@ public void endElement() {\n             }\n         }\n \n+        private class DestinationMaker extends AbstractMaker {\n+\n+            public void startElement(Attributes attributes) {\n+                String[] linkdata\n+                    = InternalLink.parseXMLAttribute(lastAttributes.getValue(\"internal-link\"));\n+                PageViewport pv = (PageViewport) pageViewportsByKey.get(linkdata[0]);\n+                DestinationData dest = new DestinationData(linkdata[1]);\n+                List pages = new java.util.ArrayList();\n+                pages.add(pv);\n+                dest.resolveIDRef(linkdata[1], pages);\n+                areaStack.push(dest);\n+            }\n+\n+            public void endElement() {\n+                Object tos = areaStack.pop();\n+                assertObjectOfClass(tos, DestinationData.class);\n+                treeModel.handleOffDocumentItem((DestinationData) tos);\n+            }\n+        }\n+\n         // ====================================================================\n \n \n@@ -989,7 +1018,7 @@ private void setAreaAttributes(Attributes attributes, Area area) {\n             Trait.IS_REFERENCE_AREA, Trait.IS_VIEWPORT_AREA};\n \n         private void setTraits(Attributes attributes, Area area, Object[] traitSubset) {\n-            for (int i = 0, c = traitSubset.length; i < c; i++) {\n+            for (int i = traitSubset.length; --i >= 0;) {\n                 Object trait = traitSubset[i];\n                 String traitName = Trait.getTraitName(trait);\n                 String value = attributes.getValue(traitName);\n@@ -1015,6 +1044,8 @@ private void setTraits(Attributes attributes, Area area, Object[] traitSubset) {\n                         }\n                     } else if (cl == InternalLink.class) {\n                         area.addTrait(trait, new InternalLink(value));\n+                    } else if (cl == Trait.ExternalLink.class) {\n+                        area.addTrait(trait, Trait.ExternalLink.makeFromTraitValue(value));\n                     } else if (cl == Background.class) {\n                         Background bkg = new Background();\n                         try {\n@@ -1024,22 +1055,19 @@ private void setTraits(Attributes attributes, Area area, Object[] traitSubset) {\n                         } catch (PropertyException e) {\n                             throw new IllegalArgumentException(e.getMessage());\n                         }\n-                        String url = attributes.getValue(\"bkg-img\");\n-                        if (url != null) {\n-                            bkg.setURL(url);\n-\n-                            ImageFactory fact = userAgent.getFactory().getImageFactory();\n-                            FopImage img = fact.getImage(url, userAgent);\n-                            if (img == null) {\n-                                log.error(\"Background image not available: \" + url);\n-                            } else {\n-                                // load dimensions\n-                                if (!img.load(FopImage.DIMENSIONS)) {\n-                                    log.error(\"Cannot read background image dimensions: \"\n-                                            + url);\n-                                }\n+                        String uri = attributes.getValue(\"bkg-img\");\n+                        if (uri != null) {\n+                            bkg.setURL(uri);\n+\n+                            try {\n+                                ImageManager manager = userAgent.getFactory().getImageManager();\n+                                ImageSessionContext sessionContext\n+                                    = userAgent.getImageSessionContext();\n+                                ImageInfo info = manager.getImageInfo(uri, sessionContext);\n+                                bkg.setImageInfo(info);\n+                            } catch (Exception e) {\n+                                log.error(\"Background image not available: \" + uri, e);\n                             }\n-                            bkg.setFopImage(img);\n \n                             String repeat = attributes.getValue(\"bkg-repeat\");\n                             if (repeat != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/AreaTreeParser.java",
                "sha": "d48221c0a95d4edf0eda8854a0ba215a17f74927",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Block.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/Block.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 3,
                "filename": "src/java/org/apache/fop/area/Block.java",
                "patch": "@@ -19,7 +19,6 @@\n  \n package org.apache.fop.area;\n \n-import java.util.ArrayList;\n \n // block areas hold either more block areas or line\n // areas can also be used as a block spacer\n@@ -59,6 +58,8 @@\n     private int stacking = TB;\n     private int positioning = STACK;\n \n+    protected transient boolean allowBPDUpdate = true;\n+    \n     // a block with may contain the dominant styling info in\n     // terms of most lines or blocks with info\n \n@@ -78,7 +79,7 @@ public void addBlock(Block block) {\n      * @param autoHeight increase the height of the block.\n      */\n     public void addBlock(Block block, boolean autoHeight) {\n-        if (autoHeight) {\n+        if (autoHeight && allowBPDUpdate) {\n             bpd += block.getAllocBPD();\n         }\n         addChildArea(block);\n@@ -112,13 +113,21 @@ public int getPositioning() {\n         return positioning;\n     }\n \n+    /**\n+     * Indicates whether this block is stacked, rather than absolutely positioned.\n+     * @return true if it is stacked\n+     */\n+    public boolean isStacked() {\n+        return (getPositioning() == Block.STACK || getPositioning() == Block.RELATIVE);\n+    }\n+    \n     /**\n      * @return the start-indent trait\n      */\n     public int getStartIndent() {\n         Integer startIndent = (Integer)getTrait(Trait.START_INDENT);\n         return (startIndent != null ? startIndent.intValue() : 0);\n     }\n-    \n+\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Block.java",
                "sha": "21fa7c49d1749ccdf0a0b5d7d1b4160a25910d48",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/BlockViewport.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/BlockViewport.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/BlockViewport.java",
                "patch": "@@ -34,6 +34,15 @@\n      * Create a new block viewport area.\n      */\n     public BlockViewport() {\n+        this(false);\n+    }\n+\n+    /**\n+     * Create a new block viewport area.\n+     * @param allowBPDUpdate true allows the BPD to be updated when children are added\n+     */\n+    public BlockViewport(boolean allowBPDUpdate) {\n+        this.allowBPDUpdate = allowBPDUpdate;\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/BlockViewport.java",
                "sha": "167e7c5b3b570105fe953b700f3c9aa04424576f",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/CTM.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/CTM.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/CTM.java",
                "patch": "@@ -20,6 +20,7 @@\n package org.apache.fop.area;\n \n import java.awt.Rectangle;\n+import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n import java.io.Serializable;\n \n@@ -100,6 +101,22 @@ protected CTM(CTM ctm) {\n         this.f = ctm.f;\n     }\n \n+    /**\n+     * Initialize a CTM with the values of an AffineTransform.\n+     *\n+     * @param at the transformation matrix\n+     */\n+    public CTM(AffineTransform at) {\n+        double[] matrix = new double[6];\n+        at.getMatrix(matrix);\n+        this.a = matrix[0];\n+        this.b = matrix[1];\n+        this.c = matrix[2];\n+        this.d = matrix[3];\n+        this.e = matrix[4];\n+        this.f = matrix[5];\n+    }\n+\n     /**\n      * Return a CTM which will transform coordinates for a particular writing-mode\n      * into normalized first quandrant coordinates.\n@@ -245,6 +262,14 @@ public String toString() {\n         return new double[]{a, b, c, d, e, f};\n     }\n \n+    /**\n+     * Returns this CTM as an AffineTransform object.\n+     * @return the AffineTransform representation\n+     */\n+    public AffineTransform toAffineTransform() {\n+        return new AffineTransform(toArray());\n+    }\n+    \n     /**\n      * Construct a coordinate transformation matrix (CTM).\n      * @param absRefOrient absolute reference orientation",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/CTM.java",
                "sha": "c9fb52311daf641b54da7a26a2b3c2ed9da9ac3b",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/CachedRenderPagesModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 39,
                "filename": "src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "patch": "@@ -19,24 +19,27 @@\n  \n package org.apache.fop.area;\n \n-import org.apache.commons.io.IOUtils;\n-import org.apache.fop.apps.FOPException;\n-import org.apache.fop.apps.FOUserAgent;\n-import org.apache.fop.fonts.FontInfo;\n-import org.xml.sax.SAXException;\n-\n-import java.util.Map;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n import java.io.File;\n-import java.io.FileOutputStream;\n import java.io.FileInputStream;\n-import java.io.ObjectOutputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.io.OutputStream;\n-import java.io.BufferedOutputStream;\n-import java.io.BufferedInputStream;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.apps.FOPException;\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.ResourceEventProducer;\n+import org.apache.fop.fonts.FontInfo;\n \n /**\n  * A simple cached render pages model.\n@@ -69,46 +72,39 @@ public CachedRenderPagesModel (FOUserAgent userAgent, String outputFormat,\n      */\n     protected boolean checkPreparedPages(PageViewport newpage, boolean renderUnresolved) {\n         for (Iterator iter = prepared.iterator(); iter.hasNext();) {\n-            PageViewport p = (PageViewport)iter.next();\n-            if (p.isResolved() || renderUnresolved) {\n-                if (p != newpage) {\n+            PageViewport pageViewport = (PageViewport)iter.next();\n+            if (pageViewport.isResolved() || renderUnresolved) {\n+                if (pageViewport != newpage) {\n                     try {\n                         // load page from cache\n-                        String name = (String)pageMap.get(p);\n+                        String name = (String)pageMap.get(pageViewport);\n                         File tempFile = new File(baseDir, name);\n                         log.debug(\"Loading page from: \" + tempFile);\n                         ObjectInputStream in = new ObjectInputStream(\n                                              new BufferedInputStream(\n                                                new FileInputStream(tempFile)));\n                         try {\n-                            p.loadPage(in);\n+                            pageViewport.loadPage(in);\n                         } finally {\n                             IOUtils.closeQuietly(in);\n                         }\n                         if (!tempFile.delete()) {\n-                            log.warn(\"Temporary file could not be deleted: \" + tempFile);\n+                            ResourceEventProducer eventProducer\n+                                = ResourceEventProducer.Provider.get(\n+                                        renderer.getUserAgent().getEventBroadcaster());\n+                            eventProducer.cannotDeleteTempFile(this, tempFile);\n                         }\n-                        pageMap.remove(p);\n+                        pageMap.remove(pageViewport);\n                     } catch (Exception e) {\n-                        log.error(e);\n+                        AreaEventProducer eventProducer\n+                            = AreaEventProducer.Provider.get(\n+                                renderer.getUserAgent().getEventBroadcaster());\n+                        eventProducer.pageLoadError(this, pageViewport.getPageNumberString(), e);\n                     }\n                 }\n \n-                try {\n-                    renderer.renderPage(p);\n-                    if (!p.isResolved()) {\n-                        String[] idrefs = p.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + p.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(e);\n-                }\n-                p.clear();\n+                renderPage(pageViewport);\n+                pageViewport.clear();\n                 iter.remove();\n             } else {\n                 if (!renderer.supportsOutOfOrder()) {\n@@ -147,8 +143,11 @@ protected void savePage(PageViewport page) {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Page saved to temporary file: \" + tempFile);\n             }\n-        } catch (Exception e) {\n-            log.error(e);\n+        } catch (IOException ioe) {\n+            AreaEventProducer eventProducer\n+                = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageSaveError(this, page.getPageNumberString(), ioe);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/CachedRenderPagesModel.java",
                "sha": "b34a7e8d15dd499567bf93d6049f7c5bebce9cb2",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/DestinationData.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/DestinationData.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 6,
                "filename": "src/java/org/apache/fop/area/DestinationData.java",
                "patch": "@@ -22,7 +22,6 @@\n import java.util.List;\n \n import org.apache.fop.fo.extensions.destination.Destination;\n-import org.apache.fop.area.PageViewport;\n /**\n  * An instance of this class is named destination from fox:destination\n  */\n@@ -46,10 +45,18 @@\n      * @param destination the fo:bookmark object\n      */\n     public DestinationData(Destination destination) {\n-        idRef = destination.getInternalDestination();\n-        idRefs = new String[] {idRef};\n+        this(destination.getInternalDestination());\n     }\n \n+    /**\n+     * Create a new named destination.\n+     * @param idRef the id reference of the destination\n+     */\n+    public DestinationData(String idRef) {\n+        this.idRef = idRef;\n+        this.idRefs = new String[] {idRef};\n+    }\n+    \n     /**\n      * Get the idref for this destination\n      *\n@@ -99,9 +106,7 @@ public void resolveIDRef(String id, List pages) {\n         // TODO get rect area of id on page\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n+    /** {@inheritDoc} */\n     public String getName() {\n         return \"Destination\";\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/DestinationData.java",
                "sha": "2cff02ef49995ce706dc51d36328716dc4ddb7ca",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/IDTracker.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/IDTracker.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 2,
                "filename": "src/java/org/apache/fop/area/IDTracker.java",
                "patch": "@@ -78,7 +78,11 @@ public void associateIDWithPageViewport(String id, PageViewport pv) {\n                 tryIDResolution(id, pv, pvList);\n             }\n         } else {\n-            pvList.add(pv);\n+            /* TODO: The check is a quick-fix to avoid a waste \n+             * when adding inline-ids to the page */\n+            if (!pvList.contains(pv)) {\n+                pvList.add(pv);\n+            }\n         }\n     }\n \n@@ -140,7 +144,7 @@ public boolean alreadyResolvedID(String id) {\n      * \n      * @param id ID to resolve\n      * @param pv page viewport whose ID refs to resolve\n-     * @param List of PageViewports\n+     * @param pvList of PageViewports\n      */\n     private void tryIDResolution(String id, PageViewport pv, List pvList) {\n         Set todo = (Set) unresolvedIDRefs.get(id);",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/IDTracker.java",
                "sha": "e8b53b20c5e0ecc85579151e296c9d17c7a0f79a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/NormalFlow.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/NormalFlow.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/area/NormalFlow.java",
                "patch": "@@ -37,7 +37,9 @@ public NormalFlow(int ipd) {\n     /** {@inheritDoc} */\n     public void addBlock(Block block) {\n         super.addBlock(block);\n-        bpd += block.getAllocBPD();\n+        if (block.isStacked()) {\n+            bpd += block.getAllocBPD();\n+        }\n     }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/NormalFlow.java",
                "sha": "c9fc8380ac04d623aea9a87753177459819282a2",
                "status": "modified"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/PageSequence.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/PageSequence.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/area/PageSequence.java",
                "patch": "@@ -28,13 +28,15 @@\n \n     private List pages = new java.util.ArrayList();\n     private LineArea title;\n+    private String language;\n+    private String country;\n     \n     /**\n      * Main constructor\n      * @param title the title for the page-sequence, may be null\n      */\n     public PageSequence(LineArea title) {\n-        this.title = title;\n+        setTitle(title);\n     }\n     \n     /**\n@@ -44,6 +46,14 @@ public LineArea getTitle() {\n         return this.title;\n     }\n     \n+    /**\n+     * Sets the page sequence's title.\n+     * @param title the title\n+     */\n+    public void setTitle(LineArea title) {\n+        this.title = title;\n+    }\n+    \n     /**\n      * Adds a new page to the page sequence\n      * @param page the page to be added\n@@ -76,4 +86,45 @@ public PageViewport getPage(int idx) {\n     public boolean isFirstPage(PageViewport page) {\n         return page.equals(getPage(0));\n     }\n+\n+    /**\n+     * Returns the language of the page-sequence.\n+     * @return the language (the value of the language property, \"none\" is mapped to null)\n+     */\n+    public String getLanguage() {\n+        return this.language;\n+    }\n+\n+    /**\n+     * Sets the language that applies to this page-sequence.\n+     * @param language the language to set (\"none\" is mapped to null)\n+     */\n+    public void setLanguage(String language) {\n+        if (\"none\".equals(language)) {\n+            this.language = null;\n+        } else {\n+            this.language = language;\n+        }\n+    }\n+    \n+    /**\n+     * Returns the country of the page-sequence.\n+     * @return the country (the value of the country property, \"none\" is mapped to null)\n+     */\n+    public String getCountry() {\n+        return this.country;\n+    }\n+\n+    /**\n+     * Sets the country that applies to this page-sequence.\n+     * @param country the country to set (\"none\" is mapped to null)\n+     */\n+    public void setCountry(String country) {\n+        if (\"none\".equals(country)) {\n+            this.country = null;\n+        } else {\n+            this.country = country;\n+        }\n+    }\n+    \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/PageSequence.java",
                "sha": "3b65f7701516a25b39cd76def4cafd83083c1a83",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/PageViewport.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/PageViewport.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/area/PageViewport.java",
                "patch": "@@ -21,14 +21,15 @@\n \n import java.awt.Rectangle;\n import java.awt.geom.Rectangle2D;\n-import java.io.ObjectOutputStream;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.logging.Log;\n@@ -123,6 +124,7 @@ public PageViewport(PageViewport original) {\n         if (original.extensionAttachments != null) {\n             this.extensionAttachments = new java.util.ArrayList(original.extensionAttachments);\n         }\n+        this.pageIndex = original.pageIndex;\n         this.pageNumber = original.pageNumber;\n         this.pageNumberString = original.pageNumberString;\n         this.page = (Page)original.page.clone();\n@@ -516,9 +518,9 @@ public void dumpMarkers() {\n      * The map of unresolved references are set on the page so that\n      * the resolvers can be properly serialized and reloaded.\n      * @param out the object output stream to write the contents\n-     * @throws Exception if there is a problem saving the page\n+     * @throws IOException in case of an I/O error while serializing the page\n      */\n-    public void savePage(ObjectOutputStream out) throws Exception {\n+    public void savePage(ObjectOutputStream out) throws IOException {\n         // set the unresolved references so they are serialized\n         page.setUnresolvedReferences(unresolvedIDRefs);\n         out.writeObject(page);\n@@ -531,9 +533,10 @@ public void savePage(ObjectOutputStream out) throws Exception {\n      * if there are any unresolved references that were resolved\n      * while saved they will be resolved on the page contents.\n      * @param in the object input stream to read the page from\n-     * @throws Exception if there is an error loading the page\n+     * @throws ClassNotFoundException if a class was not found while loading the page\n+     * @throws IOException if an I/O error occurred while loading the page\n      */\n-    public void loadPage(ObjectInputStream in) throws Exception {\n+    public void loadPage(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         page = (Page) in.readObject();\n         unresolvedIDRefs = page.getUnresolvedReferences();\n         if (unresolvedIDRefs != null && pendingResolved != null) {",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/PageViewport.java",
                "sha": "745160d44938d3bf89e93b276d211c33fd03dac5",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/RenderPagesModel.java",
                "changes": 71,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/RenderPagesModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 30,
                "filename": "src/java/org/apache/fop/area/RenderPagesModel.java",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.fonts.FontInfo;\n import org.apache.fop.render.Renderer;\n+import org.apache.fop.render.RendererEventProducer;\n \n /**\n  * This uses the AreaTreeModel to store the pages\n@@ -81,16 +82,11 @@ public RenderPagesModel (FOUserAgent userAgent, String outputFormat,\n         }\n     }\n \n-    /**\n-     * Start a new page sequence.\n-     * This tells the renderer that a new page sequence has\n-     * started with the given title.\n-     * @param title the title of the new page sequence\n-     */\n-    public void startPageSequence(LineArea title) {\n-        super.startPageSequence(title);\n+    /** {@inheritDoc} */\n+    public void startPageSequence(PageSequence pageSequence) {\n+        super.startPageSequence(pageSequence);\n         if (renderer.supportsOutOfOrder()) {\n-            renderer.startPageSequence(title);\n+            renderer.startPageSequence(getCurrentPageSequence());\n         }\n     }\n \n@@ -112,16 +108,20 @@ public void addPage(PageViewport page) {\n         boolean ready = renderer.supportsOutOfOrder() && page.isResolved();\n         if (ready) {\n             if (!renderer.supportsOutOfOrder() && page.getPageSequence().isFirstPage(page)) {\n-                renderer.startPageSequence(this.currentPageSequence.getTitle());\n+                renderer.startPageSequence(getCurrentPageSequence());\n             }\n             try {\n                 renderer.renderPage(page);\n             } catch (RuntimeException re) {\n                 String err = \"Error while rendering page \" + page.getPageNumberString(); \n                 log.error(err, re);\n                 throw re;\n-            } catch (Exception e) {\n-                //TODO use error handler to handle this FOP or IO Exception or propagate exception\n+            } catch (IOException ioe) {\n+                RendererEventProducer eventProducer = RendererEventProducer.Provider.get(\n+                        renderer.getUserAgent().getEventBroadcaster());\n+                eventProducer.ioError(this, ioe);\n+            } catch (FOPException e) {\n+                //TODO use error handler to handle this FOPException or propagate exception\n                 String err = \"Error while rendering page \" + page.getPageNumberString(); \n                 log.error(err, e);\n                 throw new IllegalStateException(\"Fatal error occurred. Cannot continue. \" \n@@ -159,25 +159,9 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n             if (pageViewport.isResolved() || renderUnresolved) {\n                 if (!renderer.supportsOutOfOrder()\n                         && pageViewport.getPageSequence().isFirstPage(pageViewport)) {\n-                    renderer.startPageSequence(this.currentPageSequence.getTitle());\n-                }\n-                try {\n-                    renderer.renderPage(pageViewport);\n-                    if (!pageViewport.isResolved()) {\n-                        String[] idrefs = pageViewport.getIDRefs();\n-                        for (int count = 0; count < idrefs.length; count++) {\n-                            log.warn(\"Page \" + pageViewport.getPageNumberString()\n-                                + \": Unresolved id reference \\\"\" + idrefs[count] \n-                                + \"\\\" found.\");\n-                        }\n-                    }\n-                } catch (Exception e) {\n-                    // use error handler to handle this FOP or IO Exception\n-                    log.error(e);\n-                    if (e instanceof RuntimeException) {\n-                        throw (RuntimeException)e;\n-                    }\n+                    renderer.startPageSequence(getCurrentPageSequence());\n                 }\n+                renderPage(pageViewport);\n                 pageViewport.clear();\n                 iter.remove();\n             } else {\n@@ -190,6 +174,33 @@ protected boolean checkPreparedPages(PageViewport newPageViewport, boolean\n         return renderer.supportsOutOfOrder() || prepared.isEmpty();\n     }\n \n+    /**\n+     * Renders the given page and notified about unresolved IDs if any.\n+     * @param pageViewport the page to be rendered.\n+     */\n+    protected void renderPage(PageViewport pageViewport) {\n+        try {\n+            renderer.renderPage(pageViewport);\n+            if (!pageViewport.isResolved()) {\n+                String[] idrefs = pageViewport.getIDRefs();\n+                for (int count = 0; count < idrefs.length; count++) {\n+                    AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                            renderer.getUserAgent().getEventBroadcaster());\n+                    eventProducer.unresolvedIDReferenceOnPage(this,\n+                            pageViewport.getPageNumberString(), idrefs[count]);\n+                }\n+            }\n+        } catch (Exception e) {\n+            AreaEventProducer eventProducer = AreaEventProducer.Provider.get(\n+                    renderer.getUserAgent().getEventBroadcaster());\n+            eventProducer.pageRenderingError(this,\n+                    pageViewport.getPageNumberString(), e);\n+            if (e instanceof RuntimeException) {\n+                throw (RuntimeException)e;\n+            }\n+        }\n+    }\n+\n     /**\n      * Prepare a page.\n      * An unresolved page can be prepared if the renderer supports",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/RenderPagesModel.java",
                "sha": "64159cca75e1c054327b2100bc708598d0328006",
                "status": "modified"
            },
            {
                "additions": 85,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Trait.java",
                "changes": 209,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/Trait.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 124,
                "filename": "src/java/org/apache/fop/area/Trait.java",
                "patch": "@@ -22,9 +22,10 @@\n import java.awt.Color;\n import java.io.Serializable;\n \n+import org.apache.xmlgraphics.image.loader.ImageInfo;\n+\n import org.apache.fop.fo.Constants;\n import org.apache.fop.fonts.FontTriplet;\n-import org.apache.fop.image.FopImage;\n import org.apache.fop.traits.BorderProps;\n import org.apache.fop.util.ColorUtil;\n \n@@ -193,7 +194,7 @@\n     public static final Integer OVERLINE_COLOR = new Integer(35);\n     /** Trait for color of linethrough decorations when rendering inline parent. */\n     public static final Integer LINETHROUGH_COLOR = new Integer(36);\n-    \n+\n     /** Maximum value used by trait keys */\n     public static final int MAX_TRAIT_KEY = 36;\n     \n@@ -225,7 +226,7 @@ private static void put(Integer key, TraitInfo info) {\n         // Create a hashmap mapping trait code to name for external representation\n         //put(ID_LINK, new TraitInfo(\"id-link\", String.class));\n         put(INTERNAL_LINK, new TraitInfo(\"internal-link\", InternalLink.class));\n-        put(EXTERNAL_LINK, new TraitInfo(\"external-link\", String.class));\n+        put(EXTERNAL_LINK, new TraitInfo(\"external-link\", ExternalLink.class));\n         put(FONT,         new TraitInfo(\"font\", FontTriplet.class));\n         put(FONT_SIZE,    new TraitInfo(\"font-size\", Integer.class));\n         put(COLOR, new TraitInfo(\"color\", Color.class));\n@@ -276,7 +277,7 @@ private static void put(Integer key, TraitInfo info) {\n                 new TraitInfo(\"is-reference-area\", Boolean.class));\n         put(IS_VIEWPORT_AREA,\n                 new TraitInfo(\"is-viewport-area\", Boolean.class));\n-        \n+\n     }\n \n     /**\n@@ -289,25 +290,6 @@ public static String getTraitName(Object traitCode) {\n         return TRAIT_INFO[((Integer)traitCode).intValue()].getName();\n     }\n \n-    /**\n-     * Get the trait code for a trait name.\n-     *\n-     * @param sTraitName the name of the trait to find\n-     * @return the trait code object\n-     */\n-    /*\n-    public static Object getTraitCode(String sTraitName) {\n-        Iterator iter = TRAIT_INFO.entrySet().iterator();\n-        while (iter.hasNext()) {\n-            Map.Entry entry = (Map.Entry) iter.next();\n-            TraitInfo ti = (TraitInfo) entry.getValue();\n-            if (ti != null && ti.getName().equals(sTraitName)) {\n-                return entry.getKey();\n-            }\n-        }\n-        return null;\n-    }*/\n-\n     /**\n      * Get the data storage class for the trait.\n      *\n@@ -318,99 +300,6 @@ public static Class getTraitClass(Object traitCode) {\n         return TRAIT_INFO[((Integer)traitCode).intValue()].getClazz();\n     }\n \n-    /**\n-     * The type of trait for an area.\n-     */\n-    private Object propType;\n-\n-    /**\n-     * The data value of the trait.\n-     */\n-    private Object data;\n-\n-    /**\n-     * Create a new empty trait.\n-     */\n-    public Trait() {\n-        this.propType = null;\n-        this.data = null;\n-    }\n-\n-    /**\n-     * Create a trait with the value and type.\n-     *\n-     * @param propType the type of trait\n-     * @param data the data value\n-     */\n-    public Trait(Object propType, Object data) {\n-        this.propType = propType;\n-        this.data = data;\n-    }\n-\n-    /**\n-     * Returns the trait data value.\n-     * @return the trait data value\n-     */\n-    public Object getData() {\n-        return this.data;\n-    }\n-\n-    /**\n-     * Returns the property type.\n-     * @return the property type\n-     */\n-    public Object getPropType() {\n-        return this.propType;\n-    }\n-\n-    /**\n-     * Return the string for debugging.\n-     * {@inheritDoc}\n-     */\n-    public String toString() {\n-        return data.toString();\n-    }\n-\n-    /**\n-     * Make a trait value.\n-     *\n-     * @param oCode trait code\n-     * @param sTraitValue trait value as String\n-     * @return the trait value as object\n-     */\n-    /*\n-    public static Object makeTraitValue(Object oCode, String sTraitValue) {\n-        // Get the code from the name\n-        // See what type of object it is\n-        // Convert string value to an object of that type\n-        Class tclass = getTraitClass(oCode);\n-        if (tclass == null) {\n-            return null;\n-        }\n-        if (tclass.equals(String.class)) {\n-            return sTraitValue;\n-        }\n-        if (tclass.equals(Integer.class)) {\n-            return new Integer(sTraitValue);\n-        }\n-        // See if the class has a constructor from string or can read from a string\n-        try {\n-            Object o = tclass.newInstance();\n-            //return o.fromString(sTraitValue);\n-        } catch (IllegalAccessException e1) {\n-            log.error(\"Can't create instance of \"\n-                               + tclass.getName());\n-            return null;\n-        } catch (InstantiationException e2) {\n-            log.error(\"Can't create instance of \"\n-                               + tclass.getName());\n-            return null;\n-        }\n-\n-\n-        return null;\n-    }*/\n-\n     /**\n      * Class for internal link traits.\n      * Stores PageViewport key and producer ID\n@@ -546,6 +435,78 @@ public String toString() {\n         }\n     }\n \n+    /**\n+     * External Link trait structure\n+     */\n+    public static class ExternalLink implements Serializable {\n+\n+        private String destination;\n+        private boolean newWindow;\n+\n+        /**\n+         * Constructs an ExternalLink object with the given destination\n+         *\n+         * @param destination   target of the link\n+         * @param newWindow     true if the target should be opened in a new window\n+         */\n+        public ExternalLink(String destination, boolean newWindow) {\n+            this.destination = destination;\n+            this.newWindow = newWindow;\n+        }\n+\n+        /**\n+         * Create an <code>ExternalLink</code> from a trait value/attribute value in the\n+         * area tree\n+         * @param traitValue    the value to use (should match the result of {@link #toString()}\n+         * @return an <code>ExternalLink</code> instance corresponding to the given value\n+         */\n+        protected static ExternalLink makeFromTraitValue(String traitValue) {\n+            String dest = null;\n+            boolean newWindow = false;\n+            String[] values = traitValue.split(\",\");\n+            for (int i = 0, c = values.length; i < c; i++) {\n+                String v = values[i];\n+                if (v.startsWith(\"dest=\")) {\n+                    dest = v.substring(5);\n+                } else if (v.startsWith(\"newWindow=\")) {\n+                    newWindow = Boolean.valueOf(v.substring(10)).booleanValue();\n+                } else {\n+                    throw new IllegalArgumentException(\n+                            \"Malformed trait value for Trait.ExternalLink: \" + traitValue);\n+                }\n+            }\n+            return new ExternalLink(dest, newWindow);\n+        }\n+\n+        /**\n+         * Get the target/destination of the link\n+         * @return  the destination of the link\n+         */\n+        public String getDestination() {\n+            return this.destination;\n+        }\n+\n+        /**\n+         * Check if the target has to be displayed in a new window\n+         * @return  <code>true</code> if the target has to be displayed in a new window\n+         */\n+        public boolean newWindow() {\n+            return this.newWindow;\n+        }\n+\n+        /**\n+         * Return a String representation of the object.\n+         * @return  a <code>String</code> of the form\n+         *          \"org.apache.fop.area.Trait.ExternalLink[dest=someURL,newWindow=false]\"\n+         */\n+        public String toString() {\n+            StringBuffer sb = new StringBuffer(64);\n+            sb.append(\"newWindow=\").append(newWindow);\n+            sb.append(\",dest=\").append(this.destination);\n+            return sb.toString();\n+        }\n+    }\n+\n     /**\n      * Background trait structure.\n      * Used for storing back trait information which are related.\n@@ -559,7 +520,7 @@ public String toString() {\n         private String url = null;\n         \n         /** The background image if any. */\n-        private FopImage fopimage = null;\n+        private ImageInfo imageInfo = null;\n \n         /** Background repeat enum for images. */\n         private int repeat;\n@@ -603,11 +564,11 @@ public String getURL() {\n         }\n \n         /**\n-         * Returns the FopImage representing the background image\n+         * Returns the ImageInfo object representing the background image\n          * @return the background image, null if n/a\n          */\n-        public FopImage getFopImage() {\n-            return fopimage;\n+        public ImageInfo getImageInfo() {\n+            return imageInfo;\n         }\n \n         /**\n@@ -659,11 +620,11 @@ public void setURL(String url) {\n         }\n \n         /**\n-         * Sets the FopImage to use as the background image.\n-         * @param fopimage The FopImage to use\n+         * Sets the ImageInfo of the image to use as the background image.\n+         * @param info The background image's info object\n          */\n-        public void setFopImage(FopImage fopimage) {\n-            this.fopimage = fopimage;\n+        public void setImageInfo(ImageInfo info) {\n+            this.imageInfo = info;\n         }\n \n         /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/Trait.java",
                "sha": "e7b39ad2b19b290c2ba98a6eac787fdff91918da",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/ForeignObject.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/inline/ForeignObject.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/area/inline/ForeignObject.java",
                "patch": "@@ -31,6 +31,8 @@\n  */\n public class ForeignObject extends Area {\n     \n+    private static final long serialVersionUID = -214947698798577885L;\n+    \n     private Document doc;\n     private String namespace;\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/ForeignObject.java",
                "sha": "953d969f694bfda051b406fecdec55dd80e1f1f6",
                "status": "modified"
            },
            {
                "additions": 59,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/SpaceArea.java",
                "changes": 118,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/inline/SpaceArea.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 59,
                "filename": "src/java/org/apache/fop/area/inline/SpaceArea.java",
                "patch": "@@ -1,59 +1,59 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n-package org.apache.fop.area.inline;\r\n-\r\n-/**\r\n- * A space\r\n- */\r\n-public class SpaceArea extends InlineArea {\r\n-    \r\n-    /**\r\n-     * The space for this space area\r\n-     */\r\n-    protected String space;\r\n-\r\n-    /**\r\n-     * Is this space adjustable?\r\n-     */\r\n-    protected boolean isAdjustable;\r\n-\r\n-    /**\r\n-     * Create a space area\r\n-     * @param s the space character\r\n-     * @param o the offset for the next area\r\n-     * @param a is this space adjustable?\r\n-     */\r\n-    public SpaceArea(char s, int o, boolean a) {\r\n-        space = new String() + s;\r\n-        offset = o;\r\n-        isAdjustable = a;\r\n-    }\r\n-    \r\n-    /**\r\n-     * @return Returns the space.\r\n-     */\r\n-    public String getSpace() {\r\n-        return new String(space);\r\n-    }\r\n-\r\n-    /** @return true if the space is adjustable (WRT word-space processing) */\r\n-    public boolean isAdjustable() {\r\n-        return this.isAdjustable;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+package org.apache.fop.area.inline;\n+\n+/**\n+ * A space\n+ */\n+public class SpaceArea extends InlineArea {\n+    \n+    /**\n+     * The space for this space area\n+     */\n+    protected String space;\n+\n+    /**\n+     * Is this space adjustable?\n+     */\n+    protected boolean isAdjustable;\n+\n+    /**\n+     * Create a space area\n+     * @param s the space character\n+     * @param o the offset for the next area\n+     * @param a is this space adjustable?\n+     */\n+    public SpaceArea(char s, int o, boolean a) {\n+        space = new String() + s;\n+        offset = o;\n+        isAdjustable = a;\n+    }\n+    \n+    /**\n+     * @return Returns the space.\n+     */\n+    public String getSpace() {\n+        return new String(space);\n+    }\n+\n+    /** @return true if the space is adjustable (WRT word-space processing) */\n+    public boolean isAdjustable() {\n+        return this.isAdjustable;\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/SpaceArea.java",
                "sha": "9481795a4f14b3a2ac94572159001078756bf05c",
                "status": "modified"
            },
            {
                "additions": 72,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/WordArea.java",
                "changes": 144,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/area/inline/WordArea.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 72,
                "filename": "src/java/org/apache/fop/area/inline/WordArea.java",
                "patch": "@@ -1,72 +1,72 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-/* $Id$ */\r\n-package org.apache.fop.area.inline;\r\n-\r\n-/**\r\n- * A string of characters without spaces\r\n- */\r\n-public class WordArea extends InlineArea {\r\n-\r\n-    /** The text for this word area */\r\n-    protected String word;\r\n-    \r\n-    /** The correction offset for the next area */\r\n-    protected int offset = 0;\r\n-    \r\n-    /** An array of width for adjusting the individual letters (optional) */\r\n-    protected int[] letterAdjust;\r\n-\r\n-    /**\r\n-     * Create a word area\r\n-     * @param w the word string\r\n-     * @param o the offset for the next area\r\n-     * @param la the letter adjust array (may be null)\r\n-     */\r\n-    public WordArea(String w, int o, int[] la) {\r\n-        word = w;\r\n-        offset = o;\r\n-        this.letterAdjust = la;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return Returns the word.\r\n-     */\r\n-    public String getWord() {\r\n-        return word;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return Returns the offset.\r\n-     */\r\n-    public int getOffset() {\r\n-        return offset;\r\n-    }\r\n-    /**\r\n-     * @param o The offset to set.\r\n-     */\r\n-    public void setOffset(int o) {\r\n-        offset = o;\r\n-    }\r\n-    \r\n-    /** @return the array of letter adjust widths */\r\n-    public int[] getLetterAdjustArray() {\r\n-        return this.letterAdjust;\r\n-    }\r\n-    \r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+package org.apache.fop.area.inline;\n+\n+/**\n+ * A string of characters without spaces\n+ */\n+public class WordArea extends InlineArea {\n+\n+    /** The text for this word area */\n+    protected String word;\n+    \n+    /** The correction offset for the next area */\n+    protected int offset = 0;\n+    \n+    /** An array of width for adjusting the individual letters (optional) */\n+    protected int[] letterAdjust;\n+\n+    /**\n+     * Create a word area\n+     * @param w the word string\n+     * @param o the offset for the next area\n+     * @param la the letter adjust array (may be null)\n+     */\n+    public WordArea(String w, int o, int[] la) {\n+        word = w;\n+        offset = o;\n+        this.letterAdjust = la;\n+    }\n+\n+    /**\n+     * @return Returns the word.\n+     */\n+    public String getWord() {\n+        return word;\n+    }\n+\n+    /**\n+     * @return Returns the offset.\n+     */\n+    public int getOffset() {\n+        return offset;\n+    }\n+    /**\n+     * @param o The offset to set.\n+     */\n+    public void setOffset(int o) {\n+        offset = o;\n+    }\n+    \n+    /** @return the array of letter adjust widths */\n+    public int[] getLetterAdjustArray() {\n+        return this.letterAdjust;\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/area/inline/WordArea.java",
                "sha": "1f5fa20376b8e5058557ef9c63813278974ec45c",
                "status": "modified"
            },
            {
                "additions": 91,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/CommandLineOptions.java",
                "changes": 109,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/CommandLineOptions.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 18,
                "filename": "src/java/org/apache/fop/cli/CommandLineOptions.java",
                "patch": "@@ -29,6 +29,11 @@\n \n import javax.swing.UIManager;\n \n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.Version;\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n@@ -38,19 +43,14 @@\n import org.apache.fop.pdf.PDFEncryptionManager;\n import org.apache.fop.pdf.PDFEncryptionParams;\n import org.apache.fop.pdf.PDFXMode;\n-import org.apache.fop.render.awt.AWTRenderer;\n import org.apache.fop.render.Renderer;\n+import org.apache.fop.render.awt.AWTRenderer;\n import org.apache.fop.render.pdf.PDFRenderer;\n+import org.apache.fop.render.print.PagesMode;\n+import org.apache.fop.render.print.PrintRenderer;\n import org.apache.fop.render.xml.XMLRenderer;\n import org.apache.fop.util.CommandLineLogger;\n \n-// commons logging\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-\n-// SAX\n-import org.xml.sax.SAXException;\n-\n /**\n  * Options parses the commandline arguments\n  */\n@@ -71,6 +71,8 @@\n     public static final int XSLT_INPUT = 2;\n     /** input: Area Tree XML file */\n     public static final int AREATREE_INPUT = 3;\n+    /** input: Image file */\n+    public static final int IMAGE_INPUT = 4;\n \n     /* show configuration information */\n     private Boolean showConfiguration = Boolean.FALSE;\n@@ -86,6 +88,8 @@\n     private File xmlfile = null;\n     /* area tree input file */\n     private File areatreefile = null;\n+    /* area tree input file */\n+    private File imagefile = null;\n     /* output file */\n     private File outfile = null;\n     /* input mode */\n@@ -131,8 +135,9 @@ public CommandLineOptions() {\n      * @throws FOPException for general errors\n      * @throws FileNotFoundException if an input file wasn't found\n      * @throws IOException if the the configuration file could not be loaded\n+     * @return true if the processing can continue, false to abort\n      */\n-    public void parse(String[] args)\n+    public boolean parse(String[] args)\n             throws FOPException, IOException {\n         boolean optionsParsed = true;\n \n@@ -153,6 +158,8 @@ public void parse(String[] args)\n                 }\n                 addXSLTParameter(\"fop-output-format\", getOutputFormat());\n                 addXSLTParameter(\"fop-version\", Version.getVersion());\n+            } else {\n+                return false;\n             }\n         } catch (FOPException e) {\n             printUsage();\n@@ -191,6 +198,7 @@ public void parse(String[] args)\n             //Make sure the prepared XMLRenderer is used\n             foUserAgent.setRendererOverride(xmlRenderer);\n         }\n+        return true;\n     }\n \n     /**\n@@ -249,6 +257,8 @@ private boolean parseOptions(String[] args) throws FOPException {\n                 i = i + parseXMLInputOption(args, i);\n             } else if (args[i].equals(\"-atin\")) {\n                 i = i + parseAreaTreeInputOption(args, i);\n+            } else if (args[i].equals(\"-imagein\")) {\n+                i = i + parseImageInputOption(args, i);\n             } else if (args[i].equals(\"-awt\")) {\n                 i = i + parseAWTOutputOption(args, i);\n             } else if (args[i].equals(\"-pdf\")) {\n@@ -264,14 +274,16 @@ private boolean parseOptions(String[] args) throws FOPException {\n             } else if (args[i].equals(\"-png\")) {\n                 i = i + parsePNGOutputOption(args, i);\n             } else if (args[i].equals(\"-print\")) {\n-                i = i + parsePrintOutputOption(args, i);\n                 // show print help\n                 if (i + 1 < args.length) {\n                     if (args[i + 1].equals(\"help\")) {\n                         printUsagePrintOutput();\n                         return false;\n                     }\n                 }\n+                i = i + parsePrintOutputOption(args, i);\n+            } else if (args[i].equals(\"-copies\")) {\n+                i = i + parseCopiesOption(args, i);\n             } else if (args[i].equals(\"-pcl\")) {\n                 i = i + parsePCLOutputOption(args, i);\n             } else if (args[i].equals(\"-ps\")) {\n@@ -298,7 +310,7 @@ private boolean parseOptions(String[] args) throws FOPException {\n                       String expression = args[++i];\n                       addXSLTParameter(name, expression);\n                   } else {\n-                    throw new FOPException(\"invalid param usage: use -param <name> <value>\");\n+                      throw new FOPException(\"invalid param usage: use -param <name> <value>\");\n                   }\n             } else if (args[i].equals(\"-o\")) {\n                 i = i + parsePDFOwnerPassword(args, i);\n@@ -457,7 +469,37 @@ private int parsePNGOutputOption(String[] args, int i) throws FOPException {\n \n     private int parsePrintOutputOption(String[] args, int i) throws FOPException {\n         setOutputMode(MimeConstants.MIME_FOP_PRINT);\n-        return 0;\n+        if ((i + 1 <= args.length)\n+                && (args[i + 1].charAt(0) != '-')) {\n+            String arg = args[i + 1];\n+            String[] parts = arg.split(\",\");\n+            for (int j = 0; j < parts.length; j++) {\n+                String s = parts[j];\n+                if (s.matches(\"\\\\d+\")) {\n+                    renderingOptions.put(PrintRenderer.START_PAGE, new Integer(s));\n+                } else if (s.matches(\"\\\\d+-\\\\d+\")) {\n+                    String[] startend = s.split(\"-\");\n+                    renderingOptions.put(PrintRenderer.START_PAGE, new Integer(startend[0]));\n+                    renderingOptions.put(PrintRenderer.END_PAGE, new Integer(startend[1]));\n+                } else {\n+                    PagesMode mode = PagesMode.byName(s);\n+                    renderingOptions.put(PrintRenderer.PAGES_MODE, mode);\n+                }\n+            }\n+            return 1;\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    private int parseCopiesOption(String[] args, int i) throws FOPException {\n+        if ((i + 1 == args.length)\n+                || (args[i + 1].charAt(0) == '-')) {\n+            throw new FOPException(\"you must specify the number of copies\");\n+        } else {\n+            renderingOptions.put(PrintRenderer.COPIES, new Integer(args[i + 1]));\n+            return 1;\n+        }\n     }\n \n     private int parsePCLOutputOption(String[] args, int i) throws FOPException {\n@@ -594,6 +636,17 @@ private int parseAreaTreeInputOption(String[] args, int i) throws FOPException {\n         }\n     }\n \n+    private int parseImageInputOption(String[] args, int i) throws FOPException {\n+        inputmode = IMAGE_INPUT;\n+        if ((i + 1 == args.length)\n+                || (args[i + 1].charAt(0) == '-')) {\n+            throw new FOPException(\"you must specify the image file for the '-imagein' option\");\n+        } else {\n+            imagefile = new File(args[i + 1]);\n+            return 1;\n+        }\n+    }\n+\n     private PDFEncryptionParams getPDFEncryptionParams() throws FOPException {\n         PDFEncryptionParams params = (PDFEncryptionParams)renderingOptions.get(\n                         PDFRenderer.ENCRYPTION_PARAMS); \n@@ -768,6 +821,20 @@ private void checkSettings() throws FOPException, FileNotFoundException {\n                                               + areatreefile.getAbsolutePath()\n                                               + \" not found \");\n             }\n+        } else if (inputmode == IMAGE_INPUT) {\n+            if (outputmode.equals(MimeConstants.MIME_XSL_FO)) {\n+                throw new FOPException(\n+                        \"FO output mode is only available if you use -xml and -xsl\");\n+            }\n+            if (xmlfile != null) {\n+                log.warn(\"image input mode, but XML file is set:\");\n+                log.error(\"XML file: \" + xmlfile.toString());\n+            }\n+            if (!imagefile.exists()) {\n+                throw new FileNotFoundException(\"Error: image file \"\n+                                              + imagefile.getAbsolutePath()\n+                                              + \" not found \");\n+            }\n         }\n     }    // end checkSettings\n \n@@ -814,6 +881,8 @@ private InputHandler createInputHandler() throws IllegalArgumentException {\n                 return new AreaTreeInputHandler(areatreefile);\n             case XSLT_INPUT:\n                 return new InputHandler(xmlfile, xsltfile, xsltParams);\n+            case IMAGE_INPUT:\n+                return new ImageInputHandler(imagefile, xsltfile, xsltParams);\n             default:\n                 throw new IllegalArgumentException(\"Error creating InputHandler object.\");\n         }\n@@ -920,6 +989,7 @@ public static void printUsage() {\n             + \"  -fo  infile       xsl:fo input file  \\n\"\n             + \"  -xml infile       xml input file, must be used together with -xsl \\n\"\n             + \"  -atin infile      area tree input file \\n\"\n+            + \"  -imagein infile   image input file \\n\"\n             + \"  -xsl stylesheet   xslt stylesheet \\n \\n\"\n             + \"  -param name value <value> to use for parameter <name> in xslt stylesheet\\n\"\n             + \"                    (repeat '-param name value' for each parameter)\\n \\n\"\n@@ -959,18 +1029,21 @@ public static void printUsage() {\n             + \"  Fop -xml foo.xml -xsl foo.xsl -foout foo.fo\\n\"\n             + \"  Fop foo.fo -mif foo.mif\\n\"\n             + \"  Fop foo.fo -rtf foo.rtf\\n\"\n-            + \"  Fop foo.fo -print or Fop -print foo.fo \\n\"\n-            + \"  Fop foo.fo -awt \\n\");\n+            + \"  Fop foo.fo -print\\n\"\n+            + \"  Fop foo.fo -awt\\n\");\n     }\n \n     /**\n      * shows the options for print output\n      */\n     private void printUsagePrintOutput() {\n-        System.err.println(\"USAGE: -print [-Dstart=i] [-Dend=i] [-Dcopies=i] [-Deven=true|false] \"\n-                           + \" org.apache.fop.apps.Fop (..) -print \\n\"\n-                           + \"Example:\\n\"\n-                           + \"java -Dstart=1 -Dend=2 org.apache.Fop.apps.Fop infile.fo -print \");\n+        System.err.println(\"USAGE: -print [from[-to][,even|odd]] [-copies numCopies]\\n\\n\"\n+           + \"Example:\\n\"\n+           + \"all pages:                        Fop infile.fo -print\\n\"\n+           + \"all pages with two copies:        Fop infile.fo -print -copies 2\\n\"\n+           + \"all pages starting with page 7:   Fop infile.fo -print 7\\n\"\n+           + \"pages 2 to 3:                     Fop infile.fo -print 2-3\\n\"\n+           + \"only even page between 10 and 20: Fop infile.fo -print 10-20,even\\n\");\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/CommandLineOptions.java",
                "sha": "4e5c8ae44cbdd389993c46816181e39d6c44b6c5",
                "status": "modified"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/ImageInputHandler.java",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/ImageInputHandler.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/cli/ImageInputHandler.java",
                "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.cli;\n+\n+import java.io.File;\n+import java.io.StringReader;\n+import java.util.Vector;\n+\n+import javax.xml.transform.Source;\n+import javax.xml.transform.stream.StreamSource;\n+\n+/**\n+ * InputHandler for the images (for example TIFF) as input.\n+ */\n+public class ImageInputHandler extends InputHandler {\n+\n+    /**\n+     * Main constructor.\n+     * @param imagefile the image file\n+     * @param xsltfile XSLT file (may be null in which case the default stylesheet is used)\n+     * @param params Vector of command-line parameters (name, value, \n+     *      name, value, ...) for XSL stylesheet, null if none\n+     */\n+    public ImageInputHandler(File imagefile, File xsltfile, Vector params) {\n+        super(imagefile, xsltfile, params);\n+    }\n+\n+    /** {@inheritDoc} */\n+    protected Source createMainSource() {\n+        return new StreamSource(new StringReader(\n+                \"<image>\" + this.sourcefile.toURI().toASCIIString() + \"</image>\"));\n+    }\n+    \n+    /** {@inheritDoc} */\n+    protected Source createXSLTSource() {\n+        Source src = super.createXSLTSource();\n+        if (src == null) {\n+            src = new StreamSource(getClass().getResource(\"image2fo.xsl\").toExternalForm());\n+        }\n+        return src;\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/ImageInputHandler.java",
                "sha": "fe3d5021f8006dbc9f5e459fcd9309c8837135fd",
                "status": "added"
            },
            {
                "additions": 56,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/InputHandler.java",
                "changes": 63,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/InputHandler.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 7,
                "filename": "src/java/org/apache/fop/cli/InputHandler.java",
                "patch": "@@ -21,22 +21,31 @@\n \n // Imported java.io classes\n import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n import java.io.OutputStream;\n import java.util.Vector;\n \n-// Imported TraX classes\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.parsers.SAXParserFactory;\n import javax.xml.transform.ErrorListener;\n import javax.xml.transform.Result;\n import javax.xml.transform.Source;\n import javax.xml.transform.Transformer;\n import javax.xml.transform.TransformerException;\n import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.sax.SAXSource;\n import javax.xml.transform.stream.StreamResult;\n import javax.xml.transform.stream.StreamSource;\n \n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.XMLReader;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+\n import org.apache.fop.apps.FOPException;\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.apps.Fop;\n@@ -50,7 +59,8 @@\n  */\n public class InputHandler implements ErrorListener, Renderable {\n      \n-    private File sourcefile = null;  // either FO or XML/XSLT usage\n+    /** original source file */\n+    protected File sourcefile = null;\n     private File stylesheet = null;  // for XML/XSLT usage\n     private Vector xsltParams = null; // for XML/XSLT usage\n \n@@ -131,6 +141,45 @@ public void transformTo(OutputStream out) throws FOPException {\n         transformTo(res);\n     }\n     \n+    /**\n+     * Creates a Source for the main input file. Processes XInclude if\n+     * available in the XML parser.\n+     * \n+     * @return the Source for the main input file\n+     */\n+    protected Source createMainSource() {\n+        Source result;\n+        try {\n+            InputSource is = new InputSource(new FileInputStream(\n+                    this.sourcefile));\n+            is.setSystemId(this.sourcefile.toURI().toASCIIString());\n+            SAXParserFactory spf = SAXParserFactory.newInstance();\n+            spf.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n+            spf.setFeature(\"http://apache.org/xml/features/xinclude\", true);\n+            XMLReader xr = spf.newSAXParser().getXMLReader();\n+            result = new SAXSource(xr, is);\n+        } catch (SAXException e) {\n+            result = new StreamSource(this.sourcefile);\n+        } catch (IOException e) {\n+            result = new StreamSource(this.sourcefile);\n+        } catch (ParserConfigurationException e) {\n+            result = new StreamSource(this.sourcefile);\n+        }\n+        return result;\n+    }\n+    \n+    /**\n+     * Creates a Source for the selected stylesheet.\n+     * @return the Source for the selected stylesheet or null if there's no stylesheet\n+     */\n+    protected Source createXSLTSource() {\n+        if (this.stylesheet != null) {\n+            return new StreamSource(this.stylesheet);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n     /**\n      * Transforms the input document to the input format expected by FOP using XSLT.\n      * @param result the Result object where the result of the XSL transformation is sent to\n@@ -142,11 +191,11 @@ protected void transformTo(Result result) throws FOPException {\n             TransformerFactory factory = TransformerFactory.newInstance();\n             Transformer transformer;\n             \n-            if (stylesheet == null) {   // FO Input\n+            Source xsltSource = createXSLTSource();\n+            if (xsltSource == null) {   // FO Input\n                 transformer = factory.newTransformer();\n             } else {    // XML/XSLT input\n-                transformer = factory.newTransformer(new StreamSource(\n-                    stylesheet));\n+                transformer = factory.newTransformer(xsltSource);\n             \n                 // Set the value of parameters, if any, defined for stylesheet\n                 if (xsltParams != null) { \n@@ -159,7 +208,7 @@ protected void transformTo(Result result) throws FOPException {\n             transformer.setErrorListener(this);\n \n             // Create a SAXSource from the input Source file\n-            Source src = new StreamSource(sourcefile);\n+            Source src = createMainSource();\n \n             // Start XSLT transformation and FOP processing\n             transformer.transform(src, result);\n@@ -175,7 +224,7 @@ protected void transformTo(Result result) throws FOPException {\n      * {@inheritDoc}\n      */\n     public void warning(TransformerException exc) {\n-        log.warn(exc.toString());\n+        log.warn(exc.getLocalizedMessage());\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/InputHandler.java",
                "sha": "7ad89bfab39daf5c03eb8022aa485e0f500f5110",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/Main.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/Main.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 1,
                "filename": "src/java/org/apache/fop/cli/Main.java",
                "patch": "@@ -28,6 +28,7 @@\n import java.util.List;\n \n import org.apache.commons.io.IOUtils;\n+\n import org.apache.fop.apps.FOUserAgent;\n import org.apache.fop.apps.MimeConstants;\n \n@@ -151,7 +152,9 @@ public static void startFOP(String[] args) {\n \n         try {\n             options = new CommandLineOptions();\n-            options.parse(args);\n+            if (!options.parse(args)) {\n+                System.exit(1);\n+            }\n             \n             foUserAgent = options.getFOUserAgent();\n             String outputFormat = options.getOutputFormat();",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/Main.java",
                "sha": "43da8d966d703c727cc7f6fe857e62be9f439194",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/image2fo.xsl",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/cli/image2fo.xsl?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/cli/image2fo.xsl",
                "patch": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<xsl:stylesheet\n+  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+  xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+  xmlns:fox=\"http://xmlgraphics.apache.org/fop/extensions\"\n+  version=\"1.0\">\n+\n+  <xsl:output method=\"xml\" indent=\"yes\"/>\n+  \n+  <xsl:template name=\"masters\">\n+    <fo:layout-master-set>\n+      <!-- not really used but mandatory -->\n+      <fo:simple-page-master master-name=\"dummy\" page-height=\"29.7cm\" page-width=\"21cm\">\n+        <fo:region-body/>\n+      </fo:simple-page-master>\n+    </fo:layout-master-set>\n+  </xsl:template>\n+  \n+  <xsl:template match=\"/image\">\n+    <fo:root>\n+      <xsl:call-template name=\"masters\"/>\n+      <fox:external-document>\n+        <xsl:attribute name=\"src\"><xsl:value-of select=\".\"/></xsl:attribute>\n+      </fox:external-document>\n+    </fo:root>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/cli/image2fo.xsl",
                "sha": "3a2610230a0c47204b7d68009d569d7b0e883a5f",
                "status": "added"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/datatypes/LengthBase.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/datatypes/LengthBase.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/datatypes/LengthBase.java",
                "patch": "@@ -130,5 +130,17 @@ public int getBaseLength(PercentBaseContext context) throws PropertyException {\n         return baseLen;\n     }\n \n+    /** {@inheritDoc} */\n+    public String toString() {\n+        return super.toString()\n+          + \"[fo=\" + fobj + \",\" \n+          + \"baseType=\" + baseType + \",\"\n+          + \"baseLength=\" + baseLength + \"]\";\n+    }\n+    \n+    /**@return the base length as a {@link Length} */\n+    public Length getBaseLength() {\n+        return baseLength;\n+    }\n }\n ",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/datatypes/LengthBase.java",
                "sha": "8a321f2c6380ddb8151b995b175f3deaeea81e87",
                "status": "modified"
            },
            {
                "additions": 85,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/datatypes/URISpecification.java",
                "changes": 85,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/datatypes/URISpecification.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/datatypes/URISpecification.java",
                "patch": "@@ -19,6 +19,9 @@\n \n package org.apache.fop.datatypes;\n \n+import java.io.UnsupportedEncodingException;\n+\n+\n /**\n  * This class contains method to deal with the <uri-specification> datatype from XSL-FO.\n  */\n@@ -52,5 +55,87 @@ public static String getURL(String href) {\n         return href;\n     }\n \n+    private static final String PUNCT = \",;:$&+=\";\n+    private static final String RESERVED = PUNCT + \"?/[]@\";\n+    \n+    private static boolean isValidURIChar(char ch) {\n+        return true;\n+    }\n+    \n+    private static boolean isDigit(char ch) {\n+        return (ch >= '0' && ch <= '9');\n+    }\n+    \n+    private static boolean isAlpha(char ch) {\n+        return (ch >= 'A' && ch <= 'Z') || (ch >= 'A' && ch <= 'z');\n+    }\n+    \n+    private static boolean isHexDigit(char ch) {\n+        return (ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'F') || (ch >= 'a' && ch <= 'f');\n+    }\n+\n+    private static boolean isReserved(char ch) {\n+        if (RESERVED.indexOf(ch) >= 0) {\n+            return true;\n+        } else if ('#' == ch) {\n+            //# is not a reserved character but is used for the fragment\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+    private static boolean isUnreserved(char ch) {\n+        if (isDigit(ch) || isAlpha(ch)) {\n+            return true;\n+        } else if (\"_-!.~\\'()*\".indexOf(ch) >= 0) {\n+            //remaining unreserved characters\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+    private final static char[] HEX_DIGITS = {\n+        '0', '1', '2', '3', '4', '5', '6', '7',\n+        '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n+    };\n+\n+    private static void appendEscape(StringBuffer sb, byte b) {\n+        sb.append('%').append(HEX_DIGITS[(b >> 4) & 0x0f]).append(HEX_DIGITS[(b >> 0) & 0x0f]);\n+    }\n+\n+    /**\n+     * Escapes any illegal URI character in a given URI, for example, it escapes a space to \"%20\".\n+     * Note: This method does not \"parse\" the URI and therefore does not treat the individual\n+     * components (user-info, path, query etc.) individually.\n+     * @param uri the URI to inspect\n+     * @return the escaped URI\n+     */\n+    public static String escapeURI(String uri) {\n+        uri = getURL(uri);\n+        StringBuffer sb = new StringBuffer();\n+        for (int i = 0, c = uri.length(); i < c; i++) {\n+            char ch = uri.charAt(i);\n+            if (ch == '%') {\n+                if (i < c - 3 && isHexDigit(uri.charAt(i + 1)) && isHexDigit(uri.charAt(i + 2))) {\n+                    sb.append(ch);\n+                    continue;\n+                }\n+            }\n+            if (isReserved(ch) || isUnreserved(ch)) {\n+                //Note: this may not be accurate for some very special cases.\n+                sb.append(ch);\n+            } else {\n+                try {\n+                    byte[] utf8 = Character.toString(ch).getBytes(\"UTF-8\");\n+                    for (int j = 0, cj = utf8.length; j < cj; j++) {\n+                        appendEscape(sb, utf8[j]);\n+                    }\n+                } catch (UnsupportedEncodingException e) {\n+                    throw new Error(\"Incompatible JVM. UTF-8 not supported.\");\n+                }\n+            }\n+        }\n+        return sb.toString();\n+    }\n     \n }",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/datatypes/URISpecification.java",
                "sha": "99d445b4d67d57296034c68925859eb8fb0562de",
                "status": "modified"
            },
            {
                "additions": 69,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/CompositeEventListener.java",
                "changes": 69,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/CompositeEventListener.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/CompositeEventListener.java",
                "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.List;\n+\n+/**\n+ * EventListener implementation forwards events to possibly multiple other EventListeners.\n+ */\n+public class CompositeEventListener implements EventListener {\n+\n+    private List listeners = new java.util.ArrayList();\n+    \n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    public synchronized void addEventListener(EventListener listener) {\n+        this.listeners.add(listener);\n+    }\n+\n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    public synchronized void removeEventListener(EventListener listener) {\n+        this.listeners.remove(listener);\n+    }\n+\n+    private synchronized int getListenerCount() {\n+        return this.listeners.size();\n+    }\n+    \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    public boolean hasEventListeners() {\n+        return (getListenerCount() > 0);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        for (int i = 0, c = getListenerCount(); i < c; i++) {\n+            EventListener listener = (EventListener)this.listeners.get(i);\n+            listener.processEvent(event);\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/CompositeEventListener.java",
                "sha": "a65728b71501020db28540c078234b5f4d9837ba",
                "status": "added"
            },
            {
                "additions": 160,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "changes": 160,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/DefaultEventBroadcaster.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "patch": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+import org.apache.fop.events.model.EventMethodModel;\n+import org.apache.fop.events.model.EventModel;\n+import org.apache.fop.events.model.EventModelFactory;\n+import org.apache.fop.events.model.EventProducerModel;\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * Default implementation of the EventBroadcaster interface. It holds a list of event listeners\n+ * and can provide {@link EventProducer} instances for type-safe event production.\n+ */\n+public class DefaultEventBroadcaster implements EventBroadcaster {\n+\n+    /** Holds all registered event listeners */\n+    protected CompositeEventListener listeners = new CompositeEventListener();\n+    \n+    /** {@inheritDoc} */\n+    public void addEventListener(EventListener listener) {\n+        this.listeners.addEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void removeEventListener(EventListener listener) {\n+        this.listeners.removeEventListener(listener);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public boolean hasEventListeners() {\n+        return this.listeners.hasEventListeners();\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void broadcastEvent(Event event) {\n+        this.listeners.processEvent(event);\n+    }\n+\n+    private static List/*<EventModel>*/ eventModels = new java.util.ArrayList();\n+    private Map proxies = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter = Service.providers(EventModelFactory.class, true);\n+        while (iter.hasNext()) {\n+            EventModelFactory factory = (EventModelFactory)iter.next();\n+            addEventModel(factory.createEventModel());\n+        }\n+    }\n+\n+    /**\n+     * Adds a new {@link EventModel} to the list of registered event models.\n+     * @param eventModel the event model instance\n+     */\n+    public static void addEventModel(EventModel eventModel) {\n+        eventModels.add(eventModel);\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public EventProducer getEventProducerFor(Class clazz) {\n+        if (!EventProducer.class.isAssignableFrom(clazz)) {\n+            throw new IllegalArgumentException(\n+                    \"Class must be an implementation of the EventProducer interface: \"\n+                    + clazz.getName());\n+        }\n+        EventProducer producer;\n+        producer = (EventProducer)this.proxies.get(clazz);\n+        if (producer == null) {\n+            producer = createProxyFor(clazz);\n+            this.proxies.put(clazz, producer);\n+        }\n+        return producer;\n+    }\n+    \n+    private EventProducerModel getEventProducerModel(Class clazz) {\n+        for (int i = 0, c = eventModels.size(); i < c; i++) {\n+            EventModel eventModel = (EventModel)eventModels.get(i);\n+            EventProducerModel producerModel = eventModel.getProducer(clazz);\n+            if (producerModel != null) {\n+                return producerModel;\n+            }\n+        }\n+        return null;\n+    }\n+    \n+    /**\n+     * Creates a dynamic proxy for the given EventProducer interface that will handle the\n+     * conversion of the method call into the broadcasting of an event instance.\n+     * @param clazz a descendant interface of EventProducer\n+     * @return the EventProducer instance\n+     */\n+    protected EventProducer createProxyFor(Class clazz) {\n+        final EventProducerModel producerModel = getEventProducerModel(clazz);\n+        if (producerModel == null) {\n+            throw new IllegalStateException(\"Event model doesn't contain the definition for \"\n+                    + clazz.getName());\n+        }\n+        return (EventProducer)Proxy.newProxyInstance(clazz.getClassLoader(),\n+                new Class[] {clazz},\n+                new InvocationHandler() {\n+                    public Object invoke(Object proxy, Method method, Object[] args)\n+                            throws Throwable {\n+                        String methodName = method.getName();\n+                        EventMethodModel methodModel = producerModel.getMethod(methodName);\n+                        String eventID = producerModel.getInterfaceName() + \".\" + methodName;\n+                        if (methodModel == null) {\n+                            throw new IllegalStateException(\n+                                    \"Event model isn't consistent\"\n+                                    + \" with the EventProducer interface. Please rebuild FOP!\"\n+                                    + \" Affected method: \"\n+                                    + eventID);\n+                        }\n+                        Map params = new java.util.HashMap();\n+                        int i = 1;\n+                        Iterator iter = methodModel.getParameters().iterator();\n+                        while (iter.hasNext()) {\n+                            EventMethodModel.Parameter param\n+                                = (EventMethodModel.Parameter)iter.next();\n+                            params.put(param.getName(), args[i]);\n+                            i++;\n+                        }\n+                        Event ev = new Event(args[0], eventID, methodModel.getSeverity(), params);\n+                        broadcastEvent(ev);\n+                        \n+                        if (ev.getSeverity() == EventSeverity.FATAL) {\n+                            EventExceptionManager.throwException(ev,\n+                                    methodModel.getExceptionClass());\n+                        }\n+                        return null;\n+                    }\n+                });\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/DefaultEventBroadcaster.java",
                "sha": "bb1752a720c281e765bc1c9e624323d970613a8f",
                "status": "added"
            },
            {
                "additions": 150,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/Event.java",
                "changes": 150,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/Event.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/Event.java",
                "patch": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Collections;\n+import java.util.EventObject;\n+import java.util.Map;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * This is the default event class used by this package. Each event has a unique event identifier\n+ * (a String), a severity indicator and a map of name/value pairs.\n+ */\n+public class Event extends EventObject {\n+\n+    private static final long serialVersionUID = -1310594422868258083L;\n+    \n+    private String eventID;\n+    private EventSeverity severity;\n+    private Map params;\n+    \n+    /**\n+     * Creates a new Event.\n+     * @param source the object that creates the event\n+     * @param eventID the unique identifier of the event\n+     * @param severity the severity level\n+     * @param params the event parameters (a map of name/value pairs)\n+     */\n+    public Event(Object source, String eventID, EventSeverity severity, Map params) {\n+        super(source);\n+        this.eventID = eventID;\n+        setSeverity(severity);\n+        this.params = params;\n+    }\n+    \n+    /**\n+     * Returns the event identifier.\n+     * @return the event identifier\n+     */\n+    public String getEventID() {\n+        return this.eventID;\n+    }\n+    \n+    /**\n+     * Returns the event group identifier.\n+     * @return the event group identifier (or null if there is no group identifier)\n+     */\n+    public String getEventGroupID() {\n+        int pos = this.eventID.lastIndexOf('.');\n+        if (pos > 0) {\n+            return this.eventID.substring(0, pos);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns the severity level.\n+     * @return the severity level\n+     */\n+    public EventSeverity getSeverity() {\n+        return this.severity;\n+    }\n+    \n+    /**\n+     * Sets the event's severity level. This method can be used to increase or decrease the\n+     * severity level in a listener.\n+     * @param severity the new event severity\n+     */\n+    public void setSeverity(EventSeverity severity) {\n+        this.severity = severity;\n+    }\n+\n+    /**\n+     * Returns a parameter.\n+     * @param key the key to the parameter\n+     * @return the parameter value or null if no value with this key is found\n+     */\n+    public Object getParam(String key) {\n+        if (this.params != null) {\n+            return this.params.get(key);\n+        } else {\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable {@link java.util.Map} with all event parameters.\n+     * @return the parameter map\n+     */\n+    public Map getParams() {\n+        return Collections.unmodifiableMap(this.params);\n+    }\n+    \n+    /**\n+     * Creates and returns a fluent builder object for building up the parameter map.\n+     * @return the parameter builder\n+     */\n+    public static ParamsBuilder paramsBuilder() {\n+        return new ParamsBuilder();\n+    }\n+    \n+    /**\n+     * This class is a fluent builder class for building up the parameter map.\n+     */\n+    public static class ParamsBuilder {\n+        private Map params;\n+        \n+        /**\n+         * Adds a new parameter (a name/value pair).\n+         * @param name the name of the parameter\n+         * @param value the value of the parameter\n+         * @return this instance\n+         */\n+        public ParamsBuilder param(String name, Object value) {\n+            if (this.params == null) {\n+                this.params = new java.util.HashMap();\n+            }\n+            this.params.put(name, value);\n+            return this;\n+        }\n+        \n+        /**\n+         * Returns the accumulated parameter map.\n+         * @return the accumulated parameter map\n+         */\n+        public Map build() {\n+            return this.params;\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/Event.java",
                "sha": "d3da1809e6644c38f2ade90f7d3e88e6a34a29e5",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventBroadcaster.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventBroadcaster.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventBroadcaster.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * The EventBroadcaster is the central relay point for events. It receives events from various\n+ * parts of the application and forwards them to any registered EventListener.\n+ */\n+public interface EventBroadcaster {\n+\n+    /**\n+     * Adds an event listener to the broadcaster. It is appended to the list of previously\n+     * registered listeners (the order of registration defines the calling order).\n+     * @param listener the listener to be added\n+     */\n+    void addEventListener(EventListener listener);\n+    \n+    /**\n+     * Removes an event listener from the broadcaster. If the event listener is not registered,\n+     * nothing happens.\n+     * @param listener the listener to be removed\n+     */\n+    void removeEventListener(EventListener listener);\n+ \n+    /**\n+     * Indicates whether any listeners have been registered with the broadcaster.\n+     * @return true if listeners are present, false otherwise\n+     */\n+    boolean hasEventListeners();\n+    \n+    /**\n+     * Broadcasts an event. This method is usually called from within the observed component.\n+     * @param event the event to be broadcast\n+     */\n+    void broadcastEvent(Event event);\n+    \n+    /**\n+     * Returns an event producer instance for the given interface class.\n+     * @param clazz the Class object identifying an {@link EventProducer} interface\n+     * @return the event producer instance\n+     */\n+    EventProducer getEventProducerFor(Class clazz);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventBroadcaster.java",
                "sha": "6c8df73750e2ed76ff3f939a82437631a00a09fc",
                "status": "added"
            },
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventExceptionManager.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventExceptionManager.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventExceptionManager.java",
                "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import org.apache.xmlgraphics.util.Service;\n+\n+/**\n+ * This class is reponsible for converting events into exceptions.\n+ */\n+public class EventExceptionManager {\n+\n+    private static final Map EXCEPTION_FACTORIES = new java.util.HashMap();\n+    \n+    static {\n+        Iterator iter;\n+        iter = Service.providers(ExceptionFactory.class, true);\n+        while (iter.hasNext()) {\n+            ExceptionFactory factory = (ExceptionFactory)iter.next();\n+            EXCEPTION_FACTORIES.put(factory.getExceptionClass().getName(), factory);\n+        }\n+    }\n+    \n+    /**\n+     * Converts an event into an exception and throws that. If the exception class is null,\n+     * a {@link RuntimeException} will be thrown.\n+     * @param event the event to be converted\n+     * @param exceptionClass the exception class to be thrown\n+     * @throws Throwable this happens always\n+     */\n+    public static void throwException(Event event, String exceptionClass) throws Throwable {\n+        if (exceptionClass != null) {\n+            ExceptionFactory factory = (ExceptionFactory)EXCEPTION_FACTORIES.get(exceptionClass);\n+            if (factory != null) {\n+                throw factory.createException(event);\n+            } else {\n+                throw new IllegalArgumentException(\n+                        \"No such ExceptionFactory available: \" + exceptionClass);\n+            }\n+        } else {\n+            String msg = EventFormatter.format(event);\n+            throw new RuntimeException(msg);\n+        }\n+    }\n+    \n+    /**\n+     * This interface is implementation by exception factories that can create exceptions from\n+     * events.\n+     */\n+    public interface ExceptionFactory {\n+        \n+        /**\n+         * Creates an exception from an event.\n+         * @param event the event\n+         * @return the newly created exception\n+         */\n+        Throwable createException(Event event);\n+        \n+        /**\n+         * Returns the {@link Exception} class created by this factory.\n+         * @return the exception class\n+         */\n+        Class getExceptionClass();\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventExceptionManager.java",
                "sha": "093ae701071315319f380cea4101f4564aac455e",
                "status": "added"
            },
            {
                "additions": 196,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter.java",
                "changes": 196,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.java",
                "patch": "@@ -0,0 +1,196 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.util.XMLResourceBundle;\n+import org.apache.fop.util.text.AdvancedMessageFormat;\n+import org.apache.fop.util.text.AdvancedMessageFormat.Part;\n+import org.apache.fop.util.text.AdvancedMessageFormat.PartFactory;\n+\n+/**\n+ * Converts events into human-readable, localized messages.\n+ */\n+public final class EventFormatter {\n+\n+    private static final Pattern INCLUDES_PATTERN = Pattern.compile(\"\\\\{\\\\{.+\\\\}\\\\}\");\n+    \n+    private static ResourceBundle defaultBundle = XMLResourceBundle.getXMLBundle(\n+            EventFormatter.class.getName(), EventFormatter.class.getClassLoader());\n+    \n+    private static Log log = LogFactory.getLog(EventFormatter.class);\n+    \n+    private EventFormatter() {\n+        //utility class\n+    }\n+    \n+    /**\n+     * Formats an event using the default locale.\n+     * @param event the event\n+     * @return the formatted message\n+     */\n+    public static String format(Event event) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = defaultBundle;\n+        }\n+        return format(event, bundle);\n+    }\n+    \n+    /**\n+     * Formats an event using a given locale.\n+     * @param event the event\n+     * @param locale the locale\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, Locale locale) {\n+        ResourceBundle bundle = null;\n+        String groupID = event.getEventGroupID();\n+        if (groupID != null) {\n+            try {\n+                 bundle = XMLResourceBundle.getXMLBundle(\n+                        groupID, locale,\n+                        EventFormatter.class.getClassLoader());\n+            } catch (MissingResourceException mre) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"No XMLResourceBundle for \" + groupID + \" available.\");\n+                }\n+            }\n+        }\n+        if (bundle == null) {\n+            bundle = XMLResourceBundle.getXMLBundle(\n+                    EventFormatter.class.getName(),\n+                    locale,\n+                    EventFormatter.class.getClassLoader());\n+        }\n+        return format(event, bundle);\n+    }\n+\n+    private static String format(Event event, ResourceBundle bundle) {\n+        String template = bundle.getString(event.getEventID());\n+        return format(event, processIncludes(template, bundle));\n+    }\n+\n+    private static String processIncludes(String template, ResourceBundle bundle) {\n+        CharSequence input = template;\n+        int replacements;\n+        StringBuffer sb;\n+        do {\n+            sb = new StringBuffer(Math.max(16, input.length()));\n+            replacements = processIncludesInner(input, sb, bundle);\n+            input = sb;\n+        } while (replacements > 0);\n+        String s = sb.toString();\n+        return s;\n+    }\n+\n+    private static int processIncludesInner(CharSequence template, StringBuffer sb,\n+            ResourceBundle bundle) {\n+        int replacements = 0;\n+        Matcher m = INCLUDES_PATTERN.matcher(template);\n+        while (m.find()) {\n+            String include = m.group();\n+            include = include.substring(2, include.length() - 2);\n+            m.appendReplacement(sb, bundle.getString(include));\n+            replacements++;\n+        }\n+        m.appendTail(sb);\n+        return replacements;\n+    }\n+\n+    /**\n+     * Formats the event using a given pattern. The pattern needs to be compatible with\n+     * {@link AdvancedMessageFormat}.\n+     * @param event the event\n+     * @param pattern the pattern (compatible with {@link AdvancedMessageFormat})\n+     * @return the formatted message\n+     */\n+    public static String format(Event event, String pattern) {\n+        AdvancedMessageFormat format = new AdvancedMessageFormat(pattern);\n+        Map params = new java.util.HashMap(event.getParams());\n+        params.put(\"source\", event.getSource());\n+        params.put(\"severity\", event.getSeverity());\n+        return format.format(params);\n+    }\n+    \n+    private static class LookupFieldPart implements Part {\n+        \n+        private String fieldName;\n+        \n+        public LookupFieldPart(String fieldName) {\n+            this.fieldName = fieldName;\n+        }\n+\n+        public boolean isGenerated(Map params) {\n+            return getKey(params) != null;\n+        }\n+\n+        public void write(StringBuffer sb, Map params) {\n+            sb.append(defaultBundle.getString(getKey(params)));\n+        }\n+\n+        private String getKey(Map params) {\n+            return (String)params.get(fieldName);\n+        }\n+        \n+        /** {@inheritDoc} */\n+        public String toString() {\n+            return \"{\" + this.fieldName + \", lookup}\";\n+        }\n+        \n+    }\n+    \n+    /** PartFactory for lookups. */\n+    public static class LookupFieldPartFactory implements PartFactory {\n+\n+        /** {@inheritDoc} */\n+        public Part newPart(String fieldName, String values) {\n+            return new LookupFieldPart(fieldName);\n+        }\n+\n+        /** {@inheritDoc} */\n+        public String getFormat() {\n+            return \"lookup\";\n+        }\n+        \n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter.java",
                "sha": "56964039b744f058f4901c7dfc078349b26a7d49",
                "status": "added"
            },
            {
                "additions": 104,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter.xml",
                "changes": 104,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter.xml",
                "patch": "@@ -0,0 +1,104 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+    \n+    http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+-->\n+<!-- $Id$ -->\n+<catalogue xml:lang=\"en\">\n+  <message key=\"locator\">[ (See position {loc})| (See {#gatherContextInfo})| (No context info available)]</message>\n+  <message key=\"rule.markerDescendantOfFlow\">An fo:marker is permitted only as the descendant of an fo:flow.</message>\n+  <message key=\"rule.retrieveMarkerDescendantOfStaticContent\">An fo:retrieve-marker is permitted only as the descendant of an fo:static-content.</message>\n+  <message key=\"rule.retrieveTableMarkerDescendantOfHeaderOrFooter\">An fo:retrieve-table-marker is permitted only as the descendant of an fo:table-header or an fo:table-footer.</message>\n+  <message key=\"rule.bidiOverrideContent\">An fo:bidi-override that is a descendant of an fo:leader or of the fo:inline child of an fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.inlineContent\">An fo:inline that is a descendant of an fo:leader or fo:footnote may not have block-level children, unless it has a nearer ancestor that is an fo:inline-container.</message>\n+  <message key=\"rule.childOfSPM\">The element must be a child of fo:simple-page-master.</message>\n+  <message key=\"rule.childOfDeclarations\">The element must be a child of fo:declarations.</message>\n+  <message key=\"rule.childOfSPMorDeclarations\">The element must be a child of fo:declarations or fo:simple-page-master.</message>\n+  <message key=\"rule.wrapperInvalidChildForParent\">An fo:wrapper is only permitted to have children that would be permitted for its parent.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">For \"{elementName}\", only one \"{offendingNode}\" may be declared.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nodeOutOfOrder\">For \"{elementName}\", \"{tooLateNode}\" must be declared before \"{tooEarlyNode}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidChild\">\"{offendingNode}\" is not a valid child of \"{elementName}\"![ {ruleViolated,lookup}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingChildElement\">\"{elementName}\" is missing child elements.[\n+Required content model: {contentModel}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Element \"{elementName}\" is missing required property \"{propertyName}\"!{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.idNotUnique\">Property ID \"{id}\" (found on \"{elementName}\") previously used; ID values must be unique within a document!{severity,equals,EventSeverity:FATAL,,\n+Any reference to it will be considered a reference to the first occurrence in the document.}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerBlockContainerAbsolutePosition\">Only an fo:block-container that does not generate absolutely positioned areas may have one or more fo:markers as its initial children.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotInitialChild\">fo:marker must be an initial child: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerNotUniqueForSameParent\">fo:marker \"marker-class-name\" must be unique for same parent: {mcname}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidProperty\">Invalid property encountered on \"{elementName}\": {attr}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidPropertyValue\">Invalid property value encountered in {propName}=\"{propValue}\"[: {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unimplementedFeature\">The following feature isn't implemented by Apache FOP, yet: {feature} (on {elementName}){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingLinkDestination\">Missing attribute on {elementName}: Either external-destination or internal-destination must be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.markerCloningFailed\">Unable to clone subtree of fo:marker (marker-class-name=\"{markerClassName}\") for fo:retrieve-marker.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.colorProfileNameNotUnique\">Duplicate color profile profile name: {name}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.regionNameMappedToMultipleRegionClasses\">Region-name (\"{regionName}\") is being mapped to multiple region-classes ({defaultRegionClass1} and {defaultRegionClass2}).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNameNotUnique\">The page master name (\"{name}\") must be unique across page-masters and page-sequence-masters.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.duplicateFlowNameInPageSequence\">Duplicate flow-name \"{flowName}\" found within {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.flowNameNotMapped\">The flow-name \"{flowName}\" on {elementName} could not be mapped to a region-name in the layout-master-set.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.masterNotFound\">The master-reference \"{masterReference}\" on {elementName} matches no simple-page-master or page-sequence-master.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.illegalRegionName\">The region-name \"{regionName}\" for {elementName} is not permitted.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.nonZeroBorderPaddingOnRegion\">Border and padding for {elementName} \"{regionName}\" must be '0' (See 6.4.13 in XSL 1.0).{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.columnCountErrorOnRegionBodyOverflowScroll\">If overflow property is set to \"scroll\" on {elementName}, a column-count other than \"1\" may not be specified.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.invalidFORoot\">First element must be the fo:root formatting object. Found {elementName} instead. Please make sure you're producing a valid XSL-FO document.</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.emptyDocument\">Document is empty (something might be wrong with your XSLT stylesheet).</message>\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.unknownFormattingObject\">Unknown formatting object \"{offendingNode}\" encountered (a child of {elementName}}.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.nonAutoBPDOnTable\">Only a value of \"auto\" for block-progression-dimension has a well-specified behavior on fo:table. Falling back to \"auto\".{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noTablePaddingWithCollapsingBorderModel\">In collapsing border model a table does not have padding (see http://www.w3.org/TR/REC-CSS2/tables.html#collapsing-borders), but a non-zero value for padding was found. The padding will be ignored.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.noMixRowsAndCells\">Either fo:table-rows or fo:table-cells may be children of an {elementName} but not both.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.footerOrderCannotRecover\">This table uses the collapsing border model. In order to resolve borders in an efficient way the table-footer must be known before any table-body is parsed. Either put the footer at the correct place or switch to the separate border model.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.startEndRowUnderTableRowWarning\">starts-row/ends-row for fo:table-cells non-applicable for children of an fo:table-row.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.tooManyCells\">The column-number or number of cells in the row overflows the number of fo:table-columns specified for the table.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.valueMustBeBiggerGtEqOne\">{propName} must be 1 or bigger, but got {actualValue}{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.warnImplicitColumns\">table-layout=\\\"fixed\\\" and column-width unspecified =&gt; falling back to proportional-column-width(1){{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.paddingNotApplicable\">padding-* properties are not applicable to {elementName}, but a non-zero value for padding was found.{{locator}}</message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.cellOverlap\">{elementName} overlaps in column {column}.<!-- no locator here, exception will be wrapped --></message>\n+  <message key=\"org.apache.fop.fo.flow.table.TableEventProducer.breakIgnoredDueToRowSpanning\">{breakBefore,if,break-before,break-after} ignored on {elementName} because of row spanning in progress (See XSL 1.1, {breakBefore,if,7.20.2,7.20.1}){{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageNotFound\">Image not found.[ URI: {uri}.]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageError\">Image not available.[ URI: {uri}.] Reason:[ {reason}][ {e}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageIOError\">I/O error while loading image.[ URI: {uri}.][ Reason: {ioe}]{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.ifoNoIntrinsicSize\">The intrinsic dimensions of an instream-foreign-object could not be determined.{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.uriError\">Error while handling URI: {uri}. Reason: {e}{{locator}}</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLProcessingError\">Some XML content will be ignored. Could not render XML in namespace \"{namespaceURI}\".[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.foreignXMLNoHandler\">Some XML content will be ignored. No handler defined for XML with namespace \"{namespaceURI}\".</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.imageWritingError\">Error while writing an image to the target file.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.events.ResourceEventProducer.cannotDeleteTempFile\">Temporary file could not be deleted: {tempFile}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.leaderWithoutContent\">fo:leader is set to \"use-content\" but has no content.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.inline.InlineLevelEventProducer.lineOverflows\">Line {line} of a paragraph overflows the available area by {overflowLength,choice,50000#{overflowLength} millipoints|50000&lt;more than 50 points}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.rowTooTall\">The contents of table-row {row} are taller than they should be (there is a block-progression-dimension or height constraint on the indicated row). Due to its contents the row grows to {effCellBPD} millipoints, but the row shouldn't get any taller than {maxCellBPD} millipoints.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.tableFixedAutoWidthNotSupported\">table-layout=\"fixed\" and width=\"auto\", but auto-layout not supported =&gt; assuming width=\"100%\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.objectTooWide\">The extent in inline-progression-direction (width) of a {elementName} is bigger than the available space ({effIPD}mpt &gt; {maxIPD}mpt).{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.overconstrainedAdjustEndIndent\">Adjusting end-indent based on overconstrained geometry rules for {elementName}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.viewportOverflow\">Content overflows the viewport of an {elementName} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.regionOverflow\">Content overflows the viewport of the {elementName} on page {page} in block-progression direction by {amount} millipoints.{clip,if, Content will be clipped.}{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.flowNotMappingToRegionBody\">Flow \"{flowName}\" does not map to the region-body in page-master \"{masterName}\". FOP presently does not support this.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.pageSequenceMasterExhausted\">Subsequences exhausted in page-sequence-master \"{pageSequenceMasterName}\", {canRecover,if,using previous subsequence,cannot recover}.{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.missingSubsequencesInPageSequenceMaster\">No subsequences in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.layoutmgr.BlockLevelEventProducer.noMatchingPageMaster\">No simple-page-master matching \"{pageMasterName}\" in page-sequence-master \"{pageSequenceMasterName}\".{{locator}}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.error\">SVG error: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.alert\">SVG alert: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.info\">SVG info: {message}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgNotBuilt\">SVG graphic could not be built. Reason: {e}</message>\n+  <message key=\"org.apache.fop.svg.SVGEventProducer.svgRenderingError\">SVG graphic could not be rendered. Reason: {e}</message>\n+  <message key=\"org.apache.fop.render.RendererEventProducer.ioError\">I/O error while writing to target file.[ Reason: {ioe}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReference\">{type}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.unresolvedIDReferenceOnPage\">Page {page}: Unresolved ID reference \"{id}\" found.</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageLoadError\">Error while deserializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageSaveError\">Error while serializing page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.area.AreaEventProducer.pageRenderingError\">Error while rendering page {page}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontSubstituted\">Font \"{requested}\" not found. Substituting with \"{effective}\".</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.fontLoadingErrorAtAutoDetection\">Unable to load font file: {fontURL}.[ Reason: {e}]</message>\n+  <message key=\"org.apache.fop.fonts.FontEventAdapter.glyphNotAvailable\">Glyph \"{ch}\" (0x{ch,hex}[, {ch,glyph-name}]) not available in font \"{fontName}\".</message>\n+</catalogue>",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter.xml",
                "sha": "4bff75f85dc3f38c8fa932973efab3411c1a923f",
                "status": "added"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventFormatter_de.xml?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventFormatter_de.xml",
                "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+    Licensed to the Apache Software Foundation (ASF) under one or more\r\n+    contributor license agreements.  See the NOTICE file distributed with\r\n+    this work for additional information regarding copyright ownership.\r\n+    The ASF licenses this file to You under the Apache License, Version 2.0\r\n+    (the \"License\"); you may not use this file except in compliance with\r\n+    the License.  You may obtain a copy of the License at\r\n+    \r\n+    http://www.apache.org/licenses/LICENSE-2.0\r\n+    \r\n+    Unless required by applicable law or agreed to in writing, software\r\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+    See the License for the specific language governing permissions and\r\n+    limitations under the License.\r\n+-->\r\n+<!-- $Id$ -->\r\n+<catalogue xml:lang=\"de\">\r\n+  <message key=\"locator\">[ (Siehe Position {loc})| (Siehe {#gatherContextInfo})| (Keine Kontextinformationen verf\u00fcgbar)]</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.tooManyNodes\">In \"{elementName}\" darf nur ein einziges \"{offendingNode}\" vorkommen!{{locator}}</message>\r\n+  <message key=\"org.apache.fop.fo.FOValidationEventProducer.missingProperty\">Dem Element \"{elementName}\" fehlt ein verlangtes Property \"{propertyName}\"!{{locator}}</message>\r\n+</catalogue>\r",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventFormatter_de.xml",
                "sha": "c65d24f7370e7dc43bd580b00a38353dd7d849eb",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventListener.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventListener.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventListener.java",
                "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This interface is implemented by clients who want to listen for events.\n+ */\n+public interface EventListener extends java.util.EventListener {\n+\n+    /**\n+     * This method is called for each event that is generated. With the event's ID it is possible\n+     * to react to certain events. Events can also simply be recorded and presented to a user.\n+     * It is possible to throw an (unchecked) exception if the processing needs to be aborted\n+     * because some special event occured. This way the client can configure the behaviour of\n+     * the observed application.\n+     * @param event the event\n+     */\n+    void processEvent(Event event);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventListener.java",
                "sha": "f8293aed926384e0170e2da51e0b0d3d0a957fa7",
                "status": "added"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventProducer.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/EventProducer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/EventProducer.java",
                "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+/**\n+ * This is a marker interface which all event producer interfaces need to extend. These interfaces\n+ * must agree to the following convention:\n+ * <ul>\n+ *   <li>The first parameter of each method must be: <code>Object source</code>\n+ * </ul>\n+ */\n+public interface EventProducer {\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/EventProducer.java",
                "sha": "88da771a49dfd6531476c8ed95526ab6d9f8e6ce",
                "status": "added"
            },
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventListenerProxy.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.fop.apps.FOUserAgent;\n+import org.apache.fop.events.model.EventSeverity;\n+import org.apache.fop.fo.FOValidationEventProducer;\n+import org.apache.fop.layoutmgr.BlockLevelEventProducer;\n+\n+/**\n+ * EventListener proxy that inspects all events and adjusts severity levels where necessary.\n+ * For validation events, it reacts on each event based on the strict validation setting in\n+ * the user agent.\n+ * For layout events, it reduces the default severity level if FOP signals that it can recover\n+ * from the event. \n+ */\n+public class FOPEventListenerProxy implements EventListener {\n+\n+    private static final String FOVALIDATION_EVENT_ID_PREFIX\n+                = FOValidationEventProducer.class.getName();\n+    \n+    private static final String BLOCK_LEVEL_EVENT_ID_PREFIX\n+                = BlockLevelEventProducer.class.getName();\n+\n+    private EventListener delegate;\n+    private FOUserAgent userAgent;\n+    \n+    /**\n+     * Main constructor.\n+     * @param delegate the event listener to delegate events to \n+     * @param userAgent the FO user agent\n+     */\n+    public FOPEventListenerProxy(EventListener delegate, FOUserAgent userAgent) {\n+        this.delegate = delegate;\n+        this.userAgent = userAgent;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public synchronized void processEvent(Event event) {\n+        if (event.getEventID().startsWith(FOVALIDATION_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover) && !userAgent.validateStrictly()) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        } else if (event.getEventID().startsWith(BLOCK_LEVEL_EVENT_ID_PREFIX)) {\n+            Boolean canRecover = (Boolean)event.getParam(\"canRecover\");\n+            if (Boolean.TRUE.equals(canRecover)) {\n+                //Reduce severity if FOP can recover\n+                event.setSeverity(EventSeverity.WARN);\n+            }\n+        }\n+        this.delegate.processEvent(event);\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/FOPEventListenerProxy.java",
                "sha": "d4c237844759ff45f9f75356b76971519d24216a",
                "status": "added"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/FOPEventModelFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 17,
                "filename": "src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "patch": "@@ -15,28 +15,23 @@\n  * limitations under the License.\n  */\n \n-/* $Id: $ */\n+/* $Id$ */\n \n-package org.apache.fop.render.afp.modca.goca;\n+package org.apache.fop.events;\n \n+import org.apache.fop.events.model.AbstractEventModelFactory;\n+import org.apache.fop.events.model.EventModel;\n \n /**\n- * A GOCA graphics straight line drawn from the\n- * given position or current position.\n+ * Factory for FOP's main event model.\n  */\n-public class GraphicsLine extends AbstractGraphicsCoord {\n+public class FOPEventModelFactory extends AbstractEventModelFactory {\n \n-    /**\n-     * @param coords the x/y coordinates for this object\n-     */\n-    public GraphicsLine(int[] coords) {\n-        super(coords);\n-    }\n+    private static final String EVENT_MODEL_FILENAME = \"event-model.xml\";\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    protected byte getOrderCode() {\n-        return (byte)0xC1;                \n+    /** {@inheritDoc} */\n+    public EventModel createEventModel() {\n+        return loadModel(getClass(), EVENT_MODEL_FILENAME);\n     }\n-}\n\\ No newline at end of file\n+\n+}",
                "previous_filename": "src/java/org/apache/fop/render/afp/modca/goca/GraphicsLine.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/FOPEventModelFactory.java",
                "sha": "5a75042fa5370d5ef63cecf0f9199602964ebf9e",
                "status": "renamed"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/LoggingEventListener.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/LoggingEventListener.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/LoggingEventListener.java",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.apache.fop.events.model.EventSeverity;\n+\n+/**\n+ * EventListener implementation that redirects events to Commons Logging. The events are\n+ * converted to localized messages.\n+ */\n+public class LoggingEventListener implements EventListener {\n+\n+    /** Default logger instance */\n+    private static Log defaultLog = LogFactory.getLog(LoggingEventListener.class);\n+    \n+    private Log log;\n+    private boolean skipFatal;\n+    \n+    /**\n+     * Creates an instance logging to the default log category of this class.\n+     */\n+    public LoggingEventListener() {\n+        this(defaultLog);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger. Events with fatal severity level will be\n+     * skipped.\n+     * @param log the target logger\n+     */\n+    public LoggingEventListener(Log log) {\n+        this(log, true);\n+    }\n+    \n+    /**\n+     * Creates an instance logging to a given logger.\n+     * @param log the target logger\n+     * @param skipFatal true if events with fatal severity level should be skipped (i.e. not logged)\n+     */\n+    public LoggingEventListener(Log log, boolean skipFatal) {\n+        this.log = log;\n+        this.skipFatal = skipFatal;\n+    }\n+    \n+    /**\n+     * Returns the target logger for this instance.\n+     * @return the target logger\n+     */\n+    public Log getLog() {\n+        return this.log;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public void processEvent(Event event) {\n+        String msg = EventFormatter.format(event);\n+        EventSeverity severity = event.getSeverity();\n+        if (severity == EventSeverity.INFO) {\n+            log.info(msg);\n+        } else if (severity == EventSeverity.WARN) {\n+            log.warn(msg);\n+        } else if (severity == EventSeverity.ERROR) {\n+            log.error(msg);\n+        } else if (severity == EventSeverity.FATAL) {\n+            if (!skipFatal) {\n+                log.fatal(msg);\n+            }\n+        } else {\n+            assert false;\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/LoggingEventListener.java",
                "sha": "9ba8ed2dfde171c65b9abae8b4428110fbd0b317",
                "status": "added"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/PropertyExceptionFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.expr.PropertyException;\n+\n+/**\n+ * Exception factory for {@link PropertyException}.\n+ */\n+public class PropertyExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        PropertyException ex = new PropertyException(msg);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return PropertyException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/PropertyExceptionFactory.java",
                "sha": "667c4a16e085fa23b95d8bee2e84b6d3b3c232c2",
                "status": "added"
            },
            {
                "additions": 136,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "changes": 136,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ResourceEventProducer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ResourceEventProducer.java",
                "patch": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+\n+import org.w3c.dom.Document;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.xmlgraphics.image.loader.ImageException;\n+\n+/**\n+ * Event producer interface for resource events (missing images, fonts etc.).\n+ */\n+public interface ResourceEventProducer extends EventProducer {\n+\n+    /**\n+     * Provider class for the event producer.\n+     */\n+    class Provider {\n+        \n+        /**\n+         * Returns an event producer.\n+         * @param broadcaster the event broadcaster to use\n+         * @return the requested event producer\n+         */\n+        public static ResourceEventProducer get(EventBroadcaster broadcaster) {\n+            return (ResourceEventProducer)broadcaster.getEventProducerFor(\n+                    ResourceEventProducer.class);\n+        }\n+    }\n+\n+    /**\n+     * Image not found.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param fnfe the \"file not found\" exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageNotFound(Object source, String uri, FileNotFoundException fnfe, Locator loc);\n+    \n+    /**\n+     * Error while processing image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the image exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageError(Object source, String uri, ImageException e, Locator loc);\n+    \n+    /**\n+     * I/O error while loading an image.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param ioe the I/O exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void imageIOError(Object source, String uri, IOException ioe, Locator loc);\n+\n+    /**\n+     * Error while writing/serializing an image to an output format.\n+     * @param source the event source\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void imageWritingError(Object source, Exception e);\n+\n+    /**\n+     * Error while handling a URI.\n+     * @param source the event source\n+     * @param uri the original URI of the image\n+     * @param e the original exception\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void uriError(Object source, String uri, Exception e, Locator loc);\n+\n+    /**\n+     * Intrinsic size of fo:instream-foreign-object could not be determined.\n+     * @param source the event source\n+     * @param loc the location of the error or null\n+     * @event.severity ERROR\n+     */\n+    void ifoNoIntrinsicSize(Object source, Locator loc);\n+    \n+    /**\n+     * Error processing foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @param e the original exception\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLProcessingError(Object source, Document doc, String namespaceURI, Exception e);\n+\n+    /**\n+     * No handler for foreign XML content.\n+     * @param source the event source\n+     * @param doc the foreign XML\n+     * @param namespaceURI the namespace URI of the foreign XML\n+     * @event.severity ERROR\n+     */\n+    void foreignXMLNoHandler(Object source, Document doc, String namespaceURI);\n+    \n+    /**\n+     * Cannot delete a temporary file.\n+     * @param source the event source\n+     * @param tempFile the temporary file\n+     * @event.severity ERROR\n+     */\n+    void cannotDeleteTempFile(Object source, File tempFile);\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/ResourceEventProducer.java",
                "sha": "21da4f1d73185a753f17b0979a15d985abc3f28b",
                "status": "added"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+\n+/**\n+ * Exception factory for {@link UnsupportedOperationException}.\n+ */\n+public class UnsupportedOperationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        UnsupportedOperationException ex = new UnsupportedOperationException(msg);\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return UnsupportedOperationException.class;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/UnsupportedOperationExceptionFactory.java",
                "sha": "06ce8dd254116e14fb0475ee4aac4d39b8c87613",
                "status": "added"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/ValidationExceptionFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events;\n+\n+import java.util.Locale;\n+\n+import org.xml.sax.Locator;\n+\n+import org.apache.fop.events.EventExceptionManager.ExceptionFactory;\n+import org.apache.fop.fo.ValidationException;\n+\n+/**\n+ * Exception factory for {@link ValidationException}.\n+ */\n+public class ValidationExceptionFactory implements ExceptionFactory {\n+\n+    /** {@inheritDoc} */\n+    public Throwable createException(Event event) {\n+        Locator loc = (Locator)event.getParam(\"loc\");\n+        String msg = EventFormatter.format(event, Locale.ENGLISH);\n+        ValidationException ex = new ValidationException(msg, loc);\n+        if (!Locale.ENGLISH.equals(Locale.getDefault())) {\n+            ex.setLocalizedMessage(EventFormatter.format(event));\n+        }\n+        return ex;\n+    }\n+    \n+    /** {@inheritDoc} */\n+    public Class getExceptionClass() {\n+        return ValidationException.class;\n+    }\n+    \n+    \n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/ValidationExceptionFactory.java",
                "sha": "9dba84007d63e6a1356264def9db817f1878fd62",
                "status": "added"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.fop.events.model;\n+\n+import java.io.InputStream;\n+import java.util.MissingResourceException;\n+\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import org.apache.fop.events.DefaultEventBroadcaster;\n+\n+/**\n+ * This interface is used to instantiate (load, parse) event models.\n+ */\n+public abstract class AbstractEventModelFactory implements EventModelFactory {\n+\n+    /**\n+     * Loads an event model and returns its instance.\n+     * @param resourceBaseClass base class to use for loading resources\n+     * @param resourceName the resource name pointing to the event model to be loaded\n+     * @return the newly loaded event model.\n+     */\n+    public EventModel loadModel(Class resourceBaseClass, String resourceName) {\n+        InputStream in = resourceBaseClass.getResourceAsStream(resourceName);\n+        if (in == null) {\n+            throw new MissingResourceException(\n+                    \"File \" + resourceName + \" not found\",\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        }\n+        try {\n+            return EventModelParser.parse(new StreamSource(in));\n+        } catch (TransformerException e) {\n+            throw new MissingResourceException(\n+                    \"Error reading \" + resourceName + \": \" + e.getMessage(),\n+                    DefaultEventBroadcaster.class.getName(), \"\"); \n+        } finally {\n+            IOUtils.closeQuietly(in);\n+        }\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/AbstractEventModelFactory.java",
                "sha": "ee980f34ee0a2a854507fc17eebc1fce400d1d1e",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventMethodModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventMethodModel.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventMethodModel.java",
                "sha": "930cda53d62538ab96e5a2f88a336bc58991d062",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModel.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModel.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModel.java",
                "sha": "61e221b3bda72d379c7c1cd4870f454456179f47",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelFactory.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelFactory.java",
                "previous_filename": "src/java/org/apache/fop/render/afp/modca/PreparedAFPObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModelFactory.java",
                "sha": "cd760501c07d335fa6f03154f83c2881106cc8e8",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModelParser.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventModelParser.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventModelParser.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventModelParser.java",
                "sha": "600e495c5ff15cad82f198b8c44be5df985960fd",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventProducerModel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventProducerModel.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventProducerModel.java",
                "sha": "938609cd9b8d92f550c9677a38f39d0ef2201447",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventSeverity.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/events/model/EventSeverity.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/events/model/EventSeverity.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/events/model/EventSeverity.java",
                "sha": "d37c53c1e1e31a802af2b6b6286558299897c80a",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/Constants.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/Constants.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/Constants.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/Constants.java",
                "sha": "2a7f7e0c91584f87a6f168ab5b8f4a7be80d2002",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/ElementMapping.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/ElementMapping.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/ElementMapping.java",
                "sha": "a47e6affa0001264c24f21fe1d54f259ec066b74",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/ElementMappingRegistry.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/ElementMappingRegistry.java",
                "sha": "abc4ec8349cdb07924a6fedf2591c8538d2ee8e4",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOElementMapping.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOElementMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOElementMapping.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOElementMapping.java",
                "sha": "facb1c304d8252d0c73aa39d02366318a4f9e748",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOEventHandler.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOEventHandler.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOEventHandler.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOEventHandler.java",
                "sha": "7521d398c00aefacac4a90b5d043ac1b60f93653",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FONode.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FONode.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FONode.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FONode.java",
                "sha": "951e4c430e60cdfd0f5064c3c26b89361dcd694a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOPropertyMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOPropertyMapping.java",
                "sha": "60317cf0df50009fe11c9696c4fc013c74c8ae8f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOText.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOText.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOText.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOText.java",
                "sha": "8c85bb03940d030bebc31c3afea801a1aa15c801",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOTreeBuilder.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOTreeBuilder.java",
                "sha": "84abc4b8b48493c3d8aa280917dce2fd33b6bf79",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FOValidationEventProducer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FOValidationEventProducer.java",
                "sha": "61bd683406e119cc77bc90d3d5877100e550531a",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FObj.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FObj.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FObj.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FObj.java",
                "sha": "0bbec4d47e16e4ed4468970e1921edda0bc4d015",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FObjMixed.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/FObjMixed.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/FObjMixed.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/FObjMixed.java",
                "sha": "bf738339813a15b1495c53927cfd11be5a024194",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/GraphicsProperties.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/GraphicsProperties.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/GraphicsProperties.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/GraphicsProperties.java",
                "sha": "5cee6867927f92af0506cba3a53799845d12da24",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/PropertyList.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/PropertyList.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/PropertyList.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/PropertyList.java",
                "sha": "e3e9f9f839ff4a12d2eecb31d2759c0555ba053a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/XMLObj.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/XMLObj.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/XMLObj.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/XMLObj.java",
                "sha": "da610f0e35f4df9aa2202ac80ae745c1b04369c3",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/XMLWhiteSpaceHandler.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/XMLWhiteSpaceHandler.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/XMLWhiteSpaceHandler.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/XMLWhiteSpaceHandler.java",
                "sha": "557a1778e1127cc2f4db83219b63a3c0cf5e271f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/FromParentFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/FromParentFunction.java",
                "sha": "b09d3c95ff9d98422344a0c964e449a70dd42e7f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/ICCColorFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/ICCColorFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/ICCColorFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/ICCColorFunction.java",
                "sha": "9444639a59fd603daa146c97044560650af352a7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/InheritedPropFunction.java",
                "sha": "e24c78caa0d64da8eb74508a0c45890f24a95f9a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/NearestSpecPropFunction.java",
                "sha": "cdde960925078da71c6c9a5049c203fd521c3277",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/NumericProperty.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/NumericProperty.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/NumericProperty.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/NumericProperty.java",
                "sha": "54fe1f2f7337f81520dc6b5bb90ea3c4afcf0559",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PPColWidthFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/PPColWidthFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/PPColWidthFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PPColWidthFunction.java",
                "sha": "394035b490b62350b4152bd4db7ab1abaf4533df",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyException.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/PropertyException.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/PropertyException.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyException.java",
                "sha": "16055a738231fe1013ee8d0dd9172054a4f739e7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyInfo.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/PropertyInfo.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/PropertyInfo.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyInfo.java",
                "sha": "039e8783ecc5968c3204a89c49d1cb286cbf79cf",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyParser.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/PropertyParser.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/PropertyParser.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/PropertyParser.java",
                "sha": "c631427734914aba5573487170af4c21048381ab",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/RGBColorFunction.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/RGBColorFunction.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/RGBColorFunction.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/RGBColorFunction.java",
                "sha": "ba39662eb1734f63d579cbbb971a43b991fd3e1d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/RelativeNumericProperty.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/expr/RelativeNumericProperty.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/expr/RelativeNumericProperty.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/expr/RelativeNumericProperty.java",
                "sha": "6475286924ed3e940915579fb4bb1116c401d871",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/ExtensionElementMapping.java",
                "sha": "fc61167b2613c941d24f7e941b3385bb36d92e07",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/ExternalDocument.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/ExternalDocument.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/extensions/ExternalDocument.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/ExternalDocument.java",
                "sha": "b8707726fe049f3a74607a6faa216f296f909261",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/extensions/destination/Destination.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/extensions/destination/Destination.java",
                "sha": "e3a2bbac47ae7c5c6f8eb6062e7836312fce0588",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractGraphics.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractGraphics.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractGraphics.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractGraphics.java",
                "sha": "19cea1510d644161bb02d3841f4bf82f3897ad7b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractListItemPart.java",
                "sha": "092358891da90aa70a432e12a11c629c86850747",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractPageNumberCitation.java",
                "sha": "b45f2134801f3fcabd228bc4f9605cba6eab9281",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractRetrieveMarker.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/AbstractRetrieveMarker.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/AbstractRetrieveMarker.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/AbstractRetrieveMarker.java",
                "sha": "83a0ddbdc216a29c4593ef188b292e0a9294cb58",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BasicLink.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/BasicLink.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BasicLink.java",
                "sha": "82d0134bd4b10965406f26744716e46c7d77e883",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BidiOverride.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BidiOverride.java",
                "sha": "492e6c4bae871e678133682f45974be73fb3cf1a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Block.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Block.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Block.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Block.java",
                "sha": "40175ce49362c9d904400e2b16f0d024bbf63989",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/BlockContainer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/BlockContainer.java",
                "sha": "431dae9547334fc480c5bcd8c0af2235be50c73b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Character.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Character.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Character.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Character.java",
                "sha": "7fd98b0ef2364a3b1931f0f4856bffe2561be577",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ExternalGraphic.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ExternalGraphic.java",
                "sha": "bfe54cbd9753358a0b9a731676f4703095eaf5fd",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Float.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Float.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Float.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Float.java",
                "sha": "90bc423fd3ab9fc8b20456eabf9441ef8692c3b0",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Footnote.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Footnote.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Footnote.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Footnote.java",
                "sha": "5b13b502cccee82dfd9f669e6651086cb3b495f0",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/FootnoteBody.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/FootnoteBody.java",
                "sha": "711d56c601eedeb44f57f8c5cd836754f4945dc7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InitialPropertySet.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InitialPropertySet.java",
                "sha": "a7f62535f21cb01828d368ef096d595b1a8e7f21",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Inline.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Inline.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Inline.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Inline.java",
                "sha": "a770b0f06a050a76fb3e6ff8985263727b55598e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InlineContainer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InlineContainer.java",
                "sha": "c26730b3aef116d1476b1670686763f79facb796",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InlineLevel.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InlineLevel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/InlineLevel.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InlineLevel.java",
                "sha": "92af98d3ceef16117d86050d3b3d20464835e5de",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/InstreamForeignObject.java",
                "sha": "3583087d4fe8edb4dce823cae809a1a9afe3b6e3",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Leader.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Leader.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Leader.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Leader.java",
                "sha": "b73534d87e34d095be436ba331cf4edb5e1efea8",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListBlock.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/ListBlock.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListBlock.java",
                "sha": "8c7777e6ad1439becda62c17273b59b6c53b2de0",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItem.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListItem.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/ListItem.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItem.java",
                "sha": "398d915581246bd10d804d1ae31367cebd84a169",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItemBody.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListItemBody.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/ListItemBody.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItemBody.java",
                "sha": "226cacd1241e4682166929aade2256b4362809f7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItemLabel.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/ListItemLabel.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/ListItemLabel.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/ListItemLabel.java",
                "sha": "7fbbe77d39a4a8a04b30b1311e88ad75be84b70a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Marker.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Marker.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Marker.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Marker.java",
                "sha": "7eda2101edd3754b22a604cc870e2b00b581b77a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiCase.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/MultiCase.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiCase.java",
                "sha": "284d82d63a5ea5aa16bf5d21476d815e3de1a4f8",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiProperties.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiProperties.java",
                "sha": "ef015a9c1205ad7e861b15ad9c06e4f081d6a8dc",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiPropertySet.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiPropertySet.java",
                "sha": "0736976b47337462238ece2de5f633ef25823ba0",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiSwitch.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiSwitch.java",
                "sha": "81cb2aff92165f766c80ff0f24cc9505a356e912",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/MultiToggle.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/MultiToggle.java",
                "sha": "bcb1f806a474cea0d49b4975079cf0fe1beccbb2",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/PageNumber.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/PageNumber.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumber.java",
                "sha": "3b91c6b44fde97387e3dc2785d5c5cd96b2990c1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumberCitation.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/PageNumberCitation.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/PageNumberCitation.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumberCitation.java",
                "sha": "b31bc9a11542e851646d97643f22afd692eb9579",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumberCitationLast.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/PageNumberCitationLast.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/PageNumberCitationLast.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/PageNumberCitationLast.java",
                "sha": "9e98c06be8b8b1cfe1e305bc7f39a1915f467866",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/RetrieveMarker.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/RetrieveMarker.java",
                "sha": "c696d3d142f085f5dd291cb1a671e35d376cb78d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/RetrieveTableMarker.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/RetrieveTableMarker.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/RetrieveTableMarker.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/RetrieveTableMarker.java",
                "sha": "9d04e308daec37520321dbd28417181e43a29a32",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/Wrapper.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/Wrapper.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/Wrapper.java",
                "sha": "5ed594eccc1613084ccdb7b35b0913b3106db08b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/BorderResolver.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/BorderResolver.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/BorderResolver.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/BorderResolver.java",
                "sha": "5322b08d37a70e5a4aa7d4b57fa99dd3d680fbef",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/BorderSpecification.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/BorderSpecification.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/BorderSpecification.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/BorderSpecification.java",
                "sha": "ce6e1b802a9e2a9d2f66dcbf583e1c0c4fe6e853",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/CollapsingBorderResolver.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/CollapsingBorderResolver.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/CollapsingBorderResolver.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/CollapsingBorderResolver.java",
                "sha": "2d48380eecaa9d09ef8a9bedc35c5b053685782c",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/ConditionalBorder.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/ConditionalBorder.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/ConditionalBorder.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/ConditionalBorder.java",
                "sha": "389681f1dfc1eb7c03b35ca6eaa6245db2a9f54b",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/EffRow.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/EffRow.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/EffRow.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/EffRow.java",
                "sha": "fc8209b010a5dd173ec5e5efbc40e8292c6fe4c6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/EmptyGridUnit.java",
                "sha": "2c910d3f8184e4165c9b123d20525a6381a8d09c",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/FixedColRowGroupBuilder.java",
                "sha": "0d24491d9b731f64d90c8fadb538ecf73403317d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/GridUnit.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/GridUnit.java",
                "sha": "3d48a6836e8d96e66227c607ce17407793724a37",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/PrimaryGridUnit.java",
                "sha": "55bcfa44e646c89f7d18ade20e86a37b822c4dd2",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/RowGroupBuilder.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/RowGroupBuilder.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/RowGroupBuilder.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/RowGroupBuilder.java",
                "sha": "c954be7111ad116eab02dfb4a86cc84a6267d524",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/SeparateBorderResolver.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/SeparateBorderResolver.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/SeparateBorderResolver.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/SeparateBorderResolver.java",
                "sha": "c6d46ecf595990c4282ede202dbeabcd56df4d6a",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/Table.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/Table.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/Table.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/Table.java",
                "sha": "5b96a668ed3e6eb4e212a148068b9ad7e4d39e8d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableAndCaption.java",
                "sha": "7c45c21f230c68aebf6b721629071a611c7136b1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableBody.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableBody.java",
                "sha": "b4e48d2e6f9e44f23764b74cc6d78f52ae5e5ab1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCaption.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCaption.java",
                "sha": "80fccb236c783550ed4e58ce14593737de96856d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCell.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCell.java",
                "sha": "2781bf0829ca4cdf249dbc14620457b4ded4d57c",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableCellContainer.java",
                "sha": "de9f271b5b2444f921cb159f3f8a582f424940ad",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableColumn.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableColumn.java",
                "sha": "6916e090b6238c2ed5eecb3ad3f0c3efd7c9c0f4",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableEventProducer.java",
                "sha": "44ddcc038965d0396e61bcb7af23f83821a68465",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableFObj.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableFObj.java",
                "sha": "6bc113fd01cd7f368d0ab285fa65559161cab252",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableFooter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableFooter.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableFooter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableFooter.java",
                "sha": "d05824e953ee5375dd3f683aa031ca891623b944",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableHeader.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableHeader.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableHeader.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableHeader.java",
                "sha": "252ba1b8b8e04ab19051fdafaa63666c20c0844e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/TableRow.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/TableRow.java",
                "sha": "3be794fbd085dce8055b3bb62d21dbf39a584d52",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/VariableColRowGroupBuilder.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/flow/table/VariableColRowGroupBuilder.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/flow/table/VariableColRowGroupBuilder.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/flow/table/VariableColRowGroupBuilder.java",
                "sha": "d59870f0a192585d9422b1f1328d3a232473a915",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/AbstractPageSequence.java",
                "sha": "f0928a8cab1e92f5d7378ba72e85954fe7fa3463",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ColorProfile.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/ColorProfile.java",
                "sha": "0af1aa42d4388d8b53c60147abd50b02895db7c0",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/ConditionalPageMasterReference.java",
                "sha": "7c76109f490cec3fecaeb91d759f5b633eda6469",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Declarations.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/Declarations.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Declarations.java",
                "sha": "eb24cffe0b30e0c6032207b79ba40f8591097552",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Flow.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Flow.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/Flow.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Flow.java",
                "sha": "8e114c47fff2dc6488705332d12fdfc602b9dd61",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/LayoutMasterSet.java",
                "sha": "7f081579d711e4a85e792d2ca0efbc61f75e8dff",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageNumberGenerator.java",
                "sha": "50620f6781630338e162b5f58a10d32a6c4a3635",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageProductionException.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageProductionException.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/PageProductionException.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageProductionException.java",
                "sha": "068e38ff84d3af3d0ad40dc7046a96a24085ec93",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequence.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequence.java",
                "sha": "c8f7c66d75c45f47b195644aaeb1ddab1fbd58f5",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequenceMaster.java",
                "sha": "a1651470529a0df0a4fc1e20c059a3190e96793e",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/PageSequenceWrapper.java",
                "sha": "f8a37d8c0f5aad7a55396fdcf3372151aa641bb6",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Region.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/Region.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/Region.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/Region.java",
                "sha": "753e8f735febfccbd2c7be10f008e148a7c122f3",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionAfter.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionAfter.java",
                "sha": "91aadce769b4b2a5bf50edf432c5ce1f410d7c16",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBA.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBA.java",
                "sha": "4cedee6d17511e771e2a138a30ca4c7277156a91",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBefore.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBefore.java",
                "sha": "fbcf7e8e78718d2f5ad3e0bc707c17e8c75e84ec",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionBody.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionBody.java",
                "sha": "c9dd792dbdf05acf3ac0fb41006d69e22b5d80a7",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionEnd.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionEnd.java",
                "sha": "1b1abd53c7e6d0c3b2f2ecef2d688374e550900d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionSE.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionSE.java",
                "sha": "15f61096bcb9b2ec3def806f7c57361e55d1dd0b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RegionStart.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RegionStart.java",
                "sha": "e11a8f201ea9a9b7ed2a0796bdfc9f9218145e99",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterAlternatives.java",
                "sha": "5c06dd40d01543adf867d435bebd9d0cd3831247",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/xmlgraphics-fop/blob/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-fop/contents/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java?ref=cb82679d9f56be1fa4d8f198366e472da23709a2",
                "deletions": 0,
                "filename": "src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "raw_url": "https://github.com/apache/xmlgraphics-fop/raw/cb82679d9f56be1fa4d8f198366e472da23709a2/src/java/org/apache/fop/fo/pagination/RepeatablePageMasterReference.java",
                "sha": "1cf77675d57a65a6b6a249d8b0dbb98fe9472357",
                "status": "modified"
            }
        ],
        "message": "Merged revisions 603890,603926,603943,603945,603959,603961-603962,603968,603975,603979,603990,604171,604180,604185,604293,604299,604475,604678,604814,604965,604970,605195,605246,605253,605295,605297,605517,605978,606004,607032,607036,608812,609567,609627,610020-610023,610337,610355,610420,610704,610739,610821,610848,610853,610886,610891,610893,610905,611114,611142,611175,611278,611285,611766-611768,612560,612785,612815-612816,612825,613144,613185,613828,613831,613835,613896,614156,614169-614170,614191,614201-614202,614566,614845,614920,614924,614964,614966,614993,615144,615164,615197,615251,615598,615604,615845,615906,615917,616080,616191,616260,616334,616485,616691,616694,616798,617126,617473,617512,617531,617550,617708,617716,617765,617812,617907,617909,617976,617989,618239,618470,618626-618627,618992,619417,619461,619670,619674,619790,619854,619856,619870,619923,619979,620272,620276-620278,620283,620285,620558-620559,620565,620567,620570,620723,620750,620761,627318,627324,627367,627495,627497,627553,627576,627679,627698,627702,627712,627719,627721,628140,628280,628652,628668,628775,628804,628816,628826,628829,629048,629093,629103,629129,629131,629169,629769,629902,630215,630772,630814,631178,631226,631276,631575,631609,631984,632121-632122,632321,632558,632716,632784,632938,632972,633389-633391,633396-633397,633437,633460,633470,633473,633525,633557,633559,633561,633961,634187,635508,635686,635701,635741,635884,635961,635967,636276,636293,636295,636405,636409,636471,637057,637076,638396,640089,640242,641742,641764,641827,642923-642924,642927,644208,644213,644691,644697,645104,647692,647742,647745,647770,648122,648206,648381,648985,649012,649091,649119,649146,649149,649160,649279,649283,649285,649393,649396,649420,649477,649552,649657,650050,651323,651333,651538,651540,651543-651544,651551,651558,651575,651577,651591,651613,651622-651623,651853,651855-651856,651866-651867,651880,651898,652456,652465,652467,652520,652525,652565,652581-652582,652673-652674,652821-652822,652835,653036,653045,653048,653106,653144,653202,653204,653311,653564,653826,653828,654111,654121,654190,654314,654322-654323,654338,654347,654437,654461,654528,654557,654563,654600,654654,654783,654849,654869,654946,654982,655085,655093,655275,655281,655285,655309,655349,655370,655489,655500,655522,655531,655578,655601,655603,655614,655766,655771,655775,655791,655801,655829,656104 via svnmerge from \nhttps://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n\n................\n  r603890 | vhennebert | 2007-12-13 11:35:17 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Fixed @throws statements in javadoc\n................\n  r603926 | adelmelle | 2007-12-13 14:43:08 +0000 (Thu, 13 Dec 2007) | 4 lines\n  \n  Minor tweaks:\n  * only add text to a fo:wrapper if it is not a direct flow-descendant\n  * error if an fo:wrapper that is a direct flow-descendant contains inline-level children\n................\n  r603943 | vhennebert | 2007-12-13 15:55:29 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Removed calls to removeLegalBreaks since they aren't necessary (the whole content is put in a single box anyway) and the method is buggy.\n................\n  r603945 | vhennebert | 2007-12-13 16:10:32 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Implemented the resolution of collapsing borders in the FO tree, for every situation (normal, cell at the top of a page, cell broken), taking conditionality, headers and footers into account.\n................\n  r603959 | vhennebert | 2007-12-13 17:21:24 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Reverted change accidentally introduced in the previous commit. A proper fix needs to be found for this one.\n................\n  r603961 | vhennebert | 2007-12-13 17:31:26 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Ok, now /really/ revert the previous commit :-\\\n................\n  r603962 | vhennebert | 2007-12-13 17:32:43 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Style only: removed trailing white spaces\n................\n  r603968 | vhennebert | 2007-12-13 18:28:56 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Fixed the handling of columns in the border resolution, especially in case of column-spanning cells\n................\n  r603975 | vhennebert | 2007-12-13 18:52:48 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Removed parameter from the endPart method, since the part is already passed as a parameter of the previously called startPart method\n................\n  r603979 | vhennebert | 2007-12-13 18:57:25 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Removed parameter from the endTablePart method, as the part is already passed as as a parameter of the previously called startTablePart method\n................\n  r603990 | vhennebert | 2007-12-13 19:17:12 +0000 (Thu, 13 Dec 2007) | 2 lines\n  \n  Throw a ValidationException if table-footer is put after table-body and the table uses the collapsing border model. The footer must be known to properly resolve borders.\n................\n  r604171 | vhennebert | 2007-12-14 11:32:51 +0000 (Fri, 14 Dec 2007) | 2 lines\n  \n  Clean up: removed all reset and resetPosition methods, which pre-date the Knuth era and are no longer needed\n................\n  r604180 | vhennebert | 2007-12-14 12:23:10 +0000 (Fri, 14 Dec 2007) | 2 lines\n  \n  Reduced visibility of methods from public to package-private\n................\n  r604185 | acumiskey | 2007-12-14 13:16:06 +0000 (Fri, 14 Dec 2007) | 2 lines\n  \n  Fixed copy constructor\n................\n  r604293 | jeremias | 2007-12-14 20:58:53 +0000 (Fri, 14 Dec 2007) | 2 lines\n  \n  Bugfix: DecodeParms -> DecodeParams (introduced when I changed to generic PDF structures)\n  (fixes CCITT encoded images)\n................\n  r604299 | jeremias | 2007-12-14 21:24:14 +0000 (Fri, 14 Dec 2007) | 1 line\n  \n  Don't hack when you're tired! Reverting r604293 and instead fixing the right value. It's DecodeParams -> DecodeParms!\n................\n  r604475 | vhennebert | 2007-12-15 18:16:01 +0000 (Sat, 15 Dec 2007) | 2 lines\n  \n  Testcase for the resolution of collapsed and conditional borders in the FO tree\n................\n  r604678 | adelmelle | 2007-12-16 19:54:00 +0000 (Sun, 16 Dec 2007) | 8 lines\n  \n  Streamlining/Correction of the changes made in r603926\n  - delegate validation of the fo:wrapper's children to the parent: added static FONode.validateChildNode()\n  - narrow the condition for processing text-childnodes: \n    this is not only constrained to fo:flow and fo:static-content, but the same goes \n    for a fo:wrapper that is a direct descendant of a fo:block-container or fo:inline-container, \n    which only allow block-level content (interpretation)\n  - minor javadoc fixups/improvements\n................\n  r604814 | vhennebert | 2007-12-17 10:21:04 +0000 (Mon, 17 Dec 2007) | 2 lines\n  \n  Organized imports\n................\n  r604965 | vhennebert | 2007-12-17 18:56:46 +0000 (Mon, 17 Dec 2007) | 2 lines\n  \n  Renaming GridUnitPart into the more accurate CellPart. Moreover I was always making the confusion between gup and pgu\n................\n  r604970 | vhennebert | 2007-12-17 19:05:27 +0000 (Mon, 17 Dec 2007) | 2 lines\n  \n  Simplified addAreasAndFlushRow: there can no longer be null GridUnits, every hole in the grid is now filled with an EmptyGridUnit\n................\n  r605195 | vhennebert | 2007-12-18 11:56:38 +0000 (Tue, 18 Dec 2007) | 2 lines\n  \n  Reset previousRowsLength before a new row-group is handled\n................\n  r605246 | vhennebert | 2007-12-18 16:48:03 +0000 (Tue, 18 Dec 2007) | 2 lines\n  \n  Simplification in RowPainter: avoid the use of an array to store rowOffsets and firstRow index for each part of the table (header, footer, body). One at a time is enough.\n................\n  r605253 | vhennebert | 2007-12-18 17:01:45 +0000 (Tue, 18 Dec 2007) | 2 lines\n  \n  Renamed firstRow into firstRowIndex and moved its initialization into handeTableContentPosition\n................\n  r605295 | vhennebert | 2007-12-18 18:58:29 +0000 (Tue, 18 Dec 2007) | 2 lines\n  \n  Streamlined the recording of row offsets, by replacing Map with a List. Fixed bug #43633 in the same time.\n................\n  r605297 | vhennebert | 2007-12-18 19:02:02 +0000 (Tue, 18 Dec 2007) | 3 lines\n  \n  SVG support for AFP is an important addition IMO.\n  IIUC it will have to be advertised in the next release as \"Support for SVG images using primitive AFP graphics commands instead of bitmap images\", or something like that?\n................\n  r605517 | vhennebert | 2007-12-19 11:47:38 +0000 (Wed, 19 Dec 2007) | 2 lines\n  \n  I said currentGU can no longer be null\n................\n  r605978 | jeremias | 2007-12-20 17:00:46 +0000 (Thu, 20 Dec 2007) | 1 line\n  \n  Remove commented code.\n................\n  r606004 | jeremias | 2007-12-20 19:19:19 +0000 (Thu, 20 Dec 2007) | 1 line\n  \n  Added support for scale-down-to-fit and scale-up-to-fit.\n................\n  r607032 | jeremias | 2007-12-27 10:34:15 +0000 (Thu, 27 Dec 2007) | 4 lines\n  \n  Added new extension element: fox:external-document. It allows to add whole documents such as multi-page TIFF images to be inserted as peers to a page-sequence. Each image will make up an entire page. See the documentation for details. ATM, only single pages are possible. Multi-page images will be supported with the new image package.\n  \n  Some preparations for page-position=\"only\" but the implementation is incomplete and \"only\" has no effect, yet. (Just uploaded some stuff I once started)\n  Some javadoc cleanups.\n................\n  r607036 | jeremias | 2007-12-27 10:51:11 +0000 (Thu, 27 Dec 2007) | 1 line\n  \n  Don't just exit with no error message if the document contains no content. Pretty irritating if it does so.\n................\n  r608812 | acumiskey | 2008-01-04 12:14:33 +0000 (Fri, 04 Jan 2008) | 3 lines\n  \n  The fonts variable would have always had an empty Configuration node (non-null value) even if a <fonts/> wasn't present\n  in the fop configuration.\n................\n  r609567 | jeremias | 2008-01-07 10:52:09 +0000 (Mon, 07 Jan 2008) | 4 lines\n  \n  Reenabled documentation for fox:destination.\n  Enabled intermediate format functionality for fox:destination.\n  Added a test case to check fox:destination.\n  Deprecated FOP's XMLizable in favor of the XML Graphics Commons variant (and extend that variant).\n................\n  r609627 | jeremias | 2008-01-07 15:06:24 +0000 (Mon, 07 Jan 2008) | 5 lines\n  \n  Bugzilla #44176:\n  Support for custom fonts in Java2DRenderer and derived renderers.\n  Submitted by: Patrick Jaromin <patrick.at.jgsullivan.dot.com>\n  \n  Patch modified slightly by jeremias.\n................\n  r610020 | acumiskey | 2008-01-08 15:27:02 +0000 (Tue, 08 Jan 2008) | 2 lines\n  \n  cleaned up\n................\n  r610021 | acumiskey | 2008-01-08 15:28:56 +0000 (Tue, 08 Jan 2008) | 2 lines\n  \n  Appears to be unused/referenced and superceeded by PageGroup\n................\n  r610022 | acumiskey | 2008-01-08 15:34:07 +0000 (Tue, 08 Jan 2008) | 2 lines\n  \n  cleaned up\n................\n  r610023 | acumiskey | 2008-01-08 15:35:18 +0000 (Tue, 08 Jan 2008) | 2 lines\n  \n  fixed javadoc\n................\n  r610337 | vhennebert | 2008-01-09 11:02:08 +0000 (Wed, 09 Jan 2008) | 2 lines\n  \n  Fixed checkstyle issues: tabs and trailing spaces\n................\n  r610355 | vhennebert | 2008-01-09 12:01:21 +0000 (Wed, 09 Jan 2008) | 2 lines\n  \n  keep-together is an inherited property\n................\n  r610420 | acumiskey | 2008-01-09 15:40:25 +0000 (Wed, 09 Jan 2008) | 2 lines\n  \n  cleanup\n................\n  r610704 | jeremias | 2008-01-10 07:38:47 +0000 (Thu, 10 Jan 2008) | 1 line\n  \n  Added basic support for PDF page labels.\n................\n  r610739 | jeremias | 2008-01-10 10:13:21 +0000 (Thu, 10 Jan 2008) | 1 line\n  \n  PostScript output now generates the bounding box DSC comments for the whole document.\n................\n  r610821 | vhennebert | 2008-01-10 15:53:20 +0000 (Thu, 10 Jan 2008) | 4 lines\n  \n  - renamed variables for clarity\n  - moved the computation of a cell's content length in PrimaryGridUnit\n  - better javadoc for getHeight method in EffRow\n................\n  r610848 | vhennebert | 2008-01-10 17:41:52 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  No need to check if the end of the cell is reached when creating the areas for a row\n................\n  r610853 | vhennebert | 2008-01-10 17:54:16 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  Simplified addAreasAndFlushRow\n................\n  r610886 | vhennebert | 2008-01-10 19:23:56 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  Removed endPart() method and moved its content into addAreasAndFlushRow()\n................\n  r610891 | vhennebert | 2008-01-10 19:34:13 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  Removed accumulatedBPD which is redundant with yoffset\n................\n  r610893 | vhennebert | 2008-01-10 19:35:24 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  The return value of addAreasAndFlushRow is never used, changed it to void\n................\n  r610905 | vhennebert | 2008-01-10 19:57:29 +0000 (Thu, 10 Jan 2008) | 2 lines\n  \n  Renamed lastRow into currentRow and yoffset into currentRowOffset\n................\n  r611114 | jeremias | 2008-01-11 09:04:28 +0000 (Fri, 11 Jan 2008) | 2 lines\n  \n  Bugfix: Some string objects were not encrypted (for example in named destinations)\n  I had to refactor the PDF library a little bit but since it only affects the inner API it shouldn't be a problem that I removed some methods which caused trouble because a didn't think about encryption when I worked on the PDF library last year.\n................\n  r611142 | jeremias | 2008-01-11 11:13:42 +0000 (Fri, 11 Jan 2008) | 3 lines\n  \n  Initialized merge tracking via \"svnmerge\" with revisions \"1-594557\" from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign\n................\n  r611175 | jeremias | 2008-01-11 13:41:54 +0000 (Fri, 11 Jan 2008) | 4 lines\n  \n  Removed merge tracking for \"svnmerge\" for \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign\n  \n  (I'm not happy with the result)\n................\n  r611278 | jeremias | 2008-01-11 19:50:53 +0000 (Fri, 11 Jan 2008) | 925 lines\n  \n  Merged branch https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ImagePackageRedesign (revs 594558 to 611138) into Trunk:\n  A new image loading framework has been introduced to fix various problems with external graphics and improve performance.\n  \n  Switched to Batik 1.7.\n  Added xml-apis-ext.jar as needed by Batik 1.7.\n  Updated to latest XML Graphics Commons snapshot.\n  \n  Changelog of branch:\n  ------------------------------------------------------------------------\n  r594558 | jeremias | 2007-11-13 16:04:56 +0100 (Di, 13 Nov 2007) | 1 line\n  \n  Branch for image package redesign\n  ------------------------------------------------------------------------\n  r594560 | jeremias | 2007-11-13 16:10:35 +0100 (Di, 13 Nov 2007) | 1 line\n  \n  Implementation of Dijkstra's algorithm for finding the shortest path. Used in the new image package to find the best combination of image loaders and image converters to provide an image in the optimal form for a renderer.\n  ------------------------------------------------------------------------\n  r594848 | jeremias | 2007-11-14 13:12:50 +0100 (Mi, 14 Nov 2007) | 3 lines\n  \n  Initial upload of what I have already for the image package redesign.\n  For now, it's in a parallel package (image2). The final package name is TBD.\n  The code isn't hooked into the renderers, yet, and there's no image cache. This is still all work in progress.\n  ------------------------------------------------------------------------\n  r594851 | jeremias | 2007-11-14 13:20:12 +0100 (Mi, 14 Nov 2007) | 1 line\n  \n  Test cases and additional test files for the new image package.\n  ------------------------------------------------------------------------\n  r595305 | jeremias | 2007-11-15 15:01:37 +0100 (Do, 15 Nov 2007) | 1 line\n  \n  Small mistake while reimplementing JPEG.\n  ------------------------------------------------------------------------\n  r595308 | jeremias | 2007-11-15 15:13:36 +0100 (Do, 15 Nov 2007) | 5 lines\n  \n  Introduced a usage penalty for ImageLoaders so we can calculate an overall penalty for a pipeline.\n  Multiple image flavors can be passed to ImageManager.getImage() if the caller supports multiple formats. The image package chooses the best pipeline.\n  Implemented a converter from RenderedImage to PNG.\n  Implemented loaders for raw formats (EMF, JPEG and PNG).\n  Hooked the new image package into the RTF handler as first real proof-of-concept.\n  ------------------------------------------------------------------------\n  r596240 | jeremias | 2007-11-19 11:02:13 +0100 (Mo, 19 Nov 2007) | 1 line\n  \n  Fixed bug in pipeline selection.\n  ------------------------------------------------------------------------\n  r596242 | jeremias | 2007-11-19 11:03:06 +0100 (Mo, 19 Nov 2007) | 1 line\n  \n  MIME type in parentheses behind the URI makes more sense.\n  ------------------------------------------------------------------------\n  r599430 | jeremias | 2007-11-29 14:08:01 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Support for baseline information (needed by at least MathML).\n  ------------------------------------------------------------------------\n  r599433 | jeremias | 2007-11-29 14:09:04 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Bugfix: BMP don't all have resolution information.\n  ------------------------------------------------------------------------\n  r599434 | jeremias | 2007-11-29 14:10:54 +0100 (Do, 29 Nov 2007) | 1 line\n  \n  Change MIME type\n  ------------------------------------------------------------------------\n  r599436 | jeremias | 2007-11-29 14:17:14 +0100 (Do, 29 Nov 2007) | 3 lines\n  \n  Started integrating into Java2D and PostScript renderers and ExternalGraphic.\n  Added support for EPS graphics.\n  Added support for raw embedding of JPEG images (for PostScript).\n  ------------------------------------------------------------------------\n  r600821 | jeremias | 2007-12-04 08:51:06 +0100 (Di, 04 Dez 2007) | 5 lines\n  \n  Clean up\n  Javadocs\n  Generally make more useful.\n  Reuse FOProcessor instance for the whole run to actually feel the effect of an image cache attached to the FopFactory.\n  Add option to prompt the user before actually starting (in order to connect a VM monitor).\n  ------------------------------------------------------------------------\n  r600870 | jeremias | 2007-12-04 11:27:51 +0100 (Di, 04 Dez 2007) | 14 lines\n  \n  Note: The API of the new image package has changed a bit. (it became necessary when I introduced caching)\n  \n  The direct dependency on FOUserAgent has been removed to make the image package more universally usable. Instead an ImageContext (provided by FopFactory in FOP) and ImageSessionContext (provided by FOUserAgent in FOP) was introduced.\n  Introduced image caching with soft references (I didn't reintroduce the FOUserAgent lock, yet, because it doesn't help much)\n  ImageInfo doesn't carry the Source for the image anymore. The Source is provided by the new ImageSessionContext.java and only shared within the same thread to make things simpler and to avoid complex synchronization and cleanup.\n  Image instances now indicate whether they are cacheable (not all Image instances are cacheable, for example when they just carry an InputStream).\n  Moved the converter pipeline functionality into its own subpackage to keep \"spi\" clean.\n  Added checks in ImageSize to detect incomplete Preloaders.\n  ImageSource can now indicate whether its a fast source (loading from local file) or a slow source (loading over the network). (but this isn't used, yet)\n  Fixed a bug in WMF and SVG preloaders: they didn't close their Sources after fully loading the images.\n  Bugfix in ImageRawJPEG: it illegally reported being an EPS file\n  ImageRawStream got an \"InputStreamFactory\" so it is possible to reuse raw images if they have been loaded into memory (or to a local file which hasn't been implemented, yet).\n  The pipeline code now converts single-use raw images to reusable raw images when possible. But there's nothing built in to restrict the image size to a maximum, yet.\n  Improved JPEG preloader so it can stop early an deal with images that have to APP0 segment. Images from digicams are such an example. They carry the resolution info in the EXIF block which is currently not interpreted. Fallback is to the configured source resolution.\n  ------------------------------------------------------------------------\n  r600930 | jeremias | 2007-12-04 14:25:43 +0100 (Di, 04 Dez 2007) | 1 line\n  \n  Package HTML Files.\n  ------------------------------------------------------------------------\n  r600934 | jeremias | 2007-12-04 14:34:41 +0100 (Di, 04 Dez 2007) | 1 line\n  \n  Javadoc fixes\n  ------------------------------------------------------------------------\n  r602023 | jeremias | 2007-12-07 09:46:56 +0100 (Fr, 07 Dez 2007) | 2 lines\n  \n  Bugfix for bug in SVG preloader which didn't calculate the size of an SVG correctly when there's no explicit size.\n  \n  ------------------------------------------------------------------------\n  r602024 | jeremias | 2007-12-07 09:49:49 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Some small javadoc and logging improvements/refinements.\n  ------------------------------------------------------------------------\n  r602025 | jeremias | 2007-12-07 09:50:22 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Enable assert keyword for javadoc production.\n  ------------------------------------------------------------------------\n  r602032 | jeremias | 2007-12-07 09:59:10 +0100 (Fr, 07 Dez 2007) | 11 lines\n  \n  Added color space information and an optional ICC color profile to the basic Image interface.\n  Reimplemented transparency support (for now only for ImageIO loader and PDF output)\n  ImageIO preloader passes the already loaded metadata to the ImageIO loader through the \"custom objects\" so it doesn't have to load them again.\n  PDF library: Corrected the naming of the method indicating the \"bits per component\" (bits per component != bits per pixel)\n  PDF library: Added a method which lets a user override values in an XObject's dictionary after the major values have been set (useful not to make the PDFImage interface more complicated).\n  PDF library: Support for gray transparent colors.\n  PDF library: Added a convenience class for alpha channel bitmaps (AlphaRasterImage)\n  \n  Integration of the new image package into the PDFRenderer (currently supports all previous embedding methods except deprecated EPS embedding and CCITT embedding, now supports even more transparency options than before)\n  \n  \n  ------------------------------------------------------------------------\n  r602033 | jeremias | 2007-12-07 09:59:57 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Small optimization from my failed experiments to support native PNG embedding.\n  ------------------------------------------------------------------------\n  r602034 | jeremias | 2007-12-07 10:01:34 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Don't use \"content\" filter for ICC profiles. Instead compress using \"default\". \"content\" is for page content.\n  ------------------------------------------------------------------------\n  r602036 | jeremias | 2007-12-07 10:02:25 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Added general key for precompressed content of any kind.\n  ------------------------------------------------------------------------\n  r602037 | jeremias | 2007-12-07 10:03:39 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Various variants of the FOP logo for testing. Some of them have transparency info.\n  ------------------------------------------------------------------------\n  r602228 | jeremias | 2007-12-07 22:30:17 +0100 (Fr, 07 Dez 2007) | 4 lines\n  \n  Discarded PreloaderPNG in favor of PreloaderImageIO which now supports all formats supported by ImageIO (meaning that you can uses JPEG-2000 images if you have a suitable ImageIO codec installed).\n  ImagePreloader.getMimeType() removed because it isn't really used in the new setup.\n  ImagePreloader.getPriority() introduced which allows to prioritize preloaders and thus gives the opportunity to tweak the order in which the preloaders are checked when an image is inspected.\n  ImageLoaderImageIO can now use multiple Readers if one fails (one codec may not support all format variants, for example).\n  ------------------------------------------------------------------------\n  r602229 | jeremias | 2007-12-07 22:30:48 +0100 (Fr, 07 Dez 2007) | 1 line\n  \n  Added a toString() impl for debugging.\n  ------------------------------------------------------------------------\n  r602442 | jeremias | 2007-12-08 11:36:32 +0100 (Sa, 08 Dez 2007) | 6 lines\n  \n  Support handling images with no associated URI (from instream-foreign-object). These images are not cached.\n  Add support for plain image conversion (i.e. with no loading) for instream-foreign-object.\n  Add convenience writeTo() methods in ImageRawStream to save a few lines of code.\n  \n  Support for instream-foreign-object in RTF output.\n  Teach RTF library to handle images without an associated URL.\n  ------------------------------------------------------------------------\n  r603191 | jeremias | 2007-12-11 11:03:32 +0100 (Di, 11 Dez 2007) | 2 lines\n  \n  Bugfix: Graphics2DAdapter didn't do the graphics state save correct so subsequent images may have been painted with the wrong transformation matrix.\n  Bugfix: bitmap images didn't scale correctly when the resolutions were changed.\n  ------------------------------------------------------------------------\n  r603207 | jeremias | 2007-12-11 12:08:36 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Convenience method for obtaining the image size in points.\n  ------------------------------------------------------------------------\n  r603208 | jeremias | 2007-12-11 12:12:50 +0100 (Di, 11 Dez 2007) | 3 lines\n  \n  Precisely define the expectations for the area parameter in Graphics2DImagePainter.\n  New ImageConverter: Bitmap -> Graphics2D\n  \n  ------------------------------------------------------------------------\n  r603209 | jeremias | 2007-12-11 12:15:49 +0100 (Di, 11 Dez 2007) | 3 lines\n  \n  Refine pipeline building:\n  Expose a method to allow the PS Renderer to predict what kind of pipeline will be selected (because it doesn't support all image types as PostScript forms)\n  If there are multiple candidate pipelines for one conversion type, choose the one with the lowest penalty, not just the one that happens to be first.\n  ------------------------------------------------------------------------\n  r603250 | jeremias | 2007-12-11 15:17:32 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Removing failed experiment: raw PNG embedding didn't work out.\n  ------------------------------------------------------------------------\n  r603254 | jeremias | 2007-12-11 15:29:48 +0100 (Di, 11 Dez 2007) | 2 lines\n  \n  Plugged new image package into form generation for PostScript.\n  XML images and EPS files are currently supported as forms. They are added inline.\n  ------------------------------------------------------------------------\n  r603256 | jeremias | 2007-12-11 15:34:52 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Embedding EPS in PDF is no longer implemented as it is a deprecated feature in PDF. Therefore, this test is not needed anymore. The PDF renderer will say: \"Cannot load image (no suitable loader/converter combination available) for myfile.eps (application/postscript)\"\n  ------------------------------------------------------------------------\n  r603266 | jeremias | 2007-12-11 16:16:22 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Size calculation for images can be slightly different after the redesign due to different rounding. Give a little tolerance.\n  ------------------------------------------------------------------------\n  r603271 | jeremias | 2007-12-11 16:24:08 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Bugfix: Only generate the FixedLength if there is baseline information.\n  ------------------------------------------------------------------------\n  r603358 | jeremias | 2007-12-11 22:13:22 +0100 (Di, 11 Dez 2007) | 1 line\n  \n  Switched background images to new image package.\n  ------------------------------------------------------------------------\n  r603632 | jeremias | 2007-12-12 15:52:09 +0100 (Mi, 12 Dez 2007) | 1 line\n  \n  Switch to new image package for PDF/SVG support.\n  ------------------------------------------------------------------------\n  r603642 | jeremias | 2007-12-12 16:30:16 +0100 (Mi, 12 Dez 2007) | 3 lines\n  \n  Initialized merge tracking via \"svnmerge\" with revisions \"1-594557\" from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ------------------------------------------------------------------------\n  r603656 | jeremias | 2007-12-12 17:13:06 +0100 (Mi, 12 Dez 2007) | 307 lines\n  \n  Merged revisions 594558-603642 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r594571 | vhennebert | 2007-11-13 17:24:32 +0100 (Di, 13 Nov 2007) | 7 lines\n    \n    Moved the creation of grid units to the FO tree building stage. Brought a few improvements along with the move:\n    - bugfix: border-resolution for border-end on row-spanning cells was wrong\n    - bugfix: in case of missing cells the border-end of the table was applied to an inner cell, instead of the cell in the last column (but missing cells aren't painted yet :-\\)\n    - bugfix: in collapsing-border model, border-before and -after specified on table-column were applied to every cell of the column, instead of only the first and the last ones\n    - border resolution is now made progressively when possible, and no longer triggers the fetching of all the rows of the table\n    Added testcases for the border conflict resolution (between the various elements of a table and not only the cells)\n  ........\n    r594578 | vhennebert | 2007-11-13 17:50:09 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Moved *GridUnit from layoutmgr/table to fo/flow/table\n  ........\n    r594579 | vhennebert | 2007-11-13 17:55:54 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Changed back visibility of fields from public to package-private, due to the move of *GridUnit in the fo.flow.table package\n  ........\n    r594584 | vhennebert | 2007-11-13 18:13:19 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Use a singleton for a default BorderInfo of style none, instead of every time a new instance\n  ........\n    r594592 | vhennebert | 2007-11-13 18:39:17 +0100 (Di, 13 Nov 2007) | 2 lines\n    \n    Cleaned up RowGroupLayoutManager and TableRowIterator\n  ........\n    r594821 | vhennebert | 2007-11-14 11:18:45 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Moved EffRow to the fo.flow.table package\n  ........\n    r594829 | vhennebert | 2007-11-14 11:41:52 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Reduced visibility of some methods and constructors from public to package-private, as a consequence of the move of *GridUnit to the fo.flow.table package\n  ........\n    r594836 | vhennebert | 2007-11-14 12:14:03 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Restored the setting of the parent table-row element on grid units\n  ........\n    r594852 | vhennebert | 2007-11-14 13:21:53 +0100 (Mi, 14 Nov 2007) | 2 lines\n    \n    Restored the setting of rowIndex on primary grid units (although testcases were already working...)\n  ........\n    r595297 | jeremias | 2007-11-15 14:28:58 +0100 (Do, 15 Nov 2007) | 2 lines\n    \n    Bugzilla #43143:\n    Had to remove the Expert(Subset) Encoding detection as this caused problems with a barcode font that used dfCharset=2 but was not using ExpertSubset encoding. To detect Expert(Subset)Encoding, the AFM needs to be parsed. And since we don't support that encoding, yet, the fallback to WinAnsiEncoding should work well enough.\n  ........\n    r595637 | acumiskey | 2007-11-16 13:12:52 +0100 (Fr, 16 Nov 2007) | 3 lines\n    \n    This should improve the ability of the FontLoader when resolving PFM files\n    for Type 1 fonts on case sensitive Unix systems.\n  ........\n    r596072 | jeremias | 2007-11-18 11:48:53 +0100 (So, 18 Nov 2007) | 4 lines\n    \n    ApacheCon US is over.\n    OSSSummit was cancelled/postponed.\n    Added example for total page count using XSL 1.1\n    Adjusted total page count example to new FOP API. (Thanks to Miroslav Gregan for the hint)\n  ........\n    r596097 | jeremias | 2007-11-18 17:56:09 +0100 (So, 18 Nov 2007) | 6 lines\n    \n    Bugzilla #43605:\n    Added methods for page-number-citation and page-number-citation-last in FOEventHandler.java\n    Submitted by: V. Schappert <vschappert.at.bloomberg.net>\n    \n    Patch modified by Jeremias:\n    Bugfix: FOEventHandler.startPageNumberCitation() was also called in the case of a page-number-citation-last. Introduced abstract base classes to avoid this.\n  ........\n    r596100 | jeremias | 2007-11-18 18:17:24 +0100 (So, 18 Nov 2007) | 1 line\n    \n    Added sample as suggested by Kumar Puppala.\n  ........\n    r596390 | vhennebert | 2007-11-19 19:25:27 +0100 (Mo, 19 Nov 2007) | 2 lines\n    \n    Bugzilla #43766: breaks generated by the merging algorithm for table rows containing empty cells has always a penalty of 900\n  ........\n    r596554 | jeremias | 2007-11-20 08:14:33 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugzilla #43904:\n    Buffer the OutputStreams in our transcoders if the users forget.\n  ........\n    r596600 | jeremias | 2007-11-20 11:20:29 +0100 (Di, 20 Nov 2007) | 3 lines\n    \n    Bugzilla #43910:\n    Avoid a NullPointerException in AreaTreeHandler.endDocument().\n    Submitted by: David Delbecq <delbd.at.oma.be>\n  ........\n    r596724 | jeremias | 2007-11-20 16:56:33 +0100 (Di, 20 Nov 2007) | 3 lines\n    \n    Bugfix: Bugfix for URI resolution: Make StreamSources without system identifier work again.\n    Bugfix: Close streams opened by test font resolution in font configuration (the font URIs will be resolved again later anyway).\n    Better error message when the loading of font metric files doesn't work due to missing information in the returned Source instances.\n  ........\n    r596727 | vhennebert | 2007-11-20 17:07:32 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugfix in tables: wrong element generation by the merging algorithm when glues must be produced to cope with conditional spaces. The corresponding length was added twice: one in the glue itself and one in the following box.\n  ........\n    r596739 | cbowditch | 2007-11-20 17:49:13 +0100 (Di, 20 Nov 2007) | 1 line\n    \n    bug fix: memory leak in PropertyCache. Fix provided by Jeremias. There are still some thread synchronization issues to be addressed in the PropertyCache. See the following thread for details: http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-dev/200711.mbox/%3cBAY117-DAV109E36CC066889386AB917FB870@phx.gbl%3e\n  ........\n    r596742 | vhennebert | 2007-11-20 18:08:46 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Added a news entry about Max Berger becoming a committer. Welcome Max!\n  ........\n    r596776 | vhennebert | 2007-11-20 19:47:39 +0100 (Di, 20 Nov 2007) | 2 lines\n    \n    Bugzilla #43803: table cells having no children are allowed in relaxed validation mode.\n  ........\n    r597052 | vhennebert | 2007-11-21 13:23:59 +0100 (Mi, 21 Nov 2007) | 2 lines\n    \n    Bugfix: the last element generated by the merging algorithm may now be a glue\n  ........\n    r597448 | jeremias | 2007-11-22 17:13:05 +0100 (Do, 22 Nov 2007) | 2 lines\n    \n    First draft of a possible new intermediate format for Apache FOP.\n    Details on: http://wiki.apache.org/xmlgraphics-fop/AreaTreeIntermediateXml/NewDesign\n  ........\n    r598558 | jeremias | 2007-11-27 09:36:23 +0100 (Di, 27 Nov 2007) | 6 lines\n    \n    Bugzilla #40230:\n    Bugfix: no empty page is generated anymore if there's no content after a break-after.\n    \n    Bugzilla #43917:\n    Bugfix for border-after painting and element list generation when a forced break is involved.\n  ........\n    r599536 | vhennebert | 2007-11-29 19:31:13 +0100 (Do, 29 Nov 2007) | 4 lines\n    \n    Added fixes-bug attributes for:\n    - wrong element generation in table when glues are produced\n    - border-resolution on row-spanning cells\n  ........\n    r599746 | jeremias | 2007-11-30 10:04:54 +0100 (Fr, 30 Nov 2007) | 2 lines\n    \n    Bugzilla #37993:\n    Bugfix: allow multiple bookmarks to point at the same destination.\n  ........\n    r600195 | adelmelle | 2007-12-01 22:11:53 +0100 (Sa, 01 Dez 2007) | 1 line\n    \n    Correction and simplification of the PropertyCache: subclass WeakReference and remove internal threading\n  ........\n    r600467 | jeremias | 2007-12-03 11:16:27 +0100 (Mo, 03 Dez 2007) | 2 lines\n    \n    Log RuntimeExceptions during rendering so that they are at least visible somewhere if someone doesn't set an ErrorListener on the XSLT processor (this could lead to exceptions being swallowed). This is a temporary measure until we have time to improve the exception handling in FOP.\n    The original problem that led to this change was: \"The number of this PDFNumber must not be empty\" while producing a PDF/A with customized filter entries in the PDF configuration. The exception was a follow-up exception after a PDFConformanceException that was swallowed by a default ErrorListener.\n  ........\n    r600521 | jeremias | 2007-12-03 14:21:06 +0100 (Mo, 03 Dez 2007) | 1 line\n    \n    Added a possibility to rerun the whole run a defined number of times to test for possible issues outside a single rendering run.\n  ........\n    r600529 | jeremias | 2007-12-03 14:32:04 +0100 (Mo, 03 Dez 2007) | 1 line\n    \n    Oops.\n  ........\n    r601413 | vhennebert | 2007-12-05 17:56:47 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Typo in property: svn:kewords -> svn:keywords\n  ........\n    r601415 | acumiskey | 2007-12-05 18:11:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadocs\n  ........\n    r601416 | acumiskey | 2007-12-05 18:12:54 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc\n  ........\n    r601417 | acumiskey | 2007-12-05 18:13:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc\n  ........\n    r601419 | acumiskey | 2007-12-05 18:15:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Improved use of logging\n  ........\n    r601423 | acumiskey | 2007-12-05 18:19:43 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Corrected javadoc, fixed checkstyle issues, and now also correctly caters for negative number conversions\n  ........\n    r601424 | acumiskey | 2007-12-05 18:21:15 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Fixed checkstyle issues\n  ........\n    r601426 | acumiskey | 2007-12-05 18:24:15 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601427 | acumiskey | 2007-12-05 18:25:07 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601428 | acumiskey | 2007-12-05 18:25:58 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601429 | acumiskey | 2007-12-05 18:27:06 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601430 | acumiskey | 2007-12-05 18:28:03 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601431 | acumiskey | 2007-12-05 18:28:48 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601432 | acumiskey | 2007-12-05 18:29:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601433 | acumiskey | 2007-12-05 18:30:04 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601434 | acumiskey | 2007-12-05 18:31:20 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601435 | acumiskey | 2007-12-05 18:32:29 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601436 | acumiskey | 2007-12-05 18:34:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601437 | acumiskey | 2007-12-05 18:35:31 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601438 | acumiskey | 2007-12-05 18:36:12 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes and cleanup\n  ........\n    r601439 | acumiskey | 2007-12-05 18:37:40 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601440 | acumiskey | 2007-12-05 18:39:54 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601442 | acumiskey | 2007-12-05 18:42:13 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601443 | acumiskey | 2007-12-05 18:42:48 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601444 | acumiskey | 2007-12-05 18:43:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601445 | acumiskey | 2007-12-05 18:44:36 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601446 | acumiskey | 2007-12-05 18:45:20 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601447 | acumiskey | 2007-12-05 18:47:44 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601448 | acumiskey | 2007-12-05 18:48:56 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601449 | acumiskey | 2007-12-05 18:49:46 +0100 (Mi, 05 Dez 2007) | 2 lines\n    \n    Checkstyle fixes\n  ........\n    r601712 | acumiskey | 2007-12-06 12:57:14 +0100 (Do, 06 Dez 2007) | 2 lines\n    \n    Temporary fix to the build\n  ........\n    r602045 | jeremias | 2007-12-07 10:20:28 +0100 (Fr, 07 Dez 2007) | 1 line\n    \n    Avoid a NPE in toString().\n  ........\n    r602125 | maxberger | 2007-12-07 16:36:53 +0100 (Fr, 07 Dez 2007) | 6 lines\n    \n    Updated xmlgraphics from SVN\n    Added autodetection of fonts in jar files (x-font and x-font-truetype)\n    Added files needed for testcase\n    Please note: Actual testcase is still missing!\n  ........\n    r602898 | maxberger | 2007-12-10 14:35:33 +0100 (Mo, 10 Dez 2007) | 2 lines\n    \n    Added documentation for font-in-jar-files\n  ........\n    r603590 | acumiskey | 2007-12-12 13:24:10 +0100 (Mi, 12 Dez 2007) | 4 lines\n    \n    * Added an SVG handler and Graphics2D implementation for AFP which injects AFP GOCA structured fields into the AFPDataStream.\n    * Fixed many checkstyle problems.\n    * Updated xmlgraphics-commons-1.3svn.jar to include changes to TextHandler\n  ........\n    r603592 | acumiskey | 2007-12-12 13:26:39 +0100 (Mi, 12 Dez 2007) | 2 lines\n    \n    Updated status with SVG support for AFP.\n  ........\n  \n  ------------------------------------------------------------------------\n  r603661 | jeremias | 2007-12-12 17:20:09 +0100 (Mi, 12 Dez 2007) | 1 line\n  \n  Fix javadoc\n  ------------------------------------------------------------------------\n  r603886 | jeremias | 2007-12-13 12:15:48 +0100 (Do, 13 Dez 2007) | 1 line\n  \n  Copy/paste programming is dangerous. :-)\n  ------------------------------------------------------------------------\n  r603902 | jeremias | 2007-12-13 13:17:56 +0100 (Do, 13 Dez 2007) | 2 lines\n  \n  Factored out all image handling code in the PDFRenderer into PDFImageHandler classes. The interface was introduced to handle PDF-in-PDF images.\n  The PDFImageHandler interface changes in a backwards-incompatible way but since the PDF-in-PDF plug-in probably has the only implementation, that's not very problematic. I'll release a new version as soon as the image stuff is merged back into Trunk.\n  ------------------------------------------------------------------------\n  r603937 | jeremias | 2007-12-13 16:20:46 +0100 (Do, 13 Dez 2007) | 1 line\n  \n  Some cleanup\n  ------------------------------------------------------------------------\n  r603938 | jeremias | 2007-12-13 16:23:23 +0100 (Do, 13 Dez 2007) | 2 lines\n  \n  Switch PCL renderer to new image package.\n  Add an option to force a color canvas (RGB) instead of a gray canvas. Set this to true for all SVG graphics since Batik does not seem to support gradients on a grayscale canvas (IllegalArgumentException).\n  ------------------------------------------------------------------------\n  r604122 | jeremias | 2007-12-14 08:58:56 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Stupid copy/paste again.\n  ------------------------------------------------------------------------\n  r604135 | jeremias | 2007-12-14 10:04:43 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Preliminary changes to switch to the new image library. TIFF optimizations still missing. Untested.\n  ------------------------------------------------------------------------\n  r604144 | jeremias | 2007-12-14 11:12:41 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Switch to new image package. At some point we will probably want to remove this example as JEuclid has a better plug-in now.\n  ------------------------------------------------------------------------\n  r604150 | jeremias | 2007-12-14 11:27:39 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Old JEuclid doesn't notice itself if no MathML document is loaded.\n  ------------------------------------------------------------------------\n  r604155 | jeremias | 2007-12-14 11:48:07 +0100 (Fr, 14 Dez 2007) | 2 lines\n  \n  Switched to new image package.\n  The preloader simply loads the full document and converts it to SVG. That's the only way to determine the intrinsic size of the image.\n  ------------------------------------------------------------------------\n  r604157 | jeremias | 2007-12-14 11:51:21 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  No longer needed.\n  ------------------------------------------------------------------------\n  r604214 | jeremias | 2007-12-14 17:07:30 +0100 (Fr, 14 Dez 2007) | 1 line\n  \n  Added work-around for decoding CMYK JPEGs with ImageIO (no guarantees for color fidelity but it's better than not being able to use CMYK images).\n  ------------------------------------------------------------------------\n  r604297 | jeremias | 2007-12-14 22:14:12 +0100 (Fr, 14 Dez 2007) | 68 lines\n  \n  Merged revisions 603643-604293 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r603890 | vhennebert | 2007-12-13 12:35:17 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Fixed @throws statements in javadoc\n  ........\n    r603926 | adelmelle | 2007-12-13 15:43:08 +0100 (Do, 13 Dez 2007) | 4 lines\n    \n    Minor tweaks:\n    * only add text to a fo:wrapper if it is not a direct flow-descendant\n    * error if an fo:wrapper that is a direct flow-descendant contains inline-level children\n  ........\n    r603943 | vhennebert | 2007-12-13 16:55:29 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed calls to removeLegalBreaks since they aren't necessary (the whole content is put in a single box anyway) and the method is buggy.\n  ........\n    r603945 | vhennebert | 2007-12-13 17:10:32 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Implemented the resolution of collapsing borders in the FO tree, for every situation (normal, cell at the top of a page, cell broken), taking conditionality, headers and footers into account.\n  ........\n    r603959 | vhennebert | 2007-12-13 18:21:24 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Reverted change accidentally introduced in the previous commit. A proper fix needs to be found for this one.\n  ........\n    r603961 | vhennebert | 2007-12-13 18:31:26 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Ok, now /really/ revert the previous commit :-\\\n  ........\n    r603962 | vhennebert | 2007-12-13 18:32:43 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Style only: removed trailing white spaces\n  ........\n    r603968 | vhennebert | 2007-12-13 19:28:56 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Fixed the handling of columns in the border resolution, especially in case of column-spanning cells\n  ........\n    r603975 | vhennebert | 2007-12-13 19:52:48 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed parameter from the endPart method, since the part is already passed as a parameter of the previously called startPart method\n  ........\n    r603979 | vhennebert | 2007-12-13 19:57:25 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Removed parameter from the endTablePart method, as the part is already passed as as a parameter of the previously called startTablePart method\n  ........\n    r603990 | vhennebert | 2007-12-13 20:17:12 +0100 (Do, 13 Dez 2007) | 2 lines\n    \n    Throw a ValidationException if table-footer is put after table-body and the table uses the collapsing border model. The footer must be known to properly resolve borders.\n  ........\n    r604171 | vhennebert | 2007-12-14 12:32:51 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Clean up: removed all reset and resetPosition methods, which pre-date the Knuth era and are no longer needed\n  ........\n    r604180 | vhennebert | 2007-12-14 13:23:10 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Reduced visibility of methods from public to package-private\n  ........\n    r604185 | acumiskey | 2007-12-14 14:16:06 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Fixed copy constructor\n  ........\n    r604293 | jeremias | 2007-12-14 21:58:53 +0100 (Fr, 14 Dez 2007) | 2 lines\n    \n    Bugfix: DecodeParms -> DecodeParams (introduced when I changed to generic PDF structures)\n    (fixes CCITT encoded images)\n  ........\n  \n  ------------------------------------------------------------------------\n  r604301 | jeremias | 2007-12-14 22:26:27 +0100 (Fr, 14 Dez 2007) | 9 lines\n  \n  Merged revisions 604294-604299 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r604299 | jeremias | 2007-12-14 22:24:14 +0100 (Fr, 14 Dez 2007) | 1 line\n    \n    Don't hack when you're tired! Reverting r604293 and instead fixing the right value. It's DecodeParams -> DecodeParms!\n  ........\n  \n  ------------------------------------------------------------------------\n  r604930 | jeremias | 2007-12-17 18:05:47 +0100 (Mo, 17 Dez 2007) | 2 lines\n  \n  Dispose ImageReader when done reading.\n  Don't close streams as some codecs appear to do \"late reading\" of the image, i.e. only when the rasters are accessed, at which point they still seek on the stream. For this, the streams must remain open. I hope the codecs all properly close the streams once they don't need them anymore. The javadocs are not clear enough in this regards, IMO.\n  ------------------------------------------------------------------------\n  r604968 | jeremias | 2007-12-17 20:03:45 +0100 (Mo, 17 Dez 2007) | 3 lines\n  \n  Added an isSupported() method to ImageLoaderFactory so we can check early if an ImageLoader may or may not support a particular subformat. This is used to allow optimized loading of CCITT compressed TIFF images.\n  Support for undecoded embedding of single-strip CCITT compressed images for PDF, PostScript and AFP.\n  Added a fallback mechanism for ImageLoaders: if one ImageLoader cannot load a particular image, try equivalent others registered for the same format.\n  ------------------------------------------------------------------------\n  r604972 | jeremias | 2007-12-17 20:07:43 +0100 (Mo, 17 Dez 2007) | 1 line\n  \n  Update Commons\n  ------------------------------------------------------------------------\n  r605138 | jeremias | 2007-12-18 09:42:41 +0100 (Di, 18 Dez 2007) | 2 lines\n  \n  Support for specifying a particular page number of a multi-page image (such as TIFF).\n  Format: http://localhost/images/scan1.tif#page=3\n  ------------------------------------------------------------------------\n  r605479 | jeremias | 2007-12-19 10:18:33 +0100 (Mi, 19 Dez 2007) | 3 lines\n  \n  Removed new image package after the copying it to XML Graphics Commons.\n  Adjusted to use the Commons' version.\n  Batik-dependent plugins remain but will eventually need a different resting place.\n  ------------------------------------------------------------------------\n  r605486 | jeremias | 2007-12-19 10:39:33 +0100 (Mi, 19 Dez 2007) | 1 line\n  \n  Adjust the (pre)loader registration for the demo extensions.\n  ------------------------------------------------------------------------\n  r605567 | jeremias | 2007-12-19 16:03:25 +0100 (Mi, 19 Dez 2007) | 1 line\n  \n  Fixed scaling and translation (didn't work correctly in certain situations)\n  ------------------------------------------------------------------------\n  r607034 | jeremias | 2007-12-27 11:47:12 +0100 (Do, 27 Dez 2007) | 71 lines\n  \n  Merged revisions 604300-607033 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r604475 | vhennebert | 2007-12-15 19:16:01 +0100 (Sa, 15 Dez 2007) | 2 lines\n    \n    Testcase for the resolution of collapsed and conditional borders in the FO tree\n  ........\n    r604678 | adelmelle | 2007-12-16 20:54:00 +0100 (So, 16 Dez 2007) | 8 lines\n    \n    Streamlining/Correction of the changes made in r603926\n    - delegate validation of the fo:wrapper's children to the parent: added static FONode.validateChildNode()\n    - narrow the condition for processing text-childnodes: \n      this is not only constrained to fo:flow and fo:static-content, but the same goes \n      for a fo:wrapper that is a direct descendant of a fo:block-container or fo:inline-container, \n      which only allow block-level content (interpretation)\n    - minor javadoc fixups/improvements\n  ........\n    r604814 | vhennebert | 2007-12-17 11:21:04 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Organized imports\n  ........\n    r604965 | vhennebert | 2007-12-17 19:56:46 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Renaming GridUnitPart into the more accurate CellPart. Moreover I was always making the confusion between gup and pgu\n  ........\n    r604970 | vhennebert | 2007-12-17 20:05:27 +0100 (Mo, 17 Dez 2007) | 2 lines\n    \n    Simplified addAreasAndFlushRow: there can no longer be null GridUnits, every hole in the grid is now filled with an EmptyGridUnit\n  ........\n    r605195 | vhennebert | 2007-12-18 12:56:38 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Reset previousRowsLength before a new row-group is handled\n  ........\n    r605246 | vhennebert | 2007-12-18 17:48:03 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Simplification in RowPainter: avoid the use of an array to store rowOffsets and firstRow index for each part of the table (header, footer, body). One at a time is enough.\n  ........\n    r605253 | vhennebert | 2007-12-18 18:01:45 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Renamed firstRow into firstRowIndex and moved its initialization into handeTableContentPosition\n  ........\n    r605295 | vhennebert | 2007-12-18 19:58:29 +0100 (Di, 18 Dez 2007) | 2 lines\n    \n    Streamlined the recording of row offsets, by replacing Map with a List. Fixed bug #43633 in the same time.\n  ........\n    r605297 | vhennebert | 2007-12-18 20:02:02 +0100 (Di, 18 Dez 2007) | 3 lines\n    \n    SVG support for AFP is an important addition IMO.\n    IIUC it will have to be advertised in the next release as \"Support for SVG images using primitive AFP graphics commands instead of bitmap images\", or something like that?\n  ........\n    r605517 | vhennebert | 2007-12-19 12:47:38 +0100 (Mi, 19 Dez 2007) | 2 lines\n    \n    I said currentGU can no longer be null\n  ........\n    r605978 | jeremias | 2007-12-20 18:00:46 +0100 (Do, 20 Dez 2007) | 1 line\n    \n    Remove commented code.\n  ........\n    r606004 | jeremias | 2007-12-20 20:19:19 +0100 (Do, 20 Dez 2007) | 1 line\n    \n    Added support for scale-down-to-fit and scale-up-to-fit.\n  ........\n    r607032 | jeremias | 2007-12-27 11:34:15 +0100 (Do, 27 Dez 2007) | 4 lines\n    \n    Added new extension element: fox:external-document. It allows to add whole documents such as multi-page TIFF images to be inserted as peers to a page-sequence. Each image will make up an entire page. See the documentation for details. ATM, only single pages are possible. Multi-page images will be supported with the new image package.\n    \n    Some preparations for page-position=\"only\" but the implementation is incomplete and \"only\" has no effect, yet. (Just uploaded some stuff I once started)\n    Some javadoc cleanups.\n  ........\n  \n  ------------------------------------------------------------------------\n  r607091 | jeremias | 2007-12-27 18:13:45 +0100 (Do, 27 Dez 2007) | 1 line\n  \n  Avoid cutting away the URI fragment when building URLs from filenames.\n  ------------------------------------------------------------------------\n  r607092 | jeremias | 2007-12-27 18:15:49 +0100 (Do, 27 Dez 2007) | 3 lines\n  \n  Switched fox:external-document to new image package.\n  Added multi-page support for fox:external-document.\n  Changed multi-page.tiff: page 4 is now bigger than all other pages. (to make sure that individually sized pages are handled properly)\n  ------------------------------------------------------------------------\n  r607188 | jeremias | 2007-12-28 09:38:26 +0100 (Fr, 28 Dez 2007) | 2 lines\n  \n  Throwing IllegalStateException causes a prior exception to be swallowed by Xalan-J. Need to throw a SAXException instead.\n  Instead of logging an error about the element mismatch throw a SAXException because the logging only confuses the user as it's practically always a follow-up exception of an exception happening earlier in the respective startElement() event.\n  ------------------------------------------------------------------------\n  r607249 | jeremias | 2007-12-28 15:27:39 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Metadata didn't get transported to the renderer when only fox:external-document is used.\n  ------------------------------------------------------------------------\n  r607256 | jeremias | 2007-12-28 16:06:35 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Corrected content model.\n  ------------------------------------------------------------------------\n  r607261 | jeremias | 2007-12-28 16:11:56 +0100 (Fr, 28 Dez 2007) | 1 line\n  \n  Added -imagein to command-line so (multi-page) images such as TIFF files can be converted to PDF and other formats supported by FOP. The default stylesheet can be overwritten (with -xslt) if desired.\n  ------------------------------------------------------------------------\n  r609530 | jeremias | 2008-01-07 09:16:09 +0100 (Mo, 07 Jan 2008) | 1 line\n  \n  Fixed copy/paste mistake. Thanks for spotting it, Vincent.\n  ------------------------------------------------------------------------\n  r609600 | jeremias | 2008-01-07 14:28:53 +0100 (Mo, 07 Jan 2008) | 1 line\n  \n  Removed \"image2\" package again and moved the Batik-dependent implementations under the old \"image\" package. In this form, the deprecated code doesn't conflict with the new implementations anymore.\n  ------------------------------------------------------------------------\n  r610029 | jeremias | 2008-01-08 16:48:53 +0100 (Di, 08 Jan 2008) | 3 lines\n  \n  Added minimal support for the .minimum/.maximum components of block/inline-progression-dimension on fo:external-graphic and fo:instream-foreign-object. This will only constrain the image itself but not allow the layout engine itself to resize the image as seen fit.\n  Added missing Javadocs in ImageLayout.java.\n  \n  ------------------------------------------------------------------------\n  r611120 | jeremias | 2008-01-11 10:20:57 +0100 (Fr, 11 Jan 2008) | 100 lines\n  \n  Merged revisions 607034-611115 via svnmerge from \n  https://svn.apache.org/repos/asf/xmlgraphics/fop/trunk\n  \n  ........\n    r607036 | jeremias | 2007-12-27 11:51:11 +0100 (Do, 27 Dez 2007) | 1 line\n    \n    Don't just exit with no error message if the document contains no content. Pretty irritating if it does so.\n  ........\n    r608812 | acumiskey | 2008-01-04 13:14:33 +0100 (Fr, 04 Jan 2008) | 3 lines\n    \n    The fonts variable would have always had an empty Configuration node (non-null value) even if a <fonts/> wasn't present\n    in the fop configuration.\n  ........\n    r609567 | jeremias | 2008-01-07 11:52:09 +0100 (Mo, 07 Jan 2008) | 4 lines\n    \n    Reenabled documentation for fox:destination.\n    Enabled intermediate format functionality for fox:destination.\n    Added a test case to check fox:destination.\n    Deprecated FOP's XMLizable in favor of the XML Graphics Commons variant (and extend that variant).\n  ........\n    r609627 | jeremias | 2008-01-07 16:06:24 +0100 (Mo, 07 Jan 2008) | 5 lines\n    \n    Bugzilla #44176:\n    Support for custom fonts in Java2DRenderer and derived renderers.\n    Submitted by: Patrick Jaromin <patrick.at.jgsullivan.dot.com>\n    \n    Patch modified slightly by jeremias.\n  ........\n    r610020 | acumiskey | 2008-01-08 16:27:02 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    cleaned up\n  ........\n    r610021 | acumiskey | 2008-01-08 16:28:56 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    Appears to be unused/referenced and superceeded by PageGroup\n  ........\n    r610022 | acumiskey | 2008-01-08 16:34:07 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    cleaned up\n  ........\n    r610023 | acumiskey | 2008-01-08 16:35:18 +0100 (Di, 08 Jan 2008) | 2 lines\n    \n    fixed javadoc\n  ........\n    r610337 | vhennebert | 2008-01-09 12:02:08 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    Fixed checkstyle issues: tabs and trailing spaces\n  ........\n    r610355 | vhennebert | 2008-01-09 13:01:21 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    keep-together is an inherited property\n  ........\n    r610420 | acumiskey | 2008-01-09 16:40:25 +0100 (Mi, 09 Jan 2008) | 2 lines\n    \n    cleanup\n  ........\n    r610704 | jeremias | 2008-01-10 08:38:47 +0100 (Do, 10 Jan 2008) | 1 line\n    \n    Added basic support for PDF page labels.\n  ........\n    r610739 | jeremias | 2008-01-10 11:13:21 +0100 (Do, 10 Jan 2008) | 1 line\n    \n    PostScript output now generates the bounding box DSC comments for the whole document.\n  ........\n    r610821 | vhennebert | 2008-01-10 16:53:20 +0100 (Do, 10 Jan 2008) | 4 lines\n    \n    - renamed variables for clarity\n    - moved the computation of a cell's content length in PrimaryGridUnit\n    - better javadoc for getHeight method in EffRow\n  ........\n    r610848 | vhennebert | 2008-01-10 18:41:52 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    No need to check if the end of the cell is reached when creating the areas for a row\n  ........\n    r610853 | vhennebert | 2008-01-10 18:54:16 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Simplified addAreasAndFlushRow\n  ........\n    r610886 | vhennebert | 2008-01-10 20:23:56 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Removed endPart() method and moved its content into addAreasAndFlushRow()\n  ........\n    r610891 | vhennebert | 2008-01-10 20:34:13 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Removed accumulatedBPD which is redundant with yoffset\n  ........\n    r610893 | vhennebert | 2008-01-10 20:35:24 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    The return value of addAreasAndFlushRow is never used, changed it to void\n  ........\n    r610905 | vhennebert | 2008-01-10 20:57:29 +0100 (Do, 10 Jan 2008) | 2 lines\n    \n    Renamed lastRow into currentRow and yoffset into currentRowOffset\n  ........\n    r611114 | jeremias | 2008-01-11 10:04:28 +0100 (Fr, 11 Jan 2008) | 2 lines\n    \n    Bugfix: Some string objects were not encrypted (for example in named destinations)\n    I had to refactor the PDF library a little bit but since it only affects the inner API it shouldn't be a problem that I removed some methods which caused trouble because a didn't think about encryption when I worked on the PDF library last year.\n  ........\n  \n  ------------------------------------------------------------------------\n  r611133 | jeremias | 2008-01-11 11:45:01 +0100 (Fr, 11 Jan 2008) | 4 lines\n  \n  Fixed merge problems.\n  Fixed a NPE when a mask is null in BitmapImage.java\n  Add support for properly encoding binary data as a hexadecimal string object (including encryption).\n  Adjust palette generation for indexed bitmaps to work correctly with encryption.\n  ------------------------------------------------------------------------\n  r611138 | jeremias | 2008-01-11 11:59:27 +0100 (Fr, 11 Jan 2008) | 1 line\n  \n  Removed empty package.\n  ------------------------------------------------------------------------\n................\n  r611285 | jeremias | 2008-01-11 20:03:36 +0000 (Fri, 11 Jan 2008) | 1 line\n  \n  Removed stray reference to ImageFactory.\n................\n  r611766 | jeremias | 2008-01-14 11:01:11 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  java.net.URI doesn't eat non-escaped URIs so I added an escaping method to URISpecification that should cover most cases. Usually, it's just about a space in a filename.\n................\n  r611767 | jeremias | 2008-01-14 11:02:34 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  Restore default constructor for PDFArray.\n................\n  r611768 | jeremias | 2008-01-14 11:02:54 +0000 (Mon, 14 Jan 2008) | 1 line\n  \n  Clear parent if later on an object number is assigned to a PDFObject which means it is a top-level object.\n................\n  r612560 | jeremias | 2008-01-16 20:14:56 +0000 (Wed, 16 Jan 2008) | 1 line\n  \n  Fixed dead link.\n................\n  r612785 | acumiskey | 2008-01-17 10:36:36 +0000 (Thu, 17 Jan 2008) | 1 line\n  \n  added serial version id\n................\n  r612815 | jeremias | 2008-01-17 13:37:04 +0000 (Thu, 17 Jan 2008) | 6 lines\n  \n  Fixed logic error setting the transformation matrix for block-container viewports (applies to absolute and fixed block-containers only). The CTM now only rotates and shifts the content as necessary for reference-orientation and writing-mode. All the rest of the transformation is done by the renderer which allows to add additional transformations as made possible by fox:transform (see below).\n  Important: External renderer implementations need to adjust for the change and implement the new method concatenateTransformationMatrix(AffineTransform) if the renderer is derived from AbstractPathOrientedRenderer.\n  \n  New extension attribute fox:transform on fo:block-container allows free-form transformation (rotation, scaling etc.) of absolute and fixed block-containers. Supported only for PDF, PS and Java2D-based renderers.\n  \n  Added missing regio\u2026",
        "parent": "https://github.com/apache/xmlgraphics-fop/commit/9411abb3e7861258684ae435bf8f1e7020576426",
        "repo": "xmlgraphics-fop",
        "unit_tests": [
            "TestEventProducer.java",
            "TestElementMapping.java"
        ]
    }
}