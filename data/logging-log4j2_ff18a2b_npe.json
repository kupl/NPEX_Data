[
    {
        "repo": "logging-log4j2",
        "commit": "https://github.com/apache/logging-log4j2/commit/ff18a2b768d0782d05e0a197e2d918216e636aa3",
        "bug_id": "logging-log4j2_ff18a2b",
        "message": "LOG4J-462, LOG4J-465 Log4jLogEvent constructor and RingBufferLogEvent#getLevel convert null Level to Level.OFF to prevent NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1555339 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/logging-log4j2/commit/682403c5067c0a2ef21e528f308edadef0a992e1",
        "patched_files": [
            "changes.xml",
            "RingBufferLogEvent.java",
            "Log4jLogEvent.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/logging-log4j2/raw/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/main/java/org/apache/logging/log4j/core/async/RingBufferLogEvent.java",
                "contents_url": "https://api.github.com/repos/apache/logging-log4j2/contents/log4j-core/src/main/java/org/apache/logging/log4j/core/async/RingBufferLogEvent.java?ref=ff18a2b768d0782d05e0a197e2d918216e636aa3",
                "filename": "log4j-core/src/main/java/org/apache/logging/log4j/core/async/RingBufferLogEvent.java",
                "deletions": 0,
                "sha": "22ab2e51cec9f01318fd18882560aacc99cbd569",
                "blob_url": "https://github.com/apache/logging-log4j2/blob/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/main/java/org/apache/logging/log4j/core/async/RingBufferLogEvent.java",
                "patch": "@@ -143,6 +143,9 @@ public String getFQCN() {\n \n     @Override\n     public Level getLevel() {\n+        if (level == null) {\n+            level = Level.OFF; // LOG4J2-462, LOG4J2-465\n+        }\n         return level;\n     }\n ",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/logging-log4j2/raw/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java",
                "contents_url": "https://api.github.com/repos/apache/logging-log4j2/contents/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java?ref=ff18a2b768d0782d05e0a197e2d918216e636aa3",
                "filename": "log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java",
                "deletions": 1,
                "sha": "046655f1ca728cdea30b0e84d356bb31a46db294",
                "blob_url": "https://github.com/apache/logging-log4j2/blob/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java",
                "patch": "@@ -158,7 +158,7 @@ private Log4jLogEvent(final String loggerName, final Marker marker, final String\n         name = loggerName;\n         this.marker = marker;\n         this.fqcnOfLogger = fqcn;\n-        this.level = level;\n+        this.level = (level == null) ? Level.OFF : level; // LOG4J2-462, LOG4J2-465\n         this.message = message;\n         this.throwable = t;\n         this.mdc = mdc;",
                "changes": 2
            },
            {
                "status": "added",
                "additions": 148,
                "raw_url": "https://github.com/apache/logging-log4j2/raw/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/test/java/org/apache/logging/log4j/core/async/RingBufferLogEventTest.java",
                "contents_url": "https://api.github.com/repos/apache/logging-log4j2/contents/log4j-core/src/test/java/org/apache/logging/log4j/core/async/RingBufferLogEventTest.java?ref=ff18a2b768d0782d05e0a197e2d918216e636aa3",
                "filename": "log4j-core/src/test/java/org/apache/logging/log4j/core/async/RingBufferLogEventTest.java",
                "deletions": 0,
                "sha": "7d3bb6d4b91d6a78cca75e4e6cda8f2867be47cc",
                "blob_url": "https://github.com/apache/logging-log4j2/blob/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/test/java/org/apache/logging/log4j/core/async/RingBufferLogEventTest.java",
                "patch": "@@ -0,0 +1,148 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache license, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the license for the specific language governing permissions and\n+ * limitations under the license.\n+ */\n+\n+package org.apache.logging.log4j.core.async;\n+\n+import static org.junit.Assert.*;\n+\n+import java.util.Map;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n+import org.apache.logging.log4j.ThreadContext.ContextStack;\n+import org.apache.logging.log4j.message.Message;\n+import org.apache.logging.log4j.message.TimestampMessage;\n+import org.junit.Test;\n+\n+/**\n+ * Tests the RingBufferLogEvent class.\n+ */\n+public class RingBufferLogEventTest {\n+\n+    @Test\n+    public void testGetLevelReturnsOffIfNullLevelSet() {\n+        RingBufferLogEvent evt = new RingBufferLogEvent();\n+        String loggerName = null;\n+        Marker marker = null;\n+        String fqcn = null;\n+        Level level = null;\n+        Message data = null;\n+        Throwable t = null;\n+        Map<String, String> map = null;\n+        ContextStack contextStack = null;\n+        String threadName = null;\n+        StackTraceElement location = null;\n+        long currentTimeMillis = 0;\n+        evt.setValues(null, loggerName, marker, fqcn, level, data, t, map,\n+                contextStack, threadName, location, currentTimeMillis);\n+        assertEquals(Level.OFF, evt.getLevel());\n+    }\n+\n+    @Test\n+    public void testGetMessageReturnsNonNullMessage() {\n+        RingBufferLogEvent evt = new RingBufferLogEvent();\n+        String loggerName = null;\n+        Marker marker = null;\n+        String fqcn = null;\n+        Level level = null;\n+        Message data = null;\n+        Throwable t = null;\n+        Map<String, String> map = null;\n+        ContextStack contextStack = null;\n+        String threadName = null;\n+        StackTraceElement location = null;\n+        long currentTimeMillis = 0;\n+        evt.setValues(null, loggerName, marker, fqcn, level, data, t, map,\n+                contextStack, threadName, location, currentTimeMillis);\n+        assertNotNull(evt.getMessage());\n+    }\n+\n+    @Test\n+    public void testGetMillisReturnsConstructorMillisForNormalMessage() {\n+        RingBufferLogEvent evt = new RingBufferLogEvent();\n+        String loggerName = null;\n+        Marker marker = null;\n+        String fqcn = null;\n+        Level level = null;\n+        Message data = null;\n+        Throwable t = null;\n+        Map<String, String> map = null;\n+        ContextStack contextStack = null;\n+        String threadName = null;\n+        StackTraceElement location = null;\n+        long currentTimeMillis = 123;\n+        evt.setValues(null, loggerName, marker, fqcn, level, data, t, map,\n+                contextStack, threadName, location, currentTimeMillis);\n+        assertEquals(123, evt.getMillis());\n+    }\n+\n+    static class TimeMsg implements Message, TimestampMessage {\n+        private static final long serialVersionUID = -2038413535672337079L;\n+        private final String msg;\n+        private final long timestamp;\n+\n+        public TimeMsg(String msg, long timestamp) {\n+            this.msg = msg;\n+            this.timestamp = timestamp;\n+        }\n+\n+        @Override\n+        public long getTimestamp() {\n+            return timestamp;\n+        }\n+\n+        @Override\n+        public String getFormattedMessage() {\n+            return msg;\n+        }\n+\n+        @Override\n+        public String getFormat() {\n+            return null;\n+        }\n+\n+        @Override\n+        public Object[] getParameters() {\n+            return null;\n+        }\n+\n+        @Override\n+        public Throwable getThrowable() {\n+            return null;\n+        }\n+    }\n+\n+    @Test\n+    public void testGetMillisReturnsMsgTimestampForTimestampMessage() {\n+        RingBufferLogEvent evt = new RingBufferLogEvent();\n+        String loggerName = null;\n+        Marker marker = null;\n+        String fqcn = null;\n+        Level level = null;\n+        Message data = new TimeMsg(\"\", 567);\n+        Throwable t = null;\n+        Map<String, String> map = null;\n+        ContextStack contextStack = null;\n+        String threadName = null;\n+        StackTraceElement location = null;\n+        long currentTimeMillis = 123;\n+        evt.setValues(null, loggerName, marker, fqcn, level, data, t, map,\n+                contextStack, threadName, location, currentTimeMillis);\n+        assertEquals(567, evt.getMillis());\n+    }\n+\n+}",
                "changes": 148
            },
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/logging-log4j2/raw/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/test/java/org/apache/logging/log4j/core/impl/Log4jLogEventTest.java",
                "contents_url": "https://api.github.com/repos/apache/logging-log4j2/contents/log4j-core/src/test/java/org/apache/logging/log4j/core/impl/Log4jLogEventTest.java?ref=ff18a2b768d0782d05e0a197e2d918216e636aa3",
                "filename": "log4j-core/src/test/java/org/apache/logging/log4j/core/impl/Log4jLogEventTest.java",
                "deletions": 0,
                "sha": "28a1c9e2b093befa27a02df7f7273576cb703532",
                "blob_url": "https://github.com/apache/logging-log4j2/blob/ff18a2b768d0782d05e0a197e2d918216e636aa3/log4j-core/src/test/java/org/apache/logging/log4j/core/impl/Log4jLogEventTest.java",
                "patch": "@@ -24,10 +24,21 @@\n import java.io.ObjectOutputStream;\n \n import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n import org.apache.logging.log4j.message.SimpleMessage;\n import org.junit.Test;\n \n public class Log4jLogEventTest {\n+    \n+    @Test\n+    public void testNullLevelReplacedWithOFF() throws Exception {\n+        final Marker marker = null;\n+        final Throwable t = null;\n+        final Level NULL_LEVEL = null;\n+        final Log4jLogEvent evt = new Log4jLogEvent(\"some.test\", marker, \"\",\n+                NULL_LEVEL, new SimpleMessage(\"abc\"), t);\n+        assertEquals(Level.OFF, evt.getLevel());\n+    }\n \n     @Test\n     public void testJavaIoSerializable() throws Exception {",
                "changes": 11
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/logging-log4j2/raw/ff18a2b768d0782d05e0a197e2d918216e636aa3/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/logging-log4j2/contents/src/changes/changes.xml?ref=ff18a2b768d0782d05e0a197e2d918216e636aa3",
                "filename": "src/changes/changes.xml",
                "deletions": 0,
                "sha": "aa50a52c2a871abe1506cee0117ec38cf93ee974",
                "blob_url": "https://github.com/apache/logging-log4j2/blob/ff18a2b768d0782d05e0a197e2d918216e636aa3/src/changes/changes.xml",
                "patch": "@@ -21,6 +21,12 @@\n   </properties>\n   <body>\n     <release version=\"2.0-RC1\" date=\"2013-MM-DD\" description=\"Bug fixes and enhancements\">\n+      <action issue=\"LOG4J2-462\" dev=\"rpopma\" type=\"fix\" due-to=\"Daisuke Baba\">\n+        Fix LogEvent to never return null Level, fixes LevelPatternConverter.format may throw NPE.\n+      </action>\n+      <action issue=\"LOG4J2-465\" dev=\"rpopma\" type=\"fix\" due-to=\"Daisuke Baba\">\n+        Fix LogEvent to never return null Level, fixes ThresholdFilter throws NPE.\n+      </action>\n       <action issue=\"LOG4J2-471\" dev=\"rpopma\" type=\"fix\" due-to=\"Anthony Baldocchi\">\n         Fixed issue where toString methods that perform logging could deadlock AsyncLogger.\n       </action>",
                "changes": 6
            }
        ],
        "unit_tests": [
            "Log4jLogEventTest.java",
            "RingBufferLogEventTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "log4j-core/src/test/java/org/apache/logging/log4j/core/impl/Log4jLogEventTest.java",
        "buggy_files": [
            "src/changes/changes.xml",
            "log4j-core/src/main/java/org/apache/logging/log4j/core/async/RingBufferLogEvent.java",
            "log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java"
        ],
        "fixed": true
    }
]