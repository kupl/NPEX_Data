{
    "james-mime4j_d0d17ec": {
        "bug_id": "james-mime4j_d0d17ec",
        "commit": "https://github.com/apache/james-mime4j/commit/d0d17ec02579e07e4ae7264f0afce507ec65d461",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461",
                "deletions": 3,
                "filename": "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java",
                "patch": "@@ -184,9 +184,8 @@ private void parseContentType(Field field) throws MimeException {\n         }\n         String b = params.get(\"boundary\");\n \n-        if (main != null\n-                && ((main.startsWith(\"multipart/\") && b != null)\n-                        || !main.startsWith(\"multipart/\"))) {\n+        boolean multipart = main != null && main.startsWith(\"multipart/\");\n+        if (multipart && b != null || !multipart) {\n             mimeType = main;\n             mediaType = type;\n             subType = subtype;",
                "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java",
                "sha": "2f0863a7fefa6b8e66eb95adc2b225bcd14e5583",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461",
                "deletions": 0,
                "filename": "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java",
                "patch": "@@ -362,6 +362,9 @@ public EntityStateMachine advance() throws IOException, MimeException {\n \n     private void createMimePartStream() throws MimeException, IOException {\n         String boundary = body.getBoundary();\n+        if (boundary == null) {\n+            throw new MimeException(\"Multipart body does not have a valid boundary\");\n+        }\n         try {\n             currentMimePartStream = new MimeBoundaryInputStream(inbuffer, boundary,\n                     config.isStrictParsing());",
                "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java",
                "sha": "08de6ebb63429f07562aa805969a30f0374ec394",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461",
                "deletions": 0,
                "filename": "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java",
                "patch": "@@ -134,6 +134,13 @@ public void testParameters() throws Exception {\n \n     }\n \n+    public void testMultipartNoBoundary() throws Exception {\n+        BodyDescriptorBuilder builder = new FallbackBodyDescriptorBuilder();\n+        builder.addField(new RawField(\"Content-Type\", \"multipart/yada; \"));\n+        BodyDescriptor bd = builder.build();\n+        assertEquals(\"text/plain\", bd.getMimeType());\n+    }\n+\n     public void testGetContentLength() throws Exception {\n         BodyDescriptorBuilder builder = new FallbackBodyDescriptorBuilder();\n         BodyDescriptor bd = builder.build();",
                "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java",
                "sha": "5aab29298773d24a14288a8a3862d94b501aca76",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461",
                "deletions": 0,
                "filename": "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java",
                "patch": "@@ -108,6 +108,13 @@ public BodyDescriptor build() {\n             actualSubType = contentTypeField.getSubType();\n             actualCharset = contentTypeField.getCharset();\n             actualBoundary = contentTypeField.getBoundary();\n+\n+            boolean multipart = actualMediaType != null && actualMediaType.equalsIgnoreCase(\"multipart\");\n+            if (multipart && actualBoundary == null) {\n+                actualMimeType = null;\n+                actualMediaType = null;\n+                actualSubType = null;\n+            }\n         }\n         if (actualMimeType == null) {\n             if (MimeUtil.isSameMimeType(\"multipart/digest\", parentMimeType)) {",
                "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java",
                "sha": "e3d5e7eaaad8e7fecb83dfd5771f98fb755e8de6",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461",
                "deletions": 0,
                "filename": "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java",
                "patch": "@@ -176,6 +176,14 @@ public void testGetContentLength() throws Exception {\n         Assert.assertEquals(9901, bd.getContentLength());\n     }\n \n+    @Test\n+    public void testMultipartNoBoundary() throws Exception {\n+        BodyDescriptorBuilder builder = new DefaultBodyDescriptorBuilder();\n+        builder.addField(new RawField(\"Content-Type\", \"multipart/yada; \"));\n+        BodyDescriptor bd = builder.build();\n+        assertEquals(\"text/plain\", bd.getMimeType());\n+    }\n+\n     @Test\n     public void testDoDefaultToUsAsciiWhenUntyped() throws Exception {\n         BodyDescriptorBuilder builder = new DefaultBodyDescriptorBuilder();",
                "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java",
                "sha": "76ffa7acdbc153e093d14c602ef8df13af3f90e3",
                "status": "modified"
            }
        ],
        "message": "MIME4J-235: Content-Type fields containing RFC 2231 formatted boundary attribute cause NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/mime4j/trunk@1556608 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/james-mime4j/commit/96700349bd451c706a7feec2250ece668e368979",
        "repo": "james-mime4j",
        "unit_tests": [
            "FallbackBodyDescriptorBuilderTest.java",
            "MimeEntityTest.java"
        ]
    }
}