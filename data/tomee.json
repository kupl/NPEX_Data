{
    "tomee_0d76911": {
        "bug_id": "tomee_0d76911",
        "commit": "https://github.com/apache/tomee/commit/0d769119cc44f227155f9d39efa98dd6a2c1b4b6",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/tomee/blob/0d769119cc44f227155f9d39efa98dd6a2c1b4b6/container/openejb-core/src/main/java/org/apache/openejb/config/PersistenceUnitLinkResolver.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/PersistenceUnitLinkResolver.java?ref=0d769119cc44f227155f9d39efa98dd6a2c1b4b6",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/PersistenceUnitLinkResolver.java",
                "patch": "@@ -99,7 +99,7 @@ private boolean isIn(final PersistenceUnit value, final WebModule war) {\n     }\n \n     private WebModule extractWebApp(final URI moduleUri) {\n-        if (module == null) {\n+        if (module == null || module.getJarLocation() == null) {\n             return null;\n         }\n \n@@ -113,7 +113,7 @@ private WebModule extractWebApp(final URI moduleUri) {\n         }\n \n         for (WebModule webModule : module.getWebModules()) {\n-            if (isParent(new File(webModule.getJarLocation()), moduleFile, appModuleFile)) {\n+            if (webModule.getJarLocation() != null && isParent(new File(webModule.getJarLocation()), moduleFile, appModuleFile)) {\n                 return webModule;\n             }\n         }",
                "raw_url": "https://github.com/apache/tomee/raw/0d769119cc44f227155f9d39efa98dd6a2c1b4b6/container/openejb-core/src/main/java/org/apache/openejb/config/PersistenceUnitLinkResolver.java",
                "sha": "aae109062f8926a67b872806ab9300cbe3cbc3e1",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1423851 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/7556523201643c5c62f8ff87e76b0e974712e3d0",
        "repo": "tomee",
        "unit_tests": [
            "PersistenceUnitLinkResolverTest.java"
        ]
    },
    "tomee_1642cda": {
        "bug_id": "tomee_1642cda",
        "commit": "https://github.com/apache/tomee/commit/1642cda8170561e2b0d9cb4dd6c1c971500c86bf",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/tomee/blob/1642cda8170561e2b0d9cb4dd6c1c971500c86bf/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=1642cda8170561e2b0d9cb4dd6c1c971500c86bf",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -611,15 +611,16 @@ protected void addWebModule(AppModule appModule, URL warUrl, ClassLoader parentC\n         ClassLoader webClassLoader = webModule.getClassLoader();\n \n         // get include/exclude properties from context-param\n+        // using a Set instead of a list would be easier ...\n         Options contextParams = new Options(getContextParams(webModule.getWebApp().getContextParam()));\n         String include = contextParams.get(CLASSPATH_INCLUDE, \"\");\n         String exclude = contextParams.get(CLASSPATH_EXCLUDE, \".*\");\n         Set<RequireDescriptors> requireDescriptors = contextParams.getAll(CLASSPATH_REQUIRE_DESCRIPTOR, RequireDescriptors.CLIENT);\n         boolean filterDescriptors = contextParams.get(CLASSPATH_FILTER_DESCRIPTORS, false);\n         boolean filterSystemApps = contextParams.get(CLASSPATH_FILTER_SYSTEMAPPS, true);\n \n-        contextParams.getProperties().put(moduleName, warPath);\n-        FileUtils base = new FileUtils(moduleName, moduleName, contextParams.getProperties());\n+        contextParams.getProperties().put(webModule.getModuleId(), warPath);\n+        FileUtils base = new FileUtils(webModule.getModuleId(), webModule.getModuleId(), contextParams.getProperties());\n         DeploymentsResolver.loadFromClasspath(base, urls, webClassLoader, include, exclude, requireDescriptors, filterDescriptors, filterSystemApps);\n \n         // we need to exclude previously deployed modules",
                "raw_url": "https://github.com/apache/tomee/raw/1642cda8170561e2b0d9cb4dd6c1c971500c86bf/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "b394e52f0a34c2a1c7bec824da02e9b12fc89725",
                "status": "modified"
            }
        ],
        "message": "Change the module name by the module id in the map to avoid NPE when not running in Tomcat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@1057107 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/635230ae97c8719fff1c0de54924ca71cac6994e",
        "repo": "tomee",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "tomee_1747386": {
        "bug_id": "tomee_1747386",
        "commit": "https://github.com/apache/tomee/commit/17473860f8096944340ea1d2bb11f74acfe6610b",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/17473860f8096944340ea1d2bb11f74acfe6610b/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=17473860f8096944340ea1d2bb11f74acfe6610b",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -808,7 +808,7 @@ private Beans mergeBeansXml(final Beans current, final URL url) {\n                 current.getInterceptors().addAll(beans.getInterceptors());\n             }\n             // check is done here since later we lost the data of the origin\n-            ReadDescriptors.checkDuplicatedByBeansXml(beans, current);\n+            ReadDescriptors.checkDuplicatedByBeansXml(beans, returnValue);\n         } catch (OpenEJBException e) {\n             logger.error(\"Unable to read beans.xml from :\" + url.toExternalForm());\n         }",
                "raw_url": "https://github.com/apache/tomee/raw/17473860f8096944340ea1d2bb11f74acfe6610b/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "15a1be44b909fe695969c60e7fbf5a8e110c007f",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1360040 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/32c07d0ec642a68ba2c8c44968c577c8cf1b1a62",
        "repo": "tomee",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "tomee_19f7b11": {
        "bug_id": "tomee_19f7b11",
        "commit": "https://github.com/apache/tomee/commit/19f7b1164a3bbed9acdebe168035076d7ec2f948",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/19f7b1164a3bbed9acdebe168035076d7ec2f948/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java?ref=19f7b1164a3bbed9acdebe168035076d7ec2f948",
                "deletions": 0,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "patch": "@@ -243,6 +243,10 @@ public boolean isCallerInRole(final String role) {\n         }\n \n         final ThreadContext threadContext = ThreadContext.getThreadContext();\n+        if (threadContext == null) {\n+            return false;\n+        }\n+\n         final SecurityContext securityContext = threadContext.get(SecurityContext.class);\n \n         if (\"**\".equals(role)) {",
                "raw_url": "https://github.com/apache/tomee/raw/19f7b1164a3bbed9acdebe168035076d7ec2f948/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "sha": "cd001ed569e7d93ec6abe7a1dc505bf5323a61fd",
                "status": "modified"
            }
        ],
        "message": "avoid NPE",
        "parent": "https://github.com/apache/tomee/commit/9670c840f265adfb6e6a1dbbf6d31ecf4cc48206",
        "repo": "tomee",
        "unit_tests": [
            "AbstractSecurityServiceTest.java"
        ]
    },
    "tomee_27d92e2": {
        "bug_id": "tomee_27d92e2",
        "commit": "https://github.com/apache/tomee/commit/27d92e24ebcf367e9e051b673ef8003c315c2f8d",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/tomee/blob/27d92e24ebcf367e9e051b673ef8003c315c2f8d/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=27d92e24ebcf367e9e051b673ef8003c315c2f8d",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -827,7 +827,13 @@ void process(ClassLoader cl, String cls, Object object) {\n \n \t\tprivate String getConfigPropertyType(javax.resource.spi.ConfigProperty annotation, Class<?> type) {\n \t\t\tClass<?> t = (annotation == null) ? null : annotation.type();\n-\t\t\tif (t == null || t.equals(Object.class)) {\n+            if (t == null && type != null) {\n+                return type.getName();\n+            } else if (t == null) {\n+                return null;\n+            }\n+\n+\t\t\tif (t.equals(Object.class)) {\n \t\t\t\tt = type;\n \t\t\t}\n             if (t == null) { // t == null && type == null",
                "raw_url": "https://github.com/apache/tomee/raw/27d92e24ebcf367e9e051b673ef8003c315c2f8d/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "dc438489a407a9af0649798cb445c89fac57bb6c",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when a custom mdb container uses badly defined activation properties\nOPENEJB-1747: Avoid NPE when a custom mdb container uses badly defined activation properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1203155 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/e25a26cc21356a0e894db5dd8bf7b9cc41772293",
        "repo": "tomee",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "tomee_28e762e": {
        "bug_id": "tomee_28e762e",
        "commit": "https://github.com/apache/tomee/commit/28e762ec05a2dce449650a688fa01e56569c73bb",
        "file": [
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/tomee/blob/28e762ec05a2dce449650a688fa01e56569c73bb/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java?ref=28e762ec05a2dce449650a688fa01e56569c73bb",
                "deletions": 20,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "patch": "@@ -76,6 +76,7 @@\n import java.util.ArrayList;\n import java.util.Set;\n import java.util.LinkedHashSet;\n+import java.util.HashMap;\n import java.net.URL;\n import java.io.File;\n import java.io.IOException;\n@@ -250,29 +251,40 @@ void configureWebserviceSecurity(EjbJarInfo ejbJarInfo, EjbModule ejbModule) {\n \n         OpenejbJarType openejbJarType = (OpenejbJarType) altDD;\n \n+\n+        Map<String, org.apache.openejb.jee.oejb2.EnterpriseBean> beans = new HashMap<String, org.apache.openejb.jee.oejb2.EnterpriseBean>();\n+        for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : openejbJarType.getEnterpriseBeans()) {\n+            beans.put(enterpriseBean.getEjbName(), enterpriseBean);\n+        }\n+\n         List<PortInfo> infoList = ejbJarInfo.portInfos;\n         for (PortInfo portInfo : infoList) {\n-            String link = portInfo.serviceLink;\n-\n-            List<org.apache.openejb.jee.oejb2.EnterpriseBean> enterpriseBeans = openejbJarType.getEnterpriseBeans();\n-            for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : enterpriseBeans) {\n-                if (link.equals(enterpriseBean.getEjbName()) && enterpriseBean instanceof SessionBeanType) {\n-                    SessionBeanType sessionBean = (SessionBeanType) enterpriseBean;\n-                    WebServiceSecurityType webServiceSecurityType = sessionBean.getWebServiceSecurity();\n-                    portInfo.realmName = webServiceSecurityType.getRealmName();\n-                    portInfo.securityRealmName = webServiceSecurityType.getSecurityRealmName();\n-                    if (webServiceSecurityType.getTransportGuarantee() != null) {\n-                        portInfo.transportGuarantee = webServiceSecurityType.getTransportGuarantee().value();\n-                    } else {\n-                        portInfo.transportGuarantee = \"NONE\";\n-                    }\n \n-                    if (webServiceSecurityType.getAuthMethod() != null) {\n-                        portInfo.authMethod = webServiceSecurityType.getAuthMethod().value();\n-                    } else {\n-                        portInfo.authMethod = \"NONE\";\n-                    }\n-                }\n+            org.apache.openejb.jee.oejb2.EnterpriseBean bean = beans.get(portInfo.serviceLink);\n+\n+            if (bean == null) continue; /* TODO: throw something? */\n+            if (!(bean instanceof SessionBeanType)) continue; /* TODO: throw something? */\n+\n+            SessionBeanType sessionBean = (SessionBeanType) bean;\n+            WebServiceSecurityType webServiceSecurityType = sessionBean.getWebServiceSecurity();\n+\n+            if (webServiceSecurityType == null) {\n+                //TODO: this ok?\n+                continue;\n+            }\n+\n+            portInfo.realmName = webServiceSecurityType.getRealmName();\n+            portInfo.securityRealmName = webServiceSecurityType.getSecurityRealmName();\n+            if (webServiceSecurityType.getTransportGuarantee() != null) {\n+                portInfo.transportGuarantee = webServiceSecurityType.getTransportGuarantee().value();\n+            } else {\n+                portInfo.transportGuarantee = \"NONE\";\n+            }\n+\n+            if (webServiceSecurityType.getAuthMethod() != null) {\n+                portInfo.authMethod = webServiceSecurityType.getAuthMethod().value();\n+            } else {\n+                portInfo.authMethod = \"NONE\";\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/tomee/raw/28e762ec05a2dce449650a688fa01e56569c73bb/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "sha": "ca6b0a45c8aabbe51b5bfeeb03c7e8328a8025fc",
                "status": "modified"
            }
        ],
        "message": "Fix for OPENEJB-1021: NPE in AppInfoBuilder.configureWebserviceSecurity()\nNot sure if it's a good fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@767242 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/15f21a11aa6208b4810a571eee9d555824ccb76c",
        "repo": "tomee",
        "unit_tests": [
            "AppInfoBuilderTest.java"
        ]
    },
    "tomee_3a2d915": {
        "bug_id": "tomee_3a2d915",
        "commit": "https://github.com/apache/tomee/commit/3a2d915422c6089890a7f668f73fe968bfdc3944",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/tomee/blob/3a2d915422c6089890a7f668f73fe968bfdc3944/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java?ref=3a2d915422c6089890a7f668f73fe968bfdc3944",
                "deletions": 10,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "patch": "@@ -64,6 +64,7 @@\n import org.apache.openejb.jee.ServiceImplBean;\n import org.apache.openejb.jee.Servlet;\n import org.apache.openejb.jee.SessionConfig;\n+import org.apache.openejb.jee.TransactionSupportType;\n import org.apache.openejb.jee.WebApp;\n import org.apache.openejb.jee.WebserviceDescription;\n import org.apache.openejb.jee.Webservices;\n@@ -515,16 +516,19 @@ private void buildConnectorModules(final AppModule appModule, final AppInfo appI\n             final OutboundResourceAdapter outbound = resourceAdapter.getOutboundResourceAdapter();\n             if (outbound != null) {\n                 String transactionSupport = \"none\";\n-                switch (outbound.getTransactionSupport()) {\n-                    case LOCAL_TRANSACTION:\n-                        transactionSupport = \"local\";\n-                        break;\n-                    case NO_TRANSACTION:\n-                        transactionSupport = \"none\";\n-                        break;\n-                    case XA_TRANSACTION:\n-                        transactionSupport = \"xa\";\n-                        break;\n+                final TransactionSupportType transactionSupportType = outbound.getTransactionSupport();\n+                if (transactionSupportType != null) {\n+                    switch (transactionSupportType) {\n+                        case LOCAL_TRANSACTION:\n+                            transactionSupport = \"local\";\n+                            break;\n+                        case NO_TRANSACTION:\n+                            transactionSupport = \"none\";\n+                            break;\n+                        case XA_TRANSACTION:\n+                            transactionSupport = \"xa\";\n+                            break;\n+                    }\n                 }\n                 for (final ConnectionDefinition connection : outbound.getConnectionDefinition()) {\n ",
                "raw_url": "https://github.com/apache/tomee/raw/3a2d915422c6089890a7f668f73fe968bfdc3944/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "sha": "a8f3d6e23ffe3d5c32f784e60660e96666440638",
                "status": "modified"
            }
        ],
        "message": "TOMEE-1497 patch from Roman Boykov to avoid a NPE when outbound transactionSupport is null",
        "parent": "https://github.com/apache/tomee/commit/9a9efa35b645a92f640c1cf32a3fba9aef1a5e72",
        "repo": "tomee",
        "unit_tests": [
            "AppInfoBuilderTest.java"
        ]
    },
    "tomee_49656df": {
        "bug_id": "tomee_49656df",
        "commit": "https://github.com/apache/tomee/commit/49656dffdd089daa7a87253375c14068443df370",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/tomee/blob/49656dffdd089daa7a87253375c14068443df370/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java?ref=49656dffdd089daa7a87253375c14068443df370",
                "deletions": 3,
                "filename": "tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "patch": "@@ -71,9 +71,13 @@ public void setHost(String host) {\n     }\n \n     public void setServerXml(String file) {\n-        final File sXml = new File(file);\n-        if (sXml.exists()) {\n-            serverXml = sXml;\n+        if (file == null) {\n+            serverXml = null;\n+        } else {\n+            final File sXml = new File(file);\n+            if (sXml.exists()) {\n+                serverXml = sXml;\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/49656dffdd089daa7a87253375c14068443df370/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "sha": "84b0019ffe318eb38e620669001f88f41edc8de7",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when file is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1351171 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/bbc58c7ddb92133ea136e21e46a8b4bd8098a38b",
        "repo": "tomee",
        "unit_tests": [
            "ConfigurationTest.java"
        ]
    },
    "tomee_5462f96": {
        "bug_id": "tomee_5462f96",
        "commit": "https://github.com/apache/tomee/commit/5462f967d56ceb6657c353ad6fb3dce7423bcd82",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/5462f967d56ceb6657c353ad6fb3dce7423bcd82/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java?ref=5462f967d56ceb6657c353ad6fb3dce7423bcd82",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "patch": "@@ -488,9 +488,11 @@ public OpenEjbConfiguration getOpenEjbConfiguration() throws OpenEJBException {\n                 final AppInfo appInfo = configureApplication(jarFile);\n                 sys.containerSystem.applications.add(appInfo);\n \n-            } catch (OpenEJBException alreadyHandled) {\n+            } catch (final OpenEJBException alreadyHandled) {\n                 final DeploymentExceptionManager exceptionManager = SystemInstance.get().getComponent(DeploymentExceptionManager.class);\n-                exceptionManager.pushDelpoymentException(alreadyHandled);\n+                if (exceptionManager != null) {\n+                    exceptionManager.pushDelpoymentException(alreadyHandled);\n+                }\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/5462f967d56ceb6657c353ad6fb3dce7423bcd82/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "sha": "342d90f1af75188577a30764c27d15d0352bc590",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomee/tomee/trunk@1457341 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/fcb3df9d4dc2280f6945d72aa1d787f7ee1ce018",
        "repo": "tomee",
        "unit_tests": [
            "ConfigurationFactoryTest.java"
        ]
    },
    "tomee_5e75f65": {
        "bug_id": "tomee_5e75f65",
        "commit": "https://github.com/apache/tomee/commit/5e75f652cf96e1d95e3a5504f27306f6d6fb85f2",
        "file": [
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/tomee/blob/5e75f652cf96e1d95e3a5504f27306f6d6fb85f2/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "changes": 99,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java?ref=5e75f652cf96e1d95e3a5504f27306f6d6fb85f2",
                "deletions": 38,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "patch": "@@ -864,7 +864,7 @@ private void deploy(final EjbModule ejbModule, final AppResources appResources)\n                     containerId = createContainer(containerInfoType, ejbDeployment, bean);\n                 }\n \n-                logger.debug(\"Setting container ID {0} for bean {0}\", containerId, bean.getEjbName());\n+                logger.debug(\"Setting container ID {0} for bean {1}\", containerId, bean.getEjbName());\n                 ejbDeployment.setContainerId(containerId);\n             }\n \n@@ -879,7 +879,7 @@ private void deploy(final EjbModule ejbModule, final AppResources appResources)\n             }\n \n             if (!containerIds.contains(ejbDeployment.getContainerId()) && !skipMdb(bean)) {\n-                logger.debug(\"Desired container {0} not found. Containers availble: {1}. Creating a new container.\",\n+                logger.debug(\"Desired container {0} not found. Containers available: {1}. Creating a new container.\",\n                         ejbDeployment.getContainerId(),\n                         Join.join(\", \", containerIds)\n                 );\n@@ -2251,51 +2251,66 @@ private String getResourceEnvId(final String beanName, String resourceId, final\n     }\n \n     private String getUsableContainer(final Class<? extends ContainerInfo> containerInfoType, final EnterpriseBean bean, final AppResources appResources) {\n-        logger.debug(\"Searching for usable container for bean: {0}. Available application containers: {1}, available system containers {2}\",\n-                bean.getEjbName(),\n-                getContainerIds(appResources.getContainerInfos()),\n-                getContainerIds(configFactory.getContainerInfos())\n-        );\n+        if (logger.isDebugEnabled()) {\n+            logger.debug(\"Searching for usable container for bean: {0}. Available application containers: {1}, available system containers {2}\",\n+                    bean.getEjbName(),\n+                    getContainerIds(appResources.getContainerInfos()),\n+                    getContainerIds(configFactory.getContainerInfos())\n+            );\n+        }\n \n         if (MessageDrivenBean.class.isInstance(bean)) {\n             final MessageDrivenBean messageDrivenBean = (MessageDrivenBean) bean;\n             final String messagingType = messageDrivenBean.getMessagingType();\n \n             final List<String> containerIds = appResources.containerIdsByType.get(messagingType);\n-            logger.debug(\"Searching for usable container for bean: {0} by messaging type: {1}. Potential application containers: {2}\",\n-                    bean.getEjbName(),\n-                    messagingType,\n-                    Join.join(\",\", containerIds));\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Searching for usable container for bean: {0} by messaging type: {1}. Potential application containers: {2}\",\n+                        bean.getEjbName(),\n+                        messagingType,\n+                        containerIds == null ? \"\" : Join.join(\",\", containerIds));\n+            }\n \n             if (containerIds != null && !containerIds.isEmpty()) {\n-                logger.debug(\"Returning first application container matching by type: {0} - {1}\",\n-                        messagingType,\n-                        containerIds.get(0));\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Returning first application container matching by type: {0} - {1}\",\n+                            messagingType,\n+                            containerIds.get(0));\n+                }\n \n                 return containerIds.get(0);\n             }\n         }\n \n-        logger.debug(\"Attempting to find a matching container for bean: {0} from application containers {1}\",\n-                bean.getEjbName(),\n-                getContainerIds(appResources.getContainerInfos()));\n+        if (logger.isDebugEnabled()) {\n+            logger.debug(\"Attempting to find a matching container for bean: {0} from application containers {1}\",\n+                    bean.getEjbName(),\n+                    getContainerIds(appResources.getContainerInfos()));\n+        }\n \n         String containerInfo = matchContainer(containerInfoType, bean, appResources.getContainerInfos());\n         if (containerInfo == null) { // avoid to build configFactory.getContainerInfos() if not needed\n \n-            logger.debug(\"Matching application container not found. Attempting to find a matching container for bean: {0} from system containers {1}\",\n-                    bean.getEjbName(),\n-                    getContainerIds(appResources.getContainerInfos()));\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Matching application container not found. Attempting to find a matching container for bean: {0} from system containers {1}\",\n+                        bean.getEjbName(),\n+                        getContainerIds(appResources.getContainerInfos()));\n+            }\n \n             containerInfo = matchContainer(containerInfoType, bean, configFactory.getContainerInfos());\n         }\n \n         if (containerInfo != null) {\n-            logger.debug(\"Using container {0} for bean {1}\", containerInfo, bean.getEjbName());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Using container {0} for bean {1}\", containerInfo, bean.getEjbName());\n+            }\n             return containerInfo;\n         }\n \n-        logger.debug(\"No suitable existing container found for bean {0}\", bean.getEjbName());\n+        if (logger.isDebugEnabled()) {\n+            logger.debug(\"No suitable existing container found for bean {0}\", bean.getEjbName());\n+        }\n+\n         return null;\n     }\n \n@@ -2318,34 +2333,42 @@ private String matchContainer(final Class<? extends ContainerInfo> containerInfo\n                     final String messagingType = messageDrivenBean.getMessagingType();\n \n                     if (containerInfo.properties.get(\"MessageListenerInterface\").equals(messagingType)) {\n-                        logger.debug(\"Container {0} matches container type {1} and MessageListenerInterface {2} for bean {3}, this container will be used.\",\n-                                containerInfo.id,\n-                                containerInfoType.getName(),\n-                                messagingType,\n-                                bean.getEjbName());\n+                        if (logger.isDebugEnabled()) {\n+                            logger.debug(\"Container {0} matches container type {1} and MessageListenerInterface {2} for bean {3}, this container will be used.\",\n+                                    containerInfo.id,\n+                                    containerInfoType.getName(),\n+                                    messagingType,\n+                                    bean.getEjbName());\n+                        }\n \n                         return containerInfo.id;\n                     } else {\n-                        logger.debug(\"Container {0} of type {1} does not have the matching MessageListenerInterface. Bean listener interface is {2}, \" +\n-                                        \"container listener interface is {3} for bean {4}. Skipping.\",\n+                        if (logger.isDebugEnabled()) {\n+                            logger.debug(\"Container {0} of type {1} does not have the matching MessageListenerInterface. Bean listener interface is {2}, \" +\n+                                            \"container listener interface is {3} for bean {4}. Skipping.\",\n+                                    containerInfo.id,\n+                                    containerInfoType.getName(),\n+                                    messagingType,\n+                                    containerInfo.properties.get(\"MessageListenerInterface\"),\n+                                    bean.getEjbName());\n+                        }\n+\n+                    }\n+                } else {\n+                    if (logger.isDebugEnabled()) {\n+                        logger.debug(\"Container {0} matches container type {1} for bean {2}, this container will be used.\",\n                                 containerInfo.id,\n                                 containerInfoType.getName(),\n-                                messagingType,\n-                                containerInfo.properties.get(\"MessageListenerInterface\"),\n                                 bean.getEjbName());\n-\n                     }\n-                } else {\n-                    logger.debug(\"Container {0} matches container type {1} for bean {2}, this container will be used.\",\n-                            containerInfo.id,\n-                            containerInfoType.getName(),\n-                            bean.getEjbName());\n \n                     return containerInfo.id;\n                 }\n             }\n \n-            logger.debug(\"Skipping container {0} of type {1}\", containerInfo.id, containerInfoType.getName());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Skipping container {0} of type {1}\", containerInfo.id, containerInfoType.getName());\n+            }\n         }\n \n         return null;",
                "raw_url": "https://github.com/apache/tomee/raw/5e75f652cf96e1d95e3a5504f27306f6d6fb85f2/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "sha": "57a2e1a9f84dadf5c35b6d10218f441b9c144587",
                "status": "modified"
            }
        ],
        "message": "Check if debug logging is enabled, and avoid a NPE",
        "parent": "https://github.com/apache/tomee/commit/2e05749c199661ea9f512ae60e8422e3952a8f70",
        "repo": "tomee",
        "unit_tests": [
            "AutoConfigTest.java"
        ]
    },
    "tomee_68f2e4b": {
        "bug_id": "tomee_68f2e4b",
        "commit": "https://github.com/apache/tomee/commit/68f2e4b5ae4856f862ba828ac44d73e74c0d6601",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/tomee/blob/68f2e4b5ae4856f862ba828ac44d73e74c0d6601/container/openejb-core/src/main/java/org/apache/openejb/util/ContainerClassesFilter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/util/ContainerClassesFilter.java?ref=68f2e4b5ae4856f862ba828ac44d73e74c0d6601",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/util/ContainerClassesFilter.java",
                "patch": "@@ -34,8 +34,8 @@\n     private final Filter delegateSkip;\n \n     public ContainerClassesFilter(final Properties configuration) {\n-        final String forcedStr = configuration.getProperty(\"openejb.container.additional.exclude\", null);\n-        final String skippedStr = configuration.getProperty(\"openejb.container.additional.include\", null);\n+        final String forcedStr = configuration == null ? null : configuration.getProperty(\"openejb.container.additional.exclude\", null);\n+        final String skippedStr = configuration == null ? null : configuration.getProperty(\"openejb.container.additional.include\", null);\n         forced = forcedStr == null ? EMPTY_ARRAY : forcedStr.split(\" *, *\");\n         skipped = skippedStr == null ? EMPTY_ARRAY : skippedStr.split(\" *, *\");\n ",
                "raw_url": "https://github.com/apache/tomee/raw/68f2e4b5ae4856f862ba828ac44d73e74c0d6601/container/openejb-core/src/main/java/org/apache/openejb/util/ContainerClassesFilter.java",
                "sha": "a95a70085363423888b493cf28826f13773dc38a",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE",
        "parent": "https://github.com/apache/tomee/commit/936430684fb314582e09a8a479510f90929280f8",
        "repo": "tomee",
        "unit_tests": [
            "ContainerClassesFilterTest.java"
        ]
    },
    "tomee_7377306": {
        "bug_id": "tomee_7377306",
        "commit": "https://github.com/apache/tomee/commit/737730616841192e39c2ea58374935b8a72ba513",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/tomee/blob/737730616841192e39c2ea58374935b8a72ba513/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=737730616841192e39c2ea58374935b8a72ba513",
                "deletions": 12,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1476,20 +1476,22 @@ public EjbModule deploy(EjbModule ejbModule) throws OpenEJBException {\n                 addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n             }\n \n-            for (PersistenceModule pm : ejbModule.getAppModule().getPersistenceModules()) {\n-                for (org.apache.openejb.jee.jpa.unit.PersistenceUnit pu : pm.getPersistence().getPersistenceUnit()) {\n-                    if ((pu.isExcludeUnlistedClasses() == null || !pu.isExcludeUnlistedClasses())\n-                            && \"true\".equalsIgnoreCase(pu.getProperties().getProperty(OPENEJB_JPA_AUTO_SCAN))) {\n-                        // no need of meta currently since JPA providers doesn't support it\n-                        final List<Class<?>> classes = finder.findAnnotatedClasses(Entity.class);\n-                        final List<String> existingClasses = pu.getClazz();\n-                        for (Class<?> clazz : classes) {\n-                            final String name = clazz.getName();\n-                            if (!existingClasses.contains(name)) {\n-                                pu.getClazz().add(name);\n+            if (ejbModule.getAppModule() != null) {\n+                for (PersistenceModule pm : ejbModule.getAppModule().getPersistenceModules()) {\n+                    for (org.apache.openejb.jee.jpa.unit.PersistenceUnit pu : pm.getPersistence().getPersistenceUnit()) {\n+                        if ((pu.isExcludeUnlistedClasses() == null || !pu.isExcludeUnlistedClasses())\n+                                && \"true\".equalsIgnoreCase(pu.getProperties().getProperty(OPENEJB_JPA_AUTO_SCAN))) {\n+                            // no need of meta currently since JPA providers doesn't support it\n+                            final List<Class<?>> classes = finder.findAnnotatedClasses(Entity.class);\n+                            final List<String> existingClasses = pu.getClazz();\n+                            for (Class<?> clazz : classes) {\n+                                final String name = clazz.getName();\n+                                if (!existingClasses.contains(name)) {\n+                                    pu.getClazz().add(name);\n+                                }\n                             }\n+                            pu.setScanned(true);\n                         }\n-                        pu.setScanned(true);\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/tomee/raw/737730616841192e39c2ea58374935b8a72ba513/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "0370a2264824f7769d3558d2c45867adf81be6c6",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE (mainly coming from custom test classes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1407969 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/059ba86bcb1f701e919208fdbcc50edff037c1f3",
        "repo": "tomee",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "tomee_7ac4e38": {
        "bug_id": "tomee_7ac4e38",
        "commit": "https://github.com/apache/tomee/commit/7ac4e38cfb2c8d10fbaacac91a385635cd8119f6",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/7ac4e38cfb2c8d10fbaacac91a385635cd8119f6/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java?ref=7ac4e38cfb2c8d10fbaacac91a385635cd8119f6",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "patch": "@@ -784,7 +784,7 @@ private void discardInstance(ThreadContext threadContext) {\n         }\n \n         Instance instance = checkedOutInstances.remove(primaryKey);\n-        if (!containsExtendedPersistenceContext(instance.beanContext)) {\n+        if (instance != null && !containsExtendedPersistenceContext(instance.beanContext)) {\n             cache.remove(primaryKey);\n         }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/7ac4e38cfb2c8d10fbaacac91a385635cd8119f6/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "sha": "5fc40d09dc1e7bd287e58ba87bd9659d81f6825b",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1341276 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/d2d1d54ef3c3c70fe6d39e3dd31c4edfceea28a7",
        "repo": "tomee",
        "unit_tests": [
            "StatefulContainerTest.java"
        ]
    },
    "tomee_7ce920b": {
        "bug_id": "tomee_7ce920b",
        "commit": "https://github.com/apache/tomee/commit/7ce920b20500e6a5f84e93423d88dc63fd77ba06",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/tomee/blob/7ce920b20500e6a5f84e93423d88dc63fd77ba06/container/openejb-jee/src/main/java/org/apache/openejb/jee/Beans.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-jee/src/main/java/org/apache/openejb/jee/Beans.java?ref=7ce920b20500e6a5f84e93423d88dc63fd77ba06",
                "deletions": 0,
                "filename": "container/openejb-jee/src/main/java/org/apache/openejb/jee/Beans.java",
                "patch": "@@ -202,14 +202,23 @@ private Alternatives getAlternatives() {\n     }\n \n     public List<String> getDuplicatedInterceptors() {\n+        if (duplicatedInterceptors == null) {\n+            duplicatedInterceptors = new ArrayList<String>();\n+        }\n         return duplicatedInterceptors;\n     }\n \n     public List<String> getDuplicatedDecorators() {\n+        if (duplicatedDecorators == null) {\n+            duplicatedDecorators = new ArrayList<String>();\n+        }\n         return duplicatedDecorators;\n     }\n \n     public Alternatives getDuplicatedAlternatives() {\n+        if (duplicatedAlternatives == null) {\n+            duplicatedAlternatives = new Alternatives();\n+        }\n         return duplicatedAlternatives;\n     }\n }",
                "raw_url": "https://github.com/apache/tomee/raw/7ce920b20500e6a5f84e93423d88dc63fd77ba06/container/openejb-jee/src/main/java/org/apache/openejb/jee/Beans.java",
                "sha": "feb20bd2ce9d7ddb4f8bf2cd5d04eea4e8ddca04",
                "status": "modified"
            }
        ],
        "message": "NPE (last commit check)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1359943 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/1e669fd738935b96bbdbf590afc1fe1a7df6de13",
        "repo": "tomee",
        "unit_tests": [
            "BeansTest.java"
        ]
    },
    "tomee_87f3b42": {
        "bug_id": "tomee_87f3b42",
        "commit": "https://github.com/apache/tomee/commit/87f3b425e6fb08844ec417441026a168b1b4f132",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/tomee/blob/87f3b425e6fb08844ec417441026a168b1b4f132/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java?ref=87f3b425e6fb08844ec417441026a168b1b4f132",
                "deletions": 5,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "patch": "@@ -101,6 +101,11 @@ public ConfigurationFactory() {\n         this(false);\n     }\n \n+    public ConfigurationFactory(boolean offline, OpenEjbConfiguration configuration) {\n+        this(offline);\n+        sys = configuration;\n+    }\n+\n     public static class Chain implements DynamicDeployer{\n         private final List<DynamicDeployer> chain = new ArrayList<DynamicDeployer>();\n \n@@ -670,9 +675,11 @@ private Properties getSystemProperties(String serviceId) {\n         List<String> resourceIds = new ArrayList<String>();\n \n         OpenEjbConfiguration runningConfig = getRunningConfig();\n-        for (ResourceInfo resourceInfo : runningConfig.facilities.resources) {\n-            if (isResourceType(resourceInfo.service, resourceInfo.types, type)) {\n-                resourceIds.add(resourceInfo.id);\n+        if (runningConfig != null) {\n+            for (ResourceInfo resourceInfo : runningConfig.facilities.resources) {\n+                if (isResourceType(resourceInfo.service, resourceInfo.types, type)) {\n+                    resourceIds.add(resourceInfo.id);\n+                }\n             }\n         }\n \n@@ -744,8 +751,10 @@ private boolean isResourceType(String service, List<String> types, String type)\n         List<ContainerInfo> containers = new ArrayList<ContainerInfo>();\n \n         OpenEjbConfiguration runningConfig = getRunningConfig();\n-        for (ContainerInfo containerInfo : runningConfig.containerSystem.containers) {\n-            containers.add(containerInfo);\n+        if (runningConfig != null) {\n+            for (ContainerInfo containerInfo : runningConfig.containerSystem.containers) {\n+                containers.add(containerInfo);\n+            }\n         }\n \n         if (sys != null) {",
                "raw_url": "https://github.com/apache/tomee/raw/87f3b425e6fb08844ec417441026a168b1b4f132/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "sha": "6cdddc4ea3380efc6f0fa013dc82d01f9955864f",
                "status": "modified"
            }
        ],
        "message": "GERONIMO-3481, there may be no running OpenEjbConfiguration so avoid NPEs, and allow construction of ConfigurationFactory with a known sys configuration.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@579046 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/34d061133e6c45e3542b97ce42ec5357acdfbeeb",
        "repo": "tomee",
        "unit_tests": [
            "ConfigurationFactoryTest.java"
        ]
    },
    "tomee_9ec751c": {
        "bug_id": "tomee_9ec751c",
        "commit": "https://github.com/apache/tomee/commit/9ec751cbb443e4a3e34961aa6c0e7e584e47306e",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/9ec751cbb443e4a3e34961aa6c0e7e584e47306e/server/openejb-http/src/main/java/org/apache/openejb/server/httpd/HttpRequestImpl.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/server/openejb-http/src/main/java/org/apache/openejb/server/httpd/HttpRequestImpl.java?ref=9ec751cbb443e4a3e34961aa6c0e7e584e47306e",
                "deletions": 1,
                "filename": "server/openejb-http/src/main/java/org/apache/openejb/server/httpd/HttpRequestImpl.java",
                "patch": "@@ -233,7 +233,10 @@ public String getRemoteUser() {\n \n     @Override\n     public String getRequestedSessionId() {\n-        return session.getId();\n+        if (session != null) {\n+            return session.getId();\n+        }\n+        return null;\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/tomee/raw/9ec751cbb443e4a3e34961aa6c0e7e584e47306e/server/openejb-http/src/main/java/org/apache/openejb/server/httpd/HttpRequestImpl.java",
                "sha": "03a7b2914ae99520221fd60e4f907efe4f8af5c6",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE and fixing implementation of request#getRequestedSessionId\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1429688 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/cacfcaf967b9152ce34b3a9c1386f3a17994fee0",
        "repo": "tomee",
        "unit_tests": [
            "HttpRequestImplTest.java"
        ]
    },
    "tomee_9fa6292": {
        "bug_id": "tomee_9fa6292",
        "commit": "https://github.com/apache/tomee/commit/9fa629268e8517a05f14c71d29ac89c7764c46c2",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/tomee/blob/9fa629268e8517a05f14c71d29ac89c7764c46c2/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java?ref=9fa629268e8517a05f14c71d29ac89c7764c46c2",
                "deletions": 0,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "patch": "@@ -547,6 +547,9 @@ public AppInfo configureApplication(File jarFile) throws OpenEJBException {\n      * @throws OpenEJBException on error\n      */\n     public AppInfo configureApplication(ClassLoader classLoader, String id, List<File> jarFiles) throws OpenEJBException {\n+        if (id == null) {\n+            id = \"\";\n+        }\n         Application application = new Application();\n         application.setApplicationName(id);\n         AppModule collection = new AppModule(classLoader, id, application, false);",
                "raw_url": "https://github.com/apache/tomee/raw/9fa629268e8517a05f14c71d29ac89c7764c46c2/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "sha": "e6ba1c33fb24cb4e6c2158b32cf9992c63a478fe",
                "status": "modified"
            }
        ],
        "message": "pass an empty application id to prevent NPEs and to ensure proper global jndi names are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@988313 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/a48715af16dcd4b03c5b0a5fcc72e001819a6dee",
        "repo": "tomee",
        "unit_tests": [
            "ConfigurationFactoryTest.java"
        ]
    },
    "tomee_a0a903f": {
        "bug_id": "tomee_a0a903f",
        "commit": "https://github.com/apache/tomee/commit/a0a903f10aeb6fdbd3b56dff05abde1325db9165",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/a0a903f10aeb6fdbd3b56dff05abde1325db9165/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java?ref=a0a903f10aeb6fdbd3b56dff05abde1325db9165",
                "deletions": 5,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "patch": "@@ -79,11 +79,7 @@ public AppModule deploy(AppModule appModule) throws OpenEJBException {\n             logger.info(\"Set the '\"+VALIDATION_LEVEL+\"' system property to \"+ join(\" or \", levels) +\" for increased validation details.\");\n         }\n \n-        validationFailedException = new ValidationFailedException(\"Module failed validation. \" + uberContext.getModuleType() + \"(name=\" + uberContext.getName() + \")\", uberContext, validationFailedException);\n-\n-        if (validationFailedException != null) throw validationFailedException;\n-\n-        return appModule;\n+        throw  new ValidationFailedException(\"Module failed validation. \" + uberContext.getModuleType() + \"(name=\" + uberContext.getName() + \")\", uberContext, validationFailedException);\n     }\n \n     private void logResults(ValidationContext context, Level level) {",
                "raw_url": "https://github.com/apache/tomee/raw/a0a903f10aeb6fdbd3b56dff05abde1325db9165/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "sha": "fb0201cf2e440d6d4e1c24deee24b0fef408674f",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/tomee/blob/a0a903f10aeb6fdbd3b56dff05abde1325db9165/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java?ref=a0a903f10aeb6fdbd3b56dff05abde1325db9165",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "patch": "@@ -17,15 +17,24 @@\n package org.apache.openejb.config.rules;\n \n import org.apache.openejb.config.EjbModule;\n+import org.apache.xbean.finder.IAnnotationFinder;\n \n import javax.inject.Inject;\n \n public class CheckCdiEnabled extends ValidationBase {\n     public void validate(EjbModule ejbModule) {\n+        if (ejbModule.getFinder() == null) {\n+            return;\n+        }\n+\n         if (ejbModule.getBeans() == null\n-                && (!ejbModule.getFinder().findAnnotatedMethods(Inject.class).isEmpty()\n-                || !ejbModule.getFinder().findAnnotatedFields(Inject.class).isEmpty())) {\n+                && hasAtInject(ejbModule.getFinder())) {\n             warn(ejbModule.getModuleId(), \"cdi.notEnabled\", ejbModule.getModuleId());\n         }\n     }\n+\n+    private static boolean hasAtInject(final IAnnotationFinder finder) {\n+        return !finder.findAnnotatedMethods(Inject.class).isEmpty()\n+                || !finder.findAnnotatedFields(Inject.class).isEmpty();\n+    }\n }",
                "raw_url": "https://github.com/apache/tomee/raw/a0a903f10aeb6fdbd3b56dff05abde1325db9165/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "sha": "3b56543648f34c8d5d36b07f3692553b399a3b51",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1425860 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/e6dae643cb8f6dd52ca56f20efbb8fd043f0e721",
        "repo": "tomee",
        "unit_tests": [
            "CheckCdiEnabledTest.java"
        ]
    },
    "tomee_a46b829": {
        "bug_id": "tomee_a46b829",
        "commit": "https://github.com/apache/tomee/commit/a46b8296de0a856a328ab1535150885dc6050fb6",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/tomee/blob/a46b8296de0a856a328ab1535150885dc6050fb6/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java?ref=a46b8296de0a856a328ab1535150885dc6050fb6",
                "deletions": 0,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "patch": "@@ -81,6 +81,9 @@ public static ValidatorFactory buildFactory(ValidationInfo config, ClassLoader c\n                 factory = Validation.buildDefaultValidatorFactory();\n             } else {\n                 Configuration<?> configuration = getConfig(config);\n+                if (configuration == null) {\n+                    configuration = getConfig(config);\n+                }\n                 try {\n                     factory = configuration.buildValidatorFactory();\n                 } catch (ValidationException ve) {",
                "raw_url": "https://github.com/apache/tomee/raw/a46b8296de0a856a328ab1535150885dc6050fb6/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "sha": "e249e0b46712d70c0a4fbe6e6ad978b680405bae",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/tomee/blob/a46b8296de0a856a328ab1535150885dc6050fb6/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=a46b8296de0a856a328ab1535150885dc6050fb6",
                "deletions": 0,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -84,6 +84,7 @@\n import java.util.jar.JarEntry;\n import java.util.jar.JarFile;\n import java.util.jar.Manifest;\n+import java.util.zip.ZipEntry;\n \n import static org.apache.openejb.config.NewLoaderLogic.applyBuiltinExcludes;\n import static org.apache.openejb.config.TldScanner.scanForTagLibs;\n@@ -1538,6 +1539,19 @@ public boolean accept(final String annotationName) {\n \n             if (classFinder.find(filter)) {\n                 cls = EjbModule.class;\n+                // if it is a war just throw an error\n+                try {\n+                    final File ar = URLs.toFile(urls);\n+                    if (!ar.isDirectory() && !ar.getName().endsWith(\"ar\")) { // guess no archive extension, check it is not a hidden war\n+                        final JarFile war = new JarFile(ar);\n+                        final ZipEntry entry = war.getEntry(\"WEB-INF/\");\n+                        if (entry != null) {\n+                            logger.warning(\"you deployed \" + urls.toExternalForm() + \", it seems it is a war with no extension, please rename it\");\n+                        }\n+                    }\n+                } catch (Exception ignored) {\n+                    // no-op\n+                }\n             }\n \n             if (otherTypes.size() > 0) {",
                "raw_url": "https://github.com/apache/tomee/raw/a46b8296de0a856a328ab1535150885dc6050fb6/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "74363546a66edd30ec357af0db60dd376cb554b2",
                "status": "modified"
            }
        ],
        "message": "trying to avoid NPE (appears on builbot) + logging a warning if a a war is deployed without extension\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1373184 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/ecce944814fd2dc166bb4ed58d1b1ad9c3ba82da",
        "repo": "tomee",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "tomee_af5b154": {
        "bug_id": "tomee_af5b154",
        "commit": "https://github.com/apache/tomee/commit/af5b154c64f22ddcdd17c9a64434e630a9db6363",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/af5b154c64f22ddcdd17c9a64434e630a9db6363/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java?ref=af5b154c64f22ddcdd17c9a64434e630a9db6363",
                "deletions": 0,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "patch": "@@ -267,6 +267,10 @@ public boolean isCallerInRole(final String role) {\n     @Override\n     public Principal getCallerPrincipal() {\n         final ThreadContext threadContext = ThreadContext.getThreadContext();\n+        if (threadContext == null) {\n+            return null;\n+        }\n+\n         final SecurityContext securityContext = threadContext.get(SecurityContext.class);\n         final Set<Principal> principals = securityContext.subject.getPrincipals();\n ",
                "raw_url": "https://github.com/apache/tomee/raw/af5b154c64f22ddcdd17c9a64434e630a9db6363/container/openejb-core/src/main/java/org/apache/openejb/core/security/AbstractSecurityService.java",
                "sha": "2969a92d6eb1380f941c842afa7c7b2d4205e349",
                "status": "modified"
            }
        ],
        "message": "avoid NPE",
        "parent": "https://github.com/apache/tomee/commit/3222d017ebf3034f0a8f68501f94c26a5a9e35ea",
        "repo": "tomee",
        "unit_tests": [
            "AbstractSecurityServiceTest.java"
        ]
    },
    "tomee_b0927be": {
        "bug_id": "tomee_b0927be",
        "commit": "https://github.com/apache/tomee/commit/b0927beff068b4529a5a7818879bf8afc2d369d3",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/b0927beff068b4529a5a7818879bf8afc2d369d3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=b0927beff068b4529a5a7818879bf8afc2d369d3",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1380,7 +1380,7 @@ private void buildResource(JndiConsumer consumer, Resource resource, Member memb\n             JndiReference reference = consumer.getEnvEntryMap().get(refName);\n             if (reference == null) {\n \n-                { // Little quick validation for common mistake\n+                if (member != null) { // Little quick validation for common mistake\n                     Class type = member.getType();\n                     boolean shouldReturn = false;\n                     if (EntityManager.class.isAssignableFrom(type)){",
                "raw_url": "https://github.com/apache/tomee/raw/b0927beff068b4529a5a7818879bf8afc2d369d3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "e3221e4d45ae6d0b468e9f15eb52ae8cf16aa5ea",
                "status": "modified"
            }
        ],
        "message": "OPENEJB-735 NPE in AnnotationDeployer if null member is passed into buildResource()\n\nContributed by: Joe Bohn\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@604145 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/478963cef9ff999670254e17130bb2cfab842f85",
        "repo": "tomee",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "tomee_c317600": {
        "bug_id": "tomee_c317600",
        "commit": "https://github.com/apache/tomee/commit/c31760076f93ad377896af86eb72991296a42692",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/tomee/blob/c31760076f93ad377896af86eb72991296a42692/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/router/FailOverRouter.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/router/FailOverRouter.java?ref=c31760076f93ad377896af86eb72991296a42692",
                "deletions": 3,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/router/FailOverRouter.java",
                "patch": "@@ -152,9 +152,12 @@ public Object invoke(final Object proxy, final Method method, final Object[] arg\n             final TransactionManager txMgr = OpenEJB.getTransactionManager();\n             final Transaction transaction = txMgr.getTransaction();\n \n-            final DataSource currentDs = txDs.get(transaction);\n-            if (currentDs != null) {\n-                return method.invoke(currentDs, args);\n+            if (transaction != null) {\n+                \n+                final DataSource currentDs = txDs.get(transaction);\n+                if (currentDs != null) {\n+                    return method.invoke(currentDs, args);\n+                }\n             }\n \n             int ex = 0;",
                "raw_url": "https://github.com/apache/tomee/raw/c31760076f93ad377896af86eb72991296a42692/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/router/FailOverRouter.java",
                "sha": "88d823bdd4c80073c59265ad909b60aaf1d3dbb2",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomee/tomee/trunk@1476895 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/8ae5b0e159fbb5dcfd9984589a76e0686e4b329a",
        "repo": "tomee",
        "unit_tests": [
            "FailOverRouterTest.java"
        ]
    },
    "tomee_cf2692b": {
        "bug_id": "tomee_cf2692b",
        "commit": "https://github.com/apache/tomee/commit/cf2692b602ee0615f21acf5dbf8eecc043838dfd",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/tomee/blob/cf2692b602ee0615f21acf5dbf8eecc043838dfd/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java?ref=cf2692b602ee0615f21acf5dbf8eecc043838dfd",
                "deletions": 3,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "patch": "@@ -763,9 +763,11 @@ public void deployApp(final Object inputTestInstance) throws Exception {\n     private boolean isCdi(final boolean cdi, final Class<?>[] cdiInterceptors,\n                           final Class<?>[] cdiAlternatives, final Class<?>[] cdiStereotypes,\n                           final Class<?>[] cdiDecorators) {\n-        return cdi || cdiAlternatives.length > 0\n-            || cdiDecorators.length > 0 || cdiInterceptors.length > 0\n-            || cdiStereotypes.length > 0;\n+        return cdi\n+            || (cdiAlternatives != null && cdiAlternatives.length > 0)\n+            || (cdiDecorators != null && cdiDecorators.length > 0)\n+            || (cdiInterceptors != null && cdiInterceptors.length > 0)\n+            || (cdiStereotypes != null && cdiStereotypes.length > 0);\n     }\n \n     protected boolean mockCdiContexts() {",
                "raw_url": "https://github.com/apache/tomee/raw/cf2692b602ee0615f21acf5dbf8eecc043838dfd/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "sha": "61e0e06e0c3130e80e9487e680d4e279549ff850",
                "status": "modified"
            }
        ],
        "message": "NPE protection",
        "parent": "https://github.com/apache/tomee/commit/ca0436e8f34c08de809c18bce6732f3675ac01ee",
        "repo": "tomee",
        "unit_tests": [
            "ApplicationComposersTest.java"
        ]
    },
    "tomee_d78ccc6": {
        "bug_id": "tomee_d78ccc6",
        "commit": "https://github.com/apache/tomee/commit/d78ccc6090c1fdcb0010e6aa73800b517b58a653",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/d78ccc6090c1fdcb0010e6aa73800b517b58a653/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java?ref=d78ccc6090c1fdcb0010e6aa73800b517b58a653",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "patch": "@@ -191,7 +191,7 @@ private void processPersistenceRefs(JndiConsumer component, AppModule appModule,\n \n     private PersistenceUnit processPersistenceRef(LinkResolver<PersistenceUnit> persistenceUnits, PersistenceRef ref, URI moduleURI, String componentName, ValidationContext validation) {\n \n-        if (ref.getMappedName().startsWith(\"jndi:\")){\n+        if (ref.getMappedName() != null && ref.getMappedName().startsWith(\"jndi:\")){\n             return null;\n         }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/d78ccc6090c1fdcb0010e6aa73800b517b58a653/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java",
                "sha": "29f313436d9f9f8ab64b514d54dea55e3eedf48a",
                "status": "modified"
            }
        ],
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@603579 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/53f8c293006adbb06e18260e7795330e49834886",
        "repo": "tomee",
        "unit_tests": [
            "AutoConfigTest.java"
        ]
    },
    "tomee_d903b63": {
        "bug_id": "tomee_d903b63",
        "commit": "https://github.com/apache/tomee/commit/d903b63d52d61fe692a029df34934e3ff67ff2ef",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/d903b63d52d61fe692a029df34934e3ff67ff2ef/container/openejb-core/src/main/java/org/apache/openejb/util/Logger.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/util/Logger.java?ref=d903b63d52d61fe692a029df34934e3ff67ff2ef",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/util/Logger.java",
                "patch": "@@ -87,7 +87,10 @@ public static synchronized void configure(final Properties config) {\n         // without changing LogStreamFactory contract\n         final String specialKey = \"openejb.jul.forceReload\";\n         final String original = System.getProperty(specialKey);\n-        System.setProperty(specialKey, config.getProperty(specialKey, SystemInstance.isInitialized() ? SystemInstance.get().getOptions().get(specialKey, (String) null) : null));\n+        final String property = config.getProperty(specialKey, SystemInstance.isInitialized() ? SystemInstance.get().getOptions().get(specialKey, (String) null) : null);\n+        if (property != null) {\n+            System.setProperty(specialKey, property);\n+        }\n \n         try {\n             if (factoryName != null) {",
                "raw_url": "https://github.com/apache/tomee/raw/d903b63d52d61fe692a029df34934e3ff67ff2ef/container/openejb-core/src/main/java/org/apache/openejb/util/Logger.java",
                "sha": "69fbd71c5091f309ab7f3a8373d90b22d73e81ec",
                "status": "modified"
            }
        ],
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomee/tomee/trunk@1629626 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/6abdc427659162dfeba724f2096c8c1d79207756",
        "repo": "tomee",
        "unit_tests": [
            "LoggerTest.java"
        ]
    },
    "tomee_e60f923": {
        "bug_id": "tomee_e60f923",
        "commit": "https://github.com/apache/tomee/commit/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/tomee/blob/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiPlugin.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiPlugin.java?ref=e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiPlugin.java",
                "patch": "@@ -103,10 +103,18 @@\n \n     public void setWebBeansContext(final WebBeansContext webBeansContext) {\n         this.webBeansContext = webBeansContext;\n+        if (webBeansContext == null) {\n+            return;\n+        }\n         if (!WebappWebBeansContext.class.isInstance(webBeansContext)) {\n             cacheProxies = new ConcurrentHashMap<Contextual<?>, Object>();\n         } else { // share cache of proxies between the whole app otherwise hard to share an EJB between a webapp and the lib part of the app\n-            cacheProxies = CdiPlugin.class.cast(WebappWebBeansContext.class.cast(webBeansContext).getParent().getPluginLoader().getEjbPlugin()).cacheProxies;\n+            final WebBeansContext parent = WebappWebBeansContext.class.cast(webBeansContext).getParent();\n+            if (parent != null) {\n+                cacheProxies = CdiPlugin.class.cast(parent.getPluginLoader().getEjbPlugin()).cacheProxies;\n+            } else {\n+                cacheProxies = new ConcurrentHashMap<Contextual<?>, Object>();\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiPlugin.java",
                "sha": "db39ccb6d29934bc9fa8e280857a8ef55f7326a6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebAppInjectionResolver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebAppInjectionResolver.java?ref=e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/cdi/WebAppInjectionResolver.java",
                "patch": "@@ -35,7 +35,7 @@ public WebAppInjectionResolver(final WebappWebBeansContext ctx) {\n     @Override\n     public Set<Bean<?>> implResolveByType(final boolean delegate, final Type injectionPointType, final Class<?> injectinPointClass, final Annotation... qualifiers) {\n         final Set<Bean<?>> set = super.implResolveByType(delegate, injectionPointType, injectinPointClass, qualifiers);\n-        if (set.isEmpty()) {\n+        if (set.isEmpty() && context.getParent() != null) {\n             return context.getParent().getBeanManagerImpl().getInjectionResolver().implResolveByType(delegate, injectionPointType, injectinPointClass, qualifiers);\n         }\n         return set;",
                "raw_url": "https://github.com/apache/tomee/raw/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebAppInjectionResolver.java",
                "sha": "98c5a1146ccde42c62235d3b70d6567f3e861003",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/tomee/blob/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebappBeanManager.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebappBeanManager.java?ref=e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3",
                "deletions": 10,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/cdi/WebappBeanManager.java",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.webbeans.component.BuiltInOwbBean;\n import org.apache.webbeans.component.ExtensionBean;\n import org.apache.webbeans.component.OwbBean;\n+import org.apache.webbeans.config.WebBeansContext;\n import org.apache.webbeans.container.BeanManagerImpl;\n import org.apache.webbeans.context.creational.CreationalContextImpl;\n import org.apache.webbeans.event.EventMetadataImpl;\n@@ -68,7 +69,10 @@ public WebappBeanManager(final WebappWebBeansContext ctx) {\n     public void fireEvent(final Object event, final EventMetadataImpl metadata, final boolean isLifecycleEvent) {\n         getNotificationManager().fireEvent(event, metadata, isLifecycleEvent);\n         if (isEvent(event)) {\n-            getParentBm().getNotificationManager().fireEvent(event, metadata, isLifecycleEvent);\n+            final BeanManagerImpl parentBm = getParentBm();\n+            if (parentBm != null) {\n+                parentBm.getNotificationManager().fireEvent(event, metadata, isLifecycleEvent);\n+            }\n         }\n     }\n \n@@ -90,7 +94,10 @@ public void fireEvent(final Object event, final EventMetadataImpl metadata, fina\n         set.addAll(getNotificationManager().resolveObservers(event, metadata, false));\n \n         if (isEvent(event)) {\n-            set.addAll(getParentBm().getNotificationManager().resolveObservers(event, metadata, false));\n+            final BeanManagerImpl parentBm = getParentBm();\n+            if (parentBm != null) {\n+                set.addAll(parentBm.getNotificationManager().resolveObservers(event, metadata, false));\n+            }\n         } // else nothing since extensions are loaded by classloader so we already have it\n \n         return set;\n@@ -103,18 +110,22 @@ public Object getInjectableReference(final InjectionPoint injectionPoint, final\n             return null;\n         }\n \n+        final BeanManagerImpl parentBm = getParentBm();\n         final Boolean existing = USE_PARENT_BM.get();\n         if (existing != null && existing) { // shortcut the whole logic to keep the threadlocal set up correctly\n-            return getParentBm().getInjectableReference(injectionPoint, ctx);\n+            if (parentBm == null) {\n+                return null;\n+            }\n+            return parentBm.getInjectableReference(injectionPoint, ctx);\n         }\n \n         // we can do it cause there is caching but we shouldn't - easy way to overide OWB actually\n         final Bean<Object> injectedBean = (Bean<Object>)getInjectionResolver().getInjectionPointBean(injectionPoint);\n         try {\n-            if (injectedBean != null && injectedBean == getParentBm().getInjectionResolver().getInjectionPointBean(injectionPoint)) {\n+            if (parentBm != null && injectedBean != null && injectedBean == parentBm.getInjectionResolver().getInjectionPointBean(injectionPoint)) {\n                 USE_PARENT_BM.set(true);\n                 try {\n-                    return getParentBm().getInjectableReference(injectionPoint, ctx);\n+                    return parentBm.getInjectableReference(injectionPoint, ctx);\n                 } finally {\n                     USE_PARENT_BM.remove();\n                 }\n@@ -268,7 +279,8 @@ public ExpressionFactory wrapExpressionFactory(final ExpressionFactory expressio\n     }\n \n     public BeanManagerImpl getParentBm() {\n-        return webappCtx.getParent().getBeanManagerImpl();\n+        final WebBeansContext parent = webappCtx.getParent();\n+        return parent != null ? parent.getBeanManagerImpl() : null;\n     }\n \n     @Override\n@@ -304,7 +316,7 @@ public boolean isInUse() {\n     @Override\n     public Bean<?> getPassivationCapableBean(final String id) {\n         final Bean<?> bean = super.getPassivationCapableBean(id);\n-        if (bean == null) {\n+        if (bean == null && getParentBm() != null) {\n             return getParentBm().getPassivationCapableBean(id);\n         }\n         return bean;\n@@ -318,9 +330,12 @@ public void afterStart() {\n \n     private Set<Bean<?>> mergeBeans() {\n         final Set<Bean<?>> allBeans = new CopyOnWriteArraySet<>(); // override parent one with a \"webapp\" bean list\n-        for (final Bean<?> bean : getParentBm().getBeans()) {\n-            if (filter.accept(bean)) {\n-                allBeans.add(bean);\n+        final BeanManagerImpl parentBm = getParentBm();\n+        if (parentBm != null) {\n+            for (final Bean<?> bean : parentBm.getBeans()) {\n+                if (filter.accept(bean)) {\n+                    allBeans.add(bean);\n+                }\n             }\n         }\n         allBeans.addAll(super.getBeans());",
                "raw_url": "https://github.com/apache/tomee/raw/e60f92340bdb5bef2d1c3c71bc9c4983f97e86a3/container/openejb-core/src/main/java/org/apache/openejb/cdi/WebappBeanManager.java",
                "sha": "eacfc5ddf98018070a59c078f856cd1bcf4945d4",
                "status": "modified"
            }
        ],
        "message": "NPE when skipping cdi for ears",
        "parent": "https://github.com/apache/tomee/commit/e677d4d5c25f8514b357478f7e94ff832731e5e4",
        "repo": "tomee",
        "unit_tests": [
            "WebappBeanManagerTest.java"
        ]
    },
    "tomee_ec82941": {
        "bug_id": "tomee_ec82941",
        "commit": "https://github.com/apache/tomee/commit/ec82941a6b9ab08e6051452c1029f1e77b341be1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tomee/blob/ec82941a6b9ab08e6051452c1029f1e77b341be1/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java?ref=ec82941a6b9ab08e6051452c1029f1e77b341be1",
                "deletions": 2,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "patch": "@@ -230,8 +230,10 @@ public void convertMdbConfigs(EjbJar ejbJar, OpenejbJarType openejbJarType) {\n \n     public void mergeEntityMappings(String moduleId, EntityMappings entityMappings, OpenejbJar openejbJar, OpenejbJarType openejbJarType) {\n         Map<String, EntityData> entities =  new TreeMap<String, EntityData>();\n-        for (Entity entity : entityMappings.getEntity()) {\n-            entities.put(entity.getDescription(), new EntityData(entity));\n+        if (entityMappings != null) {\n+            for (Entity entity : entityMappings.getEntity()) {\n+                entities.put(entity.getDescription(), new EntityData(entity));\n+            }\n         }\n         for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : openejbJarType.getEnterpriseBeans()) {\n             if (!(enterpriseBean instanceof EntityBeanType)) {",
                "raw_url": "https://github.com/apache/tomee/raw/ec82941a6b9ab08e6051452c1029f1e77b341be1/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "sha": "83bcbadebdb0677ebb70bec580a4b413d0a0f519",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE (it seems to have broken Geronimo build today)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@606054 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/b2d19b719b3fa3d4d6c93edb582bb26982721dc7",
        "repo": "tomee",
        "unit_tests": [
            "OpenEjb2ConversionTest.java"
        ]
    },
    "tomee_ef303f2": {
        "bug_id": "tomee_ef303f2",
        "commit": "https://github.com/apache/tomee/commit/ef303f28d545f2c08b1a6e39c83ce86c7214681c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/tomee/blob/ef303f28d545f2c08b1a6e39c83ce86c7214681c/container/openejb-core/src/main/java/org/apache/openejb/config/ReadDescriptors.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/ReadDescriptors.java?ref=ef303f28d545f2c08b1a6e39c83ce86c7214681c",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/ReadDescriptors.java",
                "patch": "@@ -137,7 +137,7 @@ private void readValidationConfigType(Module module) throws OpenEJBException {\n             return;\n         }\n         URL url = (URL) module.getAltDDs().get(\"validation.xml\");\n-        if (url == null) { // library but not a module case\n+        if (url == null && module.getClassLoader() != null) { // library but not a module case\n             url = module.getClassLoader().getResource(\"META-INF/validation.xml\");\n             if (url != null) {\n                 module.getAltDDs().put(\"validation.xml\", url);",
                "raw_url": "https://github.com/apache/tomee/raw/ef303f28d545f2c08b1a6e39c83ce86c7214681c/container/openejb-core/src/main/java/org/apache/openejb/config/ReadDescriptors.java",
                "sha": "c49a5fd5885df17f6f3d253b76bde7fce21c2b46",
                "status": "modified"
            }
        ],
        "message": "avoiding a NPE in ReadDescriptors (for ConfigurationFactoryTest)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb3@1161255 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/d9e54486150ad1f540293b9a2f30acbeaffd1580",
        "repo": "tomee",
        "unit_tests": [
            "ReadDescriptorsTest.java"
        ]
    },
    "tomee_f2a36c7": {
        "bug_id": "tomee_f2a36c7",
        "commit": "https://github.com/apache/tomee/commit/f2a36c73c945612716b5ac54efb648c930efd88e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/tomee/blob/f2a36c73c945612716b5ac54efb648c930efd88e/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=f2a36c73c945612716b5ac54efb648c930efd88e",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1438,7 +1438,9 @@ public EjbModule deploy(EjbModule ejbModule) throws OpenEJBException {\n \n             // ejb can be rest bean and only then in standalone so scan providers here too\n             // adding them to app since they should be in the app classloader\n-            addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n+            if (ejbModule.getAppModule() != null) {\n+                addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n+            }\n \n             return ejbModule;\n         }",
                "raw_url": "https://github.com/apache/tomee/raw/f2a36c73c945612716b5ac54efb648c930efd88e/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "c9921b87b4ad74a8f123232fef853408f2b33b53",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when scanning jaxrs @Provider\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk/openejb@1342746 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/02b7fcc446723ffa5e47910eb591963602e78c64",
        "repo": "tomee",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "tomee_fc99d94": {
        "bug_id": "tomee_fc99d94",
        "commit": "https://github.com/apache/tomee/commit/fc99d9445e21fe009cd849d9d60b39e40d772649",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/tomee/blob/fc99d9445e21fe009cd849d9d60b39e40d772649/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java?ref=fc99d9445e21fe009cd849d9d60b39e40d772649",
                "deletions": 1,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "patch": "@@ -1059,7 +1059,9 @@ public void after() throws Exception {\n             if (originalLoader != null) {\n                 Thread.currentThread().setContextClassLoader(originalLoader);\n             }\n-            System.setProperties(originalProperties);\n+            if (originalProperties != null) {\n+                System.setProperties(originalProperties);\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/fc99d9445e21fe009cd849d9d60b39e40d772649/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java",
                "sha": "4b830580197b2a21c15aa7120a80536cef535bda",
                "status": "modified"
            }
        ],
        "message": "NPE protection",
        "parent": "https://github.com/apache/tomee/commit/5f26017a95c2388a1ebf62500590af72e1aca21d",
        "repo": "tomee",
        "unit_tests": [
            "ApplicationComposersTest.java"
        ]
    },
    "tomee_ff677f6": {
        "bug_id": "tomee_ff677f6",
        "commit": "https://github.com/apache/tomee/commit/ff677f61c18ee15b34be73e2d4ff38e9ab06455b",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/tomee/blob/ff677f61c18ee15b34be73e2d4ff38e9ab06455b/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/tomee/contents/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java?ref=ff677f61c18ee15b34be73e2d4ff38e9ab06455b",
                "deletions": 5,
                "filename": "container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "patch": "@@ -812,11 +812,13 @@ private void discardInstance(final Object primaryKey, final Instance instance) {\n             i = instance;\n         }\n \n-        if (!containsExtendedPersistenceContext(instance.beanContext)) {\n-            cache.remove(primaryKey);\n-        }\n-        if (i != null && null != i.creationalContext) {\n-            i.creationalContext.release();\n+        if (i != null) {\n+            if (!containsExtendedPersistenceContext(i.beanContext)) {\n+                cache.remove(primaryKey);\n+            }\n+            if (null != i.creationalContext) {\n+                i.creationalContext.release();\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/tomee/raw/ff677f61c18ee15b34be73e2d4ff38e9ab06455b/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "sha": "b3494cb3f350322f6bbee557ace268e5e047d38e",
                "status": "modified"
            }
        ],
        "message": "avoid npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomee/tomee/trunk@1568435 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tomee/commit/1783fd86076a80049c2f3b09377169d2c553493a",
        "repo": "tomee",
        "unit_tests": [
            "StatefulContainerTest.java"
        ]
    }
}