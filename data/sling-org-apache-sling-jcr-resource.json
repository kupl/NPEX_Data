{
    "sling-org-apache-sling-jcr-resource_149e81b": {
        "bug_id": "sling-org-apache-sling-jcr-resource_149e81b",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/149e81b37229f5cac73bf706b2e36785a990cbec",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/blob/149e81b37229f5cac73bf706b2e36785a990cbec/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-resource/contents/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java?ref=149e81b37229f5cac73bf706b2e36785a990cbec",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "patch": "@@ -392,7 +392,7 @@ public Object getAttribute(final ResourceResolver resolver, final String name) {\n             return (AdapterType) session;\n         } else if (type == Principal.class) {       \n             try {\n-                if (this.session instanceof JackrabbitSession){\n+                if (this.session instanceof JackrabbitSession && session.getUserID()!=null) {\n                     JackrabbitSession s =((JackrabbitSession) this.session);\n                     final UserManager um = s.getUserManager();\n                     if (um != null) {",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/raw/149e81b37229f5cac73bf706b2e36785a990cbec/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "sha": "69e1f4200f971d74b4519267c413c9f3925fbc94",
                "status": "modified"
            }
        ],
        "message": "SLING-3831 - Possible NPE in JcrResourceProvider#adaptTo\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1616478 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/be2700a60d1ab98a8983ed3e3b61b9ddd33d27e8",
        "repo": "sling-org-apache-sling-jcr-resource",
        "unit_tests": [
            "JcrResourceProviderTest.java"
        ]
    },
    "sling-org-apache-sling-jcr-resource_301a487": {
        "bug_id": "sling-org-apache-sling-jcr-resource_301a487",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/301a487159522336702ae2ebeaf28b9f830f4019",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/blob/301a487159522336702ae2ebeaf28b9f830f4019/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-resource/contents/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java?ref=301a487159522336702ae2ebeaf28b9f830f4019",
                "deletions": 6,
                "filename": "src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "patch": "@@ -134,9 +134,15 @@ public void onEvent(EventIterator events) {\n             final Resource resource = this.resolver.getResource(path);\n             if ( resource != null ) {\n                 final Dictionary<String, String> properties = new Hashtable<String, String>();\n-                properties.put(SlingConstants.PROPERTY_PATH, resource.getPath());\n-                properties.put(SlingConstants.PROPERTY_RESOURCE_TYPE, resource.getResourceType());\n-                properties.put(SlingConstants.PROPERTY_RESOURCE_SUPER_TYPE, resource.getResourceSuperType());\n+                properties.put(SlingConstants.PROPERTY_PATH, path);\n+                final String resourceType = resource.getResourceType();\n+                final String resourceSuperType = resource.getResourceSuperType();\n+                if ( resourceType != null ) {\n+                    properties.put(SlingConstants.PROPERTY_RESOURCE_TYPE, resource.getResourceType());\n+                }\n+                if ( resourceSuperType != null ) {\n+                    properties.put(SlingConstants.PROPERTY_RESOURCE_SUPER_TYPE, resource.getResourceSuperType());\n+                }\n \n                 localEA.postEvent(new org.osgi.service.event.Event(SlingConstants.TOPIC_RESOURCE_ADDED, properties));\n             }\n@@ -145,9 +151,15 @@ public void onEvent(EventIterator events) {\n             final Resource resource = this.resolver.getResource(path);\n             if ( resource != null ) {\n                 final Dictionary<String, String> properties = new Hashtable<String, String>();\n-                properties.put(SlingConstants.PROPERTY_PATH, resource.getPath());\n-                properties.put(SlingConstants.PROPERTY_RESOURCE_TYPE, resource.getResourceType());\n-                properties.put(SlingConstants.PROPERTY_RESOURCE_SUPER_TYPE, resource.getResourceSuperType());\n+                properties.put(SlingConstants.PROPERTY_PATH, path);\n+                final String resourceType = resource.getResourceType();\n+                final String resourceSuperType = resource.getResourceSuperType();\n+                if ( resourceType != null ) {\n+                    properties.put(SlingConstants.PROPERTY_RESOURCE_TYPE, resource.getResourceType());\n+                }\n+                if ( resourceSuperType != null ) {\n+                    properties.put(SlingConstants.PROPERTY_RESOURCE_SUPER_TYPE, resource.getResourceSuperType());\n+                }\n \n                 localEA.postEvent(new org.osgi.service.event.Event(SlingConstants.TOPIC_RESOURCE_CHANGED, properties));\n             }",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/raw/301a487159522336702ae2ebeaf28b9f830f4019/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "sha": "433a41ea3744cb9f22adc10acb498b0702f32d45",
                "status": "modified"
            }
        ],
        "message": "SLING-1034 - Fix NPE in jcr resource listener.\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@791234 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/655b43e94f2e9b051c472d05072078257c380c6a",
        "repo": "sling-org-apache-sling-jcr-resource",
        "unit_tests": [
            "JcrResourceListenerTest.java"
        ]
    },
    "sling-org-apache-sling-jcr-resource_82e4306": {
        "bug_id": "sling-org-apache-sling-jcr-resource_82e4306",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/82e430633bf3516a71648acca43e1de71c3903a5",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/blob/82e430633bf3516a71648acca43e1de71c3903a5/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-resource/contents/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java?ref=82e430633bf3516a71648acca43e1de71c3903a5",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "patch": "@@ -295,7 +295,9 @@ private void sendOsgiEvent(final String path, final Event event, final String to\n             final ChangedAttributes changedAttributes) {\n \n         final Dictionary<String, Object> properties = new Hashtable<String, Object>();\n-        properties.put(SlingConstants.PROPERTY_USERID, event.getUserID());\n+        if ( event.getUserID() != null ) {\n+            properties.put(SlingConstants.PROPERTY_USERID, event.getUserID());\n+        }\n         if (this.isExternal(event)) {\n             properties.put(\"event.application\", \"unknown\");\n         }",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/raw/82e430633bf3516a71648acca43e1de71c3903a5/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "sha": "921e20d9a95811ad751d48dc1a726115f3ef36ab",
                "status": "modified"
            }
        ],
        "message": "SLING-2773 : NPE in JcrResourceListener on missing user id\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1453303 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/ec4ae2adfc701e39a78513059a42fbf146d04e05",
        "repo": "sling-org-apache-sling-jcr-resource",
        "unit_tests": [
            "JcrResourceListenerTest.java"
        ]
    },
    "sling-org-apache-sling-jcr-resource_8531843": {
        "bug_id": "sling-org-apache-sling-jcr-resource_8531843",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/85318436430d8680e6a2a3acf1a45fc76ecbad53",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/blob/85318436430d8680e6a2a3acf1a45fc76ecbad53/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-resource/contents/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java?ref=85318436430d8680e6a2a3acf1a45fc76ecbad53",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "patch": "@@ -392,7 +392,7 @@ public Object getAttribute(final ResourceResolver resolver, final String name) {\n             return (AdapterType) session;\n         } else if (type == Principal.class) {       \n             try {\n-                if (this.session instanceof JackrabbitSession && session.getUserID()!=null) {\n+                if (this.session instanceof JackrabbitSession && session.getUserID() != null) {\n                     JackrabbitSession s =((JackrabbitSession) this.session);\n                     final UserManager um = s.getUserManager();\n                     if (um != null) {",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/raw/85318436430d8680e6a2a3acf1a45fc76ecbad53/src/main/java/org/apache/sling/jcr/resource/internal/helper/jcr/JcrResourceProvider.java",
                "sha": "52d1cc1f872c8198097bbafd99ba0d384782f61c",
                "status": "modified"
            }
        ],
        "message": "SLING-3831 - Possible NPE in JcrResourceProvider#adaptTo\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1616484 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/149e81b37229f5cac73bf706b2e36785a990cbec",
        "repo": "sling-org-apache-sling-jcr-resource",
        "unit_tests": [
            "JcrResourceProviderTest.java"
        ]
    },
    "sling-org-apache-sling-jcr-resource_fcff814": {
        "bug_id": "sling-org-apache-sling-jcr-resource_fcff814",
        "commit": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/fcff814295ee6c4b9d6da217574a1f2e00486746",
        "file": [
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/blob/fcff814295ee6c4b9d6da217574a1f2e00486746/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "changes": 65,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-jcr-resource/contents/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java?ref=fcff814295ee6c4b9d6da217574a1f2e00486746",
                "deletions": 22,
                "filename": "src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "patch": "@@ -40,6 +40,7 @@\n import org.apache.felix.scr.annotations.Properties;\n import org.apache.felix.scr.annotations.Property;\n import org.apache.felix.scr.annotations.Reference;\n+import org.apache.felix.scr.annotations.ReferencePolicy;\n import org.apache.jackrabbit.api.observation.JackrabbitEvent;\n import org.apache.sling.api.SlingConstants;\n import org.apache.sling.api.resource.LoginException;\n@@ -68,7 +69,7 @@\n     /** Logger */\n     private final Logger logger = LoggerFactory.getLogger(JcrResourceListener.class);\n \n-    @Reference\n+    @Reference(policy=ReferencePolicy.DYNAMIC)\n     private EventAdmin eventAdmin;\n \n     @Reference\n@@ -115,28 +116,47 @@ public JcrResourceListener() {\n     }\n \n     @Activate\n-    protected void activate() throws RepositoryException, LoginException {\n+    protected void activate() throws LoginException {\n         this.resourceResolver = this.resourceResolverFactory.getAdministrativeResourceResolver(null);\n-        try {\n-            this.session = this.resourceResolver.adaptTo(Session.class);\n-            this.startPath = \"/\";\n-            this.mountPrefix = null;\n-\n-            this.osgiEventQueue = new LinkedBlockingQueue<Dictionary<String,Object>>();\n-            Thread oeqt = new Thread(new Runnable() {\n-                public void run() {\n-                    processOsgiEventQueue();\n-                }\n-            }, \"JCR Resource Event Queue Processor\");\n-            oeqt.start();\n+        this.startPath = \"/\";\n+        this.mountPrefix = null;\n+\n+        this.osgiEventQueue = new LinkedBlockingQueue<Dictionary<String,Object>>();\n+        final Thread oeqt = new Thread(new Runnable() {\n+            public void run() {\n+                init();\n+                processOsgiEventQueue();\n+            }\n+        }, \"JCR Resource Event Queue Processor\");\n+        oeqt.start();\n \n-            this.session.getWorkspace().getObservationManager().addEventListener(this,\n-                Event.NODE_ADDED|Event.NODE_REMOVED|Event.PROPERTY_ADDED|Event.PROPERTY_CHANGED|Event.PROPERTY_REMOVED,\n-                this.startPath, true, null, null, false);\n-        } catch (final RepositoryException re) {\n-            this.resourceResolver.close();\n-            this.resourceResolver = null;\n-            throw re;\n+    }\n+\n+    private void init() {\n+        // lazy polling\n+        Session session = null;\n+        ResourceResolver resolver = this.resourceResolver;\n+        while ( resolver != null && session == null ) {\n+            session = this.resourceResolver.adaptTo(Session.class);\n+            if ( session == null ) {\n+                try {\n+                    Thread.sleep(100);\n+                } catch (final InterruptedException ignore) {\n+                    // we ignore this\n+                }\n+                resolver = this.resourceResolver;\n+            }\n+        }\n+        if ( session != null ) {\n+            try {\n+                session.getWorkspace().getObservationManager().addEventListener(this,\n+                                Event.NODE_ADDED|Event.NODE_REMOVED|Event.PROPERTY_ADDED|Event.PROPERTY_CHANGED|Event.PROPERTY_REMOVED,\n+                                this.startPath, true, null, null, false);\n+                this.session = session;\n+            } catch (final RepositoryException re) {\n+                logger.error(\"Unable to register event listener.\", re);\n+                this.deactivate();\n+            }\n         }\n     }\n \n@@ -155,6 +175,7 @@ protected void deactivate() {\n         }\n         if ( this.resourceResolver != null ) {\n             this.resourceResolver.close();\n+            this.resourceResolver = null;\n         }\n \n         // drop any remaining OSGi Events not processed yet\n@@ -165,7 +186,7 @@ protected void deactivate() {\n     /**\n      * @see javax.jcr.observation.EventListener#onEvent(javax.jcr.observation.EventIterator)\n      */\n-    public void onEvent(EventIterator events) {\n+    public void onEvent(final EventIterator events) {\n         // if the event admin is currently not available, we just skip this\n         final EventAdmin localEA = this.eventAdmin;\n         if ( localEA == null ) {",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-jcr-resource/raw/fcff814295ee6c4b9d6da217574a1f2e00486746/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceListener.java",
                "sha": "6a39579b33c7769f180ed2f0b4ff5754a2abe40d",
                "status": "modified"
            }
        ],
        "message": "SLING-2573 : JcrResourceListener activation is failing with NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1376410 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sling-org-apache-sling-jcr-resource/commit/478bc4e66ef237864cbb0aff02659b27f9284d6c",
        "repo": "sling-org-apache-sling-jcr-resource",
        "unit_tests": [
            "JcrResourceListenerTest.java"
        ]
    }
}