[{"commit": "https://github.com/apache/uima-uimaj/commit/7f5b12d7c43f1f2c063cfec7f695d48d996aba6e", "parent": "https://github.com/apache/uima-uimaj/commit/f9490d601ae5b678927eb582e5aed234c63975e3", "message": "UIMA-5913: Fix NPE in AnnotationOutline.dispose\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uv3/uimaj-v3/trunk@1847831 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/uima-uimaj/raw/7f5b12d7c43f1f2c063cfec7f695d48d996aba6e/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/7f5b12d7c43f1f2c063cfec7f695d48d996aba6e/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java", "sha": "3876f39eb8ac8eebab1dcd928cf91abf263d0105", "changes": 6, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java?ref=7f5b12d7c43f1f2c063cfec7f695d48d996aba6e", "patch": "@@ -439,13 +439,11 @@ public void selectionChanged(IWorkbenchPart part, ISelection selection) {\n    */\r\n   @Override\r\n   public void dispose() {\r\n-    \r\n-    super.dispose();\r\n-    \r\n     getSite().setSelectionProvider(null);\r\n     getSite().getPage().removeSelectionListener(this);\r\n-    \r\n     editor.removeAnnotationListener(editorChangeListener);\r\n+\r\n+    super.dispose();\r\n   }\r\n \r\n   /**\r", "filename": "uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/815d873366c47e92af02aef964c4ef71c4b8f420", "parent": "https://github.com/apache/uima-uimaj/commit/1172f9c4e19072c1df545d8e72b0b53e05541cfa", "message": "[UIMA-5308] merge from trunk fixed potential NPE and also a logic problem replacing && with ||\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uv3/uimaj-v3/trunk@1834905 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/815d873366c47e92af02aef964c4ef71c4b8f420/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/815d873366c47e92af02aef964c4ef71c4b8f420/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java", "sha": "10b8de93709f999f312000d82812b8f0d367c2a0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java?ref=815d873366c47e92af02aef964c4ef71c4b8f420", "patch": "@@ -1079,7 +1079,7 @@ private boolean hasFeature(CasData aCas) {\n         }\n \n         if ((filterExpression.getOperand() == null\n-                && filterExpression.getOperand().getOperand() == null && !exists)\n+                || filterExpression.getOperand().getOperand() == null || !exists)\n                 || // this means that the feature must exist in CAS\n                 (\"!\".equals(filterExpression.getOperand().getOperand()) && exists)) // this\n         // means", "filename": "uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/369eab7ee79b347c0bf3406280da9e90ae90e0b3", "parent": "https://github.com/apache/uima-uimaj/commit/b1b427ab1cb7dcfd081535d04f35d27513d16ba7", "message": "[UIMA-5460] fix npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uv3/uimaj-v3/trunk@1799344 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_3", "file": [{"additions": 3, "raw_url": "https://github.com/apache/uima-uimaj/raw/369eab7ee79b347c0bf3406280da9e90ae90e0b3/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/369eab7ee79b347c0bf3406280da9e90ae90e0b3/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java", "sha": "2bbdf4a47482c7004d9629ef9cc285d817ef91a9", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java?ref=369eab7ee79b347c0bf3406280da9e90ae90e0b3", "patch": "@@ -119,7 +119,9 @@ private synchronized ResourceManager createRM(StringPair sp, PackageBrowser pkgB\n //       ((ResourceManagerPearWrapper)rsrcMgr).initializeFromParentResourceManager(parentResourceManager);\n      }\n      rsrcMgr.setExtensionClassPath(sp.classPath, true);\n-     rsrcMgr.setCasManager(parentResourceManager.getCasManager());  // shares the same merged type system\n+     if (parentResourceManager != null) {\n+       rsrcMgr.setCasManager(parentResourceManager.getCasManager());  // shares the same merged type system\n+     }\n      UIMAFramework.getLogger(this.getClass()).logrb(\n             Level.CONFIG,\n             this.getClass().getName(),", "filename": "uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/7ec28f9e3888877edbae232a46265c04af6ec07d", "parent": "https://github.com/apache/uima-uimaj/commit/ddefe9f56d1e76a081a00e708eaae271c270bc08", "message": "[UIMA-5460] fix npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1799343 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_4", "file": [{"additions": 3, "raw_url": "https://github.com/apache/uima-uimaj/raw/7ec28f9e3888877edbae232a46265c04af6ec07d/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/7ec28f9e3888877edbae232a46265c04af6ec07d/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java", "sha": "2bbdf4a47482c7004d9629ef9cc285d817ef91a9", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java?ref=7ec28f9e3888877edbae232a46265c04af6ec07d", "patch": "@@ -119,7 +119,9 @@ private synchronized ResourceManager createRM(StringPair sp, PackageBrowser pkgB\n //       ((ResourceManagerPearWrapper)rsrcMgr).initializeFromParentResourceManager(parentResourceManager);\n      }\n      rsrcMgr.setExtensionClassPath(sp.classPath, true);\n-     rsrcMgr.setCasManager(parentResourceManager.getCasManager());  // shares the same merged type system\n+     if (parentResourceManager != null) {\n+       rsrcMgr.setCasManager(parentResourceManager.getCasManager());  // shares the same merged type system\n+     }\n      UIMAFramework.getLogger(this.getClass()).logrb(\n             Level.CONFIG,\n             this.getClass().getName(),", "filename": "uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/e12f06d695bd2ca9e247e0203db51af546db1f23", "parent": "https://github.com/apache/uima-uimaj/commit/06e78df1a5e7c6a5a6314961894e34f9c43f0f9c", "message": "UIMA-5308 fixed potential NPE and also a logic problem replacing && with ||\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1782853 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/e12f06d695bd2ca9e247e0203db51af546db1f23/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/e12f06d695bd2ca9e247e0203db51af546db1f23/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java", "sha": "5ec0ef0aaed30567f6680760d3f1a44fc502e880", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java?ref=e12f06d695bd2ca9e247e0203db51af546db1f23", "patch": "@@ -1000,7 +1000,7 @@ private boolean hasFeature(CasData aCas) {\n         }\n \n         if ((filterExpression.getOperand() == null\n-                && filterExpression.getOperand().getOperand() == null && !exists)\n+                || filterExpression.getOperand().getOperand() == null || !exists)\n                 || // this means that the feature must exist in CAS\n                 (\"!\".equals(filterExpression.getOperand().getOperand()) && exists)) // this\n         // means", "filename": "uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/c816f9bd5c48af9c523ca612303fe713bf4806dc", "parent": "https://github.com/apache/uima-uimaj/commit/f4ba3064c4eb09adae2ad7d638abeb39c43c430d", "message": "[UIMA-4674] fix npe in pretty-print of arrays; fix reset and test of empty modified tracking info\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/branches/experiment-v3-jcas@1775563 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_6", "file": [{"additions": 9, "raw_url": "https://github.com/apache/uima-uimaj/raw/c816f9bd5c48af9c523ca612303fe713bf4806dc/uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/c816f9bd5c48af9c523ca612303fe713bf4806dc/uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java", "sha": "61b7346d95bf578c73c81c42adcd971c7dd240b1", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java?ref=c816f9bd5c48af9c523ca612303fe713bf4806dc", "patch": "@@ -91,7 +91,6 @@\n import org.apache.uima.cas.text.AnnotationFS;\n import org.apache.uima.cas.text.AnnotationIndex;\n import org.apache.uima.cas.text.Language;\n-import org.apache.uima.internal.util.Int2ObjHashMap;\n import org.apache.uima.internal.util.IntVector;\n import org.apache.uima.internal.util.Misc;\n import org.apache.uima.internal.util.PositiveIntSet;\n@@ -623,7 +622,11 @@ private void clearTrackingMarks() {\n       }\n \n       trackingMark = null;\n-      if (null != modifiedPreexistingFSs) modifiedPreexistingFSs.clear();\n+      if (null != modifiedPreexistingFSs) {\n+        modifiedPreexistingFSs.clear();\n+      }\n+      \n+      trackingMarkList = null;\n     }\n     \n     void switchClassLoader(ClassLoader newClassLoader) {\n@@ -4460,7 +4463,10 @@ public Marker createMarker() {\n   \t\t\tthis);\n   \tif (this.svd.modifiedPreexistingFSs == null) {\n   \t  this.svd.modifiedPreexistingFSs = new IdentityHashMap<>();\n-  \t} else {errorMultipleMarkers();}\n+  \t}\n+  \tif (this.svd.modifiedPreexistingFSs.size() > 0) {\n+  \t  errorMultipleMarkers();\n+  \t}\n \n   \tif (this.svd.trackingMarkList == null) {\n   \t  this.svd.trackingMarkList = new ArrayList<MarkerImpl>();", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/uima-uimaj/raw/c816f9bd5c48af9c523ca612303fe713bf4806dc/uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/c816f9bd5c48af9c523ca612303fe713bf4806dc/uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java", "sha": "ac755af378a652c8edfd2f5a811b9840f9a14c68", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java?ref=c816f9bd5c48af9c523ca612303fe713bf4806dc", "patch": "@@ -946,6 +946,9 @@ private final void getPrintRefs(PrintReferences printRefs) {\n   }\n \n   private final void getPrintRefs(PrintReferences printRefs, FeatureStructureImplC fs) {\n+    if (null == fs) {\n+      return;\n+    }\n     boolean seenBefore = printRefs.addReference(fs);\n     if (seenBefore) {\n       return;", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/16526d6f2e58da9582ff0d9dfbc7f6443513aeff", "parent": "https://github.com/apache/uima-uimaj/commit/3fed532b0831f01ab021b914e06c93d265c380e7", "message": "[UIMA-4674] avoid npe when locator value not available\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/branches/experiment-v3-jcas@1759855 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_7", "file": [{"additions": 3, "raw_url": "https://github.com/apache/uima-uimaj/raw/16526d6f2e58da9582ff0d9dfbc7f6443513aeff/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/16526d6f2e58da9582ff0d9dfbc7f6443513aeff/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java", "sha": "0fcb0b7213d930e4bf49fa74e4dfdc121d954986", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java?ref=16526d6f2e58da9582ff0d9dfbc7f6443513aeff", "patch": "@@ -628,8 +628,8 @@ private void doDeferFsOrThrow(String idStr, String nameSpaceURI, String localNam\n       this.deferredFsElement = new OotsElementData(\n           idStr, \n           new XmlElementName(nameSpaceURI, localName, qualifiedName),\n-          locator.getLineNumber(),\n-          locator.getColumnNumber());\n+          (locator == null) ? 0 : locator.getLineNumber(),\n+          (locator == null) ? 0 : locator.getColumnNumber());\n       \n       deferredFSs.add(this.deferredFsElement);\n       // This next call isn't about oots data, it's reusing that to store the attributes with the deferred thing.\n@@ -1871,7 +1871,7 @@ public void ignorableWhitespace(char[] arg0, int arg1, int arg2) throws SAXExcep\n      */\n     @Override\n     public void setDocumentLocator(Locator loc) {\n-      // System.out.println(\"Setting document locator.\");\n+//       System.out.println(\"debug  DEBUG  Setting document locator.\");\n       this.locator = loc;\n     }\n ", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/371d330d0c27f464fbb710c93354b5c6ca3e9d18", "parent": "https://github.com/apache/uima-uimaj/commit/6a75eb9e930f5f5f38c8a5a14fd3349ae6e3a764", "message": "[UIMA-3759] Fix some NPEs caused by the new tearDown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1588532 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_8", "file": [{"additions": 10, "raw_url": "https://github.com/apache/uima-uimaj/raw/371d330d0c27f464fbb710c93354b5c6ca3e9d18/uimaj-core/src/test/java/org/apache/uima/cas/impl/SerDesTest6.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/371d330d0c27f464fbb710c93354b5c6ca3e9d18/uimaj-core/src/test/java/org/apache/uima/cas/impl/SerDesTest6.java", "sha": "c669338044fce699fea3d77c39316a466726086a", "changes": 21, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/cas/impl/SerDesTest6.java?ref=371d330d0c27f464fbb710c93354b5c6ca3e9d18", "patch": "@@ -228,16 +228,7 @@ public SerDesTest6() {\n //    seed =  2934127305128325787L;\n     random = new Random(seed);\n     System.out.format(\"RandomSeed: %,d%n\", seed);\n-\n-    mSrc = setupTTypeSystem(TwoTypes);\n-    casSrc = mSrc.cas;\n-    final TypeSystems[] tss = TypeSystems.values();\n-    final int nbrAltTs = tss.length;\n-    alternateTTypeSystems = new TTypeSystem[nbrAltTs];\n-    for (int i = 0; i < nbrAltTs; i++){\n-      alternateTTypeSystems[i] = setupTTypeSystem(tss[i]);\n-    }\n-  }\n+   }\n   \n   public TTypeSystem setupTTypeSystem(TypeSystems kind) {\n     if (kind == EqTwoTypes) {\n@@ -254,7 +245,14 @@ public TTypeSystem setupTTypeSystem(TypeSystems kind) {\n   }\n   \n   public void setUp() {\n-    casSrc.reset();\n+    mSrc = setupTTypeSystem(TwoTypes);\n+    casSrc = mSrc.cas;\n+    final TypeSystems[] tss = TypeSystems.values();\n+    final int nbrAltTs = tss.length;\n+    alternateTTypeSystems = new TTypeSystem[nbrAltTs];\n+    for (int i = 0; i < nbrAltTs; i++){\n+      alternateTTypeSystems[i] = setupTTypeSystem(tss[i]);\n+    }\n     lfs = new ArrayList<FeatureStructure>();\n   }\n   \n@@ -264,6 +262,7 @@ public void tearDown() {\n     mSrc = null;\n     casSrc = null;\n     alternateTTypeSystems = null;\n+    // don't reset random\n   }\n   \n //  void setupTgtTs(String kind) {", "filename": "uimaj-core/src/test/java/org/apache/uima/cas/impl/SerDesTest6.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/f59d64f7c84dae7126060aab206944cf850c67d7", "parent": "https://github.com/apache/uima-uimaj/commit/5f3c0a4bd3e375570e24d6d4965fc86fba0096c8", "message": "[UIMA-2481] NPE when chosing new Collection Reader descriptor\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1477157 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_9", "file": [{"additions": 25, "raw_url": "https://github.com/apache/uima-uimaj/raw/f59d64f7c84dae7126060aab206944cf850c67d7/uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/f59d64f7c84dae7126060aab206944cf850c67d7/uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java", "sha": "2b2af1236f669d53a5deb4a6ddfb8f38a58aa095", "changes": 41, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java?ref=f59d64f7c84dae7126060aab206944cf850c67d7", "patch": "@@ -1501,15 +1501,19 @@ public boolean fileSelected(JComponent source, String fileString) {\n     try {\r\n       if (source == collectionReaderPanel) {\r\n         if (fileString != null && fileString.length() > 0) {\r\n+          // [UIMA-2841]\r\n+          currentCpeDesc.setAllCollectionCollectionReaders(null);\r\n+          currentCpeDesc.addCollectionReader(fileString);\r\n           CpeCollectionReader[] readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n-          if (readers.length == 0) {\r\n-            currentCpeDesc.addCollectionReader(fileString);\r\n-            readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n-          } else {\r\n-            readers[0].getCollectionIterator().getDescriptor().getInclude().set(fileString);\r\n-            // clear config settings\r\n-            readers[0].getCollectionIterator().setConfigurationParameterSettings(null);\r\n-          }\r\n+          \r\n+//          CpeCollectionReader[] readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n+//          if (readers.length == 0) {\r\n+//            currentCpeDesc.addCollectionReader(fileString);\r\n+//            readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n+//          } else {\r\n+//            readers[0].getCollectionIterator().getDescriptor().getInclude().set(fileString);\r\n+//            readers[0].getCollectionIterator().setConfigurationParameterSettings(null);\r\n+//          }\r\n \r\n           rv = populateCollectionReaderPanel(readers[0].getCollectionIterator());\r\n         } else {\r\n@@ -1519,15 +1523,20 @@ public boolean fileSelected(JComponent source, String fileString) {\n         selectedComponentsChanged = true;\r\n       } else if (source == casInitializerPanel) {\r\n         if (fileString != null && fileString.length() > 0) {\r\n+          // [UIMA-2841]\r\n+          currentCpeDesc.setAllCollectionCollectionReaders(null);\r\n+          currentCpeDesc.addCasInitializer(fileString);\r\n           CpeCollectionReader[] readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n-          if (readers.length == 0 || readers[0].getCasInitializer() == null) {\r\n-            currentCpeDesc.addCasInitializer(fileString);\r\n-            readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n-          } else {\r\n-            readers[0].getCasInitializer().getDescriptor().getInclude().set(fileString);\r\n-            // clear config settings\r\n-            readers[0].getCasInitializer().setConfigurationParameterSettings(null);\r\n-          }\r\n+          \r\n+//          CpeCollectionReader[] readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n+//          if (readers.length == 0 || readers[0].getCasInitializer() == null) {\r\n+//            currentCpeDesc.addCasInitializer(fileString);\r\n+//            readers = currentCpeDesc.getAllCollectionCollectionReaders();\r\n+//          } else {\r\n+//            readers[0].getCasInitializer().getDescriptor().getInclude().set(fileString);\r\n+//            // clear config settings\r\n+//            readers[0].getCasInitializer().setConfigurationParameterSettings(null);\r\n+//          }\r\n           rv = populateCasInitializerPanel(readers[0].getCasInitializer());\r\n         } else {\r\n           // no CAS initializer selected - OK\r", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/cf05660262eca3be82e33f25ab1e0cec46bd5636", "parent": "https://github.com/apache/uima-uimaj/commit/466e8b055fe97b43a96cf23e2817ed2a9aca3d6a", "message": "no Jira - correct NPE in test case - checking for existence of test output file - if it's not there, then NPE.  Discovered on Linux.  Doesn't happen on Windows - probably because the file is always there - there's another test case that creates it, and the tests could run in a different order between Windows and Linux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@819716 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/cf05660262eca3be82e33f25ab1e0cec46bd5636/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/cf05660262eca3be82e33f25ab1e0cec46bd5636/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java", "sha": "2b808c7dc98aeba616de1873d74ded52b0707f3f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java?ref=cf05660262eca3be82e33f25ab1e0cec46bd5636", "patch": "@@ -350,7 +350,7 @@ public void testProcess() throws Exception {\n \n       // test aggregate TAE containing a CAS Consumer\n       File outFile = JUnitExtension.getFile(\"CpmOutput.txt\");\n-      if(outFile.exists()) {\n+      if(outFile != null && outFile.exists()) {\n         //outFile.delete() //can't be relied upon.  Instead set file to zero length.\n         FileOutputStream fos = new FileOutputStream(outFile, false);\n         fos.close();", "filename": "uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/56c8a2fa5f60c900f0db04ab07b13a49543a05d6", "parent": "https://github.com/apache/uima-uimaj/commit/ecad0372d4646e8d55e756a4da34807b8dcb1f6d", "message": "[UIMA-4080] NPE when limiting to project and importing descriptor from dependency\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1636062 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_11", "file": [{"additions": 8, "raw_url": "https://github.com/apache/uima-uimaj/raw/56c8a2fa5f60c900f0db04ab07b13a49543a05d6/uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/56c8a2fa5f60c900f0db04ab07b13a49543a05d6/uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java", "sha": "f4c66685e42f39d90136f50b630c5378ca87c93e", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java?ref=56c8a2fa5f60c900f0db04ab07b13a49543a05d6", "patch": "@@ -717,9 +717,16 @@ private boolean isOutOfScope(TypeDescription td, String projectDirPath) {\n     try {\n       typeDefinitionUri = new URI (td.getSourceUrlString());\n     } catch (URISyntaxException e) {\n-      return true; // may be overkill - but if td's source cant be parsed, ... likely out of project\n+      return true; // may be overkill - but if td's source can't be parsed ... likely out of project\n     }\n     String tdPath = typeDefinitionUri.getPath();\n+    \n+    // Issue UIMA-4080 - If a type system resides in a JAR, then the path is null and it is\n+    // certainly out of scope.\n+    if (tdPath == null) {\n+        return true;\n+    }\n+    \n     boolean r = !tdPath.startsWith(projectDirPath);\n     if (r) {\n       return true;", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/20ee1730277219c1dc083d316d4f692af5165e9a", "parent": "https://github.com/apache/uima-uimaj/commit/e7b7e727fbb8884a921f1cbc0cae304ee79bd845", "message": "UIMA-3123 Avoid a NPE by checking for missing elements in a nameValuePair\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1513594 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_12", "file": [{"additions": 8, "raw_url": "https://github.com/apache/uima-uimaj/raw/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java", "sha": "6500a047428ca6e6fd6266d0ae0a0a7f1300b645", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java?ref=20ee1730277219c1dc083d316d4f692af5165e9a", "patch": "@@ -287,6 +287,10 @@ protected void validateConfigurationParameterSettings(NameValuePair[] aNVPs, Str\n     for (int i = 0; i < aNVPs.length; i++) {\n       // look up the parameter info\n       String name = aNVPs[i].getName();\n+      if (name == null) {\n+        throw new ResourceConfigurationException(InvalidXMLException.ELEMENT_NOT_FOUND,\n+                new Object[] { \"name\", \"nameValuePair\" });\n+      }\n       ConfigurationParameter param = aParamDecls.getConfigurationParameter(aGroupName, name);\n       if (param == null) {\n         if (aGroupName == null) {\n@@ -324,6 +328,10 @@ protected void validateConfigurationParameterDataTypeMatch(ConfigurationParamete\n           NameValuePair aNVP) throws ResourceConfigurationException {\n     String paramName = aParam.getName();\n     String paramType = aParam.getType();\n+    if (aNVP.getValue() == null) {\n+      throw new ResourceConfigurationException(ResourceConfigurationException.CONFIG_SETTING_ABSENT,\n+              new Object[] { paramName });\n+    }\n     Class<?> valClass = aNVP.getValue().getClass();\n \n     if (aParam.isMultiValued()) // value must be an array", "filename": "uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/uima-uimaj/raw/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties", "blob_url": "https://github.com/apache/uima-uimaj/blob/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties", "sha": "26a1cd8e09bbfd506c72e914399a75dc381d8081", "changes": 10, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties?ref=20ee1730277219c1dc083d316d4f692af5165e9a", "patch": "@@ -103,9 +103,9 @@ cas_multiplier_not_supported = The Flow class {0} does not support the productio\n #--------------------------------\n #ResourceConfigurationException\n #--------------------------------\n-nonexistent_parameter = No configuration parameter with name {0} is declared in component \"{1}\".\n+nonexistent_parameter = No configuration parameter with name \"{0}\" is declared in component \"{1}\".\n \n-nonexistent_parameter_in_group = No configuration parameter with name {0} is declared in group \\\n+nonexistent_parameter_in_group = No configuration parameter with name \"{0}\" is declared in group \\\n            {1} in component \"{2}\".\n \n parameter_type_mismatch = Parameter type mismatch in component \"{0}\".  A value of class {1} cannot be \\\n@@ -121,9 +121,7 @@ mandatory_value_missing_in_group = No value has been assigned to the mandatory c\n \n resource_data_not_valid = The configuration data \"{0}\" for Configuration parameter \"{1}\" in the resource is not valid\n \n-config_setting_absent = Configuration setting for parameter \"{0}\" is absent.\n-\n-resource_not_found = Configuration setting for parameter \"{0}\" is absent.\n+config_setting_absent = Configuration setting for the value of parameter \"{0}\" is absent.\n \n directory_not_found = Invalid value for parameter \"{0}\" in component \"{1}\" -- \\\n \t directory \"{2}\" does not exist.\n@@ -288,8 +286,6 @@ malformed_url = Malformed URL \"{0}\". (Descriptor: {1})\n \n resource_data_not_valid = The configuration data \"{0}\" for Configuration parameter \"{1}\" in the resource is not valid\n \n-config_setting_absent = Configuration setting for parameter \"{0}\" is absent.\n-\n duplicate_index_name = Two different CAS FeatureStructure indexes with name \"{0}\" have been defined. (Descriptors: {1}, {2})\n \n param_override_in_primitive =  Configuration parameter \"{0}\" in primitive Analysis Engine \"{1}\" \\", "filename": "uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties"}, {"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/test/resources/TextAnalysisEngineImplTest/AnnotatorWithGroupParameterError.xml", "blob_url": "https://github.com/apache/uima-uimaj/blob/20ee1730277219c1dc083d316d4f692af5165e9a/uimaj-core/src/test/resources/TextAnalysisEngineImplTest/AnnotatorWithGroupParameterError.xml", "sha": "93f3ee9cd0202fb31888e63858e94e0692ef2fc2", "changes": 6, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/resources/TextAnalysisEngineImplTest/AnnotatorWithGroupParameterError.xml?ref=20ee1730277219c1dc083d316d4f692af5165e9a", "patch": "@@ -86,10 +86,6 @@\n </nameValuePair>\n \n <settingsForGroup name=\"en\">\n-  <nameValuePair>\n-    <name>StringParam</name>\n-    <value><string>en</string></value>\n-  </nameValuePair>\n   <nameValuePair>\n     <name>StringArrayParam</name>\n     <value><array>\n@@ -128,7 +124,7 @@\n   </nameValuePair>\n   <nameValuePair>\n     <name>IntegerArrayParam</name>\n-    <!-- Value should be an array ... will fail unless UIMA_Jira3123 is set -->\n+    <!-- Value should be an array ... will fail in a future release unless UIMA_Jira3123 is set -->\n     <value><integer>1776</integer></value>\n   </nameValuePair>\n </settingsForGroup>", "filename": "uimaj-core/src/test/resources/TextAnalysisEngineImplTest/AnnotatorWithGroupParameterError.xml"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/cf9d5c9b007f9c377ce244d5e155d0971b048bc0", "parent": "https://github.com/apache/uima-uimaj/commit/a5b532c5c2e4408a7150426b275f0173b175d4bb", "message": "[UIMA-2409] fixed NPE, and also clarified that source/dest CASes must be different; added checks, add test cases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1504178 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_13", "file": [{"additions": 18, "raw_url": "https://github.com/apache/uima-uimaj/raw/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java", "sha": "0afb81ec51c0326da4890e2c776be6627118fd9b", "changes": 18, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java?ref=cf9d5c9b007f9c377ce244d5e155d0971b048bc0", "patch": "@@ -117,6 +117,24 @@\n    */\n   public static final String RESULT_SPEC_NULL = \"result_spec_null\";\n \n+  /**\n+   * Message key for a standard UIMA exception message:\n+   * In CasCopier, the {0} view is doesn't belong to the original {0} CAS specified when creating the CasCopier instance \n+   */\n+  public static final String VIEW_NOT_PART_OF_CAS = \"view_not_part_of_cas\";\n+  \n+  /**\n+   * Message key for a standard UIMA exception message:\n+   * Unsupported invocation of CasCopier copyCasView, specifying a source or destination as a base CAS.  \n+   */\n+  public static final String UNSUPPORTED_CAS_COPY_TO_OR_FROM_BASE_CAS = \"unsupported_cas_copy_view_base_cas\";\n+ \n+  /**\n+   * Message key for a standard UIMA exception message:\n+   * It is not permitted to use CasCopier to copy a Cas to itself, even in another view.  \n+   */\n+  public static final String ILLEGAL_CAS_COPY_TO_SAME_CAS = \"illegal_cas_copy_to_same_cas\";\n+  \n   /**\n    * Creates a new exception with a null message.\n    */", "filename": "uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java"}, {"additions": 101, "raw_url": "https://github.com/apache/uima-uimaj/raw/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java", "sha": "1042065a708013394430169df05c4c1533513d06", "changes": 138, "status": "modified", "deletions": 37, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java?ref=cf9d5c9b007f9c377ce244d5e155d0971b048bc0", "patch": "@@ -53,11 +53,22 @@\n  * CasCopier and use it to copy multiple FeatureStructures. The CasCopier will remember previously\n  * copied FeatureStructures, so if you later copy another FS that has a reference to a previously\n  * copied FS, it will not duplicate the multiply-referenced FS.\n+ * \n  */\n public class CasCopier {\n-  private CAS mSrcCas;\n-  private CAS mDestCas;\n+  private final CAS mSrcBaseCas;\n+  private final CAS mDestBaseCas;\n+  \n+  private final CAS mOriginalSrcCasView;\n+  private final CAS mOriginalTgtCasView;\n+  /**\n+   * The source view name - may be null if the view is of the base CAS\n+   */\n   private String mSrcCasViewName;\n+  /**\n+   * The target view name - not used unless doing a view copy \n+   * Allows copying a view to another CAS under a different name\n+   */\n   private String mTgtCasViewName;\n   private LowLevelCAS mLowLevelDestCas;\n   final private Feature mDestSofaFeature;\n@@ -85,6 +96,9 @@\n    *       the destination CAS, the copy will fail (in other words, the lenient setting is false,\n    *       by default).\n    *\n+   * Note: The source and destination CASes must be different, and have different\n+   *       base CASs (they cannot be two different views of the same CAS)\n+   *       \n    * @param aSrcCas\n    *          the CAS to copy from.\n    * @param aDestCas\n@@ -100,6 +114,9 @@ public CasCopier(CAS aSrcCas, CAS aDestCas) {\n    * for each source CAS. This version of the constructor supports a \"lenient copy\" option. When set,\n    * the CAS copy function will ignore (not attempt to copy) FSs and features not defined in the type system\n    * of the destination CAS, rather than throwing an exception.\n+   * \n+   * Note: The source and destination CASes must be different, and have different\n+   *       base CASs (they cannot be two different views of the same CAS)\n    *\n    * @param aSrcCas\n    *          the CAS to copy from.\n@@ -109,10 +126,17 @@ public CasCopier(CAS aSrcCas, CAS aDestCas) {\n    *          ignore FSs and features not defined in the type system of the destination CAS\n    */\n   public CasCopier(CAS aSrcCas, CAS aDestCas, boolean lenient) {\n-    mSrcCas = aSrcCas;\n-    mDestCas = aDestCas;\n+    mOriginalSrcCasView = aSrcCas;\n+    mOriginalTgtCasView = aDestCas;\n+    mSrcBaseCas = ((CASImpl)aSrcCas).getBaseCAS();\n+    mDestBaseCas = ((CASImpl)aDestCas).getBaseCAS();\n+    \n     mDestSofaFeature = aDestCas.getTypeSystem().getFeatureByFullName(CAS.FEATURE_FULL_NAME_SOFA);    \n     this.lenient = lenient;\n+    \n+    if (mSrcBaseCas == mDestBaseCas) {\n+      throw new UIMARuntimeException(UIMARuntimeException.ILLEGAL_CAS_COPY_TO_SAME_CAS, null); \n+    }\n   }\n   \n   /**\n@@ -183,11 +207,16 @@ public static void copyCas(CAS aSrcCas, CAS aDestCas, boolean aCopySofa, boolean\n    * Cross-view references may result in creating additional views in the destination CAS;\n    * for these views, any Sofa data in the source is *not* copied.\n    * \n-   * @param aSrcCasView the CAS to copy from\n+   * If the source and destination CASes (as set in the constructor for this class) \n+   * are the same, or are two different views of the same CAS, then\n+   * this method will make a deep copy of all the feature structures in the view,\n+   * duplicating them, and indexing them.\n+   * \n+   * @param aSrcCasView the CAS to copy from.  This must be a view in the src Cas set by the constructor\n    * @param aCopySofa if true, the sofa data and mimeType will be copied. If false they will not.\n    */\n   public void copyCasView(CAS aSrcCasView, boolean aCopySofa) {\n-    copyCasView(aSrcCasView, getOrCreateView(mDestCas, aSrcCasView.getViewName()), aCopySofa);\n+    copyCasView(aSrcCasView, getOrCreateView(mDestBaseCas, aSrcCasView.getViewName()), aCopySofa);\n   }\n   \n   /**\n@@ -201,11 +230,16 @@ public void copyCasView(CAS aSrcCasView, boolean aCopySofa) {\n    * for these views, any Sofa data in the source is *not* copied.  Any views created because\n    * of cross-view references will have the same view name as in the source.\n    * \n+   * If the source and destination CASes (as set in the constructor for this class) \n+   * are the same, or are two different views of the same CAS, then\n+   * this method will make a deep copy of all the feature structures in the view,\n+   * duplicating them, and indexing them.\n+   *\n    * @param aSrcCasViewName the name of the view in the source CAS to copy from\n    * @param aCopySofa if true, the sofa data and mimeType will be copied. If false they will not.\n    */\n   public void copyCasView(String aSrcCasViewName, boolean aCopySofa) {\n-    copyCasView(getOrCreateView(mSrcCas, aSrcCasViewName), aCopySofa);\n+    copyCasView(getOrCreateView(mSrcBaseCas, aSrcCasViewName), aCopySofa);\n   }\n   \n   /**\n@@ -220,12 +254,17 @@ public void copyCasView(String aSrcCasViewName, boolean aCopySofa) {\n    * for these views, any Sofa data in the source is *not* copied.  Any views created because\n    * of cross-view references will have the same view name as in the source.\n    * \n+   * If the source and destination CASes (as set in the constructor for this class) \n+   * are the same, or are two different views of the same CAS, then\n+   * this method will make a deep copy of all the feature structures in the view,\n+   * duplicating them, and indexing them.\n+   * \n    * @param aSrcCasView The view in the source to copy from\n    * @param aTgtCasViewName The name of the view in the destination CAS to copy into\n    * @param aCopySofa if true, the sofa data and mimeType will be copied. If false they will not.\n    */\n   public void copyCasView(CAS aSrcCasView, String aTgtCasViewName, boolean aCopySofa) {\n-    copyCasView(aSrcCasView, getOrCreateView(mDestCas, aTgtCasViewName), aCopySofa);\n+    copyCasView(aSrcCasView, getOrCreateView(mDestBaseCas, aTgtCasViewName), aCopySofa);\n   }\n \n   /**\n@@ -238,41 +277,65 @@ public void copyCasView(CAS aSrcCasView, String aTgtCasViewName, boolean aCopySo\n    * for these views, any Sofa data in the source is *not* copied.  Any views created because\n    * of cross-view references will have the same view name as in the source.\n    * \n+   * If the source and destination CASes (as set in the constructor for this class) \n+   * are the same, or are two different views of the same CAS, then\n+   * this method will make a deep copy of all the feature structures in the view,\n+   * duplicating them, and indexing them.\n+   * \n    * @param aSrcCasViewName The name of the view in the Source CAS to copy from\n    * @param aTgtCasView The view in the destination CAS to copy into\n    * @param aCopySofa if true, the sofa data and mimeType will be copied. If false they will not.\n    */\n   public void copyCasView(String aSrcCasViewName, CAS aTgtCasView, boolean aCopySofa) {\n-    copyCasView(getOrCreateView(mSrcCas, aSrcCasViewName), aTgtCasView, aCopySofa);\n+    copyCasView(getOrCreateView(mSrcBaseCas, aSrcCasViewName), aTgtCasView, aCopySofa);\n   }\n \n   /**\n    * Does a deep copy of the contents of one CAS View into another CAS view,\n    * with a possibly different name.\n+   * \n+   * The CASes must be different (that is, they cannot be 2 views of the same CAS).  \n+   * \n    * All FeatureStructures \n    * (except for those dropped because the target type system doesn't have the needed type) that are indexed \n    * in the source CAS view will become indexed in the target view.\n    * Cross-view references may result in creating additional views in the destination CAS;\n    * for these views, any Sofa data in the source is *not* copied.  Any views created because\n    * of cross-view references will have the same view name as in the source.\n    * \n+   * If called on the same CAS (to copy one view into another one, within one CAS), it will\n+   * create duplicates of the Feature Structures.\n+   * \n    * @param aSrcCasView\n-   *          the CAS to copy from\n+   *          the CAS to copy from. This must be a view of the srcCas set in the constructor\n    * @param aCopySofa\n-   *          if true, the sofa data and mimeType will be copied. If false they will not.\n+   *          if true, the sofa data and mimeType will be copied. If false they will not.  \n+   *          If true and the sofa data is already set in the target, will throw CASRuntimeException        \n    */\n   public void copyCasView(CAS aSrcCasView, CAS aTgtCasView, boolean aCopySofa) {\n-    if (aSrcCasView == aTgtCasView) {\n-      throw new UIMARuntimeException(UIMARuntimeException.ILLEGAL_CAS_COPY_TO_SAME_CAS_SAME_VIEW, null);\n+//    if (aSrcCasView == aTgtCasView) {\n+//      throw new UIMARuntimeException(UIMARuntimeException.ILLEGAL_CAS_COPY_TO_SAME_CAS_SAME_VIEW, null);\n+//    }\n+    \n+//    if (aSrcCasView == ((CASImpl)aSrcCasView).getBaseCAS() ||\n+//        aTgtCasView == ((CASImpl)aTgtCasView).getBaseCAS())\n+//      throw new UIMARuntimeException(UIMARuntimeException.UNSUPPORTED_CAS_COPY_TO_OR_FROM_BASE_CAS, null);\n+    \n+    if (mSrcBaseCas != ((CASImpl)aSrcCasView).getBaseCAS()) {\n+      throw new UIMARuntimeException(UIMARuntimeException.VIEW_NOT_PART_OF_CAS, new Object[] {\"Source\"});\n+    }\n+    if (mDestBaseCas != ((CASImpl)aTgtCasView).getBaseCAS()) {\n+      throw new UIMARuntimeException(UIMARuntimeException.VIEW_NOT_PART_OF_CAS, new Object[] {\"Destination\"});\n     }\n     \n-    mSrcCas = aSrcCasView;\n-    mSrcCasViewName = aSrcCasView.getViewName();\n-       \n-    mDestCas = aTgtCasView;\n+    mSrcCasViewName = aSrcCasView.getViewName(); \n     mTgtCasViewName = aTgtCasView.getViewName();\n-    \n-    mLowLevelDestCas = mDestCas.getLowLevelCAS();\n+\n+    if (null == mSrcCasViewName || null == mTgtCasViewName ) {\n+      throw new UIMARuntimeException(UIMARuntimeException.UNSUPPORTED_CAS_COPY_TO_OR_FROM_BASE_CAS, null);\n+    }\n+        \n+    mLowLevelDestCas = mDestBaseCas.getLowLevelCAS();\n     \n     // The top level sofa associated with this view is copied (or not)\n     \n@@ -300,7 +363,8 @@ public void copyCasView(CAS aSrcCasView, CAS aTgtCasView, boolean aCopySofa) {\n     \n     Set<FeatureStructure> indexedFs = new HashSet<FeatureStructure>();\n     \n-    // We don't clear the map here, in order to skip actually copying the\n+    // The indexFs set starts out \"cleared\", but \n+    // we don't clear the cas copier instance map \"mFsMap\" here, in order to skip actually copying the\n     //   FSs when doing a full CAS copy with multiple views - the 2nd and subsequent\n     //   views don't copy, but they do index.\n     \n@@ -368,15 +432,15 @@ public FeatureStructure copyFs(FeatureStructure aFS) {\n     // note these variables are null if copyFs is called after\n     //   creating an instance of this class\n     if (null == mSrcCasViewName) {\n-      mSrcCasViewName = mSrcCas.getViewName();\n+      mSrcCasViewName = mOriginalSrcCasView.getViewName();  // may set it to null, if Cas is base view\n     }\n     \n     if (null == mTgtCasViewName) {\n-      mTgtCasViewName = mDestCas.getViewName();\n+      mTgtCasViewName = mOriginalTgtCasView.getViewName(); // may set it to null, if Cas is base view\n     }\n     \n     if (null == mLowLevelDestCas) {\n-      mLowLevelDestCas = mDestCas.getLowLevelCAS();\n+      mLowLevelDestCas = mDestBaseCas.getLowLevelCAS();\n     }\n     \n     return copyFs2(aFS);\n@@ -403,7 +467,7 @@ private FeatureStructure copyFs2(FeatureStructure aFS) {\n    */\n   private FeatureStructure copyFsInner(FeatureStructure aFS) {\n     // FS must be in the source CAS\n-    assert ((CASImpl) aFS.getCAS()).getBaseCAS() == ((CASImpl) mSrcCas).getBaseCAS();\n+    assert ((CASImpl) aFS.getCAS()).getBaseCAS() == mSrcBaseCas;\n \n     // check if we already copied this FS\n     FeatureStructure copy = (FeatureStructure) mFsMap.get(aFS);\n@@ -419,7 +483,7 @@ private FeatureStructure copyFsInner(FeatureStructure aFS) {\n     // same Sofa ID in the target CAS. If it does not exist it will be created.\n     if (aFS instanceof SofaFS) {\n       String destSofaId = getDestSofaId(((SofaFS) aFS).getSofaID());\n-      return getOrCreateView(mDestCas, destSofaId).getSofa();\n+      return getOrCreateView(mDestBaseCas, destSofaId).getSofa();\n     }\n \n     // DocumentAnnotation - instead of creating a new instance, reuse the automatically created\n@@ -432,7 +496,7 @@ private FeatureStructure copyFsInner(FeatureStructure aFS) {\n       //   but this is unlikely.  To have this case this would require\n       //   indexing some other feature structure in this view, which, in turn,\n       //   has a reference to the DocumentAnnotation FS belonging to another view\n-      CAS destView = getOrCreateView(mDestCas, destViewName);\n+      CAS destView = getOrCreateView(mDestBaseCas, destViewName);\n       FeatureStructure destDocAnnot = destView.getDocumentAnnotation();\n       if (destDocAnnot != null) {  // Note: is always non-null, getDocumentAnnotation creates if not exist\n         copyFeatures(aFS, destDocAnnot);\n@@ -448,7 +512,7 @@ private FeatureStructure copyFsInner(FeatureStructure aFS) {\n     }\n \n     // create a new FS of the same type in the target CAS\n-    Type destType = (mDestCas.getTypeSystem() == mSrcCas.getTypeSystem()) ? srcType : mDestCas\n+    Type destType = (mDestBaseCas.getTypeSystem() == mSrcBaseCas.getTypeSystem()) ? srcType : mDestBaseCas\n         .getTypeSystem().getType(srcType.getName());\n     if (destType == null) {\n       // If in lenient mode, do not act on this FS. Instead just\n@@ -478,7 +542,7 @@ private FeatureStructure copyFsInner(FeatureStructure aFS) {\n   }\n   \n   private String getDestSofaId(String id) {\n-    return mSrcCasViewName.equals(id) ? mTgtCasViewName : id;\n+    return (null != mSrcCasViewName && mSrcCasViewName.equals(id)) ? mTgtCasViewName : id;\n   }\n   \n   /**\n@@ -556,7 +620,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof StringArrayFS) {\n       StringArrayFS arrayFs = (StringArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      StringArrayFS destFS = mDestCas.createStringArrayFS(len);\n+      StringArrayFS destFS = mDestBaseCas.createStringArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -565,7 +629,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof IntArrayFS) {\n       IntArrayFS arrayFs = (IntArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      IntArrayFS destFS = mDestCas.createIntArrayFS(len);\n+      IntArrayFS destFS = mDestBaseCas.createIntArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -574,7 +638,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof ByteArrayFS) {\n       ByteArrayFS arrayFs = (ByteArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      ByteArrayFS destFS = mDestCas.createByteArrayFS(len);\n+      ByteArrayFS destFS = mDestBaseCas.createByteArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -583,7 +647,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof ShortArrayFS) {\n       ShortArrayFS arrayFs = (ShortArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      ShortArrayFS destFS = mDestCas.createShortArrayFS(len);\n+      ShortArrayFS destFS = mDestBaseCas.createShortArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -592,7 +656,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof LongArrayFS) {\n       LongArrayFS arrayFs = (LongArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      LongArrayFS destFS = mDestCas.createLongArrayFS(len);\n+      LongArrayFS destFS = mDestBaseCas.createLongArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -601,7 +665,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof FloatArrayFS) {\n       FloatArrayFS arrayFs = (FloatArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      FloatArrayFS destFS = mDestCas.createFloatArrayFS(len);\n+      FloatArrayFS destFS = mDestBaseCas.createFloatArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -610,7 +674,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof DoubleArrayFS) {\n       DoubleArrayFS arrayFs = (DoubleArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      DoubleArrayFS destFS = mDestCas.createDoubleArrayFS(len);\n+      DoubleArrayFS destFS = mDestBaseCas.createDoubleArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -619,7 +683,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof BooleanArrayFS) {\n       BooleanArrayFS arrayFs = (BooleanArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      BooleanArrayFS destFS = mDestCas.createBooleanArrayFS(len);\n+      BooleanArrayFS destFS = mDestBaseCas.createBooleanArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         destFS.set(i, arrayFs.get(i));\n       }\n@@ -628,7 +692,7 @@ private FeatureStructure copyArray(FeatureStructure aSrcFs) {\n     if (aSrcFs instanceof ArrayFS) {\n       ArrayFS arrayFs = (ArrayFS) aSrcFs;\n       int len = arrayFs.size();\n-      ArrayFS destFS = mDestCas.createArrayFS(len);\n+      ArrayFS destFS = mDestBaseCas.createArrayFS(len);\n       for (int i = 0; i < len; i++) {\n         FeatureStructure srcElem = arrayFs.get(i);\n         if (srcElem != null) {", "filename": "uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java"}, {"additions": 8, "raw_url": "https://github.com/apache/uima-uimaj/raw/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties", "blob_url": "https://github.com/apache/uima-uimaj/blob/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties", "sha": "f11de20d6ade1a5fb387b597a62c93b3967e5790", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties?ref=cf9d5c9b007f9c377ce244d5e155d0971b048bc0", "patch": "@@ -39,8 +39,6 @@ define_cas_pool_called_twice = The method CasManager.defineCasPool() was called\n        \n unsupported_cas_interface = Unsupported CAS interface {0}.\n \n-illegal_copy_same_cas_same_view = CAS Copying of the same view to the same CAS with the same view name is not allowed.\n-\n type_not_found_during_cas_copy = Attempted to copy a FeatureStructure of type \"{0}\", which is not defined in the type system of the destination CAS.\n \n feature_not_found_during_cas_copy = Attempted to copy a Feature \"{0}\", which is not defined in the type system of the destination CAS.\n@@ -49,6 +47,12 @@ uima_context_null = Saved UIMA context is null; probable cause: Annotator''s ini\n \n result_spec_null = Saved result specification is null; probable cause: Annotator overrode setResultSpecification(spec) but failed to call super.setResultSpecification(spec).\n \n+view_not_part_of_cas = In CasCopier, the {0} view is doesn''t belong to the original {0} CAS specified when creating the CasCopier instance.\n+\n+illegal_cas_copy_to_same_cas = It is not permitted to use CasCopier to copy a Cas to itself, even in another view.\n+\n+unsupported_cas_copy_view_base_cas = Unsupported invocation of CasCopier copyCasView, specifying a source or destination as a base CAS.\n+\n #--------------------------\n #UIMA_IllegalStateException\n #--------------------------          \n@@ -199,7 +203,7 @@ remove_ae_from_flow_not_supported = The FlowController class {0} does not suppor\n  Analysis Engines cannot be dynamically removed from the flow.\n  \n flow_cannot_continue_after_remove = The Analysis Engine(s) {0} have been removed from the flow, and the FlowController \\\n-  has determined that the Aggregate Analysis Engine's processing can no longer continue.\n+  has determined that the Aggregate Analysis Engine''s processing can no longer continue.\n  \n  \n #-------------------------------\n@@ -393,7 +397,7 @@ sofa_mapping_not_supported_for_remote = Sofa mappings were specified for the rem\n undefined_key_in_flow = The descriptor for Aggregate Analysis Engine \"{0}\" specified an invalid flow.  The key \"{1}\" was used in the flow \\\n   but is not defined as a key in the <delegateAnalysisEngineSpecifiers> element of the descriptor. (Descriptor: {2})\n \n-invalid_action_after_cas_multiplier = The value \"{0}\" is an invalid value for the FixedFlowController's \"ActionAfterCasMultiplier\" configuration \\\n+invalid_action_after_cas_multiplier = The value \"{0}\" is an invalid value for the FixedFlowController''s \"ActionAfterCasMultiplier\" configuration \\\n   parameter.  Valid values are \"continue\", \"stop\", \"drop\", and \"dropIfNewCasProduced\".\n     \n flow_controller_requires_flow_constraints = The Flow Controller \"{0}\" requires a flow contraints element of type \"{1}\" in the aggregate descriptor. \\", "filename": "uimaj-core/src/main/resources/org/apache/uima/UIMAException_Messages.properties"}, {"additions": 21, "raw_url": "https://github.com/apache/uima-uimaj/raw/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/test/java/org/apache/uima/util/CasCopierTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/cf9d5c9b007f9c377ce244d5e155d0971b048bc0/uimaj-core/src/test/java/org/apache/uima/util/CasCopierTest.java", "sha": "671390ed3a82f41264de4ef4214f43fa2bad1087", "changes": 21, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/util/CasCopierTest.java?ref=cf9d5c9b007f9c377ce244d5e155d0971b048bc0", "patch": "@@ -27,6 +27,7 @@\n import junit.framework.TestCase;\n \n import org.apache.uima.UIMAFramework;\n+import org.apache.uima.UIMARuntimeException;\n import org.apache.uima.cas.ArrayFS;\n import org.apache.uima.cas.CAS;\n import org.apache.uima.cas.FeatureStructure;\n@@ -97,6 +98,15 @@ public void testCopyCas() throws Exception {\n     CAS destCasBase = ((CASImpl) destCas).getBaseCAS();\n     CasCopier.copyCas(srcCasBase, destCasBase, true);\n     CasComparer.assertEquals(srcCasBase, destCasBase);\n+    \n+    //try with source and dest cas the same\n+    Exception ee = null;\n+    try {\n+      CasCopier.copyCas(srcCasBase,  srcCasBase, false);\n+    } catch (Exception e) {\n+      ee = e;\n+    }\n+    assertTrue(ee instanceof UIMARuntimeException);\n   }\n   \n   public void testCopyCasWithDifferentTypeSystemObject() throws Exception {\n@@ -209,6 +219,17 @@ public void testCopyFs() throws Exception {\n     arrFS.set(2, relFS);\n     FeatureStructure copyArrFS = copier.copyFs(arrFS);\n     CasComparer.assertEquals(arrFS, copyArrFS);\n+    \n+    // test with using base cas\n+    destCas = CasCreationUtils.createCas(typeSystem, new TypePriorities_impl(), indexes);\n+    destCas.setDocumentText(srcCas.getDocumentText());\n+    copier = new CasCopier(((CASImpl)srcCas).getBaseCAS(), ((CASImpl)destCas).getBaseCAS());\n+\n+    annotIter = srcCas.getAnnotationIndex().iterator();\n+    annot = (FeatureStructure) annotIter.next();\n+    copy = copier.copyFs(annot);\n+    // verify copy\n+    CasComparer.assertEquals(annot, copy);\n   }\n \n   public void testAnnotationWithNullSofaRef() throws Exception {", "filename": "uimaj-core/src/test/java/org/apache/uima/util/CasCopierTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/d54dacaea7ae37946910ff977fd3af0ef398aaa0", "parent": "https://github.com/apache/uima-uimaj/commit/c7be820065a1f5d8e6857a8ff75439c23f8a15b5", "message": "UIMA-1688 Cas Editor throws NPE when cleaning a document which is opened\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@885937 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_14", "file": [{"additions": 22, "raw_url": "https://github.com/apache/uima-uimaj/raw/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java", "sha": "1a84d45f6ff6e67b9c92b68d77b5ae5841339ccf", "changes": 37, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java?ref=d54dacaea7ae37946910ff977fd3af0ef398aaa0", "patch": "@@ -721,18 +721,8 @@ protected void doSetInput(IEditorInput input) throws CoreException {\n       ResourcesPlugin.getWorkspace().addResourceChangeListener(closeEditorListener,\r\n               IResourceChangeEvent.POST_CHANGE);\r\n \r\n-      IAnnotationModel annotationModel = getDocumentProvider().getAnnotationModel(input);\r\n-\r\n-      // copy annotations into annotation model\r\n-      final Iterator<AnnotationFS> mAnnotations = mDocument.getCAS().getAnnotationIndex()\r\n-              .iterator();\r\n-\r\n-      while (mAnnotations.hasNext()) {\r\n-        AnnotationFS annotationFS = mAnnotations.next();\r\n-        annotationModel.addAnnotation(new EclipseAnnotationPeer(annotationFS), new Position(\r\n-                annotationFS.getBegin(), annotationFS.getEnd() - annotationFS.getBegin()));\r\n-      }\r\n-\r\n+      syncAnnotations();\r\n+      \r\n       mAnnotationSynchronizer = new DocumentListener();\r\n \r\n       getDocument().addChangeListener(mAnnotationSynchronizer);\r\n@@ -826,7 +816,7 @@ protected void setAnnotationMode(Type type) {\n \r\n     updateStatusLineModeItem();\r\n \r\n-    syncAnnotations();\r\n+    syncAnnotationTypes();\r\n \r\n     fireAnnotationTypeChanged(getAnnotationMode());\r\n \r\n@@ -873,10 +863,10 @@ private void showAnnotationType(Type type, boolean isVisible) {\n   /**\r\n    * Synchronizes all annotations which the eclipse annotation painter.\r\n    */\r\n-  public void syncAnnotations() {\r\n+  public void syncAnnotationTypes() {\r\n \r\n     mPainter.removeAllAnnotationTypes();\r\n-    \r\n+\r\n     for (Type displayType : mShowAnnotationsMenu.getSelectedTypes()) {\r\n       showAnnotationType(displayType, true);\r\n     }\r\n@@ -888,6 +878,23 @@ public void syncAnnotations() {\n     mPainter.paint(IPainter.CONFIGURATION);\r\n   }\r\n \r\n+  private void syncAnnotations() {\r\n+    // Remove all annotation from the model\r\n+    IAnnotationModel annotationModel = getDocumentProvider().getAnnotationModel(getEditorInput());\r\n+    ((IAnnotationModelExtension) annotationModel).removeAllAnnotations();\r\n+\r\n+    // Add all annotation to the model\r\n+    // copy annotations into annotation model\r\n+    final Iterator<AnnotationFS> mAnnotations = mDocument.getCAS().getAnnotationIndex()\r\n+            .iterator();\r\n+\r\n+    while (mAnnotations.hasNext()) {\r\n+      AnnotationFS annotationFS = mAnnotations.next();\r\n+      annotationModel.addAnnotation(new EclipseAnnotationPeer(annotationFS), new Position(\r\n+              annotationFS.getBegin(), annotationFS.getEnd() - annotationFS.getBegin()));\r\n+    }\r\n+  }\r\n+  \r\n   /**\r\n    * @param listener\r\n    */\r", "filename": "uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java"}, {"additions": 4, "raw_url": "https://github.com/apache/uima-uimaj/raw/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DefaultCasDocumentProvider.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DefaultCasDocumentProvider.java", "sha": "32dcda51db785138877bbfa22e6878b72485303f", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DefaultCasDocumentProvider.java?ref=d54dacaea7ae37946910ff977fd3af0ef398aaa0", "patch": "@@ -126,6 +126,10 @@ private INlpElement getNlpElement(Object element) {\n \n   @Override\n   protected AnnotationStyle getAnnotationStyle(Object element, Type type) {\n+    \n+    if (type == null)\n+    \tthrow new IllegalArgumentException(\"type parameter must not be null!\");\n+    \n     INlpElement nlpElement = getNlpElement(element);\n \n     return nlpElement.getNlpProject().getDotCorpus().getAnnotation(type);", "filename": "uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DefaultCasDocumentProvider.java"}, {"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/d54dacaea7ae37946910ff977fd3af0ef398aaa0/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java", "sha": "088504e1503ee4e0bec968c68d66855244955d4d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java?ref=d54dacaea7ae37946910ff977fd3af0ef398aaa0", "patch": "@@ -336,7 +336,7 @@ public boolean performOk() {\n      \r\n     // Repaint annotations of all open editors\r\n     for (AnnotationEditor editor : AnnotationEditor.getAnnotationEditors()) {\r\n-      editor.syncAnnotations();\r\n+      editor.syncAnnotationTypes();\r\n     }\r\n     \r\n     return true;\r", "filename": "uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/30fc261f79fb3d0c074b4954487a88858f669646", "parent": "https://github.com/apache/uima-uimaj/commit/6305f31d56c8ce99c34d82e2a33dd218dcdf28b9", "message": "UIMA-1344: Fix NPE in XCASSerializer when a StringArray has a null element.  https://issues.apache.org/jira/browse/UIMA-1344\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@773917 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/30fc261f79fb3d0c074b4954487a88858f669646/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/30fc261f79fb3d0c074b4954487a88858f669646/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java", "sha": "20b3665d9721f3c2d329f686a80064e303964f61", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java?ref=30fc261f79fb3d0c074b4954487a88858f669646", "patch": "@@ -540,7 +540,7 @@ private void encodePrimitiveTypeArrayFS(String[] data, String typeName, Attribut\n \n       for (int i = 0; i < data.length; i++) {\n         startElement(ARRAY_ELEMENT_TAG, emptyAttrs, 1);\n-        addText(data[i]);\n+        addText(data[i] == null ? \"\" : data[i]);\n         endElement(ARRAY_ELEMENT_TAG);\n       }\n       endElement(typeName);", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java"}, {"additions": 26, "raw_url": "https://github.com/apache/uima-uimaj/raw/30fc261f79fb3d0c074b4954487a88858f669646/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/30fc261f79fb3d0c074b4954487a88858f669646/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java", "sha": "6be1a1247828366c439aa0bdaef095ef1312f935", "changes": 26, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java?ref=30fc261f79fb3d0c074b4954487a88858f669646", "patch": "@@ -19,6 +19,8 @@\n \n package org.apache.uima.cas.impl;\n \n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.InputStream;\n@@ -370,4 +372,28 @@ public void testv1FormatXcas() throws Exception {\n     assertTrue(gerView.getDocumentText().equals(\"das bier ist gut\"));\n     assertTrue(gerView.getAnnotationIndex().size() == 5); // 4 annots plus documentAnnotation\n   }\n+  \n+  public void testStringArrayWithNullValues() throws Exception {\n+    CAS cas = CasCreationUtils.createCas(typeSystem, new TypePriorities_impl(), indexes);\n+    StringArrayFS strArray = cas.createStringArrayFS(3);\n+    strArray.set(1, \"value\");\n+    cas.getIndexRepository().addFS(strArray);\n+    \n+    assertEquals(null, strArray.get(0));\n+    assertEquals(\"value\", strArray.get(1));\n+    assertEquals(null, strArray.get(2));\n+    \n+    //serialize to XCAS and back\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+    XCASSerializer.serialize(cas,baos);\n+    ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\n+    XCASDeserializer.deserialize(bais, cas);\n+\n+    //check\n+    Iterator iter = cas.getIndexRepository().getAllIndexedFS(cas.getTypeSystem().getType(\"uima.cas.StringArray\"));\n+    StringArrayFS strArrayOut = (StringArrayFS)iter.next();\n+    assertEquals(null, strArrayOut.get(0));\n+    assertEquals(\"value\", strArrayOut.get(1));\n+    assertEquals(null, strArrayOut.get(2));\n+  }\n }", "filename": "uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/9dc4346c8be56a0a642631e38c8a1b37a7fa881c", "parent": "https://github.com/apache/uima-uimaj/commit/734d2d1f011293d1678e326332f10de9c9299e9f", "message": "UIMA-518\n\nfix test main() to not throw NPE.\n\nhttps://issues.apache.org/jira/browse/UIMA-518\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@661579 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_16", "file": [{"additions": 5, "raw_url": "https://github.com/apache/uima-uimaj/raw/9dc4346c8be56a0a642631e38c8a1b37a7fa881c/uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/9dc4346c8be56a0a642631e38c8a1b37a7fa881c/uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java", "sha": "c71126b6d72b6081d4d24a0a3e8f770edb3a256e", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java?ref=9dc4346c8be56a0a642631e38c8a1b37a7fa881c", "patch": "@@ -98,7 +98,9 @@ public static void main(String args[]) {\n     String url = (args.length > 0) ? args[0] : \"http://apache.org\";\n     try {\n       Process process = BrowserUtil.openUrlInDefaultBrowser(url);\n-      process.waitFor();\n+      if(process != null) {\n+        process.waitFor();\n+      }\n     } catch (Exception e) {\n       System.err.println(\"Error in BrowserUtil.main():\");\n       e.printStackTrace(System.err);\n@@ -117,7 +119,8 @@ private BrowserUtil() {\n    * @param url\n    *          The URL to open\n    * @return\n-   *        Returns the process browser object or null if no browser could be found\n+   *        Returns the process browser object or null if no browser could be found. \n+   *        On MacOs null is returned in any case.\n    *        \n    * @throws Exception\n    *           If the available web browser does not run", "filename": "uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/972e8c616838830794f91658b4de32a591a44e3b", "parent": "https://github.com/apache/uima-uimaj/commit/0577cba0c27afe7d6bcf1cca337010f46146af4d", "message": "Jira UIMA-726: fixed NPE, test case created.\n\nhttps://issues.apache.org/jira/browse/UIMA-726\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@616640 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_17", "file": [{"additions": 6, "raw_url": "https://github.com/apache/uima-uimaj/raw/972e8c616838830794f91658b4de32a591a44e3b/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/972e8c616838830794f91658b4de32a591a44e3b/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java", "sha": "b6514184483d22c4d53cd167b49dfb789a5b0654", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java?ref=972e8c616838830794f91658b4de32a591a44e3b", "patch": "@@ -117,7 +117,12 @@ public void copyToArray(int srcOffset, String[] dest, int destOffset, int length\n     final CASImpl ll = this.casImpl;\n     ll.checkArrayBounds(this.addr, srcOffset, length);\n     for (int i = 0; i < length; i++) {\n-      dest[i + destOffset] = ll.ll_getFSForRef(ll.ll_getRefArrayValue(this.addr, i + srcOffset)).toString();\n+      final int address = ll.ll_getRefArrayValue(this.addr, i + srcOffset);\n+      String value = null;\n+      if (address != LowLevelCAS.NULL_FS_REF) {\n+        value = ll.ll_getFSForRef(address).toString();\n+      }\n+      dest[i + destOffset] = value;\n     }\n   }\n ", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java"}, {"additions": 6, "raw_url": "https://github.com/apache/uima-uimaj/raw/972e8c616838830794f91658b4de32a591a44e3b/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/972e8c616838830794f91658b4de32a591a44e3b/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java", "sha": "9e1b052bdf13e09f080fac315e184fd6f052b677", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java?ref=972e8c616838830794f91658b4de32a591a44e3b", "patch": "@@ -180,16 +180,22 @@ public void testCopyToArray() {\n     final int destinationOffset = 2;\n     final int destiniationSize = 10;\n     FeatureStructure[] fsArray = new FeatureStructure[destiniationSize];\n+    String[] stringArray = new String[destiniationSize];\n     // Copy to array, skipping first element\n     // This must not throw an NPE, see UIMA-726\n     array.copyToArray(1, fsArray, destinationOffset, array.size() - 1);\n+    array.copyToArray(1, stringArray, destinationOffset, array.size() - 1);\n     assertTrue(fs2.equals(fsArray[destinationOffset]));\n     assertTrue(fs3.equals(fsArray[destinationOffset+1]));\n+    assertNotNull(stringArray[destinationOffset]);\n+    assertNotNull(stringArray[destinationOffset+1]);\n     for (int i = 0; i < destinationOffset; i++) {\n       assertNull(fsArray[i]);\n+      assertNull(stringArray[i]);\n     }\n     for (int i = (destinationOffset + 2); i < destiniationSize; i++) {\n       assertNull(fsArray[i]);\n+      assertNull(stringArray[i]);\n     }\n   }\n   ", "filename": "uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/0577cba0c27afe7d6bcf1cca337010f46146af4d", "parent": "https://github.com/apache/uima-uimaj/commit/bbefe81af75fac7989db421268f2aa5583cc824e", "message": "Jira UIMA-726: fixed NPE, test case created.\n\nhttps://issues.apache.org/jira/browse/UIMA-726\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@616637 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_18", "file": [{"additions": 6, "raw_url": "https://github.com/apache/uima-uimaj/raw/0577cba0c27afe7d6bcf1cca337010f46146af4d/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/0577cba0c27afe7d6bcf1cca337010f46146af4d/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java", "sha": "bf3095b1fec69e4be847039189a4f6e2300108c9", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java?ref=0577cba0c27afe7d6bcf1cca337010f46146af4d", "patch": "@@ -92,7 +92,12 @@ public void copyToArray(int srcOffset, FeatureStructure[] dest, int destOffset,\n     }\n     srcOffset += this.casImpl.getArrayStartAddress(this.addr);\n     for (int i = 0; i < length; i++) {\n-      dest[destOffset] = this.casImpl.createFS(this.casImpl.getHeap().heap[srcOffset]);\n+      FeatureStructure fs = null;\n+      final int address = this.casImpl.getHeap().heap[srcOffset];\n+      if (address != LowLevelCAS.NULL_FS_REF) {\n+        fs = this.casImpl.createFS(address);\n+      }\n+      dest[destOffset] = fs;\n       ++destOffset;\n       ++srcOffset;\n     }", "filename": "uimaj-core/src/main/java/org/apache/uima/cas/impl/ArrayFSImpl.java"}, {"additions": 25, "raw_url": "https://github.com/apache/uima-uimaj/raw/0577cba0c27afe7d6bcf1cca337010f46146af4d/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/0577cba0c27afe7d6bcf1cca337010f46146af4d/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java", "sha": "9107de820da0e5a6e1bbb3f6ef157d2f68d20c95", "changes": 25, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java?ref=0577cba0c27afe7d6bcf1cca337010f46146af4d", "patch": "@@ -168,6 +168,31 @@ public void testToArray() {\n     assertTrue(array.get(0) == null);\n   }\n \n+  public void testCopyToArray() {\n+    FeatureStructure fs1 = this.cas.createFS(this.ts.getType(CAS.TYPE_NAME_ANNOTATION));\n+    FeatureStructure fs2 = this.cas.createFS(this.ts.getType(CAS.TYPE_NAME_TOP));\n+    FeatureStructure fs3 = this.cas.createFS(this.ts.getType(CASTestSetup.TOKEN_TYPE));\n+    ArrayFS array = this.cas.createArrayFS(4);\n+    array.set(0, fs1);\n+    array.set(1, fs2);\n+    array.set(2, fs3);\n+    // We now have an FS array with the last element being null\n+    final int destinationOffset = 2;\n+    final int destiniationSize = 10;\n+    FeatureStructure[] fsArray = new FeatureStructure[destiniationSize];\n+    // Copy to array, skipping first element\n+    // This must not throw an NPE, see UIMA-726\n+    array.copyToArray(1, fsArray, destinationOffset, array.size() - 1);\n+    assertTrue(fs2.equals(fsArray[destinationOffset]));\n+    assertTrue(fs3.equals(fsArray[destinationOffset+1]));\n+    for (int i = 0; i < destinationOffset; i++) {\n+      assertNull(fsArray[i]);\n+    }\n+    for (int i = (destinationOffset + 2); i < destiniationSize; i++) {\n+      assertNull(fsArray[i]);\n+    }\n+  }\n+  \n   public void testArraysOfArrays() {\n     Type annotationType = this.ts.getType(CAS.TYPE_NAME_ANNOTATION);\n     AnnotationFS annot = this.cas.createAnnotation(annotationType, 0, 5);", "filename": "uimaj-core/src/test/java/org/apache/uima/cas/test/ArrayFSTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/7f7d5459a2a86ed9a10ead295c196d72ec2d2e90", "parent": "https://github.com/apache/uima-uimaj/commit/902d8afb55c98fc25356136e0f408e8544b15cd2", "message": "no Jira - fix potential NPE introduced with last fix to \ngetResourceSpecifierSchemaUrl\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@554943 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_19", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/7f7d5459a2a86ed9a10ead295c196d72ec2d2e90/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/7f7d5459a2a86ed9a10ead295c196d72ec2d2e90/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java", "sha": "03efc96d71026e00f8ec9cf96c434ce24d1a558f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java?ref=7f7d5459a2a86ed9a10ead295c196d72ec2d2e90", "patch": "@@ -916,6 +916,7 @@ private URL getResourceSpecifierSchemaUrl() {\n       UIMAFramework.getLogger(CLASS_NAME).logrb(Level.WARNING, CLASS_NAME.getName(),\n               \"getSchemaURL\", LOG_RESOURCE_BUNDLE,\n               \"UIMA_resource_specifier_schema_not_found__WARNING\");\n+      return null;\n     }\n     String urlString = schemaURL.toString();\n     if (0 <= urlString.indexOf(\" \")) {", "filename": "uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/5b468893711cc23a46b06e803582c116809618b6", "parent": "https://github.com/apache/uima-uimaj/commit/012fc16405e731a794c38722ebea47a3ab9aa6cb", "message": "Jira UIMA-427: fix NPE.\n\nhttps://issues.apache.org/jira/browse/UIMA-427\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@544090 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_20", "file": [{"additions": 0, "raw_url": "https://github.com/apache/uima-uimaj/raw/5b468893711cc23a46b06e803582c116809618b6/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/5b468893711cc23a46b06e803582c116809618b6/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java", "sha": "1d277d6b63387f13a395af274be66fa5e4489566", "changes": 4, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java?ref=5b468893711cc23a46b06e803582c116809618b6", "patch": "@@ -2109,10 +2109,6 @@ public void setAnnotOpenDir(File annotOpenDir) {\n     this.annotOpenDir = annotOpenDir;\n   }\n \n-  public File getAeDescriptorFile() {\n-    return this.aeDescriptorFile;\n-  }\n-\n   public String getDataPathName() {\n     return this.dataPathName;\n   }", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/012fc16405e731a794c38722ebea47a3ab9aa6cb", "parent": "https://github.com/apache/uima-uimaj/commit/0e308467b7d6e84b87f265d6fd4785922225c549", "message": "Jira UIMA-427: fix NPE.\n\nhttps://issues.apache.org/jira/browse/UIMA-427\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@544089 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_21", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/012fc16405e731a794c38722ebea47a3ab9aa6cb/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/012fc16405e731a794c38722ebea47a3ab9aa6cb/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java", "sha": "d40784845e661d1b022e5a7c58be7d04ad85142e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java?ref=012fc16405e731a794c38722ebea47a3ab9aa6cb", "patch": "@@ -49,7 +49,7 @@ public void actionPerformed(ActionEvent event) {\n       }\n       int rc = fileChooser.showOpenDialog(this.main);\n       if (rc == JFileChooser.APPROVE_OPTION) {\n-        this.main.loadAEDescriptor(this.main.getAeDescriptorFile());\n+        this.main.loadAEDescriptor(fileChooser.getSelectedFile());\n       }\n       this.main.setAllAnnotationViewerItemEnable(false);\n     } finally {", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/d1ef364a3464835ba233e8ada7bf7e9ebe4f03a6", "parent": "https://github.com/apache/uima-uimaj/commit/1f5a3549ccb2312759e875ec531f279817d6a872", "message": "[UIMA-3776] fix failing test cases which get a NPE trying to get the class info from the Java Bean when the only getter is an array getter (shows up in CPE tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/uimaj/trunk@1590115 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_22", "file": [{"additions": 1, "raw_url": "https://github.com/apache/uima-uimaj/raw/d1ef364a3464835ba233e8ada7bf7e9ebe4f03a6/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/d1ef364a3464835ba233e8ada7bf7e9ebe4f03a6/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java", "sha": "954a379603aa65b552a782a5e874aa440133ba21", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java?ref=d1ef364a3464835ba233e8ada7bf7e9ebe4f03a6", "patch": "@@ -245,7 +245,7 @@ private void getAttributesFromBeans(final Class<? extends MetaDataObject_impl> c\n         String propName = pd.getName();\n         Class<?> propClass = pd.getPropertyType();\n         // translate primitive types (int, boolean, etc.) to wrapper classes\n-        if (propClass.isPrimitive()) {\n+        if (null != propClass && propClass.isPrimitive()) {\n           propClass = getWrapperClass(propClass);\n         }\n         MetaDataAttr mda = new MetaDataAttr(propName, pd.getReadMethod(), pd.getWriteMethod(), propClass);", "filename": "uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/7e37e710f9c833150b7ef0e02711c918d43480eb", "parent": "https://github.com/apache/uima-uimaj/commit/cf05660262eca3be82e33f25ab1e0cec46bd5636", "message": "no Jira - correct another NPE in the same test case - if the local variable outFile is initially null, it isn't recomputed after the analysis engine runs (the AE creates the file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@819733 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_23", "file": [{"additions": 4, "raw_url": "https://github.com/apache/uima-uimaj/raw/7e37e710f9c833150b7ef0e02711c918d43480eb/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/7e37e710f9c833150b7ef0e02711c918d43480eb/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java", "sha": "87ea363a73b54095920f251d1f0d465a52409db3", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java?ref=7e37e710f9c833150b7ef0e02711c918d43480eb", "patch": "@@ -362,7 +362,10 @@ public void testProcess() throws Exception {\n                       .getFile(\"TextAnalysisEngineImplTest/AggregateTaeWithCasConsumer.xml\")));\n       _testProcess(aggWithCcDesc);      \n       // test that CAS Consumer ran\n-      assertTrue(outFile.exists());\n+      if (null == outFile) {\n+        outFile = JUnitExtension.getFile(\"CpmOutput.txt\");\n+      }\n+      assertTrue(outFile != null && outFile.exists());\n       assertTrue(outFile.length() > 0);\n       outFile.delete();\n       ", "filename": "uimaj-core/src/test/java/org/apache/uima/analysis_engine/impl/AnalysisEngine_implTest.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/f0709dc245efe73508ee435d98715e57c9563289", "parent": "https://github.com/apache/uima-uimaj/commit/6dc4ca5e09a461071d1e68b6f8f6ea05e1d0f5c7", "message": "UIMA-898\n\nfix NPE add an empty array in case there where no documents to display\n\nhttps://issues.apache.org/jira/browse/UIMA-898\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@636814 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_24", "file": [{"additions": 4, "raw_url": "https://github.com/apache/uima-uimaj/raw/f0709dc245efe73508ee435d98715e57c9563289/uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/f0709dc245efe73508ee435d98715e57c9563289/uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java", "sha": "0bff5650bcad70610bea03706c4b0364e4bc834a", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java?ref=f0709dc245efe73508ee435d98715e57c9563289", "patch": "@@ -198,6 +198,10 @@ public AnnotationViewerDialog(JFrame aParentFrame, String aDialogTitle, PrefsMed\n     // Select documents via filter. JMP\n     FilenameFilter iFilter = new InteractiveFilter();\n     String[] documents = dir.list(iFilter);\n+    //create an empty array to display\n+    if(documents == null) {\n+       documents = new String[] {};\n+    }\n     analyzedResultsList = new JList(documents);\n     /*\n      * File[] documents = dir.listFiles(); Vector docVector = new Vector(); for (int i = 0; i <", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java"}], "repo": "uima-uimaj"}, {"commit": "https://github.com/apache/uima-uimaj/commit/9819f9e79e2f6f8e0eaf995948da05b15f138c6f", "parent": "https://github.com/apache/uima-uimaj/commit/e53bff2a13d88668f5db251c9b31c5e280873f93", "message": "Jira UIMA-425: fix NPE when instantiating a second copy of CVD.  Still don't\nunderstand the problem, this may be a Swing bug.  Anyway, workaround found.\n\nhttps://issues.apache.org/jira/browse/UIMA-425\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/uima/uimaj/trunk@543476 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "uima-uimaj_25", "file": [{"additions": 10, "raw_url": "https://github.com/apache/uima-uimaj/raw/9819f9e79e2f6f8e0eaf995948da05b15f138c6f/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java", "blob_url": "https://github.com/apache/uima-uimaj/blob/9819f9e79e2f6f8e0eaf995948da05b15f138c6f/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java", "sha": "c7a846f56facffc91197c41e7c8775e5e915670f", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/uima-uimaj/contents/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java?ref=9819f9e79e2f6f8e0eaf995948da05b15f138c6f", "patch": "@@ -806,27 +806,31 @@ private void populateEditMenu() {\n     HashMap actionMap = createEditActionMap();\n     // Cut\n     this.cutAction = (Action) actionMap.get(DefaultEditorKit.cutAction);\n-    this.cutAction.putValue(Action.NAME, \"Cut\");\n     this.cutAction.putValue(Action.MNEMONIC_KEY, new Integer(KeyEvent.VK_T));\n     this.cutAction.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_X,\n         InputEvent.CTRL_MASK));\n     this.cutAction.setEnabled(false);\n-    this.editMenu.add(this.cutAction);\n+    JMenuItem cutItem = new JMenuItem(this.cutAction);\n+    cutItem.setAction(this.cutAction);\n+    cutItem.setText(\"Cut\");\n+    this.editMenu.add(cutItem);\n     // Copy\n     this.copyAction = (Action) actionMap.get(DefaultEditorKit.copyAction);\n-    this.copyAction.putValue(Action.NAME, \"Copy\");\n     this.copyAction.putValue(Action.MNEMONIC_KEY, new Integer(KeyEvent.VK_C));\n     this.copyAction.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_C,\n         InputEvent.CTRL_MASK));\n     this.copyAction.setEnabled(false);\n-    this.editMenu.add(this.copyAction);\n+    JMenuItem copyItem = new JMenuItem(this.copyAction);\n+    copyItem.setText(\"Copy\");\n+    this.editMenu.add(copyItem);\n     // Paste\n     Action pasteAction = (Action) actionMap.get(DefaultEditorKit.pasteAction);\n-    pasteAction.putValue(Action.NAME, \"Paste\");\n     pasteAction.putValue(Action.MNEMONIC_KEY, new Integer(KeyEvent.VK_P));\n     pasteAction.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_V,\n         InputEvent.CTRL_MASK));\n-    this.editMenu.add(pasteAction);\n+    JMenuItem pasteItem = new JMenuItem(pasteAction);\n+    pasteItem.setText(\"Paste\");\n+    this.editMenu.add(pasteItem);\n   }\n \n   private HashMap createEditActionMap() {", "filename": "uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java"}], "repo": "uima-uimaj"}]
