[
    {
        "commit": "https://github.com/apache/xerces2-j/commit/fc8f3a94263097c6c58d3d1a31132c539c395529",
        "file": [
            {
                "patch": "@@ -926,7 +926,10 @@ public static void main(String[] argv) throws Exception {\n             catch (Exception e) {\n                 System.err.println(\"error: Parse error occurred - \"+e.getMessage());\n                 if (e instanceof SAXException) {\n-                    e = ((SAXException)e).getException();\n+                    Exception nested = ((SAXException)e).getException();\n+                    if (nested != null) {\n+                \t   e = nested;\n+                    }\n                 }\n                 e.printStackTrace(System.err);\n             }",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/fc8f3a94263097c6c58d3d1a31132c539c395529/samples/sax/DocumentTracer.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "bfe4209f391d635549fdafd553e5b7cd3343154d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/fc8f3a94263097c6c58d3d1a31132c539c395529/samples/sax/DocumentTracer.java",
                "filename": "samples/sax/DocumentTracer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/samples/sax/DocumentTracer.java?ref=fc8f3a94263097c6c58d3d1a31132c539c395529"
            },
            {
                "patch": "@@ -694,7 +694,10 @@ public static void main(String argv[]) {\n             catch (Exception e) {\n                 System.err.println(\"error: Parse error occurred - \"+e.getMessage());\n                 if (e instanceof SAXException) {\n-                    e = ((SAXException)e).getException();\n+                    Exception nested = ((SAXException)e).getException();\n+                    if (nested != null) {\n+                        e = nested;\n+                    } \n                 }\n                 e.printStackTrace(System.err);\n             }",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/fc8f3a94263097c6c58d3d1a31132c539c395529/samples/sax/Writer.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "5c5c95fbf767ffdbb09c904458ff8ac4502f5caa",
                "blob_url": "https://github.com/apache/xerces2-j/blob/fc8f3a94263097c6c58d3d1a31132c539c395529/samples/sax/Writer.java",
                "filename": "samples/sax/Writer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/samples/sax/Writer.java?ref=fc8f3a94263097c6c58d3d1a31132c539c395529"
            }
        ],
        "bug_id": "xerces2-j_1",
        "parent": "https://github.com/apache/xerces2-j/commit/9caa3ca8742a69cb6576413ba0dcf91746658b6b",
        "message": "Fixing potential NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319394 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/222c08146689578e777d5e7436502b87c728a4cf",
        "file": [
            {
                "patch": "@@ -164,7 +164,7 @@ public XSModelImpl(SchemaGrammar[] grammars) {\n         // establish the mapping from namespace to grammars\n         fGrammarMap = new SymbolHash(len*2);\n         for (i = 0; i < len; i++) {\n-            fGrammarMap.put(fNamespaces[i], fGrammarList[i]);\n+            fGrammarMap.put(null2EmptyString(fNamespaces[i]), fGrammarList[i]);\n         }\n         \n         fGrammarCount = len;\n@@ -316,7 +316,7 @@ public synchronized XSNamedMap getComponentsByNamespace(short objectType,\n      */\n     public XSTypeDefinition getTypeDefinition(String name,\n                                               String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSTypeDefinition)sg.fGlobalTypeDecls.get(name);\n@@ -331,7 +331,7 @@ public XSTypeDefinition getTypeDefinition(String name,\n      */\n     public XSAttributeDeclaration getAttributeDecl(String name,\n                                                    String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSAttributeDeclaration)sg.fGlobalAttrDecls.get(name);\n@@ -346,7 +346,7 @@ public XSAttributeDeclaration getAttributeDecl(String name,\n      */\n     public XSElementDeclaration getElementDecl(String name,\n                                                String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSElementDeclaration)sg.fGlobalElemDecls.get(name);\n@@ -361,7 +361,7 @@ public XSElementDeclaration getElementDecl(String name,\n      */\n     public XSAttributeGroupDefinition getAttributeGroup(String name,\n                                                         String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSAttributeGroupDefinition)sg.fGlobalAttrGrpDecls.get(name);\n@@ -377,7 +377,7 @@ public XSAttributeGroupDefinition getAttributeGroup(String name,\n      */\n     public XSModelGroupDefinition getModelGroupDefinition(String name,\n                                                           String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSModelGroupDefinition)sg.fGlobalGroupDecls.get(name);\n@@ -393,7 +393,7 @@ public XSModelGroupDefinition getModelGroupDefinition(String name,\n      */\n     public XSNotationDeclaration getNotationDecl(String name,\n                                                  String namespace) {\n-        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(namespace);\n+        SchemaGrammar sg = (SchemaGrammar)fGrammarMap.get(null2EmptyString(namespace));\n         if (sg == null)\n             return null;\n         return (XSNotationDeclaration)sg.fGlobalNotationDecls.get(name);\n@@ -407,4 +407,9 @@ public XSObjectList getAnnotations() {\n         return null;\n     }\n \n+    private static final String EMPTY_STRING = \"\";\n+    private static final String null2EmptyString(String str) {\n+        return str == null ? EMPTY_STRING : str;\n+    }\n+    \n } // class XSModelImpl",
                "additions": 12,
                "raw_url": "https://github.com/apache/xerces2-j/raw/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "status": "modified",
                "changes": 19,
                "deletions": 7,
                "sha": "aa4e40faa1d9aec64320b0d19324729a36315e09",
                "blob_url": "https://github.com/apache/xerces2-j/blob/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSModelImpl.java?ref=222c08146689578e777d5e7436502b87c728a4cf"
            },
            {
                "patch": "@@ -141,7 +141,8 @@ public synchronized int getMapLength() {\n      *   identify any <code>XSObject</code> in this map.\n      */\n     public XSObject getNSItem(String namespace, String localName) {\n-        namespace = namespace.intern();\n+        if (namespace != null)\n+            namespace = namespace.intern();\n         for (int i = 0; i < fNSNum; i++) {\n             if (namespace == fNamespaces[i]) {\n                 XSTypeDefinition type = (XSTypeDefinition)fMaps[i].get(localName);",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "7c8c188eca0c6bbd88da7d41b809be55cf8fb83e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "filename": "src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java?ref=222c08146689578e777d5e7436502b87c728a4cf"
            },
            {
                "patch": "@@ -157,7 +157,8 @@ public synchronized int getMapLength() {\n      *   identify any <code>XSObject</code> in this map.\n      */\n     public XSObject getNSItem(String namespace, String localName) {\n-        namespace = namespace.intern();\n+        if (namespace != null)\n+            namespace = namespace.intern();\n         for (int i = 0; i < fNSNum; i++) {\n             if (namespace == fNamespaces[i]) {\n                 // when this map is created from SymbolHash's",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/util/XSNamedMapImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "ec086d6ef561fd29184f15fe9febc18070d13a71",
                "blob_url": "https://github.com/apache/xerces2-j/blob/222c08146689578e777d5e7436502b87c728a4cf/src/org/apache/xerces/impl/xs/util/XSNamedMapImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/util/XSNamedMapImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/util/XSNamedMapImpl.java?ref=222c08146689578e777d5e7436502b87c728a4cf"
            }
        ],
        "bug_id": "xerces2-j_2",
        "parent": "https://github.com/apache/xerces2-j/commit/79e10cb0539759f0dad9577e8a3bf33d07808f8b",
        "message": "Fixing potential NullPointerException bugs (including bug [9243]).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318408 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4ede8e2427e3f1081e290cb918238fbc22e682d8",
        "file": [
            {
                "patch": "@@ -5811,7 +5811,7 @@ else if(refAtt == null) {\n \n                 // this nasty hack needed to ``override'' the\n                 // global attribute with \"use\" and \"fixed\" on the ref'ing attribute\n-                if(!isOptional || fixedStr.length() > 0) {\n+                if((typeInfo != null) && (!isOptional || fixedStr.length() > 0)) {\n \t\t\t\t\tint referredAttName = fStringPool.addSymbol(referredAttribute.getAttribute(SchemaSymbols.ATT_NAME));\n                     uriIndex = StringPool.EMPTY_STRING;\n         \t\t\tif ( fTargetNSURIString.length() > 0) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4ede8e2427e3f1081e290cb918238fbc22e682d8/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "ec5fbcb0471c069e52940b72e3f55f0af9bd0eaa",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4ede8e2427e3f1081e290cb918238fbc22e682d8/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "filename": "src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/schema/TraverseSchema.java?ref=4ede8e2427e3f1081e290cb918238fbc22e682d8"
            }
        ],
        "bug_id": "xerces2-j_3",
        "parent": "https://github.com/apache/xerces2-j/commit/eaec17c3a1431a56a5cd67e0eb199e47c1d3e770",
        "message": "fix for NullPointerException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317288 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/7182a2ac3f952d4db51c857621a0a1ac2da33cd6",
        "file": [
            {
                "patch": "@@ -333,7 +333,8 @@ private Vector getElementDeclAllSubstitutionGroupQNamesBlock( int elementDeclInd\n                 // and pDevMethod of the derived type\n                 if (subTypeInfo != typeInfo) {\n                     devMethod = subTypeInfo.derivedBy;\n-                    pDevMethod = typeInfo.blockSet;\n+                    if (typeInfo != null)\n+                        pDevMethod = typeInfo.blockSet;\n                     subTypeInfo = subTypeInfo.baseComplexTypeInfo;\n                 }\n                 for (; subTypeInfo != null && subTypeInfo != typeInfo;",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7182a2ac3f952d4db51c857621a0a1ac2da33cd6/src/org/apache/xerces/validators/schema/SchemaGrammar.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "eca4cb2aae2c92070e450cb6c97ff6918714423a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7182a2ac3f952d4db51c857621a0a1ac2da33cd6/src/org/apache/xerces/validators/schema/SchemaGrammar.java",
                "filename": "src/org/apache/xerces/validators/schema/SchemaGrammar.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/schema/SchemaGrammar.java?ref=7182a2ac3f952d4db51c857621a0a1ac2da33cd6"
            },
            {
                "patch": "@@ -760,21 +760,21 @@ public  void doTraverseSchema(Element root, StringPool stringPool,\n \n         // At this point, we can do any remaining checking for cos-element-consistent\n         // that involves substitution group elements\n-        \n+\n         if (fFullConstraintChecking) {\n-            // Loop thru all of the top-level elements that were ref'd from groups or \n-            // complexTypes, and ensure that: \n-            // 1. they have consistent type as any local element potentially declared in \n-            //    the group/type \n-            // 2.  any substitutable elements are consistent wrt type given any \n+            // Loop thru all of the top-level elements that were ref'd from groups or\n+            // complexTypes, and ensure that:\n+            // 1. they have consistent type as any local element potentially declared in\n+            //    the group/type\n+            // 2.  any substitutable elements are consistent wrt type given any\n             //     similiarly named elements from the group scope\n             // Note: for a complexType, we don't check against base scope.   Not clear if\n-            // we need to. \n-            \n+            // we need to.\n+\n             for (int j = 0; j < fTopLevelElementsRefdFromGroup.size(); j+=2) {\n                QName eltName = (QName)fTopLevelElementsRefdFromGroup.elementAt(j);\n                int groupScope = ((Integer)fTopLevelElementsRefdFromGroup.elementAt(j+1)).intValue();\n-               checkConsistentElements(eltName, groupScope);     \n+               checkConsistentElements(eltName, groupScope);\n             }\n \n             // Loop thru all of the complexTypes, and for any derived by restriction,\n@@ -786,8 +786,8 @@ public  void doTraverseSchema(Element root, StringPool stringPool,\n             while (enum.hasMoreElements ()) {\n                typeInfo = (TraverseSchema.ComplexTypeInfo)enum.nextElement();\n                baseTypeInfo = typeInfo.baseComplexTypeInfo;\n-               \n-               if (typeInfo.derivedBy == SchemaSymbols.RESTRICTION && \n+\n+               if (typeInfo.derivedBy == SchemaSymbols.RESTRICTION &&\n                    baseTypeInfo!=null &&\n                    typeInfo.contentSpecHandle>-1) {\n                  try {\n@@ -878,7 +878,7 @@ else if (name.equals(SchemaSymbols.ELT_ATTRIBUTEGROUP)) {\n     private void checkConsistentElements(QName eltName, int scope) throws Exception {\n \n       // See if there is a declaration of an element with the same name at the\n-      // given scope. \n+      // given scope.\n       // This is required because any model group cannot have more than 1\n       // element with the same name, but different types (even if some are\n       // local, and others top-level)\n@@ -901,12 +901,12 @@ private void checkConsistentElements(QName eltName, int scope) throws Exception\n        }\n \n        Vector substitutableNames = fSchemaGrammar.getElementDeclAllSubstitutionGroupQNames(topLevelElementNdx, fGrammarResolver, fStringPool);\n-       \n+\n        for (int i = 0; i < substitutableNames.size(); i++) {\n           SchemaGrammar.OneSubGroup subGroup = (SchemaGrammar.OneSubGroup)substitutableNames.elementAt(i);\n           QName substName = subGroup.name;\n           int substEltNdx = subGroup.eleIndex;\n-          \n+\n           int localEltNdx = fSchemaGrammar.getElementDeclIndex(substName, scope);\n           if (localEltNdx > -1) {\n              fSchemaGrammar.getElementDecl(localEltNdx, fTempElementDecl);\n@@ -920,7 +920,7 @@ private void checkConsistentElements(QName eltName, int scope) throws Exception\n \n     }\n \n-    \n+\n     /**\n      * Expands a system id and returns the system id as a URL, if\n      * it can be expanded. A return value of null means that the\n@@ -3300,12 +3300,12 @@ private int traverseComplexTypeDecl( Element complexTypeDecl, boolean forwardRef\n         int previousScope = fCurrentScope;\n         fCurrentScope = scopeDefined;\n \n-        // Squirrel away the groupNameStack.     \n-        // If we are in the middle of processing a group, and we hit the group again \n-        // because of a complexType for an element, it's not an error. \n+        // Squirrel away the groupNameStack.\n+        // If we are in the middle of processing a group, and we hit the group again\n+        // because of a complexType for an element, it's not an error.\n         if (!fCurrentGroupNameStack.isEmpty()) {\n           savedGroupNameStack = fCurrentGroupNameStack;\n-          fCurrentGroupNameStack = new Stack(); \n+          fCurrentGroupNameStack = new Stack();\n         }\n \n         Element child = null;\n@@ -3941,14 +3941,14 @@ private void handleComplexTypeError(String message, int typeNameIndex,\n      */\n     private String genAnonTypeName(Element complexTypeDecl) throws Exception {\n \n-        // Generate a unique name for the anonymous type by concatenating together the \n+        // Generate a unique name for the anonymous type by concatenating together the\n         // names of parent nodes\n         String typeName;\n         Element node=complexTypeDecl;\n         typeName=\"#AnonType_\";\n         while (!isTopLevel(node))   {\n           node = (Element)node.getParentNode();\n-          typeName = typeName+node.getAttribute(SchemaSymbols.ATT_NAME); \n+          typeName = typeName+node.getAttribute(SchemaSymbols.ATT_NAME);\n         }\n \n         return typeName;\n@@ -4180,11 +4180,11 @@ else if (isAttrOrAttrGroup(complexContentChild)) {\n               }\n \n               //\n-              // Delay derivation by restriction particle constraint checking until \n-              // the whole schema has been processed.  We need to do this because: \n-              //  - top-level element declarations are not processed until traversed \n-              //    thru the main traverseSchema walk.   \n-              //   \n+              // Delay derivation by restriction particle constraint checking until\n+              // the whole schema has been processed.  We need to do this because:\n+              //  - top-level element declarations are not processed until traversed\n+              //    thru the main traverseSchema walk.\n+              //\n               //\n \n            }\n@@ -5981,7 +5981,7 @@ else if (!referredTo)\n \t\t\t\tif (!referredTo)\n                 \treportSchemaError(SchemaMessageProvider.IncorrectDefaultType,\n                         new Object [] { attrDecl.getAttribute(SchemaSymbols.ATT_NAME), idve.getMessage() });    //a-props-correct.2\n-            } \n+            }\n         }\n \n         // check the coexistence of ID and value constraint\n@@ -6510,7 +6510,7 @@ else if (child != null)\n                     //return new QName(-1,fStringPool.addSymbol(localpart), -1, fStringPool.addSymbol(uriString));\n                 }\n                 else {\n-                    // Problem with recursive decls if we attempt the traversal now. \n+                    // Problem with recursive decls if we attempt the traversal now.\n                     //eltName= traverseElementDecl(targetElement);\n \n                 }\n@@ -6521,10 +6521,10 @@ else if (child != null)\n                if (fFullConstraintChecking) {\n                  // Add the name to a list of top-level elements we'll need to check later\n                  // for consistency wrt type\n-                 fTopLevelElementsRefdFromGroup.addElement(eltName);           \n-                 fTopLevelElementsRefdFromGroup.addElement(new Integer(fCurrentScope));           \n+                 fTopLevelElementsRefdFromGroup.addElement(eltName);\n+                 fTopLevelElementsRefdFromGroup.addElement(new Integer(fCurrentScope));\n                }\n-               \n+\n             }\n \n             return eltName;\n@@ -8454,7 +8454,8 @@ private boolean hasAllContent(int contentSpecIndex) {\n     // check the prefix of each element: must be SchemaForSchema\n     // general constrain checking on attriubtes\n     private Hashtable generalCheck(Element element, int scope) throws Exception{\n-        if (!element.getNamespaceURI().equals(SchemaSymbols.URI_SCHEMAFORSCHEMA)) {\n+        String uri = element.getNamespaceURI();\n+        if (uri == null || !uri.equals(SchemaSymbols.URI_SCHEMAFORSCHEMA)) {\n             reportGenericSchemaError(\"The namespce name for '\"+element.getLocalName()+\"' must be \"+SchemaSymbols.URI_SCHEMAFORSCHEMA);\n         }\n         return fGeneralAttrCheck.checkAttributes (element, scope);",
                "additions": 33,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7182a2ac3f952d4db51c857621a0a1ac2da33cd6/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "status": "modified",
                "changes": 65,
                "deletions": 32,
                "sha": "bee7406f16c3237ef283657700bb5de34b9c4a71",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7182a2ac3f952d4db51c857621a0a1ac2da33cd6/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "filename": "src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/schema/TraverseSchema.java?ref=7182a2ac3f952d4db51c857621a0a1ac2da33cd6"
            }
        ],
        "bug_id": "xerces2-j_4",
        "parent": "https://github.com/apache/xerces2-j/commit/cbaa5b149f35e0d17b67ce43d2f92e0ac6e84fb2",
        "message": "bug fixes: nullPointerException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317286 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/d25e6ac8b250f8038dbaffe1ffea3a5758fd6afb",
        "file": [
            {
                "patch": "@@ -119,7 +119,8 @@ protected AttrNSImpl(DocumentImpl ownerDocument,\n \t      (prefix.equals(\"xmlns\") &&\n \t       !namespaceURI.equals(\"http://www.w3.org/2000/xmlns/\"))))\n \t     || (qualifiedName.equals(\"xmlns\") &&\n-\t\t !namespaceURI.equals(\"http://www.w3.org/2000/xmlns/\"))) {\n+\t\t (namespaceURI == null ||\n+\t\t  !namespaceURI.equals(\"http://www.w3.org/2000/xmlns/\")))) {\n \n \t    throw new DOMExceptionImpl(DOMException.NAMESPACE_ERR, \n \t\t\t\t       \"DOM003 Namespace error\");",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d25e6ac8b250f8038dbaffe1ffea3a5758fd6afb/src/org/apache/xerces/dom/AttrNSImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "710bf2b3ff45c0c4ec5f9fb54d585b31ec7c0717",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d25e6ac8b250f8038dbaffe1ffea3a5758fd6afb/src/org/apache/xerces/dom/AttrNSImpl.java",
                "filename": "src/org/apache/xerces/dom/AttrNSImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/AttrNSImpl.java?ref=d25e6ac8b250f8038dbaffe1ffea3a5758fd6afb"
            }
        ],
        "bug_id": "xerces2-j_5",
        "parent": "https://github.com/apache/xerces2-j/commit/318ccdb1a4ead617c0d81e75ccbaa127419b10cc",
        "message": "changed to avoid NullPointerException on xmlns attributes (oops!)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@315282 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/01271955b824b185d6954c49a2c56c571fb82de5",
        "file": [
            {
                "patch": "@@ -1614,10 +1614,14 @@ public Node adoptNode(Node source) {\n             case ATTRIBUTE_NODE: {\n                 AttrImpl attr = (AttrImpl) node;\n                 // remove node from wherever it is\n-                attr.getOwnerElement().removeAttributeNode(attr);\n-                // mark it as specified\n+                if( attr.getOwnerElement() != null){\n+                    //1. owner element attribute is set to null\n+                    attr.getOwnerElement().removeAttributeNode(attr);\n+                }\n+                //2. specified flag is set to true\n                 attr.isSpecified(true);\n-                // change ownership\n+\n+                //3. change ownership\n                 attr.setOwnerDocument(this);\n                 break;\n             }",
                "additions": 7,
                "raw_url": "https://github.com/apache/xerces2-j/raw/01271955b824b185d6954c49a2c56c571fb82de5/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 3,
                "sha": "5a90b289cda2afddf2006ba75b4df26933c57897",
                "blob_url": "https://github.com/apache/xerces2-j/blob/01271955b824b185d6954c49a2c56c571fb82de5/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/CoreDocumentImpl.java?ref=01271955b824b185d6954c49a2c56c571fb82de5"
            }
        ],
        "bug_id": "xerces2-j_6",
        "parent": "https://github.com/apache/xerces2-j/commit/51bb056f7a8513213c4998de4661011231ea17c0",
        "message": "Fixing another bug. The method Document.adoptNode() throws NullPointerException in case when an\nattribute node is adopted\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319436 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/47067a361e4fcbd6828d1c8f9fc025b206c71b4f",
        "file": [
            {
                "patch": "@@ -2247,7 +2247,10 @@ private void resolveSchemaGrammar( String loc, String uri) throws Exception {\n                System.out.println(\"I am geting the Schema Document\");\n             }\n \n-            Element root   = document.getDocumentElement();// This is what we pass to TraverserSchema\n+            Element root   = null;\n+            if (document != null) {\n+                root = document.getDocumentElement();// This is what we pass to TraverserSchema\n+            }\n             if (root == null) {\n                reportRecoverableXMLError(XMLMessages.MSG_GENERIC_SCHEMA_ERROR, XMLMessages.SCHEMA_GENERIC_ERROR, \"Can't get back Schema document's root element :\" + loc); \n             } else {",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/47067a361e4fcbd6828d1c8f9fc025b206c71b4f/src/org/apache/xerces/validators/common/XMLValidator.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "d9d2b1cef2bbe36767bb028186023335f0fad7be",
                "blob_url": "https://github.com/apache/xerces2-j/blob/47067a361e4fcbd6828d1c8f9fc025b206c71b4f/src/org/apache/xerces/validators/common/XMLValidator.java",
                "filename": "src/org/apache/xerces/validators/common/XMLValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/common/XMLValidator.java?ref=47067a361e4fcbd6828d1c8f9fc025b206c71b4f"
            }
        ],
        "bug_id": "xerces2-j_7",
        "parent": "https://github.com/apache/xerces2-j/commit/85b4a44a7a132e200eb484f22f1092951602c43c",
        "message": "bug fix : NullPointerException when schema file can not be located.\nby Neil Graham, neilg@jtcsv.com\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@316594 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/581ef983e63b7ea8bce34aa1f2a6286c0de098c3",
        "file": [
            {
                "patch": "@@ -1937,10 +1937,12 @@ private int traverseAttributeDecl( Element attrDecl, ComplexTypeInfo typeInfo )\n             if (child != null && child.getNodeName().equals(SchemaSymbols.ELT_SIMPLETYPE)) {\n                 attType        = XMLAttributeDecl.TYPE_SIMPLE;\n                 dataTypeSymbol = traverseSimpleTypeDecl(child);\n+                localpart = fStringPool.toString(dataTypeSymbol);\n             } \n             else {\n                 attType        = XMLAttributeDecl.TYPE_SIMPLE;\n-                dataTypeSymbol = fStringPool.addSymbol(\"string\");\n+                localpart      = \"string\";\n+                dataTypeSymbol = fStringPool.addSymbol(localpart);\n             }\n             localpart = fStringPool.toString(dataTypeSymbol);\n ",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/581ef983e63b7ea8bce34aa1f2a6286c0de098c3/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "e7d47a77253a00f11be703507cf92733e37db073",
                "blob_url": "https://github.com/apache/xerces2-j/blob/581ef983e63b7ea8bce34aa1f2a6286c0de098c3/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "filename": "src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/schema/TraverseSchema.java?ref=581ef983e63b7ea8bce34aa1f2a6286c0de098c3"
            }
        ],
        "bug_id": "xerces2-j_8",
        "parent": "https://github.com/apache/xerces2-j/commit/082a391c39f3d047f90f9fc49ccd6a11960ef89b",
        "message": "Default base type of simpleType definitions when not specified.\nThis was causing a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@315801 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b9748b5e944ddf8ae29f40e3a475fe5fc0d4222b",
        "file": [
            {
                "patch": "@@ -1942,6 +1942,7 @@ private int traverseAttributeDecl( Element attrDecl, ComplexTypeInfo typeInfo )\n                 attType        = XMLAttributeDecl.TYPE_SIMPLE;\n                 dataTypeSymbol = fStringPool.addSymbol(\"string\");\n             }\n+            localpart = fStringPool.toString(dataTypeSymbol);\n \n         } else {\n \n@@ -1955,7 +1956,8 @@ private int traverseAttributeDecl( Element attrDecl, ComplexTypeInfo typeInfo )\n             String typeURI = resolvePrefixToURI(prefix);\n             dataTypeSymbol = fStringPool.addSymbol(localpart);\n \n-            if ( typeURI.equals(SchemaSymbols.URI_SCHEMAFORSCHEMA) ) {\n+            if ( typeURI.equals(SchemaSymbols.URI_SCHEMAFORSCHEMA) \n+                 || typeURI.length()==0) {\n                 if (localpart.equals(\"ID\")) {\n                     attType = XMLAttributeDecl.TYPE_ID;\n                 } else if (localpart.equals(\"IDREF\")) {\n@@ -1984,7 +1986,7 @@ private int traverseAttributeDecl( Element attrDecl, ComplexTypeInfo typeInfo )\n \n                 // check if the type is from the same Schema\n \n-                if (!typeURI.equals(fTargetNSURIString) ) {\n+                if (!typeURI.equals(fTargetNSURIString) && typeURI.length() != 0 ) {\n                     dv = getTypeValidatorFromNS(typeURI, localpart);\n                     if (dv == null) {\n                         //TO DO: report error here;",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b9748b5e944ddf8ae29f40e3a475fe5fc0d4222b/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "1f068077ba23d41a92c686912189087def156b38",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b9748b5e944ddf8ae29f40e3a475fe5fc0d4222b/src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "filename": "src/org/apache/xerces/validators/schema/TraverseSchema.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/schema/TraverseSchema.java?ref=b9748b5e944ddf8ae29f40e3a475fe5fc0d4222b"
            }
        ],
        "bug_id": "xerces2-j_9",
        "parent": "https://github.com/apache/xerces2-j/commit/37a693afb0e3083e2fe84fdc470f243cae9dda19",
        "message": "fix a bug :\n traverseAttributeDecl, localpart was not set in all code branches, so throw NullPointerException somethimes.\n --ericye\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@315797 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4132e2991870e69f66d4a98af8993132f626a21a",
        "file": [
            {
                "patch": "@@ -166,15 +166,21 @@ public XSNamespaceItem getNamespaceItem() {\n     }\n \n     public Object getActualVC() {\n-        return fDefault.actualValue;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.actualValue;\n     }\n \n     public short getActualVCType() {\n-        return fDefault.actualValueType;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               XSConstants.UNAVAILABLE_DT :\n+               fDefault.actualValueType;\n     }\n \n     public ShortList getItemValueTypes() {\n-        return fDefault.itemValueTypes;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.itemValueTypes;\n     }\n \n } // class XSAttributeDecl",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 3,
                "sha": "60298f008ce7e5ef1d3cb04da944b31a83a4f436",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeDecl.java?ref=4132e2991870e69f66d4a98af8993132f626a21a"
            },
            {
                "patch": "@@ -117,15 +117,21 @@ public XSNamespaceItem getNamespaceItem() {\n     }\n \n     public Object getActualVC() {\n-        return fDefault.actualValue;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.actualValue;\n     }\n \n     public short getActualVCType() {\n-        return fDefault.actualValueType;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               XSConstants.UNAVAILABLE_DT :\n+               fDefault.actualValueType;\n     }\n \n     public ShortList getItemValueTypes() {\n-        return fDefault.itemValueTypes;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.itemValueTypes;\n     }\n \n } // class XSAttributeUseImpl",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 3,
                "sha": "b5890a24d8d9354a0900dbb73bb73e6781db1e04",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java?ref=4132e2991870e69f66d4a98af8993132f626a21a"
            },
            {
                "patch": "@@ -346,15 +346,21 @@ public XSNamespaceItem getNamespaceItem() {\n     }\n \n     public Object getActualVC() {\n-        return fDefault.actualValue;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.actualValue;\n     }\n \n     public short getActualVCType() {\n-        return fDefault.actualValueType;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               XSConstants.UNAVAILABLE_DT :\n+               fDefault.actualValueType;\n     }\n \n     public ShortList getItemValueTypes() {\n-        return fDefault.itemValueTypes;\n+        return getConstraintType() == XSConstants.VC_NONE ?\n+               null :\n+               fDefault.itemValueTypes;\n     }\n \n } // class XSElementDecl",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 3,
                "sha": "6f5b0cfc458bf6d52528ae6d3f5954c51f95dd46",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4132e2991870e69f66d4a98af8993132f626a21a/src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSElementDecl.java?ref=4132e2991870e69f66d4a98af8993132f626a21a"
            }
        ],
        "bug_id": "xerces2-j_10",
        "parent": "https://github.com/apache/xerces2-j/commit/96e3421b51ef5e64f0c9d5279c7c854da196b937",
        "message": "Potential NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320157 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/df5f02d3094a70997c3d99b1716f4b3c1e466734",
        "file": [
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "dd3342776f4ad469e6c1057fd6ae72b569bc8947",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "filename": "src/org/apache/xerces/impl/xs/XSConstraints.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSConstraints.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -153,12 +153,9 @@ XSCMValidator createAllCM(XSParticleDecl particle) {\n         // the <all> itself is optional\n         XSAllCM allContent = new XSAllCM(particle.fMinOccurs == 0, group.fParticleCount);\n         for (int i = 0; i < group.fParticleCount; i++) {\n-            // for all non-empty particles\n-            if (group.fParticles[i].fType != XSParticleDecl.PARTICLE_EMPTY &&\n-                group.fParticles[i].fMaxOccurs != 0)\n-                // add the element decl to the all content model\n-                allContent.addElement((XSElementDecl)group.fParticles[i].fValue,\n-                                      group.fParticles[i].fMinOccurs == 0);\n+            // add the element decl to the all content model\n+            allContent.addElement((XSElementDecl)group.fParticles[i].fValue,\n+            group.fParticles[i].fMinOccurs == 0);\n         }\n         return allContent;\n     }",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/models/CMBuilder.java",
                "status": "modified",
                "changes": 11,
                "deletions": 7,
                "sha": "9f04be6d3e90e622b235d5eb46ab3c0cc5bee0a2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/models/CMBuilder.java",
                "filename": "src/org/apache/xerces/impl/xs/models/CMBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/models/CMBuilder.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -65,6 +65,7 @@\n import org.apache.xerces.impl.xs.XSComplexTypeDecl;\n import org.apache.xerces.util.DOMUtil;\n import org.apache.xerces.impl.xs.util.XInt;\n+import org.apache.xerces.xs.XSObject;\n import org.w3c.dom.Element;\n \n /**\n@@ -94,7 +95,7 @@ XSParticleDecl traverseAll(Element allDecl,\n                                XSDocumentInfo schemaDoc,\n                                SchemaGrammar grammar,\n                                int allContextFlags,\n-                               XSComplexTypeDecl enclosingCT) {\n+                               XSObject parent) {\n \n         // General Attribute Checking\n \n@@ -121,7 +122,7 @@ XSParticleDecl traverseAll(Element allDecl,\n \n             // Only elements are allowed in <all>\n             if (childName.equals(SchemaSymbols.ELT_ELEMENT)) {\n-                particle = fSchemaHandler.fElementTraverser.traverseLocal(child, schemaDoc, grammar, PROCESSING_ALL_EL, enclosingCT);\n+                particle = fSchemaHandler.fElementTraverser.traverseLocal(child, schemaDoc, grammar, PROCESSING_ALL_EL, parent);\n             }\n             else {\n                 Object[] args = {\"all\", \"(annotation?, element*)\", DOMUtil.getLocalName(child)};\n@@ -177,9 +178,9 @@ XSParticleDecl traverseSequence(Element seqDecl,\n                                     XSDocumentInfo schemaDoc,\n                                     SchemaGrammar grammar,\n                                     int allContextFlags,\n-                                    XSComplexTypeDecl enclosingCT) {\n+                                    XSObject parent) {\n \n-        return traverseSeqChoice(seqDecl, schemaDoc, grammar, allContextFlags, false, enclosingCT);\n+        return traverseSeqChoice(seqDecl, schemaDoc, grammar, allContextFlags, false, parent);\n     }\n \n     /**\n@@ -201,9 +202,9 @@ XSParticleDecl traverseChoice(Element choiceDecl,\n                                   XSDocumentInfo schemaDoc,\n                                   SchemaGrammar grammar,\n                                   int allContextFlags,\n-                                  XSComplexTypeDecl enclosingCT) {\n+                                  XSObject parent) {\n \n-        return traverseSeqChoice (choiceDecl, schemaDoc, grammar, allContextFlags, true, enclosingCT);\n+        return traverseSeqChoice (choiceDecl, schemaDoc, grammar, allContextFlags, true, parent);\n     }\n \n     /**\n@@ -220,7 +221,7 @@ private XSParticleDecl traverseSeqChoice(Element decl,\n                                              SchemaGrammar grammar,\n                                              int allContextFlags,\n                                              boolean choice,\n-                                             XSComplexTypeDecl enclosingCT) {\n+                                             XSObject parent) {\n \n         // General Attribute Checking\n         Object[] attrValues = fAttrChecker.checkAttributes(decl, false, schemaDoc);\n@@ -245,7 +246,7 @@ private XSParticleDecl traverseSeqChoice(Element decl,\n \n             childName = DOMUtil.getLocalName(child);\n             if (childName.equals(SchemaSymbols.ELT_ELEMENT)) {\n-                particle = fSchemaHandler.fElementTraverser.traverseLocal(child, schemaDoc, grammar, NOT_ALL_CONTEXT, enclosingCT);\n+                particle = fSchemaHandler.fElementTraverser.traverseLocal(child, schemaDoc, grammar, NOT_ALL_CONTEXT, parent);\n             }\n             else if (childName.equals(SchemaSymbols.ELT_GROUP)) {\n                 particle = fSchemaHandler.fGroupTraverser.traverseLocal(child, schemaDoc, grammar);\n@@ -261,10 +262,10 @@ else if (childName.equals(SchemaSymbols.ELT_GROUP)) {\n \n             }\n             else if (childName.equals(SchemaSymbols.ELT_CHOICE)) {\n-                particle = traverseChoice(child, schemaDoc, grammar, NOT_ALL_CONTEXT, enclosingCT);\n+                particle = traverseChoice(child, schemaDoc, grammar, NOT_ALL_CONTEXT, parent);\n             }\n             else if (childName.equals(SchemaSymbols.ELT_SEQUENCE)) {\n-                particle = traverseSequence(child, schemaDoc, grammar, NOT_ALL_CONTEXT, enclosingCT);\n+                particle = traverseSequence(child, schemaDoc, grammar, NOT_ALL_CONTEXT, parent);\n             }\n             else if (childName.equals(SchemaSymbols.ELT_ANY)) {\n                 particle = fSchemaHandler.fWildCardTraverser.traverseAny(child, schemaDoc, grammar);",
                "additions": 12,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDAbstractParticleTraverser.java",
                "status": "modified",
                "changes": 23,
                "deletions": 11,
                "sha": "a54c4b452a99da3ae69bf46e02b4554e7fe15ef7",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDAbstractParticleTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDAbstractParticleTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDAbstractParticleTraverser.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -67,6 +67,7 @@\n import org.apache.xerces.impl.xs.XSElementDecl;\n import org.apache.xerces.impl.xs.XSParticleDecl;\n import org.apache.xerces.xs.XSConstants;\n+import org.apache.xerces.xs.XSObject;\n import org.apache.xerces.xs.XSTypeDefinition;\n import org.apache.xerces.impl.xs.util.XInt;\n import org.apache.xerces.util.DOMUtil;\n@@ -103,7 +104,6 @@\n class XSDElementTraverser extends XSDAbstractTraverser {\n \n     protected final XSElementDecl  fTempElementDecl  = new XSElementDecl();\n-    protected final XSParticleDecl fTempParticleDecl = new XSParticleDecl();\n \n     // this controls what happens when a local element is encountered.\n     // We may not encounter all local elements when first parsing.\n@@ -131,7 +131,7 @@ XSParticleDecl traverseLocal(Element elmDecl,\n                                  XSDocumentInfo schemaDoc,\n                                  SchemaGrammar grammar,\n                                  int allContextFlags,\n-                                 XSComplexTypeDecl enclosingCT) {\n+                                 XSObject parent) {\n \n         XSParticleDecl particle = null;\n         if (fSchemaHandler.fDeclPool !=null) {\n@@ -155,9 +155,12 @@ XSParticleDecl traverseLocal(Element elmDecl,\n                 catch (NumberFormatException ex) {\n                 }\n             }\n-            fSchemaHandler.fillInLocalElemInfo(elmDecl, schemaDoc, allContextFlags, enclosingCT, particle);\n+            fSchemaHandler.fillInLocalElemInfo(elmDecl, schemaDoc, allContextFlags, parent, particle);\n         } else {\n-            traverseLocal(particle, elmDecl, schemaDoc, grammar, allContextFlags, enclosingCT);\n+            traverseLocal(particle, elmDecl, schemaDoc, grammar, allContextFlags, parent);\n+            // If it's an empty particle, return null.\n+            if (particle.fType == XSParticleDecl.PARTICLE_EMPTY)\n+                particle = null;\n         }\n \n         return particle;\n@@ -176,7 +179,7 @@ protected void traverseLocal(XSParticleDecl particle,\n                                  XSDocumentInfo schemaDoc,\n                                  SchemaGrammar grammar,\n                                  int allContextFlags,\n-                                 XSComplexTypeDecl enclosingCT) {\n+                                 XSObject parent) {\n \n         // General Attribute Checking\n         Object[] attrValues = fAttrChecker.checkAttributes(elmDecl, false, schemaDoc);\n@@ -208,7 +211,7 @@ protected void traverseLocal(XSParticleDecl particle,\n                 element = null;\n             }\n         } else {\n-            element = traverseNamedElement(elmDecl, attrValues, schemaDoc, grammar, false, enclosingCT);\n+            element = traverseNamedElement(elmDecl, attrValues, schemaDoc, grammar, false, parent);\n         }\n \n         particle.fMinOccurs = minAtt.intValue();\n@@ -263,7 +266,7 @@ XSElementDecl traverseNamedElement(Element elmDecl,\n                                        XSDocumentInfo schemaDoc,\n                                        SchemaGrammar grammar,\n                                        boolean isGlobal,\n-                                       XSComplexTypeDecl enclosingCT) {\n+                                       XSObject parent) {\n \n         Boolean abstractAtt  = (Boolean) attrValues[XSAttributeChecker.ATTIDX_ABSTRACT];\n         XInt    blockAtt     = (XInt)    attrValues[XSAttributeChecker.ATTIDX_BLOCK];\n@@ -294,8 +297,8 @@ XSElementDecl traverseNamedElement(Element elmDecl,\n             element.setIsGlobal();\n         }\n         else {\n-            if (enclosingCT != null)\n-                element.setIsLocal(enclosingCT);\n+            if (parent instanceof XSComplexTypeDecl)\n+                element.setIsLocal((XSComplexTypeDecl)parent);\n \n             if (formAtt != null) {\n                 if (formAtt.intValue() == SchemaSymbols.FORM_QUALIFIED)",
                "additions": 13,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "status": "modified",
                "changes": 23,
                "deletions": 10,
                "sha": "3eadda3dff9ee3a2882441ba9d9780d552d2b91f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -169,10 +169,14 @@ XSGroupDecl traverseGlobal(Element elmNode,\n         Element l_elmChild = DOMUtil.getFirstChildElement(elmNode);\n         XSAnnotationImpl annotation = null;\n         if (l_elmChild == null) {\n-        \treportSchemaError(\"s4s-elt-must-match.2\",\n+            reportSchemaError(\"s4s-elt-must-match.2\",\n                               new Object[]{\"group (global)\", \"(annotation?, (all | choice | sequence))\"},\n                               elmNode);\n         } else {\n+            // Create the group defi up-front, so it can be passed\n+            // to the traversal methods\n+            group = new XSGroupDecl();\n+\n             String childName = l_elmChild.getLocalName();\n             if (childName.equals(SchemaSymbols.ELT_ANNOTATION)) {\n                 annotation = traverseAnnotationDecl(l_elmChild, attrValues, true, schemaDoc);\n@@ -182,39 +186,42 @@ XSGroupDecl traverseGlobal(Element elmNode,\n             }\n \n             if (l_elmChild == null) {\n-\t\t\t\treportSchemaError(\"s4s-elt-must-match.2\",\n+                reportSchemaError(\"s4s-elt-must-match.2\",\n                                   new Object[]{\"group (global)\", \"(annotation?, (all | choice | sequence))\"},\n                                   elmNode);\n             } else if (childName.equals(SchemaSymbols.ELT_ALL)) {\n-                particle = traverseAll(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, null);\n+                particle = traverseAll(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, group);\n             } else if (childName.equals(SchemaSymbols.ELT_CHOICE)) {\n-                particle = traverseChoice(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, null);\n+                particle = traverseChoice(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, group);\n             } else if (childName.equals(SchemaSymbols.ELT_SEQUENCE)) {\n-                particle = traverseSequence(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, null);\n+                particle = traverseSequence(l_elmChild, schemaDoc, grammar, CHILD_OF_GROUP, group);\n             } else {\n-\t\t\t\treportSchemaError(\"s4s-elt-must-match.1\",\n+                reportSchemaError(\"s4s-elt-must-match.1\",\n                                   new Object[]{\"group (global)\", \"(annotation?, (all | choice | sequence))\", DOMUtil.getLocalName(l_elmChild)},\n                                   l_elmChild);\n             }\n \n             if (l_elmChild != null &&\n                 DOMUtil.getNextSiblingElement(l_elmChild) != null) {\n-\t\t\t\treportSchemaError(\"s4s-elt-must-match.1\",\n+                reportSchemaError(\"s4s-elt-must-match.1\",\n                                   new Object[]{\"group (global)\", \"(annotation?, (all | choice | sequence))\",\n                                                DOMUtil.getLocalName(DOMUtil.getNextSiblingElement(l_elmChild))},\n                                   DOMUtil.getNextSiblingElement(l_elmChild));\n             }\n \n             // add global group declaration to the grammar\n             if (strNameAttr != null) {\n-                group = new XSGroupDecl();\n                 group.fName = strNameAttr;\n                 group.fTargetNamespace = schemaDoc.fTargetNamespace;\n                 if (particle != null)\n                     group.fModelGroup = (XSModelGroupImpl)particle.fValue;\n                 group.fAnnotation = annotation;\n                 grammar.addGlobalGroupDecl(group);\n             }\n+            else {\n+                // name attribute is not there, don't return this group.\n+                group = null;\n+            }\n         }\n         if(group != null) { \n             // store groups redefined by restriction in the grammar so",
                "additions": 16,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "status": "modified",
                "changes": 25,
                "deletions": 9,
                "sha": "12bfece406cf3e7544b5db8d589ed14ece108443",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -75,7 +75,9 @@\n import org.apache.xerces.impl.xs.XSDeclarationPool;\n import org.apache.xerces.impl.xs.XSElementDecl;\n import org.apache.xerces.impl.xs.XSGrammarBucket;\n+import org.apache.xerces.impl.xs.XSGroupDecl;\n import org.apache.xerces.impl.xs.XSMessageFormatter;\n+import org.apache.xerces.impl.xs.XSModelGroupImpl;\n import org.apache.xerces.impl.xs.XSParticleDecl;\n import org.apache.xerces.impl.xs.opti.ElementImpl;\n import org.apache.xerces.impl.xs.opti.SchemaParsingConfig;\n@@ -90,6 +92,7 @@\n import org.apache.xerces.xni.parser.XMLEntityResolver;\n import org.apache.xerces.xni.parser.XMLErrorHandler;\n import org.apache.xerces.xni.parser.XMLInputSource;\n+import org.apache.xerces.xs.XSObject;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n \n@@ -311,7 +314,7 @@ private String emptyString2Null(String ns) {\n     private XSParticleDecl[] fParticle = new XSParticleDecl[INIT_STACK_SIZE];\n     private Element[] fLocalElementDecl = new Element[INIT_STACK_SIZE];\n     private int[] fAllContext = new int[INIT_STACK_SIZE];\n-    private XSComplexTypeDecl[] fEnclosingCT = new XSComplexTypeDecl[INIT_STACK_SIZE];\n+    private XSObject[] fParent = new XSObject[INIT_STACK_SIZE];\n     private String [][] fLocalElemNamespaceContext = new String [INIT_STACK_SIZE][1];\n \n     // these data members are needed for the deferred traversal\n@@ -1675,16 +1678,43 @@ void traverseLocalElements() {\n             Element currElem = fLocalElementDecl[i];\n             XSDocumentInfo currSchema = (XSDocumentInfo)fDoc2XSDocumentMap.get(DOMUtil.getDocument(currElem));\n             SchemaGrammar currGrammar = fGrammarBucket.getGrammar(currSchema.fTargetNamespace);\n-            fElementTraverser.traverseLocal (fParticle[i], currElem, currSchema, currGrammar, fAllContext[i], fEnclosingCT[i]);\n+            fElementTraverser.traverseLocal (fParticle[i], currElem, currSchema, currGrammar, fAllContext[i], fParent[i]);\n+            // If it's an empty particle, remove it from the containing component.\n+            if (fParticle[i].fType == XSParticleDecl.PARTICLE_EMPTY) {\n+                XSModelGroupImpl group;\n+                if (fParent[i] instanceof XSComplexTypeDecl)\n+                    group = (XSModelGroupImpl)((XSComplexTypeDecl)fParent[i]).getParticle().getTerm();\n+                else\n+                    group = ((XSGroupDecl)fParent[i]).fModelGroup;\n+                removeParticle(group, fParticle[i]);\n+            }\n+        }\n+    }\n+\n+    private boolean removeParticle(XSModelGroupImpl group, XSParticleDecl particle) {\n+        XSParticleDecl member;\n+        for (int i = 0; i < group.fParticleCount; i++) {\n+            member = group.fParticles[i];\n+            if (member == particle) {\n+                for (int j = i; j < group.fParticleCount-1; j++)\n+                    group.fParticles[j] = group.fParticles[j+1];\n+                group.fParticleCount--;\n+                return true;\n+            }\n+            if (member.fType == XSParticleDecl.PARTICLE_MODELGROUP) {\n+                if (removeParticle((XSModelGroupImpl)member.fValue, particle))\n+                    return true;\n+            }\n         }\n+        return false;\n     }\n \n     // the purpose of this method is to keep up-to-date structures\n     // we'll need for the feferred traversal of local elements.\n     void fillInLocalElemInfo(Element elmDecl,\n                              XSDocumentInfo schemaDoc,\n                              int allContextFlags,\n-                             XSComplexTypeDecl enclosingCT,\n+                             XSObject parent,\n                              XSParticleDecl particle) {\n \n         // if the stack is full, increase the size\n@@ -1699,9 +1729,9 @@ void fillInLocalElemInfo(Element elmDecl,\n             int[] newStackI = new int[fLocalElemStackPos+INC_STACK_SIZE];\n             System.arraycopy(fAllContext, 0, newStackI, 0, fLocalElemStackPos);\n             fAllContext = newStackI;\n-            XSComplexTypeDecl[] newStackC = new XSComplexTypeDecl[fLocalElemStackPos+INC_STACK_SIZE];\n-            System.arraycopy(fEnclosingCT, 0, newStackC, 0, fLocalElemStackPos);\n-            fEnclosingCT = newStackC;\n+            XSObject[] newStackC = new XSObject[fLocalElemStackPos+INC_STACK_SIZE];\n+            System.arraycopy(fParent, 0, newStackC, 0, fLocalElemStackPos);\n+            fParent = newStackC;\n             String [][] newStackN = new String [fLocalElemStackPos+INC_STACK_SIZE][];\n             System.arraycopy(fLocalElemNamespaceContext, 0, newStackN, 0, fLocalElemStackPos);\n             fLocalElemNamespaceContext = newStackN;\n@@ -1710,7 +1740,7 @@ void fillInLocalElemInfo(Element elmDecl,\n         fParticle[fLocalElemStackPos] = particle;\n         fLocalElementDecl[fLocalElemStackPos] = elmDecl;\n         fAllContext[fLocalElemStackPos] = allContextFlags;\n-        fEnclosingCT[fLocalElemStackPos] = enclosingCT;\n+        fParent[fLocalElemStackPos] = parent;\n         fLocalElemNamespaceContext[fLocalElemStackPos++] = schemaDoc.fNamespaceSupport.getEffectiveLocalContext();\n     } // end fillInLocalElemInfo(...)\n ",
                "additions": 38,
                "raw_url": "https://github.com/apache/xerces2-j/raw/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 46,
                "deletions": 8,
                "sha": "f45ae571e09fb1bd678e6554d9b7a06f08979dda",
                "blob_url": "https://github.com/apache/xerces2-j/blob/df5f02d3094a70997c3d99b1716f4b3c1e466734/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=df5f02d3094a70997c3d99b1716f4b3c1e466734"
            }
        ],
        "bug_id": "xerces2-j_11",
        "parent": "https://github.com/apache/xerces2-j/commit/65d90890417bcbc76140a48a09881cd6e541a2c0",
        "message": "Fixing a potential NPE.\nWhen there exist empty particles, it's possible for other parts to get NPE when\nthey try to access such particles. Now all empty particles are removed from\nthe model group that contains it.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319745 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/63299d69ce93b45c949475e91781183d75f50483",
        "file": [
            {
                "patch": "@@ -94,6 +94,15 @@\n \n public class XSAttributeChecker {\n \n+    // REVISIT: only local element and attribute are different from others.\n+    //          it's possible to have either name or ref. all the others\n+    //          are only allowed to have one of name or ref, or neither of them.\n+    //          we'd better remove such checking to the traverser.\n+    private static final String ELEMENT_N = \"element_n\";\n+    private static final String ELEMENT_R = \"element_r\";\n+    private static final String ATTRIBUTE_N = \"attribute_n\";\n+    private static final String ATTRIBUTE_R = \"attribute_r\";\n+\n     public static       int ATTIDX_COUNT           = 0;\n     public static final int ATTIDX_ABSTRACT        = ATTIDX_COUNT++;\n     public static final int ATTIDX_AFORMDEFAULT    = ATTIDX_COUNT++;\n@@ -154,8 +163,7 @@\n \n     // used to store the map from element name to attribute list\n     protected static Hashtable fEleAttrsMapG = new Hashtable();\n-    protected static Hashtable fEleAttrsMapN = new Hashtable();\n-    protected static Hashtable fEleAttrsMapR = new Hashtable();\n+    protected static Hashtable fEleAttrsMapL = new Hashtable();\n \n     // used to initialize fEleAttrsMap\n     // step 1: all possible data types\n@@ -485,7 +493,7 @@\n         // use = (optional | prohibited | required) : optional\n         attrList.put(SchemaSymbols.ATT_USE, allAttrs[ATT_USE_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ATTRIBUTE, oneEle);\n+        fEleAttrsMapL.put(ATTRIBUTE_N, oneEle);\n \n         // for element \"attribute\" - local ref\n         attrList = new Hashtable();\n@@ -500,7 +508,7 @@\n         // use = (optional | prohibited | required) : optional\n         attrList.put(SchemaSymbols.ATT_USE, allAttrs[ATT_USE_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapR.put(SchemaSymbols.ELT_ATTRIBUTE, oneEle);\n+        fEleAttrsMapL.put(ATTRIBUTE_R, oneEle);\n \n         // for element \"element\" - global\n         attrList = new Hashtable();\n@@ -550,7 +558,7 @@\n         // type = QName\n         attrList.put(SchemaSymbols.ATT_TYPE, allAttrs[ATT_TYPE_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ELEMENT, oneEle);\n+        fEleAttrsMapL.put(ELEMENT_N, oneEle);\n \n         // for element \"element\" - local ref\n         attrList = new Hashtable();\n@@ -563,7 +571,7 @@\n         // ref = QName\n         attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapR.put(SchemaSymbols.ELT_ELEMENT, oneEle);\n+        fEleAttrsMapL.put(ELEMENT_R, oneEle);\n \n         // for element \"complexType\" - global\n         attrList = new Hashtable();\n@@ -582,7 +590,7 @@\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_COMPLEXTYPE, oneEle);\n \n-        // for element \"notation\" - local name\n+        // for element \"notation\" - global\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -596,39 +604,39 @@\n         fEleAttrsMapG.put(SchemaSymbols.ELT_NOTATION, oneEle);\n \n \n-        // for element \"complexType\" - local name\n+        // for element \"complexType\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // mixed = boolean : false\n         attrList.put(SchemaSymbols.ATT_MIXED, allAttrs[ATT_MIXED_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_COMPLEXTYPE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_COMPLEXTYPE, oneEle);\n \n-        // for element \"simpleContent\" - local name\n+        // for element \"simpleContent\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_SIMPLECONTENT, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_SIMPLECONTENT, oneEle);\n \n-        // for element \"restriction\" - local name\n+        // for element \"restriction\" - local\n         attrList = new Hashtable();\n         // base = QName\n         attrList.put(SchemaSymbols.ATT_BASE, allAttrs[ATT_BASE_N]);\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_RESTRICTION, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_RESTRICTION, oneEle);\n \n-        // for element \"extension\" - local name\n+        // for element \"extension\" - local\n         attrList = new Hashtable();\n         // base = QName\n         attrList.put(SchemaSymbols.ATT_BASE, allAttrs[ATT_BASE_R]);\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_EXTENSION, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_EXTENSION, oneEle);\n \n         // for element \"attributeGroup\" - local ref\n         attrList = new Hashtable();\n@@ -637,9 +645,9 @@\n         // ref = QName\n         attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapR.put(SchemaSymbols.ELT_ATTRIBUTEGROUP, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ATTRIBUTEGROUP, oneEle);\n \n-        // for element \"anyAttribute\" - local name\n+        // for element \"anyAttribute\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -648,16 +656,16 @@\n         // processContents = (lax | skip | strict) : strict\n         attrList.put(SchemaSymbols.ATT_PROCESSCONTENTS, allAttrs[ATT_PROCESS_C_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ANYATTRIBUTE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ANYATTRIBUTE, oneEle);\n \n-        // for element \"complexContent\" - local name\n+        // for element \"complexContent\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // mixed = boolean\n         attrList.put(SchemaSymbols.ATT_MIXED, allAttrs[ATT_MIXED_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_COMPLEXCONTENT, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_COMPLEXCONTENT, oneEle);\n \n         // for element \"attributeGroup\" - global\n         attrList = new Hashtable();\n@@ -688,9 +696,9 @@\n         // ref = QName\n         attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapR.put(SchemaSymbols.ELT_GROUP, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_GROUP, oneEle);\n \n-        // for element \"all\" - local name\n+        // for element \"all\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -699,9 +707,9 @@\n         // minOccurs = (0 | 1) : 1\n         attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS1_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ALL, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ALL, oneEle);\n \n-        // for element \"choice\" - local name\n+        // for element \"choice\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -710,11 +718,11 @@\n         // minOccurs = nonNegativeInteger : 1\n         attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_CHOICE, oneEle);\n-        // for element \"sequence\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_SEQUENCE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_CHOICE, oneEle);\n+        // for element \"sequence\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_SEQUENCE, oneEle);\n \n-        // for element \"any\" - local name\n+        // for element \"any\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -727,20 +735,20 @@\n         // processContents = (lax | skip | strict) : strict\n         attrList.put(SchemaSymbols.ATT_PROCESSCONTENTS, allAttrs[ATT_PROCESS_C_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ANY, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ANY, oneEle);\n \n-        // for element \"unique\" - local name\n+        // for element \"unique\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // name = NCName\n         attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_UNIQUE, oneEle);\n-        // for element \"key\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_KEY, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_UNIQUE, oneEle);\n+        // for element \"key\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_KEY, oneEle);\n \n-        // for element \"keyref\" - local name\n+        // for element \"keyref\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -749,51 +757,51 @@\n         // refer = QName\n         attrList.put(SchemaSymbols.ATT_REFER, allAttrs[ATT_REFER_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_KEYREF, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_KEYREF, oneEle);\n \n-        // for element \"selector\" - local name\n+        // for element \"selector\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // xpath = a subset of XPath expression\n         attrList.put(SchemaSymbols.ATT_XPATH, allAttrs[ATT_XPATH_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_SELECTOR, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_SELECTOR, oneEle);\n \n-        // for element \"field\" - local name\n+        // for element \"field\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // xpath = a subset of XPath expression\n         attrList.put(SchemaSymbols.ATT_XPATH, allAttrs[ATT_XPATH1_R]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_FIELD, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_FIELD, oneEle);\n \n         // for element \"annotation\" - global\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_ANNOTATION, oneEle);\n-        // for element \"annotation\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ANNOTATION, oneEle);\n+        // for element \"annotation\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ANNOTATION, oneEle);\n \n-        // for element \"appinfo\" - local name\n+        // for element \"appinfo\" - local\n         attrList = new Hashtable();\n         // source = anyURI\n         attrList.put(SchemaSymbols.ATT_SOURCE, allAttrs[ATT_SOURCE_N]);\n         oneEle = new OneElement (attrList, false);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_APPINFO, oneEle);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_APPINFO, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_APPINFO, oneEle);\n \n-        // for element \"documentation\" - local name\n+        // for element \"documentation\" - local\n         attrList = new Hashtable();\n         // source = anyURI\n         attrList.put(SchemaSymbols.ATT_SOURCE, allAttrs[ATT_SOURCE_N]);\n         // xml:lang = language ???\n         oneEle = new OneElement (attrList, false);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_DOCUMENTATION, oneEle);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_DOCUMENTATION, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_DOCUMENTATION, oneEle);\n \n         // for element \"simpleType\" - global\n         attrList = new Hashtable();\n@@ -806,35 +814,35 @@\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_SIMPLETYPE, oneEle);\n \n-        // for element \"simpleType\" - local name\n+        // for element \"simpleType\" - local\n         attrList = new Hashtable();\n         // final = (#all | (list | union | restriction))\n         attrList.put(SchemaSymbols.ATT_FINAL, allAttrs[ATT_FINAL1_N]);\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_SIMPLETYPE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_SIMPLETYPE, oneEle);\n \n-        // for element \"restriction\" - local name\n+        // for element \"restriction\" - local\n         // already registered for complexType\n \n-        // for element \"list\" - local name\n+        // for element \"list\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // itemType = QName\n         attrList.put(SchemaSymbols.ATT_ITEMTYPE, allAttrs[ATT_ITEMTYPE_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_LIST, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_LIST, oneEle);\n \n-        // for element \"union\" - local name\n+        // for element \"union\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // memberTypes = List of QName\n         attrList.put(SchemaSymbols.ATT_MEMBERTYPES, allAttrs[ATT_MEMBER_T_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_UNION, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_UNION, oneEle);\n \n         // for element \"schema\" - global\n         attrList = new Hashtable();\n@@ -878,7 +886,7 @@\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_IMPORT, oneEle);\n \n-        // for element \"length\" - local name\n+        // for element \"length\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -887,35 +895,35 @@\n         // fixed = boolean : false\n         attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_LENGTH, oneEle);\n-        // for element \"minLength\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MINLENGTH, oneEle);\n-        // for element \"maxLength\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MAXLENGTH, oneEle);\n-        // for element \"totalDigits\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_TOTALDIGITS, oneEle);\n-        // for element \"fractionDigits\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_FRACTIONDIGITS, oneEle);\n-\n-        // for element \"pattern\" - local name\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_LENGTH, oneEle);\n+        // for element \"minLength\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MINLENGTH, oneEle);\n+        // for element \"maxLength\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXLENGTH, oneEle);\n+        // for element \"totalDigits\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_TOTALDIGITS, oneEle);\n+        // for element \"fractionDigits\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_FRACTIONDIGITS, oneEle);\n+\n+        // for element \"pattern\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // value = string\n         attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_STR_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_PATTERN, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_PATTERN, oneEle);\n \n-        // for element \"enumeration\" - local name\n+        // for element \"enumeration\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n         // value = anySimpleType\n         attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_STR_N]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_ENUMERATION, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_ENUMERATION, oneEle);\n \n-        // for element \"whiteSpace\" - local name\n+        // for element \"whiteSpace\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -924,9 +932,9 @@\n         // fixed = boolean : false\n         attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_WHITESPACE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_WHITESPACE, oneEle);\n \n-        // for element \"maxInclusive\" - local name\n+        // for element \"maxInclusive\" - local\n         attrList = new Hashtable();\n         // id = ID\n         attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n@@ -935,13 +943,13 @@\n         // fixed = boolean : false\n         attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);\n         oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MAXINCLUSIVE, oneEle);\n-        // for element \"maxExclusive\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MAXEXCLUSIVE, oneEle);\n-        // for element \"minInclusive\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MININCLUSIVE, oneEle);\n-        // for element \"minExclusive\" - local name\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_MINEXCLUSIVE, oneEle);\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXINCLUSIVE, oneEle);\n+        // for element \"maxExclusive\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXEXCLUSIVE, oneEle);\n+        // for element \"minInclusive\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MININCLUSIVE, oneEle);\n+        // for element \"minExclusive\" - local\n+        fEleAttrsMapL.put(SchemaSymbols.ELT_MINEXCLUSIVE, oneEle);\n     }\n \n     // used to resolver namespace prefixes\n@@ -990,22 +998,34 @@ public void reset(XMLErrorReporter er, SymbolTable symbolTable) {\n             reportSchemaError(\"s4s-elt-schema-ns\", new Object[] {elName});\n         }\n \n-        // Get the proper registry:\n-        Hashtable eleAttrsMap = null;\n-        if (isGlobal) {\n-            eleAttrsMap = fEleAttrsMapG;\n-        }\n-        else {\n-            if (DOMUtil.getAttr(element, SchemaSymbols.ATT_REF) != null)\n-                eleAttrsMap = fEleAttrsMapR;\n-            else\n-                eleAttrsMap = fEleAttrsMapN;\n+        Hashtable eleAttrsMap = fEleAttrsMapG;\n+        String lookupName = elName;\n+\n+        // REVISIT: only local element and attribute are different from others.\n+        //          it's possible to have either name or ref. all the others\n+        //          are only allowed to have one of name or ref, or neither of them.\n+        //          we'd better remove such checking to the traverser.\n+        if (!isGlobal) {\n+            eleAttrsMap = fEleAttrsMapL;\n+            if (elName.equals(SchemaSymbols.ELT_ELEMENT)) {\n+                if (DOMUtil.getAttr(element, SchemaSymbols.ATT_REF) != null)\n+                    lookupName = ELEMENT_R;\n+                else\n+                    lookupName = ELEMENT_N;\n+            } else if (elName.equals(SchemaSymbols.ELT_ATTRIBUTE)) {\n+                if (DOMUtil.getAttr(element, SchemaSymbols.ATT_REF) != null)\n+                    lookupName = ATTRIBUTE_R;\n+                else\n+                    lookupName = ATTRIBUTE_N;\n+            }\n         }\n \n         // get desired attribute list of this element\n-        OneElement oneEle = (OneElement)eleAttrsMap.get(elName);\n+        OneElement oneEle = (OneElement)eleAttrsMap.get(lookupName);\n         if (oneEle == null) {\n-\n+            // should never gets here.\n+            // when this method is called, the call already knows that\n+            // the element can appear.\n             reportSchemaError (\"s4s-elt-invalid\", new Object[] {elName});\n             return null;\n         }",
                "additions": 109,
                "raw_url": "https://github.com/apache/xerces2-j/raw/63299d69ce93b45c949475e91781183d75f50483/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "status": "modified",
                "changes": 198,
                "deletions": 89,
                "sha": "783d538d213e696a5d6b050f77fe8f90ac0d33f7",
                "blob_url": "https://github.com/apache/xerces2-j/blob/63299d69ce93b45c949475e91781183d75f50483/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "filename": "src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSAttributeChecker.java?ref=63299d69ce93b45c949475e91781183d75f50483"
            }
        ],
        "bug_id": "xerces2-j_12",
        "parent": "https://github.com/apache/xerces2-j/commit/c00e974c6431c80000877f07a43df0bd20cb169d",
        "message": "Fixing a NPE: sometimes XSAttributeCheck#checkAttributes return null,\nif the element passed in is not expected. And further reference to the returned\nvalue would cause NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317812 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/88c9bad5ab8cdbbbc412b09b93444d6a011ebce0",
        "file": [
            {
                "patch": "@@ -39,7 +39,7 @@ public StAXInputSource(XMLStreamReader source) {\n     }\n     \n     public StAXInputSource(XMLStreamReader source, boolean consumeRemainingContent) {\n-        super(null, source.getLocation().getSystemId(), null);\n+        super(null, getStreamReaderSystemId(source), null);\n         if (source == null) {\n             throw new IllegalArgumentException(\"XMLStreamReader parameter cannot be null.\");\n         }\n@@ -78,6 +78,13 @@ public void setSystemId(String systemId){\n         throw new UnsupportedOperationException(\"Cannot set the system ID on a StAXInputSource\");\n     }\n     \n+    private static String getStreamReaderSystemId(XMLStreamReader reader) {\n+        if (reader != null) {\n+            return reader.getLocation().getSystemId();\n+        }\n+        return null;\n+    }\n+    \n     private static String getEventReaderSystemId(XMLEventReader reader) {\n         try {\n             if (reader != null) {",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/88c9bad5ab8cdbbbc412b09b93444d6a011ebce0/src/org/apache/xerces/util/StAXInputSource.java",
                "status": "modified",
                "changes": 9,
                "deletions": 1,
                "sha": "ffc65e785ff6be64a77bc78caf67329284f1e3d6",
                "blob_url": "https://github.com/apache/xerces2-j/blob/88c9bad5ab8cdbbbc412b09b93444d6a011ebce0/src/org/apache/xerces/util/StAXInputSource.java",
                "filename": "src/org/apache/xerces/util/StAXInputSource.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/util/StAXInputSource.java?ref=88c9bad5ab8cdbbbc412b09b93444d6a011ebce0"
            }
        ],
        "bug_id": "xerces2-j_13",
        "parent": "https://github.com/apache/xerces2-j/commit/900260bc88a25c1607b0e1d59d80a842e5b28eae",
        "message": "Fixing an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@1358676 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/9d70ac953569f3ee4155f1b24b571d5d5b479421",
        "file": [
            {
                "patch": "@@ -119,7 +119,7 @@ public static void copyInto(Node src, Node dest) throws DOMException {\n             default: {\n                 throw new IllegalArgumentException(\"can't copy node type, \"+\n                         type+\" (\"+\n-                        node.getNodeName()+')');\n+                        place.getNodeName()+')');\n             }\n             }\n             dest.appendChild(node);",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/9d70ac953569f3ee4155f1b24b571d5d5b479421/src/org/apache/xerces/util/DOMUtil.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "79325fd06477129f3c45e668b9eaaa38efaf7968",
                "blob_url": "https://github.com/apache/xerces2-j/blob/9d70ac953569f3ee4155f1b24b571d5d5b479421/src/org/apache/xerces/util/DOMUtil.java",
                "filename": "src/org/apache/xerces/util/DOMUtil.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/util/DOMUtil.java?ref=9d70ac953569f3ee4155f1b24b571d5d5b479421"
            }
        ],
        "bug_id": "xerces2-j_14",
        "parent": "https://github.com/apache/xerces2-j/commit/d47478b0e5305d15db67dae10400f5f929cf1aa2",
        "message": "Fixing an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@929493 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/d47478b0e5305d15db67dae10400f5f929cf1aa2",
        "file": [
            {
                "patch": "@@ -477,8 +477,10 @@ synchronized RangeToken getCaseInsensitiveToken() {\n \n     void dumpRanges() {\n         System.err.print(\"RANGE: \");\n-        if (this.ranges == null)\n+        if (this.ranges == null) {\n             System.err.println(\" NULL\");\n+            return;\n+        }\n         for (int i = 0;  i < this.ranges.length;  i += 2) {\n             System.err.print(\"[\"+this.ranges[i]+\",\"+this.ranges[i+1]+\"] \");\n         }",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d47478b0e5305d15db67dae10400f5f929cf1aa2/src/org/apache/xerces/impl/xpath/regex/RangeToken.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "c973282cef0560d8d71fc32a976cb50f7837b5a8",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d47478b0e5305d15db67dae10400f5f929cf1aa2/src/org/apache/xerces/impl/xpath/regex/RangeToken.java",
                "filename": "src/org/apache/xerces/impl/xpath/regex/RangeToken.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xpath/regex/RangeToken.java?ref=d47478b0e5305d15db67dae10400f5f929cf1aa2"
            }
        ],
        "bug_id": "xerces2-j_15",
        "parent": "https://github.com/apache/xerces2-j/commit/014a28ba49a435b4ab90b3785e6c0aa210f74fe6",
        "message": "Fixing a potential NPE in a debug method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@928735 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/504207ba22aacf621728e5767aa6c11559555f90",
        "file": [
            {
                "patch": "@@ -98,6 +98,11 @@\n     SymbolHash fGlobalNotationDeclsExt;\n     SymbolHash fGlobalIDConstraintDeclsExt;\n     SymbolHash fGlobalTypeDeclsExt;\n+    \n+    // A global map of all global element declarations - used for substitution group computation\n+    // (handy when sharing components by reference, since we might end up with duplicate components\n+    //  that are not added to either of the global element declarations above)\n+    SymbolHash fAllGlobalElemDecls;\n \n     // the XMLGrammarDescription member\n     XSDDescription fGrammarDescription = null;\n@@ -156,6 +161,9 @@ public SchemaGrammar(String targetNamespace, XSDDescription grammarDesc,\n         fGlobalNotationDeclsExt = new SymbolHash();\n         fGlobalIDConstraintDeclsExt = new SymbolHash();\n         fGlobalTypeDeclsExt = new SymbolHash();\n+        \n+        // All global elements table\n+        fAllGlobalElemDecls = new SymbolHash();\n \n         // if we are parsing S4S, put built-in types in first\n         // they might get overwritten by the types from S4S, but that's\n@@ -189,6 +197,9 @@ public SchemaGrammar(SchemaGrammar grammar) {\n         fGlobalNotationDeclsExt = grammar.fGlobalNotationDeclsExt.makeClone();\n         fGlobalIDConstraintDeclsExt = grammar.fGlobalIDConstraintDeclsExt.makeClone();\n         fGlobalTypeDeclsExt = grammar.fGlobalTypeDeclsExt.makeClone();\n+        \n+        // All global elements table\n+        fAllGlobalElemDecls = grammar.fAllGlobalElemDecls.makeClone();\n \n         // Annotations associated with the \"root\" schema of this targetNamespace\n         fNumAnnotations = grammar.fNumAnnotations;\n@@ -292,6 +303,9 @@ public BuiltinSchemaGrammar(int grammar, short schemaVersion) {\n                 fGlobalNotationDeclsExt = new SymbolHash(1);\n                 fGlobalIDConstraintDeclsExt = new SymbolHash(1);\n                 fGlobalTypeDeclsExt = new SymbolHash(1);\n+\n+                // all global element decls table\n+                fAllGlobalElemDecls = new SymbolHash(1);\n         \n                 // get all built-in types\n                 fGlobalTypeDecls = schemaFactory.getBuiltInTypes();\n@@ -335,6 +349,9 @@ else if (grammar == GRAMMAR_XSI) {\n                 fGlobalNotationDeclsExt = new SymbolHash(1);\n                 fGlobalIDConstraintDeclsExt = new SymbolHash(1);\n                 fGlobalTypeDeclsExt = new SymbolHash(1);\n+                \n+                // no all global element decls\n+                fAllGlobalElemDecls = new SymbolHash(1);\n     \n                 // 4 attributes, so initialize the size as 4*2 = 8\n                 fGlobalAttrDecls  = new SymbolHash(8);\n@@ -403,6 +420,9 @@ public void addGlobalElementDecl(XSElementDecl decl) {\n         public void addGlobalElementDecl(XSElementDecl decl, String location) {\n             // ignore\n         }\n+        public void addGlobalElementDeclAll(XSElementDecl decl) {\n+            // ignore\n+        }\n         public void addGlobalGroupDecl(XSGroupDecl decl) {\n             // ignore\n         }\n@@ -498,6 +518,9 @@ private Schema4Annotations() {\n             fGlobalIDConstraintDeclsExt = new SymbolHash(1);\n             fGlobalTypeDeclsExt = new SymbolHash(1);\n             \n+            // all global element declarations\n+            fAllGlobalElemDecls = new SymbolHash(6);\n+            \n             // get all built-in types\n             fGlobalTypeDecls = SG_SchemaNS.fGlobalTypeDecls;\n             \n@@ -511,6 +534,14 @@ private Schema4Annotations() {\n             fGlobalElemDecls.put(documentationDecl.fName, documentationDecl);\n             fGlobalElemDecls.put(appinfoDecl.fName, appinfoDecl);\n             \n+            fGlobalElemDeclsExt.put(\",\"+annotationDecl.fName, annotationDecl);\n+            fGlobalElemDeclsExt.put(\",\"+documentationDecl.fName, documentationDecl);\n+            fGlobalElemDeclsExt.put(\",\"+appinfoDecl.fName, appinfoDecl);\n+            \n+            fAllGlobalElemDecls.put(annotationDecl, annotationDecl);\n+            fAllGlobalElemDecls.put(documentationDecl, documentationDecl);\n+            fAllGlobalElemDecls.put(appinfoDecl, appinfoDecl);\n+            \n             // create complex type declarations for <annotation>, <documentation> and <appinfo>\n             XSComplexTypeDecl annotationType = new XSComplexTypeDecl();\n             XSComplexTypeDecl documentationType = new XSComplexTypeDecl();\n@@ -640,6 +671,9 @@ public void addGlobalElementDecl(XSElementDecl decl) {\n         public void addGlobalElementDecl(XSElementDecl decl, String location) {\n             // ignore\n         }\n+        public void addGlobalElementDeclAll(XSElementDecl decl) {\n+            // ignore\n+        }\n         public void addGlobalGroupDecl(XSGroupDecl decl) {\n             // ignore\n         }\n@@ -786,11 +820,9 @@ public void addGlobalAttributeDecl(XSAttributeDecl decl) {\n     }\n \n     public void addGlobalAttributeDecl(XSAttributeDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalAttrDeclsExt.put(location+\",\"+ decl.fName, decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalAttrDeclsExt.put(((location!=null) ? location : \"\") + \",\" + decl.fName, decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n \n@@ -803,36 +835,37 @@ public void addGlobalAttributeGroupDecl(XSAttributeGroupDecl decl) {\n     }\n \n     public void addGlobalAttributeGroupDecl(XSAttributeGroupDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalAttrGrpDeclsExt.put(location+\",\"+decl.fName, decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalAttrGrpDeclsExt.put(((location!=null) ? location : \"\") + \",\" + decl.fName, decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n \n     /**\n      * register one global element\n      */\n+    public void addGlobalElementDeclAll(XSElementDecl decl) {\n+        if (fAllGlobalElemDecls.get(decl) == null) {\n+            fAllGlobalElemDecls.put(decl, decl);\n+            // if there is a substitution group affiliation, store in an array,\n+            // for further constraint checking: UPA, PD, EDC\n+            if (decl.fSubGroup != null) {\n+               if (fSubGroupCount == fSubGroups.length)\n+                    fSubGroups = resize(fSubGroups, fSubGroupCount+INC_SIZE);\n+                fSubGroups[fSubGroupCount++] = decl;\n+            }\n+        }\n+    }\n+\n     public void addGlobalElementDecl(XSElementDecl decl) {\n         fGlobalElemDecls.put(decl.fName, decl);\n         decl.setNamespaceItem(this);\n-\n-        // if there is a substitution group affiliation, store in an array,\n-        // for further constraint checking: UPA, PD, EDC\n-        if (decl.fSubGroup != null) {\n-            if (fSubGroupCount == fSubGroups.length)\n-                fSubGroups = resize(fSubGroups, fSubGroupCount+INC_SIZE);\n-            fSubGroups[fSubGroupCount++] = decl;\n-        }\n     }\n \n     public void addGlobalElementDecl(XSElementDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalElemDeclsExt.put(location+\",\"+decl.fName, decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalElemDeclsExt.put(((location != null) ? location : \"\") + \",\" + decl.fName, decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n \n@@ -845,11 +878,9 @@ public void addGlobalGroupDecl(XSGroupDecl decl) {\n     }\n \n     public void addGlobalGroupDecl(XSGroupDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalGroupDeclsExt.put(location+\",\"+decl.fName, decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalGroupDeclsExt.put(((location!=null) ? location : \"\") + \",\" + decl.fName, decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n \n@@ -862,11 +893,9 @@ public void addGlobalNotationDecl(XSNotationDecl decl) {\n     }\n \n     public void addGlobalNotationDecl(XSNotationDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalNotationDeclsExt.put(location+\",\"+decl.fName, decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalNotationDeclsExt.put(((location!=null) ? location : \"\") + \",\" +decl.fName, decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n \n@@ -884,15 +913,13 @@ else if (decl instanceof XSSimpleTypeDecl) {\n     }\n \n     public void addGlobalTypeDecl(XSTypeDefinition decl, String location) {\n-        if (location != null) {\n-            fGlobalTypeDeclsExt.put(location+\",\"+decl.getName(), decl);\n-            if (decl.getNamespaceItem() == null) {\n-                if (decl instanceof XSComplexTypeDecl) {\n-                    ((XSComplexTypeDecl) decl).setNamespaceItem(this);\n-                }\n-                else if (decl instanceof XSSimpleTypeDecl) {\n-                    ((XSSimpleTypeDecl) decl).setNamespaceItem(this);\n-                }\n+        fGlobalTypeDeclsExt.put(((location!=null) ? location : \"\") + \",\" + decl.getName(), decl);\n+        if (decl.getNamespaceItem() == null) {\n+            if (decl instanceof XSComplexTypeDecl) {\n+                ((XSComplexTypeDecl) decl).setNamespaceItem(this);\n+            }\n+            else if (decl instanceof XSSimpleTypeDecl) {\n+                ((XSSimpleTypeDecl) decl).setNamespaceItem(this);\n             }\n         }\n     }\n@@ -906,11 +933,9 @@ public void addGlobalComplexTypeDecl(XSComplexTypeDecl decl) {\n     }\n \n     public void addGlobalComplexTypeDecl(XSComplexTypeDecl decl, String location) {\n-        if (location != null) {\n-            fGlobalTypeDeclsExt.put(location+\",\"+decl.getName(), decl);\n-            if (decl.getNamespaceItem() == null) {\n-                decl.setNamespaceItem(this);\n-            }\n+        fGlobalTypeDeclsExt.put(((location!=null) ? location : \"\") + \",\" + decl.getName(), decl);\n+        if (decl.getNamespaceItem() == null) {\n+            decl.setNamespaceItem(this);\n         }\n     }\n     \n@@ -925,11 +950,9 @@ public void addGlobalSimpleTypeDecl(XSSimpleType decl) {\n     }\n \n     public void addGlobalSimpleTypeDecl(XSSimpleType decl, String location) {\n-        if (location != null) {\n-            fGlobalTypeDeclsExt.put(location+\",\"+decl.getName(), decl);\n-            if (decl.getNamespaceItem() == null && decl instanceof XSSimpleTypeDecl) {\n-                ((XSSimpleTypeDecl) decl).setNamespaceItem(this);\n-            }\n+        fGlobalTypeDeclsExt.put(((location != null) ? location : \"\") + \",\" + decl.getName(), decl);\n+        if (decl.getNamespaceItem() == null && decl instanceof XSSimpleTypeDecl) {\n+            ((XSSimpleTypeDecl) decl).setNamespaceItem(this);\n         }\n     }\n \n@@ -942,9 +965,7 @@ public final void addIDConstraintDecl(XSElementDecl elmDecl, IdentityConstraint\n     }\n \n     public final void addIDConstraintDecl(XSElementDecl elmDecl, IdentityConstraint decl, String location) {\n-        if (location != null) {\n-            fGlobalIDConstraintDeclsExt.put(location+\",\"+decl.getIdentityConstraintName(), decl);\n-        }\n+        fGlobalIDConstraintDeclsExt.put(((location != null) ? location : \"\") + \",\" + decl.getIdentityConstraintName(), decl);\n     }\n \n     /**\n@@ -955,10 +976,7 @@ public final XSAttributeDecl getGlobalAttributeDecl(String declName) {\n     }\n \n     public final XSAttributeDecl getGlobalAttributeDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalAttributeDecl(declName);\n-        }\n-        return(XSAttributeDecl)fGlobalAttrDeclsExt.get(location+\",\"+declName);\n+        return(XSAttributeDecl)fGlobalAttrDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**\n@@ -969,10 +987,7 @@ public final XSAttributeGroupDecl getGlobalAttributeGroupDecl(String declName) {\n     }\n \n     public final XSAttributeGroupDecl getGlobalAttributeGroupDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalAttributeGroupDecl(declName);\n-        }\n-        return(XSAttributeGroupDecl)fGlobalAttrGrpDeclsExt.get(location+\",\"+declName);\n+        return(XSAttributeGroupDecl)fGlobalAttrGrpDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**\n@@ -983,12 +998,9 @@ public final XSElementDecl getGlobalElementDecl(String declName) {\n     }\n \n     public final XSElementDecl getGlobalElementDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalElementDecl(declName);\n-        }\n-        return(XSElementDecl)fGlobalElemDeclsExt.get(location+\",\"+declName);\n+        return(XSElementDecl)fGlobalElemDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n-\n+    \n     /**\n      * get one global group\n      */\n@@ -997,10 +1009,7 @@ public final XSGroupDecl getGlobalGroupDecl(String declName) {\n     }\n \n     public final XSGroupDecl getGlobalGroupDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalGroupDecl(declName);\n-        }\n-        return(XSGroupDecl)fGlobalGroupDeclsExt.get(location+\",\"+declName);\n+        return(XSGroupDecl)fGlobalGroupDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**\n@@ -1011,10 +1020,7 @@ public final XSNotationDecl getGlobalNotationDecl(String declName) {\n     }\n \n     public final XSNotationDecl getGlobalNotationDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalNotationDecl(declName);\n-        }\n-        return(XSNotationDecl)fGlobalNotationDeclsExt.get(location+\",\"+declName);\n+        return(XSNotationDecl)fGlobalNotationDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**\n@@ -1025,10 +1031,7 @@ public final XSTypeDefinition getGlobalTypeDecl(String declName) {\n     }\n \n     public final XSTypeDefinition getGlobalTypeDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getGlobalTypeDecl(declName);\n-        }\n-        return(XSTypeDefinition)fGlobalTypeDeclsExt.get(location+\",\"+declName);\n+        return(XSTypeDefinition)fGlobalTypeDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**\n@@ -1039,10 +1042,7 @@ public final IdentityConstraint getIDConstraintDecl(String declName) {\n     }\n \n     public final IdentityConstraint getIDConstraintDecl(String declName, String location) {\n-        if (location == null) {\n-            return null;//getIDConstraintDecl(declName);\n-        }\n-        return(IdentityConstraint)fGlobalIDConstraintDeclsExt.get(location+\",\"+declName);\n+        return(IdentityConstraint)fGlobalIDConstraintDeclsExt.get(((location != null) ? location : \"\") + \",\" + declName);\n     }\n \n     /**",
                "additions": 84,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/SchemaGrammar.java",
                "status": "modified",
                "changes": 168,
                "deletions": 84,
                "sha": "446c8db5ea0f3eadd38a2a5c14ee06a8d6de63a2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/SchemaGrammar.java",
                "filename": "src/org/apache/xerces/impl/xs/SchemaGrammar.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/SchemaGrammar.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -42,6 +42,7 @@\n import org.apache.xerces.xs.XSNamespaceItem;\n import org.apache.xerces.xs.XSNamespaceItemList;\n import org.apache.xerces.xs.XSNotationDeclaration;\n+import org.apache.xerces.xs.XSObject;\n import org.apache.xerces.xs.XSObjectList;\n import org.apache.xerces.xs.XSTypeDefinition;\n \n@@ -193,7 +194,7 @@ public XSModelImpl(SchemaGrammar[] grammars, short s4sVersion) {\n         fSubGroupMap = buildSubGroups();\n     }\n     \n-    private SymbolHash buildSubGroups() {\n+    private SymbolHash buildSubGroups_Org() {\n         SubstitutionGroupHandler sgHandler = new SubstitutionGroupHandler(null);\n         for (int i = 0 ; i < fGrammarCount; i++) {\n             sgHandler.addSubstitutionGroup(fGrammarList[i].getSubstitutionGroups());\n@@ -213,6 +214,50 @@ private SymbolHash buildSubGroups() {\n         return subGroupMap;\n     }\n     \n+    private SymbolHash buildSubGroups() {\n+        SubstitutionGroupHandler sgHandler = new SubstitutionGroupHandler(null);\n+        for (int i = 0 ; i < fGrammarCount; i++) {\n+            sgHandler.addSubstitutionGroup(fGrammarList[i].getSubstitutionGroups());\n+        }\n+\n+        final XSObjectListImpl elements = getGlobalElements();\n+        final int len = elements.getLength();\n+        final SymbolHash subGroupMap = new SymbolHash(len*2);\n+        XSElementDecl head;\n+        XSElementDeclaration[] subGroup;\n+        for (int i = 0; i < len; i++) {\n+            head = (XSElementDecl)elements.item(i);\n+            subGroup = sgHandler.getSubstitutionGroup(head);\n+            subGroupMap.put(head, subGroup.length > 0 ? \n+                    new XSObjectListImpl(subGroup, subGroup.length) : XSObjectListImpl.EMPTY_LIST);\n+        }\n+        return subGroupMap;\n+    }\n+    \n+    private XSObjectListImpl getGlobalElements() {\n+        final SymbolHash[] tables = new SymbolHash[fGrammarCount];\n+        int length = 0;\n+\n+        for (int i = 0; i < fGrammarCount; i++) {\n+            tables[i] = fGrammarList[i].fAllGlobalElemDecls;\n+            length += tables[i].getLength();\n+        }\n+        \n+        if (length == 0) {\n+            return XSObjectListImpl.EMPTY_LIST;\n+        }\n+\n+        final XSObject[] components = new XSObject[length];\n+        \n+        int start = 0;\n+        for (int i = 0; i < fGrammarCount; i++) {\n+            tables[i].getValues(components, start);\n+            start += tables[i].getLength();\n+        }\n+\n+        return new XSObjectListImpl(components, length);\n+    }\n+    \n     /**\n      * Convenience method. Returns a list of all namespaces that belong to\n      * this schema.",
                "additions": 46,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "status": "modified",
                "changes": 47,
                "deletions": 1,
                "sha": "63e03c036abc329b0924312b1d2d834c359f3057",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSModelImpl.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -182,13 +182,17 @@ XSAttributeGroupDecl traverseGlobal(Element elmNode,\n         if (grammar.getGlobalAttributeGroupDecl(attrGrp.fName) == null) {\n             grammar.addGlobalAttributeGroupDecl(attrGrp);\n         }\n+\n+        // also add it to extended map\n+        final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+        final XSAttributeGroupDecl attrGrp2 = grammar.getGlobalAttributeGroupDecl(attrGrp.fName, loc);\n+        if (attrGrp2 == null) {\n+            grammar.addGlobalAttributeGroupDecl(attrGrp, loc);\n+        }\n+\n+        // handle duplicates\n         if (fSchemaHandler.fTolerateDuplicates) {\n-            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-            final XSAttributeGroupDecl attrGrp2 = grammar.getGlobalAttributeGroupDecl(attrGrp.fName, loc);\n-            if (attrGrp2 == null) {\n-                grammar.addGlobalAttributeGroupDecl(attrGrp, loc);\n-            }\n-            else {\n+            if (attrGrp2 != null) {\n                 attrGrp = attrGrp2;\n             }\n             fSchemaHandler.addGlobalAttributeGroupDecl(attrGrp);",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDAttributeGroupTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "65744b8cc7d81b060a4ad3e53d68ff91a0650f35",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDAttributeGroupTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDAttributeGroupTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDAttributeGroupTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -442,13 +442,16 @@ XSAttributeDecl traverseNamedAttr(Element attrDecl,\n             if (grammar.getGlobalAttributeDecl(nameAtt) == null) {\n                 grammar.addGlobalAttributeDecl(attribute);\n             }\n+\n+            // also add it to extended map\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final XSAttributeDecl attribute2 = grammar.getGlobalAttributeDecl(nameAtt, loc);\n+            if (attribute2  == null) {\n+                grammar.addGlobalAttributeDecl(attribute, loc);\n+            }\n+\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                final XSAttributeDecl attribute2 = grammar.getGlobalAttributeDecl(nameAtt, loc);\n-                if (attribute2  == null) {\n-                    grammar.addGlobalAttributeDecl(attribute, loc);\n-                }\n-                else {\n+                if (attribute2  != null) {\n                     attribute = attribute2;\n                 }\n                 fSchemaHandler.addGlobalAttributeDecl(attribute);",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "status": "modified",
                "changes": 15,
                "deletions": 6,
                "sha": "9966c348e77ac9ca19fa9919a0aba492d848844d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -198,13 +198,17 @@ XSComplexTypeDecl traverseGlobal (Element complexTypeNode,\n             if (grammar.getGlobalTypeDecl(type.getName()) == null) {\n                 grammar.addGlobalComplexTypeDecl(type);\n             }\n+            \n+            // also add it to extended map\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final XSTypeDefinition type2 = grammar.getGlobalTypeDecl(type.getName(), loc); \n+            if (type2 == null) {\n+                grammar.addGlobalComplexTypeDecl(type, loc);\n+            }\n+\n+            // handle duplicates\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                final XSTypeDefinition type2 = grammar.getGlobalTypeDecl(type.getName(), loc); \n-                if (type2  == null) {\n-                    grammar.addGlobalComplexTypeDecl(type, loc);\n-                }\n-                else {\n+                if (type2 != null) {\n                     if (type2 instanceof XSComplexTypeDecl) {\n                         type = (XSComplexTypeDecl) type2;\n                     }",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "b31dc601ece1b6a57db11b00d39f72270b93e5e7",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -504,16 +504,23 @@ else if (childName.equals(SchemaSymbols.ELT_SIMPLETYPE)) {\n         \n         // Step 5: register the element decl to the grammar\n         if (isGlobal) {\n+            grammar.addGlobalElementDeclAll(element);\n+            \n             if (grammar.getGlobalElementDecl(element.fName) == null) {\n                 grammar.addGlobalElementDecl(element);\n             }\n+            \n+            // we also add the element to the tolerate duplicates list as well\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final XSElementDecl element2 = grammar.getGlobalElementDecl(element.fName, loc);\n+            if (element2 == null) {\n+                grammar.addGlobalElementDecl(element, loc);\n+            }\n+\n+            // if we are tolerating duplicates, and we found a duplicate declaration\n+            // use the duplicate one instead\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                final XSElementDecl element2 = grammar.getGlobalElementDecl(element.fName, loc);\n-                if (element2 == null) {\n-                    grammar.addGlobalElementDecl(element, loc);\n-                }\n-                else {\n+                if (element2 != null) {\n                     element = element2;\n                 }\n                 fSchemaHandler.addGlobalElementDecl(element);",
                "additions": 13,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "status": "modified",
                "changes": 19,
                "deletions": 6,
                "sha": "34cc484d1a36380072d7de28115cd4d230a9fa74",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -225,13 +225,17 @@ XSGroupDecl traverseGlobal(Element elmNode,\n             if (grammar.getGlobalGroupDecl(group.fName) == null) {\n                 grammar.addGlobalGroupDecl(group);\n             }\n+\n+            // also add it to extended map\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final XSGroupDecl group2 = grammar.getGlobalGroupDecl(group.fName, loc);\n+            if (group2 == null) {\n+                grammar.addGlobalGroupDecl(group, loc);\n+            }\n+\n+            // handle duplicates\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                final XSGroupDecl group2 = grammar.getGlobalGroupDecl(group.fName, loc);\n-                if (group2 == null) {\n-                    grammar.addGlobalGroupDecl(group, loc);\n-                }\n-                else {\n+                if (group2 != null) {\n                     group = group2;\n                 }\n                 fSchemaHandler.addGlobalGroupDecl(group); ",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "af2a48d7ef17ee9efa154c122b2ce0cdf7e51612",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -3138,42 +3138,74 @@ private void addGlobalComponent(XSObject component, XSDDescription desc) {\n \n         switch (componentType) {\n         case XSConstants.TYPE_DEFINITION :\n-            if (sg.getGlobalTypeDecl(name) == null) {\n-                sg.addGlobalTypeDecl((XSTypeDefinition) component);\n+            if (!((XSTypeDefinition) component).getAnonymous()) {\n+                if (sg.getGlobalTypeDecl(name) == null) {\n+                    sg.addGlobalTypeDecl((XSTypeDefinition) component);\n+                }\n+                // store the declaration in the extended map, using an empty location\n+                if (sg.getGlobalTypeDecl(name, \"\") == null) {\n+                    sg.addGlobalTypeDecl((XSTypeDefinition) component, \"\");\n+                }\n             }\n             break;\n         case XSConstants.ATTRIBUTE_DECLARATION :\n-            if (sg.getGlobalAttributeDecl(name) == null) {\n-                sg.addGlobalAttributeDecl((XSAttributeDecl) component);\n+            if (((XSAttributeDecl) component).getScope() == XSAttributeDecl.SCOPE_GLOBAL) {\n+                if (sg.getGlobalAttributeDecl(name) == null) {\n+                    sg.addGlobalAttributeDecl((XSAttributeDecl) component);\n+                }\n+                // store the declaration in the extended map, using an empty location\n+                if (sg.getGlobalAttributeDecl(name, \"\") == null) {\n+                    sg.addGlobalAttributeDecl((XSAttributeDecl) component, \"\");\n+                }\n             }\n             break;\n         case XSConstants.ATTRIBUTE_GROUP :\n             if (sg.getGlobalAttributeDecl(name) == null) {\n                 sg.addGlobalAttributeGroupDecl((XSAttributeGroupDecl) component);\n             }\n+            // store the declaration in the extended map, using an empty location\n+            if (sg.getGlobalAttributeDecl(name, \"\") == null) {\n+                sg.addGlobalAttributeGroupDecl((XSAttributeGroupDecl) component, \"\");\n+            }\n             break;\n         case XSConstants.ELEMENT_DECLARATION :\n-            if (sg.getGlobalElementDecl(name) == null) {\n-                sg.addGlobalElementDecl((XSElementDecl) component);\n+            if (((XSElementDecl) component).getScope() == XSElementDecl.SCOPE_GLOBAL) {\n+                sg.addGlobalElementDeclAll((XSElementDecl) component);\n+\n+                if (sg.getGlobalElementDecl(name) == null) {\n+                    sg.addGlobalElementDecl((XSElementDecl) component);\n+                }\n+                // store the declaration in the extended map, using an empty location\n+                if (sg.getGlobalElementDecl(name, \"\") == null) {\n+                    sg.addGlobalElementDecl((XSElementDecl) component, \"\");\n+                }\n             }\n             break;\n         case XSConstants.MODEL_GROUP_DEFINITION :\n             if (sg.getGlobalGroupDecl(name) == null) {\n                 sg.addGlobalGroupDecl((XSGroupDecl) component);\n             }\n+            // store the declaration in the extended map, using an empty location\n+            if (sg.getGlobalGroupDecl(name, \"\") == null) {\n+                sg.addGlobalGroupDecl((XSGroupDecl) component, \"\");\n+            }\n             break;\n         case XSConstants.NOTATION_DECLARATION :\n             if (sg.getGlobalNotationDecl(name) == null) {\n                 sg.addGlobalNotationDecl((XSNotationDecl) component);\n             }\n+            // store the declaration in the extended map, using an empty location\n+            if (sg.getGlobalNotationDecl(name, \"\") == null) {\n+                sg.addGlobalNotationDecl((XSNotationDecl) component, \"\");\n+            }\n             break;\n         case XSConstants.IDENTITY_CONSTRAINT :\n         case XSConstants.ATTRIBUTE_USE :\n         default :\n             break;\n         }\n     }\n-    \n+\n     private void updateImportDependencies(Hashtable table) {\n         Enumeration keys = table.keys();\n         String namespace;",
                "additions": 39,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 46,
                "deletions": 7,
                "sha": "313355bd657aaf844b04c81e3d3ea1aec46e69ab",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -96,13 +96,17 @@ void traverse(Element krElem, XSElementDecl element,\n                 if (grammar.getIDConstraintDecl(keyRef.getIdentityConstraintName()) == null) {\n                     grammar.addIDConstraintDecl(element, keyRef);\n                 }\n+\n+                // also add it to extended map\n+                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+                final IdentityConstraint idc = grammar.getIDConstraintDecl(keyRef.getIdentityConstraintName(), loc); \n+                if (idc  == null) {\n+                    grammar.addIDConstraintDecl(element, keyRef, loc);\n+                }\n+\n+                // handle duplicates\n                 if (fSchemaHandler.fTolerateDuplicates) {\n-                    final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                    final IdentityConstraint idc = grammar.getIDConstraintDecl(keyRef.getIdentityConstraintName(), loc); \n-                    if (idc  == null) {\n-                        grammar.addIDConstraintDecl(element, keyRef, loc);\n-                    }\n-                    else {\n+                    if (idc  != null) {\n                         if (idc instanceof KeyRef) {\n                             keyRef = (KeyRef) idc;\n                         }",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDKeyrefTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "21dccfff72b5e29e896be339fe4b5ae0497d1caf",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDKeyrefTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDKeyrefTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDKeyrefTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -109,13 +109,17 @@ XSNotationDecl traverse(Element elmNode,\n         if (grammar.getGlobalNotationDecl(notation.fName) == null) {\n             grammar.addGlobalNotationDecl(notation);\n         }\n+\n+        // also add it to extended map\n+        final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+        final XSNotationDecl notation2 = grammar.getGlobalNotationDecl(notation.fName, loc);  \n+        if (notation2 == null) {\n+            grammar.addGlobalNotationDecl(notation, loc);\n+        }\n+\n+        // handle duplicates\n         if (fSchemaHandler.fTolerateDuplicates) {\n-            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-            final XSNotationDecl notation2 = grammar.getGlobalNotationDecl(notation.fName, loc);  \n-            if (notation2 == null) {\n-                grammar.addGlobalNotationDecl(notation, loc);\n-            }\n-            else {\n+            if (notation2 != null) {\n                 notation = notation2;\n             }\n             fSchemaHandler.addGlobalNotationDecl(notation);",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDNotationTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "0cd692123f9b2fc9093a8e296adac4e16c94dbbd",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDNotationTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDNotationTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDNotationTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -112,13 +112,17 @@ XSSimpleType traverseGlobal(Element elmNode,\n             if (grammar.getGlobalTypeDecl(type.getName()) == null) {\n                 grammar.addGlobalSimpleTypeDecl(type);\n             }\n+\n+            // also add it to extended map\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final XSTypeDefinition type2 = grammar.getGlobalTypeDecl(type.getName(), loc);  \n+            if (type2 == null) {\n+                grammar.addGlobalSimpleTypeDecl(type, loc);\n+            }\n+\n+            // handle duplicates\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                XSTypeDefinition type2 = grammar.getGlobalTypeDecl(type.getName(), loc);  \n-                if (type2 == null) {\n-                    grammar.addGlobalSimpleTypeDecl(type, loc);\n-                }\n-                else {\n+                if (type2 != null) {\n                     if (type2 instanceof XSSimpleType) {\n                         type = (XSSimpleType) type2;\n                     }",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDSimpleTypeTraverser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 6,
                "sha": "26f490deedff1811bf59da106a0f066e2f179221",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDSimpleTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDSimpleTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDSimpleTypeTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -75,13 +75,16 @@ void traverse(Element uElem, XSElementDecl element,\n             if (grammar.getIDConstraintDecl(uniqueOrKey.getIdentityConstraintName()) == null) {\n                 grammar.addIDConstraintDecl(element, uniqueOrKey);\n             }\n+\n+            final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n+            final IdentityConstraint idc = grammar.getIDConstraintDecl(uniqueOrKey.getIdentityConstraintName(), loc);  \n+            if (idc == null) {\n+                grammar.addIDConstraintDecl(element, uniqueOrKey, loc);\n+            }\n+\n+            // handle duplicates\n             if (fSchemaHandler.fTolerateDuplicates) {\n-                final String loc = fSchemaHandler.schemaDocument2SystemId(schemaDoc);\n-                final IdentityConstraint idc = grammar.getIDConstraintDecl(uniqueOrKey.getIdentityConstraintName(), loc);  \n-                if (idc == null) {\n-                    grammar.addIDConstraintDecl(element, uniqueOrKey, loc);\n-                }\n-                else {\n+                if (idc != null) {\n                     if (idc instanceof UniqueOrKey) {\n                         uniqueOrKey = (UniqueOrKey) uniqueOrKey;\n                     }",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDUniqueOrKeyTraverser.java",
                "status": "modified",
                "changes": 15,
                "deletions": 6,
                "sha": "78f321642ecb28c33562791c7c215b84147fc3ad",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/impl/xs/traversers/XSDUniqueOrKeyTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDUniqueOrKeyTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDUniqueOrKeyTraverser.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            },
            {
                "patch": "@@ -138,7 +138,7 @@ public int getValues(Object[] elements, int from) {\n      * Return key/value pairs of all entries in the map\n      */\n     public Object[] getEntries() {\n-        Object[] entries = new String[fNum << 1];\n+        Object[] entries = new Object[fNum << 1];\n         for (int i=0, j=0; i<fTableSize && j<fNum << 1; i++) {\n             for (Entry entry = fBuckets[i]; entry != null; entry = entry.next) {\n                 entries[j] = entry.key;",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/util/SymbolHash.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "63974da682117fbdd9e9636a2a625e9c0ac36486",
                "blob_url": "https://github.com/apache/xerces2-j/blob/504207ba22aacf621728e5767aa6c11559555f90/src/org/apache/xerces/util/SymbolHash.java",
                "filename": "src/org/apache/xerces/util/SymbolHash.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/util/SymbolHash.java?ref=504207ba22aacf621728e5767aa6c11559555f90"
            }
        ],
        "bug_id": "xerces2-j_16",
        "parent": "https://github.com/apache/xerces2-j/commit/15384f9a46a060f2e3987c81d50cf5d102abf111",
        "message": "Fix for potential NPEs when processing substitution groups\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@819653 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/27739cd12513156a1f118d4ee9c23ff98f731b81",
        "file": [
            {
                "patch": "@@ -360,7 +360,8 @@ private void addNamespaceDeclarations() {\n                 rawname = XMLSymbols.PREFIX_XMLNS;\n             }\n             fAttributeQName.setValues(prefix, localpart, rawname, NamespaceContext.XMLNS_URI);\n-            fAttributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, nsURI);\n+            fAttributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, \n+                    (nsURI != null) ? nsURI : XMLSymbols.EMPTY_STRING);\n         }\n     }\n     ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/27739cd12513156a1f118d4ee9c23ff98f731b81/src/org/apache/xerces/impl/xs/traversers/StAXSchemaParser.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "d714faac6be34ee12ccd38f3a9c2d524c362d5b2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/27739cd12513156a1f118d4ee9c23ff98f731b81/src/org/apache/xerces/impl/xs/traversers/StAXSchemaParser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/StAXSchemaParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/StAXSchemaParser.java?ref=27739cd12513156a1f118d4ee9c23ff98f731b81"
            }
        ],
        "bug_id": "xerces2-j_17",
        "parent": "https://github.com/apache/xerces2-j/commit/d03a1c0fd438caa15b3ca82cca07aac39cebc998",
        "message": "Fixing a potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@694593 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/35cebc1dc9b32fe1d2fd116404dceb564287488d",
        "file": [
            {
                "patch": "@@ -604,13 +604,17 @@ public void removeAll (){\n     private void readObject(ObjectInputStream in)\n         throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n-        nodes = new ArrayList(nodes);\n+        if (nodes != null) {\n+            nodes = new ArrayList(nodes);\n+        }\n     }\n \n     private void writeObject(ObjectOutputStream out) throws IOException {\n         List oldNodes = this.nodes;\n         try {\n-            this.nodes = new Vector(oldNodes);\n+            if (oldNodes != null) {\n+                this.nodes = new Vector(oldNodes);\n+            }\n             out.defaultWriteObject();\n         }\n         // If the write fails for some reason ensure ",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/35cebc1dc9b32fe1d2fd116404dceb564287488d/src/org/apache/xerces/dom/NamedNodeMapImpl.java",
                "status": "modified",
                "changes": 8,
                "deletions": 2,
                "sha": "325b5fc4336e8b91ba43c44537681449b001be45",
                "blob_url": "https://github.com/apache/xerces2-j/blob/35cebc1dc9b32fe1d2fd116404dceb564287488d/src/org/apache/xerces/dom/NamedNodeMapImpl.java",
                "filename": "src/org/apache/xerces/dom/NamedNodeMapImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/NamedNodeMapImpl.java?ref=35cebc1dc9b32fe1d2fd116404dceb564287488d"
            }
        ],
        "bug_id": "xerces2-j_18",
        "parent": "https://github.com/apache/xerces2-j/commit/264f54e5b5fe8885e3cdbff05f175579e67daef8",
        "message": "Fixing a potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@652698 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/8e7daca15e44c6b175147eab8346689ee732e661",
        "file": [
            {
                "patch": "@@ -238,7 +238,7 @@ protected void normalizeDocument(CoreDocumentImpl document, DOMConfigurationImpl\n         }\n         try {\n             if (schemaType == XMLGrammarDescription.XML_DTD) {\n-                processDTD(xmlVersion, schemaLocations[0]);\n+                processDTD(xmlVersion, schemaLocations != null ? schemaLocations[0] : null);\n             }            \n             \n             Node kid, next;",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/8e7daca15e44c6b175147eab8346689ee732e661/src/org/apache/xerces/dom/DOMNormalizer.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "b4da948e4a40f30960ec4770c66444fb1cbee885",
                "blob_url": "https://github.com/apache/xerces2-j/blob/8e7daca15e44c6b175147eab8346689ee732e661/src/org/apache/xerces/dom/DOMNormalizer.java",
                "filename": "src/org/apache/xerces/dom/DOMNormalizer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DOMNormalizer.java?ref=8e7daca15e44c6b175147eab8346689ee732e661"
            }
        ],
        "bug_id": "xerces2-j_19",
        "parent": "https://github.com/apache/xerces2-j/commit/ef1ee3e86af7f66413ac9c7bb1849e39cd2980a0",
        "message": "Fixing an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@541770 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/c079f68d2bf1b0d5bbcee234ddc2760cb7404f05",
        "file": [
            {
                "patch": "@@ -223,7 +223,9 @@ else if (source == null) {\n         catch (IOException e) {\n             // this hasn't been reported, so do so now.\n             SAXParseException se = new SAXParseException(e.getMessage(),null,e);\n-            fErrorHandler.error(se);\n+            if (fErrorHandler != null) {\n+                fErrorHandler.error(se);\n+            }\n             throw se; // and we must throw it.\n         }\n         ",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/c079f68d2bf1b0d5bbcee234ddc2760cb7404f05/src/org/apache/xerces/jaxp/validation/XMLSchemaFactory.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "2c941d498d896b2778a31a8780c98ce853698885",
                "blob_url": "https://github.com/apache/xerces2-j/blob/c079f68d2bf1b0d5bbcee234ddc2760cb7404f05/src/org/apache/xerces/jaxp/validation/XMLSchemaFactory.java",
                "filename": "src/org/apache/xerces/jaxp/validation/XMLSchemaFactory.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/jaxp/validation/XMLSchemaFactory.java?ref=c079f68d2bf1b0d5bbcee234ddc2760cb7404f05"
            }
        ],
        "bug_id": "xerces2-j_20",
        "parent": "https://github.com/apache/xerces2-j/commit/cec8c8526beca58324d5d7475dde709a4d33ed47",
        "message": "Fixing a potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@450930 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/de716fd2a4c59e0afab867634f6aa7c4ada7932f",
        "file": [
            {
                "patch": "@@ -357,6 +357,7 @@ protected XSSimpleTypeDecl(XSSimpleTypeDecl base, String name, String uri, short\n \t\tfPatternStr = fBase.fPatternStr;\n \t\tfEnumeration = fBase.fEnumeration;\n \t\tfEnumerationType = fBase.fEnumerationType;\n+        fEnumerationItemType = fBase.fEnumerationItemType;\n \t\tfWhiteSpace = fBase.fWhiteSpace;\n \t\tfMaxExclusive = fBase.fMaxExclusive;\n \t\tfMaxInclusive = fBase.fMaxInclusive;\n@@ -462,6 +463,7 @@ protected XSSimpleTypeDecl setRestrictionValues(XSSimpleTypeDecl base, String na\n \t\tfPatternStr = fBase.fPatternStr;\n \t\tfEnumeration = fBase.fEnumeration;\n \t\tfEnumerationType = fBase.fEnumerationType;\n+        fEnumerationItemType = fBase.fEnumerationItemType;\n \t\tfWhiteSpace = fBase.fWhiteSpace;\n \t\tfMaxExclusive = fBase.fMaxExclusive;\n \t\tfMaxInclusive = fBase.fMaxInclusive;\n@@ -2794,6 +2796,7 @@ public void reset(){\n \t\tfPatternStr = null;\n \t\tfEnumeration = null;\n \t\tfEnumerationType = null;\n+        fEnumerationItemType = null;\n \t\tfLexicalPattern = null;\n \t\tfLexicalEnumeration = null;\n \t\tfMaxInclusive = null;",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/de716fd2a4c59e0afab867634f6aa7c4ada7932f/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "0b3b0905c3d8ac1a9a9bb990bcec1b5ac4f943a4",
                "blob_url": "https://github.com/apache/xerces2-j/blob/de716fd2a4c59e0afab867634f6aa7c4ada7932f/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java?ref=de716fd2a4c59e0afab867634f6aa7c4ada7932f"
            }
        ],
        "bug_id": "xerces2-j_21",
        "parent": "https://github.com/apache/xerces2-j/commit/a9cc7455a5fd2415036e8b60ecf1f613065963b2",
        "message": "Fixing potential NPE with enumeration types.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320165 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/8da006f0ca5ba96c43c99b5d873607c3de9f3f2c",
        "file": [
            {
                "patch": "@@ -2113,7 +2113,9 @@ public Object item(int index) {\n \t\n \tpublic ShortList getEnumerationTypeList() {\n \t\tif (fEnumerationTypeList == null) {\n-\t\t\tfEnumerationTypeList = new ShortListImpl (fEnumerationType, fEnumerationType.length);\n+            if (fEnumerationType == null)\n+                return null;\n+            fEnumerationTypeList = new ShortListImpl (fEnumerationType, fEnumerationType.length);\n \t\t}\n \t\treturn fEnumerationTypeList;\n \t}",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/8da006f0ca5ba96c43c99b5d873607c3de9f3f2c/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "9833010a7ecfc211785d53e5f7be3bc7798b887e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/8da006f0ca5ba96c43c99b5d873607c3de9f3f2c/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java?ref=8da006f0ca5ba96c43c99b5d873607c3de9f3f2c"
            }
        ],
        "bug_id": "xerces2-j_22",
        "parent": "https://github.com/apache/xerces2-j/commit/c8c8e2c7234e2696193e3a7a9d585c7fe4faad61",
        "message": "Fixing a potential NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320159 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/218f5846430598bb7062d853caa23b3bcb17d43d",
        "file": [
            {
                "patch": "@@ -51,7 +51,6 @@\n import org.apache.xerces.util.SymbolTable;\n import org.apache.xerces.util.XMLAttributesImpl;\n import org.apache.xerces.util.XMLChar;\n-import org.apache.xerces.util.XMLResourceIdentifierImpl;\n import org.apache.xerces.util.XMLSymbols;\n import org.apache.xerces.xni.Augmentations;\n import org.apache.xerces.xni.NamespaceContext;\n@@ -3442,7 +3441,7 @@ public int contains(Vector values) {\n                         for (int k = 0; k < fFieldCount; ++k) {\n                             final Object value1 = values.elementAt(i+k);\n                             final Object value2 = fValues.elementAt(j+k);\n-                            if (value1 != value2 && !value1.equals(value2)) {\n+                            if (value1 != value2 && (value1 == null || !value1.equals(value2))) {\n                                 continue INNER;\n                             }\n                         }\n@@ -3492,6 +3491,11 @@ protected String toString(Vector values, int start, int length) {\n             if (length == 0) {\n                 return \"\";\n             }\n+            \n+            // one value\n+            if (length == 1) {\n+                return String.valueOf(values.elementAt(start));\n+            }\n \n             // construct value string\n             StringBuffer str = new StringBuffer();",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/218f5846430598bb7062d853caa23b3bcb17d43d/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "status": "modified",
                "changes": 8,
                "deletions": 2,
                "sha": "04befe300713f429aaf3b48f0399eaa11515bc5f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/218f5846430598bb7062d853caa23b3bcb17d43d/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java?ref=218f5846430598bb7062d853caa23b3bcb17d43d"
            }
        ],
        "bug_id": "xerces2-j_23",
        "parent": "https://github.com/apache/xerces2-j/commit/e7b8ee718be399454bd444231224e65afb563999",
        "message": "Fixing a potential NPE and some cleanup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320016 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/c6eeeb7820e18bc0dfa333711e707569fc74d4d4",
        "file": [
            {
                "patch": "@@ -411,7 +411,10 @@ public Object getProperty(String propertyId)\n     public void setProperty(String propertyId,\n                 Object state) throws XMLConfigurationException {                   \n         fSettingsChanged = true;            \n-        fLoaderConfig.setProperty(propertyId, state);    \n+        // REVISIT: We cannot set null values on this configuration\n+        // because it is backed by a java.util.Hashtable which doesn't\n+        // permit null values. -- mrglavas\n+        if (state != null) fLoaderConfig.setProperty(propertyId, state);    \n         if(propertyId.equals( JAXP_SCHEMA_SOURCE)) {\n             fJAXPSource = state;\n             fJAXPProcessed = false;",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/c6eeeb7820e18bc0dfa333711e707569fc74d4d4/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "98d295da9161b984f39282091c96195ada982c01",
                "blob_url": "https://github.com/apache/xerces2-j/blob/c6eeeb7820e18bc0dfa333711e707569fc74d4d4/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java?ref=c6eeeb7820e18bc0dfa333711e707569fc74d4d4"
            }
        ],
        "bug_id": "xerces2-j_24",
        "parent": "https://github.com/apache/xerces2-j/commit/693912e4e252ca683150eb66fc8187a7109b6636",
        "message": "Fixing an NPE. See REVISIT comment.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319702 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/64302db91765fb8f53d6df18a0c14dbd4970e942",
        "file": [
            {
                "patch": "@@ -973,9 +973,9 @@ public void startElement(QName element, XMLAttributes attributes, Augmentations\n                         // in the DTD.\n                         if (isDeclared) {\n                             type = attributes.getType(i);\n+                            id = \"ID\".equals(type);\n                         }\n                         attrImpl.setType(type);\n-                        id = (type.equals(\"ID\")) ? true : false;\n \t\t\t\t\t}\n                 \n \t\t\t\t\tif (id) {\n@@ -1073,8 +1073,8 @@ public void startElement(QName element, XMLAttributes attributes, Augmentations\n                     // in the DTD.\n                     if (isDeclared) {\n                         type = attributes.getType(i);\n-                    }\t\t\t\t\t\n-\t\t\t\t\tid = (type.equals(\"ID\")) ? true : false;\n+                        id = \"ID\".equals(type);\n+                    }\n \t\t\t\t}\n                 \n                 // create attribute\n@@ -2359,7 +2359,7 @@ public void attributeDecl(String elementName, String attributeName,\n                 // add default attribute\n                 int attrIndex = fDeferredDocumentImpl.createDeferredAttribute(\n                                     attributeName, defaultValue.toString(), false);\n-                if (type.equals(\"ID\")) {               \n+                if (\"ID\".equals(type)) {               \n                     fDeferredDocumentImpl.setIdAttribute(attrIndex);\n                 }\n                 // REVISIT: set ID type correctly\n@@ -2405,7 +2405,7 @@ else if (fDocumentImpl != null) {\n                 }\n                 attr.setValue(defaultValue.toString());\n                 attr.setSpecified(false);\n-                attr.setIdAttribute(type.equals(\"ID\"));\n+                attr.setIdAttribute(\"ID\".equals(type));\n \n                 // add default attribute to element definition\n                 if (nsEnabled){",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/64302db91765fb8f53d6df18a0c14dbd4970e942/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "332de694fca96b2a310dc087d81af0092d53fd67",
                "blob_url": "https://github.com/apache/xerces2-j/blob/64302db91765fb8f53d6df18a0c14dbd4970e942/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=64302db91765fb8f53d6df18a0c14dbd4970e942"
            }
        ],
        "bug_id": "xerces2-j_25",
        "parent": "https://github.com/apache/xerces2-j/commit/060d846ff49287186d86711ec83dd1e136cd66fa",
        "message": "Fixing some NPEs from the previous commit.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319492 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/0742de94d4f5316435fee000076f7d076522912d",
        "file": [
            {
                "patch": "@@ -585,7 +585,8 @@ public void textDecl(String version, String encoding, Augmentations augs) throws\n         if (!fDeferNodeExpansion) {\n             if (fCurrentEntityDecl != null && !fFilterReject) {\n                 fCurrentEntityDecl.setXmlEncoding(encoding);\n-                fCurrentEntityDecl.setXmlVersion(version);\n+                if (version != null)\n+                \tfCurrentEntityDecl.setXmlVersion(version);\n             }\n         }\n         else {\n@@ -854,13 +855,15 @@ public void xmlDecl(String version, String encoding, String standalone,\n             // REVISIT: when DOM Level 3 is REC rely on Document.support\n             //          instead of specific class\n             if (fDocumentImpl != null) {\n-                fDocumentImpl.setXmlVersion(version);\n+                if (version != null)\n+                \tfDocumentImpl.setXmlVersion(version);\n                 fDocumentImpl.setXmlEncoding(encoding);\n                 fDocumentImpl.setXmlStandalone(\"yes\".equals(standalone));\n             }\n         }\n         else {\n-            fDeferredDocumentImpl.setXmlVersion(version);\n+        \tif (version != null)\n+            \tfDeferredDocumentImpl.setXmlVersion(version);\n             fDeferredDocumentImpl.setXmlEncoding(encoding);\n             fDeferredDocumentImpl.setXmlStandalone(\"yes\".equals(standalone));\n         }",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0742de94d4f5316435fee000076f7d076522912d/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 9,
                "deletions": 3,
                "sha": "ff8a334fad8ffc43619ad0264d634e8862d90471",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0742de94d4f5316435fee000076f7d076522912d/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=0742de94d4f5316435fee000076f7d076522912d"
            }
        ],
        "bug_id": "xerces2-j_26",
        "parent": "https://github.com/apache/xerces2-j/commit/b1763a7c62756fefc9d5360f8fc0d8513f22585c",
        "message": "Fixing NPE: setXMLVersion can't accept null values\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319462 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/0702a3bf283cca2d5f97e7f06c9755a43bf34f27",
        "file": [
            {
                "patch": "@@ -50,7 +50,7 @@ Copyright:\n     <echo message= \"---------------- ${parser.Name} ${parser.Version} [${year}] ---------------\"/>\n     <!-- changed made to synchronize with a patch from Sam Ruby (<rubys@apache.org>) to Xerces1\n     <property name=\"build.compiler\" value=\"classic\"/> -->\n-    <property name=\"debug\" value=\"off\"/>\n+    <property name=\"debug\" value=\"on\"/>\n     <property name=\"optimize\" value=\"on\"/>\n     <property name=\"deprecation\" value=\"off\"/>\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/build.xml",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "9544c4e72746342b2bffaad8bbe639ab1e7f9538",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/build.xml",
                "filename": "build.xml",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/build.xml?ref=0702a3bf283cca2d5f97e7f06c9755a43bf34f27"
            },
            {
                "patch": "@@ -228,7 +228,8 @@ public String getBaseURI() {\n \n         //2.the base URI of the element's parent element within the document or external entity,\n         //if one exists\n-        String parentElementBaseURI = this.parentNode().getBaseURI() ;\n+\n+        String parentElementBaseURI = (this.parentNode() != null) ? this.parentNode().getBaseURI() : null ;\n         //base URI of parent element is not null\n         if(parentElementBaseURI != null){\n             try {\n@@ -242,7 +243,8 @@ public String getBaseURI() {\n         }\n         //3. the base URI of the document entity or external entity containing the element\n \n-        String baseURI = this.ownerNode.getBaseURI();\n+        //REVISIT: we are using ownerNode -- we need to return the base URI of the document entity\n+        String baseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null ;\n \n         if(baseURI != null){\n             try {",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/src/org/apache/xerces/dom/ElementImpl.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "924c367d30eacd8d433b192fb0e5f77e0e88a366",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/src/org/apache/xerces/dom/ElementImpl.java",
                "filename": "src/org/apache/xerces/dom/ElementImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/ElementImpl.java?ref=0702a3bf283cca2d5f97e7f06c9755a43bf34f27"
            },
            {
                "patch": "@@ -399,7 +399,7 @@ public String getBaseURI() {\n \n         //2.the base URI of the element's parent element within the document or external entity,\n         //if one exists\n-        String parentElementBaseURI = this.parentNode().getBaseURI() ;\n+        String parentElementBaseURI = (this.parentNode() != null) ? this.parentNode().getBaseURI() : null ;\n         //base URI of parent element is not null\n         if(parentElementBaseURI != null){\n             try {\n@@ -413,7 +413,7 @@ public String getBaseURI() {\n         }\n         //3. the base URI of the document entity or external entity containing the element\n \n-        String baseURI = this.ownerNode.getBaseURI();\n+        String baseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null ;\n \n         if(baseURI != null){\n             try {",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/src/org/apache/xerces/dom/ElementNSImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "7835ac7bfd04fc8331120e10a54bed058ac358df",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0702a3bf283cca2d5f97e7f06c9755a43bf34f27/src/org/apache/xerces/dom/ElementNSImpl.java",
                "filename": "src/org/apache/xerces/dom/ElementNSImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/ElementNSImpl.java?ref=0702a3bf283cca2d5f97e7f06c9755a43bf34f27"
            }
        ],
        "bug_id": "xerces2-j_27",
        "parent": "https://github.com/apache/xerces2-j/commit/71f188a87af02b1443da35630abaf703fd737e8b",
        "message": "PR:\nObtained from:\nSubmitted by:\nReviewed by:\nFixing NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319464 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/5c2a81050d9a8de84ccde0f9e2d5ffe079841245",
        "file": [
            {
                "patch": "@@ -361,7 +361,10 @@ public static void main(String argv[]) {\n             catch (Exception e) {\n                 System.err.println(\"error: Parse error occurred - \"+e.getMessage());\n                 if (e instanceof SAXException) {\n-                    e = ((SAXException)e).getException();\n+                    Exception nested = ((SAXException)e).getException();\n+                    if (nested != null) {\n+                        e = nested;\n+                    }\n                 }\n                 e.printStackTrace(System.err);\n             }",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5c2a81050d9a8de84ccde0f9e2d5ffe079841245/samples/dom/GetElementsByTagName.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "8d25a00503af805829f112912736d04cb5f02277",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5c2a81050d9a8de84ccde0f9e2d5ffe079841245/samples/dom/GetElementsByTagName.java",
                "filename": "samples/dom/GetElementsByTagName.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/samples/dom/GetElementsByTagName.java?ref=5c2a81050d9a8de84ccde0f9e2d5ffe079841245"
            },
            {
                "patch": "@@ -594,7 +594,10 @@ public static void main(String argv[]) {\n             catch (Exception e) {\n                 System.err.println(\"error: Parse error occurred - \"+e.getMessage());\n                 if (e instanceof SAXException) {\n-                    e = ((SAXException)e).getException();\n+                    Exception nested = ((SAXException)e).getException();\n+                    if (nested != null) {\n+                        e = nested;\n+                    }\n                 }\n                 e.printStackTrace(System.err);\n             }",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5c2a81050d9a8de84ccde0f9e2d5ffe079841245/samples/dom/Writer.java",
                "status": "modified",
                "changes": 5,
                "deletions": 1,
                "sha": "486cc8878531797f1b7855171399052d59ab8314",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5c2a81050d9a8de84ccde0f9e2d5ffe079841245/samples/dom/Writer.java",
                "filename": "samples/dom/Writer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/samples/dom/Writer.java?ref=5c2a81050d9a8de84ccde0f9e2d5ffe079841245"
            }
        ],
        "bug_id": "xerces2-j_28",
        "parent": "https://github.com/apache/xerces2-j/commit/a0dd01c178cee1a3ce3c1af2e8ee5252f5c3453c",
        "message": "Fixing potential NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319413 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/c74ec19b676f15a58a798b0799b65d1c73282dc8",
        "file": [
            {
                "patch": "@@ -243,6 +243,9 @@ public void setOutputFormat( OutputFormat format ) {\n      */\n     public void setNamespaces (boolean namespaces){\n         fNamespaces = namespaces;\n+        fNSBinder = new NamespaceSupport();\n+        fLocalNSBinder = new NamespaceSupport();\n+        fSymbolTable = new SymbolTable();\n     }\n \n     //-----------------------------------------//\n@@ -682,7 +685,6 @@ protected void serializeElement( Element elem )\n         String prefix, localUri;\n         String uri;\n         if (fNamespaces) {\n-\n             // reset local binder\n             fLocalNSBinder.reset();\n             // note: the values that added to namespace binder\n@@ -784,6 +786,7 @@ protected void serializeElement( Element elem )\n             // record all valid namespace declarations\n             // before attempting to fix element's namespace\n             // ---------------------------------------\n+\n             for (i = 0;i < length;i++) {\n \n                 attr = (Attr) attrMap.item( i );\n@@ -838,7 +841,6 @@ protected void serializeElement( Element elem )\n             uri = elem.getNamespaceURI();            \n             prefix = elem.getPrefix();\n \n-\n             //----------------------\n             // output element name\n             //----------------------",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/c74ec19b676f15a58a798b0799b65d1c73282dc8/src/org/apache/xml/serialize/XMLSerializer.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "7b61ad1a879f9b62ef17f96cdd5c832c25476a43",
                "blob_url": "https://github.com/apache/xerces2-j/blob/c74ec19b676f15a58a798b0799b65d1c73282dc8/src/org/apache/xml/serialize/XMLSerializer.java",
                "filename": "src/org/apache/xml/serialize/XMLSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xml/serialize/XMLSerializer.java?ref=c74ec19b676f15a58a798b0799b65d1c73282dc8"
            }
        ],
        "bug_id": "xerces2-j_29",
        "parent": "https://github.com/apache/xerces2-j/commit/675e02d477158ebf42440183fa485afabacf0739",
        "message": "Avoid NPE if namespace were set to true.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318741 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/f632eced61e98093fab8e9197ab1df70a7c54c84",
        "file": [
            {
                "patch": "@@ -2020,7 +2020,7 @@ public boolean equals(Object obj) {\n             // condition 2: same namespace and same locatoin\n             if (referNS != key.referNS ||\n                 (systemId == null && key.systemId != null) ||\n-                !systemId.equals(key.systemId)) {\n+                systemId != null && !systemId.equals(key.systemId)) {\n                 return false;\n             }\n             ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/f632eced61e98093fab8e9197ab1df70a7c54c84/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "c3e1d0ca1ec0c63bb809b7bb9af6505f3fb8c499",
                "blob_url": "https://github.com/apache/xerces2-j/blob/f632eced61e98093fab8e9197ab1df70a7c54c84/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=f632eced61e98093fab8e9197ab1df70a7c54c84"
            }
        ],
        "bug_id": "xerces2-j_30",
        "parent": "https://github.com/apache/xerces2-j/commit/9c7ed582a8968480eef94693649f51e5022b05f6",
        "message": "Fixing bug [11455]. Added a null-checking to avoid NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318589 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b6178b8a210c1c7100c50cf4380cde4876bd026c",
        "file": [
            {
                "patch": "@@ -1686,7 +1686,9 @@ public void startDTD(XMLLocator locator, Augmentations augs) throws XNIException\n         }\n \n         fInDTD = true;\n-        fBaseURIStack.push(locator.getBaseSystemId());\n+        if (locator != null) {\n+            fBaseURIStack.push(locator.getBaseSystemId());\n+        }\n         if (fDeferNodeExpansion || fDocumentImpl != null) {\n             fInternalSubset = new StringBuffer(1024);\n         }\n@@ -1706,7 +1708,9 @@ public void endDTD(Augmentations augs) throws XNIException {\n             System.out.println(\"==>endDTD()\");\n         }\n         fInDTD = false;\n-        fBaseURIStack.pop();\n+        if (!fBaseURIStack.isEmpty()) {\n+            fBaseURIStack.pop();\n+        }\n         String internalSubset = fInternalSubset != null && fInternalSubset.length() > 0\n                               ? fInternalSubset.toString() : null;\n         if (fDeferNodeExpansion) {",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b6178b8a210c1c7100c50cf4380cde4876bd026c/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 8,
                "deletions": 2,
                "sha": "8b8df01af6e3b85cec40872a5faaf6e33e8a2338",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b6178b8a210c1c7100c50cf4380cde4876bd026c/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=b6178b8a210c1c7100c50cf4380cde4876bd026c"
            }
        ],
        "bug_id": "xerces2-j_31",
        "parent": "https://github.com/apache/xerces2-j/commit/db80fe019fecfe0ea1fccf6d482388842fc82758",
        "message": "Add check to avoid NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318567 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/16650ac5c74e58959529526d3b5cc32d6e59fb89",
        "file": [
            {
                "patch": "@@ -127,12 +127,11 @@ public void test(Document doc) {\n         System.out.println(\"DOM IDs Test...\");\n         Element el = doc.getElementById(\"one.worker\");\n         Assertion.assert(el != null);\n-        Assertion.equals(el.getAttribute(\"id\"), \"one.worker\");\n-\n         Element el2 = doc.getElementById(\"one.worker there\");\n         Assertion.assert(el2 == null);\n \n         if (el != null) {\n+            Assertion.equals(el.getAttribute(\"id\"), \"one.worker\");\n             el.setAttribute(\"id\", \"my.worker\");\n             el2 = doc.getElementById(\"my.worker\");\n             Assertion.assert(el2 == el);",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/16650ac5c74e58959529526d3b5cc32d6e59fb89/tests/dom/ids/Test.java",
                "status": "modified",
                "changes": 3,
                "deletions": 2,
                "sha": "744bdf3308edb4e608ad676bd1cbc6366751e3ae",
                "blob_url": "https://github.com/apache/xerces2-j/blob/16650ac5c74e58959529526d3b5cc32d6e59fb89/tests/dom/ids/Test.java",
                "filename": "tests/dom/ids/Test.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/tests/dom/ids/Test.java?ref=16650ac5c74e58959529526d3b5cc32d6e59fb89"
            }
        ],
        "bug_id": "xerces2-j_32",
        "parent": "https://github.com/apache/xerces2-j/commit/7d950b2219bb3dff1746cdcfebf5e3cbbdeedadb",
        "message": "Avoid possible NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318371 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4784ec490ab1f20ff2909e4086a4774a9b649b05",
        "file": [
            {
                "patch": "@@ -1008,15 +1008,10 @@ private void readObject(ObjectInputStream ois)\n         // perform default deseralization\n         ois.defaultReadObject();\n \n-        // hardset synchildren - so we don't try to sync- it does not make any sense\n-        // to try to synchildren when we just desealize object.\n-\n+        // hardset synchildren - so we don't try to sync - it does not make any\n+        // sense to try to synchildren when we just deserialize object.\n         needsSyncChildren(false);\n \n-        // initialize transients\n-        fNodeListCache.fLength = -1;\n-        fNodeListCache.fChildIndex = -1;\n-\n     } // readObject(ObjectInputStream)\n \n } // class ParentNode",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4784ec490ab1f20ff2909e4086a4774a9b649b05/src/org/apache/xerces/dom/ParentNode.java",
                "status": "modified",
                "changes": 9,
                "deletions": 7,
                "sha": "86021b801de5fa9dd81086b0d165b127687c0e71",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4784ec490ab1f20ff2909e4086a4774a9b649b05/src/org/apache/xerces/dom/ParentNode.java",
                "filename": "src/org/apache/xerces/dom/ParentNode.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/ParentNode.java?ref=4784ec490ab1f20ff2909e4086a4774a9b649b05"
            }
        ],
        "bug_id": "xerces2-j_33",
        "parent": "https://github.com/apache/xerces2-j/commit/1b71abafc9ef513df561b4e64451c82a949fb259",
        "message": "fixed NPE in readObject\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318040 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/a8128d478bd4fe732cecc6d052044e702c4fda44",
        "file": [
            {
                "patch": "@@ -296,12 +296,14 @@ else if ((type == XSParticleDecl.PARTICLE_CHOICE)\n             }\n \n         }\n-\t\t else if (type == XSParticleDecl.PARTICLE_ALL) {\n+\telse if (type == XSParticleDecl.PARTICLE_ALL) {\n         \n             XSParticleDecl left = (XSParticleDecl)particle.fValue;\n             XSParticleDecl right = (XSParticleDecl)particle.fOtherValue;\n             \n             XSAllCM allContent = new XSAllCM(false);\n+\n+            System.out.println(\"***********\"+particle.toString());\n             gatherAllLeaves (left, allContent);\n             gatherAllLeaves (right, allContent);\n             return allContent;\n@@ -431,41 +433,38 @@ else if (maxOccurs == SchemaSymbols.OCCURRENCE_UNBOUNDED) {\n      */\n      private void gatherAllLeaves(XSParticleDecl particle,\n                                         XSAllCM allContent) {\n-\n-        XSParticleDecl left = (XSParticleDecl) particle.fValue;\n-        XSParticleDecl right = (XSParticleDecl) particle.fOtherValue;\n+        Object left = particle.fValue;\n+        Object right = particle.fOtherValue;        \n         int type = particle.fType;\n \n         if (type == XSParticleDecl.PARTICLE_ALL) {\n           \n             // At an all node, visit left and right subtrees\n-          \n-            gatherAllLeaves (left, allContent);\n-            gatherAllLeaves (right, allContent);\n+            gatherAllLeaves ((XSParticleDecl)left, allContent);\n+            gatherAllLeaves ((XSParticleDecl) particle.fOtherValue, allContent);\n         }\n         else if (type == XSParticleDecl.PARTICLE_ELEMENT) {\n           \n             // At leaf, add the element to list of elements permitted in the all\n-          \n-            allContent.addElement ((XSElementDecl)(particle.fValue), false);\n+            allContent.addElement ((XSElementDecl)left, false);\n         }\n         else if (type == XSParticleDecl.PARTICLE_ZERO_OR_ONE) {\n           \n             // At ZERO_OR_ONE node, subtree must be an element\n             // that was specified with minOccurs=0, maxOccurs=1\n             // Add the optional element to list of elements permitted in the all\n           \n-            if (left.fType == XSParticleDecl.PARTICLE_ELEMENT) {\n-          \t\t   allContent.addElement ((XSElementDecl)left.fValue, true);\n+            if (((XSParticleDecl)left).fType == XSParticleDecl.PARTICLE_ELEMENT) {\n+                allContent.addElement ((XSElementDecl)(((XSParticleDecl)left).fValue), true);\n             }\n             else {\n-          \t\t   // report error\n-\t\t \t\t   throw new RuntimeException(\"ImplementationMessages.VAL_CST\");\n+            // report error\n+\t\tthrow new RuntimeException(\"ImplementationMessages.VAL_CST\");\n             }\t\t  \t\t \n         }\n         else { \n             // report error\n-            throw new RuntimeException(\"ImplementationMessages.VAL_CST\");\n+            throw new RuntimeException(\"ImplementationMessages.VAL_CSTA\");\n         }\n     }\n ",
                "additions": 13,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/CMBuilder.java",
                "status": "modified",
                "changes": 27,
                "deletions": 14,
                "sha": "b3e1bba0669dab25bc5fed115fdec79342ecdbf3",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/CMBuilder.java",
                "filename": "src/org/apache/xerces/impl/v2/CMBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/CMBuilder.java?ref=a8128d478bd4fe732cecc6d052044e702c4fda44"
            },
            {
                "patch": "@@ -582,6 +582,20 @@\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapG.put(SchemaSymbols.ELT_COMPLEXTYPE, oneEle);\n \n+        // for element \"notation\" - local name\n+        attrList = new Hashtable();\n+        // id = ID\n+        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n+        // name = NCName\n+        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);\n+        // public = A public identifier, per ISO 8879\n+        attrList.put(SchemaSymbols.ATT_PUBLIC, allAttrs[ATT_PUBLIC_R]);\n+        // system = anyURI\n+        attrList.put(SchemaSymbols.ATT_SYSTEM, allAttrs[ATT_SYSTEM_N]);\n+        oneEle = new OneElement (attrList);        \n+        fEleAttrsMapG.put(SchemaSymbols.ELT_NOTATION, oneEle);\n+\n+\n         // for element \"complexType\" - local name\n         attrList = new Hashtable();\n         // id = ID\n@@ -755,19 +769,6 @@\n         oneEle = new OneElement (attrList);\n         fEleAttrsMapN.put(SchemaSymbols.ELT_FIELD, oneEle);\n \n-        // for element \"notation\" - local name\n-        attrList = new Hashtable();\n-        // id = ID\n-        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);\n-        // name = NCName\n-        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);\n-        // public = A public identifier, per ISO 8879\n-        attrList.put(SchemaSymbols.ATT_PUBLIC, allAttrs[ATT_PUBLIC_R]);\n-        // system = anyURI\n-        attrList.put(SchemaSymbols.ATT_SYSTEM, allAttrs[ATT_SYSTEM_N]);\n-        oneEle = new OneElement (attrList);\n-        fEleAttrsMapN.put(SchemaSymbols.ELT_NOTATION, oneEle);\n-\n         // for element \"annotation\" - global\n         attrList = new Hashtable();\n         // id = ID\n@@ -979,7 +980,6 @@ public void reset(XMLErrorReporter er, SymbolTable symbolTable) {\n                                     XSDocumentInfo schemaDoc) {\n         if (element == null)\n             return null;\n-\n         // update NamespaceSupport\n         resolveNamespace(element, schemaDoc.fNamespaceSupport);\n \n@@ -1005,6 +1005,7 @@ public void reset(XMLErrorReporter er, SymbolTable symbolTable) {\n         // get desired attribute list of this element\n         OneElement oneEle = (OneElement)eleAttrsMap.get(elName);\n         if (oneEle == null) {\n+            \n             reportSchemaError (\"s4s-elt-invalid\", new Object[] {elName});\n             return null;\n         }\n@@ -1118,7 +1119,6 @@ public void reset(XMLErrorReporter er, SymbolTable symbolTable) {\n                     attrValues[oneAttr.valueIndex] = oneAttr.dfltValue;\n             }\n         }\n-\n         // traverse all required attributes\n         OneAttr[] reqAttrs = oneEle.attrArray;\n         for (int i = 0; i < reqAttrs.length; i++) {",
                "additions": 15,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "status": "modified",
                "changes": 30,
                "deletions": 15,
                "sha": "699889e8112994195df8adbb6cd3533af6a6f7eb",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "filename": "src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSAttributeChecker.java?ref=a8128d478bd4fe732cecc6d052044e702c4fda44"
            },
            {
                "patch": "@@ -90,12 +90,11 @@ XSNotationDecl traverse(Element elmNode,\n \n         // General Attribute Checking for elmNode\n         Object[] attrValues = fAttrChecker.checkAttributes(elmNode, true, schemaDoc);\n-\n         //get attributes\n         String  nameAttr   = (String) attrValues[XSAttributeChecker.ATTIDX_NAME];\n+\n         String  publicAttr = (String) attrValues[XSAttributeChecker.ATTIDX_PUBLIC];\n         String  systemAttr = (String) attrValues[XSAttributeChecker.ATTIDX_SYSTEM];\n-\n         if (nameAttr.length() == 0) {\n             //REVISIT: update error message\n             reportGenericSchemaError(\"<notation> must have a name\");\n@@ -129,7 +128,7 @@ XSNotationDecl traverse(Element elmNode,\n                                            XMLErrorReporter.SEVERITY_ERROR);\n             }\n         }\n-\n+        grammar.addGlobalNotationDecl(notation);\n         fAttrChecker.returnAttrArray(attrValues, schemaDoc);\n \n         return notation;",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "status": "modified",
                "changes": 5,
                "deletions": 3,
                "sha": "58a641a9df41ff4b0a47e09200c9c10c037a919f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java?ref=a8128d478bd4fe732cecc6d052044e702c4fda44"
            },
            {
                "patch": "@@ -411,7 +411,7 @@ else if (restriction) {\n             newDV = new UnionDatatypeValidator(dTValidators);\n         }\n \n-        if (newDV != null) {\n+        if (newDV != null && isGlobal) {\n             newDV.setFinalSet(finalProperty);\n             ((AbstractDatatypeValidator)newDV).fLocalName = nameProperty;\n             fGrammar.addGlobalTypeDecl(newDV);",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSDSimpleTypeTraverser.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "210d6df60e39a0b84e936333ce8333ab7c8bb826",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a8128d478bd4fe732cecc6d052044e702c4fda44/src/org/apache/xerces/impl/v2/XSDSimpleTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDSimpleTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDSimpleTypeTraverser.java?ref=a8128d478bd4fe732cecc6d052044e702c4fda44"
            }
        ],
        "bug_id": "xerces2-j_34",
        "parent": "https://github.com/apache/xerces2-j/commit/46755ed90f0f9958e0d4c5271c71fb378433bdad",
        "message": "Bug fixes (NPE and class cast exceptions).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317680 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/15406c720d59c90541440253e1fb032da4e93fd4",
        "file": [
            {
                "patch": "@@ -942,7 +942,7 @@ else if ((is.getSystemId() != null && is.getSystemId().length() > 0) ||\n                 error.fType = \"no-input-specified\";\n                 error.fMessage = \"no-input-specified\";\n                 error.fSeverity = DOMError.SEVERITY_FATAL_ERROR;\n-                fErrorHandler.handleError(error);\n+                fErrorHandler.getErrorHandler().handleError(error);\n             }\n             throw new LSException(LSException.PARSE_ERR, \"no-input-specified\");\n         }",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/15406c720d59c90541440253e1fb032da4e93fd4/src/org/apache/xerces/parsers/DOMParserImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "d771f784d9750d9d25528041f19a450c398f282e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/15406c720d59c90541440253e1fb032da4e93fd4/src/org/apache/xerces/parsers/DOMParserImpl.java",
                "filename": "src/org/apache/xerces/parsers/DOMParserImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DOMParserImpl.java?ref=15406c720d59c90541440253e1fb032da4e93fd4"
            }
        ],
        "bug_id": "xerces2-j_35",
        "parent": "https://github.com/apache/xerces2-j/commit/586edf74fe51d7771ea829e592f25a614f82f607",
        "message": "Fixing Bug #28288:\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=28288\n\nFixing W3C LS test case failure: noinputspecified01. DOMParserImpl\nwas throwing a NullPointerException. Should be calling handleError\non the DOMErrorHandler enclosed by the wrapper. This is fixed\nthanks to the patch by Naela Nissar.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319882 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/bf4beb5600baa842da2892395d48352b76c486e9",
        "file": [
            {
                "patch": "@@ -479,9 +479,14 @@ public void setTextContent(String textContent)\n      * @since DOM Level 3\n      */\n     public Object getFeature(String feature, String version) {\n+        \n+        boolean anyVersion = version == null || version.length() == 0;\n+        \n         if ((feature.equalsIgnoreCase(\"XPath\")\n-        || feature.equalsIgnoreCase(\"+XPath\"))&& version.equals(\"3.0\")){\n-            try{\n+            || feature.equalsIgnoreCase(\"+XPath\")) && \n+            (anyVersion || version.equals(\"3.0\"))) {\n+\n+            try {\n                 Class xpathClass = ObjectFactory.findProviderClass(\n                 \"org.apache.xpath.domapi.XPathEvaluatorImpl\",\n                 ObjectFactory.findClassLoader(), true);\n@@ -491,7 +496,6 @@ public Object getFeature(String feature, String version) {\n                 return fXPathEvaluator;\n             }\n             catch (Exception e){\n-                //e.printStackTrace();\n                 return null;\n             }\n         }",
                "additions": 7,
                "raw_url": "https://github.com/apache/xerces2-j/raw/bf4beb5600baa842da2892395d48352b76c486e9/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 3,
                "sha": "00b70d18dd52a28cacacbe6c839e9e374892bcdb",
                "blob_url": "https://github.com/apache/xerces2-j/blob/bf4beb5600baa842da2892395d48352b76c486e9/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/CoreDocumentImpl.java?ref=bf4beb5600baa842da2892395d48352b76c486e9"
            }
        ],
        "bug_id": "xerces2-j_36",
        "parent": "https://github.com/apache/xerces2-j/commit/86d577ff476fb65073fe6fc2d9dd35a4e62a8d93",
        "message": "Fixing Bug #27421:\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=27421\n\ngetFeature was throwing a NullPointerException when the\nversion passed into the method was null. This is fixed\nthanks to the patch from Naela Nissar.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319829 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/59350101fb15b62a077f4138d8b4dbcac4e107fb",
        "file": [
            {
                "patch": "@@ -313,7 +313,7 @@ public void setDatatypeObject( Object data ){\n    private DatatypeValidator fXsiTypeValidator = null;\n \n    private Grammar fGrammar = null;\n-   private int fGrammarNameSpaceIndex = -1;\n+   private int fGrammarNameSpaceIndex = StringPool.EMPTY_STRING;\n    private GrammarResolver fGrammarResolver = null;\n \n    // state and stuff\n@@ -1458,7 +1458,7 @@ public void callEndElement(int readerId) throws Exception {\n \n          fGrammarNameSpaceIndex = fGrammarNameSpaceIndexStack[fElementDepth];\n          if ( fValidating && fGrammarIsSchemaGrammar )\n-             if (fGrammarNameSpaceIndex == -1) {\n+             if (fGrammarNameSpaceIndex == StringPool.EMPTY_STRING) {\n                  fGrammar = null;\n                  fGrammarIsSchemaGrammar = false;\n                  fGrammarIsDTDGrammar = false;\n@@ -1871,12 +1871,12 @@ private void resetCommon(StringPool stringPool) throws Exception {\n \n       fCurrentScope = TOP_LEVEL_SCOPE;\n       fCurrentSchemaURI = -1;\n-      fEmptyURI = - 1; \n+      fEmptyURI = StringPool.EMPTY_STRING; \n       fXsiPrefix = - 1;\n       fXsiTypeValidator = null;\n \n       fGrammar = null;\n-      fGrammarNameSpaceIndex = -1;\n+      fGrammarNameSpaceIndex = StringPool.EMPTY_STRING;\n       //fGrammarResolver = null;\n       if (fGrammarResolver != null) {\n          fGrammarResolver.clearGrammarResolver(); //This also clears the Datatype registry",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/59350101fb15b62a077f4138d8b4dbcac4e107fb/src/org/apache/xerces/validators/common/XMLValidator.java",
                "status": "modified",
                "changes": 8,
                "deletions": 4,
                "sha": "c46a43e314bdaaf0b580e679928315834c3dffd0",
                "blob_url": "https://github.com/apache/xerces2-j/blob/59350101fb15b62a077f4138d8b4dbcac4e107fb/src/org/apache/xerces/validators/common/XMLValidator.java",
                "filename": "src/org/apache/xerces/validators/common/XMLValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/common/XMLValidator.java?ref=59350101fb15b62a077f4138d8b4dbcac4e107fb"
            }
        ],
        "bug_id": "xerces2-j_37",
        "parent": "https://github.com/apache/xerces2-j/commit/0523bae0b4dd3ba2f1a3da6a8f40176f712132a1",
        "message": "NullPointerException thrown when a grammar was queried\nbecause the namespace URI was set to -1 instead of 0\n(StringPool.EMPTY_STRING). This may not be the last\ninconsistency but it should solve this problem at least.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@316927 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/59e44876e7dd73678348797d88fb25f2bb93c0eb",
        "file": [
            {
                "patch": "@@ -1096,10 +1096,8 @@ public void startElement(QName elementQName,\n                 }\n             }\n \n-            // NOTE: This is now the responsibility of the caller\n-            //       because other components need to know the\n-            //       attributes before it gets released. -Ac\n-            //xmlAttrList.releaseAttrList(attrListIndex);\n+            // release attributes\n+            xmlAttrList.releaseAttrList(attrListIndex);\n \n             // copy schema grammar, if needed\n             if (!fSeenRootElement) {",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/59e44876e7dd73678348797d88fb25f2bb93c0eb/src/org/apache/xerces/parsers/DOMParser.java",
                "status": "modified",
                "changes": 6,
                "deletions": 4,
                "sha": "4593dea254f867c3dca60ee27de4302c66f1b3f9",
                "blob_url": "https://github.com/apache/xerces2-j/blob/59e44876e7dd73678348797d88fb25f2bb93c0eb/src/org/apache/xerces/parsers/DOMParser.java",
                "filename": "src/org/apache/xerces/parsers/DOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DOMParser.java?ref=59e44876e7dd73678348797d88fb25f2bb93c0eb"
            },
            {
                "patch": "@@ -1377,10 +1377,7 @@ public void startElement(QName element,\n         }\n \n         // free attribute list\n-        // NOTE: This is now the responsibility of the caller\n-        //       because other components need to know the\n-        //       attributes before it gets released. -Ac\n-        //attrList.releaseAttrList(attrListIndex);\n+        attrList.releaseAttrList(attrListIndex);\n \n     } // startElement(QName,XMLAttrList,int)\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/59e44876e7dd73678348797d88fb25f2bb93c0eb/src/org/apache/xerces/parsers/SAXParser.java",
                "status": "modified",
                "changes": 5,
                "deletions": 4,
                "sha": "ecc82f3ecb69817748d8f5b73e1ac14ce09c6dc5",
                "blob_url": "https://github.com/apache/xerces2-j/blob/59e44876e7dd73678348797d88fb25f2bb93c0eb/src/org/apache/xerces/parsers/SAXParser.java",
                "filename": "src/org/apache/xerces/parsers/SAXParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/SAXParser.java?ref=59e44876e7dd73678348797d88fb25f2bb93c0eb"
            }
        ],
        "bug_id": "xerces2-j_38",
        "parent": "https://github.com/apache/xerces2-j/commit/164bffcf79f3203c54bcb3558d00818ea4431137",
        "message": "Fix for deferred DOM breaking when identity constraints was\nadded. The last patch solved the NullPointerException but\nbroke the identity constraint support. This patch reactivates\nthat support and fixes the deferred DOM problem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@316834 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/164bffcf79f3203c54bcb3558d00818ea4431137",
        "file": [
            {
                "patch": "@@ -922,16 +922,16 @@ public void callStartElement(QName element) throws Exception {\n          bindNamespacesToElementAndAttributes(element, fAttrList);\n       }\n \n-      //before we increment the element depth, add this element's QName to its enclosing element 's children list\n-      fElementDepth++;\n-\n       validateElementAndAttributes(element, fAttrList);\n       if (fAttrListHandle != -1) {\n          fAttrList.endAttrList();\n       }\n \n       fDocumentHandler.startElement(element, fAttrList, fAttrListHandle);\n-      \n+      fAttrListHandle = -1; \n+      //before we increment the element depth, add this element's QName to its enclosing element 's children list\n+      fElementDepth++;\n+\n       //if (fElementDepth >= 0) {\n       // REVISIT: Why are doing anything if the grammar is null? -Ac\n       if (fValidating) {",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/164bffcf79f3203c54bcb3558d00818ea4431137/src/org/apache/xerces/validators/common/XMLValidator.java",
                "status": "modified",
                "changes": 8,
                "deletions": 4,
                "sha": "9e8ff17fdbeab949ce4e0c72d7eebf59bab44795",
                "blob_url": "https://github.com/apache/xerces2-j/blob/164bffcf79f3203c54bcb3558d00818ea4431137/src/org/apache/xerces/validators/common/XMLValidator.java",
                "filename": "src/org/apache/xerces/validators/common/XMLValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/common/XMLValidator.java?ref=164bffcf79f3203c54bcb3558d00818ea4431137"
            }
        ],
        "bug_id": "xerces2-j_39",
        "parent": "https://github.com/apache/xerces2-j/commit/c194aaaf3ce47b48f636433c619059020a19e104",
        "message": "fixed a rather serious and insidious bug that caused the deferred DOM implementation to throw nullPointerExceptions in certain cases when dealing with attributes.  This is a partial pullback of andyc's change of R1.107 so has the potential to affect the schema identity constraint implementation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@316833 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/5c7ef47a12d431fc77c7c5098e56508179e08f6e",
        "file": [
            {
                "patch": "@@ -1346,8 +1346,12 @@ protected void synchronizeData() {\n                 fIdName[i] = -1;\n \n                 // see if there are more IDs on this element\n-                while (fIdElement[i + 1] == elementNodeIndex) {\n-                    name = fStringPool.toString(fIdName[++i]);\n+                while (i + 1 < fIdCount && fIdElement[i + 1] == elementNodeIndex) {\n+                    idNameIndex = fIdName[++i];\n+                    if (idNameIndex == -1) {\n+                        continue;\n+                    }\n+                    name = fStringPool.toString(idNameIndex);\n                     putIdentifier0(name, element);\n                 }\n             }",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5c7ef47a12d431fc77c7c5098e56508179e08f6e/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "status": "modified",
                "changes": 8,
                "deletions": 2,
                "sha": "034bb9a7d33e2feccc037f7ac2dce5ce842cf7bc",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5c7ef47a12d431fc77c7c5098e56508179e08f6e/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DeferredDocumentImpl.java?ref=5c7ef47a12d431fc77c7c5098e56508179e08f6e"
            }
        ],
        "bug_id": "xerces2-j_40",
        "parent": "https://github.com/apache/xerces2-j/commit/846e83dfe2646466875e11ecc4848628473a2d90",
        "message": "Fix for NullPointerException caused by deferred DOM impl\nwhen in non-validating mode AND there are multiple IDs\ndeclared on the same element.\n\nSubmitted by:\tElena Litani (hlitani@ca.ibm.com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@316716 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/cfde037c44ccf44991ddfd458701bce3124b6b1a",
        "file": [
            {
                "patch": "@@ -3141,7 +3141,7 @@ private void expandRelatedModelGroupComponents(XSModelGroup modelGroup, Vector c\n     \n     private void addRelatedType(XSTypeDefinition type, Vector componentList, String namespace, Hashtable dependencies) {\n         if (!type.getAnonymous()) {\n-            if (!type.getNamespace().equals(SchemaSymbols.URI_SCHEMAFORSCHEMA)) { //REVISIT - do we use == instead\n+            if (!SchemaSymbols.URI_SCHEMAFORSCHEMA.equals(type.getNamespace())) { //REVISIT - do we use == instead\n                 if (!componentList.contains(type)) {\n                     final Vector importedNamespaces = findDependentNamespaces(namespace, dependencies);\n                     addNamespaceDependency(namespace, type.getNamespace(), importedNamespaces);",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/cfde037c44ccf44991ddfd458701bce3124b6b1a/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "11e907bacde6faaf685e6a7a8eebdeca6646898d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/cfde037c44ccf44991ddfd458701bce3124b6b1a/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=cfde037c44ccf44991ddfd458701bce3124b6b1a"
            }
        ],
        "bug_id": "xerces2-j_41",
        "parent": "https://github.com/apache/xerces2-j/commit/59e1887b7f61d04eac57a2a4d9bbb5e0c3dbd405",
        "message": "Fixing potential NPE. Target namespace of a schema component could be null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@1371253 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/274db3dde72935a397da5baef7934a24f8b92e92",
        "file": [
            {
                "patch": "@@ -1161,7 +1161,7 @@ private void updateImportListWith(SchemaGrammar newGrammar) {\n                 if (importedGrammars != null) {\n                     for (int j=0; j<importedGrammars.size(); j++) {\n                         SchemaGrammar isg = (SchemaGrammar) importedGrammars.elementAt(j);\n-                        if (isg.getTargetNamespace().equals(newGrammar.getTargetNamespace())) {\n+                        if (null2EmptyString(isg.getTargetNamespace()).equals(null2EmptyString(newGrammar.getTargetNamespace()))) {\n                             if (isg != newGrammar) {\n                                 importedGrammars.set(j, newGrammar);\n                             }",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/274db3dde72935a397da5baef7934a24f8b92e92/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "c76baa48f90152528969ae4ec1d2f667e1121226",
                "blob_url": "https://github.com/apache/xerces2-j/blob/274db3dde72935a397da5baef7934a24f8b92e92/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=274db3dde72935a397da5baef7934a24f8b92e92"
            }
        ],
        "bug_id": "xerces2-j_42",
        "parent": "https://github.com/apache/xerces2-j/commit/c2fa5201d9fac9bca47762308eb4a1ebd0e1efe8",
        "message": "Fix a potential NPE where the target namespace of the grammar could be null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@799167 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/5479432209e6f0b71a605dc5266eea099820a08f",
        "file": [
            {
                "patch": "@@ -89,10 +89,16 @@ public RegexParser(Locale locale) {\n \n     public void setLocale(Locale locale) {\n         try {\n-            this.resources = ResourceBundle.getBundle(\"org.apache.xerces.impl.xpath.regex.message\", locale);\n-        } catch (MissingResourceException mre) {\n+            if (locale != null) {\n+                this.resources = ResourceBundle.getBundle(\"org.apache.xerces.impl.xpath.regex.message\", locale);\n+            }\n+            else {\n+                this.resources = ResourceBundle.getBundle(\"org.apache.xerces.impl.xpath.regex.message\");\n+            }\n+        } \n+        catch (MissingResourceException mre) {\n             throw new RuntimeException(\"Installation Problem???  Couldn't load messages: \"\n-                                       +mre.getMessage());\n+                                       + mre.getMessage());\n         }\n     }\n ",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5479432209e6f0b71a605dc5266eea099820a08f/src/org/apache/xerces/impl/xpath/regex/RegexParser.java",
                "status": "modified",
                "changes": 12,
                "deletions": 3,
                "sha": "503f6a841c8ef381c44dd848d4f6ea327b35507c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5479432209e6f0b71a605dc5266eea099820a08f/src/org/apache/xerces/impl/xpath/regex/RegexParser.java",
                "filename": "src/org/apache/xerces/impl/xpath/regex/RegexParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xpath/regex/RegexParser.java?ref=5479432209e6f0b71a605dc5266eea099820a08f"
            }
        ],
        "bug_id": "xerces2-j_43",
        "parent": "https://github.com/apache/xerces2-j/commit/e5ca6b83313078f412708cf2b96f360a74709fc9",
        "message": "Fixing an NPE that occurs when the Locale is set to null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@734425 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/13e9def7173232c0d9386c3eabfe8e5267322687",
        "file": [
            {
                "patch": "@@ -236,7 +236,8 @@ public TypeInfoProvider getTypeInfoProvider() {\n     public boolean getFeature(String name)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"FeatureNameNull\", null));\n         }\n         try {\n             return fComponentManager.getFeature(name);\n@@ -254,7 +255,8 @@ public boolean getFeature(String name)\n     public void setFeature(String name, boolean value)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"FeatureNameNull\", null));\n         }\n         try {\n             fComponentManager.setFeature(name, value);\n@@ -272,7 +274,8 @@ public void setFeature(String name, boolean value)\n     public Object getProperty(String name)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"ProperyNameNull\", null));\n         }\n         try {\n             return fComponentManager.getProperty(name);\n@@ -290,7 +293,8 @@ public Object getProperty(String name)\n     public void setProperty(String name, Object object)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"ProperyNameNull\", null));\n         }\n         try {\n             fComponentManager.setProperty(name, object);",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/13e9def7173232c0d9386c3eabfe8e5267322687/src/org/apache/xerces/jaxp/validation/ValidatorHandlerImpl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 4,
                "sha": "0f9ff667b35fe2f8ee54dd0ce636c615ce0bca02",
                "blob_url": "https://github.com/apache/xerces2-j/blob/13e9def7173232c0d9386c3eabfe8e5267322687/src/org/apache/xerces/jaxp/validation/ValidatorHandlerImpl.java",
                "filename": "src/org/apache/xerces/jaxp/validation/ValidatorHandlerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/jaxp/validation/ValidatorHandlerImpl.java?ref=13e9def7173232c0d9386c3eabfe8e5267322687"
            },
            {
                "patch": "@@ -162,7 +162,8 @@ public LSResourceResolver getResourceResolver() {\n     public boolean getFeature(String name) \n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"FeatureNameNull\", null));\n         }\n         if (name.startsWith(JAXP_SOURCE_RESULT_FEATURE_PREFIX)) {\n             // Indicates to the caller that this Validator supports a specific JAXP Source or Result.\n@@ -193,7 +194,8 @@ public boolean getFeature(String name)\n     public void setFeature(String name, boolean value)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"FeatureNameNull\", null));\n         }\n         if (name.startsWith(JAXP_SOURCE_RESULT_FEATURE_PREFIX)) {\n             if (name.equals(StreamSource.FEATURE) ||\n@@ -226,7 +228,8 @@ public void setFeature(String name, boolean value)\n     public Object getProperty(String name)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"ProperyNameNull\", null));\n         }\n         if (CURRENT_ELEMENT_NODE.equals(name)) {\n             return (fDOMValidatorHelper != null) ? \n@@ -248,7 +251,8 @@ public Object getProperty(String name)\n     public void setProperty(String name, Object object)\n         throws SAXNotRecognizedException, SAXNotSupportedException {\n         if (name == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(JAXPValidationMessageFormatter.formatMessage(Locale.getDefault(), \n+                    \"ProperyNameNull\", null));\n         }\n         if (CURRENT_ELEMENT_NODE.equals(name)) {\n             throw new SAXNotSupportedException(",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/13e9def7173232c0d9386c3eabfe8e5267322687/src/org/apache/xerces/jaxp/validation/ValidatorImpl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 4,
                "sha": "456071879cd3c7cd9f13ee09e81dd178d5a4f749",
                "blob_url": "https://github.com/apache/xerces2-j/blob/13e9def7173232c0d9386c3eabfe8e5267322687/src/org/apache/xerces/jaxp/validation/ValidatorImpl.java",
                "filename": "src/org/apache/xerces/jaxp/validation/ValidatorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/jaxp/validation/ValidatorImpl.java?ref=13e9def7173232c0d9386c3eabfe8e5267322687"
            }
        ],
        "bug_id": "xerces2-j_44",
        "parent": "https://github.com/apache/xerces2-j/commit/433ea76fad702cdb60396511c500d69d49a23a2c",
        "message": "Include an error message in each of the NPEs thrown for a null feature/property name parameter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@699701 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/8af97c42a081d9a3223f056902ef96115fea5ccb",
        "file": [
            {
                "patch": "@@ -123,7 +123,7 @@ public String getKey () {\n      * \n      * @return the localized message for this exception.\n      */\n-    public String getMessage() {\n+    public synchronized String getMessage() {\n         if (fMessage == null) {\n             fMessage = fFormatter.formatMessage(fLocale, fKey, fArguments);\n             // The references to the message formatter and locale",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/8af97c42a081d9a3223f056902ef96115fea5ccb/src/org/apache/xerces/impl/io/MalformedByteSequenceException.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "070747c711b4c8893c37c84ae292c889d5acf425",
                "blob_url": "https://github.com/apache/xerces2-j/blob/8af97c42a081d9a3223f056902ef96115fea5ccb/src/org/apache/xerces/impl/io/MalformedByteSequenceException.java",
                "filename": "src/org/apache/xerces/impl/io/MalformedByteSequenceException.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/io/MalformedByteSequenceException.java?ref=8af97c42a081d9a3223f056902ef96115fea5ccb"
            }
        ],
        "bug_id": "xerces2-j_45",
        "parent": "https://github.com/apache/xerces2-j/commit/423e13357d33343f2ff625564f4f5202ba285923",
        "message": "Guard against an NPE which could occur if getMessage() is called from different threads.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@539931 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/21558f23705962e381bfca7160ae245919effb4e",
        "file": [
            {
                "patch": "@@ -1808,6 +1808,10 @@ public void startElement(QName element, XMLAttributes attributes, Augmentations\n             Attr attr = null;\n \n             attr = currentElement.getAttributeNodeNS(fAttrQName.uri, fAttrQName.localpart);\n+            if (attr == null) {\n+                // Must be a non-namespace aware DOM Level 1 node.\n+                attr = currentElement.getAttributeNode(fAttrQName.rawname);\n+            }\n             AttributePSVI attrPSVI =\n                 (AttributePSVI) attributes.getAugmentations(i).getItem(Constants.ATTRIBUTE_PSVI);\n ",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/21558f23705962e381bfca7160ae245919effb4e/src/org/apache/xerces/dom/DOMNormalizer.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "681fe81bf55dd7abcec747b56a96c073729b7dac",
                "blob_url": "https://github.com/apache/xerces2-j/blob/21558f23705962e381bfca7160ae245919effb4e/src/org/apache/xerces/dom/DOMNormalizer.java",
                "filename": "src/org/apache/xerces/dom/DOMNormalizer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DOMNormalizer.java?ref=21558f23705962e381bfca7160ae245919effb4e"
            }
        ],
        "bug_id": "xerces2-j_46",
        "parent": "https://github.com/apache/xerces2-j/commit/d757c10b66391b3371a29d9e4c42ae975cd88710",
        "message": "Fixing an NPE. Need to take special care with DOM Level 1 Attr nodes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@516447 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b3e6f86f8c9f35db7d2ac734d3692af5359df50d",
        "file": [
            {
                "patch": "@@ -147,12 +147,20 @@ public void endElement()  {\n     \n     // note that this will only be called within appinfo/documentation\n     void comment(XMLString text) {\n-        fAnnotationBuffer.append(\"<!--\").append(text.ch, text.offset, text.length).append(\"-->\");\n+        fAnnotationBuffer.append(\"<!--\");\n+        if (text.length > 0) {\n+            fAnnotationBuffer.append(text.ch, text.offset, text.length);\n+        }\n+        fAnnotationBuffer.append(\"-->\");\n     }\n     \n     // note that this will only be called within appinfo/documentation\n     void processingInstruction(String target, XMLString data) {\n-        fAnnotationBuffer.append(\"<?\").append(target).append(\" \").append(data.ch, data.offset, data.length).append(\"?>\");\n+        fAnnotationBuffer.append(\"<?\").append(target);\n+        if (data.length > 0) {\n+            fAnnotationBuffer.append(' ').append(data.ch, data.offset, data.length);\n+        }\n+        fAnnotationBuffer.append(\"?>\");\n     }\n     \n     // note that this will only be called within appinfo/documentation",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b3e6f86f8c9f35db7d2ac734d3692af5359df50d/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "status": "modified",
                "changes": 12,
                "deletions": 2,
                "sha": "7d6df5fe7608f01175d79563f24128be2295465d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b3e6f86f8c9f35db7d2ac734d3692af5359df50d/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java?ref=b3e6f86f8c9f35db7d2ac734d3692af5359df50d"
            },
            {
                "patch": "@@ -580,7 +580,9 @@ public void comment (XMLString text, Augmentations augs) throws XNIException {\n         if (fInDTD) {\n             if (fInternalSubset != null && !fInDTDExternalSubset) {\n                 fInternalSubset.append (\"<!-- \");\n-                fInternalSubset.append (text.ch, text.offset, text.length);\n+                if (text.length > 0) {\n+                    fInternalSubset.append (text.ch, text.offset, text.length);\n+                }\n                 fInternalSubset.append (\" -->\");\n             }\n             return;\n@@ -654,10 +656,10 @@ public void processingInstruction (String target, XMLString data, Augmentations\n             if (fInternalSubset != null && !fInDTDExternalSubset) {\n                 fInternalSubset.append (\"<?\");\n                 fInternalSubset.append (target);\n-                fInternalSubset.append (' ');\n-                fInternalSubset.append (data.ch, data.offset, data.length);\n+                if (data.length > 0) {\n+                    fInternalSubset.append (' ').append (data.ch, data.offset, data.length);\n+                }\n                 fInternalSubset.append (\"?>\");\n-\n             }\n             return;\n         }\n@@ -1153,7 +1155,9 @@ else if (!fInDTD) {\n                         }\n                         fFirstChunk = false;\n                     }\n-                    fStringBuffer.append (text.ch, text.offset, text.length);\n+                    if (text.length > 0) {\n+                        fStringBuffer.append (text.ch, text.offset, text.length);\n+                    }\n                 }\n                 else {\n                     fFirstChunk = true;",
                "additions": 9,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b3e6f86f8c9f35db7d2ac734d3692af5359df50d/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 14,
                "deletions": 5,
                "sha": "96e27084775dd975559cac4340243d4af8c7f408",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b3e6f86f8c9f35db7d2ac734d3692af5359df50d/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=b3e6f86f8c9f35db7d2ac734d3692af5359df50d"
            }
        ],
        "bug_id": "xerces2-j_47",
        "parent": "https://github.com/apache/xerces2-j/commit/0ad3af9e4867fd1a2ff1665dfbd4d036df19d190",
        "message": "Fixing NPEs which can occur when the char array in the XMLString is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@381830 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/5607854a23b9005214c759e798e87b7b021d0af6",
        "file": [
            {
                "patch": "@@ -106,7 +106,8 @@ public String getConstraintValue() {\n         // REVISIT: SCAPI: what's the proper representation\n         return getConstraintType() == XSConstants.VC_NONE ?\n                null :\n-               fDefault.actualValue.toString();\n+               ((fDefault != null && fDefault.actualValue != null) ?\n+                       fDefault.actualValue.toString() : null);\n     }\n \n     /**",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5607854a23b9005214c759e798e87b7b021d0af6/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "7d42184fe04a9a490392f05db1df45498795e3ef",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5607854a23b9005214c759e798e87b7b021d0af6/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java?ref=5607854a23b9005214c759e798e87b7b021d0af6"
            }
        ],
        "bug_id": "xerces2-j_48",
        "parent": "https://github.com/apache/xerces2-j/commit/090ea682991fbb4df8f1e997f4a521d39c9cb3f6",
        "message": "Fixing JIRA Issue #1080:\nhttp://issues.apache.org/jira/browse/XERCESJ-1080\n\nFixing a possible NPE discovered by Kurt Riede.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320528 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/090ea682991fbb4df8f1e997f4a521d39c9cb3f6",
        "file": [
            {
                "patch": "@@ -194,7 +194,7 @@ public short getCategory() {\n      * {selector} A restricted XPath ([XPath]) expression\n      */\n     public String getSelectorStr() {\n-        return fSelector.toString();\n+        return (fSelector != null) ? fSelector.toString() : null;\n     }\n \n     /**",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/090ea682991fbb4df8f1e997f4a521d39c9cb3f6/src/org/apache/xerces/impl/xs/identity/IdentityConstraint.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "ce2c15f737297b6656dc1258a01c0c41077ca9f2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/090ea682991fbb4df8f1e997f4a521d39c9cb3f6/src/org/apache/xerces/impl/xs/identity/IdentityConstraint.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/IdentityConstraint.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/IdentityConstraint.java?ref=090ea682991fbb4df8f1e997f4a521d39c9cb3f6"
            }
        ],
        "bug_id": "xerces2-j_49",
        "parent": "https://github.com/apache/xerces2-j/commit/9231cb3a3675ca5bbd7fbbca689bf7b0fa258ee1",
        "message": "Fixing JIRA Issue #1078:\nhttp://issues.apache.org/jira/browse/XERCESJ-1078\n\nFixing a possible NPE discovered by Kurt Riede.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320527 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/9231cb3a3675ca5bbd7fbbca689bf7b0fa258ee1",
        "file": [
            {
                "patch": "@@ -2426,10 +2426,11 @@ SchemaGrammar findSchemaGrammar(\n                             fEntityResolver);\n                     grammar = fSchemaLoader.loadSchema(fXSDDescription, xis, fLocationPairs);\n                 } catch (IOException ex) {\n+                    final String [] locationHints = fXSDDescription.getLocationHints();\n                     fXSIErrorReporter.fErrorReporter.reportError(\n                         XSMessageFormatter.SCHEMA_DOMAIN,\n                         \"schema_reference.4\",\n-                        new Object[] { fXSDDescription.getLocationHints()[0] },\n+                        new Object[] { locationHints != null ? locationHints[0] : XMLSymbols.EMPTY_STRING },\n                         XMLErrorReporter.SEVERITY_WARNING);\n                 }\n             }",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/9231cb3a3675ca5bbd7fbbca689bf7b0fa258ee1/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "f020c53243ea4f598088fb4c665e588121f4ea66",
                "blob_url": "https://github.com/apache/xerces2-j/blob/9231cb3a3675ca5bbd7fbbca689bf7b0fa258ee1/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java?ref=9231cb3a3675ca5bbd7fbbca689bf7b0fa258ee1"
            }
        ],
        "bug_id": "xerces2-j_50",
        "parent": "https://github.com/apache/xerces2-j/commit/53ec8ba9993dc4072e467f98c2dad5094622f745",
        "message": "Fixing JIRA Issue #1083:\nhttp://issues.apache.org/jira/browse/XERCESJ-1083\n\nFixing a possible NPE found by Alex Milowski.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320526 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/74d4504b4a7b7b4e0124a88d876812ecf35c5a24",
        "file": [
            {
                "patch": "@@ -337,7 +337,10 @@ public void ignorableWhitespace(XMLString text, Augmentations augs) throws XNIEx\n      *                   Thrown by handler to signal an error.\n      */\n     public void startCDATA(Augmentations augs) throws XNIException {\n-        schemaDOM.startAnnotationCDATA();\n+        // only deal with CDATA boundaries within an annotation.\n+        if (fAnnotationDepth != -1) {\n+            schemaDOM.startAnnotationCDATA();\n+        }\n     }\n \n     /**\n@@ -349,7 +352,10 @@ public void startCDATA(Augmentations augs) throws XNIException {\n      *                   Thrown by handler to signal an error.\n      */\n     public void endCDATA(Augmentations augs) throws XNIException {\n-        schemaDOM.endAnnotationCDATA();\n+        // only deal with CDATA boundaries within an annotation.\n+        if (fAnnotationDepth != -1) {\n+            schemaDOM.endAnnotationCDATA();\n+        }\n     }\n \n     ",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/74d4504b4a7b7b4e0124a88d876812ecf35c5a24/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "status": "modified",
                "changes": 10,
                "deletions": 2,
                "sha": "5ad9c0966b04511d4ee187350d539e231a5247da",
                "blob_url": "https://github.com/apache/xerces2-j/blob/74d4504b4a7b7b4e0124a88d876812ecf35c5a24/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java?ref=74d4504b4a7b7b4e0124a88d876812ecf35c5a24"
            }
        ],
        "bug_id": "xerces2-j_51",
        "parent": "https://github.com/apache/xerces2-j/commit/2cb7d1ecb92f205137aa4386969857ba014432ce",
        "message": "Fixing a NPE which occured for any schema containing a CDATA\nsection outside of an annotation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319905 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/5ba592aa9007de9e5392ebab7095bfd0cfa63824",
        "file": [
            {
                "patch": "@@ -1365,7 +1365,7 @@ protected boolean sameBaseURIAsIncludeParent() {\n         //       of resolving relative references, or if it should be added if they are different at all.\n         //       Revisit this after a final decision has been made.\n         //       The decision also affects whether we output the file name of the URI, or just the path.\n-        return parentBaseURI.equals(baseURI);\n+        return parentBaseURI != null && parentBaseURI.equals(baseURI);\n     }\n \n     /**",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/5ba592aa9007de9e5392ebab7095bfd0cfa63824/src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "167ff8e3330dfa2be3f61cded10301fa29a1a093",
                "blob_url": "https://github.com/apache/xerces2-j/blob/5ba592aa9007de9e5392ebab7095bfd0cfa63824/src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "filename": "src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xinclude/XIncludeHandler.java?ref=5ba592aa9007de9e5392ebab7095bfd0cfa63824"
            }
        ],
        "bug_id": "xerces2-j_52",
        "parent": "https://github.com/apache/xerces2-j/commit/d9f22e5fe8ef4c70b8149a7b5bac5ed706d6e287",
        "message": "Partial fix for Bug #24992. Fix NPE which would occur if an \ninclude parent has no base URI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319611 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/c43ec4ad88ed6ebc4d8d026789a736fe72926dc9",
        "file": [
            {
                "patch": "@@ -416,13 +416,14 @@ public void startDocument(\n             \"\",\n             \"http://www.w3.org/2001/05/XMLInfoset\");\n \n-        if (fDocumentHandler != null) {\n-            fDocumentHandler.startDocument(\n-                locator,\n-                \"UTF-8\",\n-                fPSVINamespaceContext,\n-                null);\n-        }\n+        if (fDocumentHandler == null)\n+            return;\n+\n+        fDocumentHandler.startDocument(\n+            locator,\n+            \"UTF-8\",\n+            fPSVINamespaceContext,\n+            null);\n \n         Vector attributes = new Vector();\n         attributes.add(\"xmlns:xsi\");\n@@ -456,6 +457,9 @@ public void xmlDecl(\n         String standalone,\n         Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         sendElementEvent(\"characterEncodingScheme\", encoding);\n         sendElementEvent(\"standalone\", standalone);\n         sendElementEvent(\"version\", version);\n@@ -479,6 +483,9 @@ public void doctypeDecl(\n         String systemId,\n         Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         checkForChildren();\n         sendIndentedElement(\"docTypeDeclaration\");\n         if (publicId != null)\n@@ -498,6 +505,9 @@ public void doctypeDecl(\n      */\n     public void comment(XMLString text, Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         checkForChildren();\n         sendIndentedElement(\"comment\");\n         sendElementEvent(\"content\", text);\n@@ -526,6 +536,9 @@ public void processingInstruction(\n         XMLString data,\n         Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         checkForChildren();\n         sendIndentedElement(\"processingInstruction\");\n         sendElementEvent(\"target\", target);\n@@ -553,8 +566,9 @@ public void startElement(\n         XMLAttributes attributes,\n         Augmentations augs)\n         throws XNIException {\n-        if (attributes == null)\n-            System.err.println(\"null attributes!\");\n+        if (fDocumentHandler == null)\n+            return;\n+\n         checkForChildren();\n \n         _elementState.push(new ElementState(true));\n@@ -585,6 +599,9 @@ public void emptyElement(\n         XMLAttributes attributes,\n         Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         sendIndentedElement(\"element\");\n         sendElementEvent(\"namespaceName\", element.uri);\n         sendElementEvent(\"localName\", element.localpart);\n@@ -612,6 +629,9 @@ public void emptyElement(\n      */\n     public void characters(XMLString text, Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         checkForChildren();\n         sendIndentedElement(\"character\");\n         sendElementEvent(\"textContent\", text);\n@@ -635,6 +655,9 @@ public void characters(XMLString text, Augmentations augs)\n      */\n     public void ignorableWhitespace(XMLString text, Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         if (fIncludeIgnorableWhitespace) {\n             this.characters(text, augs);\n         }\n@@ -650,6 +673,9 @@ public void ignorableWhitespace(XMLString text, Augmentations augs)\n      */\n     public void endElement(QName element, Augmentations augs)\n         throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         ElementState fElementState = (ElementState)_elementState.peek();\n         if (fElementState.isEmpty) {\n             sendEmptyElementEvent(\"children\");\n@@ -693,6 +719,9 @@ public void endCDATA(Augmentations augs) throws XNIException {\n      * @throws XNIException Thrown by handler to signal an error.\n      */\n     public void endDocument(Augmentations augs) throws XNIException {\n+        if (fDocumentHandler == null)\n+            return;\n+\n         sendUnIndentedElement(\"children\");\n         sendElementEvent(\"documentElement\");\n         // these aren't relevent for PSVI\n@@ -1752,21 +1781,21 @@ private void processPSVIElementDeclarationRef(XSElementDeclaration elem) {\n             return;\n         processPSVIElementRef(\"psv:elementDeclaration\", elem);\n     }\n-    \n+\n     private void processPSVIElementDeclarationOrRef(XSElementDeclaration elem) {\n         if (elem == null)\n             return;\n         // for global attributes, and attributes that have already been printed,\n         // we always want to print references\n         if (elem.getScope() == XSConstants.SCOPE_GLOBAL\n             || fDefined.contains(this.getID(elem))) {\n-                processPSVIElementDeclarationRef(elem);\n+            processPSVIElementDeclarationRef(elem);\n         }\n         else {\n             processPSVIElementDeclaration(elem);\n         }\n     }\n-    \n+\n     /**\n      * This method writes an empty element at the current indent level.\n      *",
                "additions": 41,
                "raw_url": "https://github.com/apache/xerces2-j/raw/c43ec4ad88ed6ebc4d8d026789a736fe72926dc9/samples/xni/PSVIWriter.java",
                "status": "modified",
                "changes": 53,
                "deletions": 12,
                "sha": "8ac300c938edbdf94c2290d2c9a1b4de8e291fdf",
                "blob_url": "https://github.com/apache/xerces2-j/blob/c43ec4ad88ed6ebc4d8d026789a736fe72926dc9/samples/xni/PSVIWriter.java",
                "filename": "samples/xni/PSVIWriter.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/samples/xni/PSVIWriter.java?ref=c43ec4ad88ed6ebc4d8d026789a736fe72926dc9"
            }
        ],
        "bug_id": "xerces2-j_53",
        "parent": "https://github.com/apache/xerces2-j/commit/5792c242a756dede91dc2fa84d5c5cf4490ebaaf",
        "message": "Committing the patch from Peter McCracken to avoid potential NPE's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319371 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/6d6af344fe97d8782c32d2641c57d716c40fda7e",
        "file": [
            {
                "patch": "@@ -1488,7 +1488,9 @@ else if (fEntityScanner.skipSpaces()) {\n                 fEntityScanner.scanChar();\n                 XMLStringBuffer colonName = new XMLStringBuffer(name);\n                 colonName.append(\":\");\n-                colonName.append(fEntityScanner.scanName());\n+                String str = fEntityScanner.scanName();\n+                if (str != null)\n+                    colonName.append(str);\n                 reportFatalError(\"ColonNotLegalWithNS\", new Object[] {colonName.toString()});\n                 if (!skipSeparator(true, !scanningInternalSubset())) {\n                     reportFatalError(\"MSG_SPACE_REQUIRED_AFTER_ENTITY_NAME_IN_ENTITYDECL\",",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6d6af344fe97d8782c32d2641c57d716c40fda7e/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "b59bb040919d303231dddb4bc5e4143981da4a97",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6d6af344fe97d8782c32d2641c57d716c40fda7e/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLDTDScannerImpl.java?ref=6d6af344fe97d8782c32d2641c57d716c40fda7e"
            },
            {
                "patch": "@@ -664,7 +664,9 @@ protected void scanPIData(String target, XMLString data)\n                     fEntityScanner.scanChar();\n                     XMLStringBuffer colonName = new XMLStringBuffer(target);\n                     colonName.append(\":\");\n-                    colonName.append(fEntityScanner.scanName());\n+                    String str = fEntityScanner.scanName();\n+                    if (str != null)\n+                        colonName.append(str);\n                     reportFatalError(\"ColonNotLegalWithNS\", new Object[] {colonName.toString()});\n                     fEntityScanner.skipSpaces();\n                 } else {",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6d6af344fe97d8782c32d2641c57d716c40fda7e/src/org/apache/xerces/impl/XMLScanner.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "3323ba156a7a087083a46af7a625983a22c99dab",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6d6af344fe97d8782c32d2641c57d716c40fda7e/src/org/apache/xerces/impl/XMLScanner.java",
                "filename": "src/org/apache/xerces/impl/XMLScanner.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLScanner.java?ref=6d6af344fe97d8782c32d2641c57d716c40fda7e"
            }
        ],
        "bug_id": "xerces2-j_54",
        "parent": "https://github.com/apache/xerces2-j/commit/90191a5d2dbe50eab8ee37e3a1602041903bde72",
        "message": "Fixing a possible NPE exception in the case QName is invalid.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319332 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/a65338144a809a388a0a72f7c38cc3945c43292a",
        "file": [
            {
                "patch": "@@ -178,7 +178,7 @@ public String getConstraintValue() {\n         // REVISIT: SCAPI: what's the proper representation\n         return getConstraintType() == XSConstants.VC_NONE ?\n                null :\n-               fDefault.actualValue.toString();\n+               fDefault.stringValue();\n     }\n \n     /**",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a65338144a809a388a0a72f7c38cc3945c43292a/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "f9684f879e3777e0f3a3fa862c7b8909205758ee",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a65338144a809a388a0a72f7c38cc3945c43292a/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeDecl.java?ref=a65338144a809a388a0a72f7c38cc3945c43292a"
            }
        ],
        "bug_id": "xerces2-j_55",
        "parent": "https://github.com/apache/xerces2-j/commit/3117ff4fc8e3e2df0a343a562b6798ef1917819a",
        "message": "A potential NPE: actual value in a value constraint might be null (if the value\nconstraint is invalid). Use stringValue() instead.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319100 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/708fed3649366e52e4549be5ace62531f055a65c",
        "file": [
            {
                "patch": "@@ -181,7 +181,7 @@ public String toString() {\n                 buffer.append(\"all(\");\n             else\n                 buffer.append('(');\n-            if (fParticles.length > 0)\n+            if (fParticleCount > 0)\n                 buffer.append(fParticles[0].toString());\n             for (int i = 1; i < fParticleCount; i++) {\n                 if (fCompositor == MODELGROUP_CHOICE)",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/708fed3649366e52e4549be5ace62531f055a65c/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "4c4709c0cfe82829a847e3137d9155c930d3dbcc",
                "blob_url": "https://github.com/apache/xerces2-j/blob/708fed3649366e52e4549be5ace62531f055a65c/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java?ref=708fed3649366e52e4549be5ace62531f055a65c"
            }
        ],
        "bug_id": "xerces2-j_56",
        "parent": "https://github.com/apache/xerces2-j/commit/54e90933eca97963f8c47c3d95fc8f68207779b1",
        "message": "Fixing bug 17286: NPE when toString is called on a model group with no particles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319098 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/d47f880a98695c5cebdc660a4842ec67bf14fd40",
        "file": [
            {
                "patch": "@@ -186,7 +186,7 @@\n         cos-ct-derived-ok = cos-ct-derived-ok: error.\n         cos-ct-extends = cos-ct-extends: error.\n         cos-ct-extends.1.1 = cos-ct-extends.1.1: Error for type ''{0}''.  Extension must not be in the final set of the base type.\n-        cos-ct-extends.1.4.2.2.2.2.1 = cos-ct-extends.1.4.2.2.2.2.1: Error for type ''{0}''.  The content type of a derived type and that of its base must both be mixed or element-only.\n+        cos-ct-extends.1.4.3.2.2.1 = cos-ct-extends.1.4.3.2.2.1: Error for type ''{0}''.  The content type of a derived type and that of its base must both be mixed or element-only.\n         cos-element-consistent = cos-element-consistent: Error for type ''{0}''.  Multiple elements with name ''{1}'', with different types, appear in the model group.\n         cos-equiv-class = cos-equiv-class: error.\n         cos-equiv-derived-ok-rec = cos-equiv-derived-ok-rec: error.",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d47f880a98695c5cebdc660a4842ec67bf14fd40/src/org/apache/xerces/impl/msg/XMLSchemaMessages.properties",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "bd03fa4f4f5fce9bf399ecfe7ff86441aceb20a9",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d47f880a98695c5cebdc660a4842ec67bf14fd40/src/org/apache/xerces/impl/msg/XMLSchemaMessages.properties",
                "filename": "src/org/apache/xerces/impl/msg/XMLSchemaMessages.properties",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/msg/XMLSchemaMessages.properties?ref=d47f880a98695c5cebdc660a4842ec67bf14fd40"
            },
            {
                "patch": "@@ -731,6 +731,17 @@ else if (complexContentName.equals(SchemaSymbols.ELT_EXTENSION))\n             else if (baseType.getContentType() == XSComplexTypeDecl.CONTENTTYPE_EMPTY) {\n             }\n             else {\n+                //\n+                // Check if the contentType of the base is consistent with the new type\n+                // cos-ct-extends.1.4.3.2\n+                if (fContentType == XSComplexTypeDecl.CONTENTTYPE_ELEMENT &&\n+                    baseType.getContentType() != XSComplexTypeDecl.CONTENTTYPE_ELEMENT ||\n+                    fContentType == XSComplexTypeDecl.CONTENTTYPE_MIXED &&\n+                    baseType.getContentType() != XSComplexTypeDecl.CONTENTTYPE_MIXED) {\n+                    throw new ComplexTypeRecoverableError(\"cos-ct-extends.1.4.3.2.2.1\",\n+                            new Object[]{fName}, complexContent);\n+                }\n+\n                 // if the content of either type is an \"all\" model group, error.\n                 if (fParticle.fType == XSParticleDecl.PARTICLE_MODELGROUP &&\n                     ((XSModelGroupImpl)fParticle.fValue).fCompositor == XSModelGroupImpl.MODELGROUP_ALL ||\n@@ -754,23 +765,6 @@ else if (baseType.getContentType() == XSComplexTypeDecl.CONTENTTYPE_EMPTY) {\n                 fParticle = particle;\n             }\n \n-            //\n-            // Check if the contentType of the base is consistent with the new type\n-            // cos-ct-extends.1.4.2.2\n-            if (baseType.getContentType() != XSComplexTypeDecl.CONTENTTYPE_EMPTY) {\n-                if (((baseType.getContentType() ==\n-                      XSComplexTypeDecl.CONTENTTYPE_ELEMENT) &&\n-                     fContentType != XSComplexTypeDecl.CONTENTTYPE_ELEMENT) ||\n-                    ((baseType.getContentType() ==\n-                      XSComplexTypeDecl.CONTENTTYPE_MIXED) &&\n-                      fContentType != XSComplexTypeDecl.CONTENTTYPE_MIXED)) {\n-\n-                    throw new ComplexTypeRecoverableError(\"cos-ct-extends.1.4.2.2.2.2.1\",\n-                          new Object[]{fName}, complexContent);\n-                }\n-\n-            }\n-\n             // Remove prohibited uses.   Must be done before merge for EXTENSION.\n             fAttrGrp.removeProhibitedAttrs();\n             mergeAttributes(baseType.getAttrGrp(), fAttrGrp, fName, true, complexContent);",
                "additions": 11,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d47f880a98695c5cebdc660a4842ec67bf14fd40/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "status": "modified",
                "changes": 28,
                "deletions": 17,
                "sha": "a5923ed89dc7660c1fa1019e84b2e1287baec73a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d47f880a98695c5cebdc660a4842ec67bf14fd40/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java?ref=d47f880a98695c5cebdc660a4842ec67bf14fd40"
            }
        ],
        "bug_id": "xerces2-j_57",
        "parent": "https://github.com/apache/xerces2-j/commit/d2d4f44da9f511edc3e25fe84cced5cae93b74f6",
        "message": "More changes for E1-5: error code; an NPE introduced from a previous commit.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318992 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4ee21bab5e00b0e5469fbf6aca2b2e441e2acc8e",
        "file": [
            {
                "patch": "@@ -520,7 +520,8 @@ public void startEntity(String name,\n             if (fDTDHandler != null && !fStartDTDCalled ) {\n                 fDTDHandler.startDTD(fEntityScanner, null);\n             }\n-            fDTDHandler.startExternalSubset(fEntityScanner,null);\n+            if (fDTDHandler != null)\n+                fDTDHandler.startExternalSubset(fEntityScanner,null);\n             fEntityManager.startExternalSubset();\n             fExtEntityDepth++;\n         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4ee21bab5e00b0e5469fbf6aca2b2e441e2acc8e/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "dd5aeb46ae3c3793af0756e28a0d9f199ad79cb2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4ee21bab5e00b0e5469fbf6aca2b2e441e2acc8e/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLDTDScannerImpl.java?ref=4ee21bab5e00b0e5469fbf6aca2b2e441e2acc8e"
            }
        ],
        "bug_id": "xerces2-j_58",
        "parent": "https://github.com/apache/xerces2-j/commit/42d6912345d32f8705572ad58cca405105b41b56",
        "message": "A potential NPE. We check whether fDTDHandler is null everywhere else.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318859 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b1be20b0ef7952b520fe7cce793d0291c4a032c1",
        "file": [
            {
                "patch": "@@ -1697,6 +1697,9 @@ public String getLexicalFacetValue(short facetName) {\n     }\n \n     public StringList getLexicalEnumerations() {\n+        if (fEnumeration == null)\n+            return null;\n+        \n         // REVISIT: fEnumeration should be of type StringListImpl\n         int size = fEnumeration.size();\n         String[] strs = new String[size];\n@@ -1706,6 +1709,8 @@ public StringList getLexicalEnumerations() {\n     }\n \n     public StringList getLexicalPatterns() {\n+        if (fPattern == null)\n+            return null;\n \n         // REVISIT: fPattern should be of type StringListImpl\n         int size = fPattern.size();",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b1be20b0ef7952b520fe7cce793d0291c4a032c1/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 0,
                "sha": "4a490d9c0da7fb91b58f9e8d5b03bd2bfe2132a3",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b1be20b0ef7952b520fe7cce793d0291c4a032c1/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java?ref=b1be20b0ef7952b520fe7cce793d0291c4a032c1"
            }
        ],
        "bug_id": "xerces2-j_59",
        "parent": "https://github.com/apache/xerces2-j/commit/910fffbeeeb30465e0c0bba5119b77af83f99b95",
        "message": "Check whether fEnumeration and fPattern are null before accessing them,\nto avoid NPE's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318723 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/e7d32d1d1d01ca45aa945f80738b25e5e9ade486",
        "file": [
            {
                "patch": "@@ -1496,24 +1496,27 @@ public void endGeneralEntity(String name, Augmentations augs) throws XNIExceptio\n                 NodeList children = fCurrentNode.getChildNodes();\n                 Node parent = fCurrentNode.getParentNode();\n                 int length = children.getLength();\n-                // get previous sibling of the entity reference\n-                Node node = fCurrentNode.getPreviousSibling();\n-                // normalize text nodes\n-                Node child = children.item(0);\n-                if (node != null && node.getNodeType() == Node.TEXT_NODE &&\n-                    child.getNodeType() == Node.TEXT_NODE) {\n-                    ((Text)node).appendData(child.getNodeValue());\n-                    fCurrentNode.removeChild(child);\n+                if (length > 0) {\n+                \n+                    // get previous sibling of the entity reference\n+                    Node node = fCurrentNode.getPreviousSibling();\n+                    // normalize text nodes\n+                    Node child = children.item(0);\n+                    if (node != null && node.getNodeType() == Node.TEXT_NODE &&\n+                        child.getNodeType() == Node.TEXT_NODE) {\n+                        ((Text)node).appendData(child.getNodeValue());\n+                        fCurrentNode.removeChild(child);\n \n-                } else {\n-                    node = parent.insertBefore(child, fCurrentNode);\n-                    handleBaseURI(node);\n-                }\n+                    } else {\n+                        node = parent.insertBefore(child, fCurrentNode);\n+                        handleBaseURI(node);\n+                    }\n \n-                for (int i=1;i <length;i++) {\n-                    node = parent.insertBefore(children.item(0), fCurrentNode);\n-                    handleBaseURI(node);\n-                }\n+                    for (int i=1;i <length;i++) {\n+                        node = parent.insertBefore(children.item(0), fCurrentNode);\n+                        handleBaseURI(node);\n+                    }\n+                } // length > 0\n                 parent.removeChild(fCurrentNode);\n                 fCurrentNode = parent;\n             }",
                "additions": 19,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7d32d1d1d01ca45aa945f80738b25e5e9ade486/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 35,
                "deletions": 16,
                "sha": "73a656b627ddfcbda63dfb5ca9b501811dc4227a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7d32d1d1d01ca45aa945f80738b25e5e9ade486/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=e7d32d1d1d01ca45aa945f80738b25e5e9ade486"
            }
        ],
        "bug_id": "xerces2-j_60",
        "parent": "https://github.com/apache/xerces2-j/commit/649c3c60460f1ca94877aeecc6ac63567dd69438",
        "message": "Applied patch from Philippe Le Hegaret: NPE parsing entity with no value.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318638 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/0e633597f6121df0050c741c1a072dc7f3e50b26",
        "file": [
            {
                "patch": "@@ -292,9 +292,12 @@ ASModel parseASInputSource(XMLInputSource is) throws Exception {\n         SchemaGrammar grammar = gramConfig.parseXMLSchema(is);\n         gramConfig.unlockGrammarPool();\n \n-        ASModelImpl newAsModel = new ASModelImpl();\n-        fGrammarBucket.putGrammar (grammar, true);\n-        addGrammars(newAsModel, fGrammarBucket);\n+        ASModelImpl newAsModel = null;\n+        if (grammar != null) {\n+            newAsModel = new ASModelImpl();\n+            fGrammarBucket.putGrammar (grammar, true);\n+            addGrammars(newAsModel, fGrammarBucket);\n+        }\n         return newAsModel;\n     }\n ",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0e633597f6121df0050c741c1a072dc7f3e50b26/src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "status": "modified",
                "changes": 9,
                "deletions": 3,
                "sha": "157b575ddb19efd8e8a4857fcd0bc8fa789f930e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0e633597f6121df0050c741c1a072dc7f3e50b26/src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "filename": "src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DOMASBuilderImpl.java?ref=0e633597f6121df0050c741c1a072dc7f3e50b26"
            }
        ],
        "bug_id": "xerces2-j_61",
        "parent": "https://github.com/apache/xerces2-j/commit/c899591d97e80247a6616b12d0d6630a06401fd9",
        "message": "Potential NPE. When the returned grammar from grammar loader is null,\nreturn null from parseAS methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318428 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/a5bf8a3e51f3b5c8fe3c98d6d358881dcbc651fa",
        "file": [
            {
                "patch": "@@ -95,15 +95,14 @@ XSNotationDecl traverse(Element elmNode,\n \n         String  publicAttr = (String) attrValues[XSAttributeChecker.ATTIDX_PUBLIC];\n         String  systemAttr = (String) attrValues[XSAttributeChecker.ATTIDX_SYSTEM];\n-        if (nameAttr.length() == 0) {\n-            //REVISIT: update error message\n+        if (nameAttr == null) {\n             reportGenericSchemaError(\"<notation> must have a name\");\n             fAttrChecker.returnAttrArray(attrValues, schemaDoc);\n             return null;\n         }\n \n-        if (publicAttr.length() == 0 && systemAttr.length() == 0) {\n-            reportGenericSchemaError(\"Invalid <notation> declaration\");\n+        if (publicAttr == null) {\n+            reportGenericSchemaError(\"<notation> must have 'public' attribute\");\n         }\n \n         XSNotationDecl notation = new XSNotationDecl();\n@@ -128,7 +127,7 @@ XSNotationDecl traverse(Element elmNode,\n                                            \"NotationContentRestricted\",\n                                            args,\n                                            XMLErrorReporter.SEVERITY_ERROR);\n-            \n+\n         }\n         grammar.addGlobalNotationDecl(notation);\n         fAttrChecker.returnAttrArray(attrValues, schemaDoc);",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/a5bf8a3e51f3b5c8fe3c98d6d358881dcbc651fa/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "status": "modified",
                "changes": 9,
                "deletions": 5,
                "sha": "5b5d96b5cd8493febcb86f55cc9b99b85db51ba1",
                "blob_url": "https://github.com/apache/xerces2-j/blob/a5bf8a3e51f3b5c8fe3c98d6d358881dcbc651fa/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDNotationTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDNotationTraverser.java?ref=a5bf8a3e51f3b5c8fe3c98d6d358881dcbc651fa"
            }
        ],
        "bug_id": "xerces2-j_62",
        "parent": "https://github.com/apache/xerces2-j/commit/163e05478674a9bce319660f7a3e17f7fac7dc9f",
        "message": "When an attribute is not specified, the value is null, not empty string.\nThis fix solves some NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317777 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/ad06e9307dfce03331e79a0cbb9aecaf34fd209a",
        "file": [
            {
                "patch": "@@ -410,18 +410,19 @@ else if (simpleContentName.equals(SchemaSymbols.ELT_EXTENSION))\n           // -----------------------------------------------------------------------\n           // Traverse any attributes\n           // -----------------------------------------------------------------------\n-          if (!isAttrOrAttrGroup(attrNode)) {\n-             throw new ComplexTypeRecoverableError(\"src-ct\",\n-              new Object[]{typeInfo.fName,DOMUtil.getLocalName(attrNode)});\n-          }\n-          Element node=traverseAttrsAndAttrGrps(attrNode,typeInfo.fAttrGrp, \n-                                                schemaDoc,grammar);   \n-          if (node!=null) {\n-               throw new ComplexTypeRecoverableError(\"src-ct\",\n-                new Object[]{typeInfo.fName,DOMUtil.getLocalName(node)});\n+          if (attrNode != null) {\n+              if (!isAttrOrAttrGroup(attrNode)) {\n+                 throw new ComplexTypeRecoverableError(\"src-ct\",\n+                  new Object[]{typeInfo.fName,DOMUtil.getLocalName(attrNode)});\n+              }\n+              Element node=traverseAttrsAndAttrGrps(attrNode,typeInfo.fAttrGrp,\n+                                                    schemaDoc,grammar);\n+              if (node!=null) {\n+                   throw new ComplexTypeRecoverableError(\"src-ct\",\n+                    new Object[]{typeInfo.fName,DOMUtil.getLocalName(node)});\n+              }\n           }\n \n-\n           mergeAttributes(baseComplexType.fAttrGrp, typeInfo.fAttrGrp, typeName, false);\n           String error = typeInfo.fAttrGrp.validRestrictionOf(baseComplexType.fAttrGrp);\n           if (error != null) {\n@@ -445,7 +446,7 @@ else if (simpleContentName.equals(SchemaSymbols.ELT_EXTENSION))\n                 new Object[]{typeInfo.fName,DOMUtil.getLocalName(attrNode)});\n             }\n             Element node=traverseAttrsAndAttrGrps(attrNode,typeInfo.fAttrGrp,\n-                                     schemaDoc,grammar);  \n+                                     schemaDoc,grammar);\n             if (node!=null) {\n                  throw new ComplexTypeRecoverableError(\"src-ct\",\n                   new Object[]{typeInfo.fName,DOMUtil.getLocalName(node)});\n@@ -674,6 +675,7 @@ private void mergeAttributes(XSAttributeGroupDecl fromAttrGrp,\n          else {\n            if (extension) {\n               //REVISIT - should create a msg in properties file\n+              // REVISIT: what if one of the attribute uses is \"prohibited\"\n               reportGenericSchemaError(\"ComplexType \" + typeName + \": \" +\n                 \"Duplicate attribute use \" + existingAttrUse.fAttrDecl.fName );\n               throw new ComplexTypeRecoverableError();\n@@ -764,7 +766,7 @@ else if (typeInfo.fParticle == null)\n               throw new ComplexTypeRecoverableError(\"src-ct\",\n                new Object[]{typeInfo.fName,DOMUtil.getLocalName(attrNode)});\n            }\n-           Element node = \n+           Element node =\n                 traverseAttrsAndAttrGrps(attrNode,typeInfo.fAttrGrp,schemaDoc,grammar);\n            if (node!=null) {\n                  throw new ComplexTypeRecoverableError(\"src-ct\",\n@@ -777,11 +779,7 @@ else if (typeInfo.fParticle == null)\n     } // end processComplexContent\n \n \n-    private boolean isAttrOrAttrGroup(Element e)\n-    {\n-        if (e == null)\n-            return false;\n-\n+    private boolean isAttrOrAttrGroup(Element e) {\n         String elementName = DOMUtil.getLocalName(e);\n \n         if (elementName.equals(SchemaSymbols.ELT_ATTRIBUTE) ||",
                "additions": 15,
                "raw_url": "https://github.com/apache/xerces2-j/raw/ad06e9307dfce03331e79a0cbb9aecaf34fd209a/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "status": "modified",
                "changes": 32,
                "deletions": 17,
                "sha": "263f6c95565a809fd8321dca50e5c52ab9b07acc",
                "blob_url": "https://github.com/apache/xerces2-j/blob/ad06e9307dfce03331e79a0cbb9aecaf34fd209a/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java?ref=ad06e9307dfce03331e79a0cbb9aecaf34fd209a"
            }
        ],
        "bug_id": "xerces2-j_63",
        "parent": "https://github.com/apache/xerces2-j/commit/b9f2ad7cb65b0497e4de5480a7498868409b8271",
        "message": "fixing a NPE: first check whehter there is an element node.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317767 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/7c8f83a02ae63cbffa7a4a903b674467843d1537",
        "file": [
            {
                "patch": "@@ -244,7 +244,7 @@ fFacetInfo traverseFacets(Element content, Object[] contentAttrs, String simpleT\n \n                     }\n \n-                    enumVal = (uriStr!=null)?(uriStr+\",\"+localpart):localpart;                      \n+                    enumVal = (uriStr!=null)?(uriStr+\",\"+localpart):localpart;\n                     fSymbolTable.addSymbol(enumVal);\n                 }\n                 enumData.addElement(enumVal);\n@@ -362,6 +362,7 @@ Element traverseAttrsAndAttrGrps(Element firstAttr, XSAttributeGroupDecl attrGrp\n             if (childName.equals(SchemaSymbols.ELT_ATTRIBUTE)) {\n                 tempAttrUse = fSchemaHandler.fAttributeTraverser.traverseLocal(child,\n                                                                                schemaDoc, grammar);\n+                if (tempAttrUse == null) break;\n                 if (attrGrp.getAttributeUse(tempAttrUse.fAttrDecl.fTargetNamespace,\n                                             tempAttrUse.fAttrDecl.fName)==null) {\n                     attrGrp.addAttributeUse(tempAttrUse);",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7c8f83a02ae63cbffa7a4a903b674467843d1537/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "7144e5b5eb12727373d116976d58b8e4ee042291",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7c8f83a02ae63cbffa7a4a903b674467843d1537/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java?ref=7c8f83a02ae63cbffa7a4a903b674467843d1537"
            }
        ],
        "bug_id": "xerces2-j_64",
        "parent": "https://github.com/apache/xerces2-j/commit/2bac89fc7ad79271e62f750c87064c47b99022c0",
        "message": "A patch from Rahul.\nCheck whether tempAttrUse is null, to avoid NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317761 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b11b0b374d7a225c2ca5e97950e4b7087db8854d",
        "file": [
            {
                "patch": "@@ -1299,7 +1299,7 @@ else if (value.equals (SchemaSymbols.ATTVAL_UNQUALIFIED))\n                 StringTokenizer t = new StringTokenizer (value, \" \");\n                 while (t.hasMoreTokens()) {\n                     String token = t.nextToken ();\n-                    retValue = fExtraDVs[DT_QNAME].validate(token, null);\n+                    retValue = fExtraDVs[DT_QNAME].validate(token, schemaDoc.fValidationContext);\n                     // REVISIT: should have the datatype validators return\n                     // the object representation of the value.\n                     retValue = resolveQName(token, schemaDoc);\n@@ -1354,7 +1354,7 @@ else if (value.equals(\"1\"))\n                         } else {\n                             // we have found namespace URI here\n                             // need to add it to the symbol table\n-                            fExtraDVs[DT_ANYURI].validate(token, null);\n+                            fExtraDVs[DT_ANYURI].validate(token, schemaDoc.fValidationContext);\n                             tempNamespace = fSymbolTable.addSymbol(token);\n                         }\n \n@@ -1399,7 +1399,7 @@ else if (value.equals (SchemaSymbols.ATTVAL_SKIP))\n         case DT_PUBLIC:\n             // public = A public identifier, per ISO 8879\n             // REVISIT: how to validate \"public\"???\n-            fExtraDVs[DT_TOKEN].validate(value, null);\n+            fExtraDVs[DT_TOKEN].validate(value, schemaDoc.fValidationContext);\n             break;\n         case DT_USE:\n             // use = (optional | prohibited | required)\n@@ -1469,7 +1469,9 @@ public void checkNonSchemaAttributes(XSGrammarResolver grammarResolver) {\n                 attrVal = normalize((String)values.elementAt(i+1), dv.getWSFacet());\n                 try {\n                     // and validate it using the DatatypeValidator\n-                    dv.validate(attrVal,null);\n+                    // REVISIT: what would be the proper validation context?\n+                    //          guess we need to save that in the vectors too.\n+                    dv.validate(attrVal, null);\n                 } catch(InvalidDatatypeValueException ide) {\n                     reportSchemaError (\"s4s-att-invalid-value\",\n                                        new Object[] {elName, attrName, ide.getLocalizedMessage()});",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "status": "modified",
                "changes": 10,
                "deletions": 4,
                "sha": "b2fa07193f26c1674760f0279847655be67b6bd3",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "filename": "src/org/apache/xerces/impl/v2/XSAttributeChecker.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSAttributeChecker.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -755,6 +755,9 @@ else if (typeInfo.fParticle == null)\n \n     private boolean isAttrOrAttrGroup(Element e)\n     {\n+        if (e == null)\n+            return false;\n+\n         String elementName = DOMUtil.getLocalName(e);\n \n         if (elementName.equals(SchemaSymbols.ELT_ATTRIBUTE) ||",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "9b72b89cb2139c5711291bdb39b8bc7293dabbce",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDComplexTypeTraverser.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -164,7 +164,8 @@ XSGroupDecl traverseGlobal(Element elmNode,\n             if (childName.equals(SchemaSymbols.ELT_ANNOTATION)) {\n                 traverseAnnotationDecl(l_elmChild, attrValues, true, schemaDoc);\n                 l_elmChild = DOMUtil.getNextSiblingElement(l_elmChild);\n-                childName = l_elmChild.getLocalName();\n+                if (l_elmChild != null)\n+                    childName = l_elmChild.getLocalName();\n             }\n \n             if (l_elmChild == null) {\n@@ -183,7 +184,8 @@ XSGroupDecl traverseGlobal(Element elmNode,\n                                            XMLErrorReporter.SEVERITY_ERROR);\n             }\n \n-            if (DOMUtil.getNextSiblingElement(l_elmChild) != null) {\n+            if (l_elmChild != null &&\n+                DOMUtil.getNextSiblingElement(l_elmChild) != null) {\n                 Object[] args = new Object [] { \"group\", childName};\n                 fErrorReporter.reportError(XSMessageFormatter.SCHEMA_DOMAIN,\n                                            \"GroupContentRestricted\",",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDGroupTraverser.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "0fe15c89a1fdb59ee534a5c4e5bd9e6c11e59b76",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDGroupTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDGroupTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDGroupTraverser.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -303,15 +303,22 @@ SchemaGrammar parseSchema(String schemaNamespace,\n         // third phase:  call traversers\n         traverseSchemas();\n \n-        // fourth:  handle local element decls\n+        // fourth:  handle substitution group declarations\n+        // we defer substitution group handling for circular substitution\n+        // REVISIT: wait until we are sure that such circular referencence\n+        //          is allowed.\n+        //fElementTraverser.resolveSubstitutionGroup();\n+\n+        // fifth phase: handle local element decls\n         traverseLocalElements();\n \n-        // fifth phase:  handle Keyrefs\n+        // sixth phase:  handle Keyrefs\n         resolveKeyRefs();\n \n-        // sixth phase:  handle derivation constraint checking\n+        // seventh phase:  handle derivation constraint checking\n         // and UPA, and validate attribute of non-schema namespaces\n-        fAttributeChecker.checkNonSchemaAttributes(fGrammarResolver);\n+        // REVISIT: skip this for now. we reall don't want to do it.\n+        //fAttributeChecker.checkNonSchemaAttributes(fGrammarResolver);\n \n         // and return.\n         return fGrammarResolver.getGrammar(fRoot.fTargetNamespace);",
                "additions": 11,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "status": "modified",
                "changes": 15,
                "deletions": 4,
                "sha": "0cf734c18032464c6c10fde15da56cbcb06329c2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDHandler.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -70,9 +70,9 @@\n \n /**\n  * AbstractNumericFacetValidator is a base class for decimal, double, float,\n- * and all date/time datatype validators. It implements evaluation of common facets - \n+ * and all date/time datatype validators. It implements evaluation of common facets -\n  * minInclusive, maxInclusive, minExclusive, maxExclusive according to schema specs.\n- * \n+ *\n  * @author Elena Litani\n  * @version $Id$\n  */\n@@ -91,8 +91,8 @@ public  AbstractNumericFacetValidator () {\n         this( null, null, false, null ); // Native, No Facets defined, Restriction\n     }\n \n-    public AbstractNumericFacetValidator ( DatatypeValidator base, \n-                                           Hashtable facets, \n+    public AbstractNumericFacetValidator ( DatatypeValidator base,\n+                                           Hashtable facets,\n                                            boolean derivedByList, XMLErrorReporter reporter) {\n         fBaseValidator = base;\n         fErrorReporter = reporter;\n@@ -112,34 +112,35 @@ public AbstractNumericFacetValidator ( DatatypeValidator base,\n                     String value = null;\n \n                     if (key.equals(SchemaSymbols.ELT_PATTERN)) {\n-                        fFacetsDefined |= DatatypeValidator.FACET_PATTERN;\n                         fPattern = (String) facets.get(key);\n                         if (fPattern != null)\n                             fRegex = new RegularExpression(fPattern, \"X\" );\n+                        if (fRegex != null)\n+                            fFacetsDefined |= DatatypeValidator.FACET_PATTERN;\n                     }\n                     else if (key.equals(SchemaSymbols.ELT_ENUMERATION)) {\n                         enumeration     = (Vector)facets.get(key);\n                         fFacetsDefined |= DatatypeValidator.FACET_ENUMERATION;\n                     }\n                     else if (key.equals(SchemaSymbols.ELT_MAXINCLUSIVE)) {\n                         value = ((String) facets.get(key ));\n-                        fFacetsDefined |= DatatypeValidator.FACET_MAXINCLUSIVE;\n                         setMaxInclusive(value);\n+                        fFacetsDefined |= DatatypeValidator.FACET_MAXINCLUSIVE;\n                     }\n                     else if (key.equals(SchemaSymbols.ELT_MAXEXCLUSIVE)) {\n                         value = ((String) facets.get(key ));\n-                        fFacetsDefined |= DatatypeValidator.FACET_MAXEXCLUSIVE;\n                         setMaxExclusive(value);\n+                        fFacetsDefined |= DatatypeValidator.FACET_MAXEXCLUSIVE;\n                     }\n                     else if (key.equals(SchemaSymbols.ELT_MININCLUSIVE)) {\n                         value = ((String) facets.get(key ));\n-                        fFacetsDefined |= DatatypeValidator.FACET_MININCLUSIVE;\n                         setMinInclusive(value);\n+                        fFacetsDefined |= DatatypeValidator.FACET_MININCLUSIVE;\n                     }\n                     else if (key.equals(SchemaSymbols.ELT_MINEXCLUSIVE)) {\n                         value = ((String) facets.get(key ));\n-                        fFacetsDefined |= DatatypeValidator.FACET_MINEXCLUSIVE;\n                         setMinExclusive(value);\n+                        fFacetsDefined |= DatatypeValidator.FACET_MINEXCLUSIVE;\n                     }\n                     else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n                         fFlags = ((Short)facets.get(key)).shortValue();\n@@ -153,18 +154,18 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n \n                 if (fFacetsDefined != 0) {\n                     // check 4.3.8.c1 error: maxInclusive + maxExclusive\n-                    if (((fFacetsDefined & DatatypeValidator.FACET_MAXEXCLUSIVE) != 0) && \n+                    if (((fFacetsDefined & DatatypeValidator.FACET_MAXEXCLUSIVE) != 0) &&\n                         ((fFacetsDefined & DatatypeValidator.FACET_MAXINCLUSIVE) != 0)) {\n                         throw new InvalidDatatypeFacetException( \"It is an error for both maxInclusive and maxExclusive to be specified for the same datatype.\" );\n                     }\n                     // check 4.3.9.c1 error: minInclusive + minExclusive\n-                    if (((fFacetsDefined & DatatypeValidator.FACET_MINEXCLUSIVE) != 0) && \n+                    if (((fFacetsDefined & DatatypeValidator.FACET_MINEXCLUSIVE) != 0) &&\n                         ((fFacetsDefined & DatatypeValidator.FACET_MININCLUSIVE) != 0)) {\n                         throw new InvalidDatatypeFacetException( \"It is an error for both minInclusive and minExclusive to be specified for the same datatype.\" );\n                     }\n \n                     // check 4.3.7.c1 must: minInclusive <= maxInclusive\n-                    if (((fFacetsDefined & DatatypeValidator.FACET_MAXINCLUSIVE) != 0) && \n+                    if (((fFacetsDefined & DatatypeValidator.FACET_MAXINCLUSIVE) != 0) &&\n                         ((fFacetsDefined & DatatypeValidator.FACET_MININCLUSIVE) != 0)) {\n                         result =  compareValues(fMinInclusive, fMaxInclusive);\n                         if (result == 1 || result == INDETERMINATE)\n@@ -173,7 +174,7 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n                     }\n                     // check 4.3.8.c2 must: minExclusive <= maxExclusive ??? minExclusive < maxExclusive\n                     if (((fFacetsDefined & DatatypeValidator.FACET_MAXEXCLUSIVE) != 0) && ((fFacetsDefined & DatatypeValidator.FACET_MINEXCLUSIVE) != 0)) {\n-                        result =compareValues(fMinExclusive, fMaxExclusive); \n+                        result =compareValues(fMinExclusive, fMaxExclusive);\n                         if (result == 1 || result == INDETERMINATE)\n                             throw new InvalidDatatypeFacetException( \"minExclusive value ='\" + getMinExclusive(false) + \"'must be <= maxExclusive value ='\" +\n                                                                      getMaxExclusive(false) + \"'. \" );\n@@ -206,10 +207,10 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n \n                         if (((fFacetsDefined & DatatypeValidator.FACET_MAXINCLUSIVE) != 0)) {\n                             if (((numBase.fFacetsDefined & DatatypeValidator.FACET_MAXINCLUSIVE) != 0)) {\n-                                result = compareValues(fMaxInclusive, numBase.fMaxInclusive); \n+                                result = compareValues(fMaxInclusive, numBase.fMaxInclusive);\n                                 if ((numBase.fFlags & DatatypeValidator.FACET_MAXINCLUSIVE) != 0 &&\n                                     result != 0) {\n-                                    throw new InvalidDatatypeFacetException( \"maxInclusive value = '\" + getMaxInclusive(false) + \n+                                    throw new InvalidDatatypeFacetException( \"maxInclusive value = '\" + getMaxInclusive(false) +\n                                                                              \"' must be equal to base.maxInclusive value = '\" +\n                                                                              getMaxInclusive(true) + \"' with attribute {fixed} = true\" );\n                                 }\n@@ -247,7 +248,7 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n                                 result= compareValues(fMaxExclusive, numBase.fMaxExclusive);\n                                 if ((numBase.fFlags & DatatypeValidator.FACET_MAXEXCLUSIVE) != 0 &&\n                                     result != 0) {\n-                                    throw new InvalidDatatypeFacetException( \"maxExclusive value = '\" + getMaxExclusive(false) + \n+                                    throw new InvalidDatatypeFacetException( \"maxExclusive value = '\" + getMaxExclusive(false) +\n                                                                              \"' must be equal to base.maxExclusive value = '\" +\n                                                                              getMaxExclusive(true) + \"' with attribute {fixed} = true\" );\n                                 }\n@@ -283,7 +284,7 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n                                 result= compareValues(fMinExclusive, numBase.fMinExclusive);\n                                 if ((numBase.fFlags & DatatypeValidator.FACET_MINEXCLUSIVE) != 0 &&\n                                     result != 0) {\n-                                    throw new InvalidDatatypeFacetException( \"minExclusive value = '\" + getMinExclusive(false) + \n+                                    throw new InvalidDatatypeFacetException( \"minExclusive value = '\" + getMinExclusive(false) +\n                                                                              \"' must be equal to base.minExclusive value = '\" +\n                                                                              getMinExclusive(true) + \"' with attribute {fixed} = true\" );\n                                 }\n@@ -321,10 +322,10 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n                         // minInclusive >= base.maxExclusive\n                         if (((fFacetsDefined & DatatypeValidator.FACET_MININCLUSIVE) != 0)) {\n                             if (((numBase.fFacetsDefined & DatatypeValidator.FACET_MININCLUSIVE) != 0)) {\n-                                result = compareValues(fMinInclusive, numBase.fMinInclusive); \n+                                result = compareValues(fMinInclusive, numBase.fMinInclusive);\n                                 if ((numBase.fFlags & DatatypeValidator.FACET_MININCLUSIVE) != 0 &&\n                                     result != 0) {\n-                                    throw new InvalidDatatypeFacetException( \"minInclusive value = '\" + getMinInclusive(false) + \n+                                    throw new InvalidDatatypeFacetException( \"minInclusive value = '\" + getMinInclusive(false) +\n                                                                              \"' must be equal to base.minInclusive value = '\" +\n                                                                              getMinInclusive(true) + \"' with attribute {fixed} = true\" );\n                                 }\n@@ -413,24 +414,24 @@ else if (key.equals(DatatypeValidator.FACET_FIXED)) {// fixed flags\n             }\n             fErrorReporter.reportError(XSMessageFormatter.SCHEMA_DOMAIN,\n                                        \"DatatypeFacetError\", new Object [] { ((Exception)e).getMessage()},\n-                                       XMLErrorReporter.SEVERITY_ERROR);    \n+                                       XMLErrorReporter.SEVERITY_ERROR);\n         }\n     }\n \n \n     //\n-    // Compares values in value space of give datatype    \n+    // Compares values in value space of give datatype\n     //\n-    abstract protected int compareValues (Object value1, Object value2);            \n+    abstract protected int compareValues (Object value1, Object value2);\n \n     //\n     // set* functions used to set facets values\n     //\n     abstract protected void setMaxInclusive (String value);\n     abstract protected void setMinInclusive (String value);\n     abstract protected void setMaxExclusive (String value);\n-    abstract protected void setMinExclusive (String value);    \n-    abstract protected void setEnumeration (Vector enumeration) \n+    abstract protected void setMinExclusive (String value);\n+    abstract protected void setEnumeration (Vector enumeration)\n     throws InvalidDatatypeValueException;\n \n     //\n@@ -451,7 +452,7 @@ protected void initializeValues() {\n     // decimal has fractionDigits and totalDigits facets\n     // all other datatypes will throw InvalidDatatypeFacetException\n     //\n-    abstract protected void assignAdditionalFacets(String key, Hashtable facets) \n+    abstract protected void assignAdditionalFacets(String key, Hashtable facets)\n     throws InvalidDatatypeFacetException;\n \n     //",
                "additions": 26,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/AbstractNumericFacetValidator.java",
                "status": "modified",
                "changes": 51,
                "deletions": 25,
                "sha": "b20855ac341b00a9519de72bc32805419763427f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/AbstractNumericFacetValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/datatypes/AbstractNumericFacetValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/datatypes/AbstractNumericFacetValidator.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999, 2000 The Apache Software Foundation.  All rights \n+ * Copyright (c) 1999, 2000 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Xerces\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -71,40 +71,40 @@\n  * This is the base class of all date/time datatype validators.\n  * It implements common code for parsing, validating and comparing datatypes.\n  * Classes that extend this class, must implement parse() method.\n- * \n+ *\n  * @author Elena Litani\n- * @author Len Berman  \n+ * @author Len Berman\n  *\n  * @version $Id$\n  */\n \n public abstract class DateTimeValidator extends AbstractNumericFacetValidator {\n \n-    //debugging    \n+    //debugging\n     private static final boolean DEBUG=false;\n-    \n+\n     //define shared variables for date/time\n \n     //define constants\n-    protected final static int CY = 0,  M = 1, D = 2, h = 3, \n+    protected final static int CY = 0,  M = 1, D = 2, h = 3,\n     m = 4, s = 5, ms = 6, utc=7, hh=0, mm=1;\n \n     //comparison\n     protected static final short LESS_THAN=-1;\n     protected static final short EQUAL=0;\n     protected static final short GREATER_THAN=1;\n \n-    //size for all objects must have the same fields: \n+    //size for all objects must have the same fields:\n     //CCYY, MM, DD, h, m, s, ms + timeZone\n     protected final static int TOTAL_SIZE = 8;\n \n     //date obj size for gMonth datatype (without time zone): --09--\n-    protected final static int MONTH_SIZE = 6; \n+    protected final static int MONTH_SIZE = 6;\n \n     //date obj must have at least 6 chars after year (without time zone): \"-MM-DD\"\n     private final static int YEARMONTH_SIZE = 7;\n \n-    //define constants to be used in assigning default values for \n+    //define constants to be used in assigning default values for\n     //all date/time excluding duration\n     protected final static int YEAR=2000;\n     protected final static int MONTH=01;\n@@ -117,11 +117,11 @@\n     protected int  fEnumSize;\n \n     //size of string buffer\n-    protected int fEnd; \n+    protected int fEnd;\n     protected int fStart;\n \n-    //storage for string value of date/time object \n-    protected StringBuffer fBuffer;     \n+    //storage for string value of date/time object\n+    protected StringBuffer fBuffer;\n \n     //obj to store all date/time objects with fields:\n     // {CY, M, D, h, m, s, ms, utc}\n@@ -142,26 +142,26 @@ public  DateTimeValidator ()   {\n \n     }\n \n-    public DateTimeValidator (DatatypeValidator base, Hashtable facets, boolean derivedByList, XMLErrorReporter reporter ) \n+    public DateTimeValidator (DatatypeValidator base, Hashtable facets, boolean derivedByList, XMLErrorReporter reporter )\n       {\n         super (base, facets, derivedByList, reporter);\n     }\n \n     protected void initializeValues(){\n         fDateValue = new int[TOTAL_SIZE];\n         fTempDate = new int[TOTAL_SIZE];\n-        fEnd = 30; \n+        fEnd = 30;\n         fStart = 0;\n         message = new StringBuffer(TOTAL_SIZE);\n         fBuffer = new StringBuffer(fEnd);\n         timeZone = new int[2];\n     }\n \n-    protected void assignAdditionalFacets(String key,  Hashtable facets ) throws InvalidDatatypeFacetException{        \n+    protected void assignAdditionalFacets(String key,  Hashtable facets ) throws InvalidDatatypeFacetException{\n         String msg = \"date/time datatypes, facet \"+key+\" with value \"+(String)facets.get(key);\n         throw new InvalidDatatypeFacetException(msg);\n     }\n-    \n+\n     protected int compareValues (Object value1, Object value2) {\n             return compareDates((int[])value1, (int[])value2, true);\n     }\n@@ -172,7 +172,7 @@ protected void setMaxInclusive (String value) {\n     protected void setMinInclusive (String value) {\n         fMinInclusive = parse(value, null);\n     }\n-    \n+\n     protected void setMaxExclusive (String value) {\n         fMaxExclusive = parse(value, null);\n \n@@ -182,16 +182,19 @@ protected void setMinExclusive (String value) {\n \n     }\n     protected void setEnumeration (Vector enumeration) throws InvalidDatatypeValueException{\n-   \n+\n     if ( enumeration != null ) {\n-         \n+\n         fEnumSize = enumeration.size();\n         fEnumeration = new int[fEnumSize][];\n+        int j = 0;\n         for ( int i=0; i<fEnumSize; i++ ) {\n             try {\n-                fEnumeration[i] = parse((String)enumeration.elementAt(i), null);\n+                fEnumeration[j] = parse((String)enumeration.elementAt(i), null);\n+                j++;\n             }\n             catch ( RuntimeException e ) {\n+                fEnumSize = j;\n                 throw new InvalidDatatypeValueException(e.getMessage());\n             }\n         }\n@@ -223,7 +226,7 @@ protected void checkContent( String content, Object State, Vector enum, boolean\n     /**\n      * Implemented by each subtype, calling appropriate function to parse\n      * given date/time\n-     * \n+     *\n      * @param content String value of the date/time\n      * @param date    Storage to represent date/time object.\n      *                If null - new object will be created, otherwise\n@@ -235,10 +238,10 @@ protected void checkContent( String content, Object State, Vector enum, boolean\n \n     /**\n      * Validate that a string is a W3C date/time type\n-     * \n+     *\n      * @param content string value of date/time\n      * @param state\n-     * @return  \n+     * @return\n      * @exception InvalidDatatypeValueException\n      */\n     public Object validate(String content, ValidationContext state) throws InvalidDatatypeValueException{\n@@ -257,7 +260,7 @@ public Object validate(String content, ValidationContext state) throws InvalidDa\n \n     /**\n      * Validates date object against facet and base datatype\n-     * \n+     *\n      * @param date    represents date/time obj\n      * @param content lexical representation of date/time obj\n      * @exception InvalidDatatypeValueException\n@@ -271,7 +274,7 @@ protected void validateDate (int[] date, String content) throws InvalidDatatypeV\n                                                             \"' does not match regular expression facet \" + fRegex.getPattern() );\n             }\n             //validate against base type\n-            if (!(fBaseValidator instanceof AnySimpleType)) {            \n+            if (!(fBaseValidator instanceof AnySimpleType)) {\n                 ((DateTimeValidator)this.fBaseValidator).validateDate( date, content);\n             }\n             if ( (fFacetsDefined & DatatypeValidator.FACET_ENUMERATION ) != 0 ) {\n@@ -293,7 +296,7 @@ protected void validateDate (int[] date, String content) throws InvalidDatatypeV\n             // REVISIT: output values for facets in error message\n             short c;\n             if ( fMinInclusive != null ) {\n-                \n+\n                 c = compareDates(date, (int[])fMinInclusive, false);\n                 if ( c == LESS_THAN || c == INDETERMINATE ) {\n                     throw new InvalidDatatypeValueException(\"Value '\"+content+\n@@ -332,15 +335,15 @@ protected void validateDate (int[] date, String content) throws InvalidDatatypeV\n     }\n     public int compare( String content1, String content2)  {\n         //implement compareDates using the compare() method\n-        try{        \n+        try{\n             parse(content1, fDateValue);\n             parse(content2,fTempDate);\n             int result = compareDates(fDateValue, fTempDate, true);\n             return (result==INDETERMINATE)?-1:result;\n         }\n         catch ( RuntimeException e ) {\n             return -1;\n-        \n+\n         }\n     }\n \n@@ -354,15 +357,15 @@ public Object clone() throws CloneNotSupportedException {\n     /**\n      * Compare algorithm described in dateDime (3.2.7).\n      * Duration datatype overwrites this method\n-     * \n+     *\n      * @param date1  normalized date representation of the first value\n      * @param date2  normalized date representation of the second value\n      * @param strict\n      * @return less, greater, less_equal, greater_equal, equal\n      */\n     protected  short compareDates(int[] date1, int[] date2, boolean strict) {\n         if ( date1[utc]==date2[utc] ) {\n-            return compareOrder(date1, date2);    \n+            return compareOrder(date1, date2);\n         }\n         short c1, c2;\n \n@@ -388,14 +391,14 @@ protected  short compareDates(int[] date1, int[] date2, boolean strict) {\n \n             if ( (c1==LESS_THAN && c2==GREATER_THAN) ||\n                  (c1==GREATER_THAN && c2==LESS_THAN) ) {\n-                return INDETERMINATE; \n+                return INDETERMINATE;\n             }\n             //REVISIT: wait for clarification on this case from schema\n             return(c1!=INDETERMINATE)?c1:c2;\n         }\n         else if ( date2[utc]=='Z' ) {\n \n-            //compare (date1 with time zone -14)<=date2 \n+            //compare (date1 with time zone -14)<=date2\n             //\n             cloneDate(date1); //clones date1 value to global temporary storage: fTempDate\n             timeZone[hh]=14;\n@@ -411,7 +414,7 @@ else if ( date2[utc]=='Z' ) {\n                 System.out.println(\"date=\" + dateToString(date2));\n                 System.out.println(\"fTempDate=\" + dateToString(fTempDate));\n             }\n-            //compare (date1 with time zone +14)<=date2 \n+            //compare (date1 with time zone +14)<=date2\n             //\n             cloneDate(date1); //clones date1 value to global temporary storage: fTempDate\n             timeZone[hh]=14;\n@@ -424,7 +427,7 @@ else if ( date2[utc]=='Z' ) {\n             }\n             if ( (c1==LESS_THAN && c2==GREATER_THAN) ||\n                  (c1==GREATER_THAN && c2==LESS_THAN) ) {\n-                return INDETERMINATE; \n+                return INDETERMINATE;\n             }\n             //REVISIT: wait for clarification on this case from schema\n             return(c1!=INDETERMINATE)?c1:c2;\n@@ -437,13 +440,13 @@ else if ( date2[utc]=='Z' ) {\n     /**\n      * Given normalized values, determines order-relation\n      * between give date/time objects.\n-     * \n+     *\n      * @param date1  date/time object\n      * @param date2  date/time object\n-     * @return \n+     * @return\n      */\n     protected short compareOrder (int[] date1, int[] date2) {\n-        \n+\n         for ( int i=0;i<TOTAL_SIZE;i++ ) {\n             if ( date1[i]<date2[i] ) {\n                 return LESS_THAN;\n@@ -458,17 +461,17 @@ else if ( date1[i]>date2[i] ) {\n \n     /**\n      * Parses time hh:mm:ss.sss and time zone if any\n-     * \n+     *\n      * @param start\n      * @param end\n      * @param data\n-     * @return \n+     * @return\n      * @exception Exception\n      */\n     protected  void getTime (int start, int end, int[] data) throws RuntimeException{\n-        \n+\n         int stop = start+2;\n-        \n+\n         //get hours (hh)\n         data[h]=parseInt(start,stop);\n \n@@ -486,7 +489,7 @@ protected  void getTime (int start, int end, int[] data) throws RuntimeException\n                 throw new RuntimeException(\"Error in parsing time zone\" );\n         }\n         start = stop;\n-        stop = stop+2;               \n+        stop = stop+2;\n         data[s]=parseInt(start,stop);\n \n         //get miliseconds (ms)\n@@ -495,12 +498,12 @@ protected  void getTime (int start, int end, int[] data) throws RuntimeException\n         //find UTC sign if any\n         int sign = findUTCSign((milisec!=-1)?milisec:start, end);\n \n-        //parse miliseconds \n+        //parse miliseconds\n         if ( milisec != -1 ) {\n \n             if ( sign<0 ) {\n \n-                //get all digits after \".\" \n+                //get all digits after \".\"\n                 data[ms]=parseInt(milisec+1,fEnd);\n             }\n             else {\n@@ -511,7 +514,7 @@ protected  void getTime (int start, int end, int[] data) throws RuntimeException\n \n         }\n \n-        //parse UTC time zone (hh:mm)        \n+        //parse UTC time zone (hh:mm)\n         if ( sign>0 ) {\n             getTimeZone(data,sign);\n         }\n@@ -520,11 +523,11 @@ protected  void getTime (int start, int end, int[] data) throws RuntimeException\n \n     /**\n      * Parses date CCYY-MM-DD\n-     * \n+     *\n      * @param start\n      * @param end\n      * @param data\n-     * @return \n+     * @return\n      * @exception Exception\n      */\n     protected void getDate (int start, int end, int[] date) throws RuntimeException{\n@@ -541,11 +544,11 @@ protected void getDate (int start, int end, int[] date) throws RuntimeException{\n \n     /**\n      * Parses date CCYY-MM\n-     * \n+     *\n      * @param start\n      * @param end\n      * @param data\n-     * @return \n+     * @return\n      * @exception Exception\n      */\n     protected void getYearMonth (int start, int end, int[] date) throws RuntimeException{\n@@ -580,16 +583,16 @@ else if (length > 4 && fBuffer.charAt(start)=='0'){\n     /**\n      * Shared code from Date and YearMonth datatypes.\n      * Finds if time zone sign is present\n-     * \n+     *\n      * @param end\n      * @param date\n-     * @return \n+     * @return\n      * @exception Exception\n      */\n     protected void parseTimeZone (int end, int[] date) throws RuntimeException{\n \n         //fStart points right after the date\n- \n+\n         if ( fStart<fEnd ) {\n             int sign = findUTCSign(fStart, fEnd);\n             if ( sign<0 ) {\n@@ -603,10 +606,10 @@ protected void parseTimeZone (int end, int[] date) throws RuntimeException{\n \n     /**\n      * Parses time zone: 'Z' or {+,-} followed by  hh:mm\n-     * \n+     *\n      * @param data\n      * @param sign\n-     * @return \n+     * @return\n      */\n     protected void getTimeZone (int[] data, int sign) throws RuntimeException{\n         data[utc]=fBuffer.charAt(sign);\n@@ -618,21 +621,21 @@ protected void getTimeZone (int[] data, int sign) throws RuntimeException{\n             return;\n         }\n         if ( sign<=(fEnd-6) ) {\n-             \n+\n             //parse [hh]\n             int stop = ++sign+2;\n             timeZone[hh]=parseInt(sign, stop);\n             if (fBuffer.charAt(stop++)!=':') {\n                 throw new RuntimeException(\"Error in parsing time zone\" );\n-            }            \n-            \n+            }\n+\n             //parse [ss]\n             timeZone[mm]=parseInt(stop, stop+2);\n-            \n+\n             if ( stop+2!=fEnd ) {\n                 throw new RuntimeException(\"Error in parsing time zone\");\n             }\n-            \n+\n         }\n         else {\n             throw new RuntimeException(\"Error in parsing time zone\");\n@@ -646,7 +649,7 @@ protected void getTimeZone (int[] data, int sign) throws RuntimeException{\n \n     /**\n      * Computes index of given char within StringBuffer\n-     * \n+     *\n      * @param start\n      * @param end\n      * @param ch     character to look for in StringBuffer\n@@ -663,16 +666,16 @@ protected  int indexOf (int start, int end, char ch) {\n \n \n     /**\n-     * Validates given date/time object accoring to W3C PR Schema \n+     * Validates given date/time object accoring to W3C PR Schema\n      * [D.1 ISO 8601 Conventions]\n-     * \n+     *\n      * @param data\n-     * @return \n+     * @return\n      */\n     protected void validateDateTime (int[]  data) {\n \n         //REVISIT: should we throw an exception for not valid dates\n-        //          or reporting an error message should be sufficient?  \n+        //          or reporting an error message should be sufficient?\n         if ( data[CY]==0 ) {\n             throw new RuntimeException(\"The year \\\"0000\\\" is an illegal year value\");\n \n@@ -718,10 +721,10 @@ protected void validateDateTime (int[]  data) {\n \n     /**\n      * Return index of UTC char: 'Z', '+', '-'\n-     * \n+     *\n      * @param start\n      * @param end\n-     * @return \n+     * @return\n      */\n     protected int findUTCSign (int start, int end) {\n         int c;\n@@ -738,14 +741,14 @@ protected int findUTCSign (int start, int end) {\n \n     /**\n      * Given start and end position, parses string value\n-     * \n+     *\n      * @param value  string to parse\n      * @param start  Start position\n      * @param end    end position\n      * @return  return integer representation of characters\n      */\n-    protected  int parseInt (int start, int end) \n-    throws NumberFormatException{ \n+    protected  int parseInt (int start, int end)\n+    throws NumberFormatException{\n         //REVISIT: more testing on this parsing needs to be done.\n         int radix=10;\n         int result = 0;\n@@ -779,8 +782,8 @@ protected int parseIntYear (int end){\n             negative = true;\n             limit = Integer.MIN_VALUE;\n             i++;\n-         \n-        } \n+\n+        }\n         else{\n             limit = -Integer.MAX_VALUE;\n         }\n@@ -808,7 +811,7 @@ protected int parseIntYear (int end){\n \n     /**\n      * If timezone present - normalize dateTime  [E Adding durations to dateTimes]\n-     * \n+     *\n      * @param date   CCYY-MM-DDThh:mm:ss+03\n      * @return CCYY-MM-DDThh:mm:ssZ\n      */\n@@ -830,7 +833,7 @@ protected  void normalize (int[] date) {\n         int temp = date[m] + negate*timeZone[mm];\n         int carry = fQuotient (temp, 60);\n         date[m]= mod(temp, 60, carry);\n-        \n+\n         if ( DEBUG ) {\n             System.out.println(\"==>carry: \" + carry);\n         }\n@@ -862,14 +865,14 @@ else if ( date[D]>temp ) {\n             date[M]=modulo(temp, 1, 13);\n             date[CY]=date[CY]+fQuotient(temp, 1, 13);\n         }\n-        date[utc]='Z';  \n+        date[utc]='Z';\n     }\n \n \n     /**\n-     * Resets fBuffer to store string representation of \n+     * Resets fBuffer to store string representation of\n      * date/time\n-     * \n+     *\n      * @param str    Lexical representation of date/time\n      */\n     protected void resetBuffer (String str) {\n@@ -878,13 +881,13 @@ protected void resetBuffer (String str) {\n         timeZone[hh]=timeZone[mm]=0;\n         fBuffer.append(str);\n         fEnd = fBuffer.length();\n-        \n+\n     }\n \n \n     /**\n      * Resets object representation of date/time\n-     * \n+     *\n      * @param data   date/time object\n      */\n     protected void resetDateObj (int[] data) {\n@@ -895,12 +898,12 @@ protected void resetDateObj (int[] data) {\n \n \n     /**\n-     * Given {year,month} computes maximum \n+     * Given {year,month} computes maximum\n      * number of days for given month\n-     * \n+     *\n      * @param year\n      * @param month\n-     * @return \n+     * @return\n      */\n     protected int maxDayInMonthFor(int year, int month) {\n         //validate days\n@@ -923,32 +926,32 @@ else if ( month==2 ) {\n \n     private boolean isLeapYear(int year) {\n \n-        //REVISIT: should we take care about Julian calendar? \n-        return((year%4 == 0) && ((year%100 != 0) || (year%400 == 0))); \n+        //REVISIT: should we take care about Julian calendar?\n+        return((year%4 == 0) && ((year%100 != 0) || (year%400 == 0)));\n     }\n \n     //\n     // help function described in W3C PR Schema [E Adding durations to dateTimes]\n-    //    \n+    //\n     protected int mod (int a, int b, int quotient) {\n-        //modulo(a, b) = a - fQuotient(a,b)*b \n+        //modulo(a, b) = a - fQuotient(a,b)*b\n         return (a - quotient*b) ;\n     }\n-    \n+\n     //\n     // help function described in W3C PR Schema [E Adding durations to dateTimes]\n     //\n     protected int fQuotient (int a, int b) {\n-        \n-        //fQuotient(a, b) = the greatest integer less than or equal to a/b \n+\n+        //fQuotient(a, b) = the greatest integer less than or equal to a/b\n         return (int)Math.floor((float)a/b);\n     }\n \n     //\n     // help function described in W3C PR Schema [E Adding durations to dateTimes]\n-    //    \n+    //\n     protected int modulo (int temp, int low, int high) {\n-        //modulo(a - low, high - low) + low \n+        //modulo(a - low, high - low) + low\n         int a = temp - low;\n         int b = high - low;\n         return (mod (a, b, fQuotient(a, b)) + low) ;\n@@ -958,8 +961,8 @@ protected int modulo (int temp, int low, int high) {\n     // help function described in W3C PR Schema [E Adding durations to dateTimes]\n     //\n     protected int fQuotient (int temp, int low, int high) {\n-        //fQuotient(a - low, high - low) \n-  \n+        //fQuotient(a - low, high - low)\n+\n         return fQuotient(temp - low, high - low);\n     }\n \n@@ -986,7 +989,7 @@ protected String dateToString(int[] date) {\n \n     /**\n      * Use this function to report errors in constructor\n-     * \n+     *\n      * @param msg\n      * @param value\n      */",
                "additions": 99,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/DateTimeValidator.java",
                "status": "modified",
                "changes": 195,
                "deletions": 96,
                "sha": "ebe425e3bc2f29bb21a42b1566c7ed3ac549332a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/DateTimeValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/datatypes/DateTimeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/datatypes/DateTimeValidator.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -267,7 +267,7 @@ protected void checkContent(String content, Object state, Vector enumeration, bo\n \n         // we check pattern first\n         if ((fFacetsDefined & DatatypeValidator.FACET_PATTERN ) != 0) {\n-            if (fRegex == null || fRegex.matches( content) == false)\n+            if (fRegex == null || !fRegex.matches( content))\n                 throw new InvalidDatatypeValueException(\"Value'\"+content+\n                                                         \"' does not match regular expression facet \" + fRegex.getPattern() );\n         }\n@@ -308,8 +308,8 @@ protected void checkContent(String content, Object state, Vector enumeration, bo\n             if (d.scale() > fFractionDigits) {\n                 String msg = getErrorString(\n                                            DatatypeMessageProvider.fgMessageKeys[DatatypeMessageProvider.FRACTION_EXCEEDED],\n-                                           new Object[] { \n-                                               \"'\" + content + \"'\" + \" with fractionDigits = '\"+ d.scale() +\"'\", \n+                                           new Object[] {\n+                                               \"'\" + content + \"'\" + \" with fractionDigits = '\"+ d.scale() +\"'\",\n                                                \"'\" + fFractionDigits + \"'\"\n                                            });\n                 throw new InvalidDatatypeValueException(msg);\n@@ -322,8 +322,8 @@ protected void checkContent(String content, Object state, Vector enumeration, bo\n \n                 String msg = getErrorString(\n                                            DatatypeMessageProvider.fgMessageKeys[DatatypeMessageProvider.TOTALDIGITS_EXCEEDED],\n-                                           new Object[] { \n-                                               \"'\" + content + \"'\" + \" with totalDigits = '\"+ totalDigits +\"'\", \n+                                           new Object[] {\n+                                               \"'\" + content + \"'\" + \" with totalDigits = '\"+ totalDigits +\"'\",\n                                                \"'\" + fTotalDigits + \"'\"\n                                            });\n                 throw new InvalidDatatypeValueException(msg);",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/DecimalDatatypeValidator.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "194a02a5fdec953409ecfcfe86038186502d43df",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/DecimalDatatypeValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/datatypes/DecimalDatatypeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/datatypes/DecimalDatatypeValidator.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -61,7 +61,6 @@\n import java.util.Enumeration;\n import java.util.Vector;\n import org.apache.xerces.util.XMLChar;\n-import org.apache.xerces.impl.v2.msg.XMLMessages;\n import org.apache.xerces.impl.v2.SchemaSymbols;\n import org.apache.xerces.impl.XMLErrorReporter;\n import org.apache.xerces.impl.v2.XSMessageFormatter;\n@@ -108,7 +107,7 @@ public short getWSFacet() {\n \n     /**\n      * Make sure that ID is unique in the document\n-     * \n+     *\n      * @param content Id value\n      * @param state   a structure that stores id's\n      * @return content\n@@ -152,7 +151,7 @@ private Object checkContent( String content, ValidationContext state, boolean as\n \n         return content;\n \n-    \n+\n     }\n \n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/IDDatatypeValidator.java",
                "status": "modified",
                "changes": 5,
                "deletions": 3,
                "sha": "8814aaab86157e6873f3cf7141a21ee38191427e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/IDDatatypeValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/datatypes/IDDatatypeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/datatypes/IDDatatypeValidator.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            },
            {
                "patch": "@@ -61,7 +61,6 @@\n import java.util.Enumeration;\n import java.util.Vector;\n import org.apache.xerces.util.XMLChar;\n-import org.apache.xerces.impl.v2.msg.XMLMessages;\n import org.apache.xerces.impl.v2.SchemaSymbols;\n import org.apache.xerces.impl.XMLErrorReporter;\n import org.apache.xerces.impl.v2.XSMessageFormatter;\n@@ -128,7 +127,7 @@ public short getWSFacet() {\n      * @see         org.apache.xerces.validators.datatype.InvalidDatatypeValueException\n      */\n     public Object validate(String content, ValidationContext state ) throws InvalidDatatypeValueException{\n-        \n+\n         return checkContent (content, state, false);\n \n     }",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/IDREFDatatypeValidator.java",
                "status": "modified",
                "changes": 3,
                "deletions": 2,
                "sha": "34fde9f553061d9328370e6d4470aef57785a65e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b11b0b374d7a225c2ca5e97950e4b7087db8854d/src/org/apache/xerces/impl/v2/datatypes/IDREFDatatypeValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/datatypes/IDREFDatatypeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/datatypes/IDREFDatatypeValidator.java?ref=b11b0b374d7a225c2ca5e97950e4b7087db8854d"
            }
        ],
        "bug_id": "xerces2-j_65",
        "parent": "https://github.com/apache/xerces2-j/commit/5b1036afdc18008e8e7614c05065a48c63aa52d0",
        "message": "various bug fixes: especially NPEs.\nAnd ID/IDREF DVs were modified so that we can use Ant to compile them.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317755 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/78425ade7397096e44cb8c798f79d5f4c1d70157",
        "file": [
            {
                "patch": "@@ -117,7 +117,7 @@\n     //\n     // Constants\n     //\n-    private static final boolean DEBUG = false;\n+    private static final boolean DEBUG = true;\n     // feature identifiers\n \n     /** Feature identifier: validation. */\n@@ -142,6 +142,11 @@\n     protected static final String ENTITY_RESOLVER =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_RESOLVER_PROPERTY;\n \n+\n+    // REVISIT: this is just a temporary solution for entity resolver\n+    //          while we are making a decision\n+    protected static final String ENTITY_MANAGER =\n+        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY;\n     // recognized features and properties\n \n     /** Recognized features. */\n@@ -179,6 +184,7 @@\n     /** Entity resolver */\n     protected XMLEntityResolver fEntityResolver;\n \n+\n     // handlers\n \n     /** Document handler. */\n@@ -809,17 +815,8 @@ void ownReset(XMLComponentManager componentManager)\n         fSymbolTable = symbolTable;\n \n         // get entity resolver. if there is no one, create a default\n-        // REVISIT: why there is no default one already?\n-        fEntityResolver = (XMLEntityResolver)componentManager.getProperty(ENTITY_RESOLVER);\n-        if (fEntityResolver == null)\n-            fEntityResolver = new XMLEntityResolver() {\n-                // REVISIT: what's the default dehavior\n-                public XMLInputSource resolveEntity(String publicId, String systemId,\n-                                                    String baseSystemId)\n-                    throws XNIException, IOException {\n-                    return new XMLInputSource(null, systemId, baseSystemId);\n-                }\n-            };\n+        // REVISIT: use default entity resolution from ENTITY MANAGER - temporary solution        \n+        fEntityResolver = (XMLEntityResolver)componentManager.getProperty(ENTITY_MANAGER);\n \n         // initialize namespace support\n         fNamespaceSupport.reset(fSymbolTable);\n@@ -1395,7 +1392,9 @@ void addDefaultAttributes(QName element, XMLAttributes attributes, XSAttributeGr\n         // (2) report error for PROHIBITED attrs that are present (V_TAGc)\n         // (3) add default attrs (FIXED and NOT_FIXED)\n         //\n-\n+        if (DEBUG) {\n+            System.out.println(\"addDefaultAttributes: \" + element);\n+        }\n         XSAttributeUse attrUses[] = attrGrp.getAttributeUses();\n         int useCount = attrUses.length;\n         XSAttributeUse currUse;\n@@ -1404,36 +1403,35 @@ void addDefaultAttributes(QName element, XMLAttributes attributes, XSAttributeGr\n         Object defaultValue;\n         boolean isSpecified;\n         QName attName;\n-\n         // for each attribute use\n         for (int i = 0; i < useCount; i++) {\n             currUse = attrUses[i];\n             currDecl = currUse.fAttrDecl;\n-\n             // get value constraint\n             constType = currUse.fConstraintType;\n             defaultValue = currUse.fDefault;\n             if (constType == XSAttributeDecl.NO_CONSTRAINT) {\n                 constType = currDecl.fConstraintType;\n                 defaultValue = currDecl.fDefault;\n             }\n-\n             // whether this attribute is specified\n             isSpecified = attributes.getValue(currDecl.fTargetNamespace, currDecl.fName) != null;\n-\n+            \n             // Element Locally Valid (Complex Type)\n             // 4 The {attribute declaration} of each attribute use in the {attribute uses} whose {required} is true matches one of the attribute information items in the element information item's [attributes] as per clause 3.1 above.\n             if (currUse.fUse == SchemaSymbols.USE_REQUIRED) {\n                 if (!isSpecified)\n                     reportSchemaError(\"cvc-complex-type.4\", new Object[]{element.rawname, currDecl.fName});\n             }\n-\n             // if the attribute is not specified, then apply the value constraint\n             if (!isSpecified && constType != XSAttributeDecl.NO_CONSTRAINT) {\n+                \n                 attName = new QName(null, currDecl.fName, currDecl.fName, currDecl.fTargetNamespace);\n                 //REVISIT: what's the proper attrType?\n-                attributes.addAttribute(attName, null, defaultValue.toString());\n+                attributes.addAttribute(attName, null, (defaultValue !=null)?defaultValue.toString():\"\");\n             }\n+\n+            \n         } // for\n     } // addDefaultAttributes\n ",
                "additions": 17,
                "raw_url": "https://github.com/apache/xerces2-j/raw/78425ade7397096e44cb8c798f79d5f4c1d70157/src/org/apache/xerces/impl/v2/SchemaValidator.java",
                "status": "modified",
                "changes": 36,
                "deletions": 19,
                "sha": "869669506bf2105afdccaf66305a81cf73b30a1c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/78425ade7397096e44cb8c798f79d5f4c1d70157/src/org/apache/xerces/impl/v2/SchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/v2/SchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/SchemaValidator.java?ref=78425ade7397096e44cb8c798f79d5f4c1d70157"
            }
        ],
        "bug_id": "xerces2-j_66",
        "parent": "https://github.com/apache/xerces2-j/commit/a8128d478bd4fe732cecc6d052044e702c4fda44",
        "message": "fix NPE in default attributes. Add temporary solution to resolve xsd file locations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317681 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/85ee88252e7472ca682808518786c65b817958e1",
        "file": [
            {
                "patch": "@@ -118,14 +118,14 @@ void setEffectiveContext (String [] namespaceDecls) {\n     String [] getEffectiveLocalContext() {\n         // the trick here is to recognize that all local contexts\n         // happen to start at fContext[2].\n-        int topLocalContext = (fCurrentContext >= 2) ? fContext[2]:-1;\n-        if (topLocalContext == -1) {\n+        int bottomLocalContext = (fCurrentContext >= 2) ? fContext[2]:-1;\n+        if (bottomLocalContext == -1) {\n             // no local decls!\n             return null;\n         }\n-        String [] returnVal = new String[fNamespaceSize-topLocalContext+1];\n-        System.arraycopy(fNamespace, 0, returnVal, 0,\n-                topLocalContext);\n+        String [] returnVal = new String[fNamespaceSize-bottomLocalContext];\n+        System.arraycopy(fNamespace, bottomLocalContext, returnVal, 0,\n+                fNamespaceSize-bottomLocalContext);\n         return returnVal;\n     } // getEffectiveLocalContext():String\n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/85ee88252e7472ca682808518786c65b817958e1/src/org/apache/xerces/impl/v2/SchemaNamespaceSupport.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "c5d31df7546452f2d22b1d4ea63715dbb45f66b2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/85ee88252e7472ca682808518786c65b817958e1/src/org/apache/xerces/impl/v2/SchemaNamespaceSupport.java",
                "filename": "src/org/apache/xerces/impl/v2/SchemaNamespaceSupport.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/SchemaNamespaceSupport.java?ref=85ee88252e7472ca682808518786c65b817958e1"
            },
            {
                "patch": "@@ -62,6 +62,7 @@\n import org.apache.xerces.util.DOMUtil;\n import org.apache.xerces.util.XInt;\n import org.apache.xerces.util.XIntPool;\n+import org.apache.xerces.util.SymbolTable;\n import org.apache.xerces.xni.QName;\n import  org.w3c.dom.Element;\n \n@@ -497,7 +498,8 @@ else if (ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_MIXED) {\n         return ret;\n     }\n \n-    void reset() {\n+    void reset(XMLErrorReporter reporter, SymbolTable symbolTable) {\n+        super.reset(reporter, symbolTable);\n         fDeferTraversingLocalElements = true;\n     } // reset()\n ",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/85ee88252e7472ca682808518786c65b817958e1/src/org/apache/xerces/impl/v2/XSDElementTraverser.java",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "c23c515ec3ca07e87090732e9e4f1355ebaafcb2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/85ee88252e7472ca682808518786c65b817958e1/src/org/apache/xerces/impl/v2/XSDElementTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDElementTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDElementTraverser.java?ref=85ee88252e7472ca682808518786c65b817958e1"
            }
        ],
        "bug_id": "xerces2-j_67",
        "parent": "https://github.com/apache/xerces2-j/commit/2566969d312f3461ab4900eb3ed9de72a9f59d09",
        "message": "fix a NPE in the SchemaNamespaceSupport class and make sure local element traversing is handled correctly when XSDHandler is reset.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317653 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/64f8cd8c5af52cced145b95ab9eba69cc1c37c0b",
        "file": [
            {
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999, 2000 The Apache Software Foundation.  All rights \n+ * Copyright (c) 1999, 2000 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Xerces\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -88,10 +88,13 @@ public  ListDatatypeValidator () {\n \n     }\n \n-    public ListDatatypeValidator ( DatatypeValidator base, Hashtable facets, \n+    public ListDatatypeValidator ( DatatypeValidator base, Hashtable facets,\n                                    boolean derivedByList, XMLErrorReporter reporter) {\n         fErrorReporter = reporter;\n-        fBaseValidator = base; // Set base type \n+        // REVISIT: need to use two fieds for base type and item type.\n+        // REVISIT: when derivedByList is true, we should set anySimpleType\n+        //          as the base type.\n+        fBaseValidator = base; // Set base type\n         try {\n \n             if (facets != null) {\n@@ -148,7 +151,7 @@ else if (key.equals(SchemaSymbols.ELT_PATTERN)) {\n                 if (((fFacetsDefined & DatatypeValidator.FACET_LENGTH ) != 0 )) {\n                     if (((fFacetsDefined & DatatypeValidator.FACET_MAXLENGTH ) != 0 )) {\n                         throw new InvalidDatatypeFacetException(\n-                                                               \"It is an error for both length and maxLength to be members of facets.\" );  \n+                                                               \"It is an error for both length and maxLength to be members of facets.\" );\n                     }\n                     else if (((fFacetsDefined & DatatypeValidator.FACET_MINLENGTH ) != 0 )) {\n                         throw new InvalidDatatypeFacetException(\n@@ -166,8 +169,8 @@ else if (((fFacetsDefined & DatatypeValidator.FACET_MINLENGTH ) != 0 )) {\n \n                 // check 4.3.5.c0 must: enumeration values from the value space of base\n                 //REVISIT: we should try either to delay it till validate() or\n-                //         store enumeration values in _value_space \n-                //         otherwise we end up creating and throwing objects  \n+                //         store enumeration values in _value_space\n+                //         otherwise we end up creating and throwing objects\n                 if (base != null &&\n                     (fFacetsDefined & DatatypeValidator.FACET_ENUMERATION) != 0 &&\n                     (fEnumeration != null)) {\n@@ -191,7 +194,7 @@ else if (((fFacetsDefined & DatatypeValidator.FACET_MINLENGTH ) != 0 )) {\n             }\n             fErrorReporter.reportError(XSMessageFormatter.SCHEMA_DOMAIN,\n                                        \"DatatypeFacetError\", new Object [] { ((Exception)e).getMessage()},\n-                                       XMLErrorReporter.SEVERITY_ERROR);                    \n+                                       XMLErrorReporter.SEVERITY_ERROR);\n         }\n     }\n \n@@ -200,7 +203,7 @@ else if (((fFacetsDefined & DatatypeValidator.FACET_MINLENGTH ) != 0 )) {\n \n     /**\n      * validate that a string is a W3C string type\n-     * \n+     *\n      * @param content A string containing the content to be validated\n      * @param list\n      * @exception throws InvalidDatatypeException if the content is\n@@ -214,14 +217,14 @@ public Object validate(String content, ValidationContext state)  throws InvalidD\n             //for state validators\n         }\n         else {\n-            checkContentEnum( content, state , null); \n+            checkContentEnum( content, state , null);\n         }\n         return null;\n     }\n \n \n     /**\n-     * \n+     *\n      * @return                          A Hashtable containing the facets\n      *         for this datatype.\n      */\n@@ -236,9 +239,9 @@ public int compare( String value1, String value2 ) {\n         // <list> datatype\n         StringTokenizer pList1 = new StringTokenizer( value1 );\n         StringTokenizer pList2 = new StringTokenizer( value2 );\n-        int numberOfTokens = pList1.countTokens();         \n+        int numberOfTokens = pList1.countTokens();\n         if (numberOfTokens < pList2.countTokens()) {\n-            return -1; \n+            return -1;\n         }\n         else if (numberOfTokens > pList2.countTokens()) {\n             return 1;\n@@ -277,8 +280,8 @@ public Object clone() throws CloneNotSupportedException  {\n     }\n \n     /**\n-     * validate that a content is valid against base datatype and facets (if any) \n-     * \n+     * validate that a content is valid against base datatype and facets (if any)\n+     *\n      * @param content A string containing the content to be validated\n      * @param state used with IDREF(s) datatypes\n      * @param enumeration enumeration facet\n@@ -292,7 +295,7 @@ protected void checkContentEnum( String content,  ValidationContext state, Vecto\n         //a redesign of Datatypes might help to reduce complexity of this validation\n \n         StringTokenizer parsedList = new StringTokenizer( content );\n-        int numberOfTokens = parsedList.countTokens();         \n+        int numberOfTokens = parsedList.countTokens();\n         if (fBaseValidator instanceof ListDatatypeValidator) {\n             //<simpleType name=\"fRestriction\"><restriction base=\"fList\">...</restriction></simpleType>\n             try {\n@@ -343,13 +346,13 @@ protected void checkContentEnum( String content,  ValidationContext state, Vecto\n             //<simpleType name=\"fList\"><list itemType=\"float\"/></simpleType>\n \n             if (enumeration !=null) {\n-                StringTokenizer eTokens = null; //temporary list of enumeration tokens \n+                StringTokenizer eTokens = null; //temporary list of enumeration tokens\n                 StringTokenizer cTokens = null; //list of content tokens\n                 String token= null;  //content token\n                 String eToken= null; //enumeration token\n                 boolean valid = true;\n \n-                int eSize = enumeration.size(); \n+                int eSize = enumeration.size();\n                 Vector enumTemp = new Vector(); //temporary vector to store enumeration token\n                 enumTemp.setSize(1);\n                 String currentEnumeration = null; //enum value: <enumeration value=\"1 2 3\"/>\n@@ -424,14 +427,14 @@ protected void checkContentEnum( String content,  ValidationContext state, Vecto\n     * @param enumeration facet\n     *\n     * @returns true if enumeration is subset of fEnumeration, false otherwise\n-    */    \n+    */\n     private boolean verifyEnum (Vector enum) {\n \n         /* REVISIT: won't work for list datatypes in some cases: */\n         if ((fFacetsDefined & DatatypeValidator.FACET_ENUMERATION ) != 0) {\n             for (Enumeration e = enum.elements() ; e.hasMoreElements() ;) {\n                 if (fEnumeration.contains(e.nextElement()) == false) {\n-                    return false;                             \n+                    return false;\n                 }\n             }\n         }",
                "additions": 25,
                "raw_url": "https://github.com/apache/xerces2-j/raw/64f8cd8c5af52cced145b95ab9eba69cc1c37c0b/src/org/apache/xerces/impl/dv/xs/ListDatatypeValidator.java",
                "status": "modified",
                "changes": 47,
                "deletions": 22,
                "sha": "ce3281aab59eca15d385a7579c05d7b82970d2ac",
                "blob_url": "https://github.com/apache/xerces2-j/blob/64f8cd8c5af52cced145b95ab9eba69cc1c37c0b/src/org/apache/xerces/impl/dv/xs/ListDatatypeValidator.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/ListDatatypeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/ListDatatypeValidator.java?ref=64f8cd8c5af52cced145b95ab9eba69cc1c37c0b"
            },
            {
                "patch": "@@ -143,9 +143,10 @@ public UnionDatatypeValidator ( Vector base, XMLErrorReporter reporter)  {\n         fErrorReporter = reporter;\n         if ( base !=null ) {\n             fValidatorsSize = base.size();\n-            fBaseValidators = new Vector(fValidatorsSize);\n             fBaseValidators = base;\n-\n+            // REVISIT: should set anySimpleType as the base type\n+            if (fValidatorsSize > 0)\n+                fBaseValidator = (DatatypeValidator)base.elementAt(0);\n         }\n \n     }\n@@ -184,7 +185,7 @@ public Hashtable getFacets(){\n     }\n \n     public int compare( String value1, String value2 ){\n-        if (fBaseValidator != null) {\n+        if (fBaseValidator instanceof UnionDatatypeValidator) {\n             return this.fBaseValidator.compare(value1, value2);\n         }\n         //union datatype\n@@ -261,7 +262,7 @@ protected void checkContentEnum( String content,  ValidationContext state, boole\n         int index = -1; //number of validators\n         boolean valid=false;\n         DatatypeValidator currentDV = null;\n-        if (fBaseValidator !=null) {  //restriction  of union datatype\n+        if (fBaseValidator instanceof UnionDatatypeValidator) {  //restriction  of union datatype\n             if ( (fFacetsDefined & DatatypeValidator.FACET_PATTERN ) != 0 ) {\n                 if ( fRegex == null || fRegex.matches( content) == false )\n                     throw new InvalidDatatypeValueException(\"Value '\"+content+",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/64f8cd8c5af52cced145b95ab9eba69cc1c37c0b/src/org/apache/xerces/impl/dv/xs/UnionDatatypeValidator.java",
                "status": "modified",
                "changes": 9,
                "deletions": 4,
                "sha": "2282c81665392658d11d1fd76a6f86d6c597ceb5",
                "blob_url": "https://github.com/apache/xerces2-j/blob/64f8cd8c5af52cced145b95ab9eba69cc1c37c0b/src/org/apache/xerces/impl/dv/xs/UnionDatatypeValidator.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/UnionDatatypeValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/UnionDatatypeValidator.java?ref=64f8cd8c5af52cced145b95ab9eba69cc1c37c0b"
            }
        ],
        "bug_id": "xerces2-j_68",
        "parent": "https://github.com/apache/xerces2-j/commit/01e9115388301d9528f40521d5e0fe825b5670f0",
        "message": "Union types should always have a base type. Otherwise we'll get an NPE.\nThe fix is not good: we should set anySimpleType as the base, but this requires\na relatively big change, which is not desired before the release.\nNow I just set the base type to the first member in the list, to avoid the NPE.\nWe need to revisit it after the release. (The same applies to list types).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317833 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/60697c3db7e640a090be94027b7b5e35be8de0e4",
        "file": [
            {
                "patch": "@@ -38,22 +38,6 @@\n import org.apache.xerces.util.SymbolHash;\n import org.apache.xerces.util.XMLSymbols;\n \n-/**\n- * @author elitani\n- *\n- * To change this generated comment edit the template variable \"typecomment\":\n- * Window>Preferences>Java>Templates.\n- * To enable and disable the creation of type comments go to\n- * Window>Preferences>Java>Code Generation.\n- */\n-/**\n- * @author elitani\n- *\n- * To change this generated comment edit the template variable \"typecomment\":\n- * Window>Preferences>Java>Templates.\n- * To enable and disable the creation of type comments go to\n- * Window>Preferences>Java>Code Generation.\n- */\n /**\n  * Implements XSModel:  a read-only interface that represents an XML Schema,\n  * which could be components from different namespaces.\n@@ -451,8 +435,10 @@ public synchronized XSObjectList getAnnotations() {\n         int currPos = 0;\n         for (int i = 0; i < fGrammarCount; i++) {\n             SchemaGrammar currGrammar = fGrammarList[i];\n-            System.arraycopy(currGrammar.fAnnotations, 0, annotations, currPos, currGrammar.fNumAnnotations);\n-            currPos += currGrammar.fNumAnnotations;\n+            if (currGrammar.fNumAnnotations > 0) {\n+                System.arraycopy(currGrammar.fAnnotations, 0, annotations, currPos, currGrammar.fNumAnnotations);\n+                currPos += currGrammar.fNumAnnotations;\n+            }\n         }\n         fAnnotations = new XSObjectListImpl(annotations, annotations.length);\n         return fAnnotations;",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/60697c3db7e640a090be94027b7b5e35be8de0e4/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "status": "modified",
                "changes": 22,
                "deletions": 18,
                "sha": "e584864e146f4e0cf7aa168b14ddab41114099c5",
                "blob_url": "https://github.com/apache/xerces2-j/blob/60697c3db7e640a090be94027b7b5e35be8de0e4/src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSModelImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSModelImpl.java?ref=60697c3db7e640a090be94027b7b5e35be8de0e4"
            }
        ],
        "bug_id": "xerces2-j_69",
        "parent": "https://github.com/apache/xerces2-j/commit/296729aa6b9317eb54898b6806511c04bce747e1",
        "message": "Fixing Jira Bug #968:\nhttp://nagoya.apache.org/jira/browse/XERCESJ-968\n\nIf no annotations exist for a SchemaGrammar the array\nof annotations is never created. For such schema docs\nwe were passing null to System.arrayCopy which caused\na NullPointerException to be thrown. This is now fixed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319923 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/3c2f837dbca259201119f32736fd75ef679d2586",
        "file": [
            {
                "patch": "@@ -2788,7 +2788,7 @@ XMLString processElementContent(QName element) {\n                 // 5.1.1 If the actual type definition is a local type definition then the canonical lexical representation of the {value constraint} value must be a valid default for the actual type definition as defined in Element Default Valid (Immediate) (3.3.6).\n                 if (fCurrentType != fCurrentElemDecl.fType) {\n                     //REVISIT:we should pass ValidatedInfo here.\n-                    if (XSConstraints.ElementDefaultValidImmediate(fCurrentType, fCurrentElemDecl.fDefault, fState4XsiType, null) == null)\n+                    if (XSConstraints.ElementDefaultValidImmediate(fCurrentType, fCurrentElemDecl.fDefault.normalizedValue, fState4XsiType, null) == null)\n                         reportSchemaError(\"cvc-elt.5.1.1\", new Object[]{element.rawname, fCurrentType.getName(), fCurrentElemDecl.fDefault.normalizedValue});\n                 }\n                 // 5.1.2 The element information item with the canonical lexical representation of the {value constraint} value used as its normalized value must be valid with respect to the actual type definition as defined by Element Locally Valid (Type) (3.3.4).\n@@ -2828,7 +2828,10 @@ else if (ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_SIMPLE) {\n                     }\n                     else if (fCurrentType.getTypeCategory() == XSTypeDecl.SIMPLE_TYPE) {\n                         XSSimpleType sType = (XSSimpleType)fCurrentType;\n-                        if (!sType.isEqual(actualValue, fCurrentElemDecl.fDefault.actualValue))\n+                        if (actualValue != null &&\n+                            !sType.isEqual(actualValue, fCurrentElemDecl.fDefault.actualValue))\n+                            // REVISIT: the spec didn't mention this case: fixed\n+                            //          value with simple type\n                             reportSchemaError(\"cvc-elt.5.2.2.2.2\", new Object[]{element.rawname, content, fCurrentElemDecl.fDefault.normalizedValue});\n                     }\n                 }",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/3c2f837dbca259201119f32736fd75ef679d2586/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "status": "modified",
                "changes": 7,
                "deletions": 2,
                "sha": "9e27695a2ee169bc400980a8461de999ef2fbb0f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/3c2f837dbca259201119f32736fd75ef679d2586/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java?ref=3c2f837dbca259201119f32736fd75ef679d2586"
            }
        ],
        "bug_id": "xerces2-j_70",
        "parent": "https://github.com/apache/xerces2-j/commit/e0bfb69e179c0403fdb2e167ad0a248e12df0440",
        "message": "Fixing 2 bugs:\n1. Potential ClassCastException: when validating a valud constraint against\nan xsi:type, we should use the String value (instead of the actual value) for\nvalidation.\n2. Potential NullPointerException: when there was an error validating a String\nvalue, we shouldn't try to use the actual value (null in this case) for further\nconstraint checking.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318443 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/7769bca7a8519cedea8689d5c5cfa424b28f767c",
        "file": [
            {
                "patch": "@@ -2027,63 +2027,61 @@ void parseSchemaLocation(String schemaLocationStr, Hashtable locationUriPairs){\n         }\n \n     }// parseSchemaLocaltion(String, Hashtable)\n-    private void resolveSchemaGrammar( String loc, String uri) throws Exception{\n+    private void resolveSchemaGrammar( String loc, String uri) throws Exception {\n \n         SchemaGrammar grammar = (SchemaGrammar) fGrammarResolver.getGrammar(uri);\n \n-        DOMParser parser = new DOMParser() {\n-            public void ignorableWhitespace(char ch[], int start, int length) {}\n-            public void ignorableWhitespace(int dataIdx) {}\n-        };\n-        parser.setEntityResolver( new Resolver() );\n-        parser.setErrorHandler(  new ErrorHandler() );\n+        if (grammar == null) {\n+            DOMParser parser = new DOMParser();\n+            parser.setEntityResolver( new Resolver() );\n+            parser.setErrorHandler(  new ErrorHandler() );\n \n-        try {\n-            parser.setFeature(\"http://xml.org/sax/features/validation\", false);\n-            parser.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n-            parser.setFeature(\"http://apache.org/xml/features/dom/defer-node-expansion\", false);\n-        }catch(  org.xml.sax.SAXNotRecognizedException e ) {\n-            e.printStackTrace();\n-        }catch( org.xml.sax.SAXNotSupportedException e ) {\n-            e.printStackTrace();\n-        }\n+            try {\n+                parser.setFeature(\"http://xml.org/sax/features/validation\", false);\n+                parser.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n+                parser.setFeature(\"http://apache.org/xml/features/dom/defer-node-expansion\", false);\n+            }catch(  org.xml.sax.SAXNotRecognizedException e ) {\n+                e.printStackTrace();\n+            }catch( org.xml.sax.SAXNotSupportedException e ) {\n+                e.printStackTrace();\n+            }\n \n-        // expand it before passing it to the parser\n-        loc = fEntityHandler.expandSystemId(loc);\n-        try {\n-            parser.parse( loc );\n-        }catch( IOException e ) {\n-            e.printStackTrace();\n-        }catch( SAXException e ) {\n-            //e.printStackTrace();\n-            reportRecoverableXMLError(167, 144, e.getMessage() );\n-        }\n+            // expand it before passing it to the parser\n+            loc = fEntityHandler.expandSystemId(loc);\n+            try {\n+                parser.parse( loc );\n+            }catch( IOException e ) {\n+                e.printStackTrace();\n+            }catch( SAXException e ) {\n+                //e.printStackTrace();\n+                reportRecoverableXMLError(167, 144, e.getMessage() );\n+            }\n \n-        Document     document   = parser.getDocument(); //Our Grammar\n+            Document     document   = parser.getDocument(); //Our Grammar\n \n-        TraverseSchema tst = null;\n-        try {\n-            if (DEBUG_SCHEMA_VALIDATION) {\n-                System.out.println(\"I am geting the Schema Document\");\n-            }\n+            TraverseSchema tst = null;\n+            try {\n+                if (DEBUG_SCHEMA_VALIDATION) {\n+                    System.out.println(\"I am geting the Schema Document\");\n+                }\n \n-            Element root   = document.getDocumentElement();// This is what we pass to TraverserSchema\n-            if (root == null) {\n-                reportRecoverableXMLError(167, 144, \"Can't get back Schema document's root element :\" + loc); \n-            }\n-            else {\n-                if (uri == null || !uri.equals(root.getAttribute(SchemaSymbols.ATT_TARGETNAMESPACE)) ) {\n-                    reportRecoverableXMLError(167,144, \"Schema in \" + loc + \" has a different target namespace \" + \n-                                       \"from the one specified in the instance document :\" + uri); \n+                Element root   = document.getDocumentElement();// This is what we pass to TraverserSchema\n+                if (root == null) {\n+                    reportRecoverableXMLError(167, 144, \"Can't get back Schema document's root element :\" + loc); \n                 }\n-                if (grammar == null) {\n+                else {\n+                    if (uri == null || !uri.equals(root.getAttribute(SchemaSymbols.ATT_TARGETNAMESPACE)) ) {\n+                        reportRecoverableXMLError(167,144, \"Schema in \" + loc + \" has a different target namespace \" + \n+                                           \"from the one specified in the instance document :\" + uri); \n+                    }\n                     grammar = new SchemaGrammar();\n+                    grammar.setGrammarDocument(document);\n+                    tst = new TraverseSchema( root, fStringPool, (SchemaGrammar)grammar, fGrammarResolver, fErrorReporter, loc);\n                 }\n-                tst = new TraverseSchema( root, fStringPool, (SchemaGrammar)grammar, fGrammarResolver, fErrorReporter, loc);\n             }\n-        }\n-        catch (Exception e) {\n-            e.printStackTrace(System.err);\n+            catch (Exception e) {\n+                e.printStackTrace(System.err);\n+            }\n         }\n \n     }",
                "additions": 43,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7769bca7a8519cedea8689d5c5cfa424b28f767c/src/org/apache/xerces/validators/common/XMLValidator.java",
                "status": "modified",
                "changes": 88,
                "deletions": 45,
                "sha": "3da1be7eb77aaff13adb2e0fc212d1f7824f71c7",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7769bca7a8519cedea8689d5c5cfa424b28f767c/src/org/apache/xerces/validators/common/XMLValidator.java",
                "filename": "src/org/apache/xerces/validators/common/XMLValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/validators/common/XMLValidator.java?ref=7769bca7a8519cedea8689d5c5cfa424b28f767c"
            }
        ],
        "bug_id": "xerces2-j_71",
        "parent": "https://github.com/apache/xerces2-j/commit/67d115de4bd91c44c1f6d16ba9e6cd3ee67e7c5b",
        "message": "Fixed bug for grammar access when the instance document contains\na Schema grammar. This caused a NullPointerException.\n\nThe feature \"http://apache.org/xml/features/domx/grammar-access\"\ncopies the grammar document into the DocumentType node (see notes\nin the features docs) and the grammar document was never being set\non the schema grammar.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@315777 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/f4fe82e7ef5c7608b771db9fe2f4ea8a955ff5f0",
        "file": [
            {
                "patch": "@@ -149,12 +149,12 @@ protected Reader getReader(XMLInputSource source) throws IOException {\n                 stream = new BufferedInputStream(urlCon.getInputStream());\n                 \n                 // content type will be string like \"text/xml; charset=UTF-8\" or \"text/xml\"\n-                String rawContentType = urlCon.getContentType();\n+                final String rawContentType = urlCon.getContentType();\n                 \n                 // text/xml and application/xml offer only one optional parameter\n-                int index = (rawContentType != null) ? rawContentType.indexOf(';') : -1;\n+                final int index = (rawContentType != null) ? rawContentType.indexOf(';') : -1;\n \n-                String contentType = null;\n+                final String contentType;\n                 String charset = null;\n                 if (index != -1) {\n                     // this should be something like \"text/xml\"\n@@ -181,7 +181,7 @@ protected Reader getReader(XMLInputSource source) throws IOException {\n                     }\n                 }\n                 else {\n-                    contentType = rawContentType.trim();\n+                    contentType = (rawContentType != null) ? rawContentType.trim() : \"\";\n                 }\n \n                 String detectedEncoding = null;",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/f4fe82e7ef5c7608b771db9fe2f4ea8a955ff5f0/src/org/apache/xerces/xinclude/XIncludeTextReader.java",
                "status": "modified",
                "changes": 8,
                "deletions": 4,
                "sha": "7431904677390ab670056bf57e176a22500a0184",
                "blob_url": "https://github.com/apache/xerces2-j/blob/f4fe82e7ef5c7608b771db9fe2f4ea8a955ff5f0/src/org/apache/xerces/xinclude/XIncludeTextReader.java",
                "filename": "src/org/apache/xerces/xinclude/XIncludeTextReader.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xinclude/XIncludeTextReader.java?ref=f4fe82e7ef5c7608b771db9fe2f4ea8a955ff5f0"
            }
        ],
        "bug_id": "xerces2-j_72",
        "parent": "https://github.com/apache/xerces2-j/commit/24d7c5308d0c7749f351cb0a2d64c34e1230ce7a",
        "message": "Fixing JIRA Issue #1611: https://issues.apache.org/jira/browse/XERCESJ-1611. Adding a null check to guard against an NPE that can occur when the content-type returned from the URLconnection is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@1478179 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/76faee19ed5cafbea33b44a2ea748c4bc06c04f7",
        "file": [
            {
                "patch": "@@ -25,6 +25,7 @@\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Document;\n import org.w3c.dom.DocumentType;\n+import org.w3c.dom.Element;\n import org.w3c.dom.NamedNodeMap;\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n@@ -1421,7 +1422,11 @@ public boolean isDefaultNamespace(String namespaceURI){\n             return false;\n         }\n         case Node.DOCUMENT_NODE:{\n-                return((NodeImpl)((Document)this).getDocumentElement()).isDefaultNamespace(namespaceURI);\n+                Element docElement = ((Document)this).getDocumentElement();\n+                if (docElement != null) {\n+                    return docElement.isDefaultNamespace(namespaceURI);\n+                }\n+                return false;\n             }\n \n         case Node.ENTITY_NODE :\n@@ -1475,7 +1480,11 @@ public String lookupPrefix(String namespaceURI){\n                 return lookupNamespacePrefix(namespaceURI, (ElementImpl)this);\n             }\n         case Node.DOCUMENT_NODE:{\n-                return((NodeImpl)((Document)this).getDocumentElement()).lookupPrefix(namespaceURI);\n+                Element docElement = ((Document)this).getDocumentElement();\n+                if (docElement != null) {\n+                    return docElement.lookupPrefix(namespaceURI);\n+                }\n+                return null;\n             }\n \n         case Node.ENTITY_NODE :\n@@ -1559,8 +1568,12 @@ public String lookupNamespaceURI(String specifiedPrefix) {\n \n \n             }\n-        case Node.DOCUMENT_NODE : {   \n-                return((NodeImpl)((Document)this).getDocumentElement()).lookupNamespaceURI(specifiedPrefix);\n+        case Node.DOCUMENT_NODE : {\n+                Element docElement = ((Document)this).getDocumentElement();\n+                if (docElement != null) {\n+                    return docElement.lookupNamespaceURI(specifiedPrefix);\n+                }\n+                return null;\n             }\n         case Node.ENTITY_NODE :\n         case Node.NOTATION_NODE:",
                "additions": 17,
                "raw_url": "https://github.com/apache/xerces2-j/raw/76faee19ed5cafbea33b44a2ea748c4bc06c04f7/src/org/apache/xerces/dom/NodeImpl.java",
                "status": "modified",
                "changes": 21,
                "deletions": 4,
                "sha": "8753140b17eb9289eeb4f9432ed543cee0d7f8ee",
                "blob_url": "https://github.com/apache/xerces2-j/blob/76faee19ed5cafbea33b44a2ea748c4bc06c04f7/src/org/apache/xerces/dom/NodeImpl.java",
                "filename": "src/org/apache/xerces/dom/NodeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/NodeImpl.java?ref=76faee19ed5cafbea33b44a2ea748c4bc06c04f7"
            }
        ],
        "bug_id": "xerces2-j_73",
        "parent": "https://github.com/apache/xerces2-j/commit/df04bfcf0d890007007b7b745a60d419603568c0",
        "message": "JIRA Issue #1582: https://issues.apache.org/jira/browse/XERCESJ-1582. Fixing NPEs which could occur in each of the Node prefix / namespace query methods if the document element is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@1380453 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4115a62f73b7da2e3f854c9576c384260416e1e0",
        "file": [
            {
                "patch": "@@ -262,15 +262,23 @@ public void startDocument(XMLLocator locator, String encoding,\n                 if (locator != null) {\n                     fDocumentHandler.setDocumentLocator(new LocatorProxy(locator));\n                 }\n-                fDocumentHandler.startDocument();\n+                // The application may have set the DocumentHandler to null\n+                // within setDocumentLocator() so we need to check again.\n+                if (fDocumentHandler != null) {\n+                    fDocumentHandler.startDocument();\n+                }\n             }\n \n             // SAX2\n             if (fContentHandler != null) {\n                 if (locator != null) {\n                     fContentHandler.setDocumentLocator(new LocatorProxy(locator));\n                 }\n-                fContentHandler.startDocument();\n+                // The application may have set the ContentHandler to null\n+                // within setDocumentLocator() so we need to check again.\n+                if (fContentHandler != null) {\n+                    fContentHandler.startDocument();\n+                }  \n             }\n         }\n         catch (SAXException e) {",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4115a62f73b7da2e3f854c9576c384260416e1e0/src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "status": "modified",
                "changes": 12,
                "deletions": 2,
                "sha": "5ddce8616a6eb5e4d248faa645cdd48002ff19a4",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4115a62f73b7da2e3f854c9576c384260416e1e0/src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractSAXParser.java?ref=4115a62f73b7da2e3f854c9576c384260416e1e0"
            }
        ],
        "bug_id": "xerces2-j_74",
        "parent": "https://github.com/apache/xerces2-j/commit/84e111c4dd0537f7ff268c1027956b02cbcbada1",
        "message": "Fixing an NPE. The application may have set the ContentHandler / DocumentHandler to null within setDocumentLocator() so we need to check for null again before calling startDocument().\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@965245 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/0df32768beedf6778651639c24d234d5b70f3b6e",
        "file": [
            {
                "patch": "@@ -573,6 +573,9 @@ private static void organizeParts(\n \n         int idx = tokens.length();\n         for (int i = len - 1; i >= 0; i--) {\n+            if (parts[i] == null) {\n+                throw new IllegalArgumentException(whole);\n+            }\n             int nidx =\n                 tokens.lastIndexOf(\n                     parts[i].charAt(parts[i].length() - 1),",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0df32768beedf6778651639c24d234d5b70f3b6e/src/org/apache/xerces/jaxp/datatype/DurationImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "589ef44d4506bccaa3a2523f604c881b2fd40405",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0df32768beedf6778651639c24d234d5b70f3b6e/src/org/apache/xerces/jaxp/datatype/DurationImpl.java",
                "filename": "src/org/apache/xerces/jaxp/datatype/DurationImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/jaxp/datatype/DurationImpl.java?ref=0df32768beedf6778651639c24d234d5b70f3b6e"
            }
        ],
        "bug_id": "xerces2-j_75",
        "parent": "https://github.com/apache/xerces2-j/commit/d8d7d8daa53cd31f0765edeb62da2606090bc5c3",
        "message": "Fixing JIRA Bug #1416: http://issues.apache.org/jira/browse/XERCESJ-1416. An NPE could occur when the value of the duration is invalid. Check for this condition and throw the correct exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@906803 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/572e87947ffb763e5e6cc9faa5c2c222e14b1020",
        "file": [
            {
                "patch": "@@ -186,7 +186,7 @@ public Attr getAttributeNode(String name) {\n     \n     public String getAttributeNS(String namespaceURI, String localName) {\n         for (int i=0; i<attrs.length; i++) {\n-            if (attrs[i].getLocalName().equals(localName) && attrs[i].getNamespaceURI().equals(namespaceURI)) {\n+            if (attrs[i].getLocalName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {\n                 return attrs[i].getValue();\n             }\n         }\n@@ -196,7 +196,7 @@ public String getAttributeNS(String namespaceURI, String localName) {\n     \n     public Attr getAttributeNodeNS(String namespaceURI, String localName) {\n         for (int i=0; i<attrs.length; i++) {\n-            if (attrs[i].getName().equals(localName) && attrs[i].getNamespaceURI().equals(namespaceURI)) {\n+            if (attrs[i].getName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {\n                 return attrs[i];\n             }\n         }\n@@ -216,7 +216,7 @@ public boolean hasAttribute(String name) {\n     \n     public boolean hasAttributeNS(String namespaceURI, String localName) {\n         for (int i=0; i<attrs.length; i++) {\n-            if (attrs[i].getName().equals(localName) && attrs[i].getNamespaceURI().equals(namespaceURI)) {\n+            if (attrs[i].getName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {\n                 return true;\n             }\n         }\n@@ -255,4 +255,17 @@ public String getAnnotation() {\n     public String getSyntheticAnnotation() {\n         return fSyntheticAnnotation;\n     }\n+    \n+    /**\n+     * Compares two namespace URIs with an extra case for null entries\n+     */\n+    private static boolean nsEquals(String nsURI_1, String nsURI_2) {\n+        if (nsURI_1 == null) {\n+            return (nsURI_2 == null);\n+        }\n+        else {\n+            return nsURI_1.equals(nsURI_2);\n+        }\n+    }\n+    \n }",
                "additions": 16,
                "raw_url": "https://github.com/apache/xerces2-j/raw/572e87947ffb763e5e6cc9faa5c2c222e14b1020/src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "status": "modified",
                "changes": 19,
                "deletions": 3,
                "sha": "97a7236fd0ffbb7c4a767e8fcc648baa75a92bf8",
                "blob_url": "https://github.com/apache/xerces2-j/blob/572e87947ffb763e5e6cc9faa5c2c222e14b1020/src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/ElementImpl.java?ref=572e87947ffb763e5e6cc9faa5c2c222e14b1020"
            }
        ],
        "bug_id": "xerces2-j_76",
        "parent": "https://github.com/apache/xerces2-j/commit/9ae541706a3d269ad88fbf77834731d951327929",
        "message": "Fixing JIRA Issue #1374: http://issues.apache.org/jira/browse/XERCESJ-1374. Fixing potential NPEs when comparing namespace URIs in the Schema DOM. Patch thanks to Arthur De Magalhaes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@779171 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/9ae541706a3d269ad88fbf77834731d951327929",
        "file": [
            {
                "patch": "@@ -338,7 +338,8 @@ private void addNamespaceDeclarations(final int prefixCount) {\n                 rawname = XMLSymbols.PREFIX_XMLNS;\n             }\n             fAttributeQName.setValues(prefix, localpart, rawname, NamespaceContext.XMLNS_URI);\n-            fAttributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, nsURI);\n+            fAttributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, \n+                    (nsURI != null) ? nsURI : XMLSymbols.EMPTY_STRING);\n         }\n     }\n     ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/9ae541706a3d269ad88fbf77834731d951327929/src/org/apache/xerces/impl/xs/traversers/SchemaContentHandler.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "4ef9b962f75d59d863efcd22c382b22903e8e9c2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/9ae541706a3d269ad88fbf77834731d951327929/src/org/apache/xerces/impl/xs/traversers/SchemaContentHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/SchemaContentHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/SchemaContentHandler.java?ref=9ae541706a3d269ad88fbf77834731d951327929"
            }
        ],
        "bug_id": "xerces2-j_77",
        "parent": "https://github.com/apache/xerces2-j/commit/dac45445b2e6c79c94702d2ef9fd3f0afa3f9e81",
        "message": "Fixing JIRA Issue #1375: https://issues.apache.org/jira/browse/XERCESJ-1375. Fixing an NPE when a namespace is undeclared. Same issue that was addressed in SVN rev 694593. Patch thanks to Arthur De Magalhaes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@778956 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/c912c3d02bda218769d6d10e8f01076d455c7543",
        "file": [
            {
                "patch": "@@ -108,7 +108,7 @@ public XSObject itemByName(String namespace, String localName) {\n             if (isEqual(namespace, fNamespaces[i])) {\n                 XSTypeDefinition type = (XSTypeDefinition)fMaps[i].get(localName);\n                 // only return it if it matches the required type\n-                if (type.getTypeCategory() == fType) {\n+                if (type != null && type.getTypeCategory() == fType) {\n                     return type;\n                 }\n                 return null;",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/c912c3d02bda218769d6d10e8f01076d455c7543/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "7c26c77178189aec3c78683d5814659796da0b7f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/c912c3d02bda218769d6d10e8f01076d455c7543/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "filename": "src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/util/XSNamedMap4Types.java?ref=c912c3d02bda218769d6d10e8f01076d455c7543"
            }
        ],
        "bug_id": "xerces2-j_78",
        "parent": "https://github.com/apache/xerces2-j/commit/44f3524f364ef2497b71421612052f94bcba4dfd",
        "message": "Fixing JIRA Issue #1348:\nhttp://issues.apache.org/jira/browse/XERCESJ-1348\n\nitemByName() could fail with an NPE. We need to check that \nthe SymbolHash returned a non-null value before checking \nwhether the type categories match.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@726359 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/ee55caf9c610907f6b30dca2aa7a99bca5cddd6e",
        "file": [
            {
                "patch": "@@ -58,12 +58,14 @@\n import org.w3c.dom.DOMException;\n import org.w3c.dom.DOMStringList;\n import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n import org.w3c.dom.Node;\n import org.w3c.dom.ls.LSException;\n import org.w3c.dom.ls.LSInput;\n import org.w3c.dom.ls.LSParser;\n import org.w3c.dom.ls.LSParserFilter;\n import org.w3c.dom.ls.LSResourceResolver;\n+import org.w3c.dom.traversal.NodeFilter;\n \n /**\n  * This is Xerces DOM Builder class. It uses the abstract DOM\n@@ -125,22 +127,23 @@\n \n     /** Include namespace declaration attributes in the document. **/\n     protected boolean fNamespaceDeclarations = true;\n-    \n+\n     // REVISIT: this value should be null by default and should be set during creation of\n     //          LSParser\n     protected String fSchemaType = null;\n \n     protected boolean fBusy = false;\n-    \n+\n     private boolean abortNow = false;\n-    \n+\n     private Thread currentThread;\n \n     protected final static boolean DEBUG = false;\n \n     private String fSchemaLocation = null;\n-\tprivate DOMStringList fRecognizedParameters;\n-    \n+    private DOMStringList fRecognizedParameters;\n+\n+    private boolean fNullFilterInUse = false;\n     private AbortHandler abortHandler = null;\n \n     //\n@@ -287,6 +290,10 @@ public void reset () {\n             fConfiguration.getFeature(Constants.DOM_NAMESPACE_DECLARATIONS);\n                 \n         // DOM Filter\n+        if (fNullFilterInUse) {\n+            fDOMFilter = null;\n+            fNullFilterInUse = false;\n+        }\n         if (fSkippedElemStack != null) {\n             fSkippedElemStack.removeAllElements();\n         }\n@@ -304,33 +311,42 @@ public DOMConfiguration getDomConfig (){\n         return this;\n     }\n \n-\n     /**\n-     *  When the application provides a filter, the parser will call out to\n-     * the filter at the completion of the construction of each\n-     * <code>Element</code> node. The filter implementation can choose to\n-     * remove the element from the document being constructed (unless the\n-     * element is the document element) or to terminate the parse early. If\n-     * the document is being validated when it's loaded the validation\n-     * happens before the filter is called.\n+     * When a filter is provided, the implementation will call out to the \n+     * filter as it is constructing the DOM tree structure. The filter can \n+     * choose to remove elements from the document being constructed, or to \n+     * terminate the parsing early. \n+     * <br> The filter is invoked after the operations requested by the \n+     * <code>DOMConfiguration</code> parameters have been applied. For \n+     * example, if \"<a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-validate'>\n+     * validate</a>\" is set to <code>true</code>, the validation is done before invoking the \n+     * filter. \n      */\n     public LSParserFilter getFilter () {\n-        return fDOMFilter;\n+        return !fNullFilterInUse ? fDOMFilter : null;\n     }\n \n     /**\n-     *  When the application provides a filter, the parser will call out to\n-     * the filter at the completion of the construction of each\n-     * <code>Element</code> node. The filter implementation can choose to\n-     * remove the element from the document being constructed (unless the\n-     * element is the document element) or to terminate the parse early. If\n-     * the document is being validated when it's loaded the validation\n-     * happens before the filter is called.\n+     * When a filter is provided, the implementation will call out to the \n+     * filter as it is constructing the DOM tree structure. The filter can \n+     * choose to remove elements from the document being constructed, or to \n+     * terminate the parsing early. \n+     * <br> The filter is invoked after the operations requested by the \n+     * <code>DOMConfiguration</code> parameters have been applied. For \n+     * example, if \"<a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-validate'>\n+     * validate</a>\" is set to <code>true</code>, the validation is done before invoking the \n+     * filter. \n      */\n     public void setFilter (LSParserFilter filter) {\n-        fDOMFilter = filter;\n+        if (fBusy && filter == null && fDOMFilter != null) {\n+            fNullFilterInUse = true;\n+            fDOMFilter = NullLSParserFilter.INSTANCE;\n+        }\n+        else {\n+            fDOMFilter = filter;\n+        }\n         if (fSkippedElemStack == null) {\n-            fSkippedElemStack = new Stack ();\n+            fSkippedElemStack = new Stack();\n         }\n     }\n \n@@ -1117,6 +1133,20 @@ public void startElement (QName element, XMLAttributes attributes, Augmentations\n         super.startElement(element, attributes, augs);\n     }\n     \n+    static final class NullLSParserFilter implements LSParserFilter {\n+        static final NullLSParserFilter INSTANCE = new NullLSParserFilter();\n+        private NullLSParserFilter() {}\n+        public short acceptNode(Node nodeArg) {\n+            return LSParserFilter.FILTER_ACCEPT;\n+        }\n+        public int getWhatToShow() {\n+            return NodeFilter.SHOW_ALL;\n+        }\n+        public short startElement(Element elementArg) {\n+            return LSParserFilter.FILTER_ACCEPT;\n+        }\n+    }\n+    \n     private static final class AbortHandler implements XMLDocumentHandler, XMLDTDHandler, XMLDTDContentModelHandler {\n \n         private XMLDocumentSource documentSource;",
                "additions": 53,
                "raw_url": "https://github.com/apache/xerces2-j/raw/ee55caf9c610907f6b30dca2aa7a99bca5cddd6e/src/org/apache/xerces/parsers/DOMParserImpl.java",
                "status": "modified",
                "changes": 76,
                "deletions": 23,
                "sha": "b3eeaac522047105324098d0540a23aa0992fe8b",
                "blob_url": "https://github.com/apache/xerces2-j/blob/ee55caf9c610907f6b30dca2aa7a99bca5cddd6e/src/org/apache/xerces/parsers/DOMParserImpl.java",
                "filename": "src/org/apache/xerces/parsers/DOMParserImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DOMParserImpl.java?ref=ee55caf9c610907f6b30dca2aa7a99bca5cddd6e"
            }
        ],
        "bug_id": "xerces2-j_79",
        "parent": "https://github.com/apache/xerces2-j/commit/29072f5a3c7c9ac77132662526330e182b7aa05f",
        "message": "Protect against NPEs and other failures which could occur\nif the application sets the LSParserFilter to null in the\nmiddle of a parse.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@710002 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/ad0481a7a1fb65d57faeb324ff2f6ee6143d2186",
        "file": [
            {
                "patch": "@@ -1026,7 +1026,8 @@ private boolean parserSettingsUpdated(XMLComponentManager componentManager) {\n     private void initGrammarBucket(){\n         if(fGrammarPool != null) {\n             Grammar [] initialGrammars = fGrammarPool.retrieveInitialGrammarSet(XMLGrammarDescription.XML_SCHEMA);\n-            for (int i = 0; i < initialGrammars.length; i++) {\n+            final int length = (initialGrammars != null) ? initialGrammars.length : 0;\n+            for (int i = 0; i < length; ++i) {\n                 // put this grammar into the bucket, along with grammars\n                 // imported by it (directly or indirectly)\n                 if (!fGrammarBucket.putGrammar((SchemaGrammar)(initialGrammars[i]), true)) {",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/ad0481a7a1fb65d57faeb324ff2f6ee6143d2186/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "8cc539ca59bfd8fb292a50a66fe4a88f43e872aa",
                "blob_url": "https://github.com/apache/xerces2-j/blob/ad0481a7a1fb65d57faeb324ff2f6ee6143d2186/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaLoader.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaLoader.java?ref=ad0481a7a1fb65d57faeb324ff2f6ee6143d2186"
            }
        ],
        "bug_id": "xerces2-j_80",
        "parent": "https://github.com/apache/xerces2-j/commit/796f0511e8bc27fd8aa0c0b0e7ce208b4af6f1f8",
        "message": "Fixing a potential NPE. The Javadoc for XMLGrammarPool.retrieveInitialGrammarSet() doesn't\nexplicitly disallow null as a return value. It's possible that some user implementations will\nreturn null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@693488 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/796f0511e8bc27fd8aa0c0b0e7ce208b4af6f1f8",
        "file": [
            {
                "patch": "@@ -667,9 +667,10 @@ public void startDocument(XMLLocator locator, String encoding,\n \n         // call handlers\n         // get initial grammars\n-        if(fGrammarPool != null) {\n+        if (fGrammarPool != null) {\n             Grammar [] grammars = fGrammarPool.retrieveInitialGrammarSet(XMLGrammarDescription.XML_DTD);\n-            for(int i = 0; i<grammars.length; i++) {\n+            final int length = (grammars != null) ? grammars.length : 0;\n+            for (int i = 0; i < length; ++i) {\n                 fGrammarBucket.putGrammar((DTDGrammar)grammars[i]);\n             }\n         }",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/796f0511e8bc27fd8aa0c0b0e7ce208b4af6f1f8/src/org/apache/xerces/impl/dtd/XMLDTDValidator.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "33d1010dbbad9248a9f4195e87118037ad81b6a0",
                "blob_url": "https://github.com/apache/xerces2-j/blob/796f0511e8bc27fd8aa0c0b0e7ce208b4af6f1f8/src/org/apache/xerces/impl/dtd/XMLDTDValidator.java",
                "filename": "src/org/apache/xerces/impl/dtd/XMLDTDValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dtd/XMLDTDValidator.java?ref=796f0511e8bc27fd8aa0c0b0e7ce208b4af6f1f8"
            }
        ],
        "bug_id": "xerces2-j_81",
        "parent": "https://github.com/apache/xerces2-j/commit/5cad124a20feef6eda3e59a9b5b7ce06b2e0a99f",
        "message": "Fixing a potential NPE. The Javadoc for XMLGrammarPool.retrieveInitialGrammarSet() doesn't\nexplicitly disallow null as a return value. It's possible that some user implementations will\nreturn null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@693486 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/6979f3e6b8c0c9ecdfddbc25ebf6dded3cbd4d12",
        "file": [
            {
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.xerces.util.SymbolTable;\n import org.apache.xerces.util.XMLChar;\n import org.apache.xerces.util.XMLStringBuffer;\n+import org.apache.xerces.util.XMLSymbols;\n import org.apache.xerces.xni.Augmentations;\n import org.apache.xerces.xni.XMLDTDContentModelHandler;\n import org.apache.xerces.xni.XMLDTDHandler;\n@@ -1264,7 +1265,12 @@ else if (fEntityScanner.skipString(\"NOTATION\")) {\n                 String aName = fEntityScanner.scanName();\n                 if (aName == null) {\n                     reportFatalError(\"MSG_NAME_REQUIRED_IN_NOTATIONTYPE\",\n-                                     new Object[]{elName, atName}); \n+                                     new Object[]{elName, atName});\n+                    c = skipInvalidEnumerationValue();\n+                    if (c == '|') {\n+                        continue;\n+                    }\n+                    break;\n                 }\n                 ensureEnumerationSize(fEnumerationCount + 1);\n                 fEnumeration[fEnumerationCount++] = aName;\n@@ -1293,6 +1299,11 @@ else if (fEntityScanner.skipString(\"NOTATION\")) {\n                 if (token == null) {\n                     reportFatalError(\"MSG_NMTOKEN_REQUIRED_IN_ENUMERATION\",\n                                      new Object[]{elName, atName});\n+                    c = skipInvalidEnumerationValue();\n+                    if (c == '|') {\n+                        continue;\n+                    }\n+                    break;\n                 }\n                 ensureEnumerationSize(fEnumerationCount + 1);\n                 fEnumeration[fEnumerationCount++] = token;\n@@ -2101,5 +2112,16 @@ private void init() {\n         // set starting state\n         setScannerState(SCANNER_STATE_TEXT_DECL);\n     }\n+    \n+    private int skipInvalidEnumerationValue() throws IOException {\n+        int c;\n+        do {\n+            c = fEntityScanner.scanChar();\n+        } \n+        while (c != '|' && c != ')');\n+        ensureEnumerationSize(fEnumerationCount + 1);\n+        fEnumeration[fEnumerationCount++] = XMLSymbols.EMPTY_STRING;\n+        return c;\n+    }\n \n } // class XMLDTDScannerImpl",
                "additions": 23,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6979f3e6b8c0c9ecdfddbc25ebf6dded3cbd4d12/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "status": "modified",
                "changes": 24,
                "deletions": 1,
                "sha": "b36ac0073bca3cdca16f98bb61edf5aafb43530e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6979f3e6b8c0c9ecdfddbc25ebf6dded3cbd4d12/src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLDTDScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLDTDScannerImpl.java?ref=6979f3e6b8c0c9ecdfddbc25ebf6dded3cbd4d12"
            }
        ],
        "bug_id": "xerces2-j_82",
        "parent": "https://github.com/apache/xerces2-j/commit/1be8a6fc02f146f3191d2dd17d84c5ae9c86cab9",
        "message": "Fixing JIRA Issue #1193:\nhttp://issues.apache.org/jira/browse/XERCESJ-1193\n\nIf the \"continue-after-fatal-error\" feature is enabled skip over invalid\nenumeration values. This prevents the parser from entering an infinite\nloop or throwing an NPE in a later code path.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@454439 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/9a6ab106fb81dd43744a0ccc0ecd6a669186d55c",
        "file": [
            {
                "patch": "@@ -1411,22 +1411,28 @@ else if ( (fBase.fFacetsDefined & FACET_MINLENGTH) != 0 ) {\n \t\t}\n \t\t// inherit pattern\n \t\tif ( (fBase.fFacetsDefined & FACET_PATTERN) != 0 ) {\n-\t\t\tif ((fFacetsDefined & FACET_PATTERN) == 0) {\n-\t\t\t\tfPattern = fBase.fPattern;\n-\t\t\t\tfPatternStr = fBase.fPatternStr;\n-\t\t\t\tfFacetsDefined |= FACET_PATTERN;\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tfor (int i = fBase.fPattern.size()-1; i >= 0; i--) {\n-\t\t\t\t\tfPattern.addElement(fBase.fPattern.elementAt(i));\n-\t\t\t\t\tfPatternStr.addElement(fBase.fPatternStr.elementAt(i));\n-\t\t\t\t}\n-\t\t\t\tif (fBase.patternAnnotations != null){\n-\t\t\t\t\tfor (int i = fBase.patternAnnotations.getLength()-1;i>=0;i--){\n-\t\t\t\t\t\tpatternAnnotations.add(fBase.patternAnnotations.item(i));\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\t    if ((fFacetsDefined & FACET_PATTERN) == 0) {\n+\t\t        fFacetsDefined |= FACET_PATTERN;\n+\t\t        fPattern = fBase.fPattern;\n+\t\t        fPatternStr = fBase.fPatternStr;\n+\t\t        patternAnnotations = fBase.patternAnnotations;\n+\t\t    }\n+\t\t    else {\n+\t\t        for (int i = fBase.fPattern.size()-1; i >= 0; --i) {\n+\t\t            fPattern.addElement(fBase.fPattern.elementAt(i));\n+\t\t            fPatternStr.addElement(fBase.fPatternStr.elementAt(i));\n+\t\t        }\n+\t\t        if (fBase.patternAnnotations != null) {\n+\t\t            if (patternAnnotations != null) {\n+\t\t                for (int i = fBase.patternAnnotations.getLength()-1; i >= 0; --i) {\n+\t\t                    patternAnnotations.add(fBase.patternAnnotations.item(i));\n+\t\t                }\n+\t\t            }\n+\t\t            else {\n+\t\t                patternAnnotations = fBase.patternAnnotations;\n+\t\t            }\n+\t\t        }\n+\t\t    }\n \t\t}\n \t\t// inherit whiteSpace\n \t\tif ( (fFacetsDefined & FACET_WHITESPACE) == 0 &&  (fBase.fFacetsDefined & FACET_WHITESPACE) != 0 ) {",
                "additions": 22,
                "raw_url": "https://github.com/apache/xerces2-j/raw/9a6ab106fb81dd43744a0ccc0ecd6a669186d55c/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "status": "modified",
                "changes": 38,
                "deletions": 16,
                "sha": "de39120c5b475225794784c4aa58f2aef9dcbd6c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/9a6ab106fb81dd43744a0ccc0ecd6a669186d55c/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java?ref=9a6ab106fb81dd43744a0ccc0ecd6a669186d55c"
            }
        ],
        "bug_id": "xerces2-j_83",
        "parent": "https://github.com/apache/xerces2-j/commit/6fb9cca6c4fdccd6ea0d322df6984d6a21ad71ba",
        "message": "Fixing JIRA Issue #1159:\nhttp://issues.apache.org/jira/browse/XERCESJ-1159\n\nAn NPE was being thrown when copying annotations from the base\ntype to a pattern facet with no annotations. Should be fixed now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@396203 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/ea2f0156ef8b614da4c9c3e0360961f3bdf232b0",
        "file": [
            {
                "patch": "@@ -375,6 +375,9 @@ void startAnnotation(QName elemName, XMLAttributes attributes,\n         while(currPrefixes.hasMoreElements()) {\n             String prefix = (String)currPrefixes.nextElement();\n             String uri = namespaceContext.getURI(prefix);\n+            if (uri == null) {\n+                uri = XMLSymbols.EMPTY_STRING;\n+            }\n             if (!namespaces.contains(prefix)) {\n                 // have to declare this one\n                 if(prefix == XMLSymbols.EMPTY_STRING) {",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/ea2f0156ef8b614da4c9c3e0360961f3bdf232b0/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "e20f51a77862d8a88005a6048810b5cd7c892850",
                "blob_url": "https://github.com/apache/xerces2-j/blob/ea2f0156ef8b614da4c9c3e0360961f3bdf232b0/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/SchemaDOM.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/SchemaDOM.java?ref=ea2f0156ef8b614da4c9c3e0360961f3bdf232b0"
            }
        ],
        "bug_id": "xerces2-j_84",
        "parent": "https://github.com/apache/xerces2-j/commit/8391b5ffc62b39ceb2fc9604276498ecd0720915",
        "message": "Fixing JIRA Issue #1088:\nhttp://issues.apache.org/jira/browse/XERCESJ-1088\n\nAn NPE was being thrown from processAttValue for a null namespace URI.\nShould be fixed now. We now pass in the empty string if the URI is null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320550 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/dff54f1e6f7fc130c07c22c137b1f4149336c2ab",
        "file": [
            {
                "patch": "@@ -25,7 +25,6 @@\n import org.apache.xerces.impl.xs.XSMessageFormatter;\n import org.apache.xerces.util.XMLAttributesImpl;\n import org.apache.xerces.util.XMLChar;\n-import org.apache.xerces.util.XMLSymbols;\n import org.apache.xerces.xni.Augmentations;\n import org.apache.xerces.xni.NamespaceContext;\n import org.apache.xerces.xni.QName;\n@@ -225,16 +224,18 @@ public void startElement(QName element, XMLAttributes attributes, Augmentations\n         if (fAnnotationDepth == -1) {\n             if (element.uri == SchemaSymbols.URI_SCHEMAFORSCHEMA &&\n                     element.localpart == SchemaSymbols.ELT_ANNOTATION) {\n-                if(fGenerateSyntheticAnnotation) {\n-                    if(fSawAnnotation.size() > 0) fSawAnnotation.pop();\n+                if (fGenerateSyntheticAnnotation) {\n+                    if (fSawAnnotation.size() > 0) {\n+                        fSawAnnotation.pop();\n+                    }\n                     fSawAnnotation.push(Boolean.TRUE);\n                 }\n                 fAnnotationDepth = fDepth;\n                 schemaDOM.startAnnotation(element, attributes, fNamespaceContext);\n             } \n-            else if(fGenerateSyntheticAnnotation) {\n+            else if (fGenerateSyntheticAnnotation) {\n                 fSawAnnotation.push(Boolean.FALSE);\n-                fHasNonSchemaAttributes.push(hasNonSchemaAttributes(attributes) ? Boolean.TRUE : Boolean.FALSE);\n+                fHasNonSchemaAttributes.push(hasNonSchemaAttributes(element, attributes) ? Boolean.TRUE : Boolean.FALSE);\n             }\n         } else if(fDepth == fAnnotationDepth+1) {\n             fInnerAnnotationDepth = fDepth;\n@@ -265,7 +266,8 @@ else if(fGenerateSyntheticAnnotation) {\n     public void emptyElement(QName element, XMLAttributes attributes, Augmentations augs)\n     throws XNIException {\n         \n-        if(fGenerateSyntheticAnnotation && element.uri == SchemaSymbols.URI_SCHEMAFORSCHEMA && hasNonSchemaAttributes(attributes)) { \n+        if (fGenerateSyntheticAnnotation && fAnnotationDepth == -1 && \n+                element.uri == SchemaSymbols.URI_SCHEMAFORSCHEMA && hasNonSchemaAttributes(element, attributes)) { \n             \n             schemaDOM.startElement(element, attributes,\n                     fLocator.getLineNumber(),\n@@ -374,11 +376,16 @@ public void endElement(QName element, Augmentations augs) throws XNIException {\n      * @param attributes\n      * @return\n      */\n-    private boolean hasNonSchemaAttributes(XMLAttributes attributes) {\n-        for(int i = 0;i < attributes.getLength(); i++) {\n+    private boolean hasNonSchemaAttributes(QName element, XMLAttributes attributes) {\n+        final int length = attributes.getLength();\n+        for (int i = 0; i < length; ++i) {\n             String uri = attributes.getURI(i);\n-            if(uri != null && uri != SchemaSymbols.URI_SCHEMAFORSCHEMA && uri != SchemaSymbols.URI_XSI && uri != XMLSymbols.PREFIX_XMLNS && uri != XMLSymbols.PREFIX_XMLNS)\n+            if (uri != null && uri != SchemaSymbols.URI_SCHEMAFORSCHEMA && \n+                    uri != NamespaceContext.XMLNS_URI &&\n+                    !(uri == NamespaceContext.XML_URI && \n+                            attributes.getQName(i) == SchemaSymbols.ATT_XML_LANG && element.localpart == SchemaSymbols.ELT_SCHEMA)) {\n                 return true;\n+            }\n         }\n         return false;\n     }",
                "additions": 16,
                "raw_url": "https://github.com/apache/xerces2-j/raw/dff54f1e6f7fc130c07c22c137b1f4149336c2ab/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "status": "modified",
                "changes": 25,
                "deletions": 9,
                "sha": "7e936bd87587b8395a8ac8061a9c49fc896412db",
                "blob_url": "https://github.com/apache/xerces2-j/blob/dff54f1e6f7fc130c07c22c137b1f4149336c2ab/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/SchemaDOMParser.java?ref=dff54f1e6f7fc130c07c22c137b1f4149336c2ab"
            }
        ],
        "bug_id": "xerces2-j_85",
        "parent": "https://github.com/apache/xerces2-j/commit/d5a37c177cca69b65b3d24b70a7e60a0262d05c1",
        "message": "Fixing an NPE and a bug with detecting non-schema attributes related\nto the new generate-synthetic-annotations feature. On an empty\nelement we need to check that we're not currently processing an\nannotation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320181 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/6c7a16c3202d0e50e4cd05449e9a5a9963f80e1b",
        "file": [
            {
                "patch": "@@ -136,9 +136,10 @@ public Object clone() {\n     /** Returns the hashcode for this object. */\n     public int hashCode() {\n         if (uri != null) {\n-            return uri.hashCode() + localpart.hashCode();\n+            return uri.hashCode() + \n+                ((localpart != null) ? localpart.hashCode() : 0);\n         }\n-        return rawname.hashCode();\n+        return (rawname != null) ? rawname.hashCode() : 0;\n     } // hashCode():int\n \n     /** Returns true if the two objects are equal. */",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6c7a16c3202d0e50e4cd05449e9a5a9963f80e1b/src/org/apache/xerces/xni/QName.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "026fe65ed55f458d82c2ffc2a4ce6af49db1272c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6c7a16c3202d0e50e4cd05449e9a5a9963f80e1b/src/org/apache/xerces/xni/QName.java",
                "filename": "src/org/apache/xerces/xni/QName.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xni/QName.java?ref=6c7a16c3202d0e50e4cd05449e9a5a9963f80e1b"
            }
        ],
        "bug_id": "xerces2-j_86",
        "parent": "https://github.com/apache/xerces2-j/commit/e036d10deff4170f7a875bb74ec78974f611d459",
        "message": "Fixing Jira Bug #997:\nhttp://nagoya.apache.org/jira/browse/XERCESJ-997\n\nFixing an NPE which may occur in the hashCode method\nwhen either the localpart or rawname fields are null. This\nseems to only be a problem for external users of this class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320004 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/4f1f37879b7a561e45b03a1fb1c1cc450534cf35",
        "file": [
            {
                "patch": "@@ -415,7 +415,7 @@ protected Node normalizeNode (Node node){\n                     // The list of children #text -> &ent;\n                     // and entity has a first child as a text\n                     // we should not advance\n-                    if (prevSibling !=null && prevSibling.getNodeType() == Node.TEXT_NODE && \n+                    if (prevSibling != null && next != null && prevSibling.getNodeType() == Node.TEXT_NODE && \n                         next.getNodeType() == Node.TEXT_NODE) {\n                         return prevSibling;  // Don't advance                          \n                     }",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/4f1f37879b7a561e45b03a1fb1c1cc450534cf35/src/org/apache/xerces/dom/DOMNormalizer.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "5d37582db13529dc73d67dc6ac59b0e79f4be4c9",
                "blob_url": "https://github.com/apache/xerces2-j/blob/4f1f37879b7a561e45b03a1fb1c1cc450534cf35/src/org/apache/xerces/dom/DOMNormalizer.java",
                "filename": "src/org/apache/xerces/dom/DOMNormalizer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DOMNormalizer.java?ref=4f1f37879b7a561e45b03a1fb1c1cc450534cf35"
            }
        ],
        "bug_id": "xerces2-j_87",
        "parent": "https://github.com/apache/xerces2-j/commit/215db2e697a349eb9188e1220ed84513ddc5d043",
        "message": "Fixing Bug #28022:\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=28022\n\nFixing a NPE in DOMNormalizer which manifests when expanding\nan entity reference with no children. This is fixed thanks to the\npatch from Neil Delima.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319873 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/0070797a88903b0afdc19a329b6cf11d6511a259",
        "file": [
            {
                "patch": "@@ -377,18 +377,21 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n         fEntityScanner.skipSpaces();\n \n         // content\n-        int oldLen = attributes.getLength();\n+        int attrIndex;\n \n         if (fBindNamespaces) {\n+            attrIndex = attributes.getLength();\n             attributes.addAttributeNS(\n                 fAttributeQName,\n                 XMLSymbols.fCDATASymbol,\n                 null);\n         } else {\n-            attributes.addAttribute(\n-                fAttributeQName,\n-                XMLSymbols.fCDATASymbol,\n-                null);\n+            int oldLen = attributes.getLength();\n+            attrIndex =\n+                attributes.addAttribute(\n+                    fAttributeQName,\n+                    XMLSymbols.fCDATASymbol,\n+                    null);\n \n             // WFC: Unique Att Spec\n             if (oldLen == attributes.getLength()) {\n@@ -409,13 +412,13 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n             fTempString2,\n             fAttributeQName.rawname,\n             attributes,\n-            oldLen,\n+            attrIndex,\n             isVC,\n             fCurrentElement.rawname);\n         String value = fTempString.toString();\n-        attributes.setValue(oldLen, value);\n-        attributes.setNonNormalizedValue(oldLen, fTempString2.toString());\n-        attributes.setSpecified(oldLen, true);\n+        attributes.setValue(attrIndex, value);\n+        attributes.setNonNormalizedValue(attrIndex, fTempString2.toString());\n+        attributes.setSpecified(attrIndex, true);\n \n         // record namespace declarations if any.\n         if (fBindNamespaces) {\n@@ -487,14 +490,14 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n                     uri.length() != 0 ? uri : null);\n                 // bind namespace attribute to a namespace\n                 attributes.setURI(\n-                    oldLen,\n+                    attrIndex,\n                     fNamespaceContext.getURI(XMLSymbols.PREFIX_XMLNS));\n \n             } else {\n                 // attempt to bind attribute\n                 if (fAttributeQName.prefix != null) {\n                     attributes.setURI(\n-                        oldLen,\n+                        attrIndex,\n                         fNamespaceContext.getURI(fAttributeQName.prefix));\n                 }\n             }",
                "additions": 14,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XML11NSDocumentScannerImpl.java",
                "status": "modified",
                "changes": 25,
                "deletions": 11,
                "sha": "4e08dbb3a673a53612de04895ffdeafc559f3dd6",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XML11NSDocumentScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XML11NSDocumentScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XML11NSDocumentScannerImpl.java?ref=0070797a88903b0afdc19a329b6cf11d6511a259"
            },
            {
                "patch": "@@ -853,7 +853,7 @@ protected void scanAttribute(XMLAttributes attributes)\n \n         // content\n         int oldLen = attributes.getLength();\n-        attributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, null);\n+        int attrIndex = attributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, null);\n \n         // WFC: Unique Att Spec\n         if (oldLen == attributes.getLength()) {\n@@ -865,10 +865,10 @@ protected void scanAttribute(XMLAttributes attributes)\n         boolean isVC =  fHasExternalDTD && !fStandalone;        \n         scanAttributeValue(fTempString, fTempString2,\n                            fAttributeQName.rawname, attributes,\n-                           oldLen, isVC,fCurrentElement.rawname);\n-        attributes.setValue(oldLen, fTempString.toString());\n-        attributes.setNonNormalizedValue(oldLen, fTempString2.toString());\n-        attributes.setSpecified(oldLen, true);\n+                           attrIndex, isVC,fCurrentElement.rawname);\n+        attributes.setValue(attrIndex, fTempString.toString());\n+        attributes.setNonNormalizedValue(attrIndex, fTempString2.toString());\n+        attributes.setSpecified(attrIndex, true);\n \n         if (DEBUG_CONTENT_SCANNING) System.out.println(\"<<< scanAttribute()\");\n     } // scanAttribute(XMLAttributes)",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XMLDocumentFragmentScannerImpl.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "1f42cf3f57df0440f0f3a8df67fc64a941f2e03d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XMLDocumentFragmentScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLDocumentFragmentScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLDocumentFragmentScannerImpl.java?ref=0070797a88903b0afdc19a329b6cf11d6511a259"
            },
            {
                "patch": "@@ -387,13 +387,15 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n         fEntityScanner.skipSpaces();\n \n         // content\n-        int oldLen = attributes.getLength();\n-        \n+        int attrIndex;\n+       \n         if (fBindNamespaces) {\n+            attrIndex = attributes.getLength();\n             attributes.addAttributeNS(fAttributeQName, XMLSymbols.fCDATASymbol, null);\n         }\n         else {\n-            attributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, null);\n+            int oldLen = attributes.getLength();\n+            attrIndex = attributes.addAttribute(fAttributeQName, XMLSymbols.fCDATASymbol, null);\n         \t\n             // WFC: Unique Att Spec\n             if (oldLen == attributes.getLength()) {\n@@ -409,11 +411,11 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n         // REVISIT: it seems that this function should not take attributes, and length\n         scanAttributeValue(this.fTempString, fTempString2,\n                            fAttributeQName.rawname, attributes,\n-                           oldLen, isVC,fCurrentElement.rawname);\n+                           attrIndex, isVC,fCurrentElement.rawname);\n         String value = fTempString.toString();\n-        attributes.setValue(oldLen, value);\n-        attributes.setNonNormalizedValue(oldLen, fTempString2.toString());\n-        attributes.setSpecified(oldLen, true);\n+        attributes.setValue(attrIndex, value);\n+        attributes.setNonNormalizedValue(attrIndex, fTempString2.toString());\n+        attributes.setSpecified(attrIndex, true);\n \n         // record namespace declarations if any.\n         if (fBindNamespaces) {\n@@ -479,13 +481,13 @@ protected void scanAttribute(XMLAttributesImpl attributes)\n                 // declare prefix in context\n                 fNamespaceContext.declarePrefix(prefix, uri.length() != 0 ? uri : null);\n                 // bind namespace attribute to a namespace\n-                attributes.setURI(oldLen, fNamespaceContext.getURI(XMLSymbols.PREFIX_XMLNS));\n+                attributes.setURI(attrIndex, fNamespaceContext.getURI(XMLSymbols.PREFIX_XMLNS));\n \n             }\n             else {\n                 // attempt to bind attribute\n                 if (fAttributeQName.prefix != null) {\n-                    attributes.setURI(oldLen, fNamespaceContext.getURI(fAttributeQName.prefix));\n+                    attributes.setURI(attrIndex, fNamespaceContext.getURI(fAttributeQName.prefix));\n                 }\n             }\n         }",
                "additions": 11,
                "raw_url": "https://github.com/apache/xerces2-j/raw/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XMLNSDocumentScannerImpl.java",
                "status": "modified",
                "changes": 20,
                "deletions": 9,
                "sha": "435c1e6b2288fbbc8873df140c5cfd977a33f4e3",
                "blob_url": "https://github.com/apache/xerces2-j/blob/0070797a88903b0afdc19a329b6cf11d6511a259/src/org/apache/xerces/impl/XMLNSDocumentScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLNSDocumentScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLNSDocumentScannerImpl.java?ref=0070797a88903b0afdc19a329b6cf11d6511a259"
            }
        ],
        "bug_id": "xerces2-j_88",
        "parent": "https://github.com/apache/xerces2-j/commit/746773c29439674de548054e40b52657fe2939ce",
        "message": "Fixing potential AIOOBEs and NPEs that can occur\nwhen the continue-after-fatal-error feature is\nset to true, and an attribute specification contains\nduplicate names.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319427 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/06cfee408427bbe7e51ac8807f1737a02f0ac23e",
        "file": [
            {
                "patch": "@@ -585,7 +585,7 @@ public short getConstraintType() {\n      * disallowed namespaces.\n      */\n     public StringList getNsConstraintList() {\n-        return new StringListImpl(fNamespaceList, fNamespaceList.length);\n+        return new StringListImpl(fNamespaceList, fNamespaceList == null ? 0 : fNamespaceList.length);\n     }\n \n     /**",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "1aef996fc9d3cb93fbf14780f7b36f2d0b479237",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSWildcardDecl.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            },
            {
                "patch": "@@ -210,7 +210,7 @@ public Attr getAttributeNode(String name) {\n \n     public String getAttributeNS(String namespaceURI, String localName) {\n         for (int i=0; i<attrs.length; i++) {\n-            if (attrs[i].getName().equals(localName) && attrs[i].getNamespaceURI().equals(namespaceURI)) {\n+            if (attrs[i].getLocalName().equals(localName) && attrs[i].getNamespaceURI().equals(namespaceURI)) {\n                 return attrs[i].getValue();\n             }\n         }",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "3048e7493e8286bf6b5e79da6c88cd5169ed80ad",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/opti/ElementImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/opti/ElementImpl.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001, 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -109,7 +109,7 @@\n \n     /**\n      * [process contents]: one of skip, lax or strict. Valid constants values \n-     * are: <code>SKIP_PROCESS, LAX_PROCESS, STRING_PROCESS </code>. \n+     * are: <code>PC_SKIP, PC_LAX, PC_STRICT</code>. \n      */\n     public short getProcessContents();\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/psvi/XSWildcard.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "3c193b645f97f3d869f836c8984e5756ea72eca9",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/psvi/XSWildcard.java",
                "filename": "src/org/apache/xerces/impl/xs/psvi/XSWildcard.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/psvi/XSWildcard.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            },
            {
                "patch": "@@ -1108,6 +1108,11 @@ public void reset(SymbolTable symbolTable) {\n             String attrName = sattr.getName();\n             String attrVal = DOMUtil.getValue(sattr);\n \n+            // we don't want to add namespace declarations to the non-schema attributes\n+            if (attrName.startsWith(\"xmlns\")) {\n+                continue;\n+            }\n+            \n             // skip anything starts with x/X m/M l/L\n             // add this to the list of \"non-schema\" attributes\n             if (attrName.toLowerCase(Locale.ENGLISH).startsWith(\"xml\")) {",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/traversers/XSAttributeChecker.java",
                "status": "modified",
                "changes": 5,
                "deletions": 0,
                "sha": "1cbcacdca19d48d26fa86ec15f759693e4a48c82",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/traversers/XSAttributeChecker.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSAttributeChecker.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSAttributeChecker.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            },
            {
                "patch": "@@ -182,15 +182,30 @@ XSAnnotationImpl traverseAnnotationDecl(Element annotationDecl, Object[] parentA\n             // Vector should contain rawname value pairs\n             int i=0;\n             while(i<annotationLocalAttrs.size()) {\n-                localStrBuffer.append((String)annotationLocalAttrs.elementAt(i++))\n+                String rawname = (String)annotationLocalAttrs.elementAt(i++);\n+                int colonIndex = rawname.indexOf(':');\n+                String prefix, localpart;\n+                if (colonIndex == -1) {\n+                    prefix = \"\";\n+                    localpart = rawname;\n+                }\n+                else {\n+                    prefix = rawname.substring(0,colonIndex);\n+                    localpart = rawname.substring(colonIndex+1);\n+                }\n+                String uri = schemaDoc.fNamespaceSupport.getURI(prefix.intern());\n+                if (!annotationDecl.getAttributeNS(uri, localpart).equals(\"\")) {\n+                    i++; // skip the next value, too\n+                    continue;\n+                }\n+                localStrBuffer.append(rawname)\n                     .append(\"=\\\"\");\n                 String value = (String)annotationLocalAttrs.elementAt(i++);\n                 // search for pesky \"s and >s within attr value:\n                 value = processAttValue(value);\n                 localStrBuffer.append(value)\n-                    .append(\"\\\"\");\n+                    .append(\"\\\" \");\n             }\n-            localStrBuffer.append(\" \");\n             // and now splice it into place; immediately after the annotation token, for simplicity's sake\n             StringBuffer contentBuffer = new StringBuffer(contents.length() + localStrBuffer.length());\n             int annotationTokenEnd = contents.indexOf(SchemaSymbols.ELT_ANNOTATION);",
                "additions": 18,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/traversers/XSDAbstractTraverser.java",
                "status": "modified",
                "changes": 21,
                "deletions": 3,
                "sha": "84c21cee13cb7a9d4e7c4d1bedbaf51e89772542",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/traversers/XSDAbstractTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDAbstractTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDAbstractTraverser.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            },
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002,2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -79,7 +79,7 @@\n \n     public StringListImpl(Vector v) {\n         fVector = v;        \n-        fLength = v.size();\n+        fLength = (v == null) ? 0 : v.size();\n     }\n \n     /**",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/util/StringListImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "6055bfeb09d58c115d777d58c38e73ef15cea3aa",
                "blob_url": "https://github.com/apache/xerces2-j/blob/06cfee408427bbe7e51ac8807f1737a02f0ac23e/src/org/apache/xerces/impl/xs/util/StringListImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/util/StringListImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/util/StringListImpl.java?ref=06cfee408427bbe7e51ac8807f1737a02f0ac23e"
            }
        ],
        "bug_id": "xerces2-j_89",
        "parent": "https://github.com/apache/xerces2-j/commit/dd3374a88c3eea8fc2aa494d991808d2f49b5383",
        "message": "fixes for various small bugs (potential NPEs, problems in certain situations with well-formedness of annotation strings) in our PSVI/schema component model support.  Patches by Peter McCracken.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319317 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/841a543458d7b19286dbcc32207d8978ccf195f5",
        "file": [
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  \n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  \n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -99,22 +99,16 @@ public void reset(XMLComponentManager manager) {\n         super.reset(manager);\n     } //reset(XMLComponentManager)\n \n-    // returns whether a character is space according to the\n-    // version of XML this validator supports.\n-    protected boolean isSpace(int c) {\n-        return XML11Char.isXML11Space(c);\n-    } // isSpace(int):  boolean\n-\n     protected void init() {\n         if(fValidation || fDynamicValidation) {\n             super.init();\n             // now overwrite some entries in parent:\n \n             try {\n                 fValID       = fDatatypeValidatorFactory.getBuiltInDV(\"XML11ID\");\n-                fValIDRef    = fDatatypeValidatorFactory.getBuiltInDV(\"XML11IDREFS\");\n+                fValIDRef    = fDatatypeValidatorFactory.getBuiltInDV(\"XML11IDREF\");\n                 fValIDRefs   = fDatatypeValidatorFactory.getBuiltInDV(\"XML11IDREFS\");\n-                fValNMTOKEN  = fDatatypeValidatorFactory.getBuiltInDV(\"XML11NMTOKENSymbol\");\n+                fValNMTOKEN  = fDatatypeValidatorFactory.getBuiltInDV(\"XML11NMTOKEN\");\n                 fValNMTOKENS = fDatatypeValidatorFactory.getBuiltInDV(\"XML11NMTOKENS\");\n \n             }",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/841a543458d7b19286dbcc32207d8978ccf195f5/src/org/apache/xerces/impl/dtd/XML11DTDValidator.java",
                "status": "modified",
                "changes": 12,
                "deletions": 9,
                "sha": "faac2964c7fc1a9b600d9ff4044bf004bd58824c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/841a543458d7b19286dbcc32207d8978ccf195f5/src/org/apache/xerces/impl/dtd/XML11DTDValidator.java",
                "filename": "src/org/apache/xerces/impl/dtd/XML11DTDValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dtd/XML11DTDValidator.java?ref=841a543458d7b19286dbcc32207d8978ccf195f5"
            }
        ],
        "bug_id": "xerces2-j_90",
        "parent": "https://github.com/apache/xerces2-j/commit/ffe5345aee0fa0713a524c94f59093e6fa5a1aa8",
        "message": "Fixing 2 bugs:\n1) Bugzilla# 18429, NPE thrown validating NMTOKEN. Thanks to Neil Delima for the patch.\n2) S production is unchanged in XML 1.1, so shouldn't override isSpace()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319269 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39",
        "file": [
            {
                "patch": "@@ -367,6 +367,9 @@ public void setDocumentHandler(XMLDocumentHandler documentHandler) {\n         fDocumentHandler = documentHandler;\n         if (fLastComponent != null) {\n             fLastComponent.setDocumentHandler(fDocumentHandler);\n+            if (fDocumentHandler !=null){\n+                fDocumentHandler.setDocumentSource(fLastComponent);\n+            }\n         }\n     } // setDocumentHandler(XMLDocumentHandler)\n ",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/BasicParserConfiguration.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "b3dc8eedb6b6f4ea8e51959a564aaf35b8e03f98",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/BasicParserConfiguration.java",
                "filename": "src/org/apache/xerces/parsers/BasicParserConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/BasicParserConfiguration.java?ref=d4a1bf869fdbdc56a6bc24ddd57967cde249ad39"
            },
            {
                "patch": "@@ -680,37 +680,43 @@ protected void configurePipeline() {\n \t\t\t\tfLastComponent = fScanner;\n \t\t\t}\n \t\t}\n-\n-\t\t// setup dtd pipeline\n-\t\tif (fDTDScanner != null) {\n-\t\t\tif (fDTDProcessor != null) {\n-\t\t\t\tfDTDScanner.setDTDHandler(fDTDProcessor);\n-\t\t\t\tfDTDProcessor.setDTDSource(fDTDScanner);\n-\t\t\t\tfDTDProcessor.setDTDHandler(fDTDHandler);\n+        \n+        configureDTDPipeline();\n+\t} // configurePipeline()\n+    \n+    protected void configureDTDPipeline (){\n+        \n+        // setup dtd pipeline\n+        if (fDTDScanner != null) {\n+            if (fDTDProcessor != null) {\n+                fDTDScanner.setDTDHandler(fDTDProcessor);\n+                fDTDProcessor.setDTDSource(fDTDScanner);\n+                fDTDProcessor.setDTDHandler(fDTDHandler);\n                 if (fDTDHandler != null) {\n                     fDTDHandler.setDTDSource(fDTDProcessor);\n                 }\n \n-\t\t\t\tfDTDScanner.setDTDContentModelHandler(fDTDProcessor);\n-\t\t\t\tfDTDProcessor.setDTDContentModelSource(fDTDScanner);\n-\t\t\t\tfDTDProcessor.setDTDContentModelHandler(fDTDContentModelHandler);\n+                fDTDScanner.setDTDContentModelHandler(fDTDProcessor);\n+                fDTDProcessor.setDTDContentModelSource(fDTDScanner);\n+                fDTDProcessor.setDTDContentModelHandler(fDTDContentModelHandler);\n                 if (fDTDContentModelHandler != null) {\n                     fDTDContentModelHandler.setDTDContentModelSource(fDTDProcessor);\n                 }\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tfDTDScanner.setDTDHandler(fDTDHandler);\n+            }\n+            else {\n+                fDTDScanner.setDTDHandler(fDTDHandler);\n                 if (fDTDHandler != null) {\n                     fDTDHandler.setDTDSource(fDTDScanner);\n                 }\n-\t\t\t\tfDTDScanner.setDTDContentModelHandler(fDTDContentModelHandler);\n+                fDTDScanner.setDTDContentModelHandler(fDTDContentModelHandler);\n                 if (fDTDContentModelHandler != null) {\n                     fDTDContentModelHandler.setDTDContentModelSource(fDTDScanner);\n                 }\n-\t\t\t}\n-\t\t}\n+            }\n+        }\n \n-\t} // configurePipeline()\n+\n+    }\n \n     // features and properties\n ",
                "additions": 23,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/DTDConfiguration.java",
                "status": "modified",
                "changes": 40,
                "deletions": 17,
                "sha": "de6478e8c56706312764e403e15443b7ca9654af",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/DTDConfiguration.java",
                "filename": "src/org/apache/xerces/parsers/DTDConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DTDConfiguration.java?ref=d4a1bf869fdbdc56a6bc24ddd57967cde249ad39"
            },
            {
                "patch": "@@ -194,46 +194,57 @@ public IntegratedParserConfiguration(SymbolTable symbolTable,\n     \n     /** Configures the pipeline. */\n \tprotected void configurePipeline() {\n-        \n-        // use XML 1.0 datatype library\n-         setProperty(DATATYPE_VALIDATOR_FACTORY, fDatatypeValidatorFactory);\n-         \n-\t\t// setup dtd pipeline\n-\t\tif (fDTDScanner != null) {\n-            fProperties.put(DTD_SCANNER, fDTDScanner);\n-\t\t\tif (fDTDProcessor != null) {\n-                fProperties.put(DTD_PROCESSOR, fDTDProcessor);\n-\t\t\t\tfDTDScanner.setDTDHandler(fDTDProcessor);\n-\t\t\t\tfDTDProcessor.setDTDHandler(fDTDHandler);\n-\t\t\t\tfDTDScanner.setDTDContentModelHandler(fDTDProcessor);\n-\t\t\t\tfDTDProcessor.setDTDContentModelHandler(fDTDContentModelHandler);\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tfDTDScanner.setDTDHandler(fDTDHandler);\n-\t\t\t\tfDTDScanner.setDTDContentModelHandler(fDTDContentModelHandler);\n-\t\t\t}\n-\t\t}\n \n+\t\t// use XML 1.0 datatype library\n+\t\tsetProperty(DATATYPE_VALIDATOR_FACTORY, fDatatypeValidatorFactory);\n+\n+\t\t// setup DTD pipeline\n+\t\tconfigureDTDPipeline();\n+\n+\t\t// setup document pipeline\n \t\tif (fFeatures.get(NAMESPACES) == Boolean.TRUE) {\n \t\t\tfScanner = fNamespaceScanner;\n-\t\t\tfProperties.put(DTD_VALIDATOR, fDTDValidator);\n \t\t\tfProperties.put(DOCUMENT_SCANNER, fNamespaceScanner);\n-\t\t\tfNamespaceScanner.setDTDValidator(fDTDValidator);\n-\t\t\tfNamespaceScanner.setDocumentHandler(fDTDValidator);\n-\t\t\tfDTDValidator.setDocumentSource(fNamespaceScanner);\n-\t\t\tfDTDValidator.setDocumentHandler(fDocumentHandler);\n-\t\t\tfDocumentHandler.setDocumentSource(fDTDValidator);\n-\t\t\tfLastComponent = fDTDValidator;\n+\t\t\tif (fDTDValidator != null) {\n+\t\t\t\tfProperties.put(DTD_VALIDATOR, fDTDValidator);\n+\t\t\t\tfNamespaceScanner.setDTDValidator(fDTDValidator);\n+\t\t\t\tfNamespaceScanner.setDocumentHandler(fDTDValidator);\n+\t\t\t\tfDTDValidator.setDocumentSource(fNamespaceScanner);\n+\t\t\t\tfDTDValidator.setDocumentHandler(fDocumentHandler);\n+\t\t\t\tif (fDocumentHandler != null) {\n+\t\t\t\t\tfDocumentHandler.setDocumentSource(fDTDValidator);\n+\t\t\t\t}\n+\t\t\t\tfLastComponent = fDTDValidator;\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tfNamespaceScanner.setDocumentHandler(fDocumentHandler);\n+                fNamespaceScanner.setDTDValidator(null);\n+\t\t\t\tif (fDocumentHandler != null) {\n+\t\t\t\t\tfDocumentHandler.setDocumentSource(fNamespaceScanner);\n+\t\t\t\t}\n+\t\t\t\tfLastComponent = fNamespaceScanner;\n+\t\t\t}\n \t\t}\n \t\telse {\n \t\t\tfScanner = fNonNSScanner;\n-\t\t\tfProperties.put(DTD_VALIDATOR, fNonNSDTDValidator);\n \t\t\tfProperties.put(DOCUMENT_SCANNER, fNonNSScanner);\n-\t\t\tfNonNSScanner.setDocumentHandler(fNonNSDTDValidator);\n-\t\t\tfNonNSDTDValidator.setDocumentSource(fNonNSScanner);\n-\t\t\tfNonNSDTDValidator.setDocumentHandler(fDocumentHandler);\n-\t\t\tfDocumentHandler.setDocumentSource(fNonNSDTDValidator);\n-\t\t\tfLastComponent = fNonNSDTDValidator;\n+\t\t\tif (fNonNSDTDValidator != null) {\n+\t\t\t\tfProperties.put(DTD_VALIDATOR, fNonNSDTDValidator);\n+\t\t\t\tfNonNSScanner.setDocumentHandler(fNonNSDTDValidator);\n+\t\t\t\tfNonNSDTDValidator.setDocumentSource(fNonNSScanner);\n+\t\t\t\tfNonNSDTDValidator.setDocumentHandler(fDocumentHandler);\n+\t\t\t\tif (fDocumentHandler != null) {\n+\t\t\t\t\tfDocumentHandler.setDocumentSource(fNonNSDTDValidator);\n+\t\t\t\t}\n+\t\t\t\tfLastComponent = fNonNSDTDValidator;\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tfScanner.setDocumentHandler(fDocumentHandler);\n+\t\t\t\tif (fDocumentHandler != null) {\n+\t\t\t\t\tfDocumentHandler.setDocumentSource(fScanner);\n+\t\t\t\t}\n+\t\t\t\tfLastComponent = fScanner;\n+\t\t\t}\n \t\t}\n \n \t\t// setup document pipeline\n@@ -256,8 +267,10 @@ protected void configurePipeline() {\n \t\t\tfLastComponent.setDocumentHandler(fSchemaValidator);\n \t\t\tfSchemaValidator.setDocumentSource(fLastComponent);\n \t\t\tfSchemaValidator.setDocumentHandler(fDocumentHandler);\n+\t\t\tif (fDocumentHandler != null) {\n+\t\t\t\tfDocumentHandler.setDocumentSource(fSchemaValidator);\n+\t\t\t}\n \t\t\tfLastComponent = fSchemaValidator;\n-\n \t\t}\n \t} // configurePipeline()\n ",
                "additions": 46,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/IntegratedParserConfiguration.java",
                "status": "modified",
                "changes": 79,
                "deletions": 33,
                "sha": "52aff6fb2ef8f806a3be675521bf366f8378929a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d4a1bf869fdbdc56a6bc24ddd57967cde249ad39/src/org/apache/xerces/parsers/IntegratedParserConfiguration.java",
                "filename": "src/org/apache/xerces/parsers/IntegratedParserConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/IntegratedParserConfiguration.java?ref=d4a1bf869fdbdc56a6bc24ddd57967cde249ad39"
            }
        ],
        "bug_id": "xerces2-j_91",
        "parent": "https://github.com/apache/xerces2-j/commit/37bca108485dd3cb1bf3d9797a6cdb1338fc4aea",
        "message": "Running the xni.XMLGrammarBuilder  throws NPE in Integrated configuration since\nthe document handler is set to null but configuraition attempting to access it.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319196 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/219a1d566c89d5180381ef9555c6c4f8b7107c6b",
        "file": [
            {
                "patch": "@@ -523,6 +523,8 @@ public String toString() {\n                 buffer.append(\"\\\"\");\n                 break;\n             case NSCONSTRAINT_LIST:\n+                if (fNamespaceList.length == 0)\n+                    break;\n                 buffer.append(\"\\\"\");\n                 if (fNamespaceList[0] != null)\n                     buffer.append(fNamespaceList[0]);",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/219a1d566c89d5180381ef9555c6c4f8b7107c6b/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "a79b1379d67a2ea707712828d5448afbbcc9738a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/219a1d566c89d5180381ef9555c6c4f8b7107c6b/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSWildcardDecl.java?ref=219a1d566c89d5180381ef9555c6c4f8b7107c6b"
            }
        ],
        "bug_id": "xerces2-j_92",
        "parent": "https://github.com/apache/xerces2-j/commit/4fe557201aa617a849837902cbc83678891ee21b",
        "message": "Fixing an NPE: if the namespace list in a wildcard is empty, toString() shouldn't\ntry to access the namespace array, because it's null in such case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319055 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/b29768e263055fe0f0187be85f41930c9673bc9f",
        "file": [
            {
                "patch": "@@ -299,7 +299,8 @@ else if (ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_MIXED) {\n             // validate the original lexical rep, and set the actual value\n             actualValue = dv.validate(value, context, vinfo);\n             // validate the canonical lexical rep\n-            actualValue = dv.validate(vinfo.stringValue(), context, vinfo);\n+            if (vinfo != null)\n+                actualValue = dv.validate(vinfo.stringValue(), context, vinfo);\n         } catch (InvalidDatatypeValueException ide) {\n             return null;\n         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/b29768e263055fe0f0187be85f41930c9673bc9f/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "a0ab6772f22e95a25acfe1cfd99b3506906f8655",
                "blob_url": "https://github.com/apache/xerces2-j/blob/b29768e263055fe0f0187be85f41930c9673bc9f/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "filename": "src/org/apache/xerces/impl/xs/XSConstraints.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSConstraints.java?ref=b29768e263055fe0f0187be85f41930c9673bc9f"
            }
        ],
        "bug_id": "xerces2-j_93",
        "parent": "https://github.com/apache/xerces2-j/commit/5254437c187aeedd023641655f13c67f5106440f",
        "message": "Fixing an NPE. When applying default element values for elements with\nxsi:type, we only need to validate the string once (as oppose to twice when\nwe traverse the element decl with value constraints, for the original lexical\nrep and the canonical one).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319009 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/80489e5e831147ddaa6f0c9c307cdb03d49291e3",
        "file": [
            {
                "patch": "@@ -1937,7 +1937,7 @@ else if (wildcard != null &&\n             }\n         }\n         // normalization\n-        if (fNormalizeData && fCurrentType.getTypeCategory() == XSTypeDecl.SIMPLE_TYPE) {\n+        if (fNormalizeData && fCurrentType.getTypeCategory() == XSTypeDecl.SIMPLE_TYPE ) {\n             // if !union type\n              XSSimpleType dv = (XSSimpleType)fCurrentType;\n              if (dv.getVariety() == XSSimpleType.VARIETY_UNION) {\n@@ -2955,6 +2955,10 @@ else if (ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_ELEMENT) {\n                     reportSchemaError(\"cvc-complex-type.2.3\", new Object[]{element.rawname});\n                 }\n             }\n+            else if (ctype == SchemaGrammar.fAnyType) {\n+                fCurrentPSVI.fNormalizedValue = textContent;\n+                actualValue = textContent;\n+            }\n             // 2.4 If the {content type} is element-only or mixed, then the sequence of the element information item's element information item [children], if any, taken in order, is valid with respect to the {content type}'s particle, as defined in Element Sequence Locally Valid (Particle) (3.9.4).\n             if (ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_ELEMENT ||\n                 ctype.fContentType == XSComplexTypeDecl.CONTENTTYPE_MIXED) {\n@@ -3220,12 +3224,9 @@ public void endDocument() throws XNIException {\n          * has nillable true and is matched by a key.\n          */\n \n-        public void reportNilError(IdentityConstraint id) {\n-            if (id.getCategory() == IdentityConstraint.IC_KEY) {\n-                String code = \"KeyMatchesNillable\";\n-                reportSchemaError(code, new Object[]{id.getElementName()});\n-            }\n-        } // reportNilError\n+        public void reportError(String key, Object[] args) {\n+            reportSchemaError(key, args);\n+        } // reportError(String,Object[])\n \n         /**\n          * Adds the specified value to the value store.",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "status": "modified",
                "changes": 15,
                "deletions": 7,
                "sha": "2f5e0f234250f0896613ba44763a6901be1ff105",
                "blob_url": "https://github.com/apache/xerces2-j/blob/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java?ref=80489e5e831147ddaa6f0c9c307cdb03d49291e3"
            },
            {
                "patch": "@@ -59,8 +59,14 @@\n \n import org.apache.xerces.impl.dv.XSSimpleType;\n import org.apache.xerces.impl.xpath.*;\n+import org.apache.xerces.impl.xs.XSElementDecl;\n+import org.apache.xerces.impl.xs.SchemaGrammar;\n+import org.apache.xerces.impl.xs.SchemaSymbols;\n+import org.apache.xerces.impl.xs.XSTypeDecl;\n+import org.apache.xerces.impl.xs.XSComplexTypeDecl;\n import org.apache.xerces.util.SymbolTable;\n import org.apache.xerces.xni.NamespaceContext;\n+import org.apache.xerces.xni.psvi.ElementPSVI;\n \n import org.xml.sax.SAXException;\n \n@@ -211,8 +217,9 @@ public Matcher(Field.XPath xpath, ValueStore store) {\n          */\n         protected void matched(String content, XSSimpleType val, boolean isNil) {\n             super.matched(content, val, isNil);\n-            if(isNil) {\n-                fStore.reportNilError(fIdentityConstraint);\n+            if(isNil && (fIdentityConstraint.getCategory() == IdentityConstraint.IC_KEY)) {\n+                String code = \"KeyMatchesNillable\";\n+                fStore.reportError(code, new Object[]{fIdentityConstraint.getElementName()});\n             }\n             fStore.addValue(Field.this, new IDValue(content, val));\n             // once we've stored the value for this field, we set the mayMatch\n@@ -221,6 +228,45 @@ protected void matched(String content, XSSimpleType val, boolean isNil) {\n             mayMatch = false;\n         } // matched(String)\n \n+        protected void handleContent(XSElementDecl eDecl, ElementPSVI ePSVI) { \n+            // REVISIT:  make sure type is simple!\n+            XSSimpleType val=null;\n+\n+            if (eDecl!=null) {\n+                XSTypeDecl type = eDecl.fType;\n+                if (type != null) {\n+                    if (type.getTypeCategory() == XSTypeDecl.COMPLEX_TYPE) {\n+                        XSComplexTypeDecl ctype = (XSComplexTypeDecl)type;\n+                        val = (XSSimpleType)ctype.getSimpleType();\n+                    }\n+                    else {\n+                        val = (XSSimpleType)(type);\n+                    }\n+                }\n+                // REVISIT:  special case to handle elements with xs:anyType.\n+                // This probably is not valid; need clarification from WG.  - NG\n+                if(val == null && type == SchemaGrammar.fAnyType ) {\n+                    // REVISIT:  this is why anyType shouldn't \n+                    // match fields!\n+                    val = (XSSimpleType)SchemaGrammar.SG_SchemaNS.getGlobalTypeDecl(SchemaSymbols.ATTVAL_STRING);\n+                }\n+            }\n+\n+            if(val == null ) {\n+                // must be a complexType with no simpleContent!\n+                String code = \"cvc-id.3\";\n+                String name = (eDecl == null?\"null\":eDecl.getName());\n+                fStore.reportError(code, new Object[]{fIdentityConstraint.getName(), name});\n+                return;\n+            }\n+            fMatchedString = ePSVI.getSchemaNormalizedValue();\n+            if(eDecl != null) {\n+                matched(fMatchedString, val, (eDecl.getIsNillable()));\n+            } else {\n+                matched(fMatchedString, val, false); \n+            }\n+        } // handleContent(XSElementDecl, ElementPSVI)\n+\n     } // class Matcher\n \n } // class Field",
                "additions": 48,
                "raw_url": "https://github.com/apache/xerces2-j/raw/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/Field.java",
                "status": "modified",
                "changes": 50,
                "deletions": 2,
                "sha": "a853ee60e2a6b49e6aa224a7d45d70e674c5681c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/Field.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/Field.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/Field.java?ref=80489e5e831147ddaa6f0c9c307cdb03d49291e3"
            },
            {
                "patch": "@@ -58,13 +58,13 @@\n package org.apache.xerces.impl.xs.identity;\n \n import org.apache.xerces.impl.xs.SchemaGrammar;\n+import org.apache.xerces.impl.xs.XSElementDecl;\n import org.apache.xerces.impl.xpath.*;\n import org.apache.xerces.xni.NamespaceContext;\n import org.apache.xerces.xni.QName;\n import org.apache.xerces.xni.XNIException;\n import org.apache.xerces.xni.XMLAttributes;\n import org.apache.xerces.xni.psvi.ElementPSVI;\n-import org.apache.xerces.impl.xs.XSElementDecl;\n import org.apache.xerces.impl.xs.XSAttributeGroupDecl;\n import org.apache.xerces.util.SymbolTable;\n \n@@ -280,11 +280,6 @@ public int getInitialDepth() {\n         // Protected methods\n         //\n \n-        // overridden to do nothing; selectors don't care\n-        // about element content\n-        protected void handleContent(XSElementDecl eDecl, ElementPSVI ePSVI) {\n-        } // handleContent(XSElementDecl, ElementPSVI)\n-\n     } // class Matcher\n \n } // class Selector",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/Selector.java",
                "status": "modified",
                "changes": 7,
                "deletions": 6,
                "sha": "601ed48a8ba5fb4d1d467c0136196d3eaccaaea2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/Selector.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/Selector.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/Selector.java?ref=80489e5e831147ddaa6f0c9c307cdb03d49291e3"
            },
            {
                "patch": "@@ -93,10 +93,12 @@\n      */\n     public void addValue(Field field, IDValue value);\n \n-    /* report an error if a nillable element is being keyed on.\n-     * the implementor must check that a <key> really is present, not a <unique> or <keyref>.\n-     * @param:  id:  the IdentityConstraint that has matched.\n+    /**\n+     * Since the valueStore will have access to an error reporter, this\n+     * allows it to be called appropriately.\n+     * @param key  the key of the localized error message\n+     * @param args  the list of arguments for substitution.\n      */\n-    public void reportNilError(IdentityConstraint id);\n+    public void reportError(String key, Object[] args);\n \n } // interface ValueStore",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/ValueStore.java",
                "status": "modified",
                "changes": 10,
                "deletions": 4,
                "sha": "a0b4ff33e581dda0e2b5f85411913c9de5aed87d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/ValueStore.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/ValueStore.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/ValueStore.java?ref=80489e5e831147ddaa6f0c9c307cdb03d49291e3"
            },
            {
                "patch": "@@ -133,7 +133,7 @@\n     private int[] fMatched;\n \n     /** The matching string. */\n-    private String fMatchedString;\n+    protected String fMatchedString;\n \n     /** Integer stack of step indexes. */\n     private IntStack[] fStepIndexes;\n@@ -196,29 +196,9 @@ public String getMatchedString() {\n     // Protected methods\n     //\n \n+    // a place-holder method; to be overridden by subclasses\n+    // that care about matching element content.\n     protected void handleContent(XSElementDecl eDecl, ElementPSVI ePSVI) { \n-        fMatchedString = ePSVI.getSchemaNormalizedValue();\n-        // REVISIT:  make sure type is simple!\n-        XSSimpleType val=null;\n-\n-        if (eDecl!=null) {\n-            XSTypeDecl type = eDecl.fType;\n-            if (type != null) {\n-                if (type.getTypeCategory() == XSTypeDecl.COMPLEX_TYPE) {\n-                    XSComplexTypeDecl ctype = (XSComplexTypeDecl)type;\n-                    val = (XSSimpleType)ctype.getSimpleType();\n-                }\n-                else {\n-                    val = (XSSimpleType)(type);\n-                }\n-            }\n-        }\n-\n-        if(eDecl != null) {\n-            matched(fMatchedString, val, (eDecl.getIsNillable()));\n-        } else {\n-            matched(fMatchedString, val, false); \n-        }\n     } // handleContent(XSElementDecl, ElementPSVI)\n \n     /**",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "status": "modified",
                "changes": 26,
                "deletions": 23,
                "sha": "0641d552617148a2c5ee0ad9e8057a8cfe767570",
                "blob_url": "https://github.com/apache/xerces2-j/blob/80489e5e831147ddaa6f0c9c307cdb03d49291e3/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java?ref=80489e5e831147ddaa6f0c9c307cdb03d49291e3"
            }
        ],
        "bug_id": "xerces2-j_94",
        "parent": "https://github.com/apache/xerces2-j/commit/af3d5fd3d0d561405793cceb917bfbcf420b34f9",
        "message": "a fix for the case where a <field> matches an element with\ntype xs:anyType.  Previously, we would throw an NPE; now we treat the situation as valid if there is no element content.  We need clarification of whether this is correct.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318651 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/e7f2f252798544eb7d3376069086c4ab2423aead",
        "file": [
            {
                "patch": "@@ -236,6 +236,11 @@\n         JAXP_SCHEMA_SOURCE\n     };\n \n+    // this is the number of valuestores of each kind\n+    // we expect an element to have.  It's almost\n+    // never > 1; so leave it at that.  \n+    protected static final int ID_CONSTRAINT_NUM = 1;\n+\n     //\n     // Data\n     //\n@@ -1368,14 +1373,12 @@ public void reset(XMLComponentManager componentManager) throws XMLConfigurationE\n      *\n      * @param identityConstraint The identity constraint.\n      */\n-    public void startValueScopeFor(IdentityConstraint identityConstraint)\n+    public void startValueScopeFor(IdentityConstraint identityConstraint,\n+                int initialDepth)\n     throws XNIException {\n \n-        for (int i=0; i<identityConstraint.getFieldCount(); i++) {\n-            Field field = identityConstraint.getFieldAt(i);\n-            ValueStoreBase valueStore = fValueStoreCache.getValueStoreFor(field);\n-            valueStore.startValueScope();\n-        }\n+        ValueStoreBase valueStore = fValueStoreCache.getValueStoreFor(identityConstraint, initialDepth);\n+        valueStore.startValueScope();\n \n     } // startValueScopeFor(IdentityConstraint identityConstraint)\n \n@@ -1385,8 +1388,8 @@ public void startValueScopeFor(IdentityConstraint identityConstraint)\n      *\n      * @param field The field to activate.\n      */\n-    public XPathMatcher activateField(Field field) throws XNIException {\n-        ValueStore valueStore = fValueStoreCache.getValueStoreFor(field);\n+    public XPathMatcher activateField(Field field, int initialDepth) {\n+        ValueStore valueStore = fValueStoreCache.getValueStoreFor(field.getIdentityConstraint(), initialDepth);\n         field.setMayMatch(true);\n         XPathMatcher matcher = field.createMatcher(valueStore);\n         fMatcherStack.addMatcher(matcher);\n@@ -1399,10 +1402,10 @@ public XPathMatcher activateField(Field field) throws XNIException {\n      *\n      * @param identityConstraint The identity constraint.\n      */\n-    public void endValueScopeFor(IdentityConstraint identityConstraint)\n+    public void endValueScopeFor(IdentityConstraint identityConstraint, int initialDepth)\n     throws XNIException {\n \n-        ValueStoreBase valueStore = fValueStoreCache.getValueStoreFor(identityConstraint);\n+        ValueStoreBase valueStore = fValueStoreCache.getValueStoreFor(identityConstraint, initialDepth);\n         valueStore.endValueScope();\n \n     } // endValueScopeFor(IdentityConstraint)\n@@ -1413,7 +1416,7 @@ private void activateSelectorFor(IdentityConstraint ic) throws XNIException {\n         FieldActivator activator = this;\n         if (selector == null)\n             return;\n-        XPathMatcher matcher = selector.createMatcher(activator);\n+        XPathMatcher matcher = selector.createMatcher(activator, fElementDepth);\n         fMatcherStack.addMatcher(matcher);\n         matcher.startDocumentFragment(fSymbolTable);\n     }\n@@ -2087,19 +2090,25 @@ Augmentations handleEndElement(QName element, Augmentations augs) {\n         // handle everything *but* keyref's.\n         for (int i = oldCount - 1; i >= newCount; i--) {\n             XPathMatcher matcher = fMatcherStack.getMatcherAt(i);\n-            IdentityConstraint id;\n-            if ((id = matcher.getIDConstraint()) != null && id.getCategory() != IdentityConstraint.IC_KEYREF) {\n-                fValueStoreCache.transplant(id);\n+            if(matcher instanceof Selector.Matcher) {\n+                Selector.Matcher selMatcher = (Selector.Matcher)matcher;\n+                IdentityConstraint id;\n+                if ((id = selMatcher.getIdentityConstraint()) != null && id.getCategory() != IdentityConstraint.IC_KEYREF) {\n+                    fValueStoreCache.transplant(id, selMatcher.getInitialDepth());\n+                }\n             }\n         }\n         // now handle keyref's/...\n         for (int i = oldCount - 1; i >= newCount; i--) {\n             XPathMatcher matcher = fMatcherStack.getMatcherAt(i);\n-            IdentityConstraint id;\n-            if ((id = matcher.getIDConstraint()) != null && id.getCategory() == IdentityConstraint.IC_KEYREF) {\n-                ValueStoreBase values = fValueStoreCache.getValueStoreFor(id);\n-                if (values != null) // nothing to do if nothing matched!\n-                    values.endDocumentFragment();\n+            if(matcher instanceof Selector.Matcher) {\n+                Selector.Matcher selMatcher = (Selector.Matcher)matcher;\n+                IdentityConstraint id;\n+                if ((id = selMatcher.getIdentityConstraint()) != null && id.getCategory() == IdentityConstraint.IC_KEYREF) {\n+                    ValueStoreBase values = fValueStoreCache.getValueStoreFor(id, selMatcher.getInitialDepth());\n+                    if (values != null) // nothing to do if nothing matched!\n+                        values.endDocumentFragment();\n+                }\n             }\n         }\n         fValueStoreCache.endElement();\n@@ -3098,11 +3107,11 @@ protected ValueStoreBase(IdentityConstraint identityConstraint) {\n \n         // destroys this ValueStore; useful when, for instance, a\n         // locally-scoped ID constraint is involved.\n-        public void destroy() {\n+        public void clear() {\n             fValuesCount = 0;\n             fValues.clear();\n             fValueTuples.removeAllElements();\n-        } // end destroy():void\n+        } // end clear():void\n \n         // appends the contents of one ValueStore to those of us.\n         public void append(ValueStoreBase newVal) {\n@@ -3498,7 +3507,15 @@ public void endDocument() throws XNIException {\n         /** stores all global Values stores. */\n         protected final Vector fValueStores = new Vector();\n \n-        /** Values stores associated to specific identity constraints. */\n+        /** \n+         * Values stores associated to specific identity constraints. \n+         * This hashtable maps IdentityConstraints and\n+         * the 0-based element on which their selectors first matched to\n+         * a corresponding ValueStore.  This should take care\n+         * of all cases, including where ID constraints with\n+         * descendant-or-self axes occur on recursively-defined\n+         * elements.\n+         */\n         protected final Hashtable fIdentityConstraint2ValueStoreMap = new Hashtable();\n \n         // sketch of algorithm:\n@@ -3574,8 +3591,7 @@ public void endElement() {\n          * Initializes the value stores for the specified element\n          * declaration.\n          */\n-        public void initValueStoresFor(XSElementDecl eDecl)\n-        throws XNIException {\n+        public void initValueStoresFor(XSElementDecl eDecl) {\n             // initialize value stores for unique fields\n             IdentityConstraint [] icArray = eDecl.fIDConstraints;\n             int icCount = eDecl.fIDCPos;\n@@ -3584,56 +3600,52 @@ public void initValueStoresFor(XSElementDecl eDecl)\n                 case (IdentityConstraint.IC_UNIQUE):\n                     // initialize value stores for unique fields\n                     UniqueOrKey unique = (UniqueOrKey)icArray[i];\n-                    UniqueValueStore uniqueValueStore = (UniqueValueStore)fIdentityConstraint2ValueStoreMap.get(unique);\n-                    if (uniqueValueStore != null) {\n-                        // NOTE: If already initialized, don't need to\n-                        //       do it again. -Ac\n-                        continue;\n+                    LocalIDKey toHash = new LocalIDKey (unique, fElementDepth);\n+                    UniqueValueStore  uniqueValueStore = (UniqueValueStore)fIdentityConstraint2ValueStoreMap.get(toHash);\n+                    if (uniqueValueStore == null) {\n+                        uniqueValueStore = new UniqueValueStore(unique);\n+                        fIdentityConstraint2ValueStoreMap.put(toHash, uniqueValueStore);\n+                    } else {\n+                        uniqueValueStore.clear();\n                     }\n-                    uniqueValueStore = new UniqueValueStore(unique);\n                     fValueStores.addElement(uniqueValueStore);\n-                    fIdentityConstraint2ValueStoreMap.put(unique, uniqueValueStore);\n                     break;\n                 case (IdentityConstraint.IC_KEY):\n                     // initialize value stores for key fields\n                     UniqueOrKey key = (UniqueOrKey)icArray[i];\n-                    KeyValueStore keyValueStore = (KeyValueStore)fIdentityConstraint2ValueStoreMap.get(key);\n-                    if (keyValueStore != null) {\n-                        // NOTE: If already initialized, don't need to\n-                        //       do it again. -Ac\n-                        continue;\n+                    toHash = new LocalIDKey(key, fElementDepth);\n+                    KeyValueStore  keyValueStore = (KeyValueStore)fIdentityConstraint2ValueStoreMap.get(toHash);\n+                    if (keyValueStore == null) {\n+                        keyValueStore = new KeyValueStore(key);\n+                        fIdentityConstraint2ValueStoreMap.put(toHash, keyValueStore);\n+                    } else {\n+                        keyValueStore.clear();\n                     }\n-                    keyValueStore = new KeyValueStore(key);\n                     fValueStores.addElement(keyValueStore);\n-                    fIdentityConstraint2ValueStoreMap.put(key, keyValueStore);\n                     break;\n                 case (IdentityConstraint.IC_KEYREF):\n-                    // initialize value stores for key reference fields\n+                    // initialize value stores for keyRef fields\n                     KeyRef keyRef = (KeyRef)icArray[i];\n-                    KeyRefValueStore keyRefValueStore = (KeyRefValueStore)fIdentityConstraint2ValueStoreMap.get(keyRef);\n-                    if (keyRefValueStore != null) {\n-                        // NOTE: If already initialized, don't need to\n-                        //       do it again. -Ac\n-                        continue;\n+                    toHash = new LocalIDKey(keyRef, fElementDepth);\n+                    KeyRefValueStore  keyRefValueStore = (KeyRefValueStore)fIdentityConstraint2ValueStoreMap.get(toHash);\n+                    if (keyRefValueStore == null) {\n+                        keyRefValueStore = new KeyRefValueStore(keyRef, null);\n+                        fIdentityConstraint2ValueStoreMap.put(toHash, keyRefValueStore);\n+                    } else {\n+                        keyRefValueStore.clear();\n                     }\n-                    keyRefValueStore = new KeyRefValueStore(keyRef, null);\n                     fValueStores.addElement(keyRefValueStore);\n-                    fIdentityConstraint2ValueStoreMap.put(keyRef, keyRefValueStore);\n                     break;\n                 }\n             }\n         } // initValueStoresFor(XSElementDecl)\n \n-        /** Returns the value store associated to the specified field. */\n-        public ValueStoreBase getValueStoreFor(Field field) {\n-            IdentityConstraint identityConstraint = field.getIdentityConstraint();\n-            return(ValueStoreBase)fIdentityConstraint2ValueStoreMap.get(identityConstraint);\n-        } // getValueStoreFor(Field):ValueStoreBase\n-\n         /** Returns the value store associated to the specified IdentityConstraint. */\n-        public ValueStoreBase getValueStoreFor(IdentityConstraint id) {\n-            return(ValueStoreBase)fIdentityConstraint2ValueStoreMap.get(id);\n-        } // getValueStoreFor(IdentityConstraint):ValueStoreBase\n+        public ValueStoreBase getValueStoreFor(IdentityConstraint id, int initialDepth) {\n+            ValueStoreBase vb = (ValueStoreBase)fIdentityConstraint2ValueStoreMap.get(new LocalIDKey(id, initialDepth));\n+            // vb should *never* be null!\n+            return vb;\n+        } // getValueStoreFor(IdentityConstraint, int):ValueStoreBase\n \n         /** Returns the global value store associated to the specified IdentityConstraint. */\n         public ValueStoreBase getGlobalValueStoreFor(IdentityConstraint id) {\n@@ -3643,10 +3655,9 @@ public ValueStoreBase getGlobalValueStoreFor(IdentityConstraint id) {\n         // associated with id and moves them into the global\n         // hashtable, if id is a <unique> or a <key>.\n         // If it's a <keyRef>, then we leave it for later.\n-        public void transplant(IdentityConstraint id) {\n+        public void transplant(IdentityConstraint id, int initialDepth) {\n+            ValueStoreBase newVals = (ValueStoreBase)fIdentityConstraint2ValueStoreMap.get(new LocalIDKey(id, initialDepth));\n             if (id.getCategory() == IdentityConstraint.IC_KEYREF) return;\n-            ValueStoreBase newVals = (ValueStoreBase)fIdentityConstraint2ValueStoreMap.get(id);\n-            fIdentityConstraint2ValueStoreMap.remove(id);\n             ValueStoreBase currVals = (ValueStoreBase)fGlobalIDConstraintMap.get(id);\n             if (currVals != null) {\n                 currVals.append(newVals);\n@@ -3658,7 +3669,7 @@ public void transplant(IdentityConstraint id) {\n         } // transplant(id)\n \n         /** Check identity constraints. */\n-        public void endDocument() throws XNIException {\n+        public void endDocument() {\n \n             int count = fValueStores.size();\n             for (int i = 0; i < count; i++) {\n@@ -3875,4 +3886,30 @@ public String toString() {\n         } // class Entry\n \n     } // class OrderedHashtable\n+\n+    // the purpose of this class is to enable IdentityConstraint,int\n+    // pairs to be used easily as keys in Hashtables.\n+    protected class LocalIDKey {\n+        private IdentityConstraint fId;\n+        private int fDepth;\n+\n+        public LocalIDKey (IdentityConstraint id, int depth) {\n+            fId = id;\n+            fDepth = depth;\n+        } // init(IdentityConstraint, int)\n+\n+        // object method\n+        public int hashCode() {\n+            return fId.hashCode()+fDepth;\n+        }\n+\n+        public boolean equals(Object localIDKey) {\n+            if(localIDKey instanceof LocalIDKey) {\n+                LocalIDKey lIDKey = (LocalIDKey)localIDKey;\n+                return (lIDKey.fId == fId && lIDKey.fDepth == fDepth);\n+            }\n+            return false;\n+        }\n+    } // class LocalIDKey\n+\n } // class SchemaValidator",
                "additions": 96,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "status": "modified",
                "changes": 155,
                "deletions": 59,
                "sha": "42427b7d7f14e740ed55710d51fdebcd88afaf2d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "filename": "src/org/apache/xerces/impl/xs/XMLSchemaValidator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XMLSchemaValidator.java?ref=e7f2f252798544eb7d3376069086c4ab2423aead"
            },
            {
                "patch": "@@ -197,7 +197,7 @@ public XPath(String xpath,\n \n         /** Constructs a field matcher. */\n         public Matcher(Field.XPath xpath, ValueStore store) {\n-            super(xpath, null);\n+            super(xpath);\n             fStore = store;\n         } // <init>(Field.XPath,ValueStore)\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/Field.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "a781b1fc6a01f7ee8d87278cb38518a7950de5c2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/Field.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/Field.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/Field.java?ref=e7f2f252798544eb7d3376069086c4ab2423aead"
            },
            {
                "patch": "@@ -80,8 +80,10 @@\n      * the value store.\n      *\n      * @param identityConstraint The identity constraint.\n+     * @param initialDepth  the depth at which the selector began matching\n      */\n-    public void startValueScopeFor(IdentityConstraint identityConstraint);\n+    public void startValueScopeFor(IdentityConstraint identityConstraint,\n+            int initialDepth);\n \n     /** \n      * Request to activate the specified field. This method returns the\n@@ -90,14 +92,16 @@\n      * it is permitted to match a value--that is, to call the field's setMayMatch(boolean) method.\n      *\n      * @param field The field to activate.\n+     * @param initialDepth  the 0-indexed depth in the instance document at which the Selector began to match.\n      */\n-    public XPathMatcher activateField(Field field);\n+    public XPathMatcher activateField(Field field, int initialDepth);\n \n     /**\n      * Ends the value scope for the specified identity constraint.\n      *\n      * @param identityConstraint The identity constraint.\n+     * @param initialDepth  the 0-indexed depth where the Selector began to match.\n      */\n-    public void endValueScopeFor(IdentityConstraint identityConstraint);\n+    public void endValueScopeFor(IdentityConstraint identityConstraint, int initialDepth);\n \n } // interface FieldActivator",
                "additions": 7,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/FieldActivator.java",
                "status": "modified",
                "changes": 10,
                "deletions": 3,
                "sha": "53883de4d30a15053ef38dc74fbb1b994506d72e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/FieldActivator.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/FieldActivator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/FieldActivator.java?ref=e7f2f252798544eb7d3376069086c4ab2423aead"
            },
            {
                "patch": "@@ -88,6 +88,10 @@\n     /** Identity constraint. */\n     protected IdentityConstraint fIdentityConstraint;\n \n+    // the Identity constraint we're the matcher for.  Only\n+    // used for selectors!\n+    protected IdentityConstraint fIDConstraint;\n+\n     //\n     // Constructors\n     //\n@@ -109,15 +113,19 @@ public Selector(Selector.XPath xpath,\n     } // getXPath():org.apache.xerces.v1.schema.identity.XPath\n \n     /** Returns the identity constraint. */\n-    public IdentityConstraint getIdentityConstraint() {\n+    public IdentityConstraint getIDConstraint() {\n         return fIdentityConstraint;\n-    } // getIdentityConstraint():IdentityConstraint\n+    } // getIDConstraint():IdentityConstraint\n \n     // factory method\n \n-    /** Creates a selector matcher. */\n-    public XPathMatcher createMatcher(FieldActivator activator) {\n-        return new Selector.Matcher(fXPath, activator);\n+    /** Creates a selector matcher. \n+     * @param activator     The activator for this selector's fields.\n+     * @param initialDepth  The depth in the document at which this matcher began its life;\n+     *                          used in correctly handling recursive elements.\n+     */\n+    public XPathMatcher createMatcher(FieldActivator activator, int initialDepth) {\n+        return new Selector.Matcher(fXPath, activator, initialDepth);\n     } // createMatcher(FieldActivator):XPathMatcher\n \n     //\n@@ -176,7 +184,7 @@ public XPath(String xpath, SymbolTable symbolTable,\n      *\n      * @author Andy Clark, IBM\n      */\n-    protected class Matcher\n+    public class Matcher\n     extends XPathMatcher {\n \n         //\n@@ -186,6 +194,9 @@ public XPath(String xpath, SymbolTable symbolTable,\n         /** Field activator. */\n         protected FieldActivator fFieldActivator;\n \n+        /** Initial depth in the document at which this matcher was created. */\n+        protected int fInitialDepth;\n+\n         /** Element depth. */\n         protected int fElementDepth;\n \n@@ -197,9 +208,11 @@ public XPath(String xpath, SymbolTable symbolTable,\n         //\n \n         /** Constructs a selector matcher. */\n-        public Matcher(Selector.XPath xpath, FieldActivator activator) {\n-            super(xpath, Selector.this.fIdentityConstraint);\n+        public Matcher(Selector.XPath xpath, FieldActivator activator,\n+                int initialDepth) {\n+            super(xpath);\n             fFieldActivator = activator;\n+            fInitialDepth = initialDepth;\n         } // <init>(Selector.XPath,FieldActivator)\n \n         //\n@@ -234,11 +247,11 @@ public void startElement(QName element, XMLAttributes attributes,\n             if ((fMatchedDepth == -1 && ((matched & MATCHED) == MATCHED)) ||\n                     ((matched & MATCHED_DESCENDANT) == MATCHED_DESCENDANT)) {\n                 fMatchedDepth = fElementDepth;\n-                fFieldActivator.startValueScopeFor(fIdentityConstraint);\n+                fFieldActivator.startValueScopeFor(fIdentityConstraint, fInitialDepth);\n                 int count = fIdentityConstraint.getFieldCount();\n                 for (int i = 0; i < count; i++) {\n                     Field field = fIdentityConstraint.getFieldAt(i);\n-                    XPathMatcher matcher = fFieldActivator.activateField(field);\n+                    XPathMatcher matcher = fFieldActivator.activateField(field, fInitialDepth);\n                     matcher.startElement(element, attributes, elementDecl);\n                 }\n             }\n@@ -249,10 +262,20 @@ public void endElement(QName element, XSElementDecl eDecl, ElementPSVI ePSVI) {\n             super.endElement(element, eDecl, ePSVI);\n             if (fElementDepth-- == fMatchedDepth) {\n                 fMatchedDepth = -1;\n-                fFieldActivator.endValueScopeFor(fIdentityConstraint);\n+                fFieldActivator.endValueScopeFor(fIdentityConstraint, fInitialDepth);\n             }\n         }\n \n+        /** Returns the identity constraint. */\n+        public IdentityConstraint getIdentityConstraint() {\n+            return fIdentityConstraint;\n+        } // getIdentityConstraint():IdentityConstraint\n+\n+        /** get the initial depth at which this selector matched. */\n+        public int getInitialDepth() {\n+            return fInitialDepth;\n+        } // getInitialDepth():  int\n+\n         //\n         // Protected methods\n         //",
                "additions": 34,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/Selector.java",
                "status": "modified",
                "changes": 45,
                "deletions": 11,
                "sha": "dbf9bd8480c7880f7746ed3950d2a12009f0b89e",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/Selector.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/Selector.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/Selector.java?ref=e7f2f252798544eb7d3376069086c4ab2423aead"
            },
            {
                "patch": "@@ -147,10 +147,6 @@\n      */\n     private int [] fNoMatchDepth;\n \n-    // the Identity constraint we're the matcher for.  Only\n-    // used for selectors!\n-    protected IdentityConstraint fIDConstraint;\n-\n     // the symbolTable for the XPath parser\n     protected SymbolTable fSymbolTable;\n \n@@ -165,22 +161,7 @@\n      * @param xpath   The xpath.\n      */\n     public XPathMatcher(XPath xpath) {\n-        this(xpath, null);\n-    } // <init>(XPath)\n-\n-    /**\n-     * Constructs an XPath matcher that implements a document fragment\n-     * handler.\n-     *\n-     * @param xpath   The xpath.\n-     * @param shouldBufferContent True if the matcher should buffer the\n-     *                            matched content.\n-     * @param idConstraint:  the identity constraint we're matching for;\n-     *      null unless it's a Selector.\n-     */\n-    public XPathMatcher(XPath xpath, IdentityConstraint idConstraint) {\n         fLocationPaths = xpath.getLocationPaths();\n-        fIDConstraint = idConstraint;\n         fStepIndexes = new IntStack[fLocationPaths.length];\n         for(int i=0; i<fStepIndexes.length; i++) fStepIndexes[i] = new IntStack();\n         fCurrentStep = new int[fLocationPaths.length];\n@@ -189,7 +170,7 @@ public XPathMatcher(XPath xpath, IdentityConstraint idConstraint) {\n         if (DEBUG_METHODS) {\n             System.out.println(toString()+\"#<init>()\");\n         }\n-    } // <init>(XPath,boolean)\n+    } // <init>(XPath)\n \n     //\n     // Public methods\n@@ -206,16 +187,6 @@ public int isMatched() {\n         return 0;\n     } // isMatched():int\n \n-    // returns whether this XPathMatcher was matching a Selector\n-    public boolean getIsSelector() {\n-        return (fIDConstraint == null);\n-    } // end getIsSelector():boolean\n-\n-    // returns the ID constraint\n-    public IdentityConstraint getIDConstraint() {\n-        return fIDConstraint;\n-    } // end getIDConstraint():IdentityConstraint\n-\n     /** Returns the matched string. */\n     public String getMatchedString() {\n         return fMatchedString;\n@@ -494,7 +465,6 @@ public void endElement(QName element, XSElementDecl eDecl, ElementPSVI ePSVI) {\n         if (DEBUG_METHODS2) {\n             System.out.println(toString()+\"#endElement(\"+\n                                \"element={\"+element+\"},\"+\n-                               \"ID constraint=\"+fIDConstraint+\n                                \")\");\n         }\n         for(int i = 0; i<fLocationPaths.length; i++) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "status": "modified",
                "changes": 32,
                "deletions": 31,
                "sha": "8e6f06ad4e8b3405112718713bcfa4ca7c4e669a",
                "blob_url": "https://github.com/apache/xerces2-j/blob/e7f2f252798544eb7d3376069086c4ab2423aead/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "filename": "src/org/apache/xerces/impl/xs/identity/XPathMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/identity/XPathMatcher.java?ref=e7f2f252798544eb7d3376069086c4ab2423aead"
            }
        ],
        "bug_id": "xerces2-j_95",
        "parent": "https://github.com/apache/xerces2-j/commit/13781f56f0f35c40dfe59dc503366fc0b4954ce2",
        "message": "\"fix\" for bug 11571.  The bug report was wrong, but this fixes an NPE that it provoked.\n\nAlso, identity constraints now properly handle cases where an identity constraint is\ndefined on a recursive element.  I have also reworked some code to save\nsome method calls.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318635 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/f9fa5e7d2704ffe4c0b275fbb32b49cd876ce66e",
        "file": [
            {
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2000,2001 The Apache Software Foundation.  All rights \n+ * Copyright (c) 2000,2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Xerces\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -99,41 +99,43 @@\n \n \n /**\n- * This is Abstract Schema DOM Builder class. It extends the DOMBuilderImpl \n+ * This is Abstract Schema DOM Builder class. It extends the DOMBuilderImpl\n  * class. Provides support for preparsing schemas.\n  *\n  * @author Pavani Mukthipudi, Sun Microsystems Inc.\n  * @author Neil Graham, IBM\n  * @version $Id$\n  *\n  */\n- \n+\n public class DOMASBuilderImpl\n     extends DOMBuilderImpl implements DOMASBuilder {\n-    \n+\n     //\n     // Constants\n     //\n-    \n+\n     // Feature ids\n-    \n-    protected static final String SCHEMA_FULL_CHECKING = \n+\n+    protected static final String SCHEMA_FULL_CHECKING =\n         Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_FULL_CHECKING;\n-        \n+\n     // Property ids\n-    \n-    protected static final String ERROR_REPORTER = \n+\n+    protected static final String ERROR_REPORTER =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY;\n-        \n+\n     protected static final String SYMBOL_TABLE =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY;\n-        \n-    \n-    \n+\n+    protected static final String ENTITY_MANAGER =\n+        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY;\n+\n+\n     //\n     // Data\n     //\n-    \n+\n     protected XSGrammarResolver fGrammarResolver;\n     protected SubstitutionGroupHandler fSubGroupHandler;\n     protected CMBuilder fCMBuilder;\n@@ -142,7 +144,7 @@\n     protected XMLEntityResolver fEntityResolver;\n     protected SymbolTable fSymbolTable;\n     protected GrammarPool fGrammarPool = null;\n-    \n+\n     protected ASModelImpl fAbstractSchema;\n \n     //\n@@ -183,27 +185,27 @@ public DOMASBuilderImpl(SymbolTable symbolTable, GrammarPool grammarPool) {\n     //\n     // DOMASBuilder methods\n     //\n-        \n+\n     /**\n-     * Associate an <code>ASModel</code> with a document instance. This \n+     * Associate an <code>ASModel</code> with a document instance. This\n      * <code>ASModel</code> will be used by the \"\n      * <code>validate-if-schema</code>\" and \"\n-     * <code>datatype-normalization</code>\" options during the load of a new \n-     * <code>Document</code>. \n+     * <code>datatype-normalization</code>\" options during the load of a new\n+     * <code>Document</code>.\n      */\n     public ASModel getAbstractSchema() {\n-    \treturn fAbstractSchema;\n+        return fAbstractSchema;\n     }\n-    \n+\n     /**\n-     * Associate an <code>ASModel</code> with a document instance. This \n+     * Associate an <code>ASModel</code> with a document instance. This\n      * <code>ASModel</code> will be used by the \"\n      * <code>validate-if-schema</code>\" and \"\n-     * <code>datatype-normalization</code>\" options during the load of a new \n-     * <code>Document</code>. \n+     * <code>datatype-normalization</code>\" options during the load of a new\n+     * <code>Document</code>.\n      */\n     public void setAbstractSchema(ASModel abstractSchema) {\n-        \n+\n         // since the ASModel associated with this object is an attribute\n         // according to the DOM IDL, we must obliterate anything\n         // that was set before, rather than adding to it.\n@@ -215,8 +217,8 @@ public void setAbstractSchema(ASModel abstractSchema) {\n         }\n         initGrammarPool(fAbstractSchema);\n     }\n-    \n-    \n+\n+\n     // some constants that'll be added into the symbol table\n     String XMLNS;\n     String URI_XSI;\n@@ -225,29 +227,29 @@ public void setAbstractSchema(ASModel abstractSchema) {\n     String XSI_TYPE;\n     String XSI_NIL;\n     String URI_SCHEMAFORSCHEMA;\n-    \n+\n     /**\n      * Parse a Abstract Schema from a location identified by an URI.\n-     * \n-     * @param uri The location of the Abstract Schema to be read. \n+     *\n+     * @param uri The location of the Abstract Schema to be read.\n      * @return The newly created <code>Abstract Schema</code>.\n      * @exception DOMASException\n-     *   Exceptions raised by <code>parseASURI()</code> originate with the \n-     *   installed ErrorHandler, and thus depend on the implementation of \n-     *   the <code>DOMErrorHandler</code> interfaces. The default error \n-     *   handlers will raise a <code>DOMASException</code> if any form of \n-     *   Abstract Schema inconsistencies or warning occurs during the parse, \n-     *   but application defined errorHandlers are not required to do so. \n-     *   <br> WRONG_MIME_TYPE_ERR: Raised when <code>mimeTypeCheck</code> is \n-     *   <code>true</code> and the inputsource has an incorrect MIME Type. \n-     *   See attribute <code>mimeTypeCheck</code>. \n+     *   Exceptions raised by <code>parseASURI()</code> originate with the\n+     *   installed ErrorHandler, and thus depend on the implementation of\n+     *   the <code>DOMErrorHandler</code> interfaces. The default error\n+     *   handlers will raise a <code>DOMASException</code> if any form of\n+     *   Abstract Schema inconsistencies or warning occurs during the parse,\n+     *   but application defined errorHandlers are not required to do so.\n+     *   <br> WRONG_MIME_TYPE_ERR: Raised when <code>mimeTypeCheck</code> is\n+     *   <code>true</code> and the inputsource has an incorrect MIME Type.\n+     *   See attribute <code>mimeTypeCheck</code>.\n      * @exception DOMSystemException\n-     *   Exceptions raised by <code>parseURI()</code> originate with the \n-     *   installed ErrorHandler, and thus depend on the implementation of \n-     *   the <code>DOMErrorHandler</code> interfaces. The default error \n-     *   handlers will raise a DOMSystemException if any form I/O or other \n-     *   system error occurs during the parse, but application defined error \n-     *   handlers are not required to do so. \n+     *   Exceptions raised by <code>parseURI()</code> originate with the\n+     *   installed ErrorHandler, and thus depend on the implementation of\n+     *   the <code>DOMErrorHandler</code> interfaces. The default error\n+     *   handlers will raise a DOMSystemException if any form I/O or other\n+     *   system error occurs during the parse, but application defined error\n+     *   handlers are not required to do so.\n      */\n     public ASModel parseASURI(String uri)\n                               throws DOMASException, Exception {\n@@ -257,30 +259,32 @@ public ASModel parseASURI(String uri)\n            fSchemaHandler = new XSDHandler(fGrammarResolver);\n            fCMBuilder = new CMBuilder(new XSDeclarationPool());\n        }\n-       \n+\n        fErrorReporter = (XMLErrorReporter)fConfiguration.getProperty(ERROR_REPORTER);\n        fEntityResolver = (XMLEntityResolver)fConfiguration.getProperty(ENTITY_RESOLVER);\n-       \n+       if (fEntityResolver == null)\n+           fEntityResolver = (XMLEntityResolver)fConfiguration.getProperty(ENTITY_MANAGER);\n+\n        fSymbolTable = (SymbolTable)fConfiguration.getProperty(SYMBOL_TABLE);\n-       String externalSchemas = \n+       String externalSchemas =\n             (String)(fConfiguration.getProperty(Constants.XERCES_PROPERTY_PREFIX+Constants.SCHEMA_LOCATION));\n-       String noNamespaceExternalSchemas = \n+       String noNamespaceExternalSchemas =\n             (String)(fConfiguration.getProperty(Constants.XERCES_PROPERTY_PREFIX+Constants.SCHEMA_NONS_LOCATION));\n-       \n+\n        XMLNS = fSymbolTable.addSymbol(SchemaSymbols.O_XMLNS);\n        URI_XSI = fSymbolTable.addSymbol(SchemaSymbols.URI_XSI);\n        XSI_SCHEMALOCATION = fSymbolTable.addSymbol(SchemaSymbols.OXSI_SCHEMALOCATION);\n        XSI_NONAMESPACESCHEMALOCATION = fSymbolTable.addSymbol(SchemaSymbols.OXSI_NONAMESPACESCHEMALOCATION);\n        XSI_TYPE = fSymbolTable.addSymbol(SchemaSymbols.OXSI_TYPE);\n        XSI_NIL = fSymbolTable.addSymbol(SchemaSymbols.OXSI_NIL);\n        URI_SCHEMAFORSCHEMA = fSymbolTable.addSymbol(SchemaSymbols.OURI_SCHEMAFORSCHEMA);\n-       \n+\n        initGrammarResolver();\n        fSubGroupHandler.reset();\n        fSchemaHandler.reset(fErrorReporter, fEntityResolver, fSymbolTable, externalSchemas, noNamespaceExternalSchemas);\n-       \n+\n        SchemaGrammar grammar = fSchemaHandler.parseSchema(null,uri);\n-       \n+\n        if (getFeature(SCHEMA_FULL_CHECKING)) {\n            XSConstraints.fullSchemaChecking(fGrammarResolver, fSubGroupHandler, fCMBuilder, fErrorReporter);\n        }\n@@ -291,29 +295,29 @@ public ASModel parseASURI(String uri)\n     }\n \n     /**\n-     * Parse a Abstract Schema from a location identified by an \n+     * Parse a Abstract Schema from a location identified by an\n      * <code>DOMInputSource</code>.\n-     * \n-     * @param is The <code>DOMInputSource</code> from which the source \n-     *   Abstract Schema is to be read. \n+     *\n+     * @param is The <code>DOMInputSource</code> from which the source\n+     *   Abstract Schema is to be read.\n      * @return The newly created <code>ASModel</code>.\n      * @exception DOMASException\n-     *   Exceptions raised by <code>parseASURI()</code> originate with the \n-     *   installed ErrorHandler, and thus depend on the implementation of \n-     *   the <code>DOMErrorHandler</code> interfaces. The default error \n-     *   handlers will raise a <code>DOMASException</code> if any form of \n-     *   Abstract Schema inconsistencies or warning occurs during the parse, \n-     *   but application defined errorHandlers are not required to do so. \n-     *   <br> WRONG_MIME_TYPE_ERR: Raised when <code>mimeTypeCheck</code> is \n-     *   true and the inputsource has an incorrect MIME Type. See attribute \n-     *   <code>mimeTypeCheck</code>. \n+     *   Exceptions raised by <code>parseASURI()</code> originate with the\n+     *   installed ErrorHandler, and thus depend on the implementation of\n+     *   the <code>DOMErrorHandler</code> interfaces. The default error\n+     *   handlers will raise a <code>DOMASException</code> if any form of\n+     *   Abstract Schema inconsistencies or warning occurs during the parse,\n+     *   but application defined errorHandlers are not required to do so.\n+     *   <br> WRONG_MIME_TYPE_ERR: Raised when <code>mimeTypeCheck</code> is\n+     *   true and the inputsource has an incorrect MIME Type. See attribute\n+     *   <code>mimeTypeCheck</code>.\n      * @exception DOMSystemException\n-     *   Exceptions raised by <code>parseURI()</code> originate with the \n-     *   installed ErrorHandler, and thus depend on the implementation of \n-     *   the <code>DOMErrorHandler</code> interfaces. The default error \n-     *   handlers will raise a DOMSystemException if any form I/O or other \n-     *   system error occurs during the parse, but application defined error \n-     *   handlers are not required to do so. \n+     *   Exceptions raised by <code>parseURI()</code> originate with the\n+     *   installed ErrorHandler, and thus depend on the implementation of\n+     *   the <code>DOMErrorHandler</code> interfaces. The default error\n+     *   handlers will raise a DOMSystemException if any form I/O or other\n+     *   system error occurs during the parse, but application defined error\n+     *   handlers are not required to do so.\n      */\n     public ASModel parseASInputSource(DOMInputSource is)\n                                       throws DOMASException, Exception {\n@@ -323,24 +327,24 @@ public ASModel parseASInputSource(DOMInputSource is)\n            fSchemaHandler = new XSDHandler(fGrammarResolver);\n            fCMBuilder = new CMBuilder(new XSDeclarationPool());\n        }\n-       \n+\n        fErrorReporter = (XMLErrorReporter)fConfiguration.getProperty(ERROR_REPORTER);\n        fEntityResolver = (XMLEntityResolver)fConfiguration.getProperty(ENTITY_RESOLVER);\n-       \n+\n        fSymbolTable = (SymbolTable)fConfiguration.getProperty(SYMBOL_TABLE);\n-       String externalSchemas = \n+       String externalSchemas =\n             (String)(fConfiguration.getProperty(Constants.XERCES_PROPERTY_PREFIX+Constants.SCHEMA_LOCATION));\n-       String noNamespaceExternalSchemas = \n+       String noNamespaceExternalSchemas =\n             (String)(fConfiguration.getProperty(Constants.XERCES_PROPERTY_PREFIX+Constants.SCHEMA_NONS_LOCATION));\n-       \n+\n        XMLNS = fSymbolTable.addSymbol(SchemaSymbols.O_XMLNS);\n        URI_XSI = fSymbolTable.addSymbol(SchemaSymbols.URI_XSI);\n        XSI_SCHEMALOCATION = fSymbolTable.addSymbol(SchemaSymbols.OXSI_SCHEMALOCATION);\n        XSI_NONAMESPACESCHEMALOCATION = fSymbolTable.addSymbol(SchemaSymbols.OXSI_NONAMESPACESCHEMALOCATION);\n        XSI_TYPE = fSymbolTable.addSymbol(SchemaSymbols.OXSI_TYPE);\n        XSI_NIL = fSymbolTable.addSymbol(SchemaSymbols.OXSI_NIL);\n        URI_SCHEMAFORSCHEMA = fSymbolTable.addSymbol(SchemaSymbols.OURI_SCHEMAFORSCHEMA);\n-              \n+\n        initGrammarResolver();\n        fSubGroupHandler.reset();\n        fSchemaHandler.reset(fErrorReporter, fEntityResolver, fSymbolTable, externalSchemas, noNamespaceExternalSchemas);\n@@ -355,20 +359,21 @@ public ASModel parseASInputSource(DOMInputSource is)\n        addGrammars(newAsModel, fGrammarResolver);\n        return newAsModel;\n     }\n-    \n+\n     // put all the grammars we have access to in the GrammarResolver\n     private void initGrammarResolver() {\n         fGrammarResolver.reset();\n         fGrammarResolver.putGrammar(URI_SCHEMAFORSCHEMA, SchemaGrammar.SG_SchemaNS);\n-        initGrammarResolverRecurse(fAbstractSchema);\n+        if (fAbstractSchema != null)\n+            initGrammarResolverRecurse(fAbstractSchema);\n     }\n     private void initGrammarResolverRecurse(ASModelImpl currModel) {\n         if(currModel.getGrammar() != null) {\n             fGrammarResolver.putGrammar(currModel.getGrammar());\n         }\n         for(int i = 0; i < currModel.getInternalASModels().size(); i++) {\n             ASModelImpl nextModel = (ASModelImpl)(currModel.getInternalASModels().elementAt(i));\n-            initGrammarResolverRecurse(nextModel); \n+            initGrammarResolverRecurse(nextModel);\n         }\n     }\n \n@@ -378,10 +383,10 @@ private void addGrammars(ASModelImpl model, XSGrammarResolver grammarResolver) {\n             ASModelImpl newModel = new ASModelImpl();\n             newModel.setGrammar(grammarList[i]);\n             model.addASModel(newModel);\n-        } \n+        }\n     } // addGrammars\n \n-    private void initGrammarPool(ASModelImpl currModel) { \n+    private void initGrammarPool(ASModelImpl currModel) {\n         // put all the grammars in fAbstractSchema into the grammar pool.\n         SchemaGrammar grammar = null;\n         if((grammar = currModel.getGrammar()) != null) {",
                "additions": 92,
                "raw_url": "https://github.com/apache/xerces2-j/raw/f9fa5e7d2704ffe4c0b275fbb32b49cd876ce66e/src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "status": "modified",
                "changes": 179,
                "deletions": 87,
                "sha": "c869715a2adcd9a5b1baa4545fe524884d308ec4",
                "blob_url": "https://github.com/apache/xerces2-j/blob/f9fa5e7d2704ffe4c0b275fbb32b49cd876ce66e/src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "filename": "src/org/apache/xerces/parsers/DOMASBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/DOMASBuilderImpl.java?ref=f9fa5e7d2704ffe4c0b275fbb32b49cd876ce66e"
            }
        ],
        "bug_id": "xerces2-j_96",
        "parent": "https://github.com/apache/xerces2-j/commit/49f1ef797c91cb9ebe3480fabda70c2b87f3929b",
        "message": "1. XSDHandler is always expecting an entity resolver, so if the application didn't\nset one, we should use entity manager (the default implmenation) instead.\n2. A check to prevent NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318019 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/49f1ef797c91cb9ebe3480fabda70c2b87f3929b",
        "file": [
            {
                "patch": "@@ -503,7 +503,7 @@ public XMLInputSource resolveEntity(String publicId, String systemId,\n \n         // if no base systemId given, assume that it's relative\n         // to the systemId of the current scanned entity\n-        if (baseSystemId == null) {\n+        if (baseSystemId == null && fCurrentEntity != null) {\n             baseSystemId = fCurrentEntity.systemId;\n         }\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/49f1ef797c91cb9ebe3480fabda70c2b87f3929b/src/org/apache/xerces/impl/XMLEntityManager.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "3d59caf2329d3794902bbca1aa20881aba90b256",
                "blob_url": "https://github.com/apache/xerces2-j/blob/49f1ef797c91cb9ebe3480fabda70c2b87f3929b/src/org/apache/xerces/impl/XMLEntityManager.java",
                "filename": "src/org/apache/xerces/impl/XMLEntityManager.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLEntityManager.java?ref=49f1ef797c91cb9ebe3480fabda70c2b87f3929b"
            }
        ],
        "bug_id": "xerces2-j_97",
        "parent": "https://github.com/apache/xerces2-j/commit/244768ec01f3a7d186e91cc5431abb34d273d918",
        "message": "In some cases (preparse a grammar via dom3 as api, for example), there is\nno current entity. This check prevents seme NPE to happen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@318018 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/f5b718eddaa50193964657bab5016a16024a0680",
        "file": [
            {
                "patch": "@@ -410,12 +410,13 @@ else if ((localName.equals(SchemaSymbols.ELT_INCLUDE)) ||\n             //          effect.\n \n             XSDocumentInfo newSchemaInfo = null;\n-             if (fLastSchemaWasDuplicate) {\n-                 newSchemaInfo = (XSDocumentInfo)fDoc2XSDocumentMap.get(newSchemaRoot);\n-             } else {\n+            if (fLastSchemaWasDuplicate) {\n+                newSchemaInfo = (XSDocumentInfo)fDoc2XSDocumentMap.get(newSchemaRoot);\n+            } else {\n                 newSchemaInfo = constructTrees(newSchemaRoot, schemaNamespace);\n             }\n-            if (localName.equals(SchemaSymbols.ELT_REDEFINE)) {\n+            if (localName.equals(SchemaSymbols.ELT_REDEFINE) &&\n+                newSchemaInfo != null) {\n                 // must record which schema we're redefining so that we can\n                 // rename the right things later!\n                 fRedefine2XSDMap.put(child, newSchemaInfo);",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/f5b718eddaa50193964657bab5016a16024a0680/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "status": "modified",
                "changes": 9,
                "deletions": 4,
                "sha": "b4dcff3a8e52a4145ee6a7898f5780124e22ef26",
                "blob_url": "https://github.com/apache/xerces2-j/blob/f5b718eddaa50193964657bab5016a16024a0680/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDHandler.java?ref=f5b718eddaa50193964657bab5016a16024a0680"
            }
        ],
        "bug_id": "xerces2-j_98",
        "parent": "https://github.com/apache/xerces2-j/commit/8ee43f79e0038c7288ea87d9c6d5f19cb8884929",
        "message": "Sometimes constructTrees returns null (for example, if the file is not found, or there is no location hint).\nWe need to check whether newSchemaInfo is null to avoid NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317792 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/54bba8a8585c38efada8cbb31f04f4884acc2468",
        "file": [
            {
                "patch": "@@ -383,7 +383,8 @@ boolean traverseAttrsAndAttrGrps(Element firstAttr, XSAttributeGroupDecl attrGrp\n             else if (childName.equals(SchemaSymbols.ELT_ATTRIBUTEGROUP)) {\n                 //REVISIT: do we need to save some state at this point??\n                 tempAttrGrp = fSchemaHandler.fAttributeGroupTraverser.traverseLocal(\n-                                                                                   child, schemaDoc, grammar);\n+                       child, schemaDoc, grammar);\n+                if(tempAttrGrp == null ) break;\n                 XSAttributeUse[] attrUseS = tempAttrGrp.getAttributeUses();\n                 XSAttributeUse existingAttrUse = null;\n                 for (int i=0; i<attrUseS.length; i++) {",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "e4d17d0317ab6b14386eedcc40e918075b18aa6d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDAbstractTraverser.java?ref=54bba8a8585c38efada8cbb31f04f4884acc2468"
            },
            {
                "patch": "@@ -666,10 +666,20 @@ protected Object getGlobalDecl(XSDocumentInfo currSchema,\n         XSDocumentInfo schemaWithDecl = null;\n         SchemaGrammar sGrammar = null;\n         Element decl = null;\n+        Object retObj = null;\n \n         if (declToTraverse.uri != null &&\n             declToTraverse.uri.equals(SchemaSymbols.URI_SCHEMAFORSCHEMA)) {\n             sGrammar = SchemaGrammar.SG_SchemaNS;\n+            if(currSchema.fTargetNamespace != SchemaSymbols.URI_SCHEMAFORSCHEMA) {\n+                if(declType == TYPEDECL_TYPE) {\n+                    retObj = sGrammar.getGlobalTypeDecl(declToTraverse.localpart);\n+                }\n+                if (retObj == null) {\n+                    fElementTraverser.reportGenericSchemaError(\"Could not locate a component corresponding to \" + declToTraverse.localpart);\n+                    return null;\n+                }\n+            }\n         } else {\n             String declKey = declToTraverse.uri == null? \",\"+declToTraverse.localpart:\n                     declToTraverse.uri+\",\"+declToTraverse.localpart;\n@@ -715,7 +725,6 @@ protected Object getGlobalDecl(XSDocumentInfo currSchema,\n             sGrammar = fGrammarResolver.getGrammar(schemaWithDecl.fTargetNamespace);\n         }\n \n-        Object retObj = null;\n         switch (declType) {\n         case ATTRIBUTE_TYPE :\n             retObj = sGrammar.getGlobalAttributeDecl(declToTraverse.localpart);",
                "additions": 10,
                "raw_url": "https://github.com/apache/xerces2-j/raw/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "status": "modified",
                "changes": 11,
                "deletions": 1,
                "sha": "36f2e69885a40364ade02828d2c2c2a8beadecb8",
                "blob_url": "https://github.com/apache/xerces2-j/blob/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDHandler.java?ref=54bba8a8585c38efada8cbb31f04f4884acc2468"
            },
            {
                "patch": "@@ -126,6 +126,7 @@\n                 ((XInt)schemaAttrs[XSAttributeChecker.ATTIDX_FINALDEFAULT]).shortValue();\n             fTargetNamespace =\n                 (String)schemaAttrs[XSAttributeChecker.ATTIDX_TARGETNAMESPACE];\n+            if(fTargetNamespace.length() == 0) fTargetNamespace = null;\n             if (fTargetNamespace != null)\n                 fTargetNamespace = symbolTable.addSymbol(fTargetNamespace);\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDocumentInfo.java",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "5638d111695c3e74bb70dad77f39a3a5c7efa79f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/54bba8a8585c38efada8cbb31f04f4884acc2468/src/org/apache/xerces/impl/v2/XSDocumentInfo.java",
                "filename": "src/org/apache/xerces/impl/v2/XSDocumentInfo.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/v2/XSDocumentInfo.java?ref=54bba8a8585c38efada8cbb31f04f4884acc2468"
            }
        ],
        "bug_id": "xerces2-j_99",
        "parent": "https://github.com/apache/xerces2-j/commit/d64b6cce688f934f15fd0ec944682cc7195cabb5",
        "message": "fixed some NPEs.  Also fixed a problem arising when a reference was made to a component from the schema-for-schema namespace that could not be found.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317727 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/76d3e42bf13d51baa2d64904f1815445ba3a8706",
        "file": [
            {
                "patch": "@@ -1008,27 +1008,30 @@ private void prepareForSerialization(XMLSerializer ser, Node node) {\n                 //no way to test the version...\n                 //ignore the exception\n             }\n-            while (node != null) {\n-              verify(node, verifyNames, false);\n-              // Move down to first child\n-              next = node.getFirstChild();\n-              // No child nodes, so walk tree\n-              while (next == null) {\n-                // Move to sibling if possible.\n-                next = node.getNextSibling();\n-                if (next == null){\n-                    node = node.getParentNode();\n-                    if (node == null || root == node){\n-                        next = null;\n-                        break;                   \n+            if (node.getFirstChild() != null) {\n+                while (node != null) {\n+                    verify(node, verifyNames, false);\n+                    // Move down to first child\n+                    next = node.getFirstChild();\n+                    // No child nodes, so walk tree\n+                    while (next == null) {\n+                      // Move to sibling if possible.\n+                      next = node.getNextSibling();\n+                      if (next == null) {\n+                          node = node.getParentNode();\n+                          if (root == node){\n+                              next = null;\n+                              break;                   \n+                          }\n+                          next = node.getNextSibling();\n+                      }\n                     }\n-                    next = node.getNextSibling();\n+                    node = next;\n                 }\n-              }\n-              node = next;\n-          }\n- \n-\n+            }\n+            else {\n+                verify(node, verifyNames, false);\n+            }\n         }\n     }\n     ",
                "additions": 22,
                "raw_url": "https://github.com/apache/xerces2-j/raw/76d3e42bf13d51baa2d64904f1815445ba3a8706/src/org/apache/xml/serialize/DOMSerializerImpl.java",
                "status": "modified",
                "changes": 41,
                "deletions": 19,
                "sha": "e46dfa69d6dc424124ab1a4a8a4bb2931507abfc",
                "blob_url": "https://github.com/apache/xerces2-j/blob/76d3e42bf13d51baa2d64904f1815445ba3a8706/src/org/apache/xml/serialize/DOMSerializerImpl.java",
                "filename": "src/org/apache/xml/serialize/DOMSerializerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xml/serialize/DOMSerializerImpl.java?ref=76d3e42bf13d51baa2d64904f1815445ba3a8706"
            }
        ],
        "bug_id": "xerces2-j_100",
        "parent": "https://github.com/apache/xerces2-j/commit/76aa6562a5c5d042d95f1211b28ad18e6c67e47d",
        "message": "Fixing JIRA Bug #1023:\nhttp://nagoya.apache.org/jira/browse/XERCESJ-1023\n\nThe previous fix masked the real bug here. If the root node\nbeing serialized has no children we were walking up the tree\ninstead of stopping immediately. The old fix just prevented\nthe NullPointerException but didn't stop well-formedness\nchecking of the root node's following siblings and following\nsiblings of its ancestors.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320113 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/39bb7f6f50e7b98f13cc703c50da536dce255a27",
        "file": [
            {
                "patch": "@@ -120,10 +120,10 @@\n     //\n     // Constants\n     //\n-    \n+\n     /** Serialization version. */\n     static final long serialVersionUID = 0;\n-    \n+\n     //\n     // Data\n     //\n@@ -147,7 +147,7 @@\n \n     /**Experimental DOM Level 3 feature: Document version */\n     protected String version;\n-                                                                           \n+\n     /**Experimental DOM Level 3 feature: Document standalone */\n     protected boolean standalone;\n \n@@ -159,13 +159,13 @@\n \n     /** Identifiers. */\n     protected Hashtable identifiers;\n-    \n+\n     // DOM Level 3: normalizeDocument\n     transient DOMNormalizer domNormalizer = null;\n     transient DOMConfigurationImpl fConfiguration= null;\n \n     // support of XPath API\n-    transient Object fXPathEvaluator = null;   \n+    transient Object fXPathEvaluator = null;\n \n     /** Table for quick check of child insertion. */\n     private final static int[] kidOK;\n@@ -214,14 +214,14 @@\n     /** Bypass error checking. */\n     protected boolean errorChecking = true;\n \n-    /** The following are required for compareDocumentPosition \n+    /** The following are required for compareDocumentPosition\n     */\n     // Document number.   Documents are ordered across the implementation using\n-    // positive integer values.  Documents are assigned numbers on demand. \n+    // positive integer values.  Documents are assigned numbers on demand.\n     private int documentNumber=0;\n-    // Node counter and table.  Used to assign numbers to nodes for this \n-    // document.  Node number values are negative integers.  Nodes are \n-    // assigned numbers on demand. \n+    // Node counter and table.  Used to assign numbers to nodes for this\n+    // document.  Node number values are negative integers.  Nodes are\n+    // assigned numbers on demand.\n     private int nodeCounter = 0;\n     private Hashtable nodeTable;\n \n@@ -268,14 +268,14 @@\n      * since it has to operate in terms of a particular implementation.\n      */\n     public CoreDocumentImpl() {\n-        this(false);\t\t\n+        this(false);\n     }\n \n     /** Constructor. */\n     public CoreDocumentImpl(boolean grammarAccess) {\n         super(null);\n         ownerDocument = this;\n-        allowGrammarAccess = grammarAccess;       \n+        allowGrammarAccess = grammarAccess;\n     }\n \n     /**\n@@ -477,7 +477,7 @@ else if (type == Node.DOCUMENT_TYPE_NODE) {\n         return oldChild;\n     }   // replaceChild(Node,Node):Node\n \n-    /* \n+    /*\n      * Get Node text content\n      * @since DOM Level 3\n      */\n@@ -493,12 +493,12 @@ public void setTextContent(String textContent)\n         throws DOMException {\n         // no-op\n     }\n-    \n+\n \t/**\n \t * @since DOM Level 3\n \t */\n \tpublic Object getFeature(String feature, String version) {\n-        if ((feature.equalsIgnoreCase(\"XPath\") \n+        if ((feature.equalsIgnoreCase(\"XPath\")\n              || feature.equalsIgnoreCase(\"+XPath\"))&& version.equals(\"3.0\")){\n \t\t\ttry{\n \t\t\t\tClass xpathClass = ObjectFactory.findProviderClass(\n@@ -841,8 +841,8 @@ public boolean getXmlStandalone() {\n     /**\n      * DOM Level 3 WD - Experimental.\n      * The location of the document or <code>null</code> if undefined.\n-     * <br>Beware that when the <code>Document</code> supports the feature \n-     * \"HTML\" , the href attribute of the HTML BASE element takes precedence \n+     * <br>Beware that when the <code>Document</code> supports the feature\n+     * \"HTML\" , the href attribute of the HTML BASE element takes precedence\n      * over this attribute.\n      * @since DOM Level 3\n      */\n@@ -855,8 +855,8 @@ public String getDocumentURI(){\n      * DOM Level 3 WD - Experimental.\n      * Renaming node\n      */\n-    public Node renameNode(Node n, \n-                           String namespaceURI, \n+    public Node renameNode(Node n,\n+                           String namespaceURI,\n                            String name)\n                            throws DOMException{\n \n@@ -900,7 +900,7 @@ public Node renameNode(Node n,\n \t\t\t}\n \t\t\t// move specified attributes to new node\n \t\t\tnel.moveSpecifiedAttributes(el);\n-\t\t    \n+\n \t\t\t// attach user data to new node\n \t\t\tsetUserDataTable(nel, data);\n \n@@ -960,7 +960,7 @@ public Node renameNode(Node n,\n \t\t\t    nat.appendChild(child);\n \t\t\t    child = at.getFirstChild();\n \t\t\t}\n-\t\t    \n+\n \t\t\t// attach user data to new node\n \t\t\tsetUserDataTable(nat, data);\n \n@@ -977,10 +977,10 @@ public Node renameNode(Node n,\n \t\t}\n \t\t// fire AttributeNameChanged event\n \t\trenamedAttrNode((Attr) n, at);\n-\t\t\n+\n \t\treturn at;\n \t    }\n-\t    default: { \n+\t    default: {\n                 String msg = DOMMessageFormatter.formatMessage(DOMMessageFormatter.DOM_DOMAIN, \"NOT_SUPPORTED_ERR\", null);\n                 throw new DOMException(DOMException.NOT_SUPPORTED_ERR, msg);\n \t    }\n@@ -1001,7 +1001,7 @@ public void normalizeDocument(){\n         if (needsSyncChildren()) {\n             synchronizeChildren();\n         }\n-        \n+\n         if (domNormalizer == null) {\n             domNormalizer = new DOMNormalizer();\n         }\n@@ -1019,8 +1019,8 @@ public void normalizeDocument(){\n \n \n     /**\n-     *  The configuration used when <code>Document.normalizeDocument</code> is \n-     * invoked. \n+     *  The configuration used when <code>Document.normalizeDocument</code> is\n+     * invoked.\n      * @since DOM Level 3\n      */\n     public DOMConfiguration getConfig(){\n@@ -1030,13 +1030,13 @@ public DOMConfiguration getConfig(){\n         return fConfiguration;\n     }\n \n-    \n+\n     /**\n      * DOM Level 3 WD - Experimental.\n      * Retrieve baseURI\n      */\n     public String getBaseURI() {\n-        return fDocumentURI;            \n+        return fDocumentURI;\n     }\n \n     /**\n@@ -1052,35 +1052,35 @@ public void setDocumentURI(String documentURI){\n     //\n     /**\n      * DOM Level 3 WD - Experimental.\n-     * Indicates whether the method load should be synchronous or \n-     * asynchronous. When the async attribute is set to <code>true</code> \n-     * the load method returns control to the caller before the document has \n-     * completed loading. The default value of this property is \n+     * Indicates whether the method load should be synchronous or\n+     * asynchronous. When the async attribute is set to <code>true</code>\n+     * the load method returns control to the caller before the document has\n+     * completed loading. The default value of this property is\n      * <code>false</code>.\n-     * <br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR \n-     * if the implementation doesn't support the mode the attribute is being \n-     * set to. Should the DOM spec define the default value of this \n-     * property? What if implementing both async and sync IO is impractical \n-     * in some systems?  2001-09-14. default is <code>false</code> but we \n-     * need to check with Mozilla and IE. \n+     * <br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR\n+     * if the implementation doesn't support the mode the attribute is being\n+     * set to. Should the DOM spec define the default value of this\n+     * property? What if implementing both async and sync IO is impractical\n+     * in some systems?  2001-09-14. default is <code>false</code> but we\n+     * need to check with Mozilla and IE.\n      */\n     public boolean getAsync() {\n         return false;\n     }\n-    \n+\n     /**\n      * DOM Level 3 WD - Experimental.\n-     * Indicates whether the method load should be synchronous or \n-     * asynchronous. When the async attribute is set to <code>true</code> \n-     * the load method returns control to the caller before the document has \n-     * completed loading. The default value of this property is \n+     * Indicates whether the method load should be synchronous or\n+     * asynchronous. When the async attribute is set to <code>true</code>\n+     * the load method returns control to the caller before the document has\n+     * completed loading. The default value of this property is\n      * <code>false</code>.\n-     * <br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR \n-     * if the implementation doesn't support the mode the attribute is being \n-     * set to. Should the DOM spec define the default value of this \n-     * property? What if implementing both async and sync IO is impractical \n-     * in some systems?  2001-09-14. default is <code>false</code> but we \n-     * need to check with Mozilla and IE. \n+     * <br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR\n+     * if the implementation doesn't support the mode the attribute is being\n+     * set to. Should the DOM spec define the default value of this\n+     * property? What if implementing both async and sync IO is impractical\n+     * in some systems?  2001-09-14. default is <code>false</code> but we\n+     * need to check with Mozilla and IE.\n      */\n     public void setAsync(boolean async) {\n         if (async) {\n@@ -1090,9 +1090,9 @@ public void setAsync(boolean async) {\n     }\n     /**\n      * DOM Level 3 WD - Experimental.\n-     * If the document is currently being loaded as a result of the method \n-     * <code>load</code> being invoked the loading and parsing is \n-     * immediately aborted. The possibly partial result of parsing the \n+     * If the document is currently being loaded as a result of the method\n+     * <code>load</code> being invoked the loading and parsing is\n+     * immediately aborted. The possibly partial result of parsing the\n      * document is discarded and the document is cleared.\n      */\n     public void abort() {\n@@ -1101,9 +1101,9 @@ public void abort() {\n     /**\n      * DOM Level 3 WD - Experimental.\n      *\n-     * Replaces the content of the document with the result of parsing the \n-     * given URI. Invoking this method will either block the caller or \n-     * return to the caller immediately depending on the value of the async \n+     * Replaces the content of the document with the result of parsing the\n+     * given URI. Invoking this method will either block the caller or\n+     * return to the caller immediately depending on the value of the async\n      * attribute. Once the document is fully loaded a \"load\" event (as\n      * defined in [<a href='http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331'>DOM Level 3 Events</a>]\n      * , except that the <code>Event.targetNode</code> will be the document,\n@@ -1122,15 +1122,15 @@ public void abort() {\n      * call to <code>DOMParser.parseWithContext</code> with an input stream\n      * referencing the URI that was passed to this call, the document as the\n      * context node, and the action <code>ACTION_REPLACE_CHILDREN</code>.\n-     * @param uri The URI reference for the XML file to be loaded. If this is \n+     * @param uri The URI reference for the XML file to be loaded. If this is\n      *  a relative URI, the base URI used by the implementation is\n      *  implementation dependent.\n-     * @return If async is set to <code>true</code> <code>load</code> returns \n-     *   <code>true</code> if the document load was successfully initiated. \n+     * @return If async is set to <code>true</code> <code>load</code> returns\n+     *   <code>true</code> if the document load was successfully initiated.\n      *   If an error occurred when initiating the document load,\n-     *   <code>load</code> returns <code>false</code>.If async is set to \n-     *   <code>false</code> <code>load</code> returns <code>true</code> if \n-     *   the document was successfully loaded and parsed. If an error \n+     *   <code>load</code> returns <code>false</code>.If async is set to\n+     *   <code>false</code> <code>load</code> returns <code>true</code> if\n+     *   the document was successfully loaded and parsed. If an error\n      *   occurred when either loading or parsing the URI, <code>load</code>\n      *   returns <code>false</code>.\n      */\n@@ -1140,16 +1140,16 @@ public boolean load(String uri) {\n \n     /**\n      * DOM Level 3 WD - Experimental.\n-     * Replace the content of the document with the result of parsing the \n+     * Replace the content of the document with the result of parsing the\n      * input string, this method is always synchronous.\n      * @param source A string containing an XML document.\n-     * @return <code>true</code> if parsing the input string succeeded \n+     * @return <code>true</code> if parsing the input string succeeded\n      *   without errors, otherwise <code>false</code>.\n      */\n     public boolean loadXML(String source) {\n         return false;\n     }\n-    \n+\n     /**\n      * DOM Level 3 WD - Experimental.\n      * Save the document or the given node and all its descendants to a string\n@@ -1160,12 +1160,12 @@ public boolean loadXML(String source) {\n      * call to <code>DOMSerializer.writeToString</code> with the document as\n      * the node to write.\n      * @param node Specifies what to serialize, if this parameter is\n-     *   <code>null</code> the whole document is serialized, if it's \n+     *   <code>null</code> the whole document is serialized, if it's\n      *   non-null the given node is serialized.\n      * @return The serialized document or <code>null</code> in case an error\n      *   occurred.\n      * @exception DOMException\n-     *   WRONG_DOCUMENT_ERR: Raised if the node passed in as the node \n+     *   WRONG_DOCUMENT_ERR: Raised if the node passed in as the node\n      *   parameter is from an other document.\n      */\n     public String saveXML(Node node)\n@@ -1291,34 +1291,34 @@ public ElementDefinitionImpl createElementDefinition(String name)\n \n     // other non-DOM methods\n \n-    /** NON-DOM:  Get the number associated with this document.   Used to \n-        order documents in the implementation.    \n+    /** NON-DOM:  Get the number associated with this document.   Used to\n+        order documents in the implementation.\n     */\n     protected int getNodeNumber() {\n          if (documentNumber==0) {\n-          \n+\n             CoreDOMImplementationImpl cd = (CoreDOMImplementationImpl)CoreDOMImplementationImpl.getDOMImplementation();\n-            documentNumber = cd.assignDocumentNumber();   \n+            documentNumber = cd.assignDocumentNumber();\n          }\n          return documentNumber;\n     }\n-           \n-        \n-    /** NON-DOM:  Get a number associated with a node created with respect \n-        to this document.   Needed for compareDocumentPosition when nodes \n-        are disconnected.  This is only used on demand. \n-    */ \n+\n+\n+    /** NON-DOM:  Get a number associated with a node created with respect\n+        to this document.   Needed for compareDocumentPosition when nodes\n+        are disconnected.  This is only used on demand.\n+    */\n     protected int getNodeNumber(Node node) {\n \n-         // Check if the node is already in the hash \n-         // If so, retrieve the node number  \n-         // If not, assign a number to the node \n+         // Check if the node is already in the hash\n+         // If so, retrieve the node number\n+         // If not, assign a number to the node\n          // Node numbers are negative, from -1 to -n\n          int num;\n          if (nodeTable == null) {\n              nodeTable = new Hashtable();\n              num = --nodeCounter;\n-             nodeTable.put(node, new Integer(num));   \n+             nodeTable.put(node, new Integer(num));\n          }\n          else {\n              Integer n = (Integer)nodeTable.get(node);\n@@ -1374,7 +1374,7 @@ private Node importNode(Node source, boolean deep, boolean cloningDoc,\n         //  newnode.ownerDocument=this;\n         // }\n         // else\n-        \n+\n         int type = source.getNodeType();\n         switch (type) {\n             case ELEMENT_NODE: {\n@@ -1395,7 +1395,7 @@ private Node importNode(Node source, boolean deep, boolean cloningDoc,\n                         Attr attr = (Attr)sourceAttrs.item(index);\n \n                         // NOTE: this methods is used for both importingNode\n-                        // and cloning the document node. In case of the \n+                        // and cloning the document node. In case of the\n                         // clonning default attributes should be copied.\n                         // But for importNode defaults should be ignored.\n                         if (attr.getSpecified() || cloningDoc) {\n@@ -1513,7 +1513,7 @@ private Node importNode(Node source, boolean deep, boolean cloningDoc,\n                 newnode = createComment(source.getNodeValue());\n                 break;\n             }\n-            \n+\n             case DOCUMENT_TYPE_NODE: {\n                 // unless this is used as part of cloning a Document\n                 // forbid it for the sake of being compliant to the DOM spec\n@@ -1543,7 +1543,7 @@ private Node importNode(Node source, boolean deep, boolean cloningDoc,\n                                                      reversedIdentifiers));\n                     }\n                 }\n-                \n+\n                 // NOTE: At this time, the DOM definition of DocumentType\n                 // doesn't cover Elements and their Attributes. domimpl's\n                 // extentions in that area will not be preserved, even if\n@@ -1835,9 +1835,9 @@ public Element createElementNS(String namespaceURI, String qualifiedName)\n     }\n \n     /**\n-     * NON-DOM: a factory method used by the Xerces DOM parser \n+     * NON-DOM: a factory method used by the Xerces DOM parser\n      * to create an element.\n-     * \n+     *\n      * @param namespaceURI The namespace URI of the element to\n      *                     create.\n      * @param qualifiedName The qualified name of the element type to\n@@ -1854,7 +1854,7 @@ public Element createElementNS(String namespaceURI, String qualifiedName,\n     {\n         return new ElementNSImpl(this, namespaceURI, qualifiedName, localpart);\n     }\n-    \n+\n     /**\n      * Introduced in DOM Level 2. <p>\n      * Creates an attribute of the given qualified name and namespace URI.\n@@ -1880,7 +1880,7 @@ public Attr createAttributeNS(String namespaceURI, String qualifiedName)\n     }\n \n     /**\n-     * NON-DOM: a factory method used by the Xerces DOM parser \n+     * NON-DOM: a factory method used by the Xerces DOM parser\n      * to create an element.\n      *\n      * @param namespaceURI  The namespace URI of the attribute to\n@@ -1953,7 +1953,7 @@ public static boolean isXMLName(String s) {\n \n     } // isXMLName(String):boolean\n \n-   \n+\n     //\n     // Protected methods\n     //\n@@ -2030,22 +2030,22 @@ void freeNodeListCache(NodeListCache c) {\n     }\n \n     /**\n-     * Associate an object to a key on this node. The object can later be \n-     * retrieved from this node by calling <code>getUserData</code> with the \n+     * Associate an object to a key on this node. The object can later be\n+     * retrieved from this node by calling <code>getUserData</code> with the\n      * same key.\n      * @param n The node to associate the object to.\n      * @param key The key to associate the object to.\n-     * @param data The object to associate to the given key, or \n+     * @param data The object to associate to the given key, or\n      *   <code>null</code> to remove any existing association to that key.\n-     * @param handler The handler to associate to that key, or \n+     * @param handler The handler to associate to that key, or\n      *   <code>null</code>.\n-     * @return Returns the <code>DOMObject</code> previously associated to \n+     * @return Returns the <code>DOMObject</code> previously associated to\n      *   the given key on this node, or <code>null</code> if there was none.\n      * @since DOM Level 3\n      *\n      * REVISIT: we could use a free list of UserDataRecord here\n      */\n-    public Object setUserData(Node n, String key, \n+    public Object setUserData(Node n, String key,\n                               Object data, UserDataHandler handler) {\n         if (data == null) {\n             if (userData != null) {\n@@ -2084,12 +2084,12 @@ public Object setUserData(Node n, String key,\n     }\n \n     /**\n-     * Retrieves the object associated to a key on a this node. The object \n-     * must first have been set to this node by calling \n+     * Retrieves the object associated to a key on a this node. The object\n+     * must first have been set to this node by calling\n      * <code>setUserData</code> with the same key.\n      * @param n The node the object is associated to.\n      * @param key The key the object is associated to.\n-     * @return Returns the <code>DOMObject</code> associated to the given key \n+     * @return Returns the <code>DOMObject</code> associated to the given key\n      *   on this node, or <code>null</code> if there was none.\n      * @since DOM Level 3\n      */\n@@ -2191,15 +2191,16 @@ void callUserDataHandlers(Node n, Node c, short operation) {\n             }\n         }\n     }*/\n-    \n+\n     protected final void checkNamespaceWF( String qname, int colon1,\n \t\t                                             int colon2) {\n-                                                        \n+\n \t\tif (!errorChecking) {\n \t\t\treturn;\n \t\t}\n \t\t// it is an error for NCName to have more than one ':'\n \t\t// check if it is valid QName [Namespace in XML production 6]\n+        // :camera , nikon:camera:minolta, camera:\n \t\tif (colon1 == 0 || colon1 == qname.length() - 1 || colon2 != colon1) {\n \t\t\tString msg =\n \t\t\t\tDOMMessageFormatter.formatMessage(\n@@ -2248,7 +2249,7 @@ else if (\n      * @param n\n      * @param data\n      */\n-     protected final void checkQName(String prefix, \n+     protected final void checkQName(String prefix,\n                                        String local){\n         if (!errorChecking) {\n             return;\n@@ -2276,11 +2277,11 @@ protected final void checkQName(String prefix,\n                         DOMException.INVALID_CHARACTER_ERR,\n                         msg);\n                 }\n-            }            \n+            }\n \n-\t\t} \n+\t\t}\n         length = local.length();\n-        // check local part \n+        // check local part\n         if (!XMLChar.isNCNameStart(local.charAt(0))) {\n             // REVISIT: add qname parameter to the message\n             String msg =\n@@ -2299,15 +2300,15 @@ protected final void checkQName(String prefix,\n                         null);\n                 throw new DOMException(DOMException.INVALID_CHARACTER_ERR, msg);\n             }\n-        }           \n+        }\n     }\n \n-    boolean isNormalizeDocRequired (){        \n-        // REVISIT: Implement to optimize when normalization \n-        // is required \n+    boolean isNormalizeDocRequired (){\n+        // REVISIT: Implement to optimize when normalization\n+        // is required\n         return true;\n     }\n-    \n+\n     /**\n      * NON-DOM: kept for backward compatibility\n      * Store user data related to a given node",
                "additions": 110,
                "raw_url": "https://github.com/apache/xerces2-j/raw/39bb7f6f50e7b98f13cc703c50da536dce255a27/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "status": "modified",
                "changes": 219,
                "deletions": 109,
                "sha": "a4d4eeb238b520d0a896d177e040e9b98ef5ff28",
                "blob_url": "https://github.com/apache/xerces2-j/blob/39bb7f6f50e7b98f13cc703c50da536dce255a27/src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/CoreDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/CoreDocumentImpl.java?ref=39bb7f6f50e7b98f13cc703c50da536dce255a27"
            },
            {
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights \n+ * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Xerces\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -66,7 +66,7 @@\n \n \n /**\n- * ElementNSImpl inherits from ElementImpl and adds namespace support. \n+ * ElementNSImpl inherits from ElementImpl and adds namespace support.\n  * <P>\n  * The qualified name is the node name, and we store localName which is also\n  * used in all queries. On the other hand we recompute the prefix when\n@@ -91,10 +91,10 @@\n \n     /** DOM2: Namespace URI. */\n     protected String namespaceURI;\n-  \n+\n     /** DOM2: localName. */\n     protected String localName;\n-    \n+\n     /** DOM3: type information */\n     // REVISIT: we are losing the type information in DOM during serialization\n     transient XSTypeDefinition type;\n@@ -105,25 +105,44 @@ protected ElementNSImpl() {\n     /**\n      * DOM2: Constructor for Namespace implementation.\n      */\n-    protected ElementNSImpl(CoreDocumentImpl ownerDocument, \n+    protected ElementNSImpl(CoreDocumentImpl ownerDocument,\n                             String namespaceURI,\n-                            String qualifiedName) \n+                            String qualifiedName)\n         throws DOMException\n     {\n         super(ownerDocument, qualifiedName);\n         setName(namespaceURI, qualifiedName);\n     }\n \n \tprivate void setName(String namespaceURI, String qname) {\n+\n \t\tString prefix;\n \t\t// DOM Level 3: namespace URI is never empty string.\n \t\tthis.namespaceURI = namespaceURI;\n \t\tif (namespaceURI != null) {\n-\t\t\tthis.namespaceURI =\n-\t\t\t\t(namespaceURI.length() == 0) ? null : namespaceURI;\n+            //convert the empty string to 'null'\n+\t\t\tthis.namespaceURI =\t(namespaceURI.length() == 0) ? null : namespaceURI;\n \t\t}\n-\t\tint colon1 = qname.indexOf(':');\n-\t\tint colon2 = qname.lastIndexOf(':');\n+\n+        int colon1, colon2 ;\n+\n+        //NAMESPACE_ERR:\n+        //1. if the qualified name is 'null' it is malformed.\n+        //2. or if the qualifiedName is null and the namespaceURI is different from null,\n+        // We dont need to check for namespaceURI != null, if qualified name is null throw DOMException.\n+        if(qname == null){\n+\t\t\t\tString msg =\n+\t\t\t\t\tDOMMessageFormatter.formatMessage(\n+\t\t\t\t\t\tDOMMessageFormatter.DOM_DOMAIN,\n+\t\t\t\t\t\t\"NAMESPACE_ERR\",\n+\t\t\t\t\t\tnull);\n+\t\t\t\tthrow new DOMException(DOMException.NAMESPACE_ERR, msg);\n+        }\n+        else{\n+\t\t    colon1 = qname.indexOf(':');\n+\t\t    colon2 = qname.lastIndexOf(':');\n+        }\n+\n \t\townerDocument().checkNamespaceWF(qname, colon1, colon2);\n \t\tif (colon1 < 0) {\n \t\t\t// there is no prefix\n@@ -141,17 +160,33 @@ private void setName(String namespaceURI, String qname) {\n \t\t\t\t\t\tnull);\n \t\t\t\tthrow new DOMException(DOMException.NAMESPACE_ERR, msg);\n \t\t\t}\n-\t\t}\n+\t\t}//there is a prefix\n \t\telse {\n-\t\t\tprefix = qname.substring(0, colon1);\n+            prefix = qname.substring(0, colon1);\n+\n+            //NAMESPACE_ERR:\n+            //1. if the qualifiedName has a prefix and the namespaceURI is null,\n+\n+            //2. or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI\n+            //is different from \" http://www.w3.org/XML/1998/namespace\"\n+\n+            if( namespaceURI == null || ( prefix.equals(\"xml\") && !namespaceURI.equals(NamespaceContext.XML_URI) )){\n+\t\t\t\tString msg =\n+\t\t\t\t\tDOMMessageFormatter.formatMessage(\n+\t\t\t\t\t\tDOMMessageFormatter.DOM_DOMAIN,\n+\t\t\t\t\t\t\"NAMESPACE_ERR\",\n+\t\t\t\t\t\tnull);\n+\t\t\t\tthrow new DOMException(DOMException.NAMESPACE_ERR, msg);\n+            }\n+\n \t\t\tlocalName = qname.substring(colon2 + 1);\n \t\t\townerDocument().checkQName(prefix, localName);\n \t\t\townerDocument().checkDOMNSErr(prefix, namespaceURI);\n \t\t}\n \t}\n \n     // when local name is known\n-    protected ElementNSImpl(CoreDocumentImpl ownerDocument, \n+    protected ElementNSImpl(CoreDocumentImpl ownerDocument,\n                             String namespaceURI, String qualifiedName,\n                             String localName)\n         throws DOMException\n@@ -163,7 +198,7 @@ protected ElementNSImpl(CoreDocumentImpl ownerDocument,\n     }\n \n     // for DeferredElementImpl\n-    protected ElementNSImpl(CoreDocumentImpl ownerDocument, \n+    protected ElementNSImpl(CoreDocumentImpl ownerDocument,\n                             String value) {\n         super(ownerDocument, value);\n     }\n@@ -183,29 +218,29 @@ void rename(String namespaceURI, String qualifiedName)\n \n     /**\n      * NON-DOM: resets this node and sets specified values for the node\n-     * \n+     *\n      * @param ownerDocument\n      * @param namespaceURI\n      * @param qualifiedName\n      * @param localName\n      */\n-    protected void setValues (CoreDocumentImpl ownerDocument, \n+    protected void setValues (CoreDocumentImpl ownerDocument,\n                             String namespaceURI, String qualifiedName,\n                             String localName){\n-        \n+\n         // remove children first\n         firstChild = null;\n         previousSibling = null;\n         nextSibling = null;\n         fNodeListCache = null;\n-        \n+\n         // set owner document\n         attributes = null;\n         super.flags = 0;\n         setOwnerDocument(ownerDocument);\n \n         // synchronizeData will initialize attributes\n-        needsSyncData(true);    \n+        needsSyncData(true);\n         super.name = qualifiedName;\n         this.localName = localName;\n         this.namespaceURI = namespaceURI;\n@@ -217,12 +252,12 @@ protected void setValues (CoreDocumentImpl ownerDocument,\n     //\n \n \n-    \n+\n     //\n     //DOM2: Namespace methods.\n     //\n-    \n-    /** \n+\n+    /**\n      * Introduced in DOM Level 2. <p>\n      *\n      * The namespace URI of this node, or null if it is unspecified.<p>\n@@ -232,7 +267,7 @@ protected void setValues (CoreDocumentImpl ownerDocument,\n      * namespace URI given at creation time.<p>\n      *\n      * For nodes created with a DOM Level 1 method, such as createElement\n-     * from the Document interface, this is null.     \n+     * from the Document interface, this is null.\n      * @since WD-DOM-Level-2-19990923\n      */\n     public String getNamespaceURI()\n@@ -242,8 +277,8 @@ public String getNamespaceURI()\n         }\n         return namespaceURI;\n     }\n-    \n-    /** \n+\n+    /**\n      * Introduced in DOM Level 2. <p>\n      *\n      * The namespace prefix of this node, or null if it is unspecified. <p>\n@@ -255,21 +290,21 @@ public String getNamespaceURI()\n      */\n     public String getPrefix()\n     {\n-        \n+\n         if (needsSyncData()) {\n             synchronizeData();\n         }\n         int index = name.indexOf(':');\n-        return index < 0 ? null : name.substring(0, index); \n+        return index < 0 ? null : name.substring(0, index);\n     }\n-    \n+\n     /**\n      * Introduced in DOM Level 2. <p>\n-     * \n+     *\n      * Note that setting this attribute changes the nodeName attribute, which holds the\n      * qualified name, as well as the tagName and name attributes of the Element\n      * and Attr interfaces, when applicable.<p>\n-     * \n+     *\n      * @param prefix The namespace prefix of this node, or null(empty string) if it is unspecified.\n      *\n      * @exception INVALID_CHARACTER_ERR\n@@ -288,7 +323,7 @@ public void setPrefix(String prefix)\n             if (isReadOnly()) {\n                 String msg = DOMMessageFormatter.formatMessage(DOMMessageFormatter.DOM_DOMAIN, \"NO_MODIFICATION_ALLOWED_ERR\", null);\n                 throw new DOMException(\n-                                     DOMException.NO_MODIFICATION_ALLOWED_ERR, \n+                                     DOMException.NO_MODIFICATION_ALLOWED_ERR,\n                                      msg);\n             }\n             if (prefix != null && prefix.length() != 0) {\n@@ -315,8 +350,8 @@ public void setPrefix(String prefix)\n             name = localName;\n         }\n     }\n-                                        \n-    /** \n+\n+    /**\n      * Introduced in DOM Level 2. <p>\n      *\n      * Returns the local part of the qualified name of this node.\n@@ -349,8 +384,8 @@ public String getBaseURI() {\n                 String uri =  attrNode.getNodeValue();\n                 if (uri.length() != 0 ) {// attribute value is always empty string\n                     try {\n-                       uri = new URI(new URI(baseURI), uri).toString();  \n-                    } \n+                       uri = new URI(new URI(baseURI), uri).toString();\n+                    }\n                     catch (org.apache.xerces.util.URI.MalformedURIException e){\n                         // REVISIT: what should happen in this case?\n                         return null;\n@@ -361,12 +396,12 @@ public String getBaseURI() {\n         }\n         return baseURI;\n     }\n-    \n-        \n+\n+\n     /**\n      * @see org.apache.xerces.dom3.TypeInfo#getTypeName()\n      */\n-    public String getTypeName() {        \n+    public String getTypeName() {\n         if (type !=null){\n             return type.getName();\n         }\n@@ -382,13 +417,13 @@ public String getTypeNamespace() {\n         }\n         return null;\n     }\n-    \n-    \n+\n+\n     /**\n      * NON-DOM: setting type used by the DOM parser\n      * @see NodeImpl#setReadOnly\n      */\n     public void setType(XSTypeDefinition type) {\n         this.type = type;\n-    }    \n+    }\n }",
                "additions": 79,
                "raw_url": "https://github.com/apache/xerces2-j/raw/39bb7f6f50e7b98f13cc703c50da536dce255a27/src/org/apache/xerces/dom/ElementNSImpl.java",
                "status": "modified",
                "changes": 123,
                "deletions": 44,
                "sha": "e56a9973b9d779e81c744827cded12a2748e6026",
                "blob_url": "https://github.com/apache/xerces2-j/blob/39bb7f6f50e7b98f13cc703c50da536dce255a27/src/org/apache/xerces/dom/ElementNSImpl.java",
                "filename": "src/org/apache/xerces/dom/ElementNSImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/ElementNSImpl.java?ref=39bb7f6f50e7b98f13cc703c50da536dce255a27"
            }
        ],
        "bug_id": "xerces2-j_101",
        "parent": "https://github.com/apache/xerces2-j/commit/97ffc9c2297dd84432894b4172aaf0caa8687214",
        "message": "Fixing another bug. NullPointerException was thrown with following call.\nimplementation.createDocument(\"http://xxx.xxx\", null,\nnull);\n\nAlso added additional checks:\n\nNAMESPACE_ERR:\n1.Raised if the qualifiedName is malformed,\n2. if the qualifiedName has a prefix and the namespaceURI is null,\n3. or if the qualifiedName is null and the namespaceURI is different from null,\n4. or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is\ndifferent from \" http://www.w3.org/XML/1998/namespace\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319434 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/97aa81a2407111e52d4734374ecca668d85e1671",
        "file": [
            {
                "patch": "@@ -357,15 +357,21 @@ public static void fullSchemaChecking(XSGrammarBucket grammarBucket,\n                 XSModelGroupImpl derivedMG = derivedGrp.fModelGroup;\n                 XSGroupDecl baseGrp = redefinedGroups[i++];\n                 XSModelGroupImpl baseMG = baseGrp.fModelGroup;\n+                fakeDerived.fValue = derivedMG;\n+                fakeBase.fValue = baseMG;\n                 if(baseMG == null) {\n                     if(derivedMG != null) { // can't be a restriction!\n                         reportSchemaError(errorReporter, rgLocators[i/2-1],\n                                 \"src-redefine.6.2.2\",\n                                 new Object[]{derivedGrp.fName, \"rcase-Recurse.2\"});\n                     }\n+                } else if (derivedMG == null) {\n+                    if (!fakeBase.emptiable()) {\n+                        reportSchemaError(errorReporter, rgLocators[i/2-1],\n+                                \"src-redefine.6.2.2\",\n+                                new Object[]{derivedGrp.fName, \"rcase-Recurse.2\"});\n+                    }\n                 } else {\n-                    fakeDerived.fValue = derivedMG;\n-                    fakeBase.fValue = baseMG;\n                     try {\n                         particleValidRestriction(fakeDerived, SGHandler, fakeBase, SGHandler);\n                     } catch (XMLSchemaException e) {",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/97aa81a2407111e52d4734374ecca668d85e1671/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "status": "modified",
                "changes": 10,
                "deletions": 2,
                "sha": "a521673650c8323fc27dfed149fee733866ac7e2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/97aa81a2407111e52d4734374ecca668d85e1671/src/org/apache/xerces/impl/xs/XSConstraints.java",
                "filename": "src/org/apache/xerces/impl/xs/XSConstraints.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSConstraints.java?ref=97aa81a2407111e52d4734374ecca668d85e1671"
            },
            {
                "patch": "@@ -209,6 +209,8 @@ XSGroupDecl traverseGlobal(Element elmNode,\n             if (strNameAttr != null) {\n                 group.fName = strNameAttr;\n                 group.fTargetNamespace = schemaDoc.fTargetNamespace;\n+                // TODO: if particle == null (error situation?), should we\n+                //       recover by synthesizing an empty sequence?\n                 if (particle != null)\n                     group.fModelGroup = (XSModelGroupImpl)particle.fValue;\n                 XSObjectList annotations;",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/97aa81a2407111e52d4734374ecca668d85e1671/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "87208d816d2cde4d4dd358fd1dbd4be53edfc6e7",
                "blob_url": "https://github.com/apache/xerces2-j/blob/97aa81a2407111e52d4734374ecca668d85e1671/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDGroupTraverser.java?ref=97aa81a2407111e52d4734374ecca668d85e1671"
            }
        ],
        "bug_id": "xerces2-j_102",
        "parent": "https://github.com/apache/xerces2-j/commit/5479432209e6f0b71a605dc5266eea099820a08f",
        "message": "Fixing an NPE in complex type restriction involving <redefine>.\n\nIf a redefining schema document has the following group redefinition in <redefine>:\n\n  <xsd:group name=\"gp\">\n    <xsd:annotation/>\n  </xsd:group>\n\nWe will store \"null\" as the value of the model group in the global model group definition. When this group is checked against the one being redefined, we try to make use of this \"null\" field and get NPE.\n\nThe fix is to change the derivation checking code to check whether the field is null. If it's null, then treat it as empty.\n\nA TODO is also added asking whether it's better to not store \"null\" in the above error situation, and store, say, an empty sequence instead.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@734519 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/886a9068e91d493d2f3e66b5d1cefe22d99157c9",
        "file": [
            {
                "patch": "@@ -26,16 +26,16 @@\n import org.w3c.dom.ranges.Range;\n import org.w3c.dom.ranges.RangeException;\n \n-\n-/** The RangeImpl class implements the org.w3c.dom.range.Range interface.\n+/** \n+ * The RangeImpl class implements the org.w3c.dom.range.Range interface.\n  *  <p> Please see the API documentation for the interface classes  \n  *  and use the interfaces in your client programs.\n  *  \n  * @xerces.internal\n  *\n  * @version $Id$\n  */\n-public class RangeImpl  implements Range {\n+public class RangeImpl implements Range {\n     \n     //\n     // Constants\n@@ -1197,39 +1197,54 @@ private DocumentFragment traverseContents( int how )\n     private DocumentFragment traverseSameContainer( int how )\n     {\n         DocumentFragment frag = null;\n-        if ( how!=DELETE_CONTENTS)\n+        if (how != DELETE_CONTENTS) {\n             frag = fDocument.createDocumentFragment();\n+        }\n \n         // If selection is empty, just return the fragment\n-        if ( fStartOffset==fEndOffset )\n+        if (fStartOffset == fEndOffset) {\n             return frag;\n+        }\n \n-        // Text node needs special case handling\n-        if ( fStartContainer.getNodeType()==Node.TEXT_NODE )\n-        {\n+        // Text, CDATASection, Comment and ProcessingInstruction nodes need special case handling\n+        final short nodeType = fStartContainer.getNodeType();\n+        if (nodeType == Node.TEXT_NODE ||\n+            nodeType == Node.CDATA_SECTION_NODE ||\n+            nodeType == Node.COMMENT_NODE ||\n+            nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n             // get the substring\n             String s = fStartContainer.getNodeValue();\n-            String sub = s.substring( fStartOffset, fEndOffset );\n+            String sub = s.substring(fStartOffset, fEndOffset);\n \n             // set the original text node to its new value\n-            if ( how != CLONE_CONTENTS )\n-            {\n-                ((TextImpl)fStartContainer).deleteData(fStartOffset,\n-                     fEndOffset-fStartOffset) ;\n+            if (how != CLONE_CONTENTS) {\n+                ((CharacterDataImpl)fStartContainer).deleteData(fStartOffset,\n+                     fEndOffset-fStartOffset);\n                 // Nothing is partially selected, so collapse to start point\n-                collapse( true );\n+                collapse(true);\n             }\n-            if ( how==DELETE_CONTENTS)\n+            if (how == DELETE_CONTENTS) {\n                 return null;\n-            frag.appendChild( fDocument.createTextNode(sub) );\n+            }\n+            if (nodeType == Node.TEXT_NODE) {\n+                frag.appendChild(fDocument.createTextNode(sub));\n+            }\n+            else if (nodeType == Node.CDATA_SECTION_NODE) {\n+                frag.appendChild(fDocument.createCDATASection(sub));\n+            }\n+            else if (nodeType == Node.COMMENT_NODE) {\n+                frag.appendChild(fDocument.createComment(sub));\n+            }\n+            else { // nodeType == Node.PROCESSING_INSTRUCTION_NODE\n+                frag.appendChild(fDocument.createProcessingInstruction(fStartContainer.getNodeName(), sub));\n+            }\n             return frag;\n         }\n \n         // Copy nodes between the start/end offsets.\n         Node n = getSelectedNode( fStartContainer, fStartOffset );\n         int cnt = fEndOffset - fStartOffset;\n-        while( cnt > 0 )\n-        {\n+        while( cnt > 0 ) {\n             Node sibling = n.getNextSibling();\n             Node xferNode = traverseFullySelected( n, how );\n             if ( frag!=null )\n@@ -1239,8 +1254,9 @@ private DocumentFragment traverseSameContainer( int how )\n         }\n \n         // Nothing is partially selected, so collapse to start point\n-        if ( how != CLONE_CONTENTS )\n-            collapse( true );\n+        if (how != CLONE_CONTENTS) {\n+            collapse(true);\n+        }\n         return frag;\n     }\n \n@@ -1679,7 +1695,7 @@ private Node traverseLeftBoundary( Node root, int how )\n      * Utility method for traversing a single node.\n      * Does not properly handle a text node containing both the\n      * start and end offsets.  Such nodes should\n-     * have been previously detected and been routed to traverseTextNode.\n+     * have been previously detected and been routed to traverseCharacterDataNode.\n      * \n      * @param n      The node to be traversed.\n      * \n@@ -1718,10 +1734,16 @@ private Node traverseLeftBoundary( Node root, int how )\n      */\n     private Node traverseNode( Node n, boolean isFullySelected, boolean isLeft, int how )\n     {\n-        if ( isFullySelected )\n+        if ( isFullySelected ) {\n             return traverseFullySelected( n, how );\n-        if ( n.getNodeType()==Node.TEXT_NODE )\n-            return traverseTextNode( n, isLeft, how );\n+        }\n+        final short nodeType = n.getNodeType();\n+        if (nodeType == Node.TEXT_NODE ||\n+            nodeType == Node.CDATA_SECTION_NODE ||\n+            nodeType == Node.COMMENT_NODE ||\n+            nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n+            return traverseCharacterDataNode( n, isLeft, how );\n+        }\n         return traversePartiallySelected( n, how );\n     }\n \n@@ -1815,8 +1837,9 @@ private Node traversePartiallySelected( Node n, int how )\n     }\n \n     /**\n-     * Utility method for traversing a text node that we know\n-     * a-priori to be on a left or right boundary of the range.\n+     * Utility method for traversing a node containing character data\n+     * (either a Text, CDATASection, Comment or ProcessingInstruction node)\n+     * that we know a-priori to be on a left or right boundary of the range.\n      * This method does not properly handle text nodes that contain\n      * both the start and end points of the range.\n      * \n@@ -1847,7 +1870,7 @@ private Node traversePartiallySelected( Node n, int how )\n      *         If the traversal operation is\n      *         <code>DELETE_CONTENTS</code> the return value is null.\n      */\n-    private Node traverseTextNode( Node n, boolean isLeft, int how )\n+    private Node traverseCharacterDataNode( Node n, boolean isLeft, int how )\n     {\n         String txtValue = n.getNodeValue();\n         String newNodeValue;",
                "additions": 50,
                "raw_url": "https://github.com/apache/xerces2-j/raw/886a9068e91d493d2f3e66b5d1cefe22d99157c9/src/org/apache/xerces/dom/RangeImpl.java",
                "status": "modified",
                "changes": 77,
                "deletions": 27,
                "sha": "b833765ee48aa198a31b239900e31f7d077b0f54",
                "blob_url": "https://github.com/apache/xerces2-j/blob/886a9068e91d493d2f3e66b5d1cefe22d99157c9/src/org/apache/xerces/dom/RangeImpl.java",
                "filename": "src/org/apache/xerces/dom/RangeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/RangeImpl.java?ref=886a9068e91d493d2f3e66b5d1cefe22d99157c9"
            }
        ],
        "bug_id": "xerces2-j_103",
        "parent": "https://github.com/apache/xerces2-j/commit/d3cbda242bba946e6d34163d2b1403f06f798f71",
        "message": "Fixing JIRA Bug #1228:\nhttp://issues.apache.org/jira/browse/XERCESJ-1228\n\nIf the start container and/or end container is a CDATASection/Comment/ProcessingInstruction\nwe need to take special care when extracting/deleting/cloning contents of the Range. This\nbug was causing two W3C test cases (rangeclonecontents05 and rangeextractcontents05) to fail \nwith an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@515212 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/81ad37d63cb8fdccc91394eff7ccb37573c479ff",
        "file": [
            {
                "patch": "@@ -1709,23 +1709,22 @@ private void checkDeclaredElements(DTDGrammar grammar, int elementIndex,\n                         new Object[]{grammar.getElementDeclName(elementIndex).rawname, value},\n                         XMLErrorReporter.SEVERITY_WARNING);\n             }\n-        } \n-        else {\n-            // It's not a leaf, so we have to recurse its left and maybe right\n-            // nodes. Save both values before we recurse and trash the node.\n+        }\n+        // It's not a leaf, so we have to recurse its left and maybe right\n+        // nodes. Save both values before we recurse and trash the node.\n+        else if ((contentSpec.type == XMLContentSpec.CONTENTSPECNODE_CHOICE)\n+                || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_SEQ)) {\n             final int leftNode = ((int[])contentSpec.value)[0];\n             final int rightNode = ((int[])contentSpec.otherValue)[0];\n-            if ((contentSpec.type == XMLContentSpec.CONTENTSPECNODE_CHOICE)\n-                || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_SEQ)) {\n-                //  Recurse on both children.\n-                checkDeclaredElements(grammar, elementIndex, leftNode, contentSpec);\n-                checkDeclaredElements(grammar, elementIndex, rightNode, contentSpec);\n-            }\n-            else if (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_MORE\n-                  || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_ONE\n-                  || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ONE_OR_MORE) {\n-                checkDeclaredElements(grammar, elementIndex, leftNode, contentSpec);\n-            }\n+            //  Recurse on both children.\n+            checkDeclaredElements(grammar, elementIndex, leftNode, contentSpec);\n+            checkDeclaredElements(grammar, elementIndex, rightNode, contentSpec);\n+        }\n+        else if (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_MORE\n+                || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_ONE\n+                || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ONE_OR_MORE) {\n+            final int leftNode = ((int[])contentSpec.value)[0];\n+            checkDeclaredElements(grammar, elementIndex, leftNode, contentSpec);\n         }\n     }\n     ",
                "additions": 14,
                "raw_url": "https://github.com/apache/xerces2-j/raw/81ad37d63cb8fdccc91394eff7ccb37573c479ff/src/org/apache/xerces/impl/dtd/XMLDTDProcessor.java",
                "status": "modified",
                "changes": 29,
                "deletions": 15,
                "sha": "b5f2361e43f85248e545c7387e3f5eb639324224",
                "blob_url": "https://github.com/apache/xerces2-j/blob/81ad37d63cb8fdccc91394eff7ccb37573c479ff/src/org/apache/xerces/impl/dtd/XMLDTDProcessor.java",
                "filename": "src/org/apache/xerces/impl/dtd/XMLDTDProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dtd/XMLDTDProcessor.java?ref=81ad37d63cb8fdccc91394eff7ccb37573c479ff"
            }
        ],
        "bug_id": "xerces2-j_104",
        "parent": "https://github.com/apache/xerces2-j/commit/e3ae2832e5800375597c442cc940e7cfea8e3efb",
        "message": "Fixing JIRA Issue #1203:\nhttp://issues.apache.org/jira/browse/XERCESJ-1203\n\nApplying the fix suggested by George Cristian Bina to fix an NPE\nwhich can occur when traversing the content spec for an element\ndeclared to have mixed content. In such a case it's possible that \nboth contentSpec.value and contentSpec.otherValue are null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@462674 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/73cadf4ffa2ed513e2122aad5e99c60ae2e5e287",
        "file": [
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2003-2005 The Apache Software Foundation.\n+ * Copyright 2003-2006 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -294,6 +294,8 @@\n     protected IntStack fLanguageScope;\n     protected Stack fLanguageStack;\n     protected String fCurrentLanguage;\n+    \n+    protected String fHrefFromParent;\n \n     // used for passing features on to child XIncludeHandler objects\n     protected ParserConfigurationSettings fSettings;\n@@ -756,31 +758,31 @@ public void startDocument(\n         // otherwise, the locator from the root document would always be used\n         fErrorReporter.setDocumentLocator(locator);\n \n-        if (!isRootDocument()) {\n-            fParentXIncludeHandler.fHasIncludeReportedContent = true;\n-            if (fParentXIncludeHandler.searchForRecursiveIncludes(locator)) {\n-                reportFatalError(\n-                        \"RecursiveInclude\",\n-                        new Object[] { locator.getExpandedSystemId()});\n-            }\n-        }\n-\n         if (!(namespaceContext instanceof XIncludeNamespaceSupport)) {\n             reportFatalError(\"IncompatibleNamespaceContext\");\n         }\n         fNamespaceContext = (XIncludeNamespaceSupport)namespaceContext;\n         fDocLocation = locator;\n \n         // initialize the current base URI\n-        fCurrentBaseURI.setBaseSystemId(locator.getBaseSystemId());\n-        fCurrentBaseURI.setExpandedSystemId(locator.getExpandedSystemId());\n-        fCurrentBaseURI.setLiteralSystemId(locator.getLiteralSystemId());\n+        setupCurrentBaseURI(locator);\n         saveBaseURI();\n         if (augs == null) {\n             augs = new AugmentationsImpl();\n         }\n         augs.putItem(CURRENT_BASE_URI, fCurrentBaseURI);\n         \n+        // abort here if we detect a recursive include\n+        if (!isRootDocument()) {\n+            fParentXIncludeHandler.fHasIncludeReportedContent = true;\n+            if (fParentXIncludeHandler.searchForRecursiveIncludes(\n+                fCurrentBaseURI.getExpandedSystemId())) {\n+                reportFatalError(\n+                        \"RecursiveInclude\",\n+                        new Object[] { fCurrentBaseURI.getExpandedSystemId()});\n+            }\n+        }\n+\n         // initialize the current language\n         fCurrentLanguage = XMLSymbols.EMPTY_STRING;\n         saveLanguage(fCurrentLanguage);\n@@ -1633,6 +1635,7 @@ protected boolean handleIncludeElement(XMLAttributes attributes)\n                 \t// ???\n                     \n                     newHandler.setParent(this); \n+                    newHandler.setHref(href);\n                     newHandler.setDocumentHandler(this.getDocumentHandler());\n                     fXPointerChildConfig = fChildConfig;                       \n                 } else {\n@@ -1641,7 +1644,8 @@ protected boolean handleIncludeElement(XMLAttributes attributes)\n                             Constants.XERCES_PROPERTY_PREFIX\n                                 + Constants.XINCLUDE_HANDLER_PROPERTY);\n \n-                \tnewHandler.setParent(this);\n+                    newHandler.setParent(this);\n+                    newHandler.setHref(href);\n                     newHandler.setDocumentHandler(this.getDocumentHandler());\n                     fXIncludeChildConfig = fChildConfig;\n                 }\n@@ -1876,37 +1880,52 @@ protected boolean sameLanguageAsIncludeParent() {\n         return parentLanguage != null && parentLanguage.equalsIgnoreCase(fCurrentLanguage);\n     }\n \n-    /**\n-     * Checks if the file indicated by the given XMLLocator has already been included\n-     * in the current stack.\n-     * @param includedSource the source to check for inclusion\n-     * @return true if the source has already been included\n-     */\n-    protected boolean searchForRecursiveIncludes(XMLLocator includedSource) {\n-        String includedSystemId = includedSource.getExpandedSystemId();\n+    protected void setupCurrentBaseURI(XMLLocator locator) {\n+        fCurrentBaseURI.setBaseSystemId(locator.getBaseSystemId());\n \n-        if (includedSystemId == null) {\n+        if (locator.getLiteralSystemId() != null) {\n+            fCurrentBaseURI.setLiteralSystemId(locator.getLiteralSystemId());\n+        }\n+        else {\n+            fCurrentBaseURI.setLiteralSystemId(fHrefFromParent);\n+        }\n+\n+        String expandedSystemId = locator.getExpandedSystemId();\n+        if (expandedSystemId == null) {\n+            // attempt to expand it ourselves\n             try {\n-                includedSystemId =\n+                expandedSystemId =\n                     XMLEntityManager.expandSystemId(\n-                        includedSource.getLiteralSystemId(),\n-                        includedSource.getBaseSystemId(),\n+                        fCurrentBaseURI.getLiteralSystemId(),\n+                        fCurrentBaseURI.getBaseSystemId(),\n                         false);\n+                if (expandedSystemId == null) {\n+                    expandedSystemId = fCurrentBaseURI.getLiteralSystemId();\n+                }\n             }\n             catch (MalformedURIException e) {\n                 reportFatalError(\"ExpandedSystemId\");\n             }\n         }\n-\n-        if (includedSystemId.equals(fCurrentBaseURI.getExpandedSystemId())) {\n+        fCurrentBaseURI.setExpandedSystemId(expandedSystemId);\n+    }\n+    \n+    /**\n+     * Checks if the file indicated by the given system id has already been\n+     * included in the current stack.\n+     * @param includedSysId the system id to check for inclusion\n+     * @return true if the source has already been included\n+     */\n+    protected boolean searchForRecursiveIncludes(String includedSysId) {\n+        if (includedSysId.equals(fCurrentBaseURI.getExpandedSystemId())) {\n             return true;\n         }\n-\n-        if (fParentXIncludeHandler == null) {\n+        else if (fParentXIncludeHandler == null) {\n             return false;\n         }\n-        return fParentXIncludeHandler.searchForRecursiveIncludes(\n-            includedSource);\n+        else {\n+            return fParentXIncludeHandler.searchForRecursiveIncludes(includedSysId);\n+        }\n     }\n \n     /**\n@@ -2364,6 +2383,10 @@ protected void setParent(XIncludeHandler parent) {\n         fParentXIncludeHandler = parent;\n     }\n \n+    protected void setHref(String href) {\n+       fHrefFromParent = href;\n+    }\n+    \n     // used to know whether to pass declarations to the document handler\n     protected boolean isRootDocument() {\n         return fParentXIncludeHandler == null;",
                "additions": 55,
                "raw_url": "https://github.com/apache/xerces2-j/raw/73cadf4ffa2ed513e2122aad5e99c60ae2e5e287/src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "status": "modified",
                "changes": 87,
                "deletions": 32,
                "sha": "fafc059db12a92708b25d8a7f45b3961ef150b0c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/73cadf4ffa2ed513e2122aad5e99c60ae2e5e287/src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "filename": "src/org/apache/xerces/xinclude/XIncludeHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xinclude/XIncludeHandler.java?ref=73cadf4ffa2ed513e2122aad5e99c60ae2e5e287"
            }
        ],
        "bug_id": "xerces2-j_105",
        "parent": "https://github.com/apache/xerces2-j/commit/ea8e1e1df54b7b58b002da8a077532df956cd22c",
        "message": "Modified code to search for recursive includes.  Adds a fallback to the href attribute of the include element, if the system id is not available.  This also fixes a bug where and NPE would be thrown when the XMLLocator passed to the searchForRecursiveIncludes() method had no system id or expanded system id.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@392315 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/6ed743d80264b90432b52a29c26fb1e6cbd4d261",
        "file": [
            {
                "patch": "@@ -3088,25 +3088,27 @@ public void setAnonymous(boolean anon) {\n         fAnonymous = anon;\n     }\n \t\n-\tprivate static final class XSFacetImpl implements XSFacet {\n-\t\tfinal short kind;\n-\t\tfinal String value;\n-\t\tfinal boolean fixed;\n-        XSObjectList annotations = null;  \n-\t\t\n-\t\tpublic XSFacetImpl(short kind, String value, boolean fixed, XSAnnotation annotation) {\n-\t\t\tthis.kind = kind;\n-\t\t\tthis.value = value;\n-\t\t\tthis.fixed = fixed;\n-\n-\t\t    if (annotation != null) {\n+    private static final class XSFacetImpl implements XSFacet {\n+        final short kind;\n+        final String value;\n+        final boolean fixed;\n+        final XSObjectList annotations;  \n+        \n+        public XSFacetImpl(short kind, String value, boolean fixed, XSAnnotation annotation) {\n+            this.kind = kind;\n+            this.value = value;\n+            this.fixed = fixed;\n+            \n+            if (annotation != null) {\n                 this.annotations = new XSObjectListImpl();\n                 ((XSObjectListImpl)this.annotations).add(annotation);\n-            } else {\n+            } \n+            else {\n                 this.annotations =  XSObjectListImpl.EMPTY_LIST;\n             }\n-\t\t}\n-\t\t/*\n+        }\n+        \n+        /*\n          * (non-Javadoc)\n          * \n          * @see org.apache.xerces.xs.XSFacet#getAnnotation()\n@@ -3117,7 +3119,7 @@ public XSFacetImpl(short kind, String value, boolean fixed, XSAnnotation annotat\n         public XSAnnotation getAnnotation() {\n             return (XSAnnotation) annotations.item(0);\n         }\n-\n+        \n         /*\n          * (non-Javadoc)\n          * \n@@ -3129,122 +3131,120 @@ public XSAnnotation getAnnotation() {\n         public XSObjectList getAnnotations() {\n             return annotations;\n         }\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSFacet#getFacetKind()\n-\t\t */\n-\t\tpublic short getFacetKind() {\n-\t\t\treturn kind;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSFacet#getLexicalFacetValue()\n-\t\t */\n-\t\tpublic String getLexicalFacetValue() {\n-\t\t\treturn value;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSFacet#isFixed()\n-\t\t */\n-\t\tpublic boolean getFixed() {\n-\t\t\treturn fixed;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getName()\n-\t\t */\n-\t\tpublic String getName() {\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getNamespace()\n-\t\t */\n-\t\tpublic String getNamespace() {\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getNamespaceItem()\n-\t\t */\n-\t\tpublic XSNamespaceItem getNamespaceItem() {\n-\t\t\t// REVISIT: implement\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getType()\n-\t\t */\n-\t\tpublic short getType() {\n-\t\t\treturn XSConstants.FACET;\n-\t\t}\n-\t\t\n-\t}\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSFacet#getFacetKind()\n+         */\n+        public short getFacetKind() {\n+            return kind;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSFacet#getLexicalFacetValue()\n+         */\n+        public String getLexicalFacetValue() {\n+            return value;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSFacet#isFixed()\n+         */\n+        public boolean getFixed() {\n+            return fixed;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getName()\n+         */\n+        public String getName() {\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getNamespace()\n+         */\n+        public String getNamespace() {\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getNamespaceItem()\n+         */\n+        public XSNamespaceItem getNamespaceItem() {\n+            // REVISIT: implement\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getType()\n+         */\n+        public short getType() {\n+            return XSConstants.FACET;\n+        }\n+        \n+    }\n \t\n-\tprivate static final class XSMVFacetImpl implements XSMultiValueFacet {\n-\t\tfinal short kind;\n-\t\tXSObjectList annotations;\n-\t\tStringList values;\n-\t\t\n-\t\tpublic XSMVFacetImpl(short kind, StringList values, XSObjectList annotations) {\n-\t\t\tthis.kind = kind;\n-\t\t\tthis.values = values;\n-\t\t\tthis.annotations = annotations;\n-\t\t}\n-\t\t\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSFacet#getFacetKind()\n-\t\t */\n-\t\tpublic short getFacetKind() {\n-\t\t\treturn kind;\n-\t\t}\n-\t\t\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSMultiValueFacet#getAnnotations()\n-\t\t */\n-\t\tpublic XSObjectList getAnnotations() {\n-\t\t\treturn annotations;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSMultiValueFacet#getLexicalFacetValues()\n-\t\t */\n-\t\tpublic StringList getLexicalFacetValues() {\n-\t\t\treturn values;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getName()\n-\t\t */\n-\t\tpublic String getName() {\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getNamespace()\n-\t\t */\n-\t\tpublic String getNamespace() {\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getNamespaceItem()\n-\t\t */\n-\t\tpublic XSNamespaceItem getNamespaceItem() {\n-\t\t\t// REVISIT: implement\n-\t\t\treturn null;\n-\t\t}\n-\t\t\n-\t\t/* (non-Javadoc)\n-\t\t * @see org.apache.xerces.xs.XSObject#getType()\n-\t\t */\n-\t\tpublic short getType() {\n-\t\t\treturn XSConstants.MULTIVALUE_FACET;\n-\t\t}\n-\t}\n+    private static final class XSMVFacetImpl implements XSMultiValueFacet {\n+        final short kind;\n+        final XSObjectList annotations;\n+        final StringList values;\n+        \n+        public XSMVFacetImpl(short kind, StringList values, XSObjectList annotations) {\n+            this.kind = kind;\n+            this.values = values;\n+            this.annotations = (annotations != null) ? annotations : XSObjectListImpl.EMPTY_LIST;\n+        }\t\t\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSFacet#getFacetKind()\n+         */\n+        public short getFacetKind() {\n+            return kind;\n+        }\t\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSMultiValueFacet#getAnnotations()\n+         */\n+        public XSObjectList getAnnotations() {\n+            return annotations;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSMultiValueFacet#getLexicalFacetValues()\n+         */\n+        public StringList getLexicalFacetValues() {\n+            return values;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getName()\n+         */\n+        public String getName() {\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getNamespace()\n+         */\n+        public String getNamespace() {\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getNamespaceItem()\n+         */\n+        public XSNamespaceItem getNamespaceItem() {\n+            // REVISIT: implement\n+            return null;\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.xerces.xs.XSObject#getType()\n+         */\n+        public short getType() {\n+            return XSConstants.MULTIVALUE_FACET;\n+        }\n+    }\n \n     public String getTypeNamespace() {\n         return getNamespace();",
                "additions": 131,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "status": "modified",
                "changes": 262,
                "deletions": 131,
                "sha": "ab806df498393fa55f2bd5eeb9b7796329d37cc5",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/dv/xs/XSSimpleTypeDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -19,6 +19,7 @@\n import org.apache.xerces.impl.dv.XSSimpleType;\n import org.apache.xerces.xs.*;\n import org.apache.xerces.impl.dv.ValidatedInfo;\n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n \n /**\n  * The XML representation for an attribute declaration\n@@ -151,14 +152,14 @@ public String getConstraintValue() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation) fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n     public ValidatedInfo getValInfo() {",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "843ea5555b213c0284587e8deec6fb44b79ef854",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -346,14 +346,14 @@ public XSWildcard getAttributeWildcard() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation) fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n \t/**",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeGroupDecl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "93e7053871cdf9328371ba3f129d1380a84c0132",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeGroupDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeGroupDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeGroupDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -17,6 +17,7 @@\n package org.apache.xerces.impl.xs;\n \n import org.apache.xerces.impl.dv.ValidatedInfo;\n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n import org.apache.xerces.xs.ShortList;\n import org.apache.xerces.xs.XSAttributeDeclaration;\n import org.apache.xerces.xs.XSAttributeUse;\n@@ -43,7 +44,6 @@\n     public short fConstraintType = XSConstants.VC_NONE;\n     // value constraint value\n     public ValidatedInfo fDefault = null;\n-\n     // optional annotation\n     public XSObjectList fAnnotations = null;\n     \n@@ -143,7 +143,7 @@ public ShortList getItemValueTypes() {\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n } // class XSAttributeUseImpl",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "094ca2bcdff58088be38cb6fc7efbbf88c474edb",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSAttributeUseImpl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2001-2005 The Apache Software Foundation.\n+ * Copyright 2001-2006 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -666,7 +666,7 @@ public short getProhibitedSubstitutions() {\n      * Optional. Annotation.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n \t/**",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSComplexTypeDecl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "6091a682061b6e2ba4e997aa490ceaee545d7bda",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSComplexTypeDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSComplexTypeDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSComplexTypeDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -28,6 +28,7 @@\n import org.apache.xerces.xs.XSObjectList;\n import org.apache.xerces.xs.XSTypeDefinition;\n import org.apache.xerces.impl.xs.util.XSNamedMapImpl;\n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n \n /**\n  * The XML representation for an element declaration\n@@ -334,14 +335,14 @@ public boolean getAbstract() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation)fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n ",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "5f6389f03073280ac88cac5ddd97bfdc39779e6c",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSElementDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSElementDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -16,6 +16,7 @@\n \n package org.apache.xerces.impl.xs;\n \n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n import org.apache.xerces.xs.*;\n \n /**\n@@ -73,14 +74,14 @@ public XSModelGroup getModelGroup() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation)fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n     \n \t/**",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSGroupDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "69bc4fbb086345ed03ab742cd6b835e24ea00393",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSGroupDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSGroupDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSGroupDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -218,14 +218,14 @@ public XSObjectList getParticles() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation) fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n \n     /**",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "cb87c0484dfd7e403fecc5dd53380ba084adafc1",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSModelGroupImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSModelGroupImpl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -16,6 +16,7 @@\n \n package org.apache.xerces.impl.xs;\n \n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n import org.apache.xerces.xs.XSAnnotation;\n import org.apache.xerces.xs.XSConstants;\n import org.apache.xerces.xs.XSNamespaceItem;\n@@ -88,14 +89,14 @@ public String getPublicId() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation) fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n \n \t/**",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSNotationDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "7e4a536e279a715c0a443ba848915680ad114120",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSNotationDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSNotationDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSNotationDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -16,6 +16,7 @@\n \n package org.apache.xerces.impl.xs;\n \n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n import org.apache.xerces.xs.XSConstants;\n import org.apache.xerces.xs.XSNamespaceItem;\n import org.apache.xerces.xs.XSObjectList;\n@@ -237,7 +238,7 @@ public XSNamespaceItem getNamespaceItem() {\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n \n-} // class XSParticle\n+} // class XSParticleDecl",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSParticleDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "3c7dc72eb6f9027debeee193acde614834102301",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSParticleDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSParticleDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSParticleDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            },
            {
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.xerces.xs.XSObjectList;\n import org.apache.xerces.xs.XSWildcard;\n import org.apache.xerces.impl.xs.util.StringListImpl;\n+import org.apache.xerces.impl.xs.util.XSObjectListImpl;\n \n /**\n  * The XML representation for a wildcard declaration\n@@ -574,14 +575,14 @@ public String getProcessContentsAsString() {\n      * Optional. Annotation.\n      */\n     public XSAnnotation getAnnotation() {\n-        return (XSAnnotation) fAnnotations.item(0);\n+        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;\n     }\n \n     /**\n      * Optional. Annotations.\n      */\n     public XSObjectList getAnnotations() {\n-        return fAnnotations;\n+        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;\n     }\n \n \t/**",
                "additions": 3,
                "raw_url": "https://github.com/apache/xerces2-j/raw/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "status": "modified",
                "changes": 5,
                "deletions": 2,
                "sha": "b5c6b2e2dd3c1742b8e9d4350d2096bbc8363e0f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/6ed743d80264b90432b52a29c26fb1e6cbd4d261/src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "filename": "src/org/apache/xerces/impl/xs/XSWildcardDecl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/XSWildcardDecl.java?ref=6ed743d80264b90432b52a29c26fb1e6cbd4d261"
            }
        ],
        "bug_id": "xerces2-j_106",
        "parent": "https://github.com/apache/xerces2-j/commit/a7a963cba78abd2f27e7acb2d8e76d555e549acf",
        "message": "Fixing JIRA Issue #1149:\nhttp://issues.apache.org/jira/browse/XERCESJ-1149\n\nThe enhancements made to the annotation support in Xerces 2.8.0 made\nit possible for NPEs to be thrown from the various XSObjects when a \ncomponent has no annotations. In all getAnnotation() methods we now \ncheck if the list is null before accessing it.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@388853 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/267163239b6363bb49ba036ca8ff73a4aefaa560",
        "file": [
            {
                "patch": "@@ -409,6 +409,7 @@\n     public final static String CHAR_REF_PROBABLE_WS = \"CHAR_REF_PROBABLE_WS\";\n     \n     // XML version constants \n+    public final static short XML_VERSION_ERROR = -1;\n     public final static short XML_VERSION_1_0 = 1;\n     public final static short XML_VERSION_1_1 = 2;\n     ",
                "additions": 1,
                "raw_url": "https://github.com/apache/xerces2-j/raw/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/impl/Constants.java",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "55ad9803b643d847dbfd194a9dc1f2b89cc31040",
                "blob_url": "https://github.com/apache/xerces2-j/blob/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/impl/Constants.java",
                "filename": "src/org/apache/xerces/impl/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/Constants.java?ref=267163239b6363bb49ba036ca8ff73a4aefaa560"
            },
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 1999-2004 The Apache Software Foundation.\n+ * Copyright 1999-2005 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -181,21 +181,19 @@ public short determineDocVersion(XMLInputSource inputSource) throws IOException\n                 if (fExpectedVersionString[15 + matched] != XML11_VERSION[matched])\n                     break;\n             }\n-            if (matched == XML11_VERSION.length)\n-                return Constants.XML_VERSION_1_1;\n-            return Constants.XML_VERSION_1_0;\n-            // premature end of file\n+            return (matched == XML11_VERSION.length) ? \n+                    Constants.XML_VERSION_1_1 :\n+                    Constants.XML_VERSION_1_0;\n         }\n+        // premature end of file\n         catch (EOFException e) {\n             fErrorReporter.reportError(\n                 XMLMessageFormatter.XML_DOMAIN,\n                 \"PrematureEOF\",\n                 null,\n                 XMLErrorReporter.SEVERITY_FATAL_ERROR);\n-            return Constants.XML_VERSION_1_0;\n-\t\t\t\n+            return Constants.XML_VERSION_ERROR;\n         }\n-\n     }\n \n     // This method prepends \"length\" chars from the char array,",
                "additions": 6,
                "raw_url": "https://github.com/apache/xerces2-j/raw/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/impl/XMLVersionDetector.java",
                "status": "modified",
                "changes": 14,
                "deletions": 8,
                "sha": "46a72b7c18fb6e32683e8459542f4921b5e7598d",
                "blob_url": "https://github.com/apache/xerces2-j/blob/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/impl/XMLVersionDetector.java",
                "filename": "src/org/apache/xerces/impl/XMLVersionDetector.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLVersionDetector.java?ref=267163239b6363bb49ba036ca8ff73a4aefaa560"
            },
            {
                "patch": "@@ -769,13 +769,20 @@ public boolean parse(boolean complete) throws XNIException, IOException {\n                 resetCommon();\n \n                 short version = fVersionDetector.determineDocVersion(fInputSource);\n-                if (version == Constants.XML_VERSION_1_1) {\n+                // XML 1.0\n+                if (version == Constants.XML_VERSION_1_0) {\n+                    configurePipeline();\n+                    reset();\n+                }\n+                // XML 1.1\n+                else if (version == Constants.XML_VERSION_1_1) {\n                     initXML11Components();\n                     configureXML11Pipeline();\n                     resetXML11();\n-                } else {\n-                    configurePipeline();\n-                    reset();\n+                }\n+                // Unrecoverable error reported during version detection\n+                else {\n+                   return false;\n                 }\n                 \n                 // mark configuration as fixed",
                "additions": 11,
                "raw_url": "https://github.com/apache/xerces2-j/raw/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11Configuration.java",
                "status": "modified",
                "changes": 15,
                "deletions": 4,
                "sha": "e77b738ad2c9380449d525aee2f65f119d7b6615",
                "blob_url": "https://github.com/apache/xerces2-j/blob/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11Configuration.java",
                "filename": "src/org/apache/xerces/parsers/XML11Configuration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/XML11Configuration.java?ref=267163239b6363bb49ba036ca8ff73a4aefaa560"
            },
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004 The Apache Software Foundation.\n+ * Copyright 2004,2005 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -701,13 +701,20 @@ public boolean parse(boolean complete) throws XNIException, IOException {\n                 resetCommon();\n \n                 short version = fVersionDetector.determineDocVersion(fInputSource);\n-                if (version == Constants.XML_VERSION_1_1) {\n+                // XML 1.0\n+                if (version == Constants.XML_VERSION_1_0) {\n+                    configurePipeline();\n+                    reset();\n+                }\n+                // XML 1.1\n+                else if (version == Constants.XML_VERSION_1_1) {\n                     initXML11Components();\n                     configureXML11Pipeline();\n                     resetXML11();\n-                } else {\n-                    configurePipeline();\n-                    reset();\n+                }\n+                // Unrecoverable error reported during version detection\n+                else {\n+                   return false;\n                 }\n                 \n                 // mark configuration as fixed",
                "additions": 12,
                "raw_url": "https://github.com/apache/xerces2-j/raw/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11DTDConfiguration.java",
                "status": "modified",
                "changes": 17,
                "deletions": 5,
                "sha": "56436f88a897fabf6069db36fbc22621c4e12a30",
                "blob_url": "https://github.com/apache/xerces2-j/blob/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11DTDConfiguration.java",
                "filename": "src/org/apache/xerces/parsers/XML11DTDConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/XML11DTDConfiguration.java?ref=267163239b6363bb49ba036ca8ff73a4aefaa560"
            },
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004 The Apache Software Foundation.\n+ * Copyright 2004,2005 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -627,13 +627,20 @@ public boolean parse(boolean complete) throws XNIException, IOException {\n                 resetCommon();\n \n                 short version = fVersionDetector.determineDocVersion(fInputSource);\n-                if (version == Constants.XML_VERSION_1_1) {\n+                // XML 1.0\n+                if (version == Constants.XML_VERSION_1_0) {\n+                    configurePipeline();\n+                    reset();\n+                }\n+                // XML 1.1\n+                else if (version == Constants.XML_VERSION_1_1) {\n                     initXML11Components();\n                     configureXML11Pipeline();\n                     resetXML11();\n-                } else {\n-                    configurePipeline();\n-                    reset();\n+                }\n+                // Unrecoverable error reported during version detection\n+                else {\n+                   return false;\n                 }\n                 \n                 // mark configuration as fixed",
                "additions": 12,
                "raw_url": "https://github.com/apache/xerces2-j/raw/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11NonValidatingConfiguration.java",
                "status": "modified",
                "changes": 17,
                "deletions": 5,
                "sha": "d952a9cb99d5ca5f893cfc6bc6a7a59c7c555981",
                "blob_url": "https://github.com/apache/xerces2-j/blob/267163239b6363bb49ba036ca8ff73a4aefaa560/src/org/apache/xerces/parsers/XML11NonValidatingConfiguration.java",
                "filename": "src/org/apache/xerces/parsers/XML11NonValidatingConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/XML11NonValidatingConfiguration.java?ref=267163239b6363bb49ba036ca8ff73a4aefaa560"
            }
        ],
        "bug_id": "xerces2-j_107",
        "parent": "https://github.com/apache/xerces2-j/commit/bdc72ee602bc857fefd08c63bef461b3a7bbdcd1",
        "message": "Fixing a bug which caused an NPE to be thrown from the scanner\nwhen the continue-after-fatal-error feature is enabled. If the\ndocument being parsed is empty, the version detector reports\nthe error at which point we should stop parsing because there's\nno input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@331696 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/824513f9279b62485bd5e7ef6236029f1a49e949",
        "file": [
            {
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -53,6 +53,7 @@\n import org.apache.xerces.xni.parser.XMLErrorHandler;\n import org.apache.xerces.xni.parser.XMLInputSource;\n import org.apache.xerces.xs.XSObject;\n+import org.apache.xerces.xs.XSParticle;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n \n@@ -81,10 +82,10 @@\n     /** Feature identifier:  allow java encodings */\n     protected static final String STANDARD_URI_CONFORMANT_FEATURE =\n         Constants.XERCES_FEATURE_PREFIX + Constants.STANDARD_URI_CONFORMANT_FEATURE;\n-        \n+\n     /** Feature: disallow doctype*/\n-    protected static final String DISALLOW_DOCTYPE = \n-        Constants.XERCES_FEATURE_PREFIX + Constants.DISALLOW_DOCTYPE_DECL_FEATURE;      \n+    protected static final String DISALLOW_DOCTYPE =\n+        Constants.XERCES_FEATURE_PREFIX + Constants.DISALLOW_DOCTYPE_DECL_FEATURE;\n \n     /** Property identifier: error handler. */\n     protected static final String ERROR_HANDLER =\n@@ -99,25 +100,25 @@\n     Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_RESOLVER_PROPERTY;\n     /** Property identifier: entity manager. */\n     protected static final String ENTITY_MANAGER =\n-            Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY; \n-    \n+            Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY;\n+\n     /** Property identifier: error reporter. */\n     public static final String ERROR_REPORTER =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY;\n-        \n+\n     /** Property identifier: grammar pool. */\n     public static final String XMLGRAMMAR_POOL =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.XMLGRAMMAR_POOL_PROPERTY;\n-        \n+\n     /** Property identifier: symbol table. */\n     public static final String SYMBOL_TABLE =\n         Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY;\n-        \n+\n     protected static final String SECURITY_MANAGER =\n-        Constants.XERCES_PROPERTY_PREFIX + Constants.SECURITY_MANAGER_PROPERTY; \n+        Constants.XERCES_PROPERTY_PREFIX + Constants.SECURITY_MANAGER_PROPERTY;\n \n     protected static final boolean DEBUG_NODE_POOL = false;\n-                              \n+\n     // Data\n \n     // different sorts of declarations; should make lookup and\n@@ -221,7 +222,7 @@ private String doc2SystemId(Document doc) {\n     // map between <redefine> elements and the XSDocumentInfo\n     // objects that correspond to the documents being redefined.\n     private Hashtable fRedefine2XSDMap = new Hashtable();\n-    \n+\n     // map between <redefine> elements and the namespace support\n     private Hashtable fRedefine2NSSupport = new Hashtable();\n \n@@ -249,10 +250,10 @@ private String doc2SystemId(Document doc) {\n \n     // the GrammarResolver\n     private XSGrammarBucket fGrammarBucket;\n-    \n+\n     // the Grammar description\n     private XSDDescription fSchemaGrammarDescription;\n-    \n+\n     // the Grammar Pool\n     private XMLGrammarPool fGrammarPool;\n \n@@ -319,7 +320,7 @@ public XSDHandler (XSGrammarBucket gBucket) {\n         fSchemaGrammarDescription = new XSDDescription();\n     } // end constructor\n \n-    \n+\n \n     /**\n      * This method initiates the parse of a schema.  It will likely be\n@@ -335,28 +336,28 @@ public XSDHandler (XSGrammarBucket gBucket) {\n     public SchemaGrammar parseSchema(XMLInputSource is, XSDDescription desc,\n                                      Hashtable locationPairs)\n             throws IOException {\n-        fLocationPairs = locationPairs;               \n-\t\tfSchemaParser.resetNodePool();\n-\t\t\n+        fLocationPairs = locationPairs;\n+        fSchemaParser.resetNodePool();\n+\n         SchemaGrammar grammar = null;\n-\t\tString schemaNamespace  = null;\n-\t\tshort referType = desc.getContextType();\n+        String schemaNamespace  = null;\n+        short referType = desc.getContextType();\n         // if loading using JAXP schemaSource property, or using grammar caching loadGrammar\n         // the desc.targetNamespace is always null.\n-        // Therefore we should not attempt to find out if \n+        // Therefore we should not attempt to find out if\n         // the schema is already in the bucket, since in the case we have\n-        // no namespace schema in the bucket, findGrammar will always return the \n+        // no namespace schema in the bucket, findGrammar will always return the\n         // no namespace schema.\n-        if (referType != XSDDescription.CONTEXT_PREPARSE){        \n-        \t// first try to find it in the bucket/pool, return if one is found\n-        \tgrammar = findGrammar(desc);\n-\t\t\tif (grammar != null)\n-\t\t\t\treturn grammar;\n-\t\t\tschemaNamespace = desc.getTargetNamespace();\n-\t\t\t// handle empty string URI as null\n-\t\t\tif (schemaNamespace != null) {\n-\t\t\t\tschemaNamespace = fSymbolTable.addSymbol(schemaNamespace);\n-\t\t\t}\t\n+        if (referType != XSDDescription.CONTEXT_PREPARSE){\n+            // first try to find it in the bucket/pool, return if one is found\n+            grammar = findGrammar(desc);\n+            if (grammar != null)\n+                return grammar;\n+            schemaNamespace = desc.getTargetNamespace();\n+            // handle empty string URI as null\n+            if (schemaNamespace != null) {\n+                schemaNamespace = fSymbolTable.addSymbol(schemaNamespace);\n+            }\n         }\n \n         // before parsing a schema, need to clear registries associated with\n@@ -374,25 +375,25 @@ public SchemaGrammar parseSchema(XMLInputSource is, XSDDescription desc,\n         if ( referType == XSDDescription.CONTEXT_PREPARSE) {\n             Element schemaElem = DOMUtil.getRoot(schemaRoot);\n             schemaNamespace = DOMUtil.getAttrValue(schemaElem, SchemaSymbols.ATT_TARGETNAMESPACE);\n-\t\t\tif(schemaNamespace != null && schemaNamespace.length() > 0) {\n-\t\t\t\t// Since now we've discovered a namespace, we need to update xsd key\n-\t\t\t\t// and store this schema in traversed schemas bucket\n-\t\t\t\tschemaNamespace = fSymbolTable.addSymbol(schemaNamespace);\n-\t\t\t\tdesc.setTargetNamespace(schemaNamespace);\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tschemaNamespace = null;\n-\t\t\t}\n-\t\t\tgrammar = findGrammar(desc);\n-\t\t\tif (grammar != null)\n-\t\t\t\treturn grammar;\n-\t\t\tString schemaId = XMLEntityManager.expandSystemId(is.getSystemId(), is.getBaseSystemId(), false);\n-\t\t\tXSDKey key = new XSDKey(schemaId, referType, schemaNamespace);\n-\t\t\tfTraversed.put(key, schemaRoot );\n-\t\t\tif (schemaId != null) {\n-\t\t\t    fDoc2SystemId.put(schemaRoot, schemaId );\n-\t\t\t}            \n-        } \n+            if(schemaNamespace != null && schemaNamespace.length() > 0) {\n+                // Since now we've discovered a namespace, we need to update xsd key\n+                // and store this schema in traversed schemas bucket\n+                schemaNamespace = fSymbolTable.addSymbol(schemaNamespace);\n+                desc.setTargetNamespace(schemaNamespace);\n+            }\n+            else {\n+                schemaNamespace = null;\n+            }\n+            grammar = findGrammar(desc);\n+            if (grammar != null)\n+                return grammar;\n+            String schemaId = XMLEntityManager.expandSystemId(is.getSystemId(), is.getBaseSystemId(), false);\n+            XSDKey key = new XSDKey(schemaId, referType, schemaNamespace);\n+            fTraversed.put(key, schemaRoot );\n+            if (schemaId != null) {\n+                fDoc2SystemId.put(schemaRoot, schemaId );\n+            }\n+        }\n \n         // before constructing trees and traversing a schema, need to reset\n         // all traversers and clear all registries\n@@ -478,10 +479,10 @@ protected SchemaGrammar findGrammar(XSDDescription desc) {\n                     }\n                 }\n             }\n-        } \n+        }\n         return sg;\n     }\n-    \n+\n     // may wish to have setter methods for ErrorHandler,\n     // EntityResolver...\n \n@@ -495,12 +496,12 @@ protected SchemaGrammar findGrammar(XSDDescription desc) {\n         {\"TargetNamespace.1\", \"TargetNamespace.2\"},\n         {\"TargetNamespace.1\", \"TargetNamespace.2\"}\n     };\n-    \n+\n     private static final String[] ELE_ERROR_CODES = {\n         \"src-include.1\", \"src-redefine.2\", \"src-import.2\", \"schema_reference.4\",\n         \"schema_reference.4\", \"schema_reference.4\", \"schema_reference.4\", \"schema_reference.4\"\n     };\n-    \n+\n     // This method does several things:\n     // It constructs an instance of an XSDocumentInfo object using the\n     // schemaRoot node.  Then, for each <include>,\n@@ -515,7 +516,7 @@ protected XSDocumentInfo constructTrees(Document schemaRoot, String locationHint\n         if (schemaRoot == null) return null;\n         String callerTNS = desc.getTargetNamespace();\n         short referType = desc.getContextType();\n-        \n+\n         XSDocumentInfo currSchemaInfo = null;\n         try {\n             // note that attributes are freed at end of traverseSchemas()\n@@ -585,12 +586,12 @@ else if (currSchemaInfo.fTargetNamespace != null) {\n         }\n         // the other cases (callerTNS == currSchemaInfo.fTargetNamespce == null)\n         // are valid\n-        \n+\n         // a schema document can always access it's own target namespace\n         currSchemaInfo.addAllowedNS(currSchemaInfo.fTargetNamespace);\n \n         SchemaGrammar sg = null;\n-        \n+\n         if (referType == XSDDescription.CONTEXT_INCLUDE ||\n             referType == XSDDescription.CONTEXT_REDEFINE) {\n             sg = fGrammarBucket.getGrammar(currSchemaInfo.fTargetNamespace);\n@@ -604,7 +605,7 @@ else if (currSchemaInfo.fTargetNamespace != null) {\n         // REVISIT: don't expose the DOM tree\n         //sg.addDocument(currSchemaInfo.fSchemaDoc, (String)fDoc2SystemId.get(currSchemaInfo));\n         sg.addDocument(null, (String)fDoc2SystemId.get(currSchemaInfo.fSchemaDoc));\n-            \n+\n         fDoc2XSDocumentMap.put(schemaRoot, currSchemaInfo);\n \n         Vector dependencies = new Vector();\n@@ -617,9 +618,9 @@ else if (currSchemaInfo.fTargetNamespace != null) {\n             String schemaNamespace=null;\n             String schemaHint=null;\n             String localName = DOMUtil.getLocalName(child);\n-            \n+\n             short refType = -1;\n-            \n+\n             if (localName.equals(SchemaSymbols.ELT_ANNOTATION))\n                 continue;\n             else if (localName.equals(SchemaSymbols.ELT_IMPORT)) {\n@@ -652,15 +653,15 @@ else if (localName.equals(SchemaSymbols.ELT_IMPORT)) {\n                     }\n                 }\n                 fAttributeChecker.returnAttrArray(importAttrs, currSchemaInfo);\n-                \n+\n                 // if this namespace has been imported by this document,\n                 // ignore the <import> statement\n                 if (currSchemaInfo.isAllowedNS(schemaNamespace))\n                     continue;\n \n                 // a schema document can access it's imported namespaces\n                 currSchemaInfo.addAllowedNS(schemaNamespace);\n-                \n+\n                 // also record the fact that one namespace imports another one\n                 // convert null to \"\"\n                 String tns = null2EmptyString(currSchemaInfo.fTargetNamespace);\n@@ -730,7 +731,7 @@ else if ((localName.equals(SchemaSymbols.ELT_INCLUDE)) ||\n                             sg.addAnnotation(\n                                 fElementTraverser.traverseAnnotationDecl(redefinedChild, includeAttrs, true, currSchemaInfo));\n                             DOMUtil.setHidden(redefinedChild);\n-                        } \n+                        }\n                         // catch all other content errors later\n                     }\n                 }\n@@ -784,7 +785,7 @@ else if ((localName.equals(SchemaSymbols.ELT_INCLUDE)) ||\n                 newSchemaRoot = null;\n             }\n         }\n-        \n+\n         fDependencyMap.put(currSchemaInfo, dependencies);\n         return currSchemaInfo;\n     } // end constructTrees\n@@ -955,7 +956,7 @@ protected void traverseSchemas() {\n                 // must have processed this already!\n                 continue;\n             }\n-            Element currRoot = DOMUtil.getRoot(currDoc); \n+            Element currRoot = DOMUtil.getRoot(currDoc);\n \n             // traverse this schema's global decls\n             for (Element globalComp =\n@@ -1051,7 +1052,7 @@ else if (fReportedTNS.contains(uri))\n         fReportedTNS.addElement(uri);\n         return true;\n     }\n-    \n+\n     private static final String[] COMP_TYPE = {\n         null,               // index 0\n         \"attribute declaration\",\n@@ -1192,7 +1193,7 @@ protected Object getGlobalDecl(XSDocumentInfo currSchema,\n         default:\n             reportSchemaError(\"Internal-Error\", new Object [] {\"XSDHandler asked to locate component of type \" + declType + \"; it does not recognize this type!\"}, elmNode);\n         }\n-        \n+\n         // no DOM element found, so the component can't be located\n         if (decl == null) {\n             reportSchemaError(\"src-resolve\", new Object[]{declToTraverse.rawname, COMP_TYPE[declType]}, elmNode);\n@@ -1371,9 +1372,9 @@ protected void storeKeyRef (Element keyrefToStore, XSDocumentInfo schemaDoc,\n         fKeyrefNamespaceContext[fKeyrefStackPos++] = schemaDoc.fNamespaceSupport.getEffectiveLocalContext();\n     } // storeKeyref (Element, XSDocumentInfo, XSElementDecl): void\n \n-    \n+\n     /**\n-     * resolveSchema method is responsible for resolving location of the schema (using XMLEntityResolver), \n+     * resolveSchema method is responsible for resolving location of the schema (using XMLEntityResolver),\n      * and if it was succefully resolved getting the schema Document.\n      * @param desc\n      * @param mustResolve\n@@ -1390,7 +1391,7 @@ private Document resolveSchema(XSDDescription desc,\n             if (mustResolve) {\n                 reportSchemaError(\"schema_reference.4\",\n                                   new Object[]{desc.getLocationHints()[0]},\n-                                  referElement); \n+                                  referElement);\n             }\n             else {\n                 reportSchemaWarning(\"schema_reference.4\",\n@@ -1402,7 +1403,7 @@ private Document resolveSchema(XSDDescription desc,\n     } // getSchema(String, String, String, boolean, short):  Document\n \n     /**\n-     * getSchemaDocument method uses XMLInputSource to parse a schema document. \n+     * getSchemaDocument method uses XMLInputSource to parse a schema document.\n      * @param schemaNamespace\n      * @param schemaSource\n      * @param mustResolve\n@@ -1432,24 +1433,24 @@ private Document getSchemaDocument(String schemaNamespace, XMLInputSource schema\n                 // expand it, and check whether the same document has been\n                 // parsed before. If so, return the document corresponding to\n                 // that system id.\n-\t\t\t\tXSDKey key = null;\n-\t\t\t\tString schemaId = null;\n-               \tif (referType != XSDDescription.CONTEXT_PREPARSE){\n-\t\t\t\t\tschemaId = XMLEntityManager.expandSystemId(schemaSource.getSystemId(), schemaSource.getBaseSystemId(), false);\n-               \t\tkey = new XSDKey(schemaId, referType, schemaNamespace);\n-               \t\tif ((schemaDoc = (Document)fTraversed.get(key)) != null) {\n-                   \t\tfLastSchemaWasDuplicate = true;\n-                   \t\treturn schemaDoc;\n-               \t\t}\t\n-               \t}\n+                XSDKey key = null;\n+                String schemaId = null;\n+                if (referType != XSDDescription.CONTEXT_PREPARSE){\n+                    schemaId = XMLEntityManager.expandSystemId(schemaSource.getSystemId(), schemaSource.getBaseSystemId(), false);\n+                    key = new XSDKey(schemaId, referType, schemaNamespace);\n+                    if ((schemaDoc = (Document)fTraversed.get(key)) != null) {\n+                        fLastSchemaWasDuplicate = true;\n+                        return schemaDoc;\n+                    }\n+                }\n \n                 fSchemaParser.parse(schemaSource);\n                 schemaDoc = fSchemaParser.getDocument();\n \n                 // now we need to store the mapping information from system id\n                 // to the document. also from the document to the system id.\n                 if (key != null)\n-                \tfTraversed.put(key, schemaDoc );\n+                    fTraversed.put(key, schemaDoc );\n                 if (schemaId != null)\n                     fDoc2SystemId.put(schemaDoc, schemaId );\n                 fLastSchemaWasDuplicate = false;\n@@ -1461,21 +1462,21 @@ private Document getSchemaDocument(String schemaNamespace, XMLInputSource schema\n         }\n         catch (IOException ex) {\n         }\n-        \n+\n         // either an error occured (exception), or empty input source was\n         // returned, we need to report an error or a warning\n         if (mustResolve) {\n             if (hasInput) {\n                 reportSchemaError(\"schema_reference.4\",\n                                   new Object[]{schemaSource.getSystemId()},\n-                                  referElement); \n-\t\t\t}\n-\t\t\telse {\n+                                  referElement);\n+            }\n+            else {\n                 reportSchemaError(\"schema_reference.4\",\n                                   new Object[]{schemaSource == null ? \"\" : schemaSource.getSystemId()},\n-                                  referElement); \n-\t\t\t}\n-\t\t}\n+                                  referElement);\n+            }\n+        }\n \n         fLastSchemaWasDuplicate = false;\n         return null;\n@@ -1573,13 +1574,13 @@ public void reset(XMLComponentManager componentManager) {\n \n         // set symbol table\n         fSymbolTable = (SymbolTable) componentManager.getProperty(SYMBOL_TABLE);\n-        \n+\n         //set entity resolver\n         fEntityResolver = (XMLEntityResolver) componentManager.getProperty(ENTITY_MANAGER);\n         XMLEntityResolver er = (XMLEntityResolver)componentManager.getProperty(ENTITY_RESOLVER);\n         if (er != null)\n             fSchemaParser.setEntityResolver(er);\n-        \n+\n         // set error reporter\n         fErrorReporter =\n             (XMLErrorReporter) componentManager.getProperty(ERROR_REPORTER);\n@@ -1622,7 +1623,7 @@ public void reset(XMLComponentManager componentManager) {\n         }\n         // security features\n         try {\n-            fSchemaParser.setFeature( DISALLOW_DOCTYPE, \n+            fSchemaParser.setFeature( DISALLOW_DOCTYPE,\n                 componentManager.getFeature(DISALLOW_DOCTYPE));\n         } catch (XMLConfigurationException e) {\n         }\n@@ -1651,12 +1652,17 @@ void traverseLocalElements() {\n             fElementTraverser.traverseLocal (fParticle[i], currElem, currSchema, currGrammar, fAllContext[i], fParent[i]);\n             // If it's an empty particle, remove it from the containing component.\n             if (fParticle[i].fType == XSParticleDecl.PARTICLE_EMPTY) {\n-                XSModelGroupImpl group;\n-                if (fParent[i] instanceof XSComplexTypeDecl)\n-                    group = (XSModelGroupImpl)((XSComplexTypeDecl)fParent[i]).getParticle().getTerm();\n-                else\n+                XSModelGroupImpl group = null;\n+                if (fParent[i] instanceof XSComplexTypeDecl) {\n+                    XSParticle p = ((XSComplexTypeDecl)fParent[i]).getParticle();\n+                    if (p != null)\n+                        group = (XSModelGroupImpl)p.getTerm();\n+                }\n+                else {\n                     group = ((XSGroupDecl)fParent[i]).fModelGroup;\n-                removeParticle(group, fParticle[i]);\n+                }\n+                if (group != null)\n+                    removeParticle(group, fParticle[i]);\n             }\n         }\n     }\n@@ -2070,7 +2076,7 @@ private void setSchemasVisible(XSDocumentInfo startSchema) {\n     } // setSchemasVisible(XSDocumentInfo): void\n \n     private SimpleLocator xl = new SimpleLocator();\n-    \n+\n     /**\n      * Extract location information from an Element node, and create a\n      * new SimpleLocator object from such information. Returning null means\n@@ -2079,11 +2085,11 @@ private void setSchemasVisible(XSDocumentInfo startSchema) {\n     public SimpleLocator element2Locator(Element e) {\n         if (!( e instanceof ElementImpl))\n             return null;\n-        \n+\n         SimpleLocator l = new SimpleLocator();\n         return element2Locator(e, l) ? l : null;\n     }\n-    \n+\n     /**\n      * Extract location information from an Element node, store such\n      * information in the passed-in SimpleLocator object, then return\n@@ -2105,7 +2111,7 @@ public boolean element2Locator(Element e, SimpleLocator l) {\n         }\n         return false;\n     }\n-    \n+\n     void reportSchemaError(String key, Object[] args, Element ele) {\n         if (element2Locator(ele, xl)) {\n             fErrorReporter.reportError(xl, XSMessageFormatter.SCHEMA_DOMAIN,\n@@ -2132,7 +2138,7 @@ void reportSchemaWarning(String key, Object[] args, Element ele) {\n      * used to identify a reference to a schema document\n      * if the same document is referenced twice with the same key, then\n      * we only need to parse it once.\n-     * \n+     *\n      * When 2 XSDKey's are compared, the following table can be used to\n      * determine whether they are equal:\n      *      inc     red     imp     pre     ins\n@@ -2141,7 +2147,7 @@ void reportSchemaWarning(String key, Object[] args, Element ele) {\n      * imp  N/L      ?      N/P     N/P     N/P\n      * pre  N/L      ?      N/P     N/P     N/P\n      * ins  N/L      ?      N/P     N/P     N/P\n-     * \n+     *\n      * Where: N/L: duplicate when they have the same namespace and location.\n      *         ? : not clear from the spec.\n      *             REVISIT: to simplify the process, also considering\n@@ -2153,13 +2159,13 @@ void reportSchemaWarning(String key, Object[] args, Element ele) {\n      *             we first check whether a grammar with the same namespace is\n      *             already in the bucket, which is true in this case, so we\n      *             won't create another XSDKey.\n-     *             \n+     *\n      * Conclusion from the table: two XSDKey's are duplicate only when all of\n      * the following are true:\n      * 1. They are both \"redefine\", or neither is \"redefine\";\n      * 2. They have the same namespace;\n      * 3. They have the same non-null location.\n-     * \n+     *\n      * About 3: if neither has a non-null location, then it's the case where\n      * 2 input streams are provided, but no system ID is provided. We can't tell\n      * whether the 2 streams have the same content, so we treat them as not\n@@ -2177,7 +2183,7 @@ void reportSchemaWarning(String key, Object[] args, Element ele) {\n             this.referType = referType;\n             this.referNS = referNS;\n         }\n-        \n+\n         public int hashCode() {\n             // according to the description at the beginning of this class,\n             // we use the hashcode of the namespace as the hashcoe of this key.\n@@ -2189,18 +2195,18 @@ public boolean equals(Object obj) {\n                 return false;\n             }\n             XSDKey key = (XSDKey)obj;\n-            \n+\n             // condition 1: both are redefine\n             if (referType == XSDDescription.CONTEXT_REDEFINE ||\n                 key.referType == XSDDescription.CONTEXT_REDEFINE) {\n                 if (referType != key.referType)\n                     return false;\n             }\n-            \n+\n             // condition 2: same namespace\n             if (referNS != key.referNS)\n                 return false;\n-            \n+\n             // condition 3: same non-null locatoin\n             if (systemId == null || !systemId.equals(key.systemId)) {\n                 return false;\n@@ -2209,5 +2215,5 @@ public boolean equals(Object obj) {\n             return true;\n         }\n     }\n-    \n+\n } // XSDHandler",
                "additions": 119,
                "raw_url": "https://github.com/apache/xerces2-j/raw/824513f9279b62485bd5e7ef6236029f1a49e949/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 232,
                "deletions": 113,
                "sha": "cc146394660ac48f28951ee8d0d39793daa531f2",
                "blob_url": "https://github.com/apache/xerces2-j/blob/824513f9279b62485bd5e7ef6236029f1a49e949/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=824513f9279b62485bd5e7ef6236029f1a49e949"
            }
        ],
        "bug_id": "xerces2-j_108",
        "parent": "https://github.com/apache/xerces2-j/commit/fcb7c29ea98c5b4173e43be407922373374eb1ae",
        "message": "Fixing Jira bug [XERCESJ-991].\nSometimes, due to some schema errors, we try to remove a particle from\nanother particle which is empty. We didn't check for this case, and got an NPE.\nNote that this commit includes many accidental whitespace changes.\nThe really changes are between lines 1655 and 1665.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320000 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/3cfc52017281c1a85e28897cf20c1e0c238d0ecc",
        "file": [
            {
                "patch": "@@ -555,8 +555,9 @@ public void normalize() {\n                 else\n                 {\n                     // If kid is empty, remove it\n-                    if ( kid.getNodeValue().length()==0 )\n+                    if ( kid.getNodeValue() == null || kid.getNodeValue().length() == 0 ) {\n                         removeChild( kid );\n+                    }\n                 }\n             }\n         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/AttrImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "6dafe0dd6499a2ba1c90fd9459ea50cc6f455026",
                "blob_url": "https://github.com/apache/xerces2-j/blob/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/AttrImpl.java",
                "filename": "src/org/apache/xerces/dom/AttrImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/AttrImpl.java?ref=3cfc52017281c1a85e28897cf20c1e0c238d0ecc"
            },
            {
                "patch": "@@ -135,8 +135,9 @@ public void normalize() {\n                 else\n                 {\n                     // If kid is empty, remove it\n-                    if ( kid.getNodeValue().length()==0 )\n+                    if ( kid.getNodeValue() == null || kid.getNodeValue().length() == 0 ) {\n                         removeChild( kid );\n+                    }\n                 }\n             }\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/DocumentFragmentImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "e41251aceb675ad275a6e3373d6c66dadbe52d1f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/DocumentFragmentImpl.java",
                "filename": "src/org/apache/xerces/dom/DocumentFragmentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DocumentFragmentImpl.java?ref=3cfc52017281c1a85e28897cf20c1e0c238d0ecc"
            },
            {
                "patch": "@@ -340,8 +340,9 @@ public void normalize() {\n                 else\n                 {\n                     // If kid is empty, remove it\n-                    if ( kid.getNodeValue().length()==0 )\n+                    if ( kid.getNodeValue() == null || kid.getNodeValue().length() == 0 ) {\n                         removeChild( kid );\n+                    }\n                 }\n             }\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/ElementImpl.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "34fd3a9031a57e962cf739df69998be37d6d8c0b",
                "blob_url": "https://github.com/apache/xerces2-j/blob/3cfc52017281c1a85e28897cf20c1e0c238d0ecc/src/org/apache/xerces/dom/ElementImpl.java",
                "filename": "src/org/apache/xerces/dom/ElementImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/ElementImpl.java?ref=3cfc52017281c1a85e28897cf20c1e0c238d0ecc"
            }
        ],
        "bug_id": "xerces2-j_109",
        "parent": "https://github.com/apache/xerces2-j/commit/1c6625eb7e63824d5c6875ab877fc3a44f896911",
        "message": "Fixing Jira Bug #966:\nhttp://nagoya.apache.org/jira/browse/XERCESJ-966\n\nWe weren't checking if the nodeValue for the text node\nis null during execution of Node.normalize(). Thanks to\nAntonio Arena and Neil Delima for pointing out these \nproblems. This fixes some potential NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319926 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/17ae255ae42024a3aea47e612949c433f12e9afe",
        "file": [
            {
                "patch": "@@ -404,6 +404,10 @@ XSAttributeDecl traverseNamedAttr(Element attrDecl,\n             reportSchemaError(\"no-xsi\", new Object[]{SchemaSymbols.URI_XSI}, attrDecl);\n         }\n \n+        // Attribute without a name. Return null.\n+        if (attribute.getName() == null)\n+            return null;\n+\n         return attribute;\n     }\n ",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "b85cad365e545f4aa97d911baab321ae5f3897b6",
                "blob_url": "https://github.com/apache/xerces2-j/blob/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDAttributeTraverser.java?ref=17ae255ae42024a3aea47e612949c433f12e9afe"
            },
            {
                "patch": "@@ -742,6 +742,7 @@ else if (complexContentName.equals(SchemaSymbols.ELT_EXTENSION))\n             // Create the particle\n             if (fParticle == null) {\n                 fContentType = baseType.getContentType();\n+                fXSSimpleType = (XSSimpleType)baseType.getSimpleType();\n                 fParticle = baseContent;\n             }\n             else if (baseType.getContentType() == XSComplexTypeDecl.CONTENTTYPE_EMPTY) {\n@@ -1018,6 +1019,7 @@ private void handleComplexTypeError(String messageId,Object[] args,\n         //  Mock up the typeInfo structure so that there won't be problems during\n         //  validation\n         //\n+        fBaseType = SchemaGrammar.fAnyType;\n         fContentType = XSComplexTypeDecl.CONTENTTYPE_MIXED;\n         fParticle = getErrorContent();\n         // REVISIT: do we need to remove all attribute uses already added into",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "ecc6c844b1a852249ba0e4587fac4055ef6cb72b",
                "blob_url": "https://github.com/apache/xerces2-j/blob/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDComplexTypeTraverser.java?ref=17ae255ae42024a3aea47e612949c433f12e9afe"
            },
            {
                "patch": "@@ -482,6 +482,10 @@ else if (childName.equals(SchemaSymbols.ELT_SIMPLETYPE)) {\n             }\n         }\n \n+        // Element without a name. Return null.\n+        if (element.fName == null)\n+            return null;\n+\n         return element;\n     }\n ",
                "additions": 4,
                "raw_url": "https://github.com/apache/xerces2-j/raw/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "d92e277a7bd2c2711b1736c2c8d441f301e52ac8",
                "blob_url": "https://github.com/apache/xerces2-j/blob/17ae255ae42024a3aea47e612949c433f12e9afe/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDElementTraverser.java?ref=17ae255ae42024a3aea47e612949c433f12e9afe"
            }
        ],
        "bug_id": "xerces2-j_110",
        "parent": "https://github.com/apache/xerces2-j/commit/e8ce517d35e57758b4945598bb46179dfa806bcc",
        "message": "Fixing potential NPEs:\n1. Sometimes a complex type has \"simple\" content, but its simple type is null;\n2. Sometimes a complex type has a null base type (in error situation);\n3. Sometimes an element has a null name (in error situation);\n4. Sometimes an attribute has a null name (in error situation).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319216 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/32706b447ac449bd96d173477fde3feb11feb2a4",
        "file": [
            {
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001, 2002 The Apache Software Foundation.\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.\n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -1172,6 +1172,10 @@ public void parse(InputSource inputSource)\n      */\n     public void setEntityResolver(EntityResolver resolver) {\n \n+        // not per SAX 1, but per SAX 2.0 and JAXP 1.1 expectations\n+        if(resolver == null) {\n+            throw new NullPointerException();\n+        }\n         try {\n             fConfiguration.setProperty(ENTITY_RESOLVER,\n                                        new EntityResolverWrapper(resolver));\n@@ -1227,6 +1231,10 @@ public EntityResolver getEntityResolver() {\n      */\n     public void setErrorHandler(ErrorHandler errorHandler) {\n \n+        // not per SAX 1, but per SAX 2.0 and JAXP 1.1 expectations\n+        if(errorHandler == null) {\n+            throw new NullPointerException();\n+        }\n         try {\n             fConfiguration.setProperty(ERROR_HANDLER,\n                                        new ErrorHandlerWrapper(errorHandler));\n@@ -1301,6 +1309,8 @@ public void setDTDHandler(DTDHandler dtdHandler) {\n         //          to be thrown but SAX2 does. [Q] How do we\n         //          resolve this? Currently I'm erring on the side\n         //          of SAX2. -Ac\n+        // This is what the JCK requires; 2.0 is assumed to supersede the\n+        // SAX 1 behaviour - neilg\n         if (dtdHandler == null) {\n             throw new NullPointerException();\n         }\n@@ -1352,6 +1362,10 @@ public void setDocumentHandler(DocumentHandler documentHandler) {\n      * @see #getContentHandler\n      */\n     public void setContentHandler(ContentHandler contentHandler) {\n+        // not per SAX 1, but per SAX 2.0 and JAXP 1.1 expectations\n+        if(contentHandler == null) {\n+            throw new NullPointerException();\n+        }\n         fContentHandler = contentHandler;\n     } // setContentHandler(ContentHandler)\n ",
                "additions": 15,
                "raw_url": "https://github.com/apache/xerces2-j/raw/32706b447ac449bd96d173477fde3feb11feb2a4/src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "status": "modified",
                "changes": 16,
                "deletions": 1,
                "sha": "32bb0bfcf7cf27215516ea30b9ed04b8d850eee6",
                "blob_url": "https://github.com/apache/xerces2-j/blob/32706b447ac449bd96d173477fde3feb11feb2a4/src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractSAXParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractSAXParser.java?ref=32706b447ac449bd96d173477fde3feb11feb2a4"
            }
        ],
        "bug_id": "xerces2-j_111",
        "parent": "https://github.com/apache/xerces2-j/commit/f0d7d075599398bfee4bf02ee5692c0009d47c4c",
        "message": "SAX 2.0 conformance bug.  When a null DTDHandler, ContentHandler, ErrorHandler or EntityResolver is registered with the XMLReader, SAX 2.0 clearly requires an NPE to be thrown.  While this is at variance with both SAX 1 and SAX 2.0.1, to conform to SAX 2.0 this behaviour is necessary.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319068 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/09a925b3391849068ece18dfb4b13e2f61c286fb",
        "file": [
            {
                "additions": 0,
                "raw_url": "https://github.com/apache/xerces2-j/raw/09a925b3391849068ece18dfb4b13e2f61c286fb/tools/xml-apis--src.zip",
                "status": "modified",
                "changes": 0,
                "deletions": 0,
                "sha": "4e04d816ba09271483f12bda6b4d58b76be59f41",
                "blob_url": "https://github.com/apache/xerces2-j/blob/09a925b3391849068ece18dfb4b13e2f61c286fb/tools/xml-apis--src.zip",
                "filename": "tools/xml-apis--src.zip",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/tools/xml-apis--src.zip?ref=09a925b3391849068ece18dfb4b13e2f61c286fb"
            },
            {
                "additions": 0,
                "raw_url": "https://github.com/apache/xerces2-j/raw/09a925b3391849068ece18dfb4b13e2f61c286fb/tools/xml-apis.jar",
                "status": "modified",
                "changes": 0,
                "deletions": 0,
                "sha": "46e2e6c7169170cf957e396be3ea7c4d3e69dcf0",
                "blob_url": "https://github.com/apache/xerces2-j/blob/09a925b3391849068ece18dfb4b13e2f61c286fb/tools/xml-apis.jar",
                "filename": "tools/xml-apis.jar",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/tools/xml-apis.jar?ref=09a925b3391849068ece18dfb4b13e2f61c286fb"
            }
        ],
        "bug_id": "xerces2-j_112",
        "parent": "https://github.com/apache/xerces2-j/commit/dcc2875b2309dc83297cb1eed2b7adc29b5bd077",
        "message": "Under some JDK's (notably both Sun and IBM 1.4.0), getClassLoader(), when invoked\non the JAXP or SAX classes, it returns null.  This means that\nthe fallback mechanism in these API's may not work correctly:  in\nparticular, when an attempt to invoke an unknown Parser/XMLReader\nimplementation is made in SAX, a NullPointerException rather than the correct\nClassNotFoundException results.  This patch fixes this problem,\nby using Class.forName() in the event that the bootstrap\nclassloader is not returned in this particular situation.\n\nNote that these API's and source *do not* correspond to a\ntagged version in xml-commons; they should be replaced by files built from such a version\nbefore the next Xerces release!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319075 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/8ce51b21049ac83135a5f7a10bf97e54ae5c4c6d",
        "file": [
            {
                "patch": "@@ -311,7 +311,7 @@ protected Node normalizeNode (Node node){\n                     if ( ((fConfiguration.features & DOMConfigurationImpl.WELLFORMED) != 0) && \n                             fDocument.isXMLVersionChanged()){\n                         if (fNamespaceValidation){\n-                            wellformed = CoreDocumentImpl.isValidQName(node.getPrefix() , node.getLocalName(), fDocument.isXML11Version()) ;\n+                            wellformed = CoreDocumentImpl.isValidQName(node.getPrefix() , node.getLocalName(), fDocument.isXML11Version());\n                         }\n                         else {\n                             wellformed = CoreDocumentImpl.isXMLName(node.getNodeName() , fDocument.isXML11Version());\n@@ -362,9 +362,14 @@ protected Node normalizeNode (Node node){\n                             attr.normalize();\n                             if (fDocument.errorChecking && ((fConfiguration.features & DOMConfigurationImpl.WELLFORMED) != 0)){\n                                     isAttrValueWF(fErrorHandler, fError, fLocator, attributes, attr, attr.getValue(), fDocument.isXML11Version());\n-                                if (fDocument.isXMLVersionChanged()){                                   \n-                                    wellformed=CoreDocumentImpl.isXMLName(node.getNodeName() , fDocument.isXML11Version());\n-                                    if (!wellformed){\n+                                if (fDocument.isXMLVersionChanged()) {\n+                                    if (fNamespaceValidation){\n+                                        wellformed = CoreDocumentImpl.isValidQName(node.getPrefix(), node.getLocalName(), fDocument.isXML11Version());\n+                                    }\n+                                    else {\n+                                        wellformed = CoreDocumentImpl.isXMLName(node.getNodeName(), fDocument.isXML11Version());\n+                                    }\n+                                    if (!wellformed) {\n \t\t\t\t                            String msg = DOMMessageFormatter.formatMessage(\n \t\t\t\t                              DOMMessageFormatter.DOM_DOMAIN, \n \t\t\t\t                              \"wf-invalid-character-in-node-name\", \n@@ -746,15 +751,6 @@ protected final void namespaceFixUp (ElementImpl element, AttributeMap attribute\n             // Record all valid local declarations\n             for (int k = 0; k < attributes.getLength(); ++k) {\n                 Attr attr = (Attr)attributes.getItem(k);\n-               \n-                //do the name check only when version of the document was changed &\n-                //application has set the value of well-formed features to true\n-                if (fDocument.errorChecking && ((fConfiguration.features & DOMConfigurationImpl.WELLFORMED) != 0) && \n-                    fDocument.isXMLVersionChanged()) {\n-                    //checkQName does checking based on the version of the document\n-                    fDocument.checkQName(attr.getPrefix() , attr.getLocalName()) ;\n-                }\n-                \n                 uri = attr.getNamespaceURI();\n                 if (uri != null && uri.equals(NamespaceContext.XMLNS_URI)) {\n                     // namespace attribute\n@@ -887,7 +883,31 @@ protected final void namespaceFixUp (ElementImpl element, AttributeMap attribute\n \n                 // make sure that value is never null.\n                 if (value == null) {\n-                    value=XMLSymbols.EMPTY_STRING;\n+                    value = XMLSymbols.EMPTY_STRING;\n+                }\n+                \n+                //---------------------------------------\n+                // check if value of the attribute is namespace well-formed\n+                //---------------------------------------\n+                if (fDocument.errorChecking && ((fConfiguration.features & DOMConfigurationImpl.WELLFORMED) != 0)) {\n+                    isAttrValueWF(fErrorHandler, fError, fLocator, attributes, attr, value, fDocument.isXML11Version());\n+                    if (fDocument.isXMLVersionChanged()) {\n+                        boolean wellformed;\n+                        if (fNamespaceValidation){\n+                            wellformed = CoreDocumentImpl.isValidQName(attr.getPrefix(), attr.getLocalName(), fDocument.isXML11Version());\n+                        }\n+                        else {\n+                            wellformed = CoreDocumentImpl.isXMLName(attr.getNodeName(), fDocument.isXML11Version());\n+                        }\n+                        if (!wellformed) {\n+                            String msg = DOMMessageFormatter.formatMessage(\n+                                    DOMMessageFormatter.DOM_DOMAIN, \n+                                    \"wf-invalid-character-in-node-name\", \n+                                    new Object[]{\"Attr\", attr.getNodeName()});\n+                            reportDOMError(fErrorHandler, fError, fLocator, msg, DOMError.SEVERITY_ERROR, \n+                            \"wf-invalid-character-in-node-name\");\n+                        }\n+                    }           \n                 }\n \n                 if (uri != null) {  // attribute has namespace !=null\n@@ -904,23 +924,6 @@ protected final void namespaceFixUp (ElementImpl element, AttributeMap attribute\n                     if (uri != null && uri.equals(NamespaceContext.XMLNS_URI)) {\n                         continue;\n                     }\n-                    //---------------------------------------\n-                    // check if value of the attribute is namespace well-formed\n-                    //---------------------------------------\n-                    if (fDocument.errorChecking && ((fConfiguration.features & DOMConfigurationImpl.WELLFORMED) != 0)) {\n-                            isAttrValueWF(fErrorHandler, fError, fLocator, attributes, attr, attr.getValue(), fDocument.isXML11Version());\n-                            if (fDocument.isXMLVersionChanged()){                                   \n-                                boolean wellformed=CoreDocumentImpl.isXMLName(attr.getNodeName() , fDocument.isXML11Version());\n-                                if (!wellformed){\n-\t\t\t\t                        String msg = DOMMessageFormatter.formatMessage(\n-\t\t\t\t                            DOMMessageFormatter.DOM_DOMAIN, \n-\t\t\t\t                            \"wf-invalid-character-in-node-name\", \n-\t\t\t\t                            new Object[]{\"Attribute\", attr.getNodeName()});\n-                                        reportDOMError(fErrorHandler, fError, fLocator, msg, DOMError.SEVERITY_ERROR, \n-                                            \"wf-invalid-character-in-node-name\");  \n-                                }\n-                        }\n-                    }\n \n                     // ---------------------------------------\n                     // remove default attributes\n@@ -936,7 +939,6 @@ protected final void namespaceFixUp (ElementImpl element, AttributeMap attribute\n                     // reset id-attributes\n                     ((AttrImpl)attr).setIdAttribute(false);\n \n-\n                     uri = fSymbolTable.addSymbol(uri);\n \n                     // find if for this prefix a URI was already declared",
                "additions": 34,
                "raw_url": "https://github.com/apache/xerces2-j/raw/8ce51b21049ac83135a5f7a10bf97e54ae5c4c6d/src/org/apache/xerces/dom/DOMNormalizer.java",
                "status": "modified",
                "changes": 66,
                "deletions": 32,
                "sha": "9e48298626ee66fccb18ac7d668d6b1cd47c81db",
                "blob_url": "https://github.com/apache/xerces2-j/blob/8ce51b21049ac83135a5f7a10bf97e54ae5c4c6d/src/org/apache/xerces/dom/DOMNormalizer.java",
                "filename": "src/org/apache/xerces/dom/DOMNormalizer.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DOMNormalizer.java?ref=8ce51b21049ac83135a5f7a10bf97e54ae5c4c6d"
            }
        ],
        "bug_id": "xerces2-j_113",
        "parent": "https://github.com/apache/xerces2-j/commit/9e03c14c7ce4ae1478485f7fe2c0685b033e125e",
        "message": "Fixing JIRA Bug #1230:\nhttp://issues.apache.org/jira/browse/XERCESJ-1230\n\nAn NPE would always be thrown from the normailzer during namespace fixup if the\ndocument contained any non-namespace aware Attr nodes. This was occuring while\nchecking the well-formedness of the attribute's name. I've changed the code so\nthat it's consistent with how we check element names. If an attribute's local\nname is null we'll detect that now.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@515293 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/d3cbda242bba946e6d34163d2b1403f06f798f71",
        "file": [
            {
                "patch": "@@ -1952,24 +1952,36 @@ private final int setChunkIndex(int data[][], int value,\n         if (value == -1) {\n             return clearChunkIndex(data, chunk, index);\n         }\n-        int ovalue = data[chunk][index];\n+        int [] dataChunk = data[chunk];\n+        // Re-create chunk if it was deleted.\n+        if (dataChunk == null) {\n+            createChunk(data, chunk);\n+            dataChunk = data[chunk];\n+        }\n+        int ovalue = dataChunk[index];\n         if (ovalue == -1) {\n-            data[chunk][CHUNK_SIZE]++;\n+            dataChunk[CHUNK_SIZE]++;\n         }\n-        data[chunk][index] = value;\n+        dataChunk[index] = value;\n         return ovalue;\n     }\n     private final String setChunkValue(Object data[][], Object value,\n                                        int chunk, int index) {\n         if (value == null) {\n             return clearChunkValue(data, chunk, index);\n         }\n-        String ovalue = (String) data[chunk][index];\n+        Object [] dataChunk = data[chunk];\n+        // Re-create chunk if it was deleted.\n+        if (dataChunk == null) {\n+            createChunk(data, chunk);\n+            dataChunk = data[chunk];\n+        }\n+        String ovalue = (String) dataChunk[index];\n         if (ovalue == null) {\n-            RefCount c = (RefCount) data[chunk][CHUNK_SIZE];\n+            RefCount c = (RefCount) dataChunk[CHUNK_SIZE];\n             c.fCount++;\n         }\n-        data[chunk][index] = value;\n+        dataChunk[index] = value;\n         return ovalue;\n     }\n ",
                "additions": 18,
                "raw_url": "https://github.com/apache/xerces2-j/raw/d3cbda242bba946e6d34163d2b1403f06f798f71/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "status": "modified",
                "changes": 24,
                "deletions": 6,
                "sha": "418df263fa95ea9e63122e7ead529fa9347afd3b",
                "blob_url": "https://github.com/apache/xerces2-j/blob/d3cbda242bba946e6d34163d2b1403f06f798f71/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DeferredDocumentImpl.java?ref=d3cbda242bba946e6d34163d2b1403f06f798f71"
            }
        ],
        "bug_id": "xerces2-j_114",
        "parent": "https://github.com/apache/xerces2-j/commit/8ff5e52a0e39ce14b62e2acf3db2ca5f3bd343c2",
        "message": "Fixing JIRA Bug #977:\nhttp://issues.apache.org/jira/browse/XERCESJ-977\n\nIt was possible to get an NPE when calling setChunkIndex or setChunkValue \nif the chunk was previously deleted because its reference count dropped \nto 0. We now re-create the chunk if it got deleted. \n\nThis will churn the garbage collector a bit. There's probably a more \nperformant solution but this seemed like the safest thing to do given the \nstability of the rest of the deferred DOM implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@511134 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/213d5582940b2a10d4584c38f161195e6c70e24c",
        "file": [
            {
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 1999-2005 The Apache Software Foundation.\n+ * Copyright 1999-2006 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -935,8 +935,8 @@ public boolean dispatch(boolean complete)\n                             // REVISIT: Should there be a feature for\n                             //          the \"complete\" parameter?\n                             boolean completeDTD = true;\n-\n-                            boolean moreToScan = fDTDScanner.scanDTDInternalSubset(completeDTD, fStandalone, fHasExternalDTD && fLoadExternalDTD);\n+                            boolean readExternalSubset = (fValidation || fLoadExternalDTD) && (fValidationManager == null || !fValidationManager.isCachedDTD());\n+                            boolean moreToScan = fDTDScanner.scanDTDInternalSubset(completeDTD, fStandalone, fHasExternalDTD && readExternalSubset);\n                             if (!moreToScan) {\n                                 // end doctype declaration\n                                 if (!fEntityScanner.skipChar(']')) {\n@@ -951,15 +951,13 @@ public boolean dispatch(boolean complete)\n \n                                 // scan external subset next\n                                 if (fDoctypeSystemId != null) {\n-                                    if ((fValidation || fLoadExternalDTD) \n-                                        && (fValidationManager == null || !fValidationManager.isCachedDTD())) {\n+                                    if (readExternalSubset) {\n                                         setScannerState(SCANNER_STATE_DTD_EXTERNAL);\n                                         break;\n                                     }\n                                 }\n                                 else if (fExternalSubsetSource != null) {\n-                                    if ((fValidation || fLoadExternalDTD) \n-                                        && (fValidationManager == null || !fValidationManager.isCachedDTD())) {\n+                                    if (readExternalSubset) {\n                                         // This handles the case of a DOCTYPE that only had an internal subset.\n                                         fDTDScanner.setInputSource(fExternalSubsetSource);\n                                         fExternalSubsetSource = null;",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/213d5582940b2a10d4584c38f161195e6c70e24c/src/org/apache/xerces/impl/XMLDocumentScannerImpl.java",
                "status": "modified",
                "changes": 12,
                "deletions": 7,
                "sha": "a1462ca7fcddd69f7d3342ac536cf4f7fb060a87",
                "blob_url": "https://github.com/apache/xerces2-j/blob/213d5582940b2a10d4584c38f161195e6c70e24c/src/org/apache/xerces/impl/XMLDocumentScannerImpl.java",
                "filename": "src/org/apache/xerces/impl/XMLDocumentScannerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/XMLDocumentScannerImpl.java?ref=213d5582940b2a10d4584c38f161195e6c70e24c"
            }
        ],
        "bug_id": "xerces2-j_115",
        "parent": "https://github.com/apache/xerces2-j/commit/8ace8bfb595c3e4f01312d16d44af179fd7c0784",
        "message": "Fixing JIRA Bug #1169:\nhttp://issues.apache.org/jira/browse/XERCESJ-1169\n\nIf grammar caching is enabled and a document has both an internal and\nexternal DTD subset endDTD() was never being called. This was causing\nthe DOM builder to drop all of the text in the document. This should\nnow be fixed as well as another bug which could lead to an NPE if\nthe validation feature is enabled but the load external DTD feature\nis disabled.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@418359 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/7edaaec4398fa3586495511a069e903b43d9a7f9",
        "file": [
            {
                "patch": "@@ -41,19 +41,36 @@\n     /** Returns the expanded system identifier. */\n     public String getExpandedSystemId();\n     \n-    /** Returns the line number. */\n+    /** Returns the line number, or <code>-1</code> if no line number is available. */\n     public int getLineNumber();\n   \n-    /** Returns the column number. */\n+    /** Returns the column number, or <code>-1</code> if no column number is available. */\n     public int getColumnNumber();\n+    \n+    /** Returns the character offset, or <code>-1</code> if no character offset is available. */\n+    public int getCharacterOffset();\n \n-    /** Returns the encoding of the current entity.  \n+    /** \n+     * Returns the encoding of the current entity.  \n      * Note that, for a given entity, this value can only be\n      * considered final once the encoding declaration has been read (or once it\n      * has been determined that there is no such declaration) since, no encoding\n      * having been specified on the XMLInputSource, the parser\n      * will make an initial \"guess\" which could be in error. \n      */\n     public String getEncoding();\n+    \n+    /** \n+     * Returns the XML version of the current entity. This will normally be the\n+     * value from the XML or text declaration or defaulted by the parser. Note that\n+     * that this value may be different than the version of the processing rules \n+     * applied to the current entity. For instance, an XML 1.1 document may refer to\n+     * XML 1.0 entities. In such a case the rules of XML 1.1 are applied to the entire \n+     * document. Also note that, for a given entity, this value can only be considered\n+     * final once the XML or text declaration has been read or once it has been\n+     * determined that there is no such declaration.\n+     */\n+    public String getXMLVersion();\n+\n \n } // interface XMLLocator",
                "additions": 20,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7edaaec4398fa3586495511a069e903b43d9a7f9/src/org/apache/xerces/xni/XMLLocator.java",
                "status": "modified",
                "changes": 23,
                "deletions": 3,
                "sha": "f16a9250257b3490a6d149bbc5afdc92c54da642",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7edaaec4398fa3586495511a069e903b43d9a7f9/src/org/apache/xerces/xni/XMLLocator.java",
                "filename": "src/org/apache/xerces/xni/XMLLocator.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xni/XMLLocator.java?ref=7edaaec4398fa3586495511a069e903b43d9a7f9"
            },
            {
                "patch": "@@ -55,6 +55,9 @@\n     \n     /** Column number. */\n     protected int fColumnNumber = -1;\n+    \n+    /** Character offset. */\n+    protected int fCharacterOffset = -1;\n \n     //\n     // Constructors\n@@ -70,19 +73,23 @@ public XMLParseException(XMLLocator locator, String message) {\n             fBaseSystemId = locator.getBaseSystemId();\n             fLineNumber = locator.getLineNumber();\n             fColumnNumber = locator.getColumnNumber();\n+            fCharacterOffset = locator.getCharacterOffset();\n         }\n     } // <init>(XMLLocator,String)\n \n     /** Constructs a parse exception. */\n     public XMLParseException(XMLLocator locator,\n                              String message, Exception exception) {\n         super(message, exception);\n-        fPublicId = locator.getPublicId();\n-        fLiteralSystemId = locator.getLiteralSystemId();\n-        fExpandedSystemId = locator.getExpandedSystemId();\n-        fBaseSystemId = locator.getBaseSystemId();\n-        fLineNumber = locator.getLineNumber();\n-        fColumnNumber = locator.getColumnNumber();\n+        if (locator != null) {\n+            fPublicId = locator.getPublicId();\n+            fLiteralSystemId = locator.getLiteralSystemId();\n+            fExpandedSystemId = locator.getExpandedSystemId();\n+            fBaseSystemId = locator.getBaseSystemId();\n+            fLineNumber = locator.getLineNumber();\n+            fColumnNumber = locator.getColumnNumber();\n+            fCharacterOffset = locator.getCharacterOffset();\n+        }\n     } // <init>(XMLLocator,String,Exception)\n \n     //\n@@ -118,6 +125,11 @@ public int getLineNumber() {\n     public int getColumnNumber() {\n         return fColumnNumber;\n     } // getRowNumber():int\n+    \n+    /** Returns the character offset. */\n+    public int getCharacterOffset() {\n+        return fCharacterOffset;\n+    } // getCharacterOffset():int\n \n     //\n     // Object methods",
                "additions": 18,
                "raw_url": "https://github.com/apache/xerces2-j/raw/7edaaec4398fa3586495511a069e903b43d9a7f9/src/org/apache/xerces/xni/parser/XMLParseException.java",
                "status": "modified",
                "changes": 24,
                "deletions": 6,
                "sha": "63c857a7c32ae343b13b3f70d1efe00846484a3f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/7edaaec4398fa3586495511a069e903b43d9a7f9/src/org/apache/xerces/xni/parser/XMLParseException.java",
                "filename": "src/org/apache/xerces/xni/parser/XMLParseException.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/xni/parser/XMLParseException.java?ref=7edaaec4398fa3586495511a069e903b43d9a7f9"
            }
        ],
        "bug_id": "xerces2-j_116",
        "parent": "https://github.com/apache/xerces2-j/commit/0b72971657560903615cf5c0949d1c7c0e3b3e69",
        "message": "Making XNI changes as per discussion on xerces-j-dev:\n\n1) Add a getCharacterOffset method to XMLLocator which returns \nthe character offset for the current entity. \n\n2) Add a getVersion method to XMLLocator which returns the XML\nversion of the current entity. \n\n3) Add a getCharacterOffset method to XMLParseException to \nexpose the offset from the XMLLocator.\n\nAlso preventing an NPE in case of a null locator passed to the\nconstructor. This had been fixed ages ago for the other\nconstructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@320036 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/215db2e697a349eb9188e1220ed84513ddc5d043",
        "file": [
            {
                "patch": "@@ -41,6 +41,7 @@\n import org.apache.xerces.impl.xs.opti.ElementImpl;\n import org.apache.xerces.impl.xs.opti.SchemaParsingConfig;\n import org.apache.xerces.impl.xs.util.SimpleLocator;\n+import org.apache.xerces.util.DefaultErrorHandler;\n import org.apache.xerces.util.DOMUtil;\n import org.apache.xerces.util.SymbolTable;\n import org.apache.xerces.util.XMLSymbols;\n@@ -1578,7 +1579,7 @@ public void reset(XMLComponentManager componentManager) {\n             // than checking its value.  Don't set the ERROR_HANDLER\n             // property unless it's actually changed.\n             if (currErrorHandler != fSchemaParser.getProperty(ERROR_HANDLER)) {\n-                fSchemaParser.setProperty(ERROR_HANDLER, currErrorHandler);\n+                fSchemaParser.setProperty(ERROR_HANDLER, (currErrorHandler != null) ? currErrorHandler : new DefaultErrorHandler());\n             }\n         } catch (XMLConfigurationException e) {\n         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/xerces2-j/raw/215db2e697a349eb9188e1220ed84513ddc5d043/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "d64a8d665eff9434158402e25a1e014cb2ff1837",
                "blob_url": "https://github.com/apache/xerces2-j/blob/215db2e697a349eb9188e1220ed84513ddc5d043/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "filename": "src/org/apache/xerces/impl/xs/traversers/XSDHandler.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/impl/xs/traversers/XSDHandler.java?ref=215db2e697a349eb9188e1220ed84513ddc5d043"
            }
        ],
        "bug_id": "xerces2-j_117",
        "parent": "https://github.com/apache/xerces2-j/commit/07a9de4fb3df10bd7f51c97e9b2d2ac9076e3379",
        "message": "Fixing Bug #28022:\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=28022\n\nWe keep a static pool of schema validators for use by DOM\nnormalizer. If a validator had been previously used and it had\nan error-handler registered and another document later gets\nthis validator but it offers no error-handler then XSDHandler\nwould throw a NPE when trying to set the error handler to\nnull on the schema parser.\n\nSet the DefaultErrorHandler on the schema parser to unregister\nthe old error handler (if there was one). Thanks to Neil Delima\nfor investigating this bug and verifying the fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@319872 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    },
    {
        "commit": "https://github.com/apache/xerces2-j/commit/bd937837a36b311a3acabe71f2fd4489784d2756",
        "file": [
            {
                "patch": "@@ -501,13 +501,15 @@ public int cloneNode(int nodeIndex, boolean deep) {\n         int cloneIndex = createNode((short)nodeType);\n         int cchunk = cloneIndex >> CHUNK_SHIFT;\n         int cindex = cloneIndex & CHUNK_MASK;\n-        fNodeName[cchunk][cindex] = getChunkValue(fNodeName, nchunk, nindex);\n-        fNodeValue[cchunk][cindex] = getChunkValue(fNodeValue, nchunk, nindex);\n-        fNodeURI[cchunk][cindex] = getChunkValue(fNodeURI, nchunk, nindex);\n+        setChunkValue(fNodeName, fNodeName[nchunk][nindex], cchunk, cindex);\n+        setChunkValue(fNodeValue, fNodeValue[nchunk][nindex], cchunk, cindex);\n+        setChunkValue(fNodeURI, fNodeURI[nchunk][nindex], cchunk, cindex);\n         int extraIndex = fNodeExtra[nchunk][nindex];\n         if (extraIndex != -1) {\n-            int cloneExtraIndex = cloneNode(extraIndex, false);\n-            fNodeExtra[cchunk][cindex] = cloneExtraIndex;\n+            if (nodeType != Node.ATTRIBUTE_NODE && nodeType != Node.TEXT_NODE) {\n+                extraIndex = cloneNode(extraIndex, false);\n+            }\n+            setChunkIndex(fNodeExtra, extraIndex, cchunk, cindex);\n         }\n \n         // clone and attach children\n@@ -1796,7 +1798,7 @@ private final int setChunkIndex(int data[][], int value,\n         data[chunk][index] = value;\n         return ovalue;\n     }\n-    private final String setChunkValue(Object data[][], String value,\n+    private final String setChunkValue(Object data[][], Object value,\n                                        int chunk, int index) {\n         if (value == null) {\n             return clearChunkValue(data, chunk, index);",
                "additions": 8,
                "raw_url": "https://github.com/apache/xerces2-j/raw/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "status": "modified",
                "changes": 14,
                "deletions": 6,
                "sha": "d583952ec44f117dee76f0e17c99eb2b3c2ce0fe",
                "blob_url": "https://github.com/apache/xerces2-j/blob/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "filename": "src/org/apache/xerces/dom/DeferredDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DeferredDocumentImpl.java?ref=bd937837a36b311a3acabe71f2fd4489784d2756"
            },
            {
                "patch": "@@ -185,48 +185,11 @@ protected void synchronizeChildren() {\n         needsSyncChildren(false);\n \n         // get children\n-        DocumentType doctype = ownerDocument.getDoctype();\n-        boolean found = false;\n-        if (doctype != null) {\n-\n-            // we don't want to generate any event for this so turn them off\n-            boolean orig = ownerDocument.getMutationEvents();\n-            ownerDocument.setMutationEvents(false);\n-\n-            NamedNodeMap entities = doctype.getEntities();\n-            if (entities != null) {\n-                Entity entity = (Entity)entities.getNamedItem(getNodeName());\n-                if (entity != null) {\n-\n-                    // we found the entity\n-                    found = true;\n-\n-                    // clone entity at this reference\n-                    boolean ro = isReadOnly();\n-                    isReadOnly(false);\n-                    Node child = entity.getFirstChild();\n-                    while (child != null) {\n-                        appendChild(child.cloneNode(true));\n-                        child = child.getNextSibling();\n-                    }\n-                    // set it back to readonly if what it was\n-                    if (ro) {\n-                        setReadOnly(true, true);\n-                    }\n-                }\n-            }\n-            // set mutation events flag back to its original value\n-            ownerDocument.setMutationEvents(orig);\n-        }\n-\n-        // if not found, create entity at this reference\n-        if (!found) {\n-            isReadOnly(false);\n-            DeferredDocumentImpl ownerDocument =\n-                (DeferredDocumentImpl) ownerDocument();\n-            ownerDocument.synchronizeChildren(this, fNodeIndex);\n-            setReadOnly(true, true);\n-        }\n+        isReadOnly(false);\n+        DeferredDocumentImpl ownerDocument =\n+            (DeferredDocumentImpl) ownerDocument();\n+        ownerDocument.synchronizeChildren(this, fNodeIndex);\n+        setReadOnly(true, true);\n \n     } // synchronizeChildren()\n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/xerces2-j/raw/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/dom/DeferredEntityReferenceImpl.java",
                "status": "modified",
                "changes": 47,
                "deletions": 42,
                "sha": "e01aaa62c4926df8d331936fa9c0523e4709210f",
                "blob_url": "https://github.com/apache/xerces2-j/blob/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/dom/DeferredEntityReferenceImpl.java",
                "filename": "src/org/apache/xerces/dom/DeferredEntityReferenceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/dom/DeferredEntityReferenceImpl.java?ref=bd937837a36b311a3acabe71f2fd4489784d2756"
            },
            {
                "patch": "@@ -908,8 +908,6 @@ public void internalEntityDecl(String name, XMLString text,\n             EntityImpl entity = (EntityImpl)entities.getNamedItem(name);\n             if (entity == null) {\n                 entity = (EntityImpl)fDocumentImpl.createEntity(name);\n-                Text textNode = fDocumentImpl.createTextNode(text.toString());\n-                entity.appendChild(textNode);\n                 entities.setNamedItem(entity);\n             }\n         }\n@@ -932,8 +930,6 @@ public void internalEntityDecl(String name, XMLString text,\n             if (!found) {\n                 int entityIndex = fDeferredDocumentImpl.createDeferredEntity(\n                                     name, null, null, null);\n-                int textIndex = fDeferredDocumentImpl.createDeferredTextNode(text.toString(), false);\n-                fDeferredDocumentImpl.appendChild(entityIndex, textIndex);\n                 fDeferredDocumentImpl.appendChild(fDocumentTypeIndex, entityIndex);\n             }\n         }",
                "additions": 0,
                "raw_url": "https://github.com/apache/xerces2-j/raw/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "status": "modified",
                "changes": 4,
                "deletions": 4,
                "sha": "129ead14bb1f4d2ec3a3d9a53f68d87c4fe07b93",
                "blob_url": "https://github.com/apache/xerces2-j/blob/bd937837a36b311a3acabe71f2fd4489784d2756/src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "filename": "src/org/apache/xerces/parsers/AbstractDOMParser.java",
                "contents_url": "https://api.github.com/repos/apache/xerces2-j/contents/src/org/apache/xerces/parsers/AbstractDOMParser.java?ref=bd937837a36b311a3acabe71f2fd4489784d2756"
            }
        ],
        "bug_id": "xerces2-j_118",
        "parent": "https://github.com/apache/xerces2-j/commit/108e8a02859386d537d41eea73cbdd77d9e800f4",
        "message": "Fixed two problems:\n1) Entity reference and entity content. Previously, I was storing\n   the literal value of declared internal entities in the entity\n   node under the doctype. Then, when fluffing up the entity ref\n   children, the literal value would be copied over the entity ref\n   children. Oops!\n2) Once I fixed the first bug, then I noticed that I had a ref\n   counting problem in my cloneNode(int,boolean) method. As the\n   diff shows, you should *not* try to circumvent the setter method\n   for the parallel arrays. Otherwise, the reference counting will\n   not work correctly and eventually you'll get a NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xerces/java/trunk@317896 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "xerces2-j"
    }
]