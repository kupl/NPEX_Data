{
    "sling-org-apache-sling-pipes_674819d": {
        "repo": "sling-org-apache-sling-pipes",
        "message": "SLING-5431 - PipeBinding NPE when evaluating null expression\n\nSubmitted-By: Nicolas Peltier\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1724841 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/sling-org-apache-sling-pipes/commit/674819dddcb7e5e8282264b4b20e12b3da0ec32d",
        "parent": "https://github.com/apache/sling-org-apache-sling-pipes/commit/81059025b63218e11c216677988f123902ed02bc",
        "bug_id": "sling-org-apache-sling-pipes_674819d",
        "file": [
            {
                "sha": "0331d485de729c3900ad4954caaae43828b92db0",
                "filename": "src/main/java/org/apache/sling/pipes/PipeBindings.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-pipes/blob/674819dddcb7e5e8282264b4b20e12b3da0ec32d/src/main/java/org/apache/sling/pipes/PipeBindings.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-pipes/raw/674819dddcb7e5e8282264b4b20e12b3da0ec32d/src/main/java/org/apache/sling/pipes/PipeBindings.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-pipes/contents/src/main/java/org/apache/sling/pipes/PipeBindings.java?ref=674819dddcb7e5e8282264b4b20e12b3da0ec32d",
                "patch": "@@ -227,7 +227,7 @@ public String instantiateExpression(String expr){\n     public Object instantiateObject(String expr){\n         try {\n             Object result = evaluate(expr);\n-            if (! result.getClass().getName().startsWith(\"java.lang.\")) {\n+            if (result != null && ! result.getClass().getName().startsWith(\"java.lang.\")) {\n                 //special case of the date in which case jdk.nashorn.api.scripting.ScriptObjectMirror will\n                 //be returned\n                 JsDate jsDate = ((Invocable) engine).getInterface(result, JsDate.class);",
                "deletions": 1
            },
            {
                "sha": "8e548f6edeb60de1337d2d47fa72a9d89b1643ec",
                "filename": "src/test/java/org/apache/sling/pipes/PipeBindingsTest.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-pipes/blob/674819dddcb7e5e8282264b4b20e12b3da0ec32d/src/test/java/org/apache/sling/pipes/PipeBindingsTest.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-pipes/raw/674819dddcb7e5e8282264b4b20e12b3da0ec32d/src/test/java/org/apache/sling/pipes/PipeBindingsTest.java",
                "status": "modified",
                "changes": 24,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-pipes/contents/src/test/java/org/apache/sling/pipes/PipeBindingsTest.java?ref=674819dddcb7e5e8282264b4b20e12b3da0ec32d",
                "patch": "@@ -41,19 +41,22 @@ public void setup() {\n         context.load().json(\"/container.json\", PATH_PIPE);\n     }\n \n+    private PipeBindings getDummyTreeBinding(){\n+        Resource resource = context.resourceResolver().getResource(PATH_PIPE + \"/\" + ContainerPipeTest.NN_DUMMYTREE);\n+        return new PipeBindings(resource);\n+    }\n+\n     @Test\n     public void testEvaluateSimpleString() throws ScriptException {\n-        Resource resource = context.resourceResolver().getResource(PATH_PIPE + \"/\" + ContainerPipeTest.NN_DUMMYTREE);\n-        PipeBindings bindings = new PipeBindings(resource);\n+        PipeBindings bindings = getDummyTreeBinding();\n         String simple = \"simple string\";\n         String evaluated = (String)bindings.evaluate(simple);\n         assertEquals(\"evaluated should be the same than input\", evaluated, simple);\n     }\n \n     @Test\n     public void computeEcma5Expression() {\n-        Resource resource = context.resourceResolver().getResource(PATH_PIPE + \"/\" + ContainerPipeTest.NN_DUMMYTREE);\n-        PipeBindings bindings = new PipeBindings(resource);\n+        PipeBindings bindings = getDummyTreeBinding();\n         Map<String,String> expressions = new HashMap<>();\n         expressions.put(\"blah ${blah} blah\", \"'blah ' + blah + ' blah'\");\n         expressions.put(\"${blah}\", \"blah\");\n@@ -68,8 +71,7 @@ public void computeEcma5Expression() {\n \n     @Test\n     public void testInstantiateExpression() throws Exception {\n-        Resource resource = context.resourceResolver().getResource(PATH_PIPE + \"/\" + ContainerPipeTest.NN_DUMMYTREE);\n-        PipeBindings bindings = new PipeBindings(resource);\n+        PipeBindings bindings = getDummyTreeBinding();\n         Map<String, String> testMap = new HashMap<>();\n         testMap.put(\"a\", \"apricots\");\n         testMap.put(\"b\", \"bananas\");\n@@ -78,10 +80,16 @@ public void testInstantiateExpression() throws Exception {\n         assertEquals(\"expression should be correctly instantiated\", \"apricots and bananas\", newExpression);\n     }\n \n+    @Test\n+    public void testEvaluateNull() throws Exception {\n+        PipeBindings bindings = getDummyTreeBinding();\n+        assertNull(\"${null}\u00a0object should be instantiated as null\", bindings.instantiateObject(\"${null}\"));\n+        assertNull(\"${null}\u00a0expression should be instantiated as null\", bindings.instantiateExpression(\"${null}\"));\n+    }\n+\n     @Test\n     public void testInstantiateObject() throws Exception {\n-        Resource resource = context.resourceResolver().getResource(PATH_PIPE + \"/\" + ContainerPipeTest.NN_DUMMYTREE);\n-        PipeBindings bindings = new PipeBindings(resource);\n+        PipeBindings bindings = getDummyTreeBinding();\n         Map<String, String> testMap = new HashMap<>();\n         testMap.put(\"a\", \"apricots\");\n         testMap.put(\"b\", \"bananas\");",
                "deletions": 8
            }
        ],
        "patched_files": [
            "PipeBindings.java"
        ],
        "unit_tests": [
            "PipeBindingsTest.java"
        ]
    }
}