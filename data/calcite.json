{
    "calcite_1580bd0": {
        "bug_id": "calcite_1580bd0",
        "commit": "https://github.com/apache/calcite/commit/1580bd0fec62d836c9870edc339b0ab99d909cad",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/calcite/blob/1580bd0fec62d836c9870edc339b0ab99d909cad/core/src/main/java/org/apache/calcite/tools/Frameworks.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/calcite/contents/core/src/main/java/org/apache/calcite/tools/Frameworks.java?ref=1580bd0fec62d836c9870edc339b0ab99d909cad",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/calcite/tools/Frameworks.java",
                "patch": "@@ -33,6 +33,7 @@\n import org.apache.calcite.sql.parser.SqlParser;\n import org.apache.calcite.sql2rel.SqlRexConvertletTable;\n import org.apache.calcite.sql2rel.StandardConvertletTable;\n+import org.apache.calcite.util.Util;\n \n import com.google.common.base.Preconditions;\n import com.google.common.collect.ImmutableList;\n@@ -107,7 +108,8 @@ public abstract R apply(RelOptCluster cluster, RelOptSchema relOptSchema,\n           public R apply(RelOptCluster cluster, RelOptSchema relOptSchema,\n               SchemaPlus rootSchema, CalciteServerStatement statement) {\n             final CalciteSchema schema =\n-                CalciteSchema.from(config.getDefaultSchema());\n+                CalciteSchema.from(\n+                    Util.first(config.getDefaultSchema(), rootSchema));\n             return action.apply(cluster, relOptSchema, schema.root().plus());\n           }\n         });",
                "raw_url": "https://github.com/apache/calcite/raw/1580bd0fec62d836c9870edc339b0ab99d909cad/core/src/main/java/org/apache/calcite/tools/Frameworks.java",
                "sha": "f3ebe1212b0ed5517660f8ba4f71061157956668",
                "status": "modified"
            }
        ],
        "message": "[CALCITE-821] Frameworks gives NPE when FrameworkConfig has no default schema",
        "parent": "https://github.com/apache/calcite/commit/2376ae4a876b421ee19c2b2a05a6bd1d306e442b",
        "repo": "calcite",
        "unit_tests": [
            "FrameworksTest.java"
        ]
    },
    "calcite_7341708": {
        "bug_id": "calcite_7341708",
        "commit": "https://github.com/apache/calcite/commit/73417080f317fb925cf3978d40af6ba97129e3c8",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/calcite/blob/73417080f317fb925cf3978d40af6ba97129e3c8/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/calcite/contents/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java?ref=73417080f317fb925cf3978d40af6ba97129e3c8",
                "deletions": 0,
                "filename": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "patch": "@@ -877,6 +877,10 @@ public RelSubset ensureRegistered(RelNode rel, RelNode equivRel) {\n    * Checks internal consistency.\n    */\n   protected boolean isValid(Litmus litmus) {\n+    if (this.getRoot() == null) {\n+      return true;\n+    }\n+\n     RelMetadataQuery metaQuery = this.getRoot().getCluster().getMetadataQuerySupplier().get();\n     for (RelSet set : allSets) {\n       if (set.equivalentSet != null) {",
                "raw_url": "https://github.com/apache/calcite/raw/73417080f317fb925cf3978d40af6ba97129e3c8/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "sha": "c592290b5c5478814c8248895dd030d9d90eae6a",
                "status": "modified"
            }
        ],
        "message": "[CALCITE-3503] NPE at VolcanoPlanner#isValid when DEBUG is enabled (Xiening Dai)\n\nWhen planner root is null, we should skip the validation since the memo is\nempty at that moment.",
        "parent": "https://github.com/apache/calcite/commit/472523c4e0eb694f62c1da974d256553e2f33ce2",
        "repo": "calcite",
        "unit_tests": [
            "VolcanoPlannerTest.java"
        ]
    },
    "calcite_a2faf47": {
        "bug_id": "calcite_a2faf47",
        "commit": "https://github.com/apache/calcite/commit/a2faf47b0f2bc98482a39ff51c23f7b92c118fee",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/calcite/blob/a2faf47b0f2bc98482a39ff51c23f7b92c118fee/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/calcite/contents/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java?ref=a2faf47b0f2bc98482a39ff51c23f7b92c118fee",
                "deletions": 3,
                "filename": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "patch": "@@ -888,7 +888,6 @@ public RelSubset ensureRegistered(RelNode rel, RelNode equivRel) {\n    * Checks internal consistency.\n    */\n   protected void validate() {\n-    final RelMetadataQuery mq = root.getCluster().getMetadataQuery();\n     for (RelSet set : allSets) {\n       if (set.equivalentSet != null) {\n         throw new AssertionError(\n@@ -902,7 +901,7 @@ protected void validate() {\n               + \"] is in wrong set [\" + set + \"]\");\n         }\n         for (RelNode rel : subset.getRels()) {\n-          RelOptCost relCost = getCost(rel, mq);\n+          RelOptCost relCost = getCost(rel, rel.getCluster().getMetadataQuery());\n           if (relCost.isLt(subset.bestCost)) {\n             throw new AssertionError(\n                 \"rel [\" + rel.getDescription()\n@@ -1169,7 +1168,6 @@ public void setImportance(RelNode rel, double importance) {\n    * @see #normalizePlan(String)\n    */\n   public void dump(PrintWriter pw) {\n-    final RelMetadataQuery mq = root.getCluster().getMetadataQuery();\n     pw.println(\"Root: \" + root.getDescription());\n     pw.println(\"Original rel:\");\n     pw.println(originalRootString);\n@@ -1222,6 +1220,7 @@ public int compare(\n           if (importance != null) {\n             pw.print(\", importance=\" + importance);\n           }\n+          RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n           pw.print(\", rowcount=\" + mq.getRowCount(rel));\n           pw.println(\", cumulative cost=\" + getCost(rel, mq));\n         }",
                "raw_url": "https://github.com/apache/calcite/raw/a2faf47b0f2bc98482a39ff51c23f7b92c118fee/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java",
                "sha": "f364704ca6af9efb67e8aab1805455b9a6036d35",
                "status": "modified"
            }
        ],
        "message": "[CALCITE-1859] NPE in validate method of VolcanoPlanner\n\nClose apache/calcite#483",
        "parent": "https://github.com/apache/calcite/commit/cdb30028ae429c3b6513c09627bceb3da5ac720a",
        "repo": "calcite",
        "unit_tests": [
            "VolcanoPlannerTest.java"
        ]
    }
}