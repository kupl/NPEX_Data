[
    {
        "repo": "httpcomponents-core",
        "commit": "https://github.com/apache/httpcomponents-core/commit/30c2b1251da8c3315f591415090eeeb43c4d62eb",
        "bug_id": "httpcomponents-core_30c2b12",
        "message": "HTTPCORE-228: Fixed NPE in AsyncNHttpServiceHandler caused by entity enclosing requests if no matching request handler can be found\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk@959930 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/httpcomponents-core/commit/810283941c51ad412c526cbc19d536a049b6f6a1",
        "patched_files": [
            "RELEASE_NOTES.txt",
            "AsyncNHttpServiceHandler.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/30c2b1251da8c3315f591415090eeeb43c4d62eb/RELEASE_NOTES.txt",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/RELEASE_NOTES.txt?ref=30c2b1251da8c3315f591415090eeeb43c4d62eb",
                "filename": "RELEASE_NOTES.txt",
                "deletions": 0,
                "sha": "16f5c1f6b7100b70409b66c680542fd0b0dacaf9",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/30c2b1251da8c3315f591415090eeeb43c4d62eb/RELEASE_NOTES.txt",
                "patch": "@@ -1,5 +1,9 @@\n Changes since 4.1-BETA1 \n \n+* [HTTPCORE-228] Fixed NPE in AsyncNHttpServiceHandler caused by entity enclosing requests\n+  if no matching request handler can be found.  \n+  Contributed by Oleg Kalnichevski <olegk at apache.org>\n+\n * [HTTPCORE-227] Fixed incorrect request / response count by non-blocking connections.\n   Contributed by Harold Lee <harold at hotelling.net>\n ",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/30c2b1251da8c3315f591415090eeeb43c4d62eb/httpcore-nio/src/main/java/org/apache/http/nio/protocol/AsyncNHttpServiceHandler.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore-nio/src/main/java/org/apache/http/nio/protocol/AsyncNHttpServiceHandler.java?ref=30c2b1251da8c3315f591415090eeeb43c4d62eb",
                "filename": "httpcore-nio/src/main/java/org/apache/http/nio/protocol/AsyncNHttpServiceHandler.java",
                "deletions": 11,
                "sha": "c45c83d115450327d2650f4db1fec2d803b42567",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/30c2b1251da8c3315f591415090eeeb43c4d62eb/httpcore-nio/src/main/java/org/apache/http/nio/protocol/AsyncNHttpServiceHandler.java",
                "patch": "@@ -173,7 +173,8 @@ public void requestReceived(final NHttpServerConnection conn) {\n         try {\n \n             if (request instanceof HttpEntityEnclosingRequest) {\n-                if (((HttpEntityEnclosingRequest) request).expectContinue()) {\n+                HttpEntityEnclosingRequest entityRequest = (HttpEntityEnclosingRequest) request;\n+                if (entityRequest.expectContinue()) {\n                     response = this.responseFactory.newHttpResponse(\n                             ver, HttpStatus.SC_CONTINUE, context);\n                     response.setParams(\n@@ -203,20 +204,19 @@ public void requestReceived(final NHttpServerConnection conn) {\n                     }\n                 }\n                 // Request content is expected.\n-                HttpEntity entity = ((HttpEntityEnclosingRequest) request).getEntity();\n+                ConsumingNHttpEntity consumingEntity = null;\n \n                 // Lookup request handler for this request\n                 if (requestHandler != null) {\n-                    ConsumingNHttpEntity consumingEntity = requestHandler.entityRequest(\n-                            (HttpEntityEnclosingRequest) request, context);\n-                    if (consumingEntity == null) {\n-                        consumingEntity = new ConsumingNHttpEntityTemplate(\n-                                entity,\n-                                new SkipContentListener(this.allocator));\n-                    }\n-                    ((HttpEntityEnclosingRequest) request).setEntity(consumingEntity);\n-                    connState.setConsumingEntity(consumingEntity);\n+                    consumingEntity = requestHandler.entityRequest(entityRequest, context);\n+                }\n+                if (consumingEntity == null) {\n+                    consumingEntity = new ConsumingNHttpEntityTemplate(\n+                            entityRequest.getEntity(),\n+                            new SkipContentListener(this.allocator));\n                 }\n+                entityRequest.setEntity(consumingEntity);\n+                connState.setConsumingEntity(consumingEntity);\n \n             } else {\n                 // No request content is expected.",
                "changes": 22
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/30c2b1251da8c3315f591415090eeeb43c4d62eb/httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestAsyncNHttpHandlers.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestAsyncNHttpHandlers.java?ref=30c2b1251da8c3315f591415090eeeb43c4d62eb",
                "filename": "httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestAsyncNHttpHandlers.java",
                "deletions": 11,
                "sha": "124436052eeeea6490460219a2414d42b5dc3d18",
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/30c2b1251da8c3315f591415090eeeb43c4d62eb/httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestAsyncNHttpHandlers.java",
                "patch": "@@ -1009,18 +1009,14 @@ protected HttpRequest generateRequest(Job testjob) {\n         }\n     }\n \n-    /**\n-     * This test case executes a series of simple (non-pipelined) POST requests\n-     * with zero-length entities on the client side.\n-     */\n-    public void testHttpPostWithZeroLengthEntities() throws Exception {\n+    public void testNoRequestHandler() throws Exception {\n         NHttpRequestExecutionHandler requestExecutionHandler = new RequestExecutionHandler() {\n \n             @Override\n             protected HttpRequest generateRequest(Job testjob) {\n                 String s = testjob.getPattern() + \"x\" + testjob.getCount();\n                 HttpEntityEnclosingRequest r = new BasicHttpEntityEnclosingRequest(\"POST\", s);\n-                NByteArrayEntity entity = new NByteArrayEntity(new byte[] {} );\n+                NByteArrayEntity entity = new NByteArrayEntity(new byte[] {1,2,3,4,5} );\n                 entity.setChunked(false);\n                 r.setEntity(entity);\n                 return r;\n@@ -1029,8 +1025,7 @@ protected HttpRequest generateRequest(Job testjob) {\n         };\n \n         int connNo = 3;\n-        int reqNo = 20;\n-        Job[] jobs = new Job[connNo * reqNo];\n+        Job[] jobs = new Job[connNo];\n         for (int i = 0; i < jobs.length; i++) {\n             jobs[i] = new Job();\n         }\n@@ -1053,7 +1048,7 @@ protected HttpRequest generateRequest(Job testjob) {\n                 this.server.getParams());\n \n         serviceHandler.setHandlerResolver(\n-                new SimpleNHttpRequestHandlerResolver(new RequestHandler()));\n+                new SimpleNHttpRequestHandlerResolver(null));\n         serviceHandler.setEventListener(\n                 new SimpleEventListener());\n \n@@ -1104,8 +1099,7 @@ protected HttpRequest generateRequest(Job testjob) {\n             Job testjob = jobs[i];\n             testjob.waitFor();\n             if (testjob.isSuccessful()) {\n-                assertEquals(HttpStatus.SC_OK, testjob.getStatusCode());\n-                assertEquals(\"\", testjob.getResult());\n+                assertEquals(HttpStatus.SC_NOT_IMPLEMENTED, testjob.getStatusCode());\n             } else {\n                 fail(testjob.getFailureMessage());\n             }",
                "changes": 16
            }
        ],
        "unit_tests": [
            "TestAsyncNHttpHandlers.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestAsyncNHttpHandlers.java",
        "buggy_files": [
            "RELEASE_NOTES.txt",
            "httpcore-nio/src/main/java/org/apache/http/nio/protocol/AsyncNHttpServiceHandler.java"
        ],
        "fixed": true
    }
]