[
    {
        "repo": "maven-2",
        "message": "[MNG-541]. Fix NullPointerException when mojo doesn't have parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@202520 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/0713fa12ddd173d4029c3ebc4ce1b5f78095fa8b",
        "parent": "https://github.com/apache/maven-2/commit/1388e40fd30a325e1ff35a2a825ef7c66a42b02f",
        "bug_id": "maven-2_1",
        "file": [
            {
                "sha": "1172def18261f21f0b962f6d8fd1795afcbd803a",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/0713fa12ddd173d4029c3ebc4ce1b5f78095fa8b/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/0713fa12ddd173d4029c3ebc4ce1b5f78095fa8b/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=0713fa12ddd173d4029c3ebc4ce1b5f78095fa8b",
                "patch": "@@ -671,6 +671,11 @@ private void checkRequiredParameters( MojoDescriptor goal, PlexusConfiguration c\n \n         List parameters = goal.getParameters();\n \n+        if ( parameters == null )\n+        {\n+            return;\n+        }\n+\n         List invalidParameters = new ArrayList();\n \n         for ( int i = 0; i < parameters.size(); i++ )",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-541]. Fix NullPointerException when mojo doesn't have parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@202502 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/b44ec86d40f180a27ab65c251ee70728f2d3eafe",
        "parent": "https://github.com/apache/maven-2/commit/504e281d0ed2f163eb7a476b4701ea96f2095620",
        "bug_id": "maven-2_2",
        "file": [
            {
                "sha": "2a78b1f67052cc78c30a8d838cf672c2c4dfe560",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/b44ec86d40f180a27ab65c251ee70728f2d3eafe/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/b44ec86d40f180a27ab65c251ee70728f2d3eafe/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=b44ec86d40f180a27ab65c251ee70728f2d3eafe",
                "patch": "@@ -770,6 +770,11 @@ private void validatePomConfiguration( MojoDescriptor goal, PlexusConfiguration\n     {\n         List parameters = goal.getParameters();\n \n+        if ( parameters == null )\n+        {\n+            return;\n+        }\n+\n         for ( int i = 0; i < parameters.size(); i++ )\n         {\n             Parameter parameter = (Parameter) parameters.get( i );",
                "deletions": 0
            },
            {
                "sha": "0f0af899e01fe52f4ab22c1788c4a688fb1c4c0f",
                "filename": "maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/MojoDescriptor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/b44ec86d40f180a27ab65c251ee70728f2d3eafe/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/MojoDescriptor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/b44ec86d40f180a27ab65c251ee70728f2d3eafe/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/MojoDescriptor.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/MojoDescriptor.java?ref=b44ec86d40f180a27ab65c251ee70728f2d3eafe",
                "patch": "@@ -149,11 +149,14 @@ public Map getParameterMap()\n         {\n             parameterMap = new HashMap();\n \n-            for ( Iterator iterator = parameters.iterator(); iterator.hasNext(); )\n+            if ( parameters == null )\n             {\n-                Parameter pd = (Parameter) iterator.next();\n+                for ( Iterator iterator = parameters.iterator(); iterator.hasNext(); )\n+                {\n+                    Parameter pd = (Parameter) iterator.next();\n \n-                parameterMap.put( pd.getName(), pd );\n+                    parameterMap.put( pd.getName(), pd );\n+                }\n             }\n         }\n ",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Check if plugin contains some mojo, and send an exception instead of NullPointerException if it isn't the case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@179369 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/7bba85198e2140dd1287e27fdeed487a48d49d8d",
        "parent": "https://github.com/apache/maven-2/commit/4c582afdbff8a6a2be416a222cf8edfcc3c5a986",
        "bug_id": "maven-2_3",
        "file": [
            {
                "sha": "8395fb50763fc85af2ebc54928fd2ef49e631577",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/7bba85198e2140dd1287e27fdeed487a48d49d8d/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/7bba85198e2140dd1287e27fdeed487a48d49d8d/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 20,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=7bba85198e2140dd1287e27fdeed487a48d49d8d",
                "patch": "@@ -417,15 +417,25 @@ else if ( numTokens == 4 )\n \n         MojoDescriptor mojoDescriptor = null;\n \n-        // TODO: should be able to create a Map from this\n-        for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext() && mojoDescriptor == null; )\n+        if ( pluginDescriptor.getMojos() != null )\n         {\n-            MojoDescriptor desc = (MojoDescriptor) i.next();\n-            if ( desc.getGoal().equals( goal ) )\n+            // TODO: should be able to create a Map from this\n+            for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext() && mojoDescriptor == null; )\n             {\n-                mojoDescriptor = desc;\n+                MojoDescriptor desc = (MojoDescriptor) i.next();\n+                if ( desc.getGoal().equals( goal ) )\n+                {\n+                    mojoDescriptor = desc;\n+                }\n             }\n         }\n+        else\n+        {\n+            throw new LifecycleExecutionException( \"The plugin \" + pluginDescriptor.getGroupId() + \":\" + \n+                                                   pluginDescriptor.getArtifactId() + \":\" +\n+                                                   pluginDescriptor.getVersion() +\n+                                                   \" doesn't contain any mojo. Check if it isn't corrupted.\" );\n+        }\n \n         if ( mojoDescriptor == null )\n         {",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fix NullPointerException if build.properties file doesn't exist in user.home\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162536 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/15209dd9f135e0fb5bad50f0ac265c2d46191840",
        "parent": "https://github.com/apache/maven-2/commit/02e654b28f2a46e8fc0653105291e54e33fcddda",
        "bug_id": "maven-2_4",
        "file": [
            {
                "sha": "fa6db11bf452ecd3b16294f02b8e81622e306f00",
                "filename": "maven-mboot/src/main/Bootstrapper.java",
                "blob_url": "https://github.com/apache/maven-2/blob/15209dd9f135e0fb5bad50f0ac265c2d46191840/maven-mboot/src/main/Bootstrapper.java",
                "raw_url": "https://github.com/apache/maven-2/raw/15209dd9f135e0fb5bad50f0ac265c2d46191840/maven-mboot/src/main/Bootstrapper.java",
                "status": "modified",
                "changes": 12,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-mboot/src/main/Bootstrapper.java?ref=15209dd9f135e0fb5bad50f0ac265c2d46191840",
                "patch": "@@ -54,7 +54,7 @@ public void execute( String[] args )\n         String basedir = args[0];\n \n         Properties properties = loadProperties( new File( System.getProperty( \"user.home\" ), \"build.properties\" ) );\n-\n+        \n         baseUrl = properties.getProperty( \"maven.repo.remote\" );\n \n         if ( baseUrl == null )\n@@ -268,21 +268,19 @@ private Properties loadProperties( File file )\n             // ignore\n         }\n \n-        return null;\n+        return new Properties();\n     }\n \n     private static Properties loadProperties( InputStream is )\n     {\n+        Properties properties = new Properties();\n+        \n         try\n         {\n-            Properties properties = new Properties();\n-\n             if ( is != null )\n             {\n                 properties.load( is );\n             }\n-\n-            return properties;\n         }\n         catch ( IOException e )\n         {\n@@ -303,7 +301,7 @@ private static Properties loadProperties( InputStream is )\n             }\n         }\n \n-        return null;\n+        return properties;\n     }\n \n     static class BootstrapPomParser",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fixing NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@328898 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/51f23d93d9234ba0c5c5c95b0724494c006e6c09",
        "parent": "https://github.com/apache/maven-2/commit/58e96169a60ad7a720abf6efe8e522c98bf058d8",
        "bug_id": "maven-2_5",
        "file": [
            {
                "sha": "d01bb34be95a01330aba7bd4f5b5024f6a218d80",
                "filename": "maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "blob_url": "https://github.com/apache/maven-2/blob/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "raw_url": "https://github.com/apache/maven-2/raw/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "status": "modified",
                "changes": 11,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java?ref=51f23d93d9234ba0c5c5c95b0724494c006e6c09",
                "patch": "@@ -175,11 +175,14 @@ private void addEdgeWithParentCheck( Map projectMap, String extensionId, MavenPr\n         project.addProjectReference( extProject );\n \n         MavenProject extParent = extProject.getParent();\n-        String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n-        // Don't add edge from parent to extension if a reverse edge already exists\n-        if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+        if ( extParent != null )\n         {\n-            dag.addEdge( id, extensionId );\n+            String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n+            // Don't add edge from parent to extension if a reverse edge already exists\n+            if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+            {\n+                dag.addEdge( id, extensionId );\n+            }\n         }\n     }\n ",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291582 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/883e9e53dba6930e79ab1157b561a4984205f0d4",
        "parent": "https://github.com/apache/maven-2/commit/e5070aa9b253be41fb9b4757d96b3431eeea58bf",
        "bug_id": "maven-2_6",
        "file": [
            {
                "sha": "bb9f4d8c9c99948ab540362a88e0af8b126d2a74",
                "filename": "maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "blob_url": "https://github.com/apache/maven-2/blob/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "raw_url": "https://github.com/apache/maven-2/raw/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java?ref=883e9e53dba6930e79ab1157b561a4984205f0d4",
                "patch": "@@ -338,7 +338,7 @@ public List retrieveAvailableVersions( Artifact artifact, ArtifactRepository loc\n \n         List versions;\n         Metadata repoMetadata = metadata.getMetadata();\n-        if ( repoMetadata != null )\n+        if ( repoMetadata != null && repoMetadata.getVersioning() != null )\n         {\n             List metadataVersions = repoMetadata.getVersioning().getVersions();\n             versions = new ArrayList( metadataVersions.size() );",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191800 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/677a0dd7d5767193b378d2446eabeeb592e64c9e",
        "parent": "https://github.com/apache/maven-2/commit/c3d0ba0846953cc964faa8f0f32be4dd298dafe1",
        "bug_id": "maven-2_7",
        "file": [
            {
                "sha": "c5984dc7786c6b7aa0046314357632a3dc2f35d4",
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "blob_url": "https://github.com/apache/maven-2/blob/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "raw_url": "https://github.com/apache/maven-2/raw/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "status": "modified",
                "changes": 20,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=677a0dd7d5767193b378d2446eabeeb592e64c9e",
                "patch": "@@ -159,15 +159,23 @@ public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepos\n \n     private Map createManagedVersionMap( DependencyManagement dependencyManagement )\n     {\n-        Map map = new HashMap();\n-        for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+        Map map;\n+        if ( dependencyManagement != null && dependencyManagement.getDependencies() != null )\n         {\n-            Dependency d = (Dependency) i.next();\n+            map = new HashMap();\n+            for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+            {\n+                Dependency d = (Dependency) i.next();\n \n-            Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n-                                                                d.getScope(), d.getType(), null );\n+                Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n+                                                                    d.getScope(), d.getType(), null );\n \n-            map.put( d.getManagementKey(), artifact );\n+                map.put( d.getManagementKey(), artifact );\n+            }\n+        }\n+        else\n+        {\n+            map = Collections.EMPTY_MAP;\n         }\n         return map;\n     }",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169384 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/eda19653d84416ebddc5aa365fea60e7c60d007e",
        "parent": "https://github.com/apache/maven-2/commit/b15610d406f1dba7f6a63f5327f4a6a4e1591e74",
        "bug_id": "maven-2_8",
        "file": [
            {
                "sha": "e448d52c754e7c9cb52d88189dfd3143054af794",
                "filename": "sandbox/maven-reports/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "blob_url": "https://github.com/apache/maven-2/blob/eda19653d84416ebddc5aa365fea60e7c60d007e/sandbox/maven-reports/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "raw_url": "https://github.com/apache/maven-2/raw/eda19653d84416ebddc5aa365fea60e7c60d007e/sandbox/maven-reports/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/sandbox/maven-reports/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java?ref=eda19653d84416ebddc5aa365fea60e7c60d007e",
                "patch": "@@ -127,6 +127,7 @@ public void execute()\n                 // TODO: lazily call beginFile in case there are no rules\r\n \r\n                 reportSink.beginFile( file );\r\n+                ruleContext.setSourceCodeFilename( file.getAbsolutePath() );\r\n                 pmd.processFile( fileReader, ruleSet, ruleContext );\r\n                 reportSink.endFile( file );\r\n             }\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fixing NPE when version is null on DefaultArtifact.toString() without removing the NPE throw when the public API getBaseVersion() is called and version is null. Merged from RevId 570473 in artifact trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@570476 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
        "parent": "https://github.com/apache/maven-2/commit/c43a910ac9408139bad6f41bb90e4ad6f3ad2354",
        "bug_id": "maven-2_9",
        "file": [
            {
                "sha": "c0e5bca4f1292465f4017b5aa044fa513b4ac607",
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "blob_url": "https://github.com/apache/maven-2/blob/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "raw_url": "https://github.com/apache/maven-2/raw/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "status": "modified",
                "changes": 38,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
                "patch": "@@ -101,7 +101,7 @@ public DefaultArtifact( String groupId, String artifactId, VersionRange versionR\n         this.artifactId = artifactId;\n \n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n \n         this.artifactHandler = artifactHandler;\n@@ -142,7 +142,7 @@ private void validateIdentity()\n                                                   \"The type cannot be empty.\" );\n         }\n \n-        if ( version == null && versionRange == null )\n+        if ( ( version == null ) && ( versionRange == null ) )\n         {\n             throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                   \"The version cannot be empty.\" );\n@@ -151,7 +151,7 @@ private void validateIdentity()\n \n     private boolean empty( String value )\n     {\n-        return value == null || value.trim().length() < 1;\n+        return ( value == null ) || ( value.trim().length() < 1 );\n     }\n \n     public String getClassifier()\n@@ -187,8 +187,8 @@ public String getVersion()\n     public void setVersion( String version )\n     {\n         this.version = version;\n-        this.setBaseVersionInternal( version );\n-        this.versionRange = null;\n+        setBaseVersionInternal( version );\n+        versionRange = null;\n     }\n \n     public String getType()\n@@ -283,9 +283,9 @@ public String toString()\n         }\n         appendArtifactTypeClassifierString( sb );\n         sb.append( \":\" );\n-        if ( getBaseVersion() != null )\n+        if ( getBaseVersionInternal() != null )\n         {\n-            sb.append( getBaseVersion() );\n+            sb.append( getBaseVersionInternal() );\n         }\n         else\n         {\n@@ -366,11 +366,21 @@ public String getBaseVersion()\n         return baseVersion;\n     }\n \n+    protected String getBaseVersionInternal()\n+    {\n+        if ( ( baseVersion == null ) && ( version != null ) )\n+        {\n+            setBaseVersionInternal( version );\n+        }\n+\n+        return baseVersion;\n+    }\n+\n     public void setBaseVersion( String baseVersion )\n     {\n         setBaseVersionInternal( baseVersion );\n     }\n-    \n+\n     protected void setBaseVersionInternal( String baseVersion )\n     {\n         Matcher m = VERSION_FILE_PATTERN.matcher( baseVersion );\n@@ -449,7 +459,7 @@ public ArtifactFilter getDependencyFilter()\n \n     public void setDependencyFilter( ArtifactFilter artifactFilter )\n     {\n-        this.dependencyFilter = artifactFilter;\n+        dependencyFilter = artifactFilter;\n     }\n \n     public ArtifactHandler getArtifactHandler()\n@@ -488,20 +498,20 @@ public VersionRange getVersionRange()\n     public void setVersionRange( VersionRange versionRange )\n     {\n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n     }\n-    \n+\n     private void selectVersionFromNewRangeIfAvailable()\n     {\n-        if ( versionRange != null && versionRange.getRecommendedVersion() != null )\n+        if ( ( versionRange != null ) && ( versionRange.getRecommendedVersion() != null ) )\n         {\n             selectVersion( versionRange.getRecommendedVersion().toString() );\n         }\n         else\n         {\n-            this.version = null;\n-            this.baseVersion = null;\n+            version = null;\n+            baseVersion = null;\n         }\n     }\n ",
                "deletions": 14
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o fixed potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@633053 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/48f1133974c4d05ff958d097f9f9607d5136ddd7",
        "parent": "https://github.com/apache/maven-2/commit/288a35989545921074b4d5ad34d9214141211bfd",
        "bug_id": "maven-2_10",
        "file": [
            {
                "sha": "70fd6c7f5392febb84e7143c12bfa464c5caffac",
                "filename": "maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "blob_url": "https://github.com/apache/maven-2/blob/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "raw_url": "https://github.com/apache/maven-2/raw/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "status": "modified",
                "changes": 18,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java?ref=48f1133974c4d05ff958d097f9f9607d5136ddd7",
                "patch": "@@ -536,16 +536,24 @@ private static void showVersion()\n             Properties properties = new Properties();\n             resourceAsStream = MavenCli.class.getClassLoader().getResourceAsStream(\n                 \"META-INF/maven/org.apache.maven/maven-core/pom.properties\" );\n-            properties.load( resourceAsStream );\n \n-            if( properties.getProperty( \"builtOn\" ) != null )\n+            if ( resourceAsStream != null )\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n-                    + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                properties.load( resourceAsStream );\n+\n+                if( properties.getProperty( \"builtOn\" ) != null )\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n+                        + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                }\n+                else\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                }\n             }\n             else\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                System.out.println( \"Maven version: unknown\" );\n             }\n \n             System.out.println( \"Java version: \" + System.getProperty( \"java.version\", \"<unknown java version>\" ) );",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "PR: MNG-1721\n\nFixing NPE when error parameter is null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@350275 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/3230df32bf15f687ede04cb73f68a422ade6f2e8",
        "parent": "https://github.com/apache/maven-2/commit/2177e3763e47e2bea1e72f05cd9d7d043628b994",
        "bug_id": "maven-2_11",
        "file": [
            {
                "sha": "525640ca8cf8966f759f47970e339a480e95edd4",
                "filename": "maven-error-diagnostics/src/main/java/org/apache/maven/usability/diagnostics/DiagnosisUtils.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3230df32bf15f687ede04cb73f68a422ade6f2e8/maven-error-diagnostics/src/main/java/org/apache/maven/usability/diagnostics/DiagnosisUtils.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3230df32bf15f687ede04cb73f68a422ade6f2e8/maven-error-diagnostics/src/main/java/org/apache/maven/usability/diagnostics/DiagnosisUtils.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-error-diagnostics/src/main/java/org/apache/maven/usability/diagnostics/DiagnosisUtils.java?ref=3230df32bf15f687ede04cb73f68a422ade6f2e8",
                "patch": "@@ -80,6 +80,11 @@ public static Throwable getFromCausality( Throwable error, Class targetClass )\n     public static void appendRootCauseIfPresentAndUnique( Throwable error, StringBuffer message,\n                                                           boolean includeTypeInfo )\n     {\n+        if ( error == null )\n+        {\n+            return;\n+        }\n+        \n         Throwable root = getRootCause( error );\n \n         if ( root != null && !root.equals( error ) )",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "prevent NPE in equals()\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@349699 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
        "parent": "https://github.com/apache/maven-2/commit/1bd7f792fcdd69c6b92b425f0d3b4c93815e0436",
        "bug_id": "maven-2_12",
        "file": [
            {
                "sha": "0e45e3296ce1754aacbdce5166816903ca623ea8",
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "blob_url": "https://github.com/apache/maven-2/blob/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "raw_url": "https://github.com/apache/maven-2/raw/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
                "patch": "@@ -305,7 +305,7 @@ else if ( !a.getType().equals( type ) )\n         {\n             return false;\n         }\n-        else if ( classifier == null ? a.getClassifier() != null : !a.getClassifier().equals( classifier ) )\n+        else if ( a.getClassifier() == null ? classifier != null : !a.getClassifier().equals( classifier ) )\n         {\n             return false;\n         }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE when there is no cause\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@312830 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/0ebf10aa03c7222a59767898d045135ea88e680b",
        "parent": "https://github.com/apache/maven-2/commit/d4aa23726f9fa4397732711e23b3cd3072bc7341",
        "bug_id": "maven-2_13",
        "file": [
            {
                "sha": "4074d1b99aad3bcf4a8ab3bd201746359f472ec6",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/0ebf10aa03c7222a59767898d045135ea88e680b/maven-artifact-manager/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/0ebf10aa03c7222a59767898d045135ea88e680b/maven-artifact-manager/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java?ref=0ebf10aa03c7222a59767898d045135ea88e680b",
                "patch": "@@ -301,7 +301,7 @@ private void resolveAlways( ArtifactMetadata metadata, ArtifactRepository reposi\n         catch ( TransferFailedException e )\n         {\n             getLogger().warn( metadata + \" could not be found on repository: \" + repository.getId() +\n-                \" due to an error: \" + e.getCause().getMessage() );\n+                \" due to an error: \" + e.getMessage() );\n             getLogger().info( \"Repository '\" + repository.getId() + \"' will be blacklisted\" );\n             getLogger().debug( \"Exception\", e );\n             repository.setBlacklisted( allowBlacklisting );",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "split command to narrow down NPE in integration environment\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291250 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/0fbd59f4f8caf0ad3a984a153ad057d0f3555641",
        "parent": "https://github.com/apache/maven-2/commit/15913ddde00b44de292b0ce7dbfb672525cc993f",
        "bug_id": "maven-2_14",
        "file": [
            {
                "sha": "af9642c4019164cb2e84f9d4c44a9de10eea36ba",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/0fbd59f4f8caf0ad3a984a153ad057d0f3555641/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/0fbd59f4f8caf0ad3a984a153ad057d0f3555641/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=0fbd59f4f8caf0ad3a984a153ad057d0f3555641",
                "patch": "@@ -143,6 +143,8 @@ public Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session,\n         // use for the mapping manager in here\n         Settings settings = session.getSettings();\n         List pluginGroups = settings.getPluginGroups();\n+        if ( pluginMappingManager == null ) throw new NullPointerException( \"pluginMappingManager was null\" );\n+        if ( project == null ) throw new NullPointerException( \"project was null\" );\n         return pluginMappingManager.getByPrefix( prefix, pluginGroups, project.getPluginArtifactRepositories(),\n                                                  session.getLocalRepository() );\n     }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "split command to narrow down NPE in integration environment\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291246 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/c24680e912033e4a6db7274ed59183b4f0d43032",
        "parent": "https://github.com/apache/maven-2/commit/3e264f80ba8757c3df16ecf1ba6c79c2e1c86df5",
        "bug_id": "maven-2_15",
        "file": [
            {
                "sha": "783dd7cdc9e15ae196cde4eed9a184408be97f84",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/c24680e912033e4a6db7274ed59183b4f0d43032/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/c24680e912033e4a6db7274ed59183b4f0d43032/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=c24680e912033e4a6db7274ed59183b4f0d43032",
                "patch": "@@ -141,8 +141,9 @@ public Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session,\n     {\n         // TODO: since this is only used in the lifecycle executor, maybe it should be moved there? There is no other\n         // use for the mapping manager in here\n-        return pluginMappingManager.getByPrefix( prefix, session.getSettings().getPluginGroups(),\n-                                                 project.getPluginArtifactRepositories(),\n+        Settings settings = session.getSettings();\n+        List pluginGroups = settings.getPluginGroups();\n+        return pluginMappingManager.getByPrefix( prefix, pluginGroups, project.getPluginArtifactRepositories(),\n                                                  session.getLocalRepository() );\n     }\n \n@@ -271,7 +272,7 @@ protected void addPlugin( Plugin plugin, Artifact pluginArtifact, MavenProject p\n         }\n \n         artifactResolver.resolve( pluginArtifact, project.getPluginArtifactRepositories(), localRepository );\n-        \n+\n         if ( !pluginArtifact.isResolved() )\n         {\n             throw new PluginContainerException( plugin, \"Cannot resolve artifact for plugin.\" );",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE if there are no parameters in the mojo\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@234155 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/5d3ebf4434914a9f445a86ee1baaa24eed1ce212",
        "parent": "https://github.com/apache/maven-2/commit/3715ac2a6c4f41c10125656760963c7317c5cd3e",
        "bug_id": "maven-2_16",
        "file": [
            {
                "sha": "8a028983db95d425531bd05fc829e95000eecfe9",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/5d3ebf4434914a9f445a86ee1baaa24eed1ce212/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/5d3ebf4434914a9f445a86ee1baaa24eed1ce212/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 113,
                "additions": 58,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=5d3ebf4434914a9f445a86ee1baaa24eed1ce212",
                "patch": "@@ -279,7 +279,7 @@ protected void addPlugin( Plugin plugin, Artifact pluginArtifact, MavenProject p\n         throws ArtifactResolutionException, PlexusContainerException\n     {\n         artifactResolver.resolve( pluginArtifact, project.getPluginArtifactRepositories(), localRepository );\n-        \n+\n         PlexusContainer child = container.createChildContainer( plugin.getKey(),\n                                                                 Collections.singletonList( pluginArtifact.getFile() ),\n                                                                 Collections.EMPTY_MAP,\n@@ -511,7 +511,7 @@ private Mojo getConfiguredMojo( MojoDescriptor mojoDescriptor, MavenSession sess\n         //                                                                          mojoDescriptor.getConfiguration() );\n \n         ExpressionEvaluator expressionEvaluator = new PluginParameterExpressionEvaluator( session, mojoDescriptor,\n-                                                                                          pathTranslator, getLogger(), \n+                                                                                          pathTranslator, getLogger(),\n                                                                                           project );\n \n         PlexusConfiguration extractedMojoConfiguration = extractMojoConfiguration( mergedConfiguration,\n@@ -769,7 +769,7 @@ private void checkRequiredParameters( MojoDescriptor goal, PlexusConfiguration c\n                 }\n \n                 // only mark as invalid if there are no child nodes\n-                if ( fieldValue == null && (value == null || value.getChildCount() == 0 ) )\n+                if ( fieldValue == null && ( value == null || value.getChildCount() == 0 ) )\n                 {\n                     parameter.setExpression( expression );\n                     invalidParameters.add( parameter );\n@@ -829,95 +829,98 @@ private void validatePomConfiguration( MojoDescriptor goal, PlexusConfiguration\n             }\n         }\n     }\n-    \n+\n     private PlexusConfiguration mergeMojoConfiguration( XmlPlexusConfiguration fromPom, MojoDescriptor mojoDescriptor )\n     {\n         XmlPlexusConfiguration result = new XmlPlexusConfiguration( fromPom.getName() );\n         result.setValue( fromPom.getValue( null ) );\n-        \n-        PlexusConfiguration fromMojo = mojoDescriptor.getMojoConfiguration();\n-        \n-        for ( Iterator it = mojoDescriptor.getParameters().iterator(); it.hasNext(); )\n-        {\n-            Parameter parameter = (Parameter) it.next();\n \n-            String paramName = parameter.getName();\n-            String alias = parameter.getAlias();\n+        if ( mojoDescriptor.getParameters() != null )\n+        {\n+            PlexusConfiguration fromMojo = mojoDescriptor.getMojoConfiguration();\n \n-            PlexusConfiguration pomConfig = fromPom.getChild( paramName );\n-            PlexusConfiguration aliased = null;\n-            \n-            if ( alias != null )\n+            for ( Iterator it = mojoDescriptor.getParameters().iterator(); it.hasNext(); )\n             {\n-                aliased = fromPom.getChild( alias );\n-            }\n-            \n-            PlexusConfiguration mojoConfig = fromMojo.getChild( paramName, false );\n-            \n-            // first we'll merge configurations from the aliased and real params.\n-            // TODO: Is this the right thing to do?\n-            if ( aliased != null )\n-            {\n-                if ( pomConfig == null )\n+                Parameter parameter = (Parameter) it.next();\n+\n+                String paramName = parameter.getName();\n+                String alias = parameter.getAlias();\n+\n+                PlexusConfiguration pomConfig = fromPom.getChild( paramName );\n+                PlexusConfiguration aliased = null;\n+\n+                if ( alias != null )\n                 {\n-                    pomConfig = new XmlPlexusConfiguration( paramName );\n+                    aliased = fromPom.getChild( alias );\n                 }\n-                \n-                pomConfig = buildTopDownMergedConfiguration( pomConfig, aliased );\n-            }\n-            \n-            boolean addedPomConfig = false;\n \n-            if ( pomConfig != null )\n-            {\n-                pomConfig = buildTopDownMergedConfiguration( pomConfig, mojoConfig );\n+                PlexusConfiguration mojoConfig = fromMojo.getChild( paramName, false );\n \n-                if ( StringUtils.isNotEmpty( pomConfig.getValue( null ) ) || pomConfig.getChildCount() > 0 )\n+                // first we'll merge configurations from the aliased and real params.\n+                // TODO: Is this the right thing to do?\n+                if ( aliased != null )\n                 {\n-                    result.addChild( pomConfig );\n-                    \n-                    addedPomConfig = true;\n+                    if ( pomConfig == null )\n+                    {\n+                        pomConfig = new XmlPlexusConfiguration( paramName );\n+                    }\n+\n+                    pomConfig = buildTopDownMergedConfiguration( pomConfig, aliased );\n+                }\n+\n+                boolean addedPomConfig = false;\n+\n+                if ( pomConfig != null )\n+                {\n+                    pomConfig = buildTopDownMergedConfiguration( pomConfig, mojoConfig );\n+\n+                    if ( StringUtils.isNotEmpty( pomConfig.getValue( null ) ) || pomConfig.getChildCount() > 0 )\n+                    {\n+                        result.addChild( pomConfig );\n+\n+                        addedPomConfig = true;\n+                    }\n+                }\n+\n+                if ( !addedPomConfig && mojoConfig != null )\n+                {\n+                    result.addChild( copyConfiguration( mojoConfig ) );\n                 }\n-            }\n-            \n-            if ( !addedPomConfig && mojoConfig != null )\n-            {\n-                result.addChild( copyConfiguration( mojoConfig ) );\n             }\n         }\n-        \n         return result;\n     }\n \n-    private XmlPlexusConfiguration buildTopDownMergedConfiguration( PlexusConfiguration dominant, PlexusConfiguration recessive )\n+    private XmlPlexusConfiguration buildTopDownMergedConfiguration( PlexusConfiguration dominant,\n+                                                                    PlexusConfiguration recessive )\n     {\n         XmlPlexusConfiguration result = new XmlPlexusConfiguration( dominant.getName() );\n-        \n+\n         String value = dominant.getValue( null );\n-        \n+\n         if ( StringUtils.isEmpty( value ) && recessive != null )\n         {\n             value = recessive.getValue( null );\n         }\n-        \n+\n         if ( StringUtils.isNotEmpty( value ) )\n         {\n             result.setValue( value );\n         }\n-        \n+\n         String[] attributeNames = dominant.getAttributeNames();\n-        \n+\n         for ( int i = 0; i < attributeNames.length; i++ )\n         {\n             String attributeValue = dominant.getAttribute( attributeNames[i], null );\n-            \n+\n             result.setAttribute( attributeNames[i], attributeValue );\n         }\n-        \n+\n         if ( recessive != null )\n         {\n             attributeNames = recessive.getAttributeNames();\n-            \n+\n             for ( int i = 0; i < attributeNames.length; i++ )\n             {\n                 String attributeValue = recessive.getAttribute( attributeNames[i], null );\n@@ -942,7 +945,7 @@ private XmlPlexusConfiguration buildTopDownMergedConfiguration( PlexusConfigurat\n                 result.addChild( copyConfiguration( childDom ) );\n             }\n         }\n-    \n+\n         return result;\n     }\n ",
                "deletions": 55
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "fix NPE in dependencies report\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@220050 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/813a3b804011bcfd2838b04a40e57243ae2a16c7",
        "parent": "https://github.com/apache/maven-2/commit/186f48083f2de69745ac709611b28c2c57aa1509",
        "bug_id": "maven-2_17",
        "file": [
            {
                "sha": "bbb8d7d317b790695e9e328d267589ff5efdcd49",
                "filename": "maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "blob_url": "https://github.com/apache/maven-2/blob/813a3b804011bcfd2838b04a40e57243ae2a16c7/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "raw_url": "https://github.com/apache/maven-2/raw/813a3b804011bcfd2838b04a40e57243ae2a16c7/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "status": "modified",
                "changes": 36,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=813a3b804011bcfd2838b04a40e57243ae2a16c7",
                "patch": "@@ -17,6 +17,7 @@\n  */\n \n import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.project.MavenProject;\n@@ -84,6 +85,13 @@\n      */\n     private MavenProjectBuilder mavenProjectBuilder;\n \n+    /**\n+     * @parameter expression=\"${localRepository}\"\n+     * @required\n+     * @readonly\n+     */\n+    private ArtifactRepository localRepository;\n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getName(java.util.Locale)\n      */\n@@ -139,7 +147,7 @@ public void executeReport( Locale locale )\n         throws MavenReportException\n     {\n         DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject(), locale, mavenProjectBuilder,\n-                                                           artifactFactory );\n+                                                           artifactFactory, localRepository );\n \n         r.render();\n     }\n@@ -163,8 +171,11 @@ public String getOutputName()\n \n         private MavenProjectBuilder mavenProjectBuilder;\n \n+        private ArtifactRepository localRepository;\n+\n         public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n-                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory )\n+                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,\n+                                    ArtifactRepository localRepository )\n         {\n             super( sink );\n \n@@ -175,6 +186,8 @@ public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n             this.mavenProjectBuilder = mavenProjectBuilder;\n \n             this.artifactFactory = artifactFactory;\n+\n+            this.localRepository = localRepository;\n         }\n \n         public String getTitle()\n@@ -187,7 +200,7 @@ public void renderBody()\n             // Dependencies report\n             List dependencies = project.getDependencies();\n \n-            if ( ( dependencies == null ) || ( dependencies.isEmpty() ) )\n+            if ( dependencies == null || dependencies.isEmpty() )\n             {\n                 startSection( getTitle() );\n \n@@ -224,7 +237,7 @@ public void renderBody()\n                 MavenProject artifactProject = null;\n                 try\n                 {\n-                    artifactProject = getMavenProjectFromRepository( artifact );\n+                    artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n@@ -269,16 +282,14 @@ public void renderBody()\n                     MavenProject artifactProject = null;\n                     try\n                     {\n-                        artifactProject = getMavenProjectFromRepository( artifact );\n+                        artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                     }\n                     catch ( ProjectBuildingException e )\n                     {\n                         throw new IllegalArgumentException(\n                                                             \"Can't find a valid Maven project in the repository for the artifact [\"\n                                                                 + artifact + \"].\" );\n                     }\n-                    System.out.println( \"nklj-----------------------------\" );\n-                    System.out.println( artifactProject.getUrl() );\n                     tableRow( new String[] {\n                         artifact.getGroupId(),\n                         artifact.getArtifactId(),\n@@ -308,7 +319,7 @@ private Set getTransitiveDependencies( MavenProject project )\n             List dependencies = project.getDependencies();\n             Set artifacts = project.getArtifacts();\n \n-            if ( ( dependencies == null ) || ( artifacts == null ) )\n+            if ( dependencies == null || artifacts == null )\n             {\n                 return transitiveDependencies;\n             }\n@@ -341,18 +352,17 @@ private Set getTransitiveDependencies( MavenProject project )\n         /**\n          * Get the <code>Maven project</code> from the repository depending\n          * the <code>Artifact</code> given.\n-         * \n+         *\n          * @param artifact\n          *            an artifact\n          * @return the Maven project for the given artifact\n-         * @throws ProjectBuildingException\n+         * @throws org.apache.maven.project.ProjectBuildingException\n          *             if any\n          */\n-        private MavenProject getMavenProjectFromRepository( Artifact artifact )\n+        private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n         {\n-            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), artifact\n-                .getRepository() );\n+            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), localRepository );\n         }\n     }\n ",
                "deletions": 13
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE, pass on to proper validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219888 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
        "parent": "https://github.com/apache/maven-2/commit/473d99609ce2702c9d4a8b65560667eb2ad2b47c",
        "bug_id": "maven-2_18",
        "file": [
            {
                "sha": "945f988cb0146608010b1865151f5ce3714bb0d0",
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "blob_url": "https://github.com/apache/maven-2/blob/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "raw_url": "https://github.com/apache/maven-2/raw/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java?ref=ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
                "patch": "@@ -54,6 +54,11 @@ public List getRestrictions()\n     public static VersionRange createFromVersionSpec( String spec )\n         throws InvalidVersionSpecificationException\n     {\n+        if ( spec == null )\n+        {\n+            return null;\n+        }\n+\n         List restrictions = new ArrayList();\n         String process = spec;\n         ArtifactVersion version = null;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219831 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/f48d2c367c0050be732c91adcf1c7dcdf0808c5a",
        "parent": "https://github.com/apache/maven-2/commit/e40e709513c23c080e9929b9211d1428db5be318",
        "bug_id": "maven-2_19",
        "file": [
            {
                "sha": "9a93753528c754a598ec090710655361fbefb142",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/transform/SnapshotTransformation.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f48d2c367c0050be732c91adcf1c7dcdf0808c5a/maven-artifact-manager/src/main/java/org/apache/maven/artifact/transform/SnapshotTransformation.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f48d2c367c0050be732c91adcf1c7dcdf0808c5a/maven-artifact-manager/src/main/java/org/apache/maven/artifact/transform/SnapshotTransformation.java",
                "status": "modified",
                "changes": 16,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/transform/SnapshotTransformation.java?ref=f48d2c367c0050be732c91adcf1c7dcdf0808c5a",
                "patch": "@@ -79,22 +79,22 @@ public void transformForDeployment( Artifact artifact, ArtifactRepository remote\n         }\n         else if ( isSnapshot( artifact ) )\n         {\n-            SnapshotArtifactMetadata metadata = null;\n-            \n             try\n             {\n+                SnapshotArtifactMetadata metadata;\n+            \n                 metadata = (SnapshotArtifactMetadata) retrieveFromRemoteRepository( artifact, remoteRepository, null );\n+\n+                metadata.update();\n+\n+                artifact.setVersion( metadata.constructVersion() );\n+\n+                artifact.addMetadata( metadata );\n             }\n             catch ( ResourceDoesNotExistException e )\n             {\n                 // ignore. We'll be creating this metadata if it doesn't exist...\n             }\n-\n-            metadata.update();\n-\n-            artifact.setVersion( metadata.constructVersion() );\n-\n-            artifact.addMetadata( metadata );\n         }\n     }\n ",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE when no settings.xml file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191104 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/2d7f97bc31da318e825fa3422fb856cce957fd34",
        "parent": "https://github.com/apache/maven-2/commit/01e6c8daa613e61e2fc13dc9edcd850f88a5da99",
        "bug_id": "maven-2_20",
        "file": [
            {
                "sha": "776cefa1a6f31dda5088040bd5ccafc9e80effda",
                "filename": "maven-settings/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java",
                "blob_url": "https://github.com/apache/maven-2/blob/2d7f97bc31da318e825fa3422fb856cce957fd34/maven-settings/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java",
                "raw_url": "https://github.com/apache/maven-2/raw/2d7f97bc31da318e825fa3422fb856cce957fd34/maven-settings/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-settings/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java?ref=2d7f97bc31da318e825fa3422fb856cce957fd34",
                "patch": "@@ -87,9 +87,9 @@ private Settings readSettings( File settingsFile )\n                 settings = modelReader.read( reader );\n \n                 RuntimeInfo rtInfo = new RuntimeInfo( settings );\n-                \n+\n                 rtInfo.setFile( settingsFile );\n-                \n+\n                 settings.setRuntimeInfo( rtInfo );\n             }\n             finally\n@@ -110,6 +110,7 @@ public Settings buildSettings()\n         if ( userSettings == null )\n         {\n             userSettings = new Settings();\n+            userSettings.setRuntimeInfo( new RuntimeInfo( userSettings ) );\n         }\n \n         SettingsUtils.merge( userSettings, globalSettings, TrackableBase.GLOBAL_LEVEL );",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "fix possible NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@190975 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/e57f2dbb44c4985cccbf9340f03d7ce43ab1aec0",
        "parent": "https://github.com/apache/maven-2/commit/ac2d8a7e831382797513fab99a28ffac201855c3",
        "bug_id": "maven-2_21",
        "file": [
            {
                "sha": "83d8d193d7e357328b7d25f07ed94a7f53a1453d",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "blob_url": "https://github.com/apache/maven-2/blob/e57f2dbb44c4985cccbf9340f03d7ce43ab1aec0/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "raw_url": "https://github.com/apache/maven-2/raw/e57f2dbb44c4985cccbf9340f03d7ce43ab1aec0/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java?ref=e57f2dbb44c4985cccbf9340f03d7ce43ab1aec0",
                "patch": "@@ -188,7 +188,10 @@ protected RemoteRepository createAntRemoteRepository( org.apache.maven.model.Rep\n         }\n \n         Mirror mirror = getSettings().getMirrorOf( pomRepository.getId() );\n-        r.setUrl( mirror.getUrl() );\n+        if ( mirror != null )\n+        {\n+            r.setUrl( mirror.getUrl() );\n+        }\n \n         return r;\n     }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE if either of the ids are not specified\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@188807 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/656b6f02b0b6e143d175f8fb4a1eb77ad15b01e7",
        "parent": "https://github.com/apache/maven-2/commit/7523cdb03a386ae98a7c03e08e834c8b03822e3d",
        "bug_id": "maven-2_22",
        "file": [
            {
                "sha": "8e6247e762f3f9c901edf3d81ffa30baf2b80779",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "blob_url": "https://github.com/apache/maven-2/blob/656b6f02b0b6e143d175f8fb4a1eb77ad15b01e7/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "raw_url": "https://github.com/apache/maven-2/raw/656b6f02b0b6e143d175f8fb4a1eb77ad15b01e7/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java?ref=656b6f02b0b6e143d175f8fb4a1eb77ad15b01e7",
                "patch": "@@ -100,12 +100,12 @@ public void execute()\n             throw new BuildException( \"Unable to resolve artifact\", e );\n         }\n \n-        if ( getProject().getReference( pathId ) != null )\n+        if ( pathId != null && getProject().getReference( pathId ) != null )\n         {\n             throw new BuildException( \"Reference ID \" + pathId + \" already exists\" );\n         }\n \n-        if ( getProject().getReference( filesetId ) != null )\n+        if ( filesetId != null && getProject().getReference( filesetId ) != null )\n         {\n             throw new BuildException( \"Reference ID \" + filesetId + \" already exists\" );\n         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE when there is no project file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163991 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/8e279f87e1ac9ce7e69988f8801c4460266fc09c",
        "parent": "https://github.com/apache/maven-2/commit/666c60dea6668db3dae494f38241e6cfd3f42730",
        "bug_id": "maven-2_23",
        "file": [
            {
                "sha": "2d723922c6e681b4090ef924c6c2935589af9978",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "patch": "@@ -112,7 +112,7 @@ else if ( \"#settings\".equals( expression ) )\n         }\n         else if ( expression.equals( \"#basedir\" ) )\n         {\n-            value = context.getProject().getFile().getParentFile().getAbsolutePath();\n+            value = context.getProject().getBasedir().getAbsolutePath();\n         }\n         else if ( expression.startsWith( \"#basedir\" ) )\n         {",
                "deletions": 1
            },
            {
                "sha": "93745033090548c6e70eeac91ac8aff4f7d6784e",
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "status": "modified",
                "changes": 9,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "patch": "@@ -132,7 +132,14 @@ public void setFile( File file )\n \n     public File getBasedir()\n     {\n-        return getFile().getParentFile();\n+        if ( getFile() != null )\n+        {\n+            return getFile().getParentFile();\n+        }\n+        else\n+        {\n+            return new File( System.getProperty( \"user.dir\" ) );\n+        }\n     }\n \n     public void setDependencies( List denpendencies )",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "fix NPE when there is no goal configuration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163683 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/886d787bf48dc9047393528f348c275c5e259591",
        "parent": "https://github.com/apache/maven-2/commit/4ba9fbcc338a6215ea60d365bfb31e819060f8d7",
        "bug_id": "maven-2_24",
        "file": [
            {
                "sha": "c257b0415911cafd7f32196e47f14c73e8377372",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/886d787bf48dc9047393528f348c275c5e259591/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/886d787bf48dc9047393528f348c275c5e259591/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 13,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=886d787bf48dc9047393528f348c275c5e259591",
                "patch": "@@ -683,14 +683,21 @@ private static PlexusConfiguration getProjectDefinedPluginConfiguration( MavenPr\n                     if ( index >= 0 )\n                     {\n                         String goalName = goalId.substring( index + 1 );\n-                        for ( Iterator j = plugin.getGoals().iterator(); j.hasNext(); )\n+                        for ( Iterator j = plugin.getGoals().iterator(); j.hasNext() && dom == null; )\n                         {\n                             Goal goal = (Goal) j.next();\n                             if ( goal.getId().equals( goalName ) )\n                             {\n                                 Xpp3Dom goalConfiguration = (Xpp3Dom) goal.getConfiguration();\n-                                dom = Xpp3DomUtils.mergeXpp3Dom( Xpp3DomUtils.copyXpp3Dom( goalConfiguration ), dom );\n-                                break;\n+                                if ( goalConfiguration != null )\n+                                {\n+                                    dom =\n+                                        Xpp3DomUtils.mergeXpp3Dom( Xpp3DomUtils.copyXpp3Dom( goalConfiguration ), dom );\n+                                }\n+                                else\n+                                {\n+                                    dom = new Xpp3Dom( \"configuration\" );\n+                                }\n                             }\n                         }\n                     }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fix NPE in later code when mavenRepoLocal was defined\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163600 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/17b770a2abce1babcef7163a384d1d883c2793a5",
        "parent": "https://github.com/apache/maven-2/commit/75951aa79d2a3861f3d79954dcc5a4dc36af7381",
        "bug_id": "maven-2_25",
        "file": [
            {
                "sha": "bcda0c66832ccb153add12f0f2795b6e053f8e6d",
                "filename": "maven-mboot2/src/main/java/MBoot.java",
                "blob_url": "https://github.com/apache/maven-2/blob/17b770a2abce1babcef7163a384d1d883c2793a5/maven-mboot2/src/main/java/MBoot.java",
                "raw_url": "https://github.com/apache/maven-2/raw/17b770a2abce1babcef7163a384d1d883c2793a5/maven-mboot2/src/main/java/MBoot.java",
                "status": "modified",
                "changes": 4,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-mboot2/src/main/java/MBoot.java?ref=17b770a2abce1babcef7163a384d1d883c2793a5",
                "patch": "@@ -184,12 +184,10 @@ public void run( String[] args )\n \n         String mavenRepoLocal = System.getProperty( \"maven.repo.local\" );\n \n-        SettingsReader userModelReader = null;\n+        SettingsReader userModelReader = new SettingsReader();\n \n         if ( mavenRepoLocal == null )\n         {\n-            userModelReader = new SettingsReader();\n-\n             try\n             {\n                 String userHome = System.getProperty( \"user.home\" );",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-2925: NullPointerException in PluginDescriptor.getMojo() if there's no mojo in pom.xml\nSubmitted by: Kohsuke Kawaguchi\nReviewed by: Vincent Siveton\n\no applied\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@609576 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/cfc4e4ee7a2efa213b12b8d6f250174f2baf92e7",
        "parent": "https://github.com/apache/maven-2/commit/1754ae06aeb39b519df7b434ac5d3f3c4ee9634d",
        "bug_id": "maven-2_26",
        "file": [
            {
                "sha": "b322f30daf7be8ad8c636ba299b8810b21c073c2",
                "filename": "maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/cfc4e4ee7a2efa213b12b8d6f250174f2baf92e7/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/cfc4e4ee7a2efa213b12b8d6f250174f2baf92e7/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java",
                "status": "modified",
                "changes": 15,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugin-descriptor/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java?ref=cfc4e4ee7a2efa213b12b8d6f250174f2baf92e7",
                "patch": "@@ -59,7 +59,7 @@\n     private boolean inheritedByDefault = true;\n \n     private List artifacts;\n-    \n+\n     private Map lifecycleMappings;\n \n     private ClassRealm classRealm;\n@@ -255,6 +255,11 @@ public int hashCode()\n \n     public MojoDescriptor getMojo( String goal )\n     {\n+        if ( getMojos() == null )\n+        {\n+            return null; // no mojo in this POM\n+        }\n+\n         // TODO: could we use a map? Maybe if the parent did that for components too, as this is too vulnerable to\n         // changes above not being propogated to the map\n \n@@ -326,22 +331,22 @@ public Set getIntroducedDependencyArtifacts()\n     {\n         return introducedDependencyArtifacts != null ? introducedDependencyArtifacts : Collections.EMPTY_SET;\n     }\n-    \n+\n     public void setName( String name )\n     {\n         this.name = name;\n     }\n-    \n+\n     public String getName()\n     {\n         return name;\n     }\n-    \n+\n     public void setDescription( String description )\n     {\n         this.description = description;\n     }\n-    \n+\n     public String getDescription()\n     {\n         return description;",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-3265] maven-model Extension.equals causes NPE when any field is uninitialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x@793311 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/1694080fd6b53f099bce676acf72771770926a3c",
        "parent": "https://github.com/apache/maven-2/commit/484cc50c1671f718e382f0c690241727936e5023",
        "bug_id": "maven-2_27",
        "file": [
            {
                "sha": "57d86c40bb6818d8f30e6eaebd73eb584c255b71",
                "filename": "maven-model/src/main/mdo/maven.mdo",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/main/mdo/maven.mdo",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/main/mdo/maven.mdo",
                "status": "modified",
                "changes": 11,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/main/mdo/maven.mdo?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -3429,21 +3429,26 @@\n \n         Extension e = (Extension) o;\n \n-        if ( !e.getArtifactId().equals( getArtifactId() ) )\n+        if ( !equal( e.getArtifactId(), getArtifactId() ) )\n         {\n             return false;\n         }\n-        else if ( !e.getGroupId().equals( getGroupId() ) )\n+        else if ( !equal( e.getGroupId(), getGroupId() ) )\n         {\n             return false;\n         }\n-        else if ( e.getVersion() != null ? !e.getVersion().equals( getVersion() ) : getVersion() != null )\n+        else if ( !equal( e.getVersion(), getVersion() ) )\n         {\n             return false;\n         }\n         return true;\n     }\n \n+    private static <T> boolean equal( T obj1, T obj2 )\n+    {\n+        return ( obj1 != null ) ? obj1.equals( obj2 ) : obj2 == null;\n+    }\n+\n     /**\n      * @see java.lang.Object#hashCode()\n      */",
                "deletions": 3
            },
            {
                "sha": "e6f057a5ed5d88b000e3ba14039f2b702690070c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationFile().equals( null ) );\n+\n+        new ActivationFile().equals( new ActivationFile() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "39b1e6210e07809739cff9273c7dda7455c63b1c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationOS().equals( null ) );\n+\n+        new ActivationOS().equals( new ActivationOS() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "014d321c6c060e027b9ab29124074d3e2925dc2a",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationProperty().equals( null ) );\n+\n+        new ActivationProperty().equals( new ActivationProperty() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "cd5b17c88a5f9f32481e1e87d8903d11d76deae7",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Activation().equals( null ) );\n+\n+        new Activation().equals( new Activation() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "0e21231211861591c7fdd0d0f54a6ba61ed07352",
                "filename": "maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/BuildTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Build().equals( null ) );\n+\n+        new Build().equals( new Build() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "57b386520e59a7c7122b4597e3e404bc183dd13c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new CiManagement().equals( null ) );\n+\n+        new CiManagement().equals( new CiManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "61b3e007ed2eb248dbcf6098b7e71910eb5e6315",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Contributor().equals( null ) );\n+\n+        new Contributor().equals( new Contributor() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "85a697b46967d9a1774bdc0fd93b5cdb21a6eab2",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DependencyManagement().equals( null ) );\n+\n+        new DependencyManagement().equals( new DependencyManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "3d08d50c8d155704c290619b6a19dc053a20645c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Dependency().equals( null ) );\n+\n+        new Dependency().equals( new Dependency() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "b16c85cfe15d9099d5f5bf82c317c7fff0b948a8",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DeploymentRepository().equals( null ) );\n+\n+        new DeploymentRepository().equals( new DeploymentRepository() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "45ee509028120600a5add7123fec8e6ff7438f3e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Developer().equals( null ) );\n+\n+        new Developer().equals( new Developer() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "5a7a155bffb8cad8aee90bd7fa54ffa9d40a7125",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DistributionManagement().equals( null ) );\n+\n+        new DistributionManagement().equals( new DistributionManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "d6fb2d72e96d47a4e050d31daa5bc097dd3a10c2",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Exclusion().equals( null ) );\n+\n+        new Exclusion().equals( new Exclusion() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "db74935a9c33081c94410567e1641749ec478605",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Extension().equals( null ) );\n+\n+        new Extension().equals( new Extension() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "5b5150905ec70bff1a831ff3ed8f27d26574ef16",
                "filename": "maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new IssueManagement().equals( null ) );\n+\n+        new IssueManagement().equals( new IssueManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "e1826f53f980ee0c16d486fd96dc325c8780c0fb",
                "filename": "maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new License().equals( null ) );\n+\n+        new License().equals( new License() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "028583e02e91c59c76e34cd16d198ff72cb8ac5d",
                "filename": "maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new MailingList().equals( null ) );\n+\n+        new MailingList().equals( new MailingList() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "f322a343d711e33da13a386601da43e9848ef530",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ModelTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Model().equals( null ) );\n+\n+        new Model().equals( new Model() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "961094e2b9ae3f17bf3f43cc4fd6b0a8c8483942",
                "filename": "maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Notifier().equals( null ) );\n+\n+        new Notifier().equals( new Notifier() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "3bb3ec17ad6b62877c74fcb40a24f201b15ffefc",
                "filename": "maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Organization().equals( null ) );\n+\n+        new Organization().equals( new Organization() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "0be4324e7f4aeb79e66dd6f6db944cc797874693",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ParentTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Parent().equals( null ) );\n+\n+        new Parent().equals( new Parent() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "349d4646c1a4734c0ba2cd3e38b3360eb9b3f5cb",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginConfiguration().equals( null ) );\n+\n+        new PluginConfiguration().equals( new PluginConfiguration() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "85b1d34836c48cb52c975699c961e92e81a50c6e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginContainer().equals( null ) );\n+\n+        new PluginContainer().equals( new PluginContainer() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "341b5d615bf759000360194e18a47228f6d2de05",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginExecution().equals( null ) );\n+\n+        new PluginExecution().equals( new PluginExecution() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "93331463353da1991dc9da408bce228495407249",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginManagement().equals( null ) );\n+\n+        new PluginManagement().equals( new PluginManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "e7be0a692959e1ee61cf1ebe6766d421518d16d6",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Plugin().equals( null ) );\n+\n+        new Plugin().equals( new Plugin() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "daa9c266445b9ad4b5eb373d4ac62a5600b96819",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Prerequisites().equals( null ) );\n+\n+        new Prerequisites().equals( new Prerequisites() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "ae111ee15e491885fd9004fad696ff8afd8404e8",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Profile().equals( null ) );\n+\n+        new Profile().equals( new Profile() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "0ae97f7d0acf3de74d18623845c9a8542a489056",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Relocation().equals( null ) );\n+\n+        new Relocation().equals( new Relocation() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "cd3fb8547a78b92aa53213b70efb669a3231101b",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ReportPlugin().equals( null ) );\n+\n+        new ReportPlugin().equals( new ReportPlugin() );\n     }\n \n     public void testEqualsIsKey()",
                "deletions": 0
            },
            {
                "sha": "9dc6d063d491603f0393d8c8b786da997c8457fc",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ReportSet().equals( null ) );\n+\n+        new ReportSet().equals( new ReportSet() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "20c88d274023d5f9c013332463d990f87b814a4a",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Reporting().equals( null ) );\n+\n+        new Reporting().equals( new Reporting() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "639a29e40418cc3ed15c216b7560728b66d1f5ac",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new RepositoryPolicy().equals( null ) );\n+\n+        new RepositoryPolicy().equals( new RepositoryPolicy() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "8f6a03ebc2ec7fb4e02cb9e6c6415ed911dd7911",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Repository().equals( null ) );\n+\n+        new Repository().equals( new Repository() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "4515c6c75e7e5044b0260c3ac9fd1368baf6da18",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Resource().equals( null ) );\n+\n+        new Resource().equals( new Resource() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "7d1e31f9952db1a93b02ea99d876389538792df7",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ScmTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Scm().equals( null ) );\n+\n+        new Scm().equals( new Scm() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            },
            {
                "sha": "0d910eadb6e8beeb6a22de5cbd4722ee425c970e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/SiteTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Site().equals( null ) );\n+\n+        new Site().equals( new Site() );\n     }\n \n     public void testEqualsIdentity()",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-3753] ArtifactResolverDiagnoser.diagnose() fails with NPE if nested IOException has no detail message\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x@793305 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/484cc50c1671f718e382f0c690241727936e5023",
        "parent": "https://github.com/apache/maven-2/commit/edb0e166243ee1febc285d6c4593212d87ca8970",
        "bug_id": "maven-2_28",
        "file": [
            {
                "sha": "e27820c5ef49d9da0c045c5e2ba07d0ff443e670",
                "filename": "maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "patch": "@@ -50,7 +50,7 @@ public String diagnose( Throwable error )\n \n         IOException ioe = (IOException) DiagnosisUtils.getFromCausality( exception, IOException.class );\n \n-        if ( ioe != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n+        if ( ioe != null && ioe.getMessage() != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n         {\n             message.append( \"\\n\\nCaused by I/O exception: \" ).append( ioe.getMessage() );\n         }",
                "deletions": 1
            },
            {
                "sha": "201306da42b7493c2e518466a291282463ea515a",
                "filename": "maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "status": "added",
                "changes": 53,
                "additions": 53,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "patch": "@@ -0,0 +1,53 @@\n+package org.apache.maven.usability;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.IOException;\n+\n+import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n+import org.apache.maven.usability.diagnostics.ErrorDiagnoser;\n+import org.codehaus.plexus.PlexusTestCase;\n+\n+/**\n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ArtifactResolverDiagnoserTest\n+    extends PlexusTestCase\n+{\n+\n+    /**\n+     * Tests that inner IOException without detail message does not crash diagnoser.\n+     * \n+     * @throws Exception\n+     */\n+    public void testNullMessage()\n+        throws Exception\n+    {\n+        ErrorDiagnoser diagnoser =\n+            (ArtifactResolverDiagnoser) lookup( ErrorDiagnoser.ROLE, \"ArtifactResolverDiagnoser\" );\n+\n+        Throwable error = new ArtifactResolutionException( null, null, null, null, null, null, new IOException() );\n+\n+        assertTrue( diagnoser.canDiagnose( error ) );\n+        diagnoser.diagnose( error );\n+    }\n+\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-4218] NPE in AbstractArtifactResolutionException if DefaultArtifactResolver.resolveTransitively is interrupted\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.2.x@788378 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/0ff5128a8bf69c1ba01ff5d9762546e3ff01ad23",
        "parent": "https://github.com/apache/maven-2/commit/5ab25f934c32372d48dfe7016f3373c7146d81f6",
        "bug_id": "maven-2_29",
        "file": [
            {
                "sha": "b31a6871364aca34ddc763a4ca8b106b5782b2d9",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java",
                "blob_url": "https://github.com/apache/maven-2/blob/0ff5128a8bf69c1ba01ff5d9762546e3ff01ad23/maven-artifact-manager/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java",
                "raw_url": "https://github.com/apache/maven-2/raw/0ff5128a8bf69c1ba01ff5d9762546e3ff01ad23/maven-artifact-manager/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java?ref=0ff5128a8bf69c1ba01ff5d9762546e3ff01ad23",
                "patch": "@@ -347,7 +347,7 @@ public ArtifactResolutionResult resolveTransitively( Set artifacts, Artifact ori\n         }\n         catch ( InterruptedException e )\n         {\n-            throw new ArtifactResolutionException( \"Resolution interrupted\", null, e );\n+            throw new ArtifactResolutionException( \"Resolution interrupted\", originatingArtifact, e );\n         }\n \n         if ( !resolutionExceptions.isEmpty() )",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-553] fixed NPE in sec dispatcher when encrypting from CLI\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.1.x@738134 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/7fc77ea9aff2fe91adf6c664c22e98fd0b5a9767",
        "parent": "https://github.com/apache/maven-2/commit/4a89055d9a231947cc7d8e7d87f1d74f97eda942",
        "bug_id": "maven-2_30",
        "file": [
            {
                "sha": "bd556e41d6e2ce36e3c340056375f0a9c99efec5",
                "filename": "pom.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/7fc77ea9aff2fe91adf6c664c22e98fd0b5a9767/pom.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/7fc77ea9aff2fe91adf6c664c22e98fd0b5a9767/pom.xml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/pom.xml?ref=7fc77ea9aff2fe91adf6c664c22e98fd0b5a9767",
                "patch": "@@ -399,7 +399,7 @@ under the License.\n       <dependency>\n         <groupId>org.sonatype.plexus</groupId>\n         <artifactId>plexus-sec-dispatcher</artifactId>\n-        <version>1.0-alpha-1</version>\n+        <version>1.0-alpha-2</version>\n       </dependency>\n       <dependency>\n         <groupId>org.apache.maven.wagon</groupId>",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-3921] Extensions are subject to NPEs in their hashCode() impl\n\no Merged from r727548\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.1.x@727553 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/f595fbc6fc0daac9cbf7f67dfda25848ef432909",
        "parent": "https://github.com/apache/maven-2/commit/d7c623ebcb52039c845952ddc6a7736c048301b7",
        "bug_id": "maven-2_31",
        "file": [
            {
                "sha": "b0cc5c76bf78efa0fd4691d560e643cb93e447e2",
                "filename": "maven-model/src/main/mdo/maven.mdo",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/main/mdo/maven.mdo",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/main/mdo/maven.mdo",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/main/mdo/maven.mdo?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -3413,9 +3413,9 @@\n     public int hashCode()\n     {\n         int result = 17;\n-        result = 37 * result + getArtifactId() != null ? getArtifactId().hashCode() : 0;\n-        result = 37 * result + getGroupId() != null ? getGroupId().hashCode() : 0;\n-        result = 37 * result + getVersion() != null ? getVersion().hashCode() : 0;\n+        result = 37 * result + ( getArtifactId() != null ? getArtifactId().hashCode() : 0 );\n+        result = 37 * result + ( getGroupId() != null ? getGroupId().hashCode() : 0 );\n+        result = 37 * result + ( getVersion() != null ? getVersion().hashCode() : 0 );\n         return result;\n     }\n             ]]>",
                "deletions": 3
            },
            {
                "sha": "a2728e474f0a60c76fbe0c148381e11224d345d4",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationFile}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationFileTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationFile().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationFile().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationFile thing = new ActivationFile();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationFile().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "76c457fe64f838629c865dd5215d865ed09c2aeb",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationOS}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationOSTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationOS().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationOS().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationOS thing = new ActivationOS();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationOS().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "d298c5657d424fe4578d0c9931c3e6a33b83f934",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationProperty}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationPropertyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationProperty().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationProperty().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationProperty thing = new ActivationProperty();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationProperty().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "ba7aad6bcd23ee34184d8746205e5cf6de25bb48",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Activation}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Activation().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Activation().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Activation thing = new Activation();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Activation().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "04a13b818920aa01904d34a0b6e4487002c68243",
                "filename": "maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/BuildTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Build}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class BuildTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Build().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Build().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Build thing = new Build();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Build().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "1b8c3ef2d4653d55d3e9c6e681857511df291e94",
                "filename": "maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code CiManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class CiManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new CiManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new CiManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        CiManagement thing = new CiManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new CiManagement().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "6155326c0e5f4e977d7b5d83391d0887146319a4",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Contributor}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ContributorTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Contributor().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Contributor().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Contributor thing = new Contributor();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Contributor().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "b57469f70724785865faf5e776c14e83af38d7c8",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DependencyManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DependencyManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DependencyManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DependencyManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DependencyManagement thing = new DependencyManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DependencyManagement().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "d86a2b49a43d14eb3fc0257b48f9bb204847af54",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Dependency}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DependencyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Dependency().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Dependency().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Dependency thing = new Dependency();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Dependency().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "a678db722094e553cb669ab2832fabce768383e9",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DeploymentRepository}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DeploymentRepositoryTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DeploymentRepository().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DeploymentRepository().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DeploymentRepository thing = new DeploymentRepository();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DeploymentRepository().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "eebe4563a5059811adf3289709db6951bb8ea51c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Developer}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DeveloperTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Developer().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Developer().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Developer thing = new Developer();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Developer().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "8ac8d99538a8935f5214cb9099174e296bc0e984",
                "filename": "maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DistributionManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DistributionManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DistributionManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DistributionManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DistributionManagement thing = new DistributionManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DistributionManagement().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "41041443668b0fb41a51fa94e972e994c2f088ab",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Exclusion}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ExclusionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Exclusion().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Exclusion().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Exclusion thing = new Exclusion();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Exclusion().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "3c0fe105b7dfa375098e912418e314927524381c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Extension}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ExtensionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Extension().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Extension().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Extension thing = new Extension();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Extension().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "0c4d5331ba450456d7649703c344042011d21081",
                "filename": "maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code IssueManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class IssueManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new IssueManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new IssueManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        IssueManagement thing = new IssueManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new IssueManagement().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "248b68c9c120690975aee030f1124be4872b2ea2",
                "filename": "maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code License}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class LicenseTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new License().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new License().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        License thing = new License();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new License().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "8bd0c73aa9183c8e111c9b41a55f033590f4e0ed",
                "filename": "maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code MailingList}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class MailingListTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new MailingList().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new MailingList().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        MailingList thing = new MailingList();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new MailingList().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "cb9e6d656335f713bddaae00bf91e01bb74fa07b",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ModelTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Model}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ModelTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Model().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Model().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Model thing = new Model();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Model().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "2d5b8eeb5ed26e3c5f2457d85299e29cbcf13ad0",
                "filename": "maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Notifier}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class NotifierTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Notifier().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Notifier().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Notifier thing = new Notifier();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Notifier().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "4e4f99485a3f7c0f78ead70ac1fd227179887b5d",
                "filename": "maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Organization}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class OrganizationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Organization().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Organization().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Organization thing = new Organization();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Organization().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "a35782cc2736f5cb7283eccebeb7eac7cdf2a1ef",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ParentTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Parent}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ParentTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Parent().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Parent().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Parent thing = new Parent();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Parent().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "b6b54acb869db980a6bf39439c924b3d1de8327e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginConfiguration}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginConfigurationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginConfiguration().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginConfiguration().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginConfiguration thing = new PluginConfiguration();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginConfiguration().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "0cd16a666b50ad032f4d4166f81337164f9c6400",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginContainer}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginContainerTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginContainer().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginContainer().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginContainer thing = new PluginContainer();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginContainer().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "6b14cfb971622b167cad0f8d3302f18a2e64208c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginExecution}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginExecutionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginExecution().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginExecution().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginExecution thing = new PluginExecution();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginExecution().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "08a83858f6f51858d0c0e226eea41e8a848ce15e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginManagement thing = new PluginManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginManagement().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "3a9deb4866f5291f0b9622f45a4db420bf52d36b",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Plugin}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Plugin().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Plugin().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Plugin thing = new Plugin();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Plugin().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "441ead26da46dd8877b7dfeb95668b83dabb1ca9",
                "filename": "maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Prerequisites}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PrerequisitesTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Prerequisites().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Prerequisites().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Prerequisites thing = new Prerequisites();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Prerequisites().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "4b950c8c7ae1e6cdf922ad41ed68c7b884cee454",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Profile}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ProfileTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Profile().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Profile().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Profile thing = new Profile();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Profile().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "c016a26d9de7ec86f69c712ad1e1772d3d9efaba",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Relocation}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RelocationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Relocation().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Relocation().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Relocation thing = new Relocation();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Relocation().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "cac2bc0436a2280cb6f2d8de1d9ca4cd91e0f8f3",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ReportPlugin}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportPluginTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ReportPlugin().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ReportPlugin().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ReportPlugin thing = new ReportPlugin();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ReportPlugin().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "2839a9bbc027a9814b239af4d72d471984f6de72",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ReportSet}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportSetTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ReportSet().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ReportSet().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ReportSet thing = new ReportSet();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ReportSet().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "6c3d8a1d4803967a3d42d41a6e846d667f7a7c6e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Reporting}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportingTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Reporting().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Reporting().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Reporting thing = new Reporting();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Reporting().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "ef9919df5842d9ea9cd947c30843cd82bb92fe8e",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code RepositoryPolicy}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RepositoryPolicyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new RepositoryPolicy().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new RepositoryPolicy().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        RepositoryPolicy thing = new RepositoryPolicy();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new RepositoryPolicy().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "8113a59c1866f644dd49065e004d680aabe572e4",
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Repository}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RepositoryTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Repository().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Repository().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Repository thing = new Repository();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Repository().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "c906bbe18c2b65dc5104e3103105e4788b1ec7fd",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Resource}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ResourceTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Resource().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Resource().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Resource thing = new Resource();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Resource().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "fc76fcae21ebbaa74059cb18dc6d02398ae8697c",
                "filename": "maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ScmTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Scm}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ScmTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Scm().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Scm().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Scm thing = new Scm();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Scm().toString() );\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "0626f79f039f33a2a721ddad994da93276ea4a6a",
                "filename": "maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "status": "added",
                "changes": 55,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/SiteTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Site}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class SiteTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Site().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Site().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Site thing = new Site();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Site().toString() );\n+    }\n+\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-2861: intermediate fix to produce better logging than an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@635645 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
        "parent": "https://github.com/apache/maven-2/commit/7dfac68dd7e69cf65b941431028e40330e09df94",
        "bug_id": "maven-2_32",
        "file": [
            {
                "sha": "ed549f7c1823d2e06d835f3e8cefaaa62d4c6374",
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "blob_url": "https://github.com/apache/maven-2/blob/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "raw_url": "https://github.com/apache/maven-2/raw/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "status": "modified",
                "changes": 14,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java?ref=8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
                "patch": "@@ -220,8 +220,18 @@ private void recurse( ResolutionNode node, Map resolvedArtifacts, ManagedVersion\n                                     }\n                                 }\n                                 //end hack\n-                                resetArtifact.selectVersion( resetArtifact.getVersionRange().matchVersion(\n-                                                                                                           resetArtifact.getAvailableVersions() ).toString() );\n+                               \n+                                //MNG-2861: match version can return null\n+                                ArtifactVersion selectedVersion = resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );\n+                                if (selectedVersion != null)\n+                                {\n+                                  resetArtifact.selectVersion( selectedVersion.toString() );\n+                                }\n+                                else\n+                                {\n+                                  throw new OverConstrainedVersionException(\" Unable to find a version in \"+ resetArtifact.getAvailableVersions()+\" to match the range \"+ resetArtifact.getVersionRange(), resetArtifact);\n+                                }\n+                                \n                                 fireEvent( ResolutionListener.SELECT_VERSION_FROM_RANGE, listeners, resetNodes[j] );\n                             }\n                         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-2123: handle the NPE better if it ever happens for another reason.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@634105 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/a87a3c7ea1c8ba2cea951da97a9ef9e491eb3955",
        "parent": "https://github.com/apache/maven-2/commit/037276aa6df67df130ac2ed8d60d375bd5b347a5",
        "bug_id": "maven-2_33",
        "file": [
            {
                "sha": "474b839b6dd6f705e63d737d79f73fc172a96a04",
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java",
                "blob_url": "https://github.com/apache/maven-2/blob/a87a3c7ea1c8ba2cea951da97a9ef9e491eb3955/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java",
                "raw_url": "https://github.com/apache/maven-2/raw/a87a3c7ea1c8ba2cea951da97a9ef9e491eb3955/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java",
                "status": "modified",
                "changes": 22,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java?ref=a87a3c7ea1c8ba2cea951da97a9ef9e491eb3955",
                "patch": "@@ -19,17 +19,18 @@\n  * under the License.\n  */\n \n-import org.apache.maven.artifact.Artifact;\n-import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n-import org.apache.maven.artifact.versioning.OverConstrainedVersionException;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Set;\n \n+import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n+import org.apache.maven.artifact.versioning.ArtifactVersion;\n+import org.apache.maven.artifact.versioning.OverConstrainedVersionException;\n+\n public class ResolutionNode\n {\n     private final Artifact artifact;\n@@ -137,8 +138,17 @@ private List getTrail()\n                 if ( artifact.getVersion() == null )\n                 {\n                     // set the recommended version\n-                    String version = artifact.getSelectedVersion().toString();\n-                    artifact.selectVersion( version );\n+                    ArtifactVersion selected = artifact.getSelectedVersion();\n+                    //MNG-2123: null is a valid response to getSelectedVersion, don't\n+                    //assume it won't ever be.\n+                    if (selected != null)\n+                    {  \n+                        artifact.selectVersion( selected.toString() );\n+                    }\n+                    else\n+                    {\n+                        throw new OverConstrainedVersionException(\"Unable to get a selected Version for \"+ artifact.getArtifactId(),artifact);\n+                    }                 \n                 }\n \n                 ids.add( 0, artifact );",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-1849 Fix Extension.hashCode() throwing NPE if groupId or artifactId is null\nSubmitted by: David Hawkins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@543380 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/fe57e60299b7466539f8b3754c09477da7328fb5",
        "parent": "https://github.com/apache/maven-2/commit/f642e31d10f9dffcd23f6c61e42987f91266f035",
        "bug_id": "maven-2_34",
        "file": [
            {
                "sha": "ec9fe8c77030fc52767c00ac7a3d17bfc9dd7da1",
                "filename": "maven-model/src/main/mdo/maven.mdo",
                "blob_url": "https://github.com/apache/maven-2/blob/fe57e60299b7466539f8b3754c09477da7328fb5/maven-model/src/main/mdo/maven.mdo",
                "raw_url": "https://github.com/apache/maven-2/raw/fe57e60299b7466539f8b3754c09477da7328fb5/maven-model/src/main/mdo/maven.mdo",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/main/mdo/maven.mdo?ref=fe57e60299b7466539f8b3754c09477da7328fb5",
                "patch": "@@ -3842,8 +3842,8 @@\n     public int hashCode()\n     {\n         int result = 17;\n-        result = 37 * result + getArtifactId().hashCode();\n-        result = 37 * result + getGroupId().hashCode();\n+        result = 37 * result + getArtifactId() != null ? getArtifactId().hashCode() : 0;\n+        result = 37 * result + getGroupId() != null ? getGroupId().hashCode() : 0;\n         result = 37 * result + getVersion() != null ? getVersion().hashCode() : 0;\n         return result;\n     }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fixing NPE from MavenMetadataSource to buildStandaloneSuperProject(), where the profile manager is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@453405 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/a49c4afdc1c44a9f917f894d9e83874c5883e736",
        "parent": "https://github.com/apache/maven-2/commit/b511407dce32a373fdc3dbe131e427e87a16c35e",
        "bug_id": "maven-2_35",
        "file": [
            {
                "sha": "855fb5feeab48340db9752dbc9d106e85ea88f72",
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "blob_url": "https://github.com/apache/maven-2/blob/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "raw_url": "https://github.com/apache/maven-2/raw/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a49c4afdc1c44a9f917f894d9e83874c5883e736",
                "patch": "@@ -257,6 +257,11 @@ public MavenProject buildStandaloneSuperProject( ArtifactRepository localReposit\n \n \n         List activeProfiles;\n+        \n+        if ( profileManager == null )\n+        {\n+        \tprofileManager = new DefaultProfileManager( container );\n+        }\n \n         profileManager.addProfiles( superModel.getProfiles() );\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Fixing empty constructor to avoid NPEs in resulting MavenProject.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@389201 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
        "parent": "https://github.com/apache/maven-2/commit/19e13d47c2a46aeb3e0972a1d3dceb7bab60d961",
        "bug_id": "maven-2_36",
        "file": [
            {
                "sha": "e6b675e3c15613beb73380fd380a6729de92d8dc",
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "patch": "@@ -77,6 +77,12 @@\n  */\n public class MavenProject\n {\n+    public static final String EMPTY_PROJECT_GROUP_ID = \"unknown\";\n+    \n+    public static final String EMPTY_PROJECT_ARTIFACT_ID = \"empty-project\";\n+    \n+    public static final String EMPTY_PROJECT_VERSION = \"0\";\n+    \n     private Model model;\n \n     private MavenProject parent;\n@@ -140,6 +146,13 @@\n \n     public MavenProject()\n     {\n+        Model model = new Model();\n+        \n+        model.setGroupId( EMPTY_PROJECT_GROUP_ID );\n+        model.setArtifactId( EMPTY_PROJECT_ARTIFACT_ID );\n+        model.setVersion( EMPTY_PROJECT_VERSION );\n+        \n+        this.model = model;\n     }\n \n     public MavenProject( Model model )",
                "deletions": 0
            },
            {
                "sha": "79c57c447174247c4a1de99f8388e3928ca1bede",
                "filename": "maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "patch": "@@ -24,6 +24,15 @@\n public class MavenProjectTest\n     extends AbstractMavenProjectTestCase\n {\n+    \n+    public void testEmptyConstructor()\n+    {\n+        MavenProject project = new MavenProject();\n+        \n+        assertEquals( MavenProject.EMPTY_PROJECT_GROUP_ID + \":\" + MavenProject.EMPTY_PROJECT_ARTIFACT_ID + \":jar:\"\n+            + MavenProject.EMPTY_PROJECT_VERSION, project.getId() );\n+    }\n+    \n     public void testCopyConstructor() throws Exception\n     {\n         File f = getFileForClasspathResource( \"canonical-pom.xml\" );",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "(Merged from 382849.) Fixing NPE in appendPath(..) when calculating adjustments due to '..' in paths.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@382854 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/3bf9e4316e5f503d80afcec9048747f69382da7b",
        "parent": "https://github.com/apache/maven-2/commit/d95f88bdce195ae1c9f99a5d59d038c77e39960c",
        "bug_id": "maven-2_37",
        "file": [
            {
                "sha": "218670e8cc19343d1a77491251c8765132552998",
                "filename": "maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "status": "modified",
                "changes": 12,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java?ref=3bf9e4316e5f503d80afcec9048747f69382da7b",
                "patch": "@@ -538,10 +538,16 @@ protected String appendPath( String parentPath, String childPath, String pathAdj\n                 lastToken = currentToken;\n                 currentToken = tokens.nextToken();\n \n-                if ( \"..\".equals( currentToken ) )\n+                if ( \"..\".equals( currentToken ) && lastToken != null )\n                 {\n-                    // trim the previous path part off...\n-                    cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    int cleanedPathLen = cleanedPath.length();\n+                    int lastTokenLen = lastToken.length();\n+                    \n+                    if ( cleanedPathLen > lastTokenLen )\n+                    {\n+                        // trim the previous path part off...\n+                        cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    }\n                 }\n                 else if ( !\".\".equals( currentToken ) )\n                 {",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "PR: MNG-1232\nSubmitted by: Jerome Lacoste\navoid NPE in error reporting under some circumstances\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@330207 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/d848ba2acdd2d1f74669f92d99688bb86c278af0",
        "parent": "https://github.com/apache/maven-2/commit/20ecf7400f97eb454f9fba0eeb8580a5f9686909",
        "bug_id": "maven-2_38",
        "file": [
            {
                "sha": "49a9ea3ae6a015e75fe797fe24a3855b0ca33f5b",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginConfigurationException.java",
                "blob_url": "https://github.com/apache/maven-2/blob/d848ba2acdd2d1f74669f92d99688bb86c278af0/maven-core/src/main/java/org/apache/maven/plugin/PluginConfigurationException.java",
                "raw_url": "https://github.com/apache/maven-2/raw/d848ba2acdd2d1f74669f92d99688bb86c278af0/maven-core/src/main/java/org/apache/maven/plugin/PluginConfigurationException.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginConfigurationException.java?ref=d848ba2acdd2d1f74669f92d99688bb86c278af0",
                "patch": "@@ -269,7 +269,10 @@ public String buildConfigurationDiagnosticMessage( ComponentConfigurationExcepti\n         if ( failedConfiguration != null )\n         {\n             String value = failedConfiguration.getValue( null );\n-            addParameterUsageInfo( value, message );\n+            if ( value != null )\n+            {\n+                addParameterUsageInfo( value, message );\n+            }\n         }\n \n         message.append( \"\\n\\nCause: \" ).append( cce.getMessage() );",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "PR: MNG-1160\nfix up some deployment repository determination logic, and avoid NPE in the process\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@312810 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
        "parent": "https://github.com/apache/maven-2/commit/d3f5c3d7555d76887abef3bf4de5d36e5a75137a",
        "bug_id": "maven-2_39",
        "file": [
            {
                "sha": "f778e731aa7ae1a010428ea867ada3d28e3d84cd",
                "filename": "maven-artifact-ant/sample-build-test.pom",
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample-build-test.pom",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample-build-test.pom",
                "status": "added",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/sample-build-test.pom?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "patch": "@@ -0,0 +1,6 @@\n+<project>\r\n+  <modelVersion>4.0.0</modelVersion>\r\n+  <groupId>org.apache.maven.test</groupId>\r\n+  <artifactId>sample-build-test</artifactId>\r\n+  <version>2.0-beta-4-SNAPSHOT</version>\r\n+</project>\r",
                "deletions": 0
            },
            {
                "sha": "e072640e4ff4919141e506c579427f0c83feffcb",
                "filename": "maven-artifact-ant/sample.build.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample.build.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample.build.xml",
                "status": "modified",
                "changes": 13,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/sample.build.xml?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "patch": "@@ -70,7 +70,7 @@\n \n   <target name=\"foo\" depends=\"initTaskDefs\">\n     <artifact:dependencies pathId=\"dependency.classpath\" filesetId=\"dependency.fileset\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\">\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\">\n         <exclusion groupId=\"junit\" artifactId=\"junit\"/>\n       </dependency>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n@@ -164,7 +164,7 @@\n     <artifact:remoteRepository id=\"deploy.repository\" url=\"scm:svn:${scm.url}\" layout=\"default\"/>\n \n     <artifact:dependencies pathId=\"dependency.classpath\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\"/>\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\"/>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n       <localRepository refid=\"local.repository\"/>\n     </artifact:dependencies>\n@@ -183,7 +183,7 @@\n     <artifact:localRepository id=\"local.repository.scm\" location=\"${basedir}/target/local-repo-scm\" layout=\"default\"/>\n \n     <artifact:dependencies pathId=\"dependency.classpath.scm\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\"/>\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\"/>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n       <localRepository refid=\"local.repository.scm\"/>\n       <remoteRepository refid=\"deploy.repository\"/>\n@@ -202,5 +202,12 @@\n       <pom refid=\"invalid-ref\" />\n     </artifact:dependencies>\n   </target>\n+\n+  <target name=\"test-no-dist-mgmt\" depends=\"initTaskDefs\">\n+    <artifact:deploy file=\"sample-build-test.pom\">\n+      <pom file=\"sample-build-test.pom\" />\n+      <remoteRepository refid=\"deploy.repository\" />\n+    </artifact:deploy>  \n+  </target>\n </project>\n ",
                "deletions": 3
            },
            {
                "sha": "504b2e215ee59f661273dbd5c549923a6c0286ed",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "status": "modified",
                "changes": 45,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.maven.artifact.deployer.ArtifactDeploymentException;\n import org.apache.maven.artifact.metadata.ArtifactMetadata;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n+import org.apache.maven.model.DistributionManagement;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.maven.project.artifact.ProjectArtifactMetadata;\n import org.apache.tools.ant.BuildException;\n@@ -54,35 +55,47 @@ public void execute()\n             throw new BuildException( \"A POM element is required to deploy to the repository\" );\n         }\n \n-        if ( remoteRepository == null )\n+        Artifact artifact = createArtifact( pom );\n+\n+        DistributionManagement distributionManagement = pom.getDistributionManagement();\n+\n+        if ( remoteSnapshotRepository == null && remoteRepository == null )\n         {\n-            if ( pom.getDistributionManagement() == null || pom.getDistributionManagement().getRepository() == null )\n+            if ( distributionManagement != null )\n             {\n-                throw new BuildException( \"A distributionManagement element is required in your POM to deploy\" );\n+                if ( distributionManagement.getSnapshotRepository() != null )\n+                {\n+                    remoteSnapshotRepository = createAntRemoteRepositoryBase(\n+                        distributionManagement.getSnapshotRepository() );\n+                }\n+                if ( distributionManagement.getRepository() != null )\n+                {\n+                    remoteRepository = createAntRemoteRepositoryBase( distributionManagement.getRepository() );\n+                }\n             }\n-\n-            remoteRepository = createAntRemoteRepositoryBase( pom.getDistributionManagement().getRepository() );\n         }\n \n         if ( remoteSnapshotRepository == null )\n         {\n-            if ( pom.getDistributionManagement().getSnapshotRepository() != null )\n-            {\n-                remoteSnapshotRepository = createAntRemoteRepositoryBase(\n-                    pom.getDistributionManagement().getSnapshotRepository() );\n-            }\n+            remoteSnapshotRepository = remoteRepository;\n         }\n \n-        // Deploy the POM\n-        Artifact artifact = createArtifact( pom );\n-\n-        ArtifactRepository deploymentRepository = createRemoteArtifactRepository( remoteRepository );\n-\n-        if ( remoteSnapshotRepository != null && artifact.isSnapshot() )\n+        ArtifactRepository deploymentRepository = null;\n+        if ( artifact.isSnapshot() && remoteSnapshotRepository != null )\n         {\n             deploymentRepository = createRemoteArtifactRepository( remoteSnapshotRepository );\n         }\n+        else if ( remoteRepository != null )\n+        {\n+            deploymentRepository = createRemoteArtifactRepository( remoteRepository );\n+        }\n+        else\n+        {\n+            throw new BuildException(\n+                \"A distributionManagement element or remoteRepository element is required to deploy\" );\n+        }\n \n+        // Deploy the POM\n         boolean isPomArtifact = \"pom\".equals( pom.getPackaging() );\n         if ( !isPomArtifact )\n         {",
                "deletions": 16
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Resolving: MNG-1022...Adding TestProfileInjector to avoid injecting profiles for tests, and still guard against NPEs when profiles exist.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291751 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
        "parent": "https://github.com/apache/maven-2/commit/945af4835915ac254924a8be367925a979f12d78",
        "bug_id": "maven-2_40",
        "file": [
            {
                "sha": "cc00d4ed4574a197746af0e0793d273fd68cc71f",
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "status": "modified",
                "changes": 23,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "patch": "@@ -23,6 +23,7 @@\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n import java.io.File;\n+import java.util.Iterator;\n import java.util.List;\n \n /**\n@@ -53,12 +54,22 @@ public void testProjectBuilder()\n \n         // Plugin0 [plexus]\n \n-        Plugin plugin = (Plugin) plugins.get( 0 );\n-\n-        assertEquals( \"org.apache.maven.plugins\", plugin.getGroupId() );\n-\n-        assertEquals( \"maven-plexus-plugin\", plugin.getArtifactId() );\n-\n+        String key = \"org.apache.maven.plugins:maven-plexus-plugin\";\n+        \n+        Plugin plugin = null;\n+        for ( Iterator it = plugins.iterator(); it.hasNext(); )\n+        {\n+            Plugin check = (Plugin) it.next();\n+            \n+            if ( key.equals( check.getKey() ) )\n+            {\n+                plugin = check;\n+                break;\n+            }\n+        }\n+        \n+        assertNotNull( plugin );\n+        \n         assertEquals( \"1.0\", plugin.getVersion() );\n \n         Xpp3Dom configuration = (Xpp3Dom) plugin.getConfiguration();",
                "deletions": 6
            },
            {
                "sha": "5e759de54d32c58e150457afc9b6b39c5c385286",
                "filename": "maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "status": "added",
                "changes": 15,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "patch": "@@ -0,0 +1,15 @@\n+package org.apache.maven.project.injection;\n+\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Profile;\n+\n+public class TestProfileInjector\n+    implements ProfileInjector\n+{\n+\n+    public void inject( Profile profile, Model model )\n+    {\n+        // do nothing.\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "e8192d2bc406ef3f71224a42abd555c84d9f845a",
                "filename": "maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "patch": "@@ -14,6 +14,11 @@\n       </requirements>\n     </component>\n     -->\n+    <component>\n+      <role>org.apache.maven.project.injection.ProfileInjector</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.injection.TestProfileInjector</implementation>\n+    </component>\n     <component>\n       <role>org.apache.maven.project.TestArtifactResolver</role>\n       <implementation>org.apache.maven.project.TestArtifactResolver</implementation>\n@@ -43,6 +48,10 @@\n         <requirement>\n           <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>\n         </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ProfileInjector</role>\n+          <role-hint>test</role-hint>\n+        </requirement>\n         <requirement>\n           <role>org.apache.maven.project.interpolation.ModelInterpolator</role>\n         </requirement>",
                "deletions": 0
            },
            {
                "sha": "e8192d2bc406ef3f71224a42abd555c84d9f845a",
                "filename": "maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "status": "added",
                "changes": 79,
                "additions": 79,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "patch": "@@ -0,0 +1,79 @@\n+<plexus>\n+  <components>\n+    <!-- Due to PLX-108, have to work around it...\n+    <component>\n+      <role>org.apache.maven.artifact.ArtifactResolver</role>\n+      <implementation>org.apache.maven.project.TestArtifactResolvertion>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.artifact.manager.WagonManager</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+    -->\n+    <component>\n+      <role>org.apache.maven.project.injection.ProfileInjector</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.injection.TestProfileInjector</implementation>\n+    </component>\n+    <component>\n+      <role>org.apache.maven.project.TestArtifactResolver</role>\n+      <implementation>org.apache.maven.project.TestArtifactResolver</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.artifact.manager.WagonManager</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+    <component>\n+      <role>org.apache.maven.project.MavenProjectBuilder</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.TestProjectBuilder</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.profiles.MavenProfilesBuilder</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ProfileInjector</role>\n+          <role-hint>test</role-hint>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.interpolation.ModelInterpolator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.inheritance.ModelInheritanceAssembler</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.validation.ModelValidator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.path.PathTranslator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+  </components>\n+</plexus>\n\\ No newline at end of file",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-695: Added more tests on anonymousConnection, devConnection and scmUrl to prevent NPE. Added the test case num 11.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@230612 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/08da2ff2484d8ba053883e98273af8c25d37d7d1",
        "parent": "https://github.com/apache/maven-2/commit/f862da60b6b5487af1006688e631123ebde20e0e",
        "bug_id": "maven-2_41",
        "file": [
            {
                "sha": "d94905136a33afcd2ccf984ed9e28590608493c2",
                "filename": "maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "blob_url": "https://github.com/apache/maven-2/blob/08da2ff2484d8ba053883e98273af8c25d37d7d1/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "raw_url": "https://github.com/apache/maven-2/raw/08da2ff2484d8ba053883e98273af8c25d37d7d1/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "status": "modified",
                "changes": 35,
                "additions": 32,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java?ref=08da2ff2484d8ba053883e98273af8c25d37d7d1",
                "patch": "@@ -196,6 +196,19 @@ public void renderBody()\n             anonymousConnection = scm.getConnection();\n             devConnection = scm.getDeveloperConnection();\n \n+            if ( StringUtils.isEmpty( anonymousConnection ) &&\n+                StringUtils.isEmpty( devConnection ) &&\n+                StringUtils.isEmpty( scm.getUrl() ) )\n+            {\n+                startSection( getTitle() );\n+\n+                paragraph( getBundle( locale ).getString( \"report.scm.noscm\" ) );\n+\n+                endSection();\n+\n+                return;\n+            }\n+            \n             ScmRepository anonymousRepository = getScmRepository( anonymousConnection );\n             ScmRepository devRepository = getScmRepository( devConnection );\n \n@@ -264,7 +277,7 @@ private void renderWebAccesSection( String scmUrl )\n         {\n             startSection( getBundle( locale ).getString( \"report.scm.webaccess.title\" ) );\n \n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.webaccess.nourl\" ) );\n             }\n@@ -288,7 +301,8 @@ private void renderAnonymousAccessSection( ScmRepository anonymousRepository )\n         {\n             if ( ( isScmSystem( anonymousRepository, \"clearcase\" ) )\n                 || ( isScmSystem( anonymousRepository, \"perforce\" ) )\n-                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) )\n+                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) \n+                || ( StringUtils.isEmpty( anonymousConnection ) ) )\n             {\n                 return;\n             }\n@@ -313,6 +327,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.anonymousaccess.general.intro\" ) );\n \n+                if ( anonymousConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( anonymousConnection.substring( 4 ) );\n             }\n \n@@ -326,6 +345,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n          */\n         private void renderDeveloperAccessSection( ScmRepository devRepository )\n         {\n+            if ( StringUtils.isEmpty( devConnection ) )\n+            {\n+                return;\n+            }\n+            \n             startSection( getBundle( locale ).getString( \"report.scm.devaccess.title\" ) );\n \n             if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"clearcase\" ) ) )\n@@ -365,6 +389,11 @@ else if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"svn\" ) ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.devaccess.general.intro\" ) );\n \n+                if ( devConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( devConnection.substring( 4 ) );\n             }\n \n@@ -622,7 +651,7 @@ private void developerAccessSVN( SvnScmProviderRepository svnRepo )\n          */\n         public ScmRepository getScmRepository( String scmUrl )\n         {\n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 return null;\n             }",
                "deletions": 3
            },
            {
                "sha": "facf24045c4ab06d58c15f407ef8a29ada47db94",
                "filename": "maven-plugins/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/08da2ff2484d8ba053883e98273af8c25d37d7d1/maven-plugins/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/08da2ff2484d8ba053883e98273af8c25d37d7d1/maven-plugins/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "status": "added",
                "changes": 56,
                "additions": 56,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml?ref=08da2ff2484d8ba053883e98273af8c25d37d7d1",
                "patch": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+\n+<!--\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.report.projectinfo.test11</groupId>\n+  <artifactId>project-info-reports-plugin-test11</artifactId>\n+  <packaging>jar</packaging>\n+  <version>1.0-SNAPSHOT</version>\n+  <inceptionYear>2005</inceptionYear>\n+  <name>Maven ProjectInfo Report Test11</name>\n+  <description>MNG-695 developerConnection is empty</description>\n+  <url>http://maven.apache.org</url>\n+  <scm>\n+    <connection>scm:cvs:pserver:anoncvs@cvs.apache.org:/home/cvspublic:maven-plugins/dist</connection>\n+    <developerConnection/>\n+    <url>http://cvs.apache.org/</url>\n+  </scm>\n+  <developers>\n+    <developer>\n+      <id>vsiveton</id>\n+      <name>Vincent Siveton</name>\n+      <email>vsiveton@apache.org</email>\n+      <organization>Apache Software Foundation</organization>\n+      <roles>\n+        <role>Java Developer</role>\n+      </roles>\n+      <timezone>-5</timezone>\n+    </developer>\n+  </developers>\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-project-info-reports-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+</project>",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Upgraded to plexus-site-renderer-1.0-alpha-2 and corrected a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219253 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/5f412ebb409d507dc52a7239e133e3735a6b4b30",
        "parent": "https://github.com/apache/maven-2/commit/21e050e5fa6c92e0b6bcbba46e4b820093c531c3",
        "bug_id": "maven-2_42",
        "file": [
            {
                "sha": "cd3c623a255e3f442d5456da939d04a8a33a47ac",
                "filename": "maven-plugins/maven-site-plugin/pom.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/pom.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/pom.xml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-site-plugin/pom.xml?ref=5f412ebb409d507dc52a7239e133e3735a6b4b30",
                "patch": "@@ -48,7 +48,7 @@\n     <dependency>\n       <groupId>plexus</groupId>\n       <artifactId>plexus-site-renderer</artifactId>\n-      <version>1.0-alpha-1</version>\n+      <version>1.0-alpha-2-20050715.080727-2</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven.wagon</groupId>",
                "deletions": 1
            },
            {
                "sha": "a407dde7af0201840ca5a8016bdbb3825b88fff1",
                "filename": "maven-plugins/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java",
                "blob_url": "https://github.com/apache/maven-2/blob/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java",
                "raw_url": "https://github.com/apache/maven-2/raw/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java?ref=5f412ebb409d507dc52a7239e133e3735a6b4b30",
                "patch": "@@ -548,6 +548,11 @@ public boolean accept(File file) {\n             }\n         });\n         \n+        if ( ( directories == null ) || ( directories.length  == 0 ) )\n+        {\n+            return false;\n+        }\n+        \n         List indexFound = new ArrayList();\n         for ( int i = 0; i < directories.length; i++ )\n         {",
                "deletions": 0
            },
            {
                "sha": "ece47f98f36164571e9b137b4063cc34251f6f7b",
                "filename": "maven-plugins/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm",
                "blob_url": "https://github.com/apache/maven-2/blob/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm",
                "raw_url": "https://github.com/apache/maven-2/raw/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm",
                "status": "modified",
                "changes": 59,
                "additions": 28,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm?ref=5f412ebb409d507dc52a7239e133e3735a6b4b30",
                "patch": "@@ -39,27 +39,26 @@\n   #end\n #end\n \n+#macro ( displayTree $display $item)\n+  #if ( $item.getChildren() && $item.getChildCount() > 0 )\n+    #foreach( $subitem in $item.getChildren() )\n+      #set ( $subitemHref = $PathTool.calculateLink( $subitem.getAttribute( \"href\" ), $relativePath ) )\n+      #set ( $subitemHref = $$subitemHref.replaceAll( \"\\\\\", \"/\" ) )\n+\n+      #if ( $currentFileName == $subitemHref ) \n+        #set ( $display = true )\n+      #end\n+          \n+      #displayTree($display $subitem)\n+    #end\n+  #end\n+#end\n+        \n #macro ( menuItem $item )\n   #set ( $collapse = \"none\" )\n   #set ( $currentItemHref = $PathTool.calculateLink( $item.getAttribute( \"href\" ), $relativePath ) )\n   #set ( $currentFileName = $currentFileName.replaceAll( \"\\\\\", \"/\" ) )\n   #set ( $currentItemHref = $currentItemHref.replaceAll( \"\\\\\", \"/\" ) )\n-  \n-  #set ( $currentFileNameLastSlash = $currentFileName.lastIndexOf( \"/\" ) )\n-  #if ( $currentFileNameLastSlash != -1)\n-    #set ( $currentFileNameTmp = $currentFileName.substring( 0, $currentFileNameLastSlash ) )\n-  #else\n-    #set ( $currentFileNameTmp = $currentFileName.substring( 0, $currentFileName.lengh() ) )\n-  #end\n-\n-  #set ( $currentItemHrefLastSlash = $currentItemHref.lastIndexOf( \"/\" ) )\n-  #if ( $currentItemHrefLastSlash != -1)\n-    #set ( $currentItemHrefTmp = $currentItemHref.substring( 0, $currentItemHrefLastSlash ) )\n-  #else\n-    #set ( $currentItemHrefTmp = $currentItemHref.substring( 0, $currentItemHref.lengh() ) )\n-  #end\n-\n-  #set ( $tree = $currentFileNameTmp && $currentItemHrefTmp && $currentFileNameTmp.startsWith( $currentItemHrefTmp ) )\n \n   #if ( $item.getChildCount() > 0 )\n     #if ( ( $item.getAttribute( \"collapse\" ) ) && ( $item.getAttribute( \"collapse\" ).equalsIgnoreCase( \"false\" ) ) )\n@@ -68,31 +67,29 @@\n       ## By default collapsed\n       #set ( $collapse = \"collapsed\" )\n     #end\n-\n-    #if ( $currentFileName == $currentItemHref )\n-      #set ( $collapse = \"expanded\" )\n-    #end\n     \n-    #if ( $tree )\n+    #if ( $currentFileName == $currentItemHref ) \n       #set ( $collapse = \"expanded\" )\n     #end\n   #end\n-  <li class=\"$collapse\" $currentFileName $currentItemHref>\n+  <li class=\"$collapse\">\n     #if ( $currentFileName == $currentItemHref ) \n       <strong><a href=\"$currentItemHref\">$item.getAttribute( \"name\" )</a></strong>\n     #else\n       <a href=\"$currentItemHref\">$item.getAttribute( \"name\" )</a>\n     #end\n   </li>\n-  #if ( $item.getChildren() )\n-    #if ( $item.getChildCount() > 0 )\n-      #if ( $collapse == \"expanded\" || $tree )\n-        <ul>\n-          #foreach( $subitem in $item.getChildren() )\n-            #menuItem( $subitem )\n-          #end\n-        </ul>\n-      #end\n+  #if ( $item.getChildren() && $item.getChildCount() > 0 )\n+    #set ( $display = false )\n+    #set ( $itemTmp = $item )\n+    #displayTree($display $itemTmp)\n+\n+    #if ( $collapse == \"expanded\" || $display )\n+      <ul>\n+        #foreach( $subitem in $item.getChildren() )\n+          #menuItem( $subitem )\n+        #end\n+      </ul>\n     #end\n   #end\n #end",
                "deletions": 31
            },
            {
                "sha": "2cb261a6269fc45291526ee7950f71008a9b92ae",
                "filename": "maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt",
                "blob_url": "https://github.com/apache/maven-2/blob/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt",
                "raw_url": "https://github.com/apache/maven-2/raw/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt?ref=5f412ebb409d507dc52a7239e133e3735a6b4b30",
                "patch": "@@ -9,4 +9,4 @@\n \n Site Plugin Index\n \n- From /theta/index.apt\n+ From /gamma/index.apt",
                "deletions": 1
            },
            {
                "sha": "a7217b32685496ef88f433a8ff4dd7dd77c87c43",
                "filename": "maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt",
                "blob_url": "https://github.com/apache/maven-2/blob/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt",
                "raw_url": "https://github.com/apache/maven-2/raw/5f412ebb409d507dc52a7239e133e3735a6b4b30/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt?ref=5f412ebb409d507dc52a7239e133e3735a6b4b30",
                "patch": "@@ -9,4 +9,4 @@\n  \n Site Plugin Index\n \n- From /theta/two/index.apt\n+ From /gamma/two/index.apt",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o Fixing a small bug that would cause a NPE if a plugin doesn't contain any mojos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@180000 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/d34ec0926af852258fe24a44615e85c226794a05",
        "parent": "https://github.com/apache/maven-2/commit/40d47927dee5a419ad71add6a80789bfd07e52ee",
        "bug_id": "maven-2_43",
        "file": [
            {
                "sha": "44fe5629f4a5fc9c63b2ba2430c19880a48b6e44",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/d34ec0926af852258fe24a44615e85c226794a05/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/d34ec0926af852258fe24a44615e85c226794a05/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 39,
                "additions": 21,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=d34ec0926af852258fe24a44615e85c226794a05",
                "patch": "@@ -251,30 +251,33 @@ private void processPluginPhases( Plugin plugin, MavenSession session, Map phase\n \n             Map goalMap = plugin.getGoalsAsMap();\n             \n-            for ( Iterator j = pluginDescriptor.getMojos().iterator(); j.hasNext(); )\n+            if ( pluginDescriptor.getMojos() != null )\n             {\n-                MojoDescriptor mojoDescriptor = (MojoDescriptor) j.next();\n-\n-                // TODO: remove later\n-                if ( mojoDescriptor.getGoal() == null )\n+                for ( Iterator j = pluginDescriptor.getMojos().iterator(); j.hasNext(); )\n                 {\n-                    throw new LifecycleExecutionException(\n-                        \"The plugin \" + artifactId + \" was built with an older version of Maven\" );\n-                }\n+                    MojoDescriptor mojoDescriptor = (MojoDescriptor) j.next();\n+\n+                    // TODO: remove later\n+                    if ( mojoDescriptor.getGoal() == null )\n+                    {\n+                        throw new LifecycleExecutionException(\n+                            \"The plugin \" + artifactId + \" was built with an older version of Maven\" );\n+                    }\n                 \n-                Goal goal = (Goal) goalMap.get( mojoDescriptor.getGoal() );\n+                    Goal goal = (Goal) goalMap.get( mojoDescriptor.getGoal() );\n \n-                if( goalMap.isEmpty() )\n-                {\n-                    configureMojoPhaseBinding( mojoDescriptor, phaseMap, session.getSettings() );\n-                }\n-                else if ( goal != null )\n-                {\n-                    // We have to check to see that the inheritance rules have been applied before binding this mojo.\n-                    if( goal.isInheritanceApplied() || mojoDescriptor.isInheritedByDefault() )\n+                    if( goalMap.isEmpty() )\n                     {\n                         configureMojoPhaseBinding( mojoDescriptor, phaseMap, session.getSettings() );\n                     }\n+                    else if ( goal != null )\n+                    {\n+                        // We have to check to see that the inheritance rules have been applied before binding this mojo.\n+                        if( goal.isInheritanceApplied() || mojoDescriptor.isInheritedByDefault() )\n+                        {\n+                            configureMojoPhaseBinding( mojoDescriptor, phaseMap, session.getSettings() );\n+                        }\n+                    }\n                 }\n             }\n         }\n@@ -450,4 +453,4 @@ public List getPhases()\n         return phases;\n     }\n \n-}\n\\ No newline at end of file\n+}",
                "deletions": 18
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o Fixing a small bug that would cause a NPE if a plugin doesn't contain any mojos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@179987 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/40d47927dee5a419ad71add6a80789bfd07e52ee",
        "parent": "https://github.com/apache/maven-2/commit/177692f82ca6659ba6022849ae991371e76ac3b3",
        "bug_id": "maven-2_44",
        "file": [
            {
                "sha": "b27782b76833fc304a6affd0fdf6aad0370e39a1",
                "filename": "maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "blob_url": "https://github.com/apache/maven-2/blob/40d47927dee5a419ad71add6a80789bfd07e52ee/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "raw_url": "https://github.com/apache/maven-2/raw/40d47927dee5a419ad71add6a80789bfd07e52ee/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "status": "modified",
                "changes": 11,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java?ref=40d47927dee5a419ad71add6a80789bfd07e52ee",
                "patch": "@@ -76,10 +76,13 @@ public void execute( File destinationDirectory, PluginDescriptor pluginDescripto\n             \n             w.startElement( \"mojos\" );\n \n-            for ( Iterator it = pluginDescriptor.getMojos().iterator(); it.hasNext(); )\n+            if ( pluginDescriptor.getMojos() != null )\n             {\n-                MojoDescriptor descriptor = (MojoDescriptor) it.next();\n-                processMojoDescriptor( descriptor, w );\n+                for ( Iterator it = pluginDescriptor.getMojos().iterator(); it.hasNext(); )\n+                {\n+                    MojoDescriptor descriptor = (MojoDescriptor) it.next();\n+                    processMojoDescriptor( descriptor, w );\n+                }\n             }\n \n             w.endElement();\n@@ -362,4 +365,4 @@ public void element( XMLWriter w, String name, String value )\n \n         w.endElement();\n     }\n-}\n\\ No newline at end of file\n+}",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "avoid NPE if there are not report plugins defined in the POM when generating the site.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168565 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/3f031d5722ec5799c1fb72711867dda8b02b4b23",
        "parent": "https://github.com/apache/maven-2/commit/57284e462cb9f55931774a5b9caa453d7deb42e7",
        "bug_id": "maven-2_45",
        "file": [
            {
                "sha": "e2d4ddda3aa43dd60b05eed9250371067b85a0a5",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "patch": "@@ -200,7 +200,7 @@ private void injectHandlerPluginConfiguration( MavenProject project, String grou\n     private void processPluginConfiguration( MavenProject project, MavenSession mavenSession, Map phaseMap )\n         throws LifecycleExecutionException, ArtifactResolutionException\n     {\n-        for ( Iterator i = project.getPlugins().iterator(); i.hasNext(); )\n+        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext(); )\n         {\n             Plugin plugin = (Plugin) i.next();\n ",
                "deletions": 1
            },
            {
                "sha": "ad3a8b46ee10793c59520aa7ab717a2112889196",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "patch": "@@ -152,7 +152,7 @@ public PluginDescriptor verifyPlugin( String groupId, String artifactId, String\n \n             org.apache.maven.model.Plugin pluginConfig = null;\n \n-            for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )\n+            for ( Iterator it = project.getBuildPlugins().iterator(); it.hasNext(); )\n             {\n                 org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n ",
                "deletions": 1
            },
            {
                "sha": "3bfdc79479b8f8f2c377b21e8b055376dae5edf5",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "status": "modified",
                "changes": 13,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "patch": "@@ -28,6 +28,7 @@\n import java.io.File;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.List;\n \n /**\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl</a>\n@@ -84,11 +85,15 @@ public Object evaluate( String expr )\n             try\n             {\n                 PluginManager pluginManager = (PluginManager) context.lookup( role );\n-                for ( Iterator it = context.getProject().getReports().getPlugins().iterator(); it.hasNext(); )\n+                List reportPlugins = context.getProject().getReportPlugins();\n+                if ( reportPlugins != null )\n                 {\n-                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n-                    pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n-                                                context );\n+                    for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n+                    {\n+                        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n+                        pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n+                                                    context );\n+                    }\n                 }\n             }\n             catch ( ComponentLookupException cle )",
                "deletions": 4
            },
            {
                "sha": "ed1bd73b79953432f967eb9448833efcaa9572ae",
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "status": "modified",
                "changes": 16,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "patch": "@@ -677,7 +677,16 @@ public List getRepositories()\n     // Plugins\n     // ----------------------------------------------------------------------\n \n-    public List getPlugins()\n+    public List getReportPlugins()\n+    {\n+        if ( model.getReports() == null )\n+        {\n+            return null;\n+        }\n+        return model.getReports().getPlugins();\n+\n+    }\n+    public List getBuildPlugins()\n     {\n         if ( model.getBuild() == null )\n         {\n@@ -811,9 +820,9 @@ public Xpp3Dom getGoalConfiguration( String pluginGroupId, String pluginArtifact\n         // for now I have to iterate through and see what we have.\n         // ----------------------------------------------------------------------\n \n-        if ( getPlugins() != null )\n+        if ( getBuildPlugins() != null )\n         {\n-            for ( Iterator iterator = getPlugins().iterator(); iterator.hasNext(); )\n+            for ( Iterator iterator = getBuildPlugins().iterator(); iterator.hasNext(); )\n             {\n                 Plugin plugin = (Plugin) iterator.next();\n \n@@ -845,4 +854,5 @@ public List getPluginRepositories()\n     {\n         return model.getPluginRepositories();\n     }\n+\n }",
                "deletions": 3
            },
            {
                "sha": "d29e424cab4fd689393e6035a7e21e4682fd3d89",
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "patch": "@@ -49,7 +49,7 @@ public void testProjectBuilder()\n         // Plugins\n         // ----------------------------------------------------------------------\n \n-        List plugins = project.getPlugins();\n+        List plugins = project.getBuildPlugins();\n \n         // Plugin0 [plexus]\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "PR: MNG-316\nSubmitted by:\tKenney Westerhof\nReviewed by:\tBrett Porter\nfix NPE when there is no default plugin configuration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163981 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/06ebdedc0cc8998886e8f5ed00da9febe1f42b2a",
        "parent": "https://github.com/apache/maven-2/commit/d23c299e0f41df9c7a8df251d38d47784e9bbcd5",
        "bug_id": "maven-2_46",
        "file": [
            {
                "sha": "85078ad0b6a6b59b10c3e43304cdcf610afecf80",
                "filename": "maven-core/src/main/java/org/apache/maven/util/Xpp3DomUtils.java",
                "blob_url": "https://github.com/apache/maven-2/blob/06ebdedc0cc8998886e8f5ed00da9febe1f42b2a/maven-core/src/main/java/org/apache/maven/util/Xpp3DomUtils.java",
                "raw_url": "https://github.com/apache/maven-2/raw/06ebdedc0cc8998886e8f5ed00da9febe1f42b2a/maven-core/src/main/java/org/apache/maven/util/Xpp3DomUtils.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/util/Xpp3DomUtils.java?ref=06ebdedc0cc8998886e8f5ed00da9febe1f42b2a",
                "patch": "@@ -30,6 +30,11 @@ private static void mergeIntoXpp3Dom( Xpp3Dom dominant, Xpp3Dom recessive )\n     {\n         // TODO: how to mergeXpp3Dom lists rather than override?\n         // TODO: share this as some sort of assembler, implement a walk interface?\n+        if ( recessive == null )\n+        {\n+            return;\n+        }\n+\n         Xpp3Dom[] children = recessive.getChildren();\n         for ( int i = 0; i < children.length; i++ )\n         {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o Fixing license\no Prevent a NPE with a better exception.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163211 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/985d5c867c4b75707a4b27e00fe5979da2bc9902",
        "parent": "https://github.com/apache/maven-2/commit/f279ac17c273f14221ef6b8b2c88f215743a378c",
        "bug_id": "maven-2_47",
        "file": [
            {
                "sha": "4372d20bff9b12a95e8d8ff72b14edced2e8e4e7",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/985d5c867c4b75707a4b27e00fe5979da2bc9902/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/985d5c867c4b75707a4b27e00fe5979da2bc9902/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 41,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=985d5c867c4b75707a4b27e00fe5979da2bc9902",
                "patch": "@@ -1,16 +1,28 @@\n package org.apache.maven.plugin;\n \n /*\n- * Copyright 2001-2004 The Apache Software Foundation. Licensed under the Apache\n- * License, Version 2.0 (the \"License\"); you may not use this file except in\n- * compliance with the License. You may obtain a copy of the License at\n- * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\n- * or agreed to in writing, software distributed under the License is\n- * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the specific language\n- * governing permissions and limitations under the License.\n+ * Copyright 2001-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.DefaultArtifact;\n import org.apache.maven.artifact.MavenMetadataSource;\n@@ -22,6 +34,7 @@\n import org.apache.maven.plugin.descriptor.MojoDescriptor;\n import org.apache.maven.plugin.descriptor.PluginDescriptor;\n import org.apache.maven.plugin.descriptor.PluginDescriptorBuilder;\n+\n import org.codehaus.plexus.ArtifactEnabledContainer;\n import org.codehaus.plexus.PlexusConstants;\n import org.codehaus.plexus.PlexusContainer;\n@@ -35,13 +48,6 @@\n import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;\n import org.codehaus.plexus.util.dag.CycleDetectedException;\n \n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n public class DefaultPluginManager\n     extends AbstractLogEnabled\n     implements PluginManager, ComponentDiscoveryListener, Initializable, Contextualizable\n@@ -183,6 +189,11 @@ public void verifyPluginForGoal( String goalName ) throws Exception\n             // Now, we need to resolve the plugins for this goal's prereqs.\n             MojoDescriptor mojoDescriptor = getMojoDescriptor( goalName );\n \n+            if ( mojoDescriptor == null )\n+            {\n+                throw new Exception( \"Could not find a mojo descriptor for goal: '\" + goalName + \"'.\" );\n+            }\n+\n             List prereqs = mojoDescriptor.getPrereqs();\n \n             if ( prereqs != null )",
                "deletions": 15
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Taking another shot at cleaning up the NPE related to wagon beta-3 and the digest that goes null on a transfer error...this time, remove the checksum observers before verifying the checksum(s).\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@674876 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/017e552933d16a99d6798354fd862a026eb8a631",
        "parent": "https://github.com/apache/maven-2/commit/bf05393deb370a045c582312e347d9f5a93c5e64",
        "bug_id": "maven-2_48",
        "file": [
            {
                "sha": "6d1ec62c8861e066df862c0dbfcb764a66600829",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=017e552933d16a99d6798354fd862a026eb8a631",
                "patch": "@@ -468,6 +468,16 @@ private void getRemoteFile( ArtifactRepository repository,\n \n                     if ( downloaded )\n                     {\n+                        if ( sha1ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( sha1ChecksumObserver );\n+                        }\n+\n+                        if ( md5ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( md5ChecksumObserver );\n+                        }\n+\n                         // keep the checksum files from showing up on the download monitor...\n                         if ( downloadMonitor != null )\n                         {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-3495] avoid a potential NPE in the repository hashcode during exceptions for artifact resolution errors if settings.xml is malformed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@643880 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
        "parent": "https://github.com/apache/maven-2/commit/64110eb9164016bf5b5c5c90ef90c386be066aa6",
        "bug_id": "maven-2_49",
        "file": [
            {
                "sha": "ae2813116c181883a95acc47846c9ea17a84a7fd",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "status": "modified",
                "changes": 9,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
                "patch": "@@ -596,7 +596,14 @@ public ArtifactRepository getMirrorRepository( ArtifactRepository repository )\n         ArtifactRepository mirror = getMirror( repository );\n         if ( mirror != null )\n         {\n-            repository = repositoryFactory.createArtifactRepository( mirror.getId(), mirror.getUrl(),\n+            String id = mirror.getId();\n+            if ( id == null )\n+            {\n+                // TODO: this should be illegal in settings.xml\n+                id = repository.getId();\n+            }\n+\n+            repository = repositoryFactory.createArtifactRepository( id, mirror.getUrl(),\n                                                                      repository.getLayout(), repository.getSnapshots(),\n                                                                      repository.getReleases() );\n         }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "MNG-2746 fixing an obvious NPE when parent path is a directory and pom is not found. Also reported in MNGECLIPSE-184 and CONTINUUM-1000\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@494084 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/a7ea4e92d404b7e21be20b2cb61455d590153895",
        "parent": "https://github.com/apache/maven-2/commit/413ba58306818f9cb54b9e408c704404491cdc11",
        "bug_id": "maven-2_50",
        "file": [
            {
                "sha": "7ed2f63751b9e26673dc5f5d26c805ed3dd92dfe",
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "blob_url": "https://github.com/apache/maven-2/blob/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "raw_url": "https://github.com/apache/maven-2/raw/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "status": "modified",
                "changes": 20,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a7ea4e92d404b7e21be20b2cb61455d590153895",
                "patch": "@@ -1096,20 +1096,22 @@ else if ( StringUtils.isEmpty( parentModel.getVersion() ) )\n                         {\n                             getLogger().debug( \"Parent-POM: \" + parentModel.getId() + \" for project: \" + project.getId() + \" cannot be loaded from relative path: \" + parentDescriptor + \"; path does not exist.\" );\n                         }\n-\n-                        parentDescriptor = null;\n                     }\n                 }\n \n-                try\n-                {\n-                    parentDescriptor = parentDescriptor.getCanonicalFile();\n-                }\n-                catch ( IOException e )\n+                if ( parentDescriptor != null )\n                 {\n-                    getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\", e );\n+                    try\n+                    {\n+                        parentDescriptor = parentDescriptor.getCanonicalFile();\n+                    }\n+                    catch ( IOException e )\n+                    {\n+                        getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\",\n+                                           e );\n \n-                    parentDescriptor = null;\n+                        parentDescriptor = null;\n+                    }\n                 }\n \n                 if ( parentDescriptor != null && parentDescriptor.exists() )",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-2146] Adding code to guard against NPE when maven.home and org.apache.maven.global-plugin-registry not specified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@385635 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/c8212b2875955b1bbcf2ce9862a45bb619f85c09",
        "parent": "https://github.com/apache/maven-2/commit/a902f06864cd10714dbfa84047383d541f2c01b4",
        "bug_id": "maven-2_51",
        "file": [
            {
                "sha": "fd543baeb509accb0dc35c675de54ea9b8bfc1e9",
                "filename": "maven-plugin-registry/src/main/java/org/apache/maven/plugin/registry/DefaultPluginRegistryBuilder.java",
                "blob_url": "https://github.com/apache/maven-2/blob/c8212b2875955b1bbcf2ce9862a45bb619f85c09/maven-plugin-registry/src/main/java/org/apache/maven/plugin/registry/DefaultPluginRegistryBuilder.java",
                "raw_url": "https://github.com/apache/maven-2/raw/c8212b2875955b1bbcf2ce9862a45bb619f85c09/maven-plugin-registry/src/main/java/org/apache/maven/plugin/registry/DefaultPluginRegistryBuilder.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugin-registry/src/main/java/org/apache/maven/plugin/registry/DefaultPluginRegistryBuilder.java?ref=c8212b2875955b1bbcf2ce9862a45bb619f85c09",
                "patch": "@@ -58,7 +58,8 @@ public void initialize()\n \n         getLogger().debug( \"Building Maven user-level plugin registry from: '\" + userRegistryFile.getAbsolutePath() + \"'\" );\n \n-        if ( System.getProperty( \"maven.home\" ) != null )\n+        if ( System.getProperty( \"maven.home\" ) != null ||\n+             System.getProperty( MavenPluginRegistryBuilder.ALT_GLOBAL_PLUGIN_REG_LOCATION ) != null )\n         {\n             globalRegistryFile = getFile( globalRegistryPath, \"maven.home\", MavenPluginRegistryBuilder.ALT_GLOBAL_PLUGIN_REG_LOCATION );\n \n@@ -94,7 +95,7 @@ private PluginRegistry readPluginRegistry( File registryFile )\n     {\n         PluginRegistry registry = null;\n \n-        if ( registryFile.exists() && registryFile.isFile() )\n+        if ( registryFile != null && registryFile.exists() && registryFile.isFile() )\n         {\n             FileReader reader = null;\n             try",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "revert previous change that introduced an unnecessary public API, and use verifyPlugin method to ensure the plugin is always initialised, avoiding an NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@357626 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/7b90bef2055f3d5595b9b3d3916ad349e8601868",
        "parent": "https://github.com/apache/maven-2/commit/c884a49fd8da215bfa05f7d051dc23cecb1723c5",
        "bug_id": "maven-2_52",
        "file": [
            {
                "sha": "9405579c1ffca5540db20133ac36c6ac86c26d71",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 59,
                "additions": 31,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=7b90bef2055f3d5595b9b3d3916ad349e8601868",
                "patch": "@@ -482,7 +482,8 @@ private void executeStandaloneGoal( String task, Stack forkEntryPoints, MavenSes\n     {\n         // guaranteed to come from the CLI and not be part of a phase\n         MojoDescriptor mojoDescriptor = getMojoDescriptor( task, session, project, task, true );\n-        executeGoals( Collections.singletonList( new MojoExecution( mojoDescriptor ) ), forkEntryPoints, session, project );\n+        executeGoals( Collections.singletonList( new MojoExecution( mojoDescriptor ) ), forkEntryPoints, session,\n+                      project );\n     }\n \n     private void executeGoals( List goals, Stack forkEntryPoints, MavenSession session, MavenProject project )\n@@ -703,7 +704,8 @@ private List getReports( ReportPlugin reportPlugin, ReportSet reportSet, MavenPr\n         return reports;\n     }\n \n-    private void forkLifecycle( MojoDescriptor mojoDescriptor, Stack ancestorLifecycleForkers, MavenSession session, MavenProject project )\n+    private void forkLifecycle( MojoDescriptor mojoDescriptor, Stack ancestorLifecycleForkers, MavenSession session,\n+                                MavenProject project )\n         throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n     {\n         PluginDescriptor pluginDescriptor = mojoDescriptor.getPluginDescriptor();\n@@ -730,7 +732,8 @@ private void forkLifecycle( MojoDescriptor mojoDescriptor, Stack ancestorLifecyc\n         }\n     }\n \n-    private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntryPoints, MavenSession session, MavenProject project )\n+    private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntryPoints, MavenSession session,\n+                                       MavenProject project )\n         throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n     {\n         forkEntryPoints.push( mojoDescriptor );\n@@ -776,9 +779,9 @@ private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntr\n                     Phase phase = (Phase) i.next();\n                     for ( Iterator j = phase.getExecutions().iterator(); j.hasNext(); )\n                     {\n-                        Execution e = (Execution) j.next();\n+                        Execution exec = (Execution) j.next();\n \n-                        for ( Iterator k = e.getGoals().iterator(); k.hasNext(); )\n+                        for ( Iterator k = exec.getGoals().iterator(); k.hasNext(); )\n                         {\n                             String goal = (String) k.next();\n \n@@ -817,20 +820,17 @@ private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntr\n \n                                 String groupId = s[0];\n                                 String artifactId = s[1];\n-                                String externalGoal = s[2];\n-                                lifecycleGoal = externalGoal;\n-\n-                                try\n-                                {\n-                                    lifecyclePluginDescriptor = pluginManager.getPluginDescriptor( groupId,\n-                                                                                                   artifactId,\n-                                                                                                   project,\n-                                                                                                   session.getSettings(),\n-                                                                                                   session.getLocalRepository() );\n-                                }\n-                                catch ( Exception ex )\n+                                lifecycleGoal = s[2];\n+\n+                                Plugin plugin = new Plugin();\n+                                plugin.setGroupId( groupId );\n+                                plugin.setArtifactId( artifactId );\n+                                lifecyclePluginDescriptor = verifyPlugin( plugin, project, session.getSettings(),\n+                                                                          session.getLocalRepository() );\n+                                if ( lifecyclePluginDescriptor == null )\n                                 {\n-                                    throw new LifecycleExecutionException( ex );\n+                                    throw new LifecycleExecutionException(\n+                                        \"Unable to find plugin \" + groupId + \":\" + artifactId );\n                                 }\n                             }\n                             else\n@@ -840,8 +840,9 @@ private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntr\n                             }\n \n                             MojoDescriptor desc = getMojoDescriptor( lifecyclePluginDescriptor, lifecycleGoal );\n-                            MojoExecution mojoExecution = new MojoExecution( desc, (Xpp3Dom) e.getConfiguration() );\n-                            addToLifecycleMappings( lifecycleMappings, phase.getId(), mojoExecution, session.getSettings() );\n+                            MojoExecution mojoExecution = new MojoExecution( desc, (Xpp3Dom) exec.getConfiguration() );\n+                            addToLifecycleMappings( lifecycleMappings, phase.getId(), mojoExecution,\n+                                                    session.getSettings() );\n                         }\n                     }\n                 }\n@@ -855,13 +856,15 @@ private void forkProjectLifecycle( MojoDescriptor mojoDescriptor, Stack forkEntr\n         {\n             Lifecycle lifecycle = getLifecycleForPhase( targetPhase );\n \n-            executeGoalWithLifecycle( targetPhase, forkEntryPoints, session, lifecycleMappings, executionProject, lifecycle );\n+            executeGoalWithLifecycle( targetPhase, forkEntryPoints, session, lifecycleMappings, executionProject,\n+                                      lifecycle );\n         }\n         else\n         {\n             String goal = mojoDescriptor.getExecuteGoal();\n             MojoDescriptor desc = getMojoDescriptor( pluginDescriptor, goal );\n-            executeGoals( Collections.singletonList( new MojoExecution( desc ) ), forkEntryPoints, session, executionProject );\n+            executeGoals( Collections.singletonList( new MojoExecution( desc ) ), forkEntryPoints, session,\n+                          executionProject );\n         }\n         project.setExecutionProject( executionProject );\n     }\n@@ -925,9 +928,8 @@ private void removeFromLifecycle( Stack lifecycleForkers, Map lifecycleMappings\n \n                 if ( removed )\n                 {\n-                    getLogger().warn(\n-                                      \"Removing: \" + mojoDescriptor.getGoal()\n-                                          + \" from forked lifecycle, to prevent recursive invocation.\" );\n+                    getLogger().warn( \"Removing: \" + mojoDescriptor.getGoal() +\n+                        \" from forked lifecycle, to prevent recursive invocation.\" );\n                 }\n             }\n         }\n@@ -1133,10 +1135,10 @@ private Map findArtifactTypeHandlers( MavenProject project, Settings settings, A\n     private void bindPluginToLifecycle( Plugin plugin, MavenSession session, Map phaseMap, MavenProject project )\n         throws LifecycleExecutionException, PluginNotFoundException\n     {\n-        PluginDescriptor pluginDescriptor;\n         Settings settings = session.getSettings();\n \n-        pluginDescriptor = verifyPlugin( plugin, project, session.getSettings(), session.getLocalRepository() );\n+        PluginDescriptor pluginDescriptor =\n+            verifyPlugin( plugin, project, session.getSettings(), session.getLocalRepository() );\n \n         if ( pluginDescriptor.getMojos() != null && !pluginDescriptor.getMojos().isEmpty() )\n         {\n@@ -1287,7 +1289,8 @@ private void bindExecutionToLifecycle( PluginDescriptor pluginDescriptor, Map ph\n         }\n     }\n \n-    private void addToLifecycleMappings( Map lifecycleMappings, String phase, MojoExecution mojoExecution, Settings settings )\n+    private void addToLifecycleMappings( Map lifecycleMappings, String phase, MojoExecution mojoExecution,\n+                                         Settings settings )\n     {\n         List goals = (List) lifecycleMappings.get( phase );\n ",
                "deletions": 28
            },
            {
                "sha": "8a1684c442cd1133815995de8f00b72688f1ce10",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/LifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/lifecycle/LifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/lifecycle/LifecycleExecutor.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/LifecycleExecutor.java?ref=7b90bef2055f3d5595b9b3d3916ad349e8601868",
                "patch": "@@ -29,7 +29,7 @@\n {\n     String ROLE = LifecycleExecutor.class.getName();\n \n-    void execute( MavenSession session, ReactorManager rpm, EventDispatcher dispatcher )\n+    void execute( MavenSession session, ReactorManager rm, EventDispatcher dispatcher )\n         throws LifecycleExecutionException, BuildFailureException;\n \n }",
                "deletions": 1
            },
            {
                "sha": "1bccd4fcbb87e4c6e5edf7d464963560583e507a",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "status": "modified",
                "changes": 18,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=7b90bef2055f3d5595b9b3d3916ad349e8601868",
                "patch": "@@ -137,24 +137,6 @@ public PluginDescriptor getPluginDescriptorForPrefix( String prefix )\n         return pluginCollector.getPluginDescriptorForPrefix( prefix );\n     }\n \n-    public PluginDescriptor getPluginDescriptor( String groupId,\n-                                                 String artifactId,\n-                                                 MavenProject project,\n-                                                 Settings settings,\n-                                                 ArtifactRepository localRepository )\n-        throws PluginVersionResolutionException, InvalidPluginException, PluginVersionNotFoundException\n-    {\n-        Plugin plugin = new Plugin();\n-\n-        plugin.setGroupId( groupId );\n-\n-        plugin.setArtifactId( artifactId );\n-\n-        String version = pluginVersionManager.resolvePluginVersion( groupId, artifactId, project, settings, localRepository );\n-\n-        return pluginCollector.getPluginDescriptor( plugin );\n-    }\n-\n     public Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session, MavenProject project )\n     {\n         // TODO: since this is only used in the lifecycle executor, maybe it should be moved there? There is no other",
                "deletions": 18
            },
            {
                "sha": "676d3fa5368fce51021d852fe4d9eb8ad4c176a5",
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/plugin/PluginManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/7b90bef2055f3d5595b9b3d3916ad349e8601868/maven-core/src/main/java/org/apache/maven/plugin/PluginManager.java",
                "status": "modified",
                "changes": 8,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginManager.java?ref=7b90bef2055f3d5595b9b3d3916ad349e8601868",
                "patch": "@@ -52,14 +52,6 @@ MavenReport getReport( MavenProject project, MojoExecution mojoExecution, MavenS\n \n     PluginDescriptor getPluginDescriptorForPrefix( String prefix );\n \n-    PluginDescriptor getPluginDescriptor( String groupId,\n-                                          String artifactId,\n-                                          MavenProject project,\n-                                          Settings settings,\n-                                          ArtifactRepository localRepository )\n-        throws PluginVersionResolutionException, InvalidPluginException, PluginVersionNotFoundException;\n-\n-\n     Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session, MavenProject project );\n \n     PluginDescriptor verifyPlugin( Plugin plugin, MavenProject project, Settings settings,",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "PR: MNG-833\nSubmitted by: Christoph Sturm\nReviewed by: Brett Porter\no fix NPE\no allow linking of projects in the reactor as modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@267532 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/82ac502e78e333c9a776096909aa9cc1b3565b57",
        "parent": "https://github.com/apache/maven-2/commit/6a5e89785edbae446326941686f8db54fdb3e6de",
        "bug_id": "maven-2_53",
        "file": [
            {
                "sha": "60cc7bae7929da7103972b418e6c0a08187426b2",
                "filename": "maven-plugins/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java",
                "blob_url": "https://github.com/apache/maven-2/blob/82ac502e78e333c9a776096909aa9cc1b3565b57/maven-plugins/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java",
                "raw_url": "https://github.com/apache/maven-2/raw/82ac502e78e333c9a776096909aa9cc1b3565b57/maven-plugins/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java",
                "status": "modified",
                "changes": 48,
                "additions": 28,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugins/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java?ref=82ac502e78e333c9a776096909aa9cc1b3565b57",
                "patch": "@@ -110,9 +110,9 @@ private void rewriteWorkspace()\n     private void rewriteProject()\n         throws MojoExecutionException\n     {\n+        File projectFile = new File( project.getBasedir(), project.getArtifactId() + \".ipr\" );\n         try\n         {\n-            File projectFile = new File( project.getBasedir(), project.getArtifactId() + \".ipr\" );\n             Reader reader;\n             if ( projectFile.exists() )\n             {\n@@ -162,7 +162,8 @@ private void rewriteProject()\n             else\n             {\n                 Xpp3Dom m = createElement( modules, \"module\" );\n-                String modulePath = new File( project.getBasedir(), project.getArtifactId() + \".iml\" ).getAbsolutePath();\n+                String modulePath = new File( project.getBasedir(),\n+                                              project.getArtifactId() + \".iml\" ).getAbsolutePath();\n                 m.setAttribute( \"filepath\", \"$PROJECT_DIR$/\" + toRelative( project.getBasedir(), modulePath ) );\n             }\n \n@@ -178,20 +179,20 @@ private void rewriteProject()\n         }\n         catch ( XmlPullParserException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IPR file: \" + projectFile.getAbsolutePath(), e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IPR file: \" + projectFile.getAbsolutePath(), e );\n         }\n     }\n \n     private void rewriteModule()\n         throws MojoExecutionException\n     {\n+        File moduleFile = new File( project.getBasedir(), project.getArtifactId() + \".iml\" );\n         try\n         {\n-            File moduleFile = new File( project.getBasedir(), project.getArtifactId() + \".iml\" );\n             Reader reader;\n             if ( moduleFile.exists() )\n             {\n@@ -214,11 +215,11 @@ private void rewriteModule()\n \n             // TODO: how can we let the WAR/EJBs plugin hook in and provide this?\n             // TODO: merge in ejb-module, etc.\n-            if ( project.getPackaging().equals( \"war\" ) )\n+            if ( \"war\".equals( project.getPackaging() ) )\n             {\n                 addWebModule( module );\n             }\n-            else if ( project.getPackaging().equals( \"ejb\" ) )\n+            else if ( \"ejb\".equals( project.getPackaging() ) )\n             {\n                 module.setAttribute( \"type\", \"J2EE_EJB_MODULE\" );\n             }\n@@ -264,20 +265,27 @@ else if ( project.getPackaging().equals( \"ejb\" ) )\n             for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n             {\n                 Artifact a = (Artifact) i.next();\n-                // TODO: resolve projects in reactor as references\n-\n                 Xpp3Dom dep = createElement( component, \"orderEntry\" );\n-                dep.setAttribute( \"type\", \"module-library\" );\n \n-                dep = createElement( dep, \"library\" );\n-                dep.setAttribute( \"name\", a.getArtifactId() );\n+                if ( a.getFile() != null )\n+                {\n+                    dep.setAttribute( \"type\", \"module-library\" );\n+                    dep = createElement( dep, \"library\" );\n+                    dep.setAttribute( \"name\", a.getArtifactId() );\n \n-                Xpp3Dom el = createElement( dep, \"CLASSES\" );\n-                el = createElement( el, \"root\" );\n-                el.setAttribute( \"url\", \"jar://\" + a.getFile().getAbsolutePath().replace( '\\\\', '/' ) + \"!/\" );\n+                    Xpp3Dom el = createElement( dep, \"CLASSES\" );\n+                    el = createElement( el, \"root\" );\n+                    File file = a.getFile();\n+                    el.setAttribute( \"url\", \"jar://\" + file.getAbsolutePath().replace( '\\\\', '/' ) + \"!/\" );\n \n-                createElement( dep, \"JAVADOC\" );\n-                createElement( dep, \"SOURCES\" );\n+                    createElement( dep, \"JAVADOC\" );\n+                    createElement( dep, \"SOURCES\" );\n+                }\n+                else\n+                {\n+                    dep.setAttribute( \"type\", \"module\" );\n+                    dep.setAttribute( \"module-name\", a.getArtifactId() );\n+                }\n             }\n \n             FileWriter writer = new FileWriter( moduleFile );\n@@ -292,11 +300,11 @@ else if ( project.getPackaging().equals( \"ejb\" ) )\n         }\n         catch ( XmlPullParserException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IML file \" + moduleFile.getAbsolutePath(), e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IML file \" + moduleFile.getAbsolutePath(), e );\n         }\n     }\n \n@@ -419,7 +427,7 @@ private void removeOldDependencies( Xpp3Dom component )\n         for ( int i = children.length - 1; i >= 0; i-- )\n         {\n             Xpp3Dom child = children[i];\n-            if ( child.getName().equals( \"orderEntry\" ) && child.getAttribute( \"type\" ).equals( \"module-library\" ) )\n+            if ( \"orderEntry\".equals( child.getName() ) && \"module-library\".equals( child.getAttribute( \"type\" ) ) )\n             {\n                 component.removeChild( i );\n             }",
                "deletions": 20
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o Fixing a NullPointerException in the value extractor if the specified getter\n  didn't exists. The value extractor will now return null if the getter doesn't\n  exists.\no Properly implemented the method caching in the value exctrator.\no Changed the RegexBasedModelInterpolator so it would properly handle null\n  values. It used to convert null to \"null\" and then insert that, now it will\n  leave the expression as is.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163696 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/16ea6ce332bf399267bfc2c449496e23736433b2",
        "parent": "https://github.com/apache/maven-2/commit/39a96456cddd9049a639679d4a9dad653294ea07",
        "bug_id": "maven-2_54",
        "file": [
            {
                "sha": "a8ae1c89ace14c1b4fd34ce4a780654fe722dfe9",
                "filename": "maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "status": "modified",
                "changes": 37,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "patch": "@@ -1,20 +1,19 @@\n package org.apache.maven.project.interpolation;\n \n-/* ====================================================================\n- *   Copyright 2001-2004 The Apache Software Foundation.\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n  *\n- *   Licensed under the Apache License, Version 2.0 (the \"License\");\n- *   you may not use this file except in compliance with the License.\n- *   You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *   Unless required by applicable law or agreed to in writing, software\n- *   distributed under the License is distributed on an \"AS IS\" BASIS,\n- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *   See the License for the specific language governing permissions and\n- *   limitations under the License.\n- * ====================================================================\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n import org.apache.maven.model.Model;\n@@ -32,12 +31,12 @@\n \n /**\n  * @author jdcasey Created on Feb 3, 2005\n+ * @version $Id$\n  */\n public class RegexBasedModelInterpolator\n     extends AbstractLogEnabled\n     implements ModelInterpolator\n {\n-\n     private static final Pattern EXPRESSION_PATTERN = Pattern.compile( \"\\\\$\\\\{(pom|project\\\\.)?([^}]+)\\\\}\" );\n \n     /**\n@@ -89,10 +88,11 @@ private String interpolateInternal( String src, Model model )\n             String wholeExpr = matcher.group( 0 );\n             String realExpr = matcher.group( 2 );\n \n-            String value = null;\n+            Object value = null;\n+\n             try\n             {\n-                value = String.valueOf( ReflectionValueExtractor.evaluate( realExpr, model ) );\n+                value = ReflectionValueExtractor.evaluate( realExpr, model );\n             }\n             catch ( Exception e )\n             {\n@@ -105,15 +105,14 @@ private String interpolateInternal( String src, Model model )\n \n             if ( value != null )\n             {\n-                result = StringUtils.replace( result, wholeExpr, value );\n+                result = StringUtils.replace( result, wholeExpr, String.valueOf( value ) );\n                 // could use:\n-                // result = matcher.replaceFirst( value );\n-                // but this could result in multiple lookups of value, and replaceAll is not correct behaviour \n+                // result = matcher.replaceFirst( stringValue );\n+                // but this could result in multiple lookups of stringValue, and replaceAll is not correct behaviour\n                 matcher.reset( result );\n             }\n         }\n \n         return result;\n     }\n-\n }\n\\ No newline at end of file",
                "deletions": 19
            },
            {
                "sha": "487d89f0ce868f13ba5523c9c0bf5fd565c24d17",
                "filename": "maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "status": "modified",
                "changes": 48,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "patch": "@@ -1,43 +1,41 @@\n package org.apache.maven.util.introspection;\n \n-/* ====================================================================\n- *   Copyright 2001-2004 The Apache Software Foundation.\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n  *\n- *   Licensed under the Apache License, Version 2.0 (the \"License\");\n- *   you may not use this file except in compliance with the License.\n- *   You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *   Unless required by applicable law or agreed to in writing, software\n- *   distributed under the License is distributed on an \"AS IS\" BASIS,\n- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *   See the License for the specific language governing permissions and\n- *   limitations under the License.\n- * ====================================================================\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n-import org.codehaus.plexus.util.StringUtils;\n-\n import java.lang.reflect.Method;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.StringTokenizer;\n \n+import org.codehaus.plexus.util.StringUtils;\n+\n /**\n  * Using simple dotted expressions extract the values from a MavenProject\n  * instance, For example we might want to extract a value like:\n  * project.build.sourceDirectory\n- * \n+ *\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl </a>\n- * @version $Id: ReflectionValueExtractor.java,v 1.2 2005/03/01 07:05:33 brett\n- *          Exp $\n+ * @version $Id$\n  */\n public class ReflectionValueExtractor\n {\n-    private static Class[] args = new Class[0];\n+    private static Class[] args = new Class[ 0 ];\n \n-    private static Object[] params = new Object[0];\n+    private static Object[] params = new Object[ 0 ];\n \n     private static ClassMap classMap;\n \n@@ -48,7 +46,8 @@ private ReflectionValueExtractor()\n     }\n \n     // TODO: don't throw Exception\n-    public static Object evaluate( String expression, Object root ) throws Exception\n+    public static Object evaluate( String expression, Object root )\n+        throws Exception\n     {\n         // ----------------------------------------------------------------------\n         // Remove the leading \"project\" token\n@@ -75,6 +74,11 @@ public static Object evaluate( String expression, Object root ) throws Exception\n \n             Method method = classMap.findMethod( methodName, args );\n \n+            if ( method == null )\n+            {\n+                return null;\n+            }\n+\n             value = method.invoke( value, params );\n         }\n \n@@ -88,8 +92,10 @@ private static ClassMap getClassMap( Class clazz )\n         if ( classMap == null )\n         {\n             classMap = new ClassMap( clazz );\n+\n+            classMaps.put( clazz, classMap );\n         }\n \n         return classMap;\n     }\n-}\n\\ No newline at end of file\n+}",
                "deletions": 21
            },
            {
                "sha": "6abfedfb99c9199c9d8356959654c69815d62b21",
                "filename": "maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "patch": "@@ -16,17 +16,18 @@\n  * limitations under the License.\n  */\n \n-import junit.framework.TestCase;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.model.Model;\n \n+import junit.framework.TestCase;\n+\n /**\n  * @author jdcasey\n+ * @version $Id$\n  */\n public class RegexBasedModelInterpolatorTest\n     extends TestCase\n {\n-\n     public void testShouldInterpolateDependencyVersionToSetSameAsProjectVersion()\n         throws ModelInterpolationException\n     {\n@@ -75,5 +76,4 @@ public void testTwoReferences()\n \n         assertEquals( \"foo-3.8.1\", ( (Dependency) out.getDependencies().get( 0 ) ).getVersion() );\n     }\n-\n-}\n\\ No newline at end of file\n+}",
                "deletions": 4
            },
            {
                "sha": "829c9319aa44fbf3f6388b5cf465c90113af313f",
                "filename": "maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "status": "modified",
                "changes": 10,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "patch": "@@ -33,15 +33,11 @@\n {\n     private MavenProject project;\n \n-    private MavenProjectBuilder builder;\n-\n     protected void setUp()\n         throws Exception\n     {\n         super.setUp();\n \n-        builder = (MavenProjectBuilder) lookup( MavenProjectBuilder.ROLE );\n-\n         File f = getFileForClasspathResource( \"pom.xml\" );\n \n         project = getProject( f );\n@@ -88,4 +84,10 @@ public void testValueExtraction()\n \n         assertNotNull( build );\n     }\n+\n+    public void testValueExtractorWithAInvalidExpression()\n+        throws Exception\n+    {\n+        assertNull( ReflectionValueExtractor.evaluate( \"project.foo\", project ) );\n+    }\n }",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Changed ReactorManager's api for blackList and other methods that require\nan 'id' to use MavenProject instead. \nIn some parts of the code a DAG is constructed using a version-less key,\nand in the api what the id should be is unspecified.\nThis could result in NPE's (it does!) because the code in plexus-utils\nassumes a known id (vertex in the DAG) is supplied.\n\nSo, moved the project.getId() calls outside of ReactorManager into the\nReactorManager, so that there's just one place where the decision is made on\nhow to generate an id (DAG vertex label) from a project. This centralizes\nthat knowledge for increased maintainability and reduced chances on NPE's.\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279334 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/69c6305347b9680b0aba2c93586d1b3d46e5ba02",
        "parent": "https://github.com/apache/maven-2/commit/7b6f292c73db67e179033e6a051871754cb4a725",
        "bug_id": "maven-2_55",
        "file": [
            {
                "sha": "d10f537104138267cb151748fe7eadf710af9fd8",
                "filename": "maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "blob_url": "https://github.com/apache/maven-2/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "raw_url": "https://github.com/apache/maven-2/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/DefaultMaven.java",
                "status": "modified",
                "changes": 52,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/DefaultMaven.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "patch": "@@ -79,7 +79,7 @@\n     // ----------------------------------------------------------------------\n \n     protected MavenProjectBuilder projectBuilder;\n-    \n+\n     protected LifecycleExecutor lifecycleExecutor;\n \n     protected PlexusContainer container;\n@@ -126,9 +126,9 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n         dispatcher.dispatchStart( event, request.getBaseDirectory() );\n \n         ReactorManager rm;\n-        \n+\n         ProfileManager globalProfileManager = request.getGlobalProfileManager();\n-        \n+\n         try\n         {\n             loadSettingsProfiles( globalProfileManager, request.getSettings() );\n@@ -137,7 +137,7 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n \n             List projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(),\n                                         request.getSettings(), globalProfileManager );\n-            \n+\n             // the reasoning here is that the list is still unsorted according to dependency, so the first project\n             // SHOULD BE the top-level, or the one we want to start with if we're doing an aggregated build.\n \n@@ -146,11 +146,11 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n                 MavenProject superProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository() );\n                 projects.add( superProject );\n             }\n-            \n+\n             rm = new ReactorManager( projects );\n-            \n+\n             String requestFailureBehavior = request.getFailureBehavior();\n-            \n+\n             if ( requestFailureBehavior != null )\n             {\n                 rm.setFailureBehavior( requestFailureBehavior );\n@@ -196,7 +196,7 @@ public MavenExecutionResponse execute( MavenExecutionRequest request )\n                     if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) && ( exception instanceof ReactorException ) )\n                     {\n                         logFailure( response, exception, null );\n-                        \n+\n                         if ( rm.hasMultipleProjects() )\n                         {\n                             writeReactorSummary( rm );\n@@ -262,22 +262,22 @@ private void writeReactorSummary( ReactorManager rm )\n         // o project-name...........FAILED\n         // o project2-name..........SKIPPED (dependency build failed or was skipped)\n         // o project-3-name.........SUCCESS\n-        \n+\n         line();\n         getLogger().info( \"Reactor Summary:\" );\n         line();\n-        \n+\n         for ( Iterator it = rm.getProjectsSortedByDependency().iterator(); it.hasNext(); )\n         {\n             MavenProject project = (MavenProject) it.next();\n-            \n+\n             String id = project.getId();\n-            \n-            if ( rm.hasBuildFailure( id ) )\n+\n+            if ( rm.hasBuildFailure( project ) )\n             {\n                 logReactorSummaryLine( project.getName(), \"FAILED\" );\n             }\n-            else if ( rm.isBlackListed( id ) )\n+            else if ( rm.isBlackListed( project ) )\n             {\n                 logReactorSummaryLine( project.getName(), \"SKIPPED (dependency build failed or was skipped)\" );\n             }\n@@ -286,28 +286,28 @@ else if ( rm.isBlackListed( id ) )\n                 logReactorSummaryLine( project.getName(), \"SUCCESS\" );\n             }\n         }\n-        \n+\n         getLogger().info( \"\" );\n         getLogger().info( \"\" );\n     }\n \n     private void logReactorSummaryLine( String name, String status )\n     {\n         StringBuffer messageBuffer = new StringBuffer();\n-        \n+\n         messageBuffer.append( name );\n-        \n+\n         int dotCount = 65;\n-        \n+\n         dotCount -= name.length();\n-        \n+\n         for ( int i = 0; i < dotCount; i++ )\n         {\n             messageBuffer.append( '.' );\n         }\n-        \n+\n         messageBuffer.append( status );\n-        \n+\n         getLogger().info( messageBuffer.toString() );\n     }\n \n@@ -399,7 +399,7 @@ private void loadSettingsProfiles( ProfileManager profileManager, Settings setti\n         if ( settingsProfiles != null && !settingsProfiles.isEmpty() )\n         {\n             List settingsActiveProfileIds = settings.getActiveProfiles();\n-            \n+\n             profileManager.explicitlyActivate( settingsActiveProfileIds );\n \n             for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )\n@@ -411,9 +411,9 @@ private void loadSettingsProfiles( ProfileManager profileManager, Settings setti\n                 profileManager.addProfile( profile );\n             }\n         }\n-        \n+\n     }\n-    \n+\n     // ----------------------------------------------------------------------\n     // Methods used by all execution request handlers\n     // ----------------------------------------------------------------------\n@@ -585,7 +585,7 @@ protected void logSuccess( MavenExecutionResponse r, ReactorManager rm )\n         {\n             writeReactorSummary( rm );\n         }\n-        \n+\n         line();\n \n         getLogger().info( \"BUILD SUCCESSFUL\" );\n@@ -618,7 +618,7 @@ protected void line()\n     {\n         getLogger().info( \"----------------------------------------------------------------------------\" );\n     }\n-    \n+\n     protected static String formatTime( long ms )\n     {\n         long secs = ms / MS_PER_SEC;",
                "deletions": 26
            },
            {
                "sha": "2a72cc9ad94766bd018a094f1aaa7e7f0691df56",
                "filename": "maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java",
                "status": "modified",
                "changes": 75,
                "additions": 41,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/execution/ReactorManager.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "patch": "@@ -20,27 +20,27 @@\n \n public class ReactorManager\n {\n-    \n+\n     public static final String FAIL_FAST = \"fail-fast\";\n \n     public static final String FAIL_AT_END = \"fail-at-end\";\n \n     public static final String FAIL_NEVER = \"fail-never\";\n-    \n+\n     private DAG reactorDag;\n-    \n+\n     private Map projectMap;\n-    \n+\n     private List projectsByDependency;\n \n     private List blackList = new ArrayList();\n \n     private MavenProject topLevelProject;\n-    \n+\n     private Map buildFailuresByProject = new HashMap();\n-    \n+\n     private String failureBehavior = FAIL_FAST;\n-    \n+\n     public ReactorManager( List projects )\n         throws CycleDetectedException\n     {\n@@ -136,10 +136,10 @@ public ReactorManager( List projects )\n \n             projectsByDependency.add( projectMap.get( id ) );\n         }\n-        \n+\n         projectsByDependency = Collections.unmodifiableList( projectsByDependency );\n     }\n-    \n+\n     public void setFailureBehavior( String failureBehavior )\n     {\n         if ( FAIL_FAST.equals( failureBehavior ) || FAIL_AT_END.equals( failureBehavior ) || FAIL_NEVER.equals( failureBehavior ) )\n@@ -152,33 +152,39 @@ public void setFailureBehavior( String failureBehavior )\n                 + FAIL_AT_END + \"\\', \\'\" + FAIL_NEVER + \"\\').\" );\n         }\n     }\n-    \n+\n     public String getFailureBehavior()\n     {\n         return failureBehavior;\n     }\n-    \n+\n     public List getProjectsSortedByDependency()\n     {\n         return projectsByDependency;\n     }\n-    \n+\n     // TODO: !![jc; 28-jul-2005] check this; if we're using '-r' and there are aggregator tasks, this will result in weirdness.\n     public MavenProject getTopLevelProject()\n     {\n         if ( topLevelProject == null )\n         {\n             List projectsByFile = new ArrayList( projectsByDependency );\n-            \n+\n             Collections.sort(projectsByFile, new ByProjectFileComparator() );\n-            \n+\n             topLevelProject = (MavenProject) projectsByFile.get( 0 );\n         }\n-        \n+\n         return topLevelProject;\n     }\n-    \n-    public void blackList( String id )\n+\n+    public void blackList( MavenProject project )\n+    {\n+        blackList(\n+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );\n+    }\n+\n+    private void blackList( String id )\n     {\n         if ( !blackList.contains( id ) )\n         {\n@@ -197,45 +203,46 @@ public void blackList( String id )\n             }\n         }\n     }\n-    \n-    public boolean isBlackListed( String id )\n+\n+    public boolean isBlackListed( MavenProject project )\n     {\n-        return blackList.contains( id );\n+        return blackList.contains(\n+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );\n     }\n-    \n+\n     public void registerBuildFailure( MavenProject project, Exception error, String task )\n     {\n         buildFailuresByProject.put( project.getId(), new BuildFailure( error, task ) );\n     }\n-    \n+\n     public boolean hasBuildFailures()\n     {\n         return !buildFailuresByProject.isEmpty();\n     }\n-    \n-    public boolean hasBuildFailure( String id )\n+\n+    public boolean hasBuildFailure( MavenProject project )\n     {\n-        return buildFailuresByProject.containsKey( id );\n+        return buildFailuresByProject.containsKey( project.getId() );\n     }\n-    \n+\n     public boolean hasMultipleProjects()\n     {\n         return projectsByDependency.size() > 1;\n     }\n-    \n+\n     private static class ByProjectFileComparator implements Comparator\n     {\n \n         public int compare( Object first, Object second )\n         {\n             MavenProject p1 = (MavenProject) first;\n             MavenProject p2 = (MavenProject) second;\n-            \n+\n             String p1Path = p1.getFile().getAbsolutePath();\n             String p2Path = p2.getFile().getAbsolutePath();\n-            \n+\n             int comparison = p1Path.length() - p2Path.length();\n-            \n+\n             if ( comparison > 0 )\n             {\n                 return 1;\n@@ -250,23 +257,23 @@ else if ( comparison < 0 )\n             }\n         }\n     }\n-    \n+\n     private static class BuildFailure\n     {\n         private Exception cause;\n         private String task;\n-        \n+\n         BuildFailure( Exception cause, String task )\n         {\n             this.cause = cause;\n             this.task = task;\n         }\n-        \n+\n         String getTask()\n         {\n             return task;\n         }\n-        \n+\n         Exception getCause()\n         {\n             return cause;",
                "deletions": 34
            },
            {
                "sha": "b33637182586bcf18a3114dfbebf84250a428a7f",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/69c6305347b9680b0aba2c93586d1b3d46e5ba02/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=69c6305347b9680b0aba2c93586d1b3d46e5ba02",
                "patch": "@@ -177,7 +177,7 @@ private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSes\n \n             if ( segment.aggregate() )\n             {\n-                if ( !rm.isBlackListed( project.getId() ) )\n+                if ( !rm.isBlackListed( project ) )\n                 {\n                     line();\n \n@@ -246,7 +246,7 @@ private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSes\n                 {\n                     MavenProject currentProject = (MavenProject) projectIterator.next();\n \n-                    if ( !rm.isBlackListed( currentProject.getId() ) )\n+                    if ( !rm.isBlackListed( currentProject ) )\n                     {\n                         line();\n \n@@ -335,8 +335,9 @@ else if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) )\n         {\n             rm.registerBuildFailure( project, e, task );\n \n-            rm.blackList( project.getId() );\n+            rm.blackList( project );\n         }\n+        // FIXME: how about the other cases?\n     }\n \n     private List segmentTaskListByAggregationNeeds( List tasks, MavenSession session, MavenProject project )",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "[MNG-4137] Initialize configInterpolator in case a custom component descriptor is provided for the lifecycle manager which doesn't wire in this field. This behavior is the same as that done for the modelInterpolator field, both of which cause NPE's in Hudson.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.2.x@769569 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/74493f2d1de93c322a9ee02848ef7045f8b18a89",
        "parent": "https://github.com/apache/maven-2/commit/69696852e75dc7234b675aed8f22a6637725bc2d",
        "bug_id": "maven-2_56",
        "file": [
            {
                "sha": "b41f04c488145dd6f7258cb17ab3163277e1f5ab",
                "filename": "maven-core/src/main/java/org/apache/maven/ConfigurationInterpolator.java",
                "blob_url": "https://github.com/apache/maven-2/blob/74493f2d1de93c322a9ee02848ef7045f8b18a89/maven-core/src/main/java/org/apache/maven/ConfigurationInterpolator.java",
                "raw_url": "https://github.com/apache/maven-2/raw/74493f2d1de93c322a9ee02848ef7045f8b18a89/maven-core/src/main/java/org/apache/maven/ConfigurationInterpolator.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/ConfigurationInterpolator.java?ref=74493f2d1de93c322a9ee02848ef7045f8b18a89",
                "patch": "@@ -6,6 +6,8 @@\n public interface ConfigurationInterpolator\n {\n     \n+    String ROLE = ConfigurationInterpolator.class.getName();\n+    \n     Object interpolate( Object configObject, MavenProject project, ProjectBuilderConfiguration config )\n         throws ConfigurationInterpolationException;\n ",
                "deletions": 0
            },
            {
                "sha": "70d5ee08a648c66cb9dd8b4ed30c50eb8b795e5b",
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "blob_url": "https://github.com/apache/maven-2/blob/74493f2d1de93c322a9ee02848ef7045f8b18a89/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "raw_url": "https://github.com/apache/maven-2/raw/74493f2d1de93c322a9ee02848ef7045f8b18a89/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=74493f2d1de93c322a9ee02848ef7045f8b18a89",
                "patch": "@@ -1957,6 +1957,19 @@ public void initialize()\n                 throw new InitializationException( \"Failed to lookup model interpolator after it was NOT injected via component requirement.\" );\n             }\n         }\n+        \n+        if ( configInterpolator == null )\n+        {\n+            warnOfIncompleteComponentConfiguration( ConfigurationInterpolator.ROLE );\n+            try\n+            {\n+                configInterpolator = (ConfigurationInterpolator) container.lookup( ConfigurationInterpolator.ROLE );\n+            }\n+            catch ( ComponentLookupException e )\n+            {\n+                throw new InitializationException( \"Failed to lookup plugin-configuration interpolator after it was NOT injected via component requirement.\" );\n+            }\n+        }\n     }\n     \n     private void warnOfIncompleteComponentConfiguration( String role )",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Add code to mirror the modifications on trunk, where checksum observers are added/removed per iteration when attempting to download a file, since 1.0-beta-3 of wagon has code where a transfer error will set the internal digest instance to null rather than resetting it; successive attempts to use the observer after that point will cause NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@673521 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/6c0064a80023606134db0476aa4802bbca931688",
        "parent": "https://github.com/apache/maven-2/commit/9f8bd2a13ea3ddf2c1f30720e45ffcb45d5a3ce3",
        "bug_id": "maven-2_57",
        "file": [
            {
                "sha": "4c2309d510c4a0e440d53fc645a1d148ec6d3774",
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "blob_url": "https://github.com/apache/maven-2/blob/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "raw_url": "https://github.com/apache/maven-2/raw/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "status": "modified",
                "changes": 206,
                "additions": 109,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=6c0064a80023606134db0476aa4802bbca931688",
                "patch": "@@ -19,19 +19,6 @@\n  * under the License.\n  */\n \n-import java.io.File;\n-import java.io.IOException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.security.NoSuchAlgorithmException;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.metadata.ArtifactMetadata;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n@@ -66,12 +53,25 @@\n import org.codehaus.plexus.util.FileUtils;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n public class DefaultWagonManager\n     extends AbstractLogEnabled\n     implements WagonManager, Contextualizable\n {\n     private static final String WILDCARD = \"*\";\n-    \n+\n     private static final String EXTERNAL_WILDCARD = \"external:*\";\n \n     private PlexusContainer container;\n@@ -409,22 +409,6 @@ private void getRemoteFile( ArtifactRepository repository,\n             wagon.addTransferListener( downloadMonitor );\n         }\n \n-        // TODO: configure on repository\n-        ChecksumObserver md5ChecksumObserver;\n-        ChecksumObserver sha1ChecksumObserver;\n-        try\n-        {\n-            md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n-            wagon.addTransferListener( md5ChecksumObserver );\n-\n-            sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n-            wagon.addTransferListener( sha1ChecksumObserver );\n-        }\n-        catch ( NoSuchAlgorithmException e )\n-        {\n-            throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n-        }\n-\n         File temp = new File( destination + \".tmp\" );\n         temp.deleteOnExit();\n \n@@ -446,100 +430,128 @@ private void getRemoteFile( ArtifactRepository repository,\n                 // reset the retry flag.\n                 retry = false;\n \n-                // This should take care of creating destination directory now on\n-                if ( destination.exists() && !force )\n+                // TODO: configure on repository\n+                ChecksumObserver md5ChecksumObserver = null;\n+                ChecksumObserver sha1ChecksumObserver = null;\n+                try\n                 {\n-                    try\n+                    md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n+                    wagon.addTransferListener( md5ChecksumObserver );\n+\n+                    sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n+                    wagon.addTransferListener( sha1ChecksumObserver );\n+\n+                    // This should take care of creating destination directory now on\n+                    if ( destination.exists() && !force )\n                     {\n-                        downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n-                        if ( !downloaded )\n+                        try\n+                        {\n+                            downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n+                            if ( !downloaded )\n+                            {\n+                                // prevent additional checks of this artifact until it expires again\n+                                destination.setLastModified( System.currentTimeMillis() );\n+                            }\n+                        }\n+                        catch ( UnsupportedOperationException e )\n                         {\n-                            // prevent additional checks of this artifact until it expires again\n-                            destination.setLastModified( System.currentTimeMillis() );\n+                            // older wagons throw this. Just get() instead\n+                            wagon.get( remotePath, temp );\n+                            downloaded = true;\n                         }\n                     }\n-                    catch ( UnsupportedOperationException e )\n+                    else\n                     {\n-                        // older wagons throw this. Just get() instead\n                         wagon.get( remotePath, temp );\n                         downloaded = true;\n                     }\n-                }\n-                else\n-                {\n-                    wagon.get( remotePath, temp );\n-                    downloaded = true;\n-                }\n \n-                if ( downloaded )\n-                {\n-                    // keep the checksum files from showing up on the download monitor...\n-                    if ( downloadMonitor != null )\n+                    if ( downloaded )\n                     {\n-                        wagon.removeTransferListener( downloadMonitor );\n-                    }\n-\n-                    // try to verify the SHA-1 checksum for this file.\n-                    try\n-                    {\n-                        verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n-                    }\n-                    catch ( ChecksumFailedException e )\n-                    {\n-                        // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n-                        // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n-                        // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n-                        // repository's checksum checking policy.\n-                        if ( firstRun )\n-                        {\n-                            getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n-                            retry = true;\n-                        }\n-                        else\n+                        // keep the checksum files from showing up on the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                            wagon.removeTransferListener( downloadMonitor );\n                         }\n-                    }\n-                    catch ( ResourceDoesNotExistException sha1TryException )\n-                    {\n-                        getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n \n-                        // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n-                        // file...we'll try again with the MD5 checksum.\n+                        // try to verify the SHA-1 checksum for this file.\n                         try\n                         {\n-                            verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n                         }\n                         catch ( ChecksumFailedException e )\n                         {\n-                            // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n-                            // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                            // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n+                            // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n+                            // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n+                            // repository's checksum checking policy.\n                             if ( firstRun )\n                             {\n+                                getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n                                 retry = true;\n                             }\n                             else\n                             {\n                                 handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n                             }\n                         }\n-                        catch ( ResourceDoesNotExistException md5TryException )\n+                        catch ( ResourceDoesNotExistException sha1TryException )\n+                        {\n+                            getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n+\n+                            // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n+                            // file...we'll try again with the MD5 checksum.\n+                            try\n+                            {\n+                                verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            }\n+                            catch ( ChecksumFailedException e )\n+                            {\n+                                // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n+                                // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                                if ( firstRun )\n+                                {\n+                                    retry = true;\n+                                }\n+                                else\n+                                {\n+                                    handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                                }\n+                            }\n+                            catch ( ResourceDoesNotExistException md5TryException )\n+                            {\n+                                // this was a failed transfer, and we don't want to retry.\n+                                handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n+                                                       md5TryException );\n+                            }\n+                        }\n+\n+                        // reinstate the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            // this was a failed transfer, and we don't want to retry.\n-                            handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n-                                                   md5TryException );\n+                            wagon.addTransferListener( downloadMonitor );\n                         }\n                     }\n \n-                    // reinstate the download monitor...\n-                    if ( downloadMonitor != null )\n+                    // unset the firstRun flag, so we don't get caught in an infinite loop...\n+                    firstRun = false;\n+                }\n+                catch ( NoSuchAlgorithmException e )\n+                {\n+                    throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n+                }\n+                finally\n+                {\n+                    if ( sha1ChecksumObserver != null )\n                     {\n-                        wagon.addTransferListener( downloadMonitor );\n+                        wagon.removeTransferListener( sha1ChecksumObserver );\n                     }\n-                }\n \n-                // unset the firstRun flag, so we don't get caught in an infinite loop...\n-                firstRun = false;\n+                    if ( md5ChecksumObserver != null )\n+                    {\n+                        wagon.removeTransferListener( md5ChecksumObserver );\n+                    }\n+                }\n             }\n         }\n         catch ( ConnectionException e )\n@@ -695,7 +707,7 @@ private void verifyChecksum( ChecksumObserver checksumObserver,\n         }\n     }\n \n-    \n+\n     private void disconnectWagon( Wagon wagon )\n     {\n         try\n@@ -735,7 +747,7 @@ public AuthenticationInfo getAuthenticationInfo( String id )\n     /**\n      * This method finds a matching mirror for the selected repository. If there is an exact match, this will be used.\n      * If there is no exact match, then the list of mirrors is examined to see if a pattern applies.\n-     * \n+     *\n      * @param originalRepository See if there is a mirror for this repository.\n      * @return the selected mirror or null if none are found.\n      */\n@@ -764,13 +776,13 @@ public ArtifactRepository getMirror( ArtifactRepository originalRepository )\n     }\n \n     /**\n-     * This method checks if the pattern matches the originalRepository. \n-     * Valid patterns: \n+     * This method checks if the pattern matches the originalRepository.\n+     * Valid patterns:\n      * * = everything\n      * external:* = everything not on the localhost and not file based.\n      * repo,repo1 = repo or repo1\n      * *,!repo1 = everything except repo1\n-     * \n+     *\n      * @param originalRepository to compare for a match.\n      * @param pattern used for match. Currently only '*' is supported.\n      * @return true if the repository is a match to this pattern.\n@@ -827,7 +839,7 @@ else if ( WILDCARD.equals( repo ) )\n \n     /**\n      * Checks the URL to see if this repository refers to an external repository\n-     * \n+     *\n      * @param originalRepository\n      * @return true if external.\n      */\n@@ -845,10 +857,10 @@ public boolean isExternalRepo( ArtifactRepository originalRepository )\n             return false;\n         }\n     }\n-    \n+\n     /**\n      * Set the proxy used for a particular protocol.\n-     * \n+     *\n      * @param protocol the protocol (required)\n      * @param host the proxy host name (required)\n      * @param port the proxy port (required)",
                "deletions": 97
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "Resolving issue: MNG-467 (patch from Kenney Westerhof applied, with minor formatting modifications)\nResolving issue: MNG-503 (another patch from Kenney Westerhof applied)\n\no Tracked down the potential NPE when using a list of dependencies in the DependencyTask (it needs a Pom in order to create an originating artifact)...creating a dummy Pom instance when the list of dependencies is supplied, since I assume the originatingArtifact is used for tracking/graphing purposes. This new method, called createDummyPom() is in AbstractArtifactTask, so it's available for use in InstallTask and DeployTask if necessary...\n\nThanks, Kenney!\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191744 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/748de75a58d926146da3cee92276d6085817624c",
        "parent": "https://github.com/apache/maven-2/commit/fd3e9fe9e29b5a6d361320f8a629a28803c4436b",
        "bug_id": "maven-2_58",
        "file": [
            {
                "sha": "d8f9d56ac9dfa6acd84eb898030b9a0a67beabe9",
                "filename": "maven-artifact-ant/sample.build.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/sample.build.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/sample.build.xml",
                "status": "modified",
                "changes": 45,
                "additions": 39,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/sample.build.xml?ref=748de75a58d926146da3cee92276d6085817624c",
                "patch": "@@ -1,13 +1,46 @@\n-<project name=\"foo\" xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\" default=\"foo\">\n-  <target name=\"test-pom\">\n+<project name=\"foo\" default=\"foo\" xmlns:artifact=\"urn:maven-artifact-ant\">\n+  <!--\n+    You either need to run the the 'initTaskDefs' task below and\n+    define the artifact namespace like above (choose anything you\n+    like except strings that start with 'antlib:'),\n+    and be sure to supply the path to the maven-artifact-ant jars\n+\n+    OR\n+\n+    just define the artifact namespace as follows:\n+\n+      xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\"\n+\n+    and be sure to add the maven-artifact-ant jars to the ant\n+    classpath (either by setting the CLASSPATH environment variable\n+    before calling ant, or place the jars in the $ANT_HOME/lib directory).\n+\n+  -->\n+\n+  <target name=\"initTaskDefs\">\n+    <!-- don't forget to set the value! -->\n+    <property name=\"maven.artifact-ant.lib.dir\" value=\"${user.home}/work/opensource/m2/maven-artifact-ant/target/\"/>\n+    <path id=\"maven.classpath\">\n+      <pathelement location=\"${maven.artifact-ant.lib.dir}/maven-artifact-ant-2.0-SNAPSHOT-dep.jar\"/>\n+      <pathelement location=\"${maven.artifact-ant.lib.dir}maven-artifact-ant-2.0-SNAPSHOT.jar\"/>\n+    </path>\n+\n+    <typedef resource=\"org/apache/maven/artifact/ant/antlib.xml\"\n+      uri=\"urn:maven-artifact-ant\"\n+    >\n+      <classpath refid=\"maven.classpath\"/>\n+    </typedef>\n+  </target>\n+\n+  <target name=\"test-pom\" depends=\"initTaskDefs\">\n     <artifact:pom file=\"pom.xml\" id=\"my.maven.project\"/>\n \n-    <echo>Artifact ID = ${my.maven.project:artifactId}</echo>\n+    <echo>Artifact ID = ${my.maven.project.artifactId}</echo>\n \n-    <echo>Parent Artifact ID = ${my.maven.project:parent.artifactId}</echo>\n+    <echo>Parent Artifact ID = ${my.maven.project.parent.artifactId}</echo>\n   </target>\n \n-  <target name=\"foo\">\n+  <target name=\"foo\" depends=\"initTaskDefs\">\n     <artifact:localRepository id=\"local.repository\" location=\"${basedir}/target/local-repo\" layout=\"default\"/>\n \n     <artifact:remoteRepository id=\"deploy.repository\" url=\"file://${basedir}/target/deployment-repo\" layout=\"legacy\"/>\n@@ -51,7 +84,7 @@\n     </artifact:deploy>\n   </target>\n \n-  <target name=\"test-scm\">\n+  <target name=\"test-scm\" depends=\"initTaskDefs\">\n     <mkdir dir=\"target\" />\n \n     <pathconvert targetos=\"unix\" property=\"repo.path.unix\">",
                "deletions": 6
            },
            {
                "sha": "ec27252e581eb594f11c129f67cb210c84afa5f0",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "blob_url": "https://github.com/apache/maven-2/blob/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "raw_url": "https://github.com/apache/maven-2/raw/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java",
                "status": "modified",
                "changes": 35,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/AbstractArtifactTask.java?ref=748de75a58d926146da3cee92276d6085817624c",
                "patch": "@@ -27,11 +27,16 @@\n import org.apache.maven.settings.Server;\n import org.apache.maven.settings.Settings;\n import org.apache.maven.settings.io.xpp3.SettingsXpp3Reader;\n+import org.apache.maven.model.Model;\n import org.apache.maven.profiles.activation.ProfileActivationUtils;\n+import org.apache.maven.project.MavenProject;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.tools.ant.BuildException;\n import org.apache.tools.ant.Project;\n import org.apache.tools.ant.Task;\n+import org.codehaus.classworlds.ClassRealm;\n+import org.codehaus.classworlds.ClassWorld;\n+import org.codehaus.classworlds.DuplicateRealmException;\n import org.codehaus.plexus.PlexusContainerException;\n import org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;\n import org.codehaus.plexus.component.repository.exception.ComponentLookupException;\n@@ -251,14 +256,24 @@ private synchronized Embedder getEmbedder()\n             if ( embedder == null )\n             {\n                 embedder = new Embedder();\n+\n                 try\n                 {\n-                    embedder.start();\n+                    ClassWorld classWorld = new ClassWorld();\n+                    \n+                    ClassRealm classRealm = classWorld.newRealm( \"plexus.core\", getClass().getClassLoader() );\n+                    \n+                    embedder.start( classWorld );\n                 }\n                 catch ( PlexusContainerException e )\n                 {\n                     throw new BuildException( \"Unable to start embedder\", e );\n                 }\n+                catch ( DuplicateRealmException e )\n+                {\n+                    throw new BuildException( \"Unable to create embedder ClassRealm\", e );\n+                }\n+                \n                 getProject().addReference( Embedder.class.getName(), embedder );\n             }\n         }\n@@ -289,6 +304,24 @@ public Pom buildPom( MavenProjectBuilder projectBuilder, ArtifactRepository loca\n         return pom;\n     }\n \n+    protected Pom createDummyPom()\n+    {\n+        Model mavenModel = new Model();\n+        \n+        mavenModel.setGroupId( \"unspecified\" );\n+        mavenModel.setArtifactId( \"unspecified\" );\n+        mavenModel.setVersion( \"0.0\" );\n+        mavenModel.setPackaging( \"jar\" );\n+        \n+        MavenProject mavenProject = new MavenProject( mavenModel );\n+        \n+        Pom pom = new Pom();\n+        \n+        pom.setMavenProject( mavenProject );\n+        \n+        return pom;\n+    }\n+\n     public void addPom( Pom pom )\n     {\n         this.pom = pom;",
                "deletions": 1
            },
            {
                "sha": "c3194c5f21989142d2adf6013a11bd24861518f8",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "blob_url": "https://github.com/apache/maven-2/blob/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "raw_url": "https://github.com/apache/maven-2/raw/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DependenciesTask.java?ref=748de75a58d926146da3cee92276d6085817624c",
                "patch": "@@ -81,6 +81,12 @@ public void execute()\n                 remoteRepositories.add( createAntRemoteRepository( pomRepository ) );\n             }\n         }\n+        else\n+        {\n+            // we have to have some sort of Pom object in order to satisfy the requirements for building the\n+            // originating Artifact below...\n+            pom = createDummyPom();\n+        }\n \n         Set artifacts = metadataSource.createArtifacts( dependencies, null, null );\n ",
                "deletions": 0
            },
            {
                "sha": "138dbd4129744b2903593b046a280f50126a2204",
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/Pom.java",
                "blob_url": "https://github.com/apache/maven-2/blob/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/Pom.java",
                "raw_url": "https://github.com/apache/maven-2/raw/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/Pom.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/Pom.java?ref=748de75a58d926146da3cee92276d6085817624c",
                "patch": "@@ -91,6 +91,11 @@ protected Pom getInstance()\n         }\n         return instance;\n     }\n+    \n+    public void setMavenProject( MavenProject mavenProject )\n+    {\n+        getInstance().mavenProject = mavenProject;\n+    }\n \n     public File getFile()\n     {",
                "deletions": 0
            },
            {
                "sha": "1365b7f53d9e5106e191f115e047a365ae09cb20",
                "filename": "maven-artifact-ant/src/main/resources/META-INF/plexus/components.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/resources/META-INF/plexus/components.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/748de75a58d926146da3cee92276d6085817624c/maven-artifact-ant/src/main/resources/META-INF/plexus/components.xml",
                "status": "modified",
                "changes": 22,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/resources/META-INF/plexus/components.xml?ref=748de75a58d926146da3cee92276d6085817624c",
                "patch": "@@ -229,7 +229,7 @@\n           <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>\n         </requirement>\n         <requirement>\n-          <role>org.apache.maven.profiless.activation.ProfileActivationCalculator</role>\n+          <role>org.apache.maven.profiles.activation.ProfileActivationCalculator</role>\n         </requirement>\n       </requirements>\n     </component>\n@@ -239,48 +239,48 @@\n      |\n      -->\n     <component>\n-      <role>org.apache.maven.profiless.activation.ProfileActivationCalculator</role>\n-      <implementation>org.apache.maven.profiless.activation.ProfileActivationCalculator</implementation>\n+      <role>org.apache.maven.profiles.activation.ProfileActivationCalculator</role>\n+      <implementation>org.apache.maven.profiles.activation.ProfileActivationCalculator</implementation>\n     </component>\n     <!--\n      |\n      |\n      |\n      -->\n     <component>\n-      <role>org.apache.maven.profiless.activation.ProfileActivator</role>\n+      <role>org.apache.maven.profiles.activation.ProfileActivator</role>\n       <role-hint>always-on</role-hint>\n-      <implementation>org.apache.maven.profiless.activation.AlwaysOnProfileActivator</implementation>\n+      <implementation>org.apache.maven.profiles.activation.AlwaysOnProfileActivator</implementation>\n     </component>\n     <!--\n      |\n      |\n      |\n      -->\n     <component>\n-      <role>org.apache.maven.profiless.activation.ProfileActivator</role>\n+      <role>org.apache.maven.profiles.activation.ProfileActivator</role>\n       <role-hint>jdk-prefix</role-hint>\n-      <implementation>org.apache.maven.profiless.activation.JdkPrefixProfileActivator</implementation>\n+      <implementation>org.apache.maven.profiles.activation.JdkPrefixProfileActivator</implementation>\n     </component>\n     <!--\n      |\n      |\n      |\n      -->\n     <component>\n-      <role>org.apache.maven.profiless.activation.ProfileActivator</role>\n+      <role>org.apache.maven.profiles.activation.ProfileActivator</role>\n       <role-hint>system-property</role-hint>\n-      <implementation>org.apache.maven.profiless.activation.SystemPropertyProfileActivator</implementation>\n+      <implementation>org.apache.maven.profiles.activation.SystemPropertyProfileActivator</implementation>\n     </component>\n     <!--\n      |\n      |\n      |\n      -->\n     <component>\n-      <role>org.apache.maven.profiless.activation.ProfileActivator</role>\n+      <role>org.apache.maven.profiles.activation.ProfileActivator</role>\n       <role-hint>explicit-listing</role-hint>\n-      <implementation>org.apache.maven.profiless.activation.ExplicitListingProfileActivator</implementation>\n+      <implementation>org.apache.maven.profiles.activation.ExplicitListingProfileActivator</implementation>\n     </component>\n     <!--\n      |",
                "deletions": 11
            }
        ]
    },
    {
        "repo": "maven-2",
        "message": "o Fixed NPE in LegacyArtifactDiscoverer when the resulting Artifact from the buildArtifact() method is null (was an errant debug statement)\no Removed requirement and attempt at copying wagon-http-lightweight when ./install.sh runs.\no Cleaned up the output from ./repoclean.sh to remove a couple debug lines\no Fixed components.xml to comply with the new component refactorings (simplified RepositoryCleaner using two new processing phases: DiscoveryPhase and RewritePhase, with NO common interface)\n\nWe should be ready to process mixed bags of m1 and m2 poms in the same source repo now!\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169330 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-2/commit/17c195e01d7d3e543024f98619edcda45605cf7f",
        "parent": "https://github.com/apache/maven-2/commit/637c0f815bcb9ba7c5232a517415c8f3e2e5ef04",
        "bug_id": "maven-2_59",
        "file": [
            {
                "sha": "9c19232c64537991a991168520f8a390e1126c74",
                "filename": "sandbox/repoclean/install.sh",
                "blob_url": "https://github.com/apache/maven-2/blob/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/install.sh",
                "raw_url": "https://github.com/apache/maven-2/raw/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/install.sh",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/sandbox/repoclean/install.sh?ref=17c195e01d7d3e543024f98619edcda45605cf7f",
                "patch": "@@ -65,8 +65,6 @@ ret=$?; if [ $ret != 0 ]; then exit $ret; fi\n \n     cp -f $2/org/apache/maven/wagon/wagon-file/1.0-alpha-2/wagon-file-1.0-alpha-2.jar $1/lib\n \n-    cp -f $2/org/apache/maven/wagon/wagon-http-lightweight/1.0-alpha-2/wagon-http-lightweight-1.0-alpha-2.jar $1/lib\n-\n     echo \"Copying startup script, and changing its permissions to '+x'...\"\n     echo \"\"\n     ",
                "deletions": 2
            },
            {
                "sha": "a004aefb0e72399adf07242cdffdb1a0884d1bcd",
                "filename": "sandbox/repoclean/src/main/bash/repoclean.sh",
                "blob_url": "https://github.com/apache/maven-2/blob/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/bash/repoclean.sh",
                "raw_url": "https://github.com/apache/maven-2/raw/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/bash/repoclean.sh",
                "status": "modified",
                "changes": 7,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/sandbox/repoclean/src/main/bash/repoclean.sh?ref=17c195e01d7d3e543024f98619edcda45605cf7f",
                "patch": "@@ -2,19 +2,14 @@\n \n mypath=`which $0`\n \n-echo \"mypath: $mypath\"\n-\n mydir=`pwd`\n \n if [ \"\" != \"$mypath\" ]; then\n \n-  echo \"Setting mydir based on mypath...\"\n   mydir=`dirname $mypath`\n \n fi\n \n-echo \"mydir: $mydir\"\n-\n CP=$mydir/lib/repoclean-1.0-SNAPSHOT.jar\n \n for lib in `ls -1 $mydir/lib | grep -v 'repoclean'`\n@@ -46,4 +41,4 @@ if [ -z \"$JAVA_HOME\" ]; then\n   JAVA_HOME=/usr/local/java\n fi\n \n-nice -n 19 $JAVA_HOME/bin/java -Xmx128M -Xms64M -Xincgc $JAVA_OPTS -classpath ${CP} org.apache.maven.tools.repoclean.Main $* | tee repoclean-log.txt\n+nice -n 19 $JAVA_HOME/bin/java -Xmx128M -Xms64M -Xincgc $JAVA_OPTS -classpath ${CP} org.apache.maven.tools.repoclean.Main $*",
                "deletions": 6
            },
            {
                "sha": "cd0eb83f82e0f4687f288311eb6d30d33660ea56",
                "filename": "sandbox/repoclean/src/main/java/org/apache/maven/tools/repoclean/discover/LegacyArtifactDiscoverer.java",
                "blob_url": "https://github.com/apache/maven-2/blob/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/java/org/apache/maven/tools/repoclean/discover/LegacyArtifactDiscoverer.java",
                "raw_url": "https://github.com/apache/maven-2/raw/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/java/org/apache/maven/tools/repoclean/discover/LegacyArtifactDiscoverer.java",
                "status": "modified",
                "changes": 16,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/sandbox/repoclean/src/main/java/org/apache/maven/tools/repoclean/discover/LegacyArtifactDiscoverer.java?ref=17c195e01d7d3e543024f98619edcda45605cf7f",
                "patch": "@@ -18,6 +18,7 @@\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.tools.repoclean.report.PathLister;\n import org.apache.maven.tools.repoclean.report.Reporter;\n+import org.codehaus.plexus.util.StringUtils;\n \n import java.io.File;\n import java.util.ArrayList;\n@@ -293,18 +294,23 @@ else if ( lastAvceToken.endsWith( \".zip\" ) )\n             }\n             else\n             {\n-                result = artifactFactory.createArtifact( groupId, artifactId, version, Artifact.SCOPE_RUNTIME, type );\n+                if ( StringUtils.isNotEmpty( groupId ) && StringUtils.isNotEmpty( artifactId )\n+                    && StringUtils.isNotEmpty( version ) && StringUtils.isNotEmpty( type ) )\n+                {\n+                    result = artifactFactory\n+                        .createArtifact( groupId, artifactId, version, Artifact.SCOPE_RUNTIME, type );\n+                }\n             }\n \n-            getLogger().debug(\n-                               \"Resulting artifact is: \" + result.getId() + \" and has classifier of: \"\n-                                   + result.getClassifier() + \"\\n\\n\" );\n+//            getLogger().debug(\n+//                               \"Resulting artifact is: \" + result + \" and has classifier of: \"\n+//                                   + result.getClassifier() + \"\\n\\n\" );\n \n             return result;\n         }\n         catch ( RuntimeException e )\n         {\n-            getLogger().error( \"While parsing artifact path: \\'\" + path + \"\\'...\\n\\n\", e );\n+            getLogger().error( \"While parsing artifact path: \\'\" + path + \"\\'...\", e );\n \n             throw e;\n         }",
                "deletions": 5
            },
            {
                "sha": "027592348c624d36f567589c1775100849156123",
                "filename": "sandbox/repoclean/src/main/resources/META-INF/plexus/components.xml",
                "blob_url": "https://github.com/apache/maven-2/blob/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/resources/META-INF/plexus/components.xml",
                "raw_url": "https://github.com/apache/maven-2/raw/17c195e01d7d3e543024f98619edcda45605cf7f/sandbox/repoclean/src/main/resources/META-INF/plexus/components.xml",
                "status": "modified",
                "changes": 38,
                "additions": 32,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/sandbox/repoclean/src/main/resources/META-INF/plexus/components.xml?ref=17c195e01d7d3e543024f98619edcda45605cf7f",
                "patch": "@@ -5,18 +5,44 @@\n       <implementation>org.apache.maven.tools.repoclean.RepositoryCleaner</implementation>\n       <requirements>\n         <requirement>\n-          <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>\n-          <role-hint>alpha-bridging</role-hint>\n-          <field-name>bridgingLayout</field-name>\n+          <role>org.apache.maven.tools.repoclean.index.ArtifactIndexer</role>\n         </requirement>\n         <requirement>\n-          <role>org.apache.maven.tools.repoclean.digest.DigestVerifier</role>\n+          <role>org.codehaus.plexus.mailsender.MailSender</role>\n         </requirement>\n         <requirement>\n-          <role>org.apache.maven.tools.repoclean.index.ArtifactIndexer</role>\n+          <role>org.apache.maven.tools.repoclean.phase.DiscoveryPhase</role>\n         </requirement>\n         <requirement>\n-          <role>org.codehaus.plexus.mailsender.MailSender</role>\n+          <role>org.apache.maven.tools.repoclean.phase.RewritePhase</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+    <!--\n+     |\n+     |\n+     |\n+     -->\n+    <component>\n+      <role>org.apache.maven.tools.repoclean.phase.DiscoveryPhase</role>\n+      <implementation>org.apache.maven.tools.repoclean.phase.DiscoveryPhase</implementation>\n+    </component>\n+    <!--\n+     |\n+     |\n+     |\n+     -->\n+    <component>\n+      <role>org.apache.maven.tools.repoclean.phase.RewritePhase</role>\n+      <implementation>org.apache.maven.tools.repoclean.phase.RewritePhase</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>\n+          <role-hint>alpha-bridging</role-hint>\n+          <field-name>bridgingLayout</field-name>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.tools.repoclean.digest.DigestVerifier</role>\n         </requirement>\n       </requirements>\n     </component>",
                "deletions": 6
            }
        ]
    }
]